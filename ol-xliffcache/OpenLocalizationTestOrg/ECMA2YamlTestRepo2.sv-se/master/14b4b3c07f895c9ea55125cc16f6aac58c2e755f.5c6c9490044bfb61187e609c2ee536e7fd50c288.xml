{"nodes":[{"pos":[503,703],"content":"Implements the `Touch` task. Use the `Touch` element in your project file to create and execute this task. For usage and parameter information, see [Touch Task](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the <ph id=\"ph1\">`Touch`</ph> task.","pos":[0,28],"source":"Implements the `Touch` task."},{"content":"Use the <ph id=\"ph1\">`Touch`</ph> element in your project file to create and execute this task.","pos":[29,106],"source":" Use the `Touch` element in your project file to create and execute this task."},{"content":"For usage and parameter information, see <bpt id=\"p1\">[</bpt>Touch Task<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[107,200],"source":" For usage and parameter information, see [Touch Task](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[1655,1744],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.Build.Tasks.Touch\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.Build.Tasks.Touch\"></xref> class."},{"pos":[2233,2331],"content":"Gets or sets a Boolean value that specifies whether to create any files that do not already exist.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that specifies whether to create any files that do not already exist.","pos":[0,98]}]},{"pos":[2452,2652],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <ph id=\"ph1\">`Touch`</ph> task creates any files that do not already exist; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the `Touch` task creates any files that do not already exist; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3068,3094],"content":"Executes the <ph id=\"ph1\">`Touch`</ph> task.","needQuote":true,"needEscape":true,"source":"Executes the `Touch` task."},{"pos":[3228,3392],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if task execution succeeded; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if task execution succeeded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3789,3821],"content":"Gets or sets the files to touch.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the files to touch.","pos":[0,32]}]},{"pos":[3991,4010],"content":"The files to touch.","needQuote":true,"needEscape":true,"nodes":[{"content":"The files to touch.","pos":[0,19]}]},{"pos":[4430,4536],"content":"Gets or sets a Boolean value that specifies whether to force a file touch even if the files are read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that specifies whether to force a file touch even if the files are read-only.","pos":[0,106]}]},{"pos":[4655,4863],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <ph id=\"ph1\">`Touch`</ph> task forces a file touch even if the files are read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the `Touch` task forces a file touch even if the files are read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5258,5398],"content":"Gets or sets a time other than the current time. The format must be a format that is acceptable to the <xref:System.DateTime.Parse*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a time other than the current time. The format must be a format that is acceptable to the <xref:System.DateTime.Parse*> method.","pos":[0,140],"nodes":[{"content":"Gets or sets a time other than the current time.","pos":[0,48]},{"content":"The format must be a format that is acceptable to the &lt;xref:System.DateTime.Parse*&gt; method.","pos":[49,140],"source":" The format must be a format that is acceptable to the <xref:System.DateTime.Parse*> method."}]}]},{"pos":[5512,5547],"content":"A time other than the current time.","needQuote":true,"needEscape":true,"nodes":[{"content":"A time other than the current time.","pos":[0,35]}]},{"pos":[5976,6030],"content":"Gets or sets the items that were successfully touched.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the items that were successfully touched.","pos":[0,54]}]},{"pos":[6207,6248],"content":"The items that were successfully touched.","needQuote":true,"needEscape":true,"nodes":[{"content":"The items that were successfully touched.","pos":[0,41]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Tasks.Touch\n  id: Touch\n  children:\n  - Microsoft.Build.Tasks.Touch.#ctor\n  - Microsoft.Build.Tasks.Touch.AlwaysCreate\n  - Microsoft.Build.Tasks.Touch.Execute\n  - Microsoft.Build.Tasks.Touch.Files\n  - Microsoft.Build.Tasks.Touch.ForceTouch\n  - Microsoft.Build.Tasks.Touch.Time\n  - Microsoft.Build.Tasks.Touch.TouchedFiles\n  langs:\n  - csharp\n  name: Touch\n  nameWithType: Touch\n  fullName: Microsoft.Build.Tasks.Touch\n  type: Class\n  summary: Implements the `Touch` task. Use the `Touch` element in your project file to create and execute this task. For usage and parameter information, see [Touch Task](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: 'public class Touch : Microsoft.Build.Tasks.TaskExtension'\n  inheritance:\n  - System.Object\n  - Microsoft.Build.Utilities.Task\n  - Microsoft.Build.Tasks.TaskExtension\n  implements: []\n  inheritedMembers:\n  - Microsoft.Build.Tasks.TaskExtension.Log\n  - Microsoft.Build.Utilities.Task.BuildEngine\n  - Microsoft.Build.Utilities.Task.BuildEngine2\n  - Microsoft.Build.Utilities.Task.BuildEngine3\n  - Microsoft.Build.Utilities.Task.BuildEngine4\n  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix\n  - Microsoft.Build.Utilities.Task.HostObject\n  - Microsoft.Build.Utilities.Task.TaskResources\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Touch.#ctor\n  id: '#ctor'\n  parent: Microsoft.Build.Tasks.Touch\n  langs:\n  - csharp\n  name: Touch()\n  nameWithType: Touch.Touch()\n  fullName: Microsoft.Build.Tasks.Touch.Touch()\n  type: Constructor\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Initializes a new instance of the <xref href=\"Microsoft.Build.Tasks.Touch\"></xref> class.\n  syntax:\n    content: public Touch ();\n    parameters: []\n  overload: Microsoft.Build.Tasks.Touch.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Touch.AlwaysCreate\n  id: AlwaysCreate\n  parent: Microsoft.Build.Tasks.Touch\n  langs:\n  - csharp\n  name: AlwaysCreate\n  nameWithType: Touch.AlwaysCreate\n  fullName: Microsoft.Build.Tasks.Touch.AlwaysCreate\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a Boolean value that specifies whether to create any files that do not already exist.\n  syntax:\n    content: public bool AlwaysCreate { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the `Touch` task creates any files that do not already exist; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.Touch.AlwaysCreate*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Touch.Execute\n  id: Execute\n  parent: Microsoft.Build.Tasks.Touch\n  langs:\n  - csharp\n  name: Execute()\n  nameWithType: Touch.Execute()\n  fullName: Microsoft.Build.Tasks.Touch.Execute()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Executes the `Touch` task.\n  syntax:\n    content: public override bool Execute ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if task execution succeeded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.Touch.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Touch.Files\n  id: Files\n  parent: Microsoft.Build.Tasks.Touch\n  langs:\n  - csharp\n  name: Files\n  nameWithType: Touch.Files\n  fullName: Microsoft.Build.Tasks.Touch.Files\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the files to touch.\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem[] Files { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: The files to touch.\n  overload: Microsoft.Build.Tasks.Touch.Files*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Touch.ForceTouch\n  id: ForceTouch\n  parent: Microsoft.Build.Tasks.Touch\n  langs:\n  - csharp\n  name: ForceTouch\n  nameWithType: Touch.ForceTouch\n  fullName: Microsoft.Build.Tasks.Touch.ForceTouch\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a Boolean value that specifies whether to force a file touch even if the files are read-only.\n  syntax:\n    content: public bool ForceTouch { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the `Touch` task forces a file touch even if the files are read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.Touch.ForceTouch*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Touch.Time\n  id: Time\n  parent: Microsoft.Build.Tasks.Touch\n  langs:\n  - csharp\n  name: Time\n  nameWithType: Touch.Time\n  fullName: Microsoft.Build.Tasks.Touch.Time\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a time other than the current time. The format must be a format that is acceptable to the <xref:System.DateTime.Parse*> method.\n  syntax:\n    content: public string Time { get; set; }\n    return:\n      type: System.String\n      description: A time other than the current time.\n  overload: Microsoft.Build.Tasks.Touch.Time*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Touch.TouchedFiles\n  id: TouchedFiles\n  parent: Microsoft.Build.Tasks.Touch\n  langs:\n  - csharp\n  name: TouchedFiles\n  nameWithType: Touch.TouchedFiles\n  fullName: Microsoft.Build.Tasks.Touch.TouchedFiles\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the items that were successfully touched.\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem[] TouchedFiles { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: The items that were successfully touched.\n  overload: Microsoft.Build.Tasks.Touch.TouchedFiles*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.Build.Tasks.TaskExtension\n  isExternal: false\n  name: Microsoft.Build.Tasks.TaskExtension\n- uid: Microsoft.Build.Tasks.Touch.#ctor\n  parent: Microsoft.Build.Tasks.Touch\n  isExternal: false\n  name: Touch()\n  nameWithType: Touch.Touch()\n  fullName: Microsoft.Build.Tasks.Touch.Touch()\n- uid: Microsoft.Build.Tasks.Touch.AlwaysCreate\n  parent: Microsoft.Build.Tasks.Touch\n  isExternal: false\n  name: AlwaysCreate\n  nameWithType: Touch.AlwaysCreate\n  fullName: Microsoft.Build.Tasks.Touch.AlwaysCreate\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Build.Tasks.Touch.Execute\n  parent: Microsoft.Build.Tasks.Touch\n  isExternal: false\n  name: Execute()\n  nameWithType: Touch.Execute()\n  fullName: Microsoft.Build.Tasks.Touch.Execute()\n- uid: Microsoft.Build.Tasks.Touch.Files\n  parent: Microsoft.Build.Tasks.Touch\n  isExternal: false\n  name: Files\n  nameWithType: Touch.Files\n  fullName: Microsoft.Build.Tasks.Touch.Files\n- uid: Microsoft.Build.Framework.ITaskItem[]\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITaskItem\n  nameWithType: ITaskItem\n  fullName: Microsoft.Build.Framework.ITaskItem[]\n  spec.csharp:\n  - uid: Microsoft.Build.Framework.ITaskItem\n    name: ITaskItem\n    nameWithType: ITaskItem\n    fullName: ITaskItem[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.Build.Tasks.Touch.ForceTouch\n  parent: Microsoft.Build.Tasks.Touch\n  isExternal: false\n  name: ForceTouch\n  nameWithType: Touch.ForceTouch\n  fullName: Microsoft.Build.Tasks.Touch.ForceTouch\n- uid: Microsoft.Build.Tasks.Touch.Time\n  parent: Microsoft.Build.Tasks.Touch\n  isExternal: false\n  name: Time\n  nameWithType: Touch.Time\n  fullName: Microsoft.Build.Tasks.Touch.Time\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Tasks.Touch.TouchedFiles\n  parent: Microsoft.Build.Tasks.Touch\n  isExternal: false\n  name: TouchedFiles\n  nameWithType: Touch.TouchedFiles\n  fullName: Microsoft.Build.Tasks.Touch.TouchedFiles\n- uid: Microsoft.Build.Tasks.Touch.#ctor*\n  parent: Microsoft.Build.Tasks.Touch\n  isExternal: false\n  name: Touch\n  nameWithType: Touch.Touch\n- uid: Microsoft.Build.Tasks.Touch.AlwaysCreate*\n  parent: Microsoft.Build.Tasks.Touch\n  isExternal: false\n  name: AlwaysCreate\n  nameWithType: Touch.AlwaysCreate\n- uid: Microsoft.Build.Tasks.Touch.Execute*\n  parent: Microsoft.Build.Tasks.Touch\n  isExternal: false\n  name: Execute\n  nameWithType: Touch.Execute\n- uid: Microsoft.Build.Tasks.Touch.Files*\n  parent: Microsoft.Build.Tasks.Touch\n  isExternal: false\n  name: Files\n  nameWithType: Touch.Files\n- uid: Microsoft.Build.Tasks.Touch.ForceTouch*\n  parent: Microsoft.Build.Tasks.Touch\n  isExternal: false\n  name: ForceTouch\n  nameWithType: Touch.ForceTouch\n- uid: Microsoft.Build.Tasks.Touch.Time*\n  parent: Microsoft.Build.Tasks.Touch\n  isExternal: false\n  name: Time\n  nameWithType: Touch.Time\n- uid: Microsoft.Build.Tasks.Touch.TouchedFiles*\n  parent: Microsoft.Build.Tasks.Touch\n  isExternal: false\n  name: TouchedFiles\n  nameWithType: Touch.TouchedFiles\n"}