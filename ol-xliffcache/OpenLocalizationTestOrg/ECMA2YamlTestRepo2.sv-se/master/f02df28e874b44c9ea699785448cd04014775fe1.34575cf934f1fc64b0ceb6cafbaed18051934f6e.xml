{"nodes":[{"pos":[4167,4199],"content":"Represents a memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a memory-mapped file.","pos":[0,32]}]},{"pos":[4212,5515],"content":"A memory-mapped file maps the contents of a file to an application’s logical address space. Memory-mapped files enable programmers to work with extremely large files because memory can be managed concurrently, and they allow complete, random access to a file without the need for seeking. Memory-mapped files can also be shared across multiple processes.       The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> methods create a memory-mapped file from a specified path or a <xref:System.IO.FileStream> of an existing file on disk. Changes are automatically propagated to disk when the file is unmapped.       The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> methods create a memory-mapped file that is not mapped to an existing file on disk; and are suitable for creating shared memory for interprocess communication (IPC).       A memory-mapped file is associated with a name.       You can create multiple views of the memory-mapped file, including views of parts of the file. You can map the same part of a file to more than one address to create concurrent memory. For two views to remain concurrent, they have to be created from the same memory-mapped file. Creating two file mappings of the same file with two views does not provide concurrency.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A memory-mapped file maps the contents of a file to an application’s logical address space. Memory-mapped files enable programmers to work with extremely large files because memory can be managed concurrently, and they allow complete, random access to a file without the need for seeking. Memory-mapped files can also be shared across multiple processes.       The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> methods create a memory-mapped file from a specified path or a <xref:System.IO.FileStream> of an existing file on disk. Changes are automatically propagated to disk when the file is unmapped.       The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> methods create a memory-mapped file that is not mapped to an existing file on disk; and are suitable for creating shared memory for interprocess communication (IPC).       A memory-mapped file is associated with a name.       You can create multiple views of the memory-mapped file, including views of parts of the file. You can map the same part of a file to more than one address to create concurrent memory. For two views to remain concurrent, they have to be created from the same memory-mapped file. Creating two file mappings of the same file with two views does not provide concurrency.","pos":[0,1295],"nodes":[{"content":"A memory-mapped file maps the contents of a file to an application’s logical address space.","pos":[0,91]},{"content":"Memory-mapped files enable programmers to work with extremely large files because memory can be managed concurrently, and they allow complete, random access to a file without the need for seeking.","pos":[92,288]},{"content":"Memory-mapped files can also be shared across multiple processes.","pos":[289,354]},{"content":"The &lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A&gt; methods create a memory-mapped file from a specified path or a &lt;xref:System.IO.FileStream&gt; of an existing file on disk.","pos":[361,554],"source":"       The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> methods create a memory-mapped file from a specified path or a <xref:System.IO.FileStream> of an existing file on disk."},{"content":"Changes are automatically propagated to disk when the file is unmapped.","pos":[555,626]},{"content":"The &lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A&gt; methods create a memory-mapped file that is not mapped to an existing file on disk; and are suitable for creating shared memory for interprocess communication (IPC).","pos":[633,867],"source":"       The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> methods create a memory-mapped file that is not mapped to an existing file on disk; and are suitable for creating shared memory for interprocess communication (IPC)."},{"content":"A memory-mapped file is associated with a name.","pos":[874,921]},{"content":"You can create multiple views of the memory-mapped file, including views of parts of the file.","pos":[928,1022]},{"content":"You can map the same part of a file to more than one address to create concurrent memory.","pos":[1023,1112]},{"content":"For two views to remain concurrent, they have to be created from the same memory-mapped file.","pos":[1113,1206]},{"content":"Creating two file mappings of the same file with two views does not provide concurrency.","pos":[1207,1295]}]}]},{"pos":[6556,6605],"content":"Creates a memory-mapped file from a file on disk.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a memory-mapped file from a file on disk.","pos":[0,49]}]},{"pos":[7248,7272],"content":"The path to file to map.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to file to map.","pos":[0,24]}]},{"pos":[7361,7382],"content":"A memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file.","pos":[0,21]}]},{"pos":[7565,7842],"content":"<code>path</code> is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; method.       -or-       <code>path</code> refers to an invalid device.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <ph id=\"ph2\">&amp;lt;</ph>xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph> method.","pos":[0,209],"source":"<code>path</code> is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; method."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> refers to an invalid device.","pos":[216,273],"source":"       -or-       <code>path</code> refers to an invalid device."}]},{"pos":[7946,8028],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8117,8139],"content":"An I/O error occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"An I/O error occurred.","pos":[0,22]}]},{"pos":[8246,8436],"content":"<code>path</code> exceeds the maximum length defined by the operating system. In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the maximum length defined by the operating system.","pos":[0,77],"source":"<code>path</code> exceeds the maximum length defined by the operating system."},{"content":"In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.","pos":[78,190]}]},{"pos":[8549,8612],"content":"The caller does not have the required permissions for the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The caller does not have the required permissions for the file.","pos":[0,63]}]},{"pos":[9158,9242],"content":"Creates a memory-mapped file that has the specified access mode from a file on disk.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a memory-mapped file that has the specified access mode from a file on disk.","pos":[0,84]}]},{"pos":[9254,9439],"content":"The `mode` parameter pertains to the source file on disk. You can use only the <xref:System.IO.FileMode> enumeration value to create the memory-mapped file from the source file on disk.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`mode`</ph> parameter pertains to the source file on disk.","pos":[0,57],"source":"The `mode` parameter pertains to the source file on disk."},{"content":"You can use only the &lt;xref:System.IO.FileMode&gt; enumeration value to create the memory-mapped file from the source file on disk.","pos":[58,185],"source":" You can use only the <xref:System.IO.FileMode> enumeration value to create the memory-mapped file from the source file on disk."}]},{"pos":[9653,9677],"content":"The path to file to map.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to file to map.","pos":[0,24]}]},{"pos":[9743,9804],"content":"Access mode; must be <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Access mode; must be <xref href=\"System.IO.FileMode\"></xref>."},{"pos":[9893,9949],"content":"A memory-mapped file that has the specified access mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file that has the specified access mode.","pos":[0,56]}]},{"pos":[10132,10494],"content":"<code>path</code> is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; method.       -or-       <code>path</code> refers to an invalid device.       -or-       <code>mode</code> is <xref href=\"System.IO.FileMode\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <ph id=\"ph2\">&amp;lt;</ph>xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph> method.","pos":[0,209],"source":"<code>path</code> is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; method."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> refers to an invalid device.","pos":[216,273],"source":"       -or-       <code>path</code> refers to an invalid device."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[280,352],"source":"       -or-       <code>mode</code> is <xref href=\"System.IO.FileMode\"></xref>."}]},{"pos":[10598,10680],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10770,11087],"content":"<code>mode</code> is <xref href=\"System.IO.FileMode\"></xref>, <xref href=\"System.IO.FileMode\"></xref>, or <xref href=\"System.IO.FileMode\"></xref>.       -or-       <code>mode</code> is <xref href=\"System.IO.FileMode\"></xref> and the file on disk does not exist.       -or-       An I/O error occurred.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, or <bpt id=\"p3\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,146],"source":"<code>mode</code> is <xref href=\"System.IO.FileMode\"></xref>, <xref href=\"System.IO.FileMode\"></xref>, or <xref href=\"System.IO.FileMode\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the file on disk does not exist.","pos":[153,261],"source":"       -or-       <code>mode</code> is <xref href=\"System.IO.FileMode\"></xref> and the file on disk does not exist."},{"content":"-or-       An I/O error occurred.","pos":[268,301]}]},{"pos":[11195,11385],"content":"<code>path</code> exceeds the maximum length defined by the operating system. In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the maximum length defined by the operating system.","pos":[0,77],"source":"<code>path</code> exceeds the maximum length defined by the operating system."},{"content":"In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.","pos":[78,190]}]},{"pos":[11498,11561],"content":"The caller does not have the required permissions for the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The caller does not have the required permissions for the file.","pos":[0,63]}]},{"pos":[12156,12249],"content":"Creates a memory-mapped file that has the specified access mode and name from a file on disk.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a memory-mapped file that has the specified access mode and name from a file on disk.","pos":[0,93]}]},{"pos":[12261,12446],"content":"The `mode` parameter pertains to the source file on disk. You can use only the <xref:System.IO.FileMode> enumeration value to create the memory-mapped file from the source file on disk.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`mode`</ph> parameter pertains to the source file on disk.","pos":[0,57],"source":"The `mode` parameter pertains to the source file on disk."},{"content":"You can use only the &lt;xref:System.IO.FileMode&gt; enumeration value to create the memory-mapped file from the source file on disk.","pos":[58,185],"source":" You can use only the <xref:System.IO.FileMode> enumeration value to create the memory-mapped file from the source file on disk."}]},{"pos":[12676,12704],"content":"The path to the file to map.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to the file to map.","pos":[0,28]}]},{"pos":[12770,12831],"content":"Access mode; must be <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Access mode; must be <xref href=\"System.IO.FileMode\"></xref>."},{"pos":[12895,12938],"content":"A name to assign to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name to assign to the memory-mapped file.","pos":[0,43]}]},{"pos":[13027,13092],"content":"A memory-mapped file that has the specified name and access mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file that has the specified name and access mode.","pos":[0,65]}]},{"pos":[13275,13699],"content":"<code>path</code> is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; method.       -or-       <code>path</code> refers to an invalid device.       -or-       <code>mapName</code> is an empty string.       -or-       <code>mode</code> is <xref href=\"System.IO.FileMode\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <ph id=\"ph2\">&amp;lt;</ph>xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph> method.","pos":[0,209],"source":"<code>path</code> is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; method."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> refers to an invalid device.","pos":[216,273],"source":"       -or-       <code>path</code> refers to an invalid device."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.","pos":[280,331],"source":"       -or-       <code>mapName</code> is an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[338,410],"source":"       -or-       <code>mode</code> is <xref href=\"System.IO.FileMode\"></xref>."}]},{"pos":[13803,13909],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>path</code> or <code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13999,14316],"content":"<code>mode</code> is <xref href=\"System.IO.FileMode\"></xref>, <xref href=\"System.IO.FileMode\"></xref>, or <xref href=\"System.IO.FileMode\"></xref>.       -or-       <code>mode</code> is <xref href=\"System.IO.FileMode\"></xref> and the file on disk does not exist.       -or-       An I/O error occurred.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, or <bpt id=\"p3\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,146],"source":"<code>mode</code> is <xref href=\"System.IO.FileMode\"></xref>, <xref href=\"System.IO.FileMode\"></xref>, or <xref href=\"System.IO.FileMode\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the file on disk does not exist.","pos":[153,261],"source":"       -or-       <code>mode</code> is <xref href=\"System.IO.FileMode\"></xref> and the file on disk does not exist."},{"content":"-or-       An I/O error occurred.","pos":[268,301]}]},{"pos":[14424,14614],"content":"<code>path</code> exceeds the maximum length defined by the operating system. In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the maximum length defined by the operating system.","pos":[0,77],"source":"<code>path</code> exceeds the maximum length defined by the operating system."},{"content":"In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.","pos":[78,190]}]},{"pos":[14727,14790],"content":"The caller does not have the required permissions for the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The caller does not have the required permissions for the file.","pos":[0,63]}]},{"pos":[15429,15533],"content":"Creates a memory-mapped file that has the specified access mode, name, and capacity from a file on disk.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a memory-mapped file that has the specified access mode, name, and capacity from a file on disk.","pos":[0,104]}]},{"pos":[15546,15931],"content":"The `mode` parameter pertains to the source file on disk.       If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file. To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`mode`</ph> parameter pertains to the source file on disk.","pos":[0,57],"source":"The `mode` parameter pertains to the source file on disk."},{"content":"If <ph id=\"ph1\">`capacity`</ph> is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.","pos":[64,238],"source":"       If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file."},{"content":"To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set <ph id=\"ph1\">`capacity`</ph> to the size of the file on disk.","pos":[239,383],"source":" To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk."}]},{"pos":[16177,16205],"content":"The path to the file to map.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to the file to map.","pos":[0,28]}]},{"pos":[16271,16408],"content":"Access mode; can be any of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values except <bpt id=\"p2\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Access mode; can be any of the <xref href=\"System.IO.FileMode\"></xref> enumeration values except <xref href=\"System.IO.FileMode\"></xref>."},{"pos":[16472,16515],"content":"A name to assign to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name to assign to the memory-mapped file.","pos":[0,43]}]},{"pos":[16579,16708],"content":"The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of the file on disk.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of the file on disk.","pos":[0,129],"nodes":[{"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","pos":[0,66]},{"content":"Specify 0 to set the capacity to the size of the file on disk.","pos":[67,129]}]}]},{"pos":[16797,16857],"content":"A memory-mapped file that has the specified characteristics.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file that has the specified characteristics.","pos":[0,60]}]},{"pos":[17040,17464],"content":"<code>path</code> is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; method.       -or-       <code>path</code> refers to an invalid device.       -or-       <code>mapName</code> is an empty string.       -or-       <code>mode</code> is <xref href=\"System.IO.FileMode\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <ph id=\"ph2\">&amp;lt;</ph>xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph> method.","pos":[0,209],"source":"<code>path</code> is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; method."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> refers to an invalid device.","pos":[216,273],"source":"       -or-       <code>path</code> refers to an invalid device."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.","pos":[280,331],"source":"       -or-       <code>mapName</code> is an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[338,410],"source":"       -or-       <code>mode</code> is <xref href=\"System.IO.FileMode\"></xref>."}]},{"pos":[17568,17674],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>path</code> or <code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[17790,18113],"content":"<code>capacity</code> is greater than the size of the logical address space.       -or-       <code>capacity</code> is less than zero.       -or-       <code>capacity</code> is less than the file size (but not zero).       -or-       <code>capacity</code> is zero, and the size of the file on disk is also zero.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.","pos":[0,76],"source":"<code>capacity</code> is greater than the size of the logical address space."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.","pos":[83,134],"source":"       -or-       <code>capacity</code> is less than zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than the file size (but not zero).","pos":[141,216],"source":"       -or-       <code>capacity</code> is less than the file size (but not zero)."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is zero, and the size of the file on disk is also zero.","pos":[223,311],"source":"       -or-       <code>capacity</code> is zero, and the size of the file on disk is also zero."}]},{"pos":[18203,18225],"content":"An I/O error occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"An I/O error occurred.","pos":[0,22]}]},{"pos":[18332,18522],"content":"<code>path</code> exceeds the maximum length defined by the operating system. In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the maximum length defined by the operating system.","pos":[0,77],"source":"<code>path</code> exceeds the maximum length defined by the operating system."},{"content":"In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.","pos":[78,190]}]},{"pos":[18635,18698],"content":"The caller does not have the required permissions for the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The caller does not have the required permissions for the file.","pos":[0,63]}]},{"pos":[19508,19625],"content":"Creates a memory-mapped file that has the specified access mode, name, capacity, and access type from a file on disk.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a memory-mapped file that has the specified access mode, name, capacity, and access type from a file on disk.","pos":[0,117]}]},{"pos":[19638,20023],"content":"The `mode` parameter pertains to the source file on disk.       If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file. To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`mode`</ph> parameter pertains to the source file on disk.","pos":[0,57],"source":"The `mode` parameter pertains to the source file on disk."},{"content":"If <ph id=\"ph1\">`capacity`</ph> is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.","pos":[64,238],"source":"       If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file."},{"content":"To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set <ph id=\"ph1\">`capacity`</ph> to the size of the file on disk.","pos":[239,383],"source":" To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk."}]},{"pos":[20328,20356],"content":"The path to the file to map.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to the file to map.","pos":[0,28]}]},{"pos":[20422,20559],"content":"Access mode; can be any of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values except <bpt id=\"p2\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Access mode; can be any of the <xref href=\"System.IO.FileMode\"></xref> enumeration values except <xref href=\"System.IO.FileMode\"></xref>."},{"pos":[20623,20666],"content":"A name to assign to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name to assign to the memory-mapped file.","pos":[0,43]}]},{"pos":[20730,20859],"content":"The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of the file on disk.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of the file on disk.","pos":[0,129],"nodes":[{"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","pos":[0,66]},{"content":"Specify 0 to set the capacity to the size of the file on disk.","pos":[67,129]}]}]},{"pos":[20959,21057],"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file.","pos":[0,98]}]},{"pos":[21146,21206],"content":"A memory-mapped file that has the specified characteristics.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file that has the specified characteristics.","pos":[0,60]}]},{"pos":[21389,21857],"content":"<code>mapName</code> is an empty string.       -or-       <code>access</code> is not an allowed value.       -or-       <code>path</code> specifies an empty file.       -or-       <code>access</code> is specified as <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> and capacity is greater than the size of the file indicated by <code>path</code>.       -or-       <code>mode</code> is <xref href=\"System.IO.FileMode\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.","pos":[0,40],"source":"<code>mapName</code> is an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is not an allowed value.","pos":[47,102],"source":"       -or-       <code>access</code> is not an allowed value."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specifies an empty file.","pos":[109,162],"source":"       -or-       <code>path</code> specifies an empty file."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is specified as <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and capacity is greater than the size of the file indicated by <ph id=\"ph2\">&lt;code&gt;path&lt;/code&gt;</ph>.","pos":[169,369],"source":"       -or-       <code>access</code> is specified as <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> and capacity is greater than the size of the file indicated by <code>path</code>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[376,448],"source":"       -or-       <code>mode</code> is <xref href=\"System.IO.FileMode\"></xref>."}]},{"pos":[21961,22067],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>path</code> or <code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[22183,22757],"content":"<code>capacity</code> is greater than the size of the logical address space.       -or-       <code>capacity</code> is less than zero.       -or-       <code>capacity</code> is less than the file size (but not zero).       -or-       <code>capacity</code> is zero, and the size of the file on disk is also zero.       -or-       <code>access</code> is not a defined <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> value.       -or-       The size of the file indicated by <code>path</code> is greater than <code>capacity</code>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.","pos":[0,76],"source":"<code>capacity</code> is greater than the size of the logical address space."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.","pos":[83,134],"source":"       -or-       <code>capacity</code> is less than zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than the file size (but not zero).","pos":[141,216],"source":"       -or-       <code>capacity</code> is less than the file size (but not zero)."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is zero, and the size of the file on disk is also zero.","pos":[223,311],"source":"       -or-       <code>capacity</code> is zero, and the size of the file on disk is also zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is not a defined <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","pos":[318,444],"source":"       -or-       <code>access</code> is not a defined <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> value."},{"content":"-or-       The size of the file indicated by <ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;code&gt;capacity&lt;/code&gt;</ph>.","pos":[451,552],"source":"       -or-       The size of the file indicated by <code>path</code> is greater than <code>capacity</code>."}]},{"pos":[22848,22883],"content":"-or-       An I/O error occurred.","needQuote":false,"needEscape":true,"nodes":[{"content":"-or-       An I/O error occurred.","pos":[0,33]}]},{"pos":[22991,23181],"content":"<code>path</code> exceeds the maximum length defined by the operating system. In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the maximum length defined by the operating system.","pos":[0,77],"source":"<code>path</code> exceeds the maximum length defined by the operating system."},{"content":"In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.","pos":[78,190]}]},{"pos":[23294,23357],"content":"The caller does not have the required permissions for the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The caller does not have the required permissions for the file.","pos":[0,63]}]},{"pos":[24307,24425],"content":"Creates a memory-mapped file from an existing file with the specified access mode, name, inheritability, and capacity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a memory-mapped file from an existing file with the specified access mode, name, inheritability, and capacity.","pos":[0,118]}]},{"pos":[24800,24837],"content":"The file stream of the existing file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file stream of the existing file.","pos":[0,37]}]},{"pos":[24901,24944],"content":"A name to assign to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name to assign to the memory-mapped file.","pos":[0,43]}]},{"pos":[25008,25133],"content":"The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of `filestream`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","pos":[0,66]},{"content":"Specify 0 to set the capacity to the size of <ph id=\"ph1\">`filestream`</ph>.","pos":[67,125],"source":" Specify 0 to set the capacity to the size of `filestream`."}]},{"pos":[25234,25446],"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file.       This parameter can’t be set to <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file.","pos":[0,98]},{"content":"This parameter can’t be set to <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[105,208],"source":"       This parameter can’t be set to <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>."}]},{"pos":[25535,25713],"content":"One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.","pos":[0,178],"nodes":[{"content":"One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.","pos":[0,124]},{"content":"The default is &lt;xref:System.IO.HandleInheritability&gt;.","pos":[125,178],"source":" The default is <xref:System.IO.HandleInheritability>."}]}]},{"pos":[25780,25930],"content":"A value that indicates whether to close the source file stream when the <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is disposed.","needQuote":true,"needEscape":true,"source":"A value that indicates whether to close the source file stream when the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFile\"></xref> is disposed."},{"pos":[26019,26079],"content":"A memory-mapped file that has the specified characteristics.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file that has the specified characteristics.","pos":[0,60]}]},{"pos":[26262,26955],"content":"<code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string.       -or-       <code>capacity</code> and the length of the file are zero.       -or-       <code>access</code> is set to <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> or <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value, which is not allowed.       -or-       <code>access</code> is set to <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> and <code>capacity</code> is larger than the length of <xref uid=\"langword_csharp_filestream\" name=\"filestream\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","pos":[0,104],"source":"<code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> and the length of the file are zero.","pos":[111,180],"source":"       -or-       <code>capacity</code> and the length of the file are zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is set to <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> enumeration value, which is not allowed.","pos":[187,415],"source":"       -or-       <code>access</code> is set to <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> or <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value, which is not allowed."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is set to <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <ph id=\"ph2\">&lt;code&gt;capacity&lt;/code&gt;</ph> is larger than the length of <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_filestream\" name=\"filestream\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[422,663],"source":"       -or-       <code>access</code> is set to <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> and <code>capacity</code> is larger than the length of <xref uid=\"langword_csharp_filestream\" name=\"filestream\" href=\"\"></xref>."}]},{"pos":[27059,27147],"content":"<ph id=\"ph1\">&lt;code&gt;fileStream&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>fileStream</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[27263,27644],"content":"<code>capacity</code> is less than zero.       -or-       <code>capacity</code> is less than the file size.       -or-       <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value.       -or-       <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.","pos":[0,40],"source":"<code>capacity</code> is less than zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than the file size.","pos":[47,107],"source":"       -or-       <code>capacity</code> is less than the file size."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","pos":[114,250],"source":"       -or-       <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref:System.IO.HandleInheritability&gt;</ph> enumeration value.","pos":[257,367],"source":"       -or-       <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value."}]},{"pos":[28776,28940],"content":"Creates a memory-mapped file that has the specified name, capacity, access type, security permissions, inheritability, and disposal requirement from a file on disk.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a memory-mapped file that has the specified name, capacity, access type, security permissions, inheritability, and disposal requirement from a file on disk.","pos":[0,164]}]},{"pos":[28952,29271],"content":"If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file. To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If <ph id=\"ph1\">`capacity`</ph> is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.","pos":[0,174],"source":"If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file."},{"content":"To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set <ph id=\"ph1\">`capacity`</ph> to the size of the file on disk.","pos":[175,319],"source":" To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk."}]},{"pos":[29725,29761],"content":"The <ph id=\"ph1\">`fileStream`</ph> to the file to map.","needQuote":true,"needEscape":true,"source":"The `fileStream` to the file to map."},{"pos":[29825,29868],"content":"A name to assign to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name to assign to the memory-mapped file.","pos":[0,43]}]},{"pos":[29932,30061],"content":"The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of the file on disk.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of the file on disk.","pos":[0,129],"nodes":[{"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","pos":[0,66]},{"content":"Specify 0 to set the capacity to the size of the file on disk.","pos":[67,129]}]}]},{"pos":[30162,30374],"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file.       This parameter can’t be set to <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file.","pos":[0,98]},{"content":"This parameter can’t be set to <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[105,208],"source":"       This parameter can’t be set to <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>."}]},{"pos":[30496,30684],"content":"The permissions that can be granted for file access and operations on memory-mapped files.       This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The permissions that can be granted for file access and operations on memory-mapped files.","pos":[0,90]},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[97,180],"source":"       This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[30773,30951],"content":"One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.","pos":[0,178],"nodes":[{"content":"One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.","pos":[0,124]},{"content":"The default is &lt;xref:System.IO.HandleInheritability&gt;.","pos":[125,178],"source":" The default is <xref:System.IO.HandleInheritability>."}]}]},{"pos":[31018,31281],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to not dispose <ph id=\"ph1\">`fileStream`</ph> after the <bpt id=\"p2\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFile\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is closed; <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> to dispose <ph id=\"ph2\">`fileStream`</ph>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to not dispose `fileStream` after the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFile\"></xref> is closed; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to dispose `fileStream`."},{"pos":[31370,31430],"content":"A memory-mapped file that has the specified characteristics.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file that has the specified characteristics.","pos":[0,60]}]},{"pos":[31613,31980],"content":"<code>mapName</code> is an empty string.       -or-       <code>capacity</code> and the length of the file are zero.       -or-       <code>access</code> is set to the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> or <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value, which is not allowed.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.","pos":[0,40],"source":"<code>mapName</code> is an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> and the length of the file are zero.","pos":[47,116],"source":"       -or-       <code>capacity</code> and the length of the file are zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is set to the <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> enumeration value, which is not allowed.","pos":[123,355],"source":"       -or-       <code>access</code> is set to the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> or <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value, which is not allowed."}]},{"pos":[32084,32196],"content":"<ph id=\"ph1\">&lt;code&gt;fileStream&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;mapname&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>fileStream</code> or <code>mapname</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[32312,32693],"content":"<code>capacity</code> is less than zero.       -or-       <code>capacity</code> is less than the file size.       -or-       <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value.       -or-       <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.","pos":[0,40],"source":"<code>capacity</code> is less than zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than the file size.","pos":[47,107],"source":"       -or-       <code>capacity</code> is less than the file size."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","pos":[114,250],"source":"       -or-       <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref:System.IO.HandleInheritability&gt;</ph> enumeration value.","pos":[257,367],"source":"       -or-       <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value."}]},{"pos":[32801,32836],"content":"<ph id=\"ph1\">&lt;code&gt;fileStream&lt;/code&gt;</ph> was closed.","needQuote":true,"needEscape":true,"source":"<code>fileStream</code> was closed."},{"pos":[32951,33188],"content":"<ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is set to <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when <ph id=\"ph2\">&lt;code&gt;fileStream&lt;/code&gt;</ph>'s access is set to <bpt id=\"p2\">&lt;xref href=\"System.IO.FileAccess\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or <bpt id=\"p3\">&lt;xref href=\"System.IO.FileAccess\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>access</code> is set to <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> when <code>fileStream</code>'s access is set to <xref href=\"System.IO.FileAccess\"></xref> or <xref href=\"System.IO.FileAccess\"></xref>."},{"pos":[33277,33313],"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> already exists.","needQuote":true,"needEscape":true,"source":"<code>mapName</code> already exists."},{"pos":[33813,33891],"content":"Creates a memory-mapped file that has the specified capacity in system memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a memory-mapped file that has the specified capacity in system memory.","pos":[0,78]}]},{"pos":[33903,34069],"content":"Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.","pos":[0,166]}]},{"pos":[36251,36294],"content":"A name to assign to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name to assign to the memory-mapped file.","pos":[0,43]}]},{"pos":[36358,36424],"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","pos":[0,66]}]},{"pos":[36513,36575],"content":"A memory-mapped file that has the specified name and capacity.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file that has the specified name and capacity.","pos":[0,62]}]},{"pos":[36752,36792],"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>mapName</code> is an empty string."},{"pos":[36895,36980],"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[37095,37147],"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.","needQuote":true,"needEscape":true,"source":"<code>capacity</code> is less than or equal to zero."},{"pos":[37818,37912],"content":"Creates a memory-mapped file that has the specified capacity and access type in system memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a memory-mapped file that has the specified capacity and access type in system memory.","pos":[0,94]}]},{"pos":[37924,38090],"content":"Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.","pos":[0,166]}]},{"pos":[38354,38397],"content":"A name to assign to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name to assign to the memory-mapped file.","pos":[0,43]}]},{"pos":[38461,38527],"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","pos":[0,66]}]},{"pos":[38627,38813],"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file.","pos":[0,98]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[99,186],"source":" The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>."}]},{"pos":[38902,38962],"content":"A memory-mapped file that has the specified characteristics.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file that has the specified characteristics.","pos":[0,60]}]},{"pos":[39140,39344],"content":"<code>mapName</code> is an empty string.       -or-       <code>access</code> is set to write-only with the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.","pos":[0,40],"source":"<code>mapName</code> is an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","pos":[47,198],"source":"       -or-       <code>access</code> is set to write-only with the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value."}]},{"pos":[39448,39533],"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[39649,39850],"content":"<code>capacity</code> is less than or equal to zero.       -or-       <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.","pos":[0,52],"source":"<code>capacity</code> is less than or equal to zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","pos":[59,195],"source":"       -or-       <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value."}]},{"pos":[40823,40949],"content":"Creates a memory-mapped file that has the specified name, capacity, access type, memory allocation options and inheritability.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a memory-mapped file that has the specified name, capacity, access type, memory allocation options and inheritability.","pos":[0,126]}]},{"pos":[41321,41364],"content":"A name to assign to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name to assign to the memory-mapped file.","pos":[0,43]}]},{"pos":[41428,41494],"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","pos":[0,66]}]},{"pos":[41594,41780],"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file.","pos":[0,98]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[99,186],"source":" The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>."}]},{"pos":[41882,41994],"content":"A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.","pos":[0,112]}]},{"pos":[42082,42238],"content":"A value that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.","pos":[0,156],"nodes":[{"content":"A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.","pos":[0,102]},{"content":"The default is &lt;xref:System.IO.HandleInheritability&gt;.","pos":[103,156],"source":" The default is <xref:System.IO.HandleInheritability>."}]}]},{"pos":[42327,42387],"content":"A memory-mapped file that has the specified characteristics.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file that has the specified characteristics.","pos":[0,60]}]},{"pos":[42565,42769],"content":"<code>mapName</code> is an empty string.       -or-       <code>access</code> is set to write-only with the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.","pos":[0,40],"source":"<code>mapName</code> is an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","pos":[47,198],"source":"       -or-       <code>access</code> is set to write-only with the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value."}]},{"pos":[42873,42958],"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[43074,43384],"content":"<code>capacity</code> is less than or equal to zero.       -or-       <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value.       -or-       <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> value.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.","pos":[0,52],"source":"<code>capacity</code> is less than or equal to zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","pos":[59,195],"source":"       -or-       <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref:System.IO.HandleInheritability&gt;</ph> value.","pos":[202,300],"source":"       -or-       <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> value."}]},{"pos":[44538,44690],"content":"Creates a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.","pos":[0,152]}]},{"pos":[44702,44868],"content":"Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.","pos":[0,166]}]},{"pos":[45319,45362],"content":"A name to assign to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name to assign to the memory-mapped file.","pos":[0,43]}]},{"pos":[45426,45492],"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","pos":[0,66]}]},{"pos":[45592,45778],"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file.","pos":[0,98]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[99,186],"source":" The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>."}]},{"pos":[45880,45992],"content":"A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.","pos":[0,112]}]},{"pos":[46113,46301],"content":"The permissions that can be granted for file access and operations on memory-mapped files.       This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The permissions that can be granted for file access and operations on memory-mapped files.","pos":[0,90]},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[97,180],"source":"       This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[46390,46568],"content":"One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.","pos":[0,178],"nodes":[{"content":"One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.","pos":[0,124]},{"content":"The default is &lt;xref:System.IO.HandleInheritability&gt;.","pos":[125,178],"source":" The default is <xref:System.IO.HandleInheritability>."}]}]},{"pos":[46657,46717],"content":"A memory-mapped file that has the specified characteristics.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file that has the specified characteristics.","pos":[0,60]}]},{"pos":[46895,47099],"content":"<code>mapName</code> is an empty string.       -or-       <code>access</code> is set to write-only with the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.","pos":[0,40],"source":"<code>mapName</code> is an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","pos":[47,198],"source":"       -or-       <code>access</code> is set to write-only with the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value."}]},{"pos":[47203,47288],"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[47404,47726],"content":"<code>capacity</code> is less than or equal to zero.       -or-       <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value.       -or-       <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.","pos":[0,52],"source":"<code>capacity</code> is less than or equal to zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","pos":[59,195],"source":"       -or-       <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref:System.IO.HandleInheritability&gt;</ph> enumeration value.","pos":[202,312],"source":"       -or-       <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value."}]},{"pos":[48242,48329],"content":"Creates or opens a memory-mapped file that has the specified capacity in system memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates or opens a memory-mapped file that has the specified capacity in system memory.","pos":[0,87]}]},{"pos":[48341,48515],"content":"Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.","pos":[0,174]}]},{"pos":[48723,48766],"content":"A name to assign to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name to assign to the memory-mapped file.","pos":[0,43]}]},{"pos":[48830,48896],"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","pos":[0,66]}]},{"pos":[48985,49043],"content":"A memory-mapped file that has the specified name and size.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file that has the specified name and size.","pos":[0,58]}]},{"pos":[49223,49263],"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>mapName</code> is an empty string."},{"pos":[49366,49451],"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[49567,49717],"content":"<code>capacity</code> is greater than the size of the logical address space.       -or-       <code>capacity</code> is less than or equal to zero.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.","pos":[0,76],"source":"<code>capacity</code> is greater than the size of the logical address space."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.","pos":[83,146],"source":"       -or-       <code>capacity</code> is less than or equal to zero."}]},{"pos":[50404,50507],"content":"Creates or opens a memory-mapped file that has the specified capacity and access type in system memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates or opens a memory-mapped file that has the specified capacity and access type in system memory.","pos":[0,103]}]},{"pos":[50519,50693],"content":"Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.","pos":[0,174]}]},{"pos":[50960,51003],"content":"A name to assign to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name to assign to the memory-mapped file.","pos":[0,43]}]},{"pos":[51067,51133],"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","pos":[0,66]}]},{"pos":[51233,51419],"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file.","pos":[0,98]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[99,186],"source":" The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>."}]},{"pos":[51508,51568],"content":"A memory-mapped file that has the specified characteristics.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file that has the specified characteristics.","pos":[0,60]}]},{"pos":[51749,51953],"content":"<code>mapName</code> is an empty string.       -or-       <code>access</code> is set to write-only with the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.","pos":[0,40],"source":"<code>mapName</code> is an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","pos":[47,198],"source":"       -or-       <code>access</code> is set to write-only with the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value."}]},{"pos":[52057,52142],"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[52258,52557],"content":"<code>capacity</code> is greater than the size of the logical address space.       -or-       <code>capacity</code> is less than or equal to zero.       -or-       <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.","pos":[0,76],"source":"<code>capacity</code> is greater than the size of the logical address space."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.","pos":[83,146],"source":"       -or-       <code>capacity</code> is less than or equal to zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","pos":[153,289],"source":"       -or-       <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value."}]},{"pos":[52673,52952],"content":"The operating system denied the specified access to the file; for example, access is set to <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, but the file or directory is read-only.","needQuote":true,"needEscape":true,"source":"The operating system denied the specified access to the file; for example, access is set to <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> or <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>, but the file or directory is read-only."},{"pos":[53939,54141],"content":"Creates a new empty memory mapped file or opens an existing memory mapped file if one exists with the same name. If opening an existing file, the capacity, options, and memory arguments will be ignored.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new empty memory mapped file or opens an existing memory mapped file if one exists with the same name. If opening an existing file, the capacity, options, and memory arguments will be ignored.","pos":[0,202],"nodes":[{"content":"Creates a new empty memory mapped file or opens an existing memory mapped file if one exists with the same name.","pos":[0,112]},{"content":"If opening an existing file, the capacity, options, and memory arguments will be ignored.","pos":[113,202]}]}]},{"pos":[54516,54559],"content":"A name to assign to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name to assign to the memory-mapped file.","pos":[0,43]}]},{"pos":[54623,54689],"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","pos":[0,66]}]},{"pos":[54789,54975],"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file.","pos":[0,98]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[99,186],"source":" The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>."}]},{"pos":[55077,55174],"content":"A bitwise combination of values that indicate the memory allocation options to apply to the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A bitwise combination of values that indicate the memory allocation options to apply to the file.","pos":[0,97]}]},{"pos":[55262,55418],"content":"A value that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.","pos":[0,156],"nodes":[{"content":"A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.","pos":[0,102]},{"content":"The default is &lt;xref:System.IO.HandleInheritability&gt;.","pos":[103,156],"source":" The default is <xref:System.IO.HandleInheritability>."}]}]},{"pos":[55507,55567],"content":"A memory-mapped file that has the specified characteristics.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file that has the specified characteristics.","pos":[0,60]}]},{"pos":[55748,55952],"content":"<code>mapName</code> is an empty string.       -or-       <code>access</code> is set to write-only with the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.","pos":[0,40],"source":"<code>mapName</code> is an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","pos":[47,198],"source":"       -or-       <code>access</code> is set to write-only with the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value."}]},{"pos":[56056,56141],"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[56257,56677],"content":"<code>capacity</code> is greater than the size of the logical address space.       -or-       <code>capacity</code> is less than or equal to zero.       -or-       <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value.       -or-       <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.","pos":[0,76],"source":"<code>capacity</code> is greater than the size of the logical address space."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.","pos":[83,146],"source":"       -or-       <code>capacity</code> is less than or equal to zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","pos":[153,289],"source":"       -or-       <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref:System.IO.HandleInheritability&gt;</ph> enumeration value.","pos":[296,406],"source":"       -or-       <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value."}]},{"pos":[56793,57072],"content":"The operating system denied the specified access to the file; for example, access is set to <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, but the file or directory is read-only.","needQuote":true,"needEscape":true,"source":"The operating system denied the specified access to the file; for example, access is set to <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> or <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>, but the file or directory is read-only."},{"pos":[58240,58401],"content":"Creates or opens a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates or opens a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.","pos":[0,161]}]},{"pos":[58413,58587],"content":"Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.","pos":[0,174]}]},{"pos":[59041,59084],"content":"A name to assign to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name to assign to the memory-mapped file.","pos":[0,43]}]},{"pos":[59148,59214],"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, to allocate to the memory-mapped file.","pos":[0,66]}]},{"pos":[59314,59500],"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file.","pos":[0,98]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[99,186],"source":" The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>."}]},{"pos":[59602,59714],"content":"A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.","pos":[0,112]}]},{"pos":[59835,60023],"content":"The permissions that can be granted for file access and operations on memory-mapped files.       This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The permissions that can be granted for file access and operations on memory-mapped files.","pos":[0,90]},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[97,180],"source":"       This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[60112,60290],"content":"One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.","pos":[0,178],"nodes":[{"content":"One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.","pos":[0,124]},{"content":"The default is &lt;xref:System.IO.HandleInheritability&gt;.","pos":[125,178],"source":" The default is <xref:System.IO.HandleInheritability>."}]}]},{"pos":[60379,60439],"content":"A memory-mapped file that has the specified characteristics.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file that has the specified characteristics.","pos":[0,60]}]},{"pos":[60620,60824],"content":"<code>mapName</code> is an empty string.       -or-       <code>access</code> is set to write-only with the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.","pos":[0,40],"source":"<code>mapName</code> is an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","pos":[47,198],"source":"       -or-       <code>access</code> is set to write-only with the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value."}]},{"pos":[60928,61013],"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[61129,61549],"content":"<code>capacity</code> is greater than the size of the logical address space.       -or-       <code>capacity</code> is less than or equal to zero.       -or-       <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value.       -or-       <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.","pos":[0,76],"source":"<code>capacity</code> is greater than the size of the logical address space."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.","pos":[83,146],"source":"       -or-       <code>capacity</code> is less than or equal to zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","pos":[153,289],"source":"       -or-       <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref:System.IO.HandleInheritability&gt;</ph> enumeration value.","pos":[296,406],"source":"       -or-       <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value."}]},{"pos":[61665,61970],"content":"The operating system denied the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">access</ph><ept id=\"p1\">&lt;/code&gt;</ept> to the file; for example, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">access</ph><ept id=\"p2\">&lt;/code&gt;</ept> is set to <bpt id=\"p3\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> or <bpt id=\"p4\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>, but the file or directory is read-only.","needQuote":true,"needEscape":true,"source":"The operating system denied the specified <code>access</code> to the file; for example, <code>access</code> is set to <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> or <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>, but the file or directory is read-only."},{"pos":[62423,62553],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that maps to a view of the memory-mapped file.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\"></xref> that maps to a view of the memory-mapped file."},{"pos":[62565,62652],"content":"You can use the view returned by this method for random access to a memory-mapped file.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use the view returned by this method for random access to a memory-mapped file.","pos":[0,87]}]},{"pos":[62874,62912],"content":"A randomly accessible block of memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"A randomly accessible block of memory.","pos":[0,38]}]},{"pos":[63118,63167],"content":"Access to the memory-mapped file is unauthorized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Access to the memory-mapped file is unauthorized.","pos":[0,49]}]},{"pos":[63707,63881],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that maps to a view of the memory-mapped file, and that has the specified offset and size.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\"></xref> that maps to a view of the memory-mapped file, and that has the specified offset and size."},{"pos":[63894,64321],"content":"You can use the view returned by this method for random access to a memory-mapped file.       To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter. If you do this, the size of the view might be smaller or larger than the size of the source file on disk. This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use the view returned by this method for random access to a memory-mapped file.","pos":[0,87]},{"content":"To create a complete view of the memory-mapped file, specify 0 (zero) for the <ph id=\"ph1\">`size`</ph> parameter.","pos":[94,189],"source":"       To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter."},{"content":"If you do this, the size of the view might be smaller or larger than the size of the source file on disk.","pos":[190,295]},{"content":"This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.","pos":[296,425]}]},{"pos":[64997,65033],"content":"The byte at which to start the view.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte at which to start the view.","pos":[0,36]}]},{"pos":[65093,65233],"content":"The size of the view. Specify 0 (zero) to create a view that starts at `offset` and ends approximately at the end of the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the view.","pos":[0,21]},{"content":"Specify 0 (zero) to create a view that starts at <ph id=\"ph1\">`offset`</ph> and ends approximately at the end of the memory-mapped file.","pos":[22,140],"source":" Specify 0 (zero) to create a view that starts at `offset` and ends approximately at the end of the memory-mapped file."}]},{"pos":[65330,65368],"content":"A randomly accessible block of memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"A randomly accessible block of memory.","pos":[0,38]}]},{"pos":[65575,65718],"content":"<code>offset</code> or <code>size</code> is a negative value.       -or-       <code>size</code> is greater than the logical address space.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;size&lt;/code&gt;</ph> is a negative value.","pos":[0,61],"source":"<code>offset</code> or <code>size</code> is a negative value."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the logical address space.","pos":[68,139],"source":"       -or-       <code>size</code> is greater than the logical address space."}]},{"pos":[65834,65883],"content":"Access to the memory-mapped file is unauthorized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Access to the memory-mapped file is unauthorized.","pos":[0,49]}]},{"pos":[65972,65994],"content":"An I/O error occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"An I/O error occurred.","pos":[0,22]}]},{"pos":[66705,66901],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that maps to a view of the memory-mapped file, and that has the specified offset, size, and access restrictions.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\"></xref> that maps to a view of the memory-mapped file, and that has the specified offset, size, and access restrictions."},{"pos":[66914,67341],"content":"You can use the view returned by this method for random access to a memory-mapped file.       To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter. If you do this, the size of the view might be smaller or larger than the size of the source file on disk. This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use the view returned by this method for random access to a memory-mapped file.","pos":[0,87]},{"content":"To create a complete view of the memory-mapped file, specify 0 (zero) for the <ph id=\"ph1\">`size`</ph> parameter.","pos":[94,189],"source":"       To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter."},{"content":"If you do this, the size of the view might be smaller or larger than the size of the source file on disk.","pos":[190,295]},{"content":"This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.","pos":[296,425]}]},{"pos":[67607,67643],"content":"The byte at which to start the view.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte at which to start the view.","pos":[0,36]}]},{"pos":[67703,67843],"content":"The size of the view. Specify 0 (zero) to create a view that starts at `offset` and ends approximately at the end of the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the view.","pos":[0,21]},{"content":"Specify 0 (zero) to create a view that starts at <ph id=\"ph1\">`offset`</ph> and ends approximately at the end of the memory-mapped file.","pos":[22,140],"source":" Specify 0 (zero) to create a view that starts at `offset` and ends approximately at the end of the memory-mapped file."}]},{"pos":[67943,68129],"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file.","pos":[0,98]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[99,186],"source":" The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>."}]},{"pos":[68226,68264],"content":"A randomly accessible block of memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"A randomly accessible block of memory.","pos":[0,38]}]},{"pos":[68471,68614],"content":"<code>offset</code> or <code>size</code> is a negative value.       -or-       <code>size</code> is greater than the logical address space.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;size&lt;/code&gt;</ph> is a negative value.","pos":[0,61],"source":"<code>offset</code> or <code>size</code> is a negative value."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the logical address space.","pos":[68,139],"source":"       -or-       <code>size</code> is greater than the logical address space."}]},{"pos":[68730,68788],"content":"<ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is invalid for the memory-mapped file.","needQuote":true,"needEscape":true,"source":"<code>access</code> is invalid for the memory-mapped file."},{"pos":[68877,68899],"content":"An I/O error occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"An I/O error occurred.","pos":[0,22]}]},{"pos":[69342,69405],"content":"Creates a stream that maps to a view of the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a stream that maps to a view of the memory-mapped file.","pos":[0,63]}]},{"pos":[69417,69552],"content":"You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.","pos":[0,135]}]},{"pos":[70213,70232],"content":"A stream of memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"A stream of memory.","pos":[0,19]}]},{"pos":[70436,70485],"content":"Access to the memory-mapped file is unauthorized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Access to the memory-mapped file is unauthorized.","pos":[0,49]}]},{"pos":[71015,71122],"content":"Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset and size.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset and size.","pos":[0,107]}]},{"pos":[71135,71610],"content":"You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.       To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter. If you do this, the size of the view might be smaller or larger than the size of the source file on disk. This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.","pos":[0,135]},{"content":"To create a complete view of the memory-mapped file, specify 0 (zero) for the <ph id=\"ph1\">`size`</ph> parameter.","pos":[142,237],"source":"       To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter."},{"content":"If you do this, the size of the view might be smaller or larger than the size of the source file on disk.","pos":[238,343]},{"content":"This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.","pos":[344,473]}]},{"pos":[71813,71849],"content":"The byte at which to start the view.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte at which to start the view.","pos":[0,36]}]},{"pos":[71909,72049],"content":"The size of the view. Specify 0 (zero) to create a view that starts at `offset` and ends approximately at the end of the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the view.","pos":[0,21]},{"content":"Specify 0 (zero) to create a view that starts at <ph id=\"ph1\">`offset`</ph> and ends approximately at the end of the memory-mapped file.","pos":[22,140],"source":" Specify 0 (zero) to create a view that starts at `offset` and ends approximately at the end of the memory-mapped file."}]},{"pos":[72144,72202],"content":"A stream of memory that has the specified offset and size.","needQuote":true,"needEscape":true,"nodes":[{"content":"A stream of memory that has the specified offset and size.","pos":[0,58]}]},{"pos":[72407,72550],"content":"<code>offset</code> or <code>size</code> is a negative value.       -or-       <code>size</code> is greater than the logical address space.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;size&lt;/code&gt;</ph> is a negative value.","pos":[0,61],"source":"<code>offset</code> or <code>size</code> is a negative value."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the logical address space.","pos":[68,139],"source":"       -or-       <code>size</code> is greater than the logical address space."}]},{"pos":[72666,72715],"content":"Access to the memory-mapped file is unauthorized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Access to the memory-mapped file is unauthorized.","pos":[0,49]}]},{"pos":[72804,72863],"content":"<ph id=\"ph1\">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the total virtual memory.","needQuote":true,"needEscape":true,"source":"<code>size</code> is greater than the total virtual memory."},{"pos":[73564,73685],"content":"Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset, size, and access type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset, size, and access type.","pos":[0,121]}]},{"pos":[73698,74173],"content":"You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.       To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter. If you do this, the size of the view might be smaller or larger than the size of the source file on disk. This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.","pos":[0,135]},{"content":"To create a complete view of the memory-mapped file, specify 0 (zero) for the <ph id=\"ph1\">`size`</ph> parameter.","pos":[142,237],"source":"       To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter."},{"content":"If you do this, the size of the view might be smaller or larger than the size of the source file on disk.","pos":[238,343]},{"content":"This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.","pos":[344,473]}]},{"pos":[74435,74471],"content":"The byte at which to start the view.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte at which to start the view.","pos":[0,36]}]},{"pos":[74531,74671],"content":"The size of the view. Specify 0 (zero) to create a view that starts at `offset` and ends approximately at the end of the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the view.","pos":[0,21]},{"content":"Specify 0 (zero) to create a view that starts at <ph id=\"ph1\">`offset`</ph> and ends approximately at the end of the memory-mapped file.","pos":[22,140],"source":" Specify 0 (zero) to create a view that starts at `offset` and ends approximately at the end of the memory-mapped file."}]},{"pos":[74771,74957],"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the type of access allowed to the memory-mapped file.","pos":[0,98]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[99,186],"source":" The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>."}]},{"pos":[75052,75110],"content":"A stream of memory that has the specified characteristics.","needQuote":true,"needEscape":true,"nodes":[{"content":"A stream of memory that has the specified characteristics.","pos":[0,58]}]},{"pos":[75315,75607],"content":"<code>offset</code> or <code>size</code> is a negative value.       -or-       <code>size</code> is greater than the logical address space.       -or-       <code>access </code>is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;size&lt;/code&gt;</ph> is a negative value.","pos":[0,61],"source":"<code>offset</code> or <code>size</code> is a negative value."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the logical address space.","pos":[68,139],"source":"       -or-       <code>size</code> is greater than the logical address space."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access &lt;/code&gt;</ph>is not a valid <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","pos":[146,282],"source":"       -or-       <code>access </code>is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value."}]},{"pos":[75723,75781],"content":"<ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is invalid for the memory-mapped file.","needQuote":true,"needEscape":true,"source":"<code>access</code> is invalid for the memory-mapped file."},{"pos":[75871,76010],"content":"<code>size</code> is greater than the total virtual memory.       -or-       <code>access</code> is invalid for the memory-mapped file.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the total virtual memory.","pos":[0,59],"source":"<code>size</code> is greater than the total virtual memory."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is invalid for the memory-mapped file.","pos":[66,135],"source":"       -or-       <code>access</code> is invalid for the memory-mapped file."}]},{"pos":[76409,76510],"content":"Releases all resources used by the <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Releases all resources used by the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFile\"></xref>."},{"pos":[77110,77267],"content":"Releases the unmanaged resources used by the <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally releases the managed resources.","needQuote":true,"needEscape":true,"source":"Releases the unmanaged resources used by the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFile\"></xref> and optionally releases the managed resources."},{"pos":[77422,77631],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources."},{"pos":[78157,78216],"content":"Gets the access control to the memory-mapped file resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the access control to the memory-mapped file resource.","pos":[0,59]}]},{"pos":[78436,78526],"content":"The permissions that can be granted for file access and operations on memory-mapped files.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permissions that can be granted for file access and operations on memory-mapped files.","pos":[0,90]}]},{"pos":[78726,78780],"content":"An underlying call to set security information failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"An underlying call to set security information failed.","pos":[0,54]}]},{"pos":[78883,78937],"content":"An underlying call to set security information failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"An underlying call to set security information failed.","pos":[0,54]}]},{"pos":[79044,79077],"content":"The memory-mapped file is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The memory-mapped file is closed.","pos":[0,33]}]},{"pos":[79196,79242],"content":"The current platform is Windows 98 or earlier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current platform is Windows 98 or earlier.","pos":[0,46]}]},{"pos":[79358,79550],"content":"An underlying call to set security information failed.       -or-       The memory-mapped file was opened as <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> only.","needQuote":false,"needEscape":true,"nodes":[{"content":"An underlying call to set security information failed.","pos":[0,54]},{"content":"-or-       The memory-mapped file was opened as <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> only.","pos":[61,186],"source":"       -or-       The memory-mapped file was opened as <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> only."}]},{"pos":[80022,80104],"content":"Opens an existing memory-mapped file that has the specified name in system memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"Opens an existing memory-mapped file that has the specified name in system memory.","pos":[0,82]}]},{"pos":[80116,80234],"content":"The memory-mapped file can be either a persisted memory-mapped file (associated with a file on disk) or non persisted.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The memory-mapped file can be either a persisted memory-mapped file (associated with a file on disk) or non persisted.","pos":[0,118]}]},{"pos":[81307,81350],"content":"The name of the memory-mapped file to open.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the memory-mapped file to open.","pos":[0,43]}]},{"pos":[81439,81488],"content":"A memory-mapped file that has the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file that has the specified name.","pos":[0,49]}]},{"pos":[81668,81708],"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>mapName</code> is an empty string."},{"pos":[81811,81896],"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[82005,82064],"content":"The file specified for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">mapName</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not exist.","needQuote":true,"needEscape":true,"source":"The file specified for <code>mapName</code> does not exist."},{"pos":[82706,82806],"content":"Opens an existing memory-mapped file that has the specified name and access rights in system memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"Opens an existing memory-mapped file that has the specified name and access rights in system memory.","pos":[0,100]}]},{"pos":[83071,83114],"content":"The name of the memory-mapped file to open.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the memory-mapped file to open.","pos":[0,43]}]},{"pos":[83227,83325],"content":"One of the enumeration values that specifies the access rights to apply to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the access rights to apply to the memory-mapped file.","pos":[0,98]}]},{"pos":[83414,83474],"content":"A memory-mapped file that has the specified characteristics.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file that has the specified characteristics.","pos":[0,60]}]},{"pos":[83654,83694],"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>mapName</code> is an empty string."},{"pos":[83797,83882],"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[83997,84135],"content":"<ph id=\"ph1\">&lt;code&gt;desiredAccessRights&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileRights\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","needQuote":true,"needEscape":true,"source":"<code>desiredAccessRights</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileRights\"></xref> enumeration value."},{"pos":[84244,84303],"content":"The file specified for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">mapName</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not exist.","needQuote":true,"needEscape":true,"source":"The file specified for <code>mapName</code> does not exist."},{"pos":[85070,85187],"content":"Opens an existing memory-mapped file that has the specified name, access rights, and inheritability in system memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"Opens an existing memory-mapped file that has the specified name, access rights, and inheritability in system memory.","pos":[0,117]}]},{"pos":[85499,85542],"content":"The name of the memory-mapped file to open.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the memory-mapped file to open.","pos":[0,43]}]},{"pos":[85655,85753],"content":"One of the enumeration values that specifies the access rights to apply to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the access rights to apply to the memory-mapped file.","pos":[0,98]}]},{"pos":[85841,86019],"content":"One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.","pos":[0,178],"nodes":[{"content":"One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.","pos":[0,124]},{"content":"The default is &lt;xref:System.IO.HandleInheritability&gt;.","pos":[125,178],"source":" The default is <xref:System.IO.HandleInheritability>."}]}]},{"pos":[86108,86168],"content":"A memory-mapped file that has the specified characteristics.","needQuote":true,"needEscape":true,"nodes":[{"content":"A memory-mapped file that has the specified characteristics.","pos":[0,60]}]},{"pos":[86348,86388],"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>mapName</code> is an empty string."},{"pos":[86491,86576],"content":"<ph id=\"ph1\">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[86692,86953],"content":"<code>desiredAccessRights</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileRights\"></xref> enumeration value.       -or-       <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;desiredAccessRights&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileRights\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","pos":[0,138],"source":"<code>desiredAccessRights</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileRights\"></xref> enumeration value."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref:System.IO.HandleInheritability&gt;</ph> enumeration value.","pos":[145,255],"source":"       -or-       <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value."}]},{"pos":[87069,87128],"content":"The requested access is invalid for the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The requested access is invalid for the memory-mapped file.","pos":[0,59]}]},{"pos":[87237,87296],"content":"The file specified for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">mapName</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not exist.","needQuote":true,"needEscape":true,"source":"The file specified for <code>mapName</code> does not exist."},{"pos":[87785,87830],"content":"Gets the file handle of a memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the file handle of a memory-mapped file.","pos":[0,45]}]},{"pos":[88050,88087],"content":"The handle to the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The handle to the memory-mapped file.","pos":[0,37]}]},{"pos":[88812,88871],"content":"Sets the access control to the memory-mapped file resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the access control to the memory-mapped file resource.","pos":[0,59]}]},{"pos":[89140,89230],"content":"The permissions that can be granted for file access and operations on memory-mapped files.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permissions that can be granted for file access and operations on memory-mapped files.","pos":[0,90]}]},{"pos":[89422,89524],"content":"<ph id=\"ph1\">&lt;code&gt;memoryMappedFileSecurity&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>memoryMappedFileSecurity</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[89635,89689],"content":"An underlying call to set security information failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"An underlying call to set security information failed.","pos":[0,54]}]},{"pos":[89792,89846],"content":"An underlying call to set security information failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"An underlying call to set security information failed.","pos":[0,54]}]},{"pos":[89961,90015],"content":"An underlying call to set security information failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"An underlying call to set security information failed.","pos":[0,54]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile\n  id: MemoryMappedFile\n  children:\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle\n  - System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)\n  langs:\n  - csharp\n  name: MemoryMappedFile\n  nameWithType: MemoryMappedFile\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile\n  type: Class\n  summary: Represents a memory-mapped file.\n  remarks: \"A memory-mapped file maps the contents of a file to an application’s logical address space. Memory-mapped files enable programmers to work with extremely large files because memory can be managed concurrently, and they allow complete, random access to a file without the need for seeking. Memory-mapped files can also be shared across multiple processes.  \\n  \\n The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> methods create a memory-mapped file from a specified path or a <xref:System.IO.FileStream> of an existing file on disk. Changes are automatically propagated to disk when the file is unmapped.  \\n  \\n The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> methods create a memory-mapped file that is not mapped to an existing file on disk; and are suitable for creating shared memory for interprocess communication (IPC).  \\n  \\n A memory-mapped file is associated with a name.  \\n  \\n You can create multiple views of the memory-mapped file, including views of parts of the file. You can map the same part of a file to more than one address to create concurrent memory. For two views to remain concurrent, they have to be created from the same memory-mapped file. Creating two file mappings of the same file with two views does not provide concurrency.\"\n  example:\n  - \"The following example creates a memory-mapped view of a part of an extremely large file and manipulates a portion of it.  \\n  \\n [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/visualbasic/t-system.io.memorymapped_0_1.vb)]\\n [!code-cs[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/csharp/t-system.io.memorymapped_0_1.cs)]\"\n  syntax:\n    content: 'public class MemoryMappedFile : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)\n  id: CreateFromFile(System.String)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateFromFile(String)\n  nameWithType: MemoryMappedFile.CreateFromFile(String)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a memory-mapped file from a file on disk.\n  remarks: ''\n  example:\n  - \"The following example uses the CreateFromFile method to create a memory-mapped file, and then creates a memory-mapped view to a portion of an extremely large file.  \\n  \\n [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/visualbasic/m-system.io.memorymapped_0_1.vb)]\\n [!code-cs[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/csharp/m-system.io.memorymapped_0_1.cs)]\"\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path to file to map.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>path</code> is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; method.  \\n  \\n -or-  \\n  \\n <code>path</code> refers to an invalid device.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: <code>path</code> exceeds the maximum length defined by the operating system. In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permissions for the file.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)\n  id: CreateFromFile(System.String,System.IO.FileMode)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateFromFile(String,FileMode)\n  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a memory-mapped file that has the specified access mode from a file on disk.\n  remarks: The `mode` parameter pertains to the source file on disk. You can use only the <xref:System.IO.FileMode> enumeration value to create the memory-mapped file from the source file on disk.\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path to file to map.\n    - id: mode\n      type: System.IO.FileMode\n      description: Access mode; must be <xref href=\"System.IO.FileMode\"></xref>.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file that has the specified access mode.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>path</code> is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; method.  \\n  \\n -or-  \\n  \\n <code>path</code> refers to an invalid device.  \\n  \\n -or-  \\n  \\n <code>mode</code> is <xref href=\\\"System.IO.FileMode\\\"></xref>.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"<code>mode</code> is <xref href=\\\"System.IO.FileMode\\\"></xref>, <xref href=\\\"System.IO.FileMode\\\"></xref>, or <xref href=\\\"System.IO.FileMode\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>mode</code> is <xref href=\\\"System.IO.FileMode\\\"></xref> and the file on disk does not exist.  \\n  \\n -or-  \\n  \\n An I/O error occurred.\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: <code>path</code> exceeds the maximum length defined by the operating system. In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permissions for the file.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)\n  id: CreateFromFile(System.String,System.IO.FileMode,System.String)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateFromFile(String,FileMode,String)\n  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a memory-mapped file that has the specified access mode and name from a file on disk.\n  remarks: The `mode` parameter pertains to the source file on disk. You can use only the <xref:System.IO.FileMode> enumeration value to create the memory-mapped file from the source file on disk.\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path to the file to map.\n    - id: mode\n      type: System.IO.FileMode\n      description: Access mode; must be <xref href=\"System.IO.FileMode\"></xref>.\n    - id: mapName\n      type: System.String\n      description: A name to assign to the memory-mapped file.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file that has the specified name and access mode.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>path</code> is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; method.  \\n  \\n -or-  \\n  \\n <code>path</code> refers to an invalid device.  \\n  \\n -or-  \\n  \\n <code>mapName</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>mode</code> is <xref href=\\\"System.IO.FileMode\\\"></xref>.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> or <code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"<code>mode</code> is <xref href=\\\"System.IO.FileMode\\\"></xref>, <xref href=\\\"System.IO.FileMode\\\"></xref>, or <xref href=\\\"System.IO.FileMode\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>mode</code> is <xref href=\\\"System.IO.FileMode\\\"></xref> and the file on disk does not exist.  \\n  \\n -or-  \\n  \\n An I/O error occurred.\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: <code>path</code> exceeds the maximum length defined by the operating system. In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permissions for the file.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)\n  id: CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateFromFile(String,FileMode,String,Int64)\n  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a memory-mapped file that has the specified access mode, name, and capacity from a file on disk.\n  remarks: \"The `mode` parameter pertains to the source file on disk.  \\n  \\n If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file. To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.\"\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path to the file to map.\n    - id: mode\n      type: System.IO.FileMode\n      description: Access mode; can be any of the <xref href=\"System.IO.FileMode\"></xref> enumeration values except <xref href=\"System.IO.FileMode\"></xref>.\n    - id: mapName\n      type: System.String\n      description: A name to assign to the memory-mapped file.\n    - id: capacity\n      type: System.Int64\n      description: The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of the file on disk.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file that has the specified characteristics.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>path</code> is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; method.  \\n  \\n -or-  \\n  \\n <code>path</code> refers to an invalid device.  \\n  \\n -or-  \\n  \\n <code>mapName</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>mode</code> is <xref href=\\\"System.IO.FileMode\\\"></xref>.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> or <code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>capacity</code> is greater than the size of the logical address space.  \\n  \\n -or-  \\n  \\n <code>capacity</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>capacity</code> is less than the file size (but not zero).  \\n  \\n -or-  \\n  \\n <code>capacity</code> is zero, and the size of the file on disk is also zero.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: <code>path</code> exceeds the maximum length defined by the operating system. In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permissions for the file.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  id: CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)\n  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a memory-mapped file that has the specified access mode, name, capacity, and access type from a file on disk.\n  remarks: \"The `mode` parameter pertains to the source file on disk.  \\n  \\n If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file. To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.\"\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path to the file to map.\n    - id: mode\n      type: System.IO.FileMode\n      description: Access mode; can be any of the <xref href=\"System.IO.FileMode\"></xref> enumeration values except <xref href=\"System.IO.FileMode\"></xref>.\n    - id: mapName\n      type: System.String\n      description: A name to assign to the memory-mapped file.\n    - id: capacity\n      type: System.Int64\n      description: The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of the file on disk.\n    - id: access\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess\n      description: One of the enumeration values that specifies the type of access allowed to the memory-mapped file.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file that has the specified characteristics.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>mapName</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>access</code> is not an allowed value.  \\n  \\n -or-  \\n  \\n <code>path</code> specifies an empty file.  \\n  \\n -or-  \\n  \\n <code>access</code> is specified as <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> and capacity is greater than the size of the file indicated by <code>path</code>.  \\n  \\n -or-  \\n  \\n <code>mode</code> is <xref href=\\\"System.IO.FileMode\\\"></xref>.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> or <code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>capacity</code> is greater than the size of the logical address space.  \\n  \\n -or-  \\n  \\n <code>capacity</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>capacity</code> is less than the file size (but not zero).  \\n  \\n -or-  \\n  \\n <code>capacity</code> is zero, and the size of the file on disk is also zero.  \\n  \\n -or-  \\n  \\n <code>access</code> is not a defined <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> value.  \\n  \\n -or-  \\n  \\n The size of the file indicated by <code>path</code> is greater than <code>capacity</code>.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"-or-  \\n  \\n An I/O error occurred.\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: <code>path</code> exceeds the maximum length defined by the operating system. In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permissions for the file.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)\n  id: CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)\n  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a memory-mapped file from an existing file with the specified access mode, name, inheritability, and capacity.\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.HandleInheritability inheritability, bool leaveOpen);\n    parameters:\n    - id: fileStream\n      type: System.IO.FileStream\n      description: The file stream of the existing file.\n    - id: mapName\n      type: System.String\n      description: A name to assign to the memory-mapped file.\n    - id: capacity\n      type: System.Int64\n      description: The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of `filestream`.\n    - id: access\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess\n      description: \"One of the enumeration values that specifies the type of access allowed to the memory-mapped file.  \\n  \\n This parameter can’t be set to <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref>.\"\n    - id: inheritability\n      type: System.IO.HandleInheritability\n      description: One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.\n    - id: leaveOpen\n      type: System.Boolean\n      description: A value that indicates whether to close the source file stream when the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFile\"></xref> is disposed.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file that has the specified characteristics.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>mapName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> or an empty string.  \\n  \\n -or-  \\n  \\n <code>capacity</code> and the length of the file are zero.  \\n  \\n -or-  \\n  \\n <code>access</code> is set to <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> or <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value, which is not allowed.  \\n  \\n -or-  \\n  \\n <code>access</code> is set to <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> and <code>capacity</code> is larger than the length of <xref uid=\\\"langword_csharp_filestream\\\" name=\\\"filestream\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>fileStream</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>capacity</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>capacity</code> is less than the file size.  \\n  \\n -or-  \\n  \\n <code>access</code> is not a valid <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value.  \\n  \\n -or-  \\n  \\n <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value.\"\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)\n  id: CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)\n  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a memory-mapped file that has the specified name, capacity, access type, security permissions, inheritability, and disposal requirement from a file on disk.\n  remarks: If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file. To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability, bool leaveOpen);\n    parameters:\n    - id: fileStream\n      type: System.IO.FileStream\n      description: The `fileStream` to the file to map.\n    - id: mapName\n      type: System.String\n      description: A name to assign to the memory-mapped file.\n    - id: capacity\n      type: System.Int64\n      description: The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of the file on disk.\n    - id: access\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess\n      description: \"One of the enumeration values that specifies the type of access allowed to the memory-mapped file.  \\n  \\n This parameter can’t be set to <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref>.\"\n    - id: memoryMappedFileSecurity\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity\n      description: \"The permissions that can be granted for file access and operations on memory-mapped files.  \\n  \\n This parameter can be <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n    - id: inheritability\n      type: System.IO.HandleInheritability\n      description: One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.\n    - id: leaveOpen\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to not dispose `fileStream` after the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFile\"></xref> is closed; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to dispose `fileStream`.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file that has the specified characteristics.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>mapName</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>capacity</code> and the length of the file are zero.  \\n  \\n -or-  \\n  \\n <code>access</code> is set to the <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> or <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value, which is not allowed.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>fileStream</code> or <code>mapname</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>capacity</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>capacity</code> is less than the file size.  \\n  \\n -or-  \\n  \\n <code>access</code> is not a valid <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value.  \\n  \\n -or-  \\n  \\n <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: <code>fileStream</code> was closed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: <code>access</code> is set to <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> when <code>fileStream</code>'s access is set to <xref href=\"System.IO.FileAccess\"></xref> or <xref href=\"System.IO.FileAccess\"></xref>.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: <code>mapName</code> already exists.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)\n  id: CreateNew(System.String,System.Int64)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateNew(String,Int64)\n  nameWithType: MemoryMappedFile.CreateNew(String,Int64)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a memory-mapped file that has the specified capacity in system memory.\n  remarks: Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.\n  example:\n  - \"The following example is composed of three separate processes (console applications) that write `Boolean` values to a memory-mapped file. The following sequence of actions occur:  \\n  \\n1.  Process A creates the memory-mapped file and writes a value to it.  \\n  \\n2.  Process B opens the memory-mapped file and writes a value to it.  \\n  \\n3.  Process C opens the memory-mapped file and writes a value to it.  \\n  \\n4.  Process A reads and displays the values from the memory-mapped file.  \\n  \\n5.  After Process A is finished with the memory-mapped file, the file is immediately reclaimed by garbage collection.  \\n  \\n To run this example, do the following:  \\n  \\n1.  Compile the applications and open three Command windows.  \\n  \\n2.  In the first Command window, run Process A.  \\n  \\n3.  In the second Command window, run Process B.  \\n  \\n4.  Return to Process A and press ENTER.  \\n  \\n5.  In the third Command window, run Process C.  \\n  \\n6.  Return to Process A and press ENTER.  \\n  \\n The output of Process A is as follows:  \\n  \\n```  \\nStart Process B and press ENTER to continue.  \\nStart Process C and press ENTER to continue.  \\nProcess A says: True  \\nProcess B says: False  \\nProcess C says: True  \\n```  \\n  \\n **Process A**  \\n  \\n [!code-vb[System.IO.MemoryMappedFiles_IPC_X#1](~/add/codesnippet/visualbasic/2726e3da-0984-4dfa-b22c-_1.vb)]\\n [!code-cs[System.IO.MemoryMappedFiles_IPC_X#1](~/add/codesnippet/csharp/2726e3da-0984-4dfa-b22c-_1.cs)]  \\n  \\n **Process B**  \\n  \\n [!code-vb[System.IO.MemoryMappedFiles_IPC_A#1](~/add/codesnippet/visualbasic/2726e3da-0984-4dfa-b22c-_2.vb)]\\n [!code-cs[System.IO.MemoryMappedFiles_IPC_A#1](~/add/codesnippet/csharp/2726e3da-0984-4dfa-b22c-_2.cs)]  \\n  \\n **Process C**  \\n  \\n [!code-cs[System.IO.MemoryMappedFiles_IPC_B#1](~/add/codesnippet/csharp/2726e3da-0984-4dfa-b22c-_3.cs)]\\n [!code-vb[System.IO.MemoryMappedFiles_IPC_B#1](~/add/codesnippet/visualbasic/2726e3da-0984-4dfa-b22c-_3.vb)]\"\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity);\n    parameters:\n    - id: mapName\n      type: System.String\n      description: A name to assign to the memory-mapped file.\n    - id: capacity\n      type: System.Int64\n      description: The maximum size, in bytes, to allocate to the memory-mapped file.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file that has the specified name and capacity.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>mapName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>capacity</code> is less than or equal to zero.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  id: CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateNew(String,Int64,MemoryMappedFileAccess)\n  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a memory-mapped file that has the specified capacity and access type in system memory.\n  remarks: Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);\n    parameters:\n    - id: mapName\n      type: System.String\n      description: A name to assign to the memory-mapped file.\n    - id: capacity\n      type: System.Int64\n      description: The maximum size, in bytes, to allocate to the memory-mapped file.\n    - id: access\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess\n      description: One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file that has the specified characteristics.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>mapName</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>access</code> is set to write-only with the <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>capacity</code> is less than or equal to zero.  \\n  \\n -or-  \\n  \\n <code>access</code> is not a valid <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value.\"\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)\n  id: CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)\n  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a memory-mapped file that has the specified name, capacity, access type, memory allocation options and inheritability.\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);\n    parameters:\n    - id: mapName\n      type: System.String\n      description: A name to assign to the memory-mapped file.\n    - id: capacity\n      type: System.Int64\n      description: The maximum size, in bytes, to allocate to the memory-mapped file.\n    - id: access\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess\n      description: One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.\n    - id: options\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions\n      description: A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.\n    - id: inheritability\n      type: System.IO.HandleInheritability\n      description: A value that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file that has the specified characteristics.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>mapName</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>access</code> is set to write-only with the <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>capacity</code> is less than or equal to zero.  \\n  \\n -or-  \\n  \\n <code>access</code> is not a valid <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value.  \\n  \\n -or-  \\n  \\n <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> value.\"\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)\n  id: CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)\n  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.\n  remarks: Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);\n    parameters:\n    - id: mapName\n      type: System.String\n      description: A name to assign to the memory-mapped file.\n    - id: capacity\n      type: System.Int64\n      description: The maximum size, in bytes, to allocate to the memory-mapped file.\n    - id: access\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess\n      description: One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.\n    - id: options\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions\n      description: A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.\n    - id: memoryMappedFileSecurity\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity\n      description: \"The permissions that can be granted for file access and operations on memory-mapped files.  \\n  \\n This parameter can be <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n    - id: inheritability\n      type: System.IO.HandleInheritability\n      description: One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file that has the specified characteristics.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>mapName</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>access</code> is set to write-only with the <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>capacity</code> is less than or equal to zero.  \\n  \\n -or-  \\n  \\n <code>access</code> is not a valid <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value.  \\n  \\n -or-  \\n  \\n <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value.\"\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)\n  id: CreateOrOpen(System.String,System.Int64)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateOrOpen(String,Int64)\n  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates or opens a memory-mapped file that has the specified capacity in system memory.\n  remarks: Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity);\n    parameters:\n    - id: mapName\n      type: System.String\n      description: A name to assign to the memory-mapped file.\n    - id: capacity\n      type: System.Int64\n      description: The maximum size, in bytes, to allocate to the memory-mapped file.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file that has the specified name and size.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>mapName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>capacity</code> is greater than the size of the logical address space.  \\n  \\n -or-  \\n  \\n <code>capacity</code> is less than or equal to zero.\"\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  id: CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess)\n  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates or opens a memory-mapped file that has the specified capacity and access type in system memory.\n  remarks: Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);\n    parameters:\n    - id: mapName\n      type: System.String\n      description: A name to assign to the memory-mapped file.\n    - id: capacity\n      type: System.Int64\n      description: The maximum size, in bytes, to allocate to the memory-mapped file.\n    - id: access\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess\n      description: One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file that has the specified characteristics.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>mapName</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>access</code> is set to write-only with the <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>capacity</code> is greater than the size of the logical address space.  \\n  \\n -or-  \\n  \\n <code>capacity</code> is less than or equal to zero.  \\n  \\n -or-  \\n  \\n <code>access</code> is not a valid <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value.\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The operating system denied the specified access to the file; for example, access is set to <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> or <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>, but the file or directory is read-only.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)\n  id: CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)\n  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a new empty memory mapped file or opens an existing memory mapped file if one exists with the same name. If opening an existing file, the capacity, options, and memory arguments will be ignored.\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);\n    parameters:\n    - id: mapName\n      type: System.String\n      description: A name to assign to the memory-mapped file.\n    - id: capacity\n      type: System.Int64\n      description: The maximum size, in bytes, to allocate to the memory-mapped file.\n    - id: access\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess\n      description: One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.\n    - id: options\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions\n      description: A bitwise combination of values that indicate the memory allocation options to apply to the file.\n    - id: inheritability\n      type: System.IO.HandleInheritability\n      description: A value that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file that has the specified characteristics.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>mapName</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>access</code> is set to write-only with the <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>capacity</code> is greater than the size of the logical address space.  \\n  \\n -or-  \\n  \\n <code>capacity</code> is less than or equal to zero.  \\n  \\n -or-  \\n  \\n <code>access</code> is not a valid <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value.  \\n  \\n -or-  \\n  \\n <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value.\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The operating system denied the specified access to the file; for example, access is set to <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> or <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>, but the file or directory is read-only.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)\n  id: CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)\n  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates or opens a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.\n  remarks: Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);\n    parameters:\n    - id: mapName\n      type: System.String\n      description: A name to assign to the memory-mapped file.\n    - id: capacity\n      type: System.Int64\n      description: The maximum size, in bytes, to allocate to the memory-mapped file.\n    - id: access\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess\n      description: One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.\n    - id: options\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions\n      description: A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.\n    - id: memoryMappedFileSecurity\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity\n      description: \"The permissions that can be granted for file access and operations on memory-mapped files.  \\n  \\n This parameter can be <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n    - id: inheritability\n      type: System.IO.HandleInheritability\n      description: One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file that has the specified characteristics.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>mapName</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>access</code> is set to write-only with the <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>capacity</code> is greater than the size of the logical address space.  \\n  \\n -or-  \\n  \\n <code>capacity</code> is less than or equal to zero.  \\n  \\n -or-  \\n  \\n <code>access</code> is not a valid <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value.  \\n  \\n -or-  \\n  \\n <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value.\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The operating system denied the specified <code>access</code> to the file; for example, <code>access</code> is set to <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> or <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>, but the file or directory is read-only.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor\n  id: CreateViewAccessor\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateViewAccessor()\n  nameWithType: MemoryMappedFile.CreateViewAccessor()\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\"></xref> that maps to a view of the memory-mapped file.\n  remarks: You can use the view returned by this method for random access to a memory-mapped file.\n  syntax:\n    content: public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor ();\n    parameters: []\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n      description: A randomly accessible block of memory.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access to the memory-mapped file is unauthorized.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)\n  id: CreateViewAccessor(System.Int64,System.Int64)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateViewAccessor(Int64,Int64)\n  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\"></xref> that maps to a view of the memory-mapped file, and that has the specified offset and size.\n  remarks: \"You can use the view returned by this method for random access to a memory-mapped file.  \\n  \\n To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter. If you do this, the size of the view might be smaller or larger than the size of the source file on disk. This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.\"\n  example:\n  - \"The following example creates a view of a memory-mapped file and edits it. This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> class.  \\n  \\n [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/add/codesnippet/visualbasic/eabd93aa-7563-4639-a698-_1.vb)]\\n [!code-cs[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/add/codesnippet/csharp/eabd93aa-7563-4639-a698-_1.cs)]\"\n  syntax:\n    content: public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size);\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: The byte at which to start the view.\n    - id: size\n      type: System.Int64\n      description: The size of the view. Specify 0 (zero) to create a view that starts at `offset` and ends approximately at the end of the memory-mapped file.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n      description: A randomly accessible block of memory.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> or <code>size</code> is a negative value.  \\n  \\n -or-  \\n  \\n <code>size</code> is greater than the logical address space.\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access to the memory-mapped file is unauthorized.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  id: CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)\n  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\"></xref> that maps to a view of the memory-mapped file, and that has the specified offset, size, and access restrictions.\n  remarks: \"You can use the view returned by this method for random access to a memory-mapped file.  \\n  \\n To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter. If you do this, the size of the view might be smaller or larger than the size of the source file on disk. This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.\"\n  syntax:\n    content: public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: The byte at which to start the view.\n    - id: size\n      type: System.Int64\n      description: The size of the view. Specify 0 (zero) to create a view that starts at `offset` and ends approximately at the end of the memory-mapped file.\n    - id: access\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess\n      description: One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n      description: A randomly accessible block of memory.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> or <code>size</code> is a negative value.  \\n  \\n -or-  \\n  \\n <code>size</code> is greater than the logical address space.\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: <code>access</code> is invalid for the memory-mapped file.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream\n  id: CreateViewStream\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateViewStream()\n  nameWithType: MemoryMappedFile.CreateViewStream()\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a stream that maps to a view of the memory-mapped file.\n  remarks: You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.\n  example:\n  - \"The following example creates a stream and writes a value to it. This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> method.  \\n  \\n [!code-vb[System.IO.MemoryMappedFiles_IPC_X#2](~/add/codesnippet/visualbasic/m-system.io.memorymapped_1_1.vb)]\\n [!code-cs[System.IO.MemoryMappedFiles_IPC_X#2](~/add/codesnippet/csharp/m-system.io.memorymapped_1_1.cs)]\"\n  syntax:\n    content: public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream ();\n    parameters: []\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n      description: A stream of memory.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access to the memory-mapped file is unauthorized.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)\n  id: CreateViewStream(System.Int64,System.Int64)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateViewStream(Int64,Int64)\n  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset and size.\n  remarks: \"You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.  \\n  \\n To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter. If you do this, the size of the view might be smaller or larger than the size of the source file on disk. This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.\"\n  syntax:\n    content: public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size);\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: The byte at which to start the view.\n    - id: size\n      type: System.Int64\n      description: The size of the view. Specify 0 (zero) to create a view that starts at `offset` and ends approximately at the end of the memory-mapped file.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n      description: A stream of memory that has the specified offset and size.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> or <code>size</code> is a negative value.  \\n  \\n -or-  \\n  \\n <code>size</code> is greater than the logical address space.\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access to the memory-mapped file is unauthorized.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: <code>size</code> is greater than the total virtual memory.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  id: CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: CreateViewStream(Int64,Int64,MemoryMappedFileAccess)\n  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset, size, and access type.\n  remarks: \"You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.  \\n  \\n To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter. If you do this, the size of the view might be smaller or larger than the size of the source file on disk. This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.\"\n  syntax:\n    content: public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: The byte at which to start the view.\n    - id: size\n      type: System.Int64\n      description: The size of the view. Specify 0 (zero) to create a view that starts at `offset` and ends approximately at the end of the memory-mapped file.\n    - id: access\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess\n      description: One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref>.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n      description: A stream of memory that has the specified characteristics.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> or <code>size</code> is a negative value.  \\n  \\n -or-  \\n  \\n <code>size</code> is greater than the logical address space.  \\n  \\n -or-  \\n  \\n <code>access </code>is not a valid <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value.\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: <code>access</code> is invalid for the memory-mapped file.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"<code>size</code> is greater than the total virtual memory.  \\n  \\n -or-  \\n  \\n <code>access</code> is invalid for the memory-mapped file.\"\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose\n  id: Dispose\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: MemoryMappedFile.Dispose()\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Releases all resources used by the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFile\"></xref>.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: MemoryMappedFile.Dispose(Boolean)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Releases the unmanaged resources used by the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFile\"></xref> and optionally releases the managed resources.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl\n  id: GetAccessControl\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: GetAccessControl()\n  nameWithType: MemoryMappedFile.GetAccessControl()\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Gets the access control to the memory-mapped file resource.\n  syntax:\n    content: public System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl ();\n    parameters: []\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity\n      description: The permissions that can be granted for file access and operations on memory-mapped files.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An underlying call to set security information failed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: An underlying call to set security information failed.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The memory-mapped file is closed.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The current platform is Windows 98 or earlier.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"An underlying call to set security information failed.  \\n  \\n -or-  \\n  \\n The memory-mapped file was opened as <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> only.\"\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)\n  id: OpenExisting(System.String)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: OpenExisting(String)\n  nameWithType: MemoryMappedFile.OpenExisting(String)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Opens an existing memory-mapped file that has the specified name in system memory.\n  remarks: The memory-mapped file can be either a persisted memory-mapped file (associated with a file on disk) or non persisted.\n  example:\n  - \"**Opening a Persisted Memory-Mapped File**  \\n  \\n The following example opens a memory-mapped file named `ImgA` that has already been created from a file on disk (as shown in the example for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> method).  \\n  \\n [!code-cs[memorymappedfiles.memorymappedfile.openexisting#1](~/add/codesnippet/csharp/m-system.io.memorymapped_2_1.cs)]\\n [!code-vb[memorymappedfiles.memorymappedfile.openexisting#1](~/add/codesnippet/visualbasic/m-system.io.memorymapped_2_1.vb)]  \\n  \\n **Opening a Non-Persisted Memory-Mapped File**  \\n  \\n The following example opens a memory-mapped file used for inter-process communication. This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> method.\"\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName);\n    parameters:\n    - id: mapName\n      type: System.String\n      description: The name of the memory-mapped file to open.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file that has the specified name.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>mapName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified for <code>mapName</code> does not exist.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)\n  id: OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: OpenExisting(String,MemoryMappedFileRights)\n  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Opens an existing memory-mapped file that has the specified name and access rights in system memory.\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights);\n    parameters:\n    - id: mapName\n      type: System.String\n      description: The name of the memory-mapped file to open.\n    - id: desiredAccessRights\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights\n      description: One of the enumeration values that specifies the access rights to apply to the memory-mapped file.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file that has the specified characteristics.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>mapName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>desiredAccessRights</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileRights\"></xref> enumeration value.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified for <code>mapName</code> does not exist.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)\n  id: OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: OpenExisting(String,MemoryMappedFileRights,HandleInheritability)\n  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Opens an existing memory-mapped file that has the specified name, access rights, and inheritability in system memory.\n  syntax:\n    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, System.IO.HandleInheritability inheritability);\n    parameters:\n    - id: mapName\n      type: System.String\n      description: The name of the memory-mapped file to open.\n    - id: desiredAccessRights\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights\n      description: One of the enumeration values that specifies the access rights to apply to the memory-mapped file.\n    - id: inheritability\n      type: System.IO.HandleInheritability\n      description: One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is <xref:System.IO.HandleInheritability>.\n    return:\n      type: System.IO.MemoryMappedFiles.MemoryMappedFile\n      description: A memory-mapped file that has the specified characteristics.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>mapName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>mapName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>desiredAccessRights</code> is not a valid <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileRights\\\"></xref> enumeration value.  \\n  \\n -or-  \\n  \\n <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> enumeration value.\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The requested access is invalid for the memory-mapped file.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified for <code>mapName</code> does not exist.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle\n  id: SafeMemoryMappedFileHandle\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: SafeMemoryMappedFileHandle\n  nameWithType: MemoryMappedFile.SafeMemoryMappedFileHandle\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Gets the file handle of a memory-mapped file.\n  syntax:\n    content: public Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle { get; }\n    return:\n      type: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle\n      description: The handle to the memory-mapped file.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)\n  id: SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  langs:\n  - csharp\n  name: SetAccessControl(MemoryMappedFileSecurity)\n  nameWithType: MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Sets the access control to the memory-mapped file resource.\n  syntax:\n    content: public void SetAccessControl (System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity);\n    parameters:\n    - id: memoryMappedFileSecurity\n      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity\n      description: The permissions that can be granted for file access and operations on memory-mapped files.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>memoryMappedFileSecurity</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An underlying call to set security information failed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: An underlying call to set security information failed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: An underlying call to set security information failed.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IO.IOException\n  isExternal: true\n  name: System.IO.IOException\n- uid: System.IO.PathTooLongException\n  isExternal: true\n  name: System.IO.PathTooLongException\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.UnauthorizedAccessException\n  isExternal: true\n  name: System.UnauthorizedAccessException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.PlatformNotSupportedException\n  isExternal: true\n  name: System.PlatformNotSupportedException\n- uid: System.IO.FileNotFoundException\n  isExternal: true\n  name: System.IO.FileNotFoundException\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateFromFile(String)\n  nameWithType: MemoryMappedFile.CreateFromFile(String)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile\n  parent: System.IO.MemoryMappedFiles\n  isExternal: false\n  name: MemoryMappedFile\n  nameWithType: MemoryMappedFile\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateFromFile(String,FileMode)\n  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode)\n- uid: System.IO.FileMode\n  parent: System.IO\n  isExternal: false\n  name: FileMode\n  nameWithType: FileMode\n  fullName: System.IO.FileMode\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateFromFile(String,FileMode,String)\n  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateFromFile(String,FileMode,String,Int64)\n  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)\n  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFileAccess\n  parent: System.IO.MemoryMappedFiles\n  isExternal: false\n  name: MemoryMappedFileAccess\n  nameWithType: MemoryMappedFileAccess\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileAccess\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)\n  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)\n- uid: System.IO.FileStream\n  parent: System.IO\n  isExternal: false\n  name: FileStream\n  nameWithType: FileStream\n  fullName: System.IO.FileStream\n- uid: System.IO.HandleInheritability\n  parent: System.IO\n  isExternal: true\n  name: HandleInheritability\n  nameWithType: HandleInheritability\n  fullName: System.IO.HandleInheritability\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)\n  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity\n  parent: System.IO.MemoryMappedFiles\n  isExternal: false\n  name: MemoryMappedFileSecurity\n  nameWithType: MemoryMappedFileSecurity\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateNew(String,Int64)\n  nameWithType: MemoryMappedFile.CreateNew(String,Int64)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateNew(String,Int64,MemoryMappedFileAccess)\n  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)\n  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFileOptions\n  parent: System.IO.MemoryMappedFiles\n  isExternal: false\n  name: MemoryMappedFileOptions\n  nameWithType: MemoryMappedFileOptions\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileOptions\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)\n  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateOrOpen(String,Int64)\n  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess)\n  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)\n  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)\n  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateViewAccessor()\n  nameWithType: MemoryMappedFile.CreateViewAccessor()\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor()\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n  parent: System.IO.MemoryMappedFiles\n  isExternal: false\n  name: MemoryMappedViewAccessor\n  nameWithType: MemoryMappedViewAccessor\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateViewAccessor(Int64,Int64)\n  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)\n  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateViewStream()\n  nameWithType: MemoryMappedFile.CreateViewStream()\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream()\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  parent: System.IO.MemoryMappedFiles\n  isExternal: false\n  name: MemoryMappedViewStream\n  nameWithType: MemoryMappedViewStream\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateViewStream(Int64,Int64)\n  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateViewStream(Int64,Int64,MemoryMappedFileAccess)\n  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: Dispose()\n  nameWithType: MemoryMappedFile.Dispose()\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose()\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: MemoryMappedFile.Dispose(Boolean)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(Boolean)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: GetAccessControl()\n  nameWithType: MemoryMappedFile.GetAccessControl()\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl()\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: OpenExisting(String)\n  nameWithType: MemoryMappedFile.OpenExisting(String)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: OpenExisting(String,MemoryMappedFileRights)\n  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights\n  parent: System.IO.MemoryMappedFiles\n  isExternal: false\n  name: MemoryMappedFileRights\n  nameWithType: MemoryMappedFileRights\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: OpenExisting(String,MemoryMappedFileRights,HandleInheritability)\n  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: SafeMemoryMappedFileHandle\n  nameWithType: MemoryMappedFile.SafeMemoryMappedFileHandle\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle\n- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafeMemoryMappedFileHandle\n  nameWithType: SafeMemoryMappedFileHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: SetAccessControl(MemoryMappedFileSecurity)\n  nameWithType: MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateFromFile\n  nameWithType: MemoryMappedFile.CreateFromFile\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateNew\n  nameWithType: MemoryMappedFile.CreateNew\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateOrOpen\n  nameWithType: MemoryMappedFile.CreateOrOpen\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateViewAccessor\n  nameWithType: MemoryMappedFile.CreateViewAccessor\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: CreateViewStream\n  nameWithType: MemoryMappedFile.CreateViewStream\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: Dispose\n  nameWithType: MemoryMappedFile.Dispose\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: GetAccessControl\n  nameWithType: MemoryMappedFile.GetAccessControl\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: OpenExisting\n  nameWithType: MemoryMappedFile.OpenExisting\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: SafeMemoryMappedFileHandle\n  nameWithType: MemoryMappedFile.SafeMemoryMappedFileHandle\n- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedFile\n  isExternal: false\n  name: SetAccessControl\n  nameWithType: MemoryMappedFile.SetAccessControl\n"}