{"nodes":[{"pos":[699,991],"content":"Base class for all key store providers. A custom provider must derive from this class and override its member functions and then register it using SqlConnection.RegisterColumnEncryptionKeyStoreProviders(). For details see, [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx).","needQuote":true,"needEscape":true,"nodes":[{"content":"Base class for all key store providers.","pos":[0,39]},{"content":"A custom provider must derive from this class and override its member functions and then register it using SqlConnection.RegisterColumnEncryptionKeyStoreProviders().","pos":[40,205]},{"content":"For details see, <bpt id=\"p1\">[</bpt>Always Encrypted<ept id=\"p1\">](https://msdn.microsoft.com/library/mt163865.aspx)</ept>.","pos":[206,292],"source":" For details see, [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx)."}]},{"pos":[1682,1757],"content":"Initializes a new instance of the SqlColumnEncryptionKeyStoreProviderClass.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the SqlColumnEncryptionKeyStoreProviderClass.","pos":[0,75]}]},{"pos":[2634,2839],"content":"Decrypts the specified encrypted value of a column encryption key. The encrypted value is expected to be encrypted using the column master key with the specified key path and using the specified algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Decrypts the specified encrypted value of a column encryption key. The encrypted value is expected to be encrypted using the column master key with the specified key path and using the specified algorithm.","pos":[0,205],"nodes":[{"content":"Decrypts the specified encrypted value of a column encryption key.","pos":[0,66]},{"content":"The encrypted value is expected to be encrypted using the column master key with the specified key path and using the specified algorithm.","pos":[67,205]}]}]},{"pos":[3087,3107],"content":"The master key path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The master key path.","pos":[0,20]}]},{"pos":[3183,3208],"content":"The encryption algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encryption algorithm.","pos":[0,25]}]},{"pos":[3293,3329],"content":"The encrypted column encryption key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encrypted column encryption key.","pos":[0,36]}]},{"pos":[3388,3456],"content":"Returns <xref:System.Byte>.    The decrypted column encryption key.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <xref:System.Byte>.    The decrypted column encryption key.","pos":[0,67],"nodes":[{"content":"Returns &lt;xref:System.Byte&gt;.","pos":[0,27],"source":"Returns <xref:System.Byte>."},{"content":"The decrypted column encryption key.","pos":[31,67]}]}]},{"pos":[4263,4386],"content":"Encrypts a column encryption key using the column master key with the specified key path and using the specified algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Encrypts a column encryption key using the column master key with the specified key path and using the specified algorithm.","pos":[0,123]}]},{"pos":[4625,4645],"content":"The master key path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The master key path.","pos":[0,20]}]},{"pos":[4721,4746],"content":"The encryption algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encryption algorithm.","pos":[0,25]}]},{"pos":[4822,4858],"content":"The encrypted column encryption key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encrypted column encryption key.","pos":[0,36]}]},{"pos":[4917,4985],"content":"Returns <xref:System.Byte>.    The encrypted column encryption key.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <xref:System.Byte>.    The encrypted column encryption key.","pos":[0,67],"nodes":[{"content":"Returns &lt;xref:System.Byte&gt;.","pos":[0,27],"source":"Returns <xref:System.Byte>."},{"content":"The encrypted column encryption key.","pos":[31,67]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  id: SqlColumnEncryptionKeyStoreProvider\n  children:\n  - System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor\n  - System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  - System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  langs:\n  - csharp\n  name: SqlColumnEncryptionKeyStoreProvider\n  nameWithType: SqlColumnEncryptionKeyStoreProvider\n  fullName: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  type: Class\n  summary: Base class for all key store providers. A custom provider must derive from this class and override its member functions and then register it using SqlConnection.RegisterColumnEncryptionKeyStoreProviders(). For details see, [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx).\n  syntax:\n    content: public abstract class SqlColumnEncryptionKeyStoreProvider\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor\n  id: '#ctor'\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  langs:\n  - csharp\n  name: SqlColumnEncryptionKeyStoreProvider()\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.SqlColumnEncryptionKeyStoreProvider()\n  fullName: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SqlColumnEncryptionKeyStoreProvider()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Initializes a new instance of the SqlColumnEncryptionKeyStoreProviderClass.\n  syntax:\n    content: protected SqlColumnEncryptionKeyStoreProvider ();\n    parameters: []\n  overload: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  id: DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  langs:\n  - csharp\n  name: DecryptColumnEncryptionKey(String,String,Byte[])\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(String,String,Byte[])\n  fullName: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(String,String,Byte[])\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Decrypts the specified encrypted value of a column encryption key. The encrypted value is expected to be encrypted using the column master key with the specified key path and using the specified algorithm.\n  syntax:\n    content: public abstract byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);\n    parameters:\n    - id: masterKeyPath\n      type: System.String\n      description: The master key path.\n    - id: encryptionAlgorithm\n      type: System.String\n      description: The encryption algorithm.\n    - id: encryptedColumnEncryptionKey\n      type: System.Byte[]\n      description: The encrypted column encryption key.\n    return:\n      type: System.Byte[]\n      description: \"Returns <xref:System.Byte>.   \\nThe decrypted column encryption key.\"\n  overload: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  id: EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  langs:\n  - csharp\n  name: EncryptColumnEncryptionKey(String,String,Byte[])\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(String,String,Byte[])\n  fullName: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(String,String,Byte[])\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Encrypts a column encryption key using the column master key with the specified key path and using the specified algorithm.\n  syntax:\n    content: public abstract byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);\n    parameters:\n    - id: masterKeyPath\n      type: System.String\n      description: The master key path.\n    - id: encryptionAlgorithm\n      type: System.String\n      description: The encryption algorithm.\n    - id: columnEncryptionKey\n      type: System.Byte[]\n      description: The encrypted column encryption key.\n    return:\n      type: System.Byte[]\n      description: \"Returns <xref:System.Byte>.   \\nThe encrypted column encryption key.\"\n  overload: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  isExternal: false\n  name: SqlColumnEncryptionKeyStoreProvider()\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.SqlColumnEncryptionKeyStoreProvider()\n  fullName: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SqlColumnEncryptionKeyStoreProvider()\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  isExternal: false\n  name: DecryptColumnEncryptionKey(String,String,Byte[])\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(String,String,Byte[])\n  fullName: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(String,String,Byte[])\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  isExternal: false\n  name: EncryptColumnEncryptionKey(String,String,Byte[])\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(String,String,Byte[])\n  fullName: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(String,String,Byte[])\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor*\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  isExternal: false\n  name: SqlColumnEncryptionKeyStoreProvider\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.SqlColumnEncryptionKeyStoreProvider\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey*\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  isExternal: false\n  name: DecryptColumnEncryptionKey\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey*\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  isExternal: false\n  name: EncryptColumnEncryptionKey\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey\n"}