{"nodes":[{"pos":[726,856],"content":"Provides a constructor-like means of calling <xref:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a constructor-like means of calling &lt;xref:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow*&gt;.","pos":[0,130],"source":"Provides a constructor-like means of calling <xref:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow*>."}]},{"pos":[2015,2206],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.ExpressionBuilder.Row\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified first column value and optional successive column values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Common.CommandTrees.ExpressionBuilder.Row\"></xref> class with the specified first column value and optional successive column values."},{"pos":[2627,2710],"content":"A key-value pair that provides the first column in the new row instance. (required)","needQuote":true,"needEscape":true,"nodes":[{"content":"A key-value pair that provides the first column in the new row instance. (required)","pos":[0,83],"nodes":[{"content":"A key-value pair that provides the first column in the new row instance.","pos":[0,72]},{"content":"(required)","pos":[73,83]}]}]},{"pos":[2867,2956],"content":"A key-value pairs that provide any subsequent columns in the new row instance. (optional)","needQuote":true,"needEscape":true,"nodes":[{"content":"A key-value pairs that provide any subsequent columns in the new row instance. (optional)","pos":[0,89],"nodes":[{"content":"A key-value pairs that provide any subsequent columns in the new row instance.","pos":[0,78]},{"content":"(optional)","pos":[79,89]}]}]},{"pos":[3887,3899],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3988,4000],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4562,4731],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that constructs a new row based on the columns contained in this Row instance.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that constructs a new row based on the columns contained in this Row instance."},{"pos":[4953,5077],"content":"A new DbNewInstanceExpression that constructs a row with the same column names and DbExpression values as this Row instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbNewInstanceExpression that constructs a row with the same column names and DbExpression values as this Row instance.","pos":[0,124]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  id: Row\n  children:\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression\n  langs:\n  - csharp\n  name: Row\n  nameWithType: Row\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  type: Class\n  summary: Provides a constructor-like means of calling <xref:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow*>.\n  syntax:\n    content: public sealed class Row\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])\n  id: '#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])'\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  langs:\n  - csharp\n  name: Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)\n  nameWithType: Row.Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Initializes a new instance of the <xref href=\"System.Data.Common.CommandTrees.ExpressionBuilder.Row\"></xref> class with the specified first column value and optional successive column values.\n  syntax:\n    content: public Row (System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression> columnValue, System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>[] columnValues);\n    parameters:\n    - id: columnValue\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}\n      description: A key-value pair that provides the first column in the new row instance. (required)\n    - id: columnValues\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[]\n      description: A key-value pairs that provide any subsequent columns in the new row instance. (optional)\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)\n  id: op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  langs:\n  - csharp\n  name: op_Implicit(Row)\n  nameWithType: Row.op_Implicit(Row)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(Row)\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (System.Data.Common.CommandTrees.ExpressionBuilder.Row row);\n    parameters:\n    - id: row\n      type: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n      description: To be added.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression\n  id: ToExpression\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  langs:\n  - csharp\n  name: ToExpression()\n  nameWithType: Row.ToExpression()\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that constructs a new row based on the columns contained in this Row instance.\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbNewInstanceExpression ToExpression ();\n    parameters: []\n    return:\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: A new DbNewInstanceExpression that constructs a row with the same column names and DbExpression values as this Row instance.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  isExternal: false\n  name: Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)\n  nameWithType: Row.Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: KeyValuePair<String,DbExpression>\n  nameWithType: KeyValuePair<String,DbExpression>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: DbExpression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[]\n  parent: System.Collections.Generic\n  isExternal: true\n  name: KeyValuePair<String,DbExpression>\n  nameWithType: KeyValuePair<String,DbExpression>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>[]\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>[]\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: DbExpression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  isExternal: false\n  name: op_Implicit(Row)\n  nameWithType: Row.op_Implicit(Row)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(Row)\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder\n  isExternal: false\n  name: Row\n  nameWithType: Row\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  isExternal: false\n  name: ToExpression()\n  nameWithType: Row.ToExpression()\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression()\n- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNewInstanceExpression\n  nameWithType: DbNewInstanceExpression\n  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  isExternal: false\n  name: Row\n  nameWithType: Row.Row\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  isExternal: false\n  name: op_Implicit\n  nameWithType: Row.op_Implicit\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  isExternal: false\n  name: ToExpression\n  nameWithType: Row.ToExpression\n"}