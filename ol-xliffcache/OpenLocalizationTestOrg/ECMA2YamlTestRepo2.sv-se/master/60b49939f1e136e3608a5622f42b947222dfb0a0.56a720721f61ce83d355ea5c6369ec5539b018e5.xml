{"nodes":[{"pos":[731,828],"content":"Contains the properties of a <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.SearchResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Contains the properties of a <xref href=\"System.DirectoryServices.SearchResult\"></xref> instance."},{"pos":[840,1545],"content":"<xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances. The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns. If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"<xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances. The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns. If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available.","pos":[0,705],"nodes":[{"content":"&lt;xref:System.DirectoryServices.SearchResult&gt; instances are similar to &lt;xref:System.DirectoryServices.DirectoryEntry&gt; instances.","pos":[0,127],"source":"<xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances."},{"content":"The notable difference is that the &lt;xref:System.DirectoryServices.DirectoryEntry&gt; retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the &lt;xref:System.DirectoryServices.SearchResult&gt; is already available in the &lt;xref:System.DirectoryServices.SearchResultCollection&gt; that a &lt;xref:System.DirectoryServices.DirectorySearcher&gt; query returns.","pos":[128,548],"source":" The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns."},{"content":"If you try to get a &lt;xref:System.DirectoryServices.SearchResult&gt; property that your query did not specify for retrieval, the property will not be available.","pos":[549,705],"source":" If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available."}]}]},{"pos":[4234,4321],"content":"Determines whether the property that has the specified name belongs to this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the property that has the specified name belongs to this collection.","pos":[0,87]}]},{"pos":[4473,4506],"content":"The name of the property to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property to find.","pos":[0,33]}]},{"pos":[4565,4774],"content":"The return value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified property belongs to this collection; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The return value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified property belongs to this collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5542,5642],"content":"Copies the properties from this collection to an array, starting at a particular index of the array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the properties from this collection to an array, starting at a particular index of the array.","pos":[0,100]}]},{"pos":[5882,6018],"content":"An array of type <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ResultPropertyValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that receives this collection's properties.","needQuote":true,"needEscape":true,"source":"An array of type <xref href=\"System.DirectoryServices.ResultPropertyValueCollection\"></xref> that receives this collection's properties."},{"pos":[6079,6147],"content":"The zero-based array index at which to begin copying the properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based array index at which to begin copying the properties.","pos":[0,68]}]},{"pos":[6700,6767],"content":"Gets the property from this collection that has the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the property from this collection that has the specified name.","pos":[0,67]}]},{"pos":[6780,7187],"content":"In C#, this property is the indexer for the <xref:System.DirectoryServices.ResultPropertyValueCollection> class.       In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"In C#, this property is the indexer for the <xref:System.DirectoryServices.ResultPropertyValueCollection> class.       In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>.","pos":[0,405],"nodes":[{"content":"In C#, this property is the indexer for the &lt;xref:System.DirectoryServices.ResultPropertyValueCollection&gt; class.","pos":[0,112],"source":"In C#, this property is the indexer for the <xref:System.DirectoryServices.ResultPropertyValueCollection> class."},{"content":"In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.","pos":[119,235]},{"content":"However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is &lt;xref:System.String&gt;.","pos":[236,405],"source":" However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>."}]}]},{"pos":[7377,7414],"content":"The name of the property to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property to retrieve.","pos":[0,37]}]},{"pos":[7513,7619],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ResultPropertyValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that has the specified name.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ResultPropertyValueCollection\"></xref> that has the specified name."},{"pos":[8161,8213],"content":"Gets the names of the properties in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the names of the properties in this collection.","pos":[0,52]}]},{"pos":[8372,8474],"content":"An <xref:System.Collections.ICollection> that contains the names of the properties in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.ICollection&gt; that contains the names of the properties in this collection.","pos":[0,102],"source":"An <xref:System.Collections.ICollection> that contains the names of the properties in this collection."}]},{"pos":[8990,9043],"content":"Gets the values of the properties in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the values of the properties in this collection.","pos":[0,53]}]},{"pos":[9195,9298],"content":"An <xref:System.Collections.ICollection> that contains the values of the properties in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.ICollection&gt; that contains the values of the properties in this collection.","pos":[0,103],"source":"An <xref:System.Collections.ICollection> that contains the values of the properties in this collection."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ResultPropertyCollection\n  id: ResultPropertyCollection\n  children:\n  - System.DirectoryServices.ResultPropertyCollection.Contains(System.String)\n  - System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)\n  - System.DirectoryServices.ResultPropertyCollection.Item(System.String)\n  - System.DirectoryServices.ResultPropertyCollection.PropertyNames\n  - System.DirectoryServices.ResultPropertyCollection.Values\n  langs:\n  - csharp\n  name: ResultPropertyCollection\n  nameWithType: ResultPropertyCollection\n  fullName: System.DirectoryServices.ResultPropertyCollection\n  type: Class\n  summary: Contains the properties of a <xref href=\"System.DirectoryServices.SearchResult\"></xref> instance.\n  remarks: <xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances. The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns. If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available.\n  syntax:\n    content: 'public class ResultPropertyCollection : System.Collections.DictionaryBase'\n  inheritance:\n  - System.Object\n  - System.Collections.DictionaryBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.DictionaryBase.Clear\n  - System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)\n  - System.Collections.DictionaryBase.Count\n  - System.Collections.DictionaryBase.Dictionary\n  - System.Collections.DictionaryBase.GetEnumerator\n  - System.Collections.DictionaryBase.InnerHashtable\n  - System.Collections.DictionaryBase.OnClear\n  - System.Collections.DictionaryBase.OnClearComplete\n  - System.Collections.DictionaryBase.OnGet(System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)\n  - System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Keys\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Values\n  - System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator\n  platform:\n  - net462\n- uid: System.DirectoryServices.ResultPropertyCollection.Contains(System.String)\n  id: Contains(System.String)\n  parent: System.DirectoryServices.ResultPropertyCollection\n  langs:\n  - csharp\n  name: Contains(String)\n  nameWithType: ResultPropertyCollection.Contains(String)\n  fullName: System.DirectoryServices.ResultPropertyCollection.Contains(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Determines whether the property that has the specified name belongs to this collection.\n  syntax:\n    content: public bool Contains (string propertyName);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The name of the property to find.\n    return:\n      type: System.Boolean\n      description: The return value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified property belongs to this collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.DirectoryServices.ResultPropertyCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)\n  id: CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)\n  parent: System.DirectoryServices.ResultPropertyCollection\n  langs:\n  - csharp\n  name: CopyTo(ResultPropertyValueCollection[],Int32)\n  nameWithType: ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[],Int32)\n  fullName: System.DirectoryServices.ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[],Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Copies the properties from this collection to an array, starting at a particular index of the array.\n  syntax:\n    content: public void CopyTo (System.DirectoryServices.ResultPropertyValueCollection[] array, int index);\n    parameters:\n    - id: array\n      type: System.DirectoryServices.ResultPropertyValueCollection[]\n      description: An array of type <xref href=\"System.DirectoryServices.ResultPropertyValueCollection\"></xref> that receives this collection's properties.\n    - id: index\n      type: System.Int32\n      description: The zero-based array index at which to begin copying the properties.\n  overload: System.DirectoryServices.ResultPropertyCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ResultPropertyCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.DirectoryServices.ResultPropertyCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: ResultPropertyCollection.Item(String)\n  fullName: System.DirectoryServices.ResultPropertyCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the property from this collection that has the specified name.\n  remarks: \"In C#, this property is the indexer for the <xref:System.DirectoryServices.ResultPropertyValueCollection> class.  \\n  \\n In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>.\"\n  syntax:\n    content: public System.DirectoryServices.ResultPropertyValueCollection this[string name] { get; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the property to retrieve.\n    return:\n      type: System.DirectoryServices.ResultPropertyValueCollection\n      description: A <xref href=\"System.DirectoryServices.ResultPropertyValueCollection\"></xref> that has the specified name.\n  overload: System.DirectoryServices.ResultPropertyCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ResultPropertyCollection.PropertyNames\n  id: PropertyNames\n  parent: System.DirectoryServices.ResultPropertyCollection\n  langs:\n  - csharp\n  name: PropertyNames\n  nameWithType: ResultPropertyCollection.PropertyNames\n  fullName: System.DirectoryServices.ResultPropertyCollection.PropertyNames\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the names of the properties in this collection.\n  syntax:\n    content: public System.Collections.ICollection PropertyNames { get; }\n    return:\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> that contains the names of the properties in this collection.\n  overload: System.DirectoryServices.ResultPropertyCollection.PropertyNames*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ResultPropertyCollection.Values\n  id: Values\n  parent: System.DirectoryServices.ResultPropertyCollection\n  langs:\n  - csharp\n  name: Values\n  nameWithType: ResultPropertyCollection.Values\n  fullName: System.DirectoryServices.ResultPropertyCollection.Values\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the values of the properties in this collection.\n  syntax:\n    content: public System.Collections.ICollection Values { get; }\n    return:\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> that contains the values of the properties in this collection.\n  overload: System.DirectoryServices.ResultPropertyCollection.Values*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.DictionaryBase\n- uid: System.DirectoryServices.ResultPropertyCollection.Contains(System.String)\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: Contains(String)\n  nameWithType: ResultPropertyCollection.Contains(String)\n  fullName: System.DirectoryServices.ResultPropertyCollection.Contains(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: CopyTo(ResultPropertyValueCollection[],Int32)\n  nameWithType: ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[],Int32)\n  fullName: System.DirectoryServices.ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[],Int32)\n- uid: System.DirectoryServices.ResultPropertyValueCollection[]\n  parent: System.DirectoryServices\n  isExternal: false\n  name: ResultPropertyValueCollection\n  nameWithType: ResultPropertyValueCollection\n  fullName: System.DirectoryServices.ResultPropertyValueCollection[]\n  spec.csharp:\n  - uid: System.DirectoryServices.ResultPropertyValueCollection\n    name: ResultPropertyValueCollection\n    nameWithType: ResultPropertyValueCollection\n    fullName: ResultPropertyValueCollection[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.ResultPropertyCollection.Item(System.String)\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: ResultPropertyCollection.Item(String)\n  fullName: System.DirectoryServices.ResultPropertyCollection.Item(String)\n- uid: System.DirectoryServices.ResultPropertyValueCollection\n  parent: System.DirectoryServices\n  isExternal: false\n  name: ResultPropertyValueCollection\n  nameWithType: ResultPropertyValueCollection\n  fullName: System.DirectoryServices.ResultPropertyValueCollection\n- uid: System.DirectoryServices.ResultPropertyCollection.PropertyNames\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: PropertyNames\n  nameWithType: ResultPropertyCollection.PropertyNames\n  fullName: System.DirectoryServices.ResultPropertyCollection.PropertyNames\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: true\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.DirectoryServices.ResultPropertyCollection.Values\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: Values\n  nameWithType: ResultPropertyCollection.Values\n  fullName: System.DirectoryServices.ResultPropertyCollection.Values\n- uid: System.DirectoryServices.ResultPropertyCollection.Contains*\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: Contains\n  nameWithType: ResultPropertyCollection.Contains\n- uid: System.DirectoryServices.ResultPropertyCollection.CopyTo*\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: ResultPropertyCollection.CopyTo\n- uid: System.DirectoryServices.ResultPropertyCollection.Item*\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: Item\n  nameWithType: ResultPropertyCollection.Item\n- uid: System.DirectoryServices.ResultPropertyCollection.PropertyNames*\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: PropertyNames\n  nameWithType: ResultPropertyCollection.PropertyNames\n- uid: System.DirectoryServices.ResultPropertyCollection.Values*\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: Values\n  nameWithType: ResultPropertyCollection.Values\n"}