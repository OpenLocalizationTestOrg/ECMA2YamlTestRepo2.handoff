{"nodes":[{"pos":[1064,1176],"content":"Represents the default settings used to create connections to a remote computer. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the default settings used to create connections to a remote computer. This class cannot be inherited.","pos":[0,112],"nodes":[{"content":"Represents the default settings used to create connections to a remote computer.","pos":[0,80]},{"content":"This class cannot be inherited.","pos":[81,112]}]}]},{"pos":[5002,5115],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Configuration.ServicePointManagerElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Configuration.ServicePointManagerElement\"></xref> class."},{"pos":[5765,5862],"content":"Gets or sets a Boolean value that controls checking host name information in an X509 certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that controls checking host name information in an X509 certificate.","pos":[0,97]}]},{"pos":[5991,6157],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to specify host name checking; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to specify host name checking; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6792,6921],"content":"Gets or sets a Boolean value that indicates whether the certificate is checked against the certificate authority revocation list.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that indicates whether the certificate is checked against the certificate authority revocation list.","pos":[0,129]}]},{"pos":[6933,7093],"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, the certificate is checked against the certificate authority revocation list as part of the certificate validation process.","needQuote":true,"needEscape":true,"extradata":"MT","source":"When this property is set to `true`, the certificate is checked against the certificate authority revocation list as part of the certificate validation process."},{"pos":[7232,7498],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the certificate revocation list is checked; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.The default value is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the certificate revocation list is checked; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8078,8155],"content":"Gets or sets the amount of time after which address information is refreshed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the amount of time after which address information is refreshed.","pos":[0,77]}]},{"pos":[8167,8271],"content":"The value of this property sets the <xref:System.Net.ServicePointManager.DnsRefreshTimeout%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of this property sets the &lt;xref:System.Net.ServicePointManager.DnsRefreshTimeout%2A&gt; property.","pos":[0,104],"source":"The value of this property sets the <xref:System.Net.ServicePointManager.DnsRefreshTimeout%2A> property."}]},{"pos":[8394,8472],"content":"A <xref:System.TimeSpan> that specifies when addresses are resolved using DNS.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that specifies when addresses are resolved using DNS.","pos":[0,78],"source":"A <xref:System.TimeSpan> that specifies when addresses are resolved using DNS."}]},{"pos":[9049,9155],"content":"Gets or sets a Boolean value that controls using different IP addresses on connections to the same server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that controls using different IP addresses on connections to the same server.","pos":[0,106]}]},{"pos":[9283,9454],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to enable DNS round-robin behavior; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to enable DNS round-robin behavior; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10018,10100],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Net.Security.EncryptionPolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Net.Security.EncryptionPolicy\"></xref> to use."},{"pos":[10112,10444],"content":"The <xref:System.Net.Security.EncryptionPolicy> property can require, allow, or prevent encryption. The <xref:System.Net.Security.EncryptionPolicy> will be applied to an SSL/TLS session. The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Net.Security.EncryptionPolicy> property can require, allow, or prevent encryption. The <xref:System.Net.Security.EncryptionPolicy> will be applied to an SSL/TLS session. The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.","pos":[0,332],"nodes":[{"content":"The &lt;xref:System.Net.Security.EncryptionPolicy&gt; property can require, allow, or prevent encryption.","pos":[0,99],"source":"The <xref:System.Net.Security.EncryptionPolicy> property can require, allow, or prevent encryption."},{"content":"The &lt;xref:System.Net.Security.EncryptionPolicy&gt; will be applied to an SSL/TLS session.","pos":[100,186],"source":" The <xref:System.Net.Security.EncryptionPolicy> will be applied to an SSL/TLS session."},{"content":"The use of the Null cipher is required when the encryption policy is set to &lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;.","pos":[187,332],"source":" The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>."}]}]},{"pos":[10623,10719],"content":"The encryption policy to use for a <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePointManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"The encryption policy to use for a <xref href=\"System.Net.ServicePointManager\"></xref> instance."},{"pos":[11285,11368],"content":"Gets or sets a Boolean value that determines whether 100-Continue behavior is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that determines whether 100-Continue behavior is used.","pos":[0,83]}]},{"pos":[11381,11870],"content":"When this property is set to `true`, client requests that use the `POST` method expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted. This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.       For additional information, see <xref:System.Net.ServicePointManager.Expect100Continue%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, client requests that use the <ph id=\"ph2\">`POST`</ph> method expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted.","pos":[0,200],"source":"When this property is set to `true`, client requests that use the `POST` method expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted."},{"content":"This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.","pos":[201,364]},{"content":"For additional information, see &lt;xref:System.Net.ServicePointManager.Expect100Continue%2A?displayProperty=fullName&gt;.","pos":[371,487],"source":"       For additional information, see <xref:System.Net.ServicePointManager.Expect100Continue%2A?displayProperty=fullName>."}]},{"pos":[11997,12323],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to expect 100-Continue responses for <xref uid=\"langword_csharp_POST\" name=\"POST\" href=\"\"></xref> requests; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to expect 100-Continue responses for <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_POST\" name=\"POST\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> requests; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,243],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to expect 100-Continue responses for <xref uid=\"langword_csharp_POST\" name=\"POST\" href=\"\"></xref> requests; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[244,326],"source":" The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[13688,13700],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14260,14341],"content":"Gets or sets a Boolean value that determines whether the Nagle algorithm is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that determines whether the Nagle algorithm is used.","pos":[0,81]}]},{"pos":[14353,14637],"content":"The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet. This process is also referred to as \"nagling\"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet. This process is also referred to as \"nagling\"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.","pos":[0,284],"nodes":[{"content":"The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet.","pos":[0,130]},{"content":"This process is also referred to as \"nagling\"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.","pos":[131,284]}]}]},{"pos":[14763,15009],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use the Nagle algorithm; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use the Nagle algorithm; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,163],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use the Nagle algorithm; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[164,246],"source":" The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Configuration.ServicePointManagerElement\n  id: ServicePointManagerElement\n  children:\n  - System.Net.Configuration.ServicePointManagerElement.#ctor\n  - System.Net.Configuration.ServicePointManagerElement.CheckCertificateName\n  - System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList\n  - System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout\n  - System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin\n  - System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy\n  - System.Net.Configuration.ServicePointManagerElement.Expect100Continue\n  - System.Net.Configuration.ServicePointManagerElement.PostDeserialize\n  - System.Net.Configuration.ServicePointManagerElement.Properties\n  - System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm\n  langs:\n  - csharp\n  name: ServicePointManagerElement\n  nameWithType: ServicePointManagerElement\n  fullName: System.Net.Configuration.ServicePointManagerElement\n  type: Class\n  summary: Represents the default settings used to create connections to a remote computer. This class cannot be inherited.\n  remarks: \"This class corresponds to the `servicePointManager` attribute of the `settings`[\\\\&lt;servicePointManager\\\\&gt; Element (Network Settings)](../Topic/%3CservicePointManager%3E%20Element%20\\\\(Network%20Settings\\\\).md) configuration element.  \\n  \\n This class is used to specify the values that are used to initialize new <xref:System.Net.ServicePoint> objects.  \\n  \\n This class provides programmatic access to information that can be stored in configuration files.\"\n  syntax:\n    content: 'public sealed class ServicePointManagerElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.Net.Configuration.ServicePointManagerElement.#ctor\n  id: '#ctor'\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: ServicePointManagerElement()\n  nameWithType: ServicePointManagerElement.ServicePointManagerElement()\n  fullName: System.Net.Configuration.ServicePointManagerElement.ServicePointManagerElement()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Net.Configuration.ServicePointManagerElement\"></xref> class.\n  syntax:\n    content: public ServicePointManagerElement ();\n    parameters: []\n  overload: System.Net.Configuration.ServicePointManagerElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateName\n  id: CheckCertificateName\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: CheckCertificateName\n  nameWithType: ServicePointManagerElement.CheckCertificateName\n  fullName: System.Net.Configuration.ServicePointManagerElement.CheckCertificateName\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets a Boolean value that controls checking host name information in an X509 certificate.\n  syntax:\n    content: public bool CheckCertificateName { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to specify host name checking; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Configuration.ServicePointManagerElement.CheckCertificateName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList\n  id: CheckCertificateRevocationList\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: CheckCertificateRevocationList\n  nameWithType: ServicePointManagerElement.CheckCertificateRevocationList\n  fullName: System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets a Boolean value that indicates whether the certificate is checked against the certificate authority revocation list.\n  remarks: When this property is set to `true`, the certificate is checked against the certificate authority revocation list as part of the certificate validation process.\n  syntax:\n    content: public bool CheckCertificateRevocationList { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the certificate revocation list is checked; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout\n  id: DnsRefreshTimeout\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: DnsRefreshTimeout\n  nameWithType: ServicePointManagerElement.DnsRefreshTimeout\n  fullName: System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets the amount of time after which address information is refreshed.\n  remarks: The value of this property sets the <xref:System.Net.ServicePointManager.DnsRefreshTimeout%2A> property.\n  syntax:\n    content: public int DnsRefreshTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: A <xref:System.TimeSpan> that specifies when addresses are resolved using DNS.\n  overload: System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin\n  id: EnableDnsRoundRobin\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: EnableDnsRoundRobin\n  nameWithType: ServicePointManagerElement.EnableDnsRoundRobin\n  fullName: System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets a Boolean value that controls using different IP addresses on connections to the same server.\n  syntax:\n    content: public bool EnableDnsRoundRobin { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to enable DNS round-robin behavior; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy\n  id: EncryptionPolicy\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: EncryptionPolicy\n  nameWithType: ServicePointManagerElement.EncryptionPolicy\n  fullName: System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets the <xref href=\"System.Net.Security.EncryptionPolicy\"></xref> to use.\n  remarks: The <xref:System.Net.Security.EncryptionPolicy> property can require, allow, or prevent encryption. The <xref:System.Net.Security.EncryptionPolicy> will be applied to an SSL/TLS session. The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.\n  syntax:\n    content: public System.Net.Security.EncryptionPolicy EncryptionPolicy { get; set; }\n    return:\n      type: System.Net.Security.EncryptionPolicy\n      description: The encryption policy to use for a <xref href=\"System.Net.ServicePointManager\"></xref> instance.\n  overload: System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.ServicePointManagerElement.Expect100Continue\n  id: Expect100Continue\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: Expect100Continue\n  nameWithType: ServicePointManagerElement.Expect100Continue\n  fullName: System.Net.Configuration.ServicePointManagerElement.Expect100Continue\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets a Boolean value that determines whether 100-Continue behavior is used.\n  remarks: \"When this property is set to `true`, client requests that use the `POST` method expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted. This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.  \\n  \\n For additional information, see <xref:System.Net.ServicePointManager.Expect100Continue%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public bool Expect100Continue { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to expect 100-Continue responses for <xref uid=\"langword_csharp_POST\" name=\"POST\" href=\"\"></xref> requests; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Net.Configuration.ServicePointManagerElement.Expect100Continue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.ServicePointManagerElement.PostDeserialize\n  id: PostDeserialize\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: PostDeserialize()\n  nameWithType: ServicePointManagerElement.PostDeserialize()\n  fullName: System.Net.Configuration.ServicePointManagerElement.PostDeserialize()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  syntax:\n    content: protected override void PostDeserialize ();\n    parameters: []\n  overload: System.Net.Configuration.ServicePointManagerElement.PostDeserialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.ServicePointManagerElement.Properties\n  id: Properties\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: ServicePointManagerElement.Properties\n  fullName: System.Net.Configuration.ServicePointManagerElement.Properties\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.Net.Configuration.ServicePointManagerElement.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm\n  id: UseNagleAlgorithm\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: UseNagleAlgorithm\n  nameWithType: ServicePointManagerElement.UseNagleAlgorithm\n  fullName: System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets a Boolean value that determines whether the Nagle algorithm is used.\n  remarks: The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet. This process is also referred to as \"nagling\"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.\n  syntax:\n    content: public bool UseNagleAlgorithm { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use the Nagle algorithm; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.Net.Configuration.ServicePointManagerElement.#ctor\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: ServicePointManagerElement()\n  nameWithType: ServicePointManagerElement.ServicePointManagerElement()\n  fullName: System.Net.Configuration.ServicePointManagerElement.ServicePointManagerElement()\n- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateName\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: CheckCertificateName\n  nameWithType: ServicePointManagerElement.CheckCertificateName\n  fullName: System.Net.Configuration.ServicePointManagerElement.CheckCertificateName\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: CheckCertificateRevocationList\n  nameWithType: ServicePointManagerElement.CheckCertificateRevocationList\n  fullName: System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList\n- uid: System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: DnsRefreshTimeout\n  nameWithType: ServicePointManagerElement.DnsRefreshTimeout\n  fullName: System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: EnableDnsRoundRobin\n  nameWithType: ServicePointManagerElement.EnableDnsRoundRobin\n  fullName: System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin\n- uid: System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: EncryptionPolicy\n  nameWithType: ServicePointManagerElement.EncryptionPolicy\n  fullName: System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy\n- uid: System.Net.Security.EncryptionPolicy\n  parent: System.Net.Security\n  isExternal: false\n  name: EncryptionPolicy\n  nameWithType: EncryptionPolicy\n  fullName: System.Net.Security.EncryptionPolicy\n- uid: System.Net.Configuration.ServicePointManagerElement.Expect100Continue\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: Expect100Continue\n  nameWithType: ServicePointManagerElement.Expect100Continue\n  fullName: System.Net.Configuration.ServicePointManagerElement.Expect100Continue\n- uid: System.Net.Configuration.ServicePointManagerElement.PostDeserialize\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ServicePointManagerElement.PostDeserialize()\n  fullName: System.Net.Configuration.ServicePointManagerElement.PostDeserialize()\n- uid: System.Net.Configuration.ServicePointManagerElement.Properties\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: Properties\n  nameWithType: ServicePointManagerElement.Properties\n  fullName: System.Net.Configuration.ServicePointManagerElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: UseNagleAlgorithm\n  nameWithType: ServicePointManagerElement.UseNagleAlgorithm\n  fullName: System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm\n- uid: System.Net.Configuration.ServicePointManagerElement.#ctor*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: ServicePointManagerElement\n  nameWithType: ServicePointManagerElement.ServicePointManagerElement\n- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateName*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: CheckCertificateName\n  nameWithType: ServicePointManagerElement.CheckCertificateName\n- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: CheckCertificateRevocationList\n  nameWithType: ServicePointManagerElement.CheckCertificateRevocationList\n- uid: System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: DnsRefreshTimeout\n  nameWithType: ServicePointManagerElement.DnsRefreshTimeout\n- uid: System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: EnableDnsRoundRobin\n  nameWithType: ServicePointManagerElement.EnableDnsRoundRobin\n- uid: System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: EncryptionPolicy\n  nameWithType: ServicePointManagerElement.EncryptionPolicy\n- uid: System.Net.Configuration.ServicePointManagerElement.Expect100Continue*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: Expect100Continue\n  nameWithType: ServicePointManagerElement.Expect100Continue\n- uid: System.Net.Configuration.ServicePointManagerElement.PostDeserialize*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: PostDeserialize\n  nameWithType: ServicePointManagerElement.PostDeserialize\n- uid: System.Net.Configuration.ServicePointManagerElement.Properties*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: Properties\n  nameWithType: ServicePointManagerElement.Properties\n- uid: System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: UseNagleAlgorithm\n  nameWithType: ServicePointManagerElement.UseNagleAlgorithm\n"}