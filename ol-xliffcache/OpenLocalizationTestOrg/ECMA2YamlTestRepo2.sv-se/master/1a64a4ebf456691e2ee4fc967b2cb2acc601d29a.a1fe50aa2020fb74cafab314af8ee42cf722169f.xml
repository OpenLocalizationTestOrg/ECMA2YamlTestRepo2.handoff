{"nodes":[{"pos":[559,661],"content":"Represents an expression used as a method invoke parameter along with a reference direction indicator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an expression used as a method invoke parameter along with a reference direction indicator.","pos":[0,102]}]},{"pos":[674,1255],"content":"CodeDirectionExpression can represent a parameter passed to a method and the reference direction of the parameter.       The <xref:System.CodeDom.CodeDirectionExpression.Expression%2A> property indicates the expression to qualify with a direction. The <xref:System.CodeDom.CodeDirectionExpression.Direction%2A> property indicates the direction of the parameter using one of the <xref:System.CodeDom.FieldDirection> enumeration values.      > [!NOTE] >  CodeDirectionExpression is intended to be used as a method invoke parameter, and should not be used when declaring methods.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"CodeDirectionExpression can represent a parameter passed to a method and the reference direction of the parameter.","pos":[0,114]},{"content":"The &lt;xref:System.CodeDom.CodeDirectionExpression.Expression%2A&gt; property indicates the expression to qualify with a direction.","pos":[121,247],"source":"       The <xref:System.CodeDom.CodeDirectionExpression.Expression%2A> property indicates the expression to qualify with a direction."},{"content":"The &lt;xref:System.CodeDom.CodeDirectionExpression.Direction%2A&gt; property indicates the direction of the parameter using one of the &lt;xref:System.CodeDom.FieldDirection&gt; enumeration values.","pos":[248,434],"source":" The <xref:System.CodeDom.CodeDirectionExpression.Direction%2A> property indicates the direction of the parameter using one of the <xref:System.CodeDom.FieldDirection> enumeration values."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  CodeDirectionExpression is intended to be used as a method invoke parameter, and should not be used when declaring methods.","pos":[440,576],"source":"      > [!NOTE] >  CodeDirectionExpression is intended to be used as a method invoke parameter, and should not be used when declaring methods."}]},{"pos":[2581,2681],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeDirectionExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeDirectionExpression\"></xref> class."},{"pos":[3462,3613],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeDirectionExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified field direction and expression.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeDirectionExpression\"></xref> class using the specified field direction and expression."},{"pos":[3850,3956],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.FieldDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the field direction of the expression.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.FieldDirection\"></xref> that indicates the field direction of the expression."},{"pos":[4039,4140],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the code expression to represent.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the code expression to represent."},{"pos":[4590,4653],"content":"Gets or sets the field direction for this direction expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the field direction for this direction expression.","pos":[0,63]}]},{"pos":[4811,4929],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.FieldDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the field direction for this direction expression.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.FieldDirection\"></xref> that indicates the field direction for this direction expression."},{"pos":[5388,5434],"content":"Gets or sets the code expression to represent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the code expression to represent.","pos":[0,46]}]},{"pos":[5593,5689],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the expression to represent.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the expression to represent."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeDirectionExpression\n  id: CodeDirectionExpression\n  children:\n  - System.CodeDom.CodeDirectionExpression.#ctor\n  - System.CodeDom.CodeDirectionExpression.#ctor(System.CodeDom.FieldDirection,System.CodeDom.CodeExpression)\n  - System.CodeDom.CodeDirectionExpression.Direction\n  - System.CodeDom.CodeDirectionExpression.Expression\n  langs:\n  - csharp\n  name: CodeDirectionExpression\n  nameWithType: CodeDirectionExpression\n  fullName: System.CodeDom.CodeDirectionExpression\n  type: Class\n  summary: Represents an expression used as a method invoke parameter along with a reference direction indicator.\n  remarks: \"CodeDirectionExpression can represent a parameter passed to a method and the reference direction of the parameter.  \\n  \\n The <xref:System.CodeDom.CodeDirectionExpression.Expression%2A> property indicates the expression to qualify with a direction. The <xref:System.CodeDom.CodeDirectionExpression.Direction%2A> property indicates the direction of the parameter using one of the <xref:System.CodeDom.FieldDirection> enumeration values.  \\n  \\n> [!NOTE]\\n>  CodeDirectionExpression is intended to be used as a method invoke parameter, and should not be used when declaring methods.\"\n  example:\n  - \"The following example demonstrates use of a CodeDirectionExpression to specify a field direction modifier for an expression to pass as a method parameter.  \\n  \\n [!code-vb[CodeMultiExample#4](~/add/codesnippet/visualbasic/t-system.codedom.codedir_1_1.vb)]\\n [!code-cpp[CodeMultiExample#4](~/add/codesnippet/cpp/t-system.codedom.codedir_1_1.cpp)]\\n [!code-cs[CodeMultiExample#4](~/add/codesnippet/csharp/t-system.codedom.codedir_1_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeDirectionExpression : System.CodeDom.CodeExpression\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  - System.CodeDom.CodeExpression\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeObject.UserData\n  platform:\n  - net462\n- uid: System.CodeDom.CodeDirectionExpression.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeDirectionExpression\n  langs:\n  - csharp\n  name: CodeDirectionExpression()\n  nameWithType: CodeDirectionExpression.CodeDirectionExpression()\n  fullName: System.CodeDom.CodeDirectionExpression.CodeDirectionExpression()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeDirectionExpression\"></xref> class.\n  syntax:\n    content: public CodeDirectionExpression ();\n    parameters: []\n  overload: System.CodeDom.CodeDirectionExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeDirectionExpression.#ctor(System.CodeDom.FieldDirection,System.CodeDom.CodeExpression)\n  id: '#ctor(System.CodeDom.FieldDirection,System.CodeDom.CodeExpression)'\n  parent: System.CodeDom.CodeDirectionExpression\n  langs:\n  - csharp\n  name: CodeDirectionExpression(FieldDirection,CodeExpression)\n  nameWithType: CodeDirectionExpression.CodeDirectionExpression(FieldDirection,CodeExpression)\n  fullName: System.CodeDom.CodeDirectionExpression.CodeDirectionExpression(FieldDirection,CodeExpression)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeDirectionExpression\"></xref> class using the specified field direction and expression.\n  syntax:\n    content: public CodeDirectionExpression (System.CodeDom.FieldDirection direction, System.CodeDom.CodeExpression expression);\n    parameters:\n    - id: direction\n      type: System.CodeDom.FieldDirection\n      description: A <xref href=\"System.CodeDom.FieldDirection\"></xref> that indicates the field direction of the expression.\n    - id: expression\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the code expression to represent.\n  overload: System.CodeDom.CodeDirectionExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeDirectionExpression.Direction\n  id: Direction\n  parent: System.CodeDom.CodeDirectionExpression\n  langs:\n  - csharp\n  name: Direction\n  nameWithType: CodeDirectionExpression.Direction\n  fullName: System.CodeDom.CodeDirectionExpression.Direction\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the field direction for this direction expression.\n  syntax:\n    content: public System.CodeDom.FieldDirection Direction { get; set; }\n    return:\n      type: System.CodeDom.FieldDirection\n      description: A <xref href=\"System.CodeDom.FieldDirection\"></xref> that indicates the field direction for this direction expression.\n  overload: System.CodeDom.CodeDirectionExpression.Direction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeDirectionExpression.Expression\n  id: Expression\n  parent: System.CodeDom.CodeDirectionExpression\n  langs:\n  - csharp\n  name: Expression\n  nameWithType: CodeDirectionExpression.Expression\n  fullName: System.CodeDom.CodeDirectionExpression.Expression\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the code expression to represent.\n  syntax:\n    content: public System.CodeDom.CodeExpression Expression { get; set; }\n    return:\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the expression to represent.\n  overload: System.CodeDom.CodeDirectionExpression.Expression*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.CodeDom.CodeExpression\n  isExternal: false\n  name: System.CodeDom.CodeExpression\n- uid: System.CodeDom.CodeDirectionExpression.#ctor\n  parent: System.CodeDom.CodeDirectionExpression\n  isExternal: false\n  name: CodeDirectionExpression()\n  nameWithType: CodeDirectionExpression.CodeDirectionExpression()\n  fullName: System.CodeDom.CodeDirectionExpression.CodeDirectionExpression()\n- uid: System.CodeDom.CodeDirectionExpression.#ctor(System.CodeDom.FieldDirection,System.CodeDom.CodeExpression)\n  parent: System.CodeDom.CodeDirectionExpression\n  isExternal: false\n  name: CodeDirectionExpression(FieldDirection,CodeExpression)\n  nameWithType: CodeDirectionExpression.CodeDirectionExpression(FieldDirection,CodeExpression)\n  fullName: System.CodeDom.CodeDirectionExpression.CodeDirectionExpression(FieldDirection,CodeExpression)\n- uid: System.CodeDom.FieldDirection\n  parent: System.CodeDom\n  isExternal: false\n  name: FieldDirection\n  nameWithType: FieldDirection\n  fullName: System.CodeDom.FieldDirection\n- uid: System.CodeDom.CodeDirectionExpression.Direction\n  parent: System.CodeDom.CodeDirectionExpression\n  isExternal: false\n  name: Direction\n  nameWithType: CodeDirectionExpression.Direction\n  fullName: System.CodeDom.CodeDirectionExpression.Direction\n- uid: System.CodeDom.CodeDirectionExpression.Expression\n  parent: System.CodeDom.CodeDirectionExpression\n  isExternal: false\n  name: Expression\n  nameWithType: CodeDirectionExpression.Expression\n  fullName: System.CodeDom.CodeDirectionExpression.Expression\n- uid: System.CodeDom.CodeDirectionExpression.#ctor*\n  parent: System.CodeDom.CodeDirectionExpression\n  isExternal: false\n  name: CodeDirectionExpression\n  nameWithType: CodeDirectionExpression.CodeDirectionExpression\n- uid: System.CodeDom.CodeDirectionExpression.Direction*\n  parent: System.CodeDom.CodeDirectionExpression\n  isExternal: false\n  name: Direction\n  nameWithType: CodeDirectionExpression.Direction\n- uid: System.CodeDom.CodeDirectionExpression.Expression*\n  parent: System.CodeDom.CodeDirectionExpression\n  isExternal: false\n  name: Expression\n  nameWithType: CodeDirectionExpression.Expression\n"}