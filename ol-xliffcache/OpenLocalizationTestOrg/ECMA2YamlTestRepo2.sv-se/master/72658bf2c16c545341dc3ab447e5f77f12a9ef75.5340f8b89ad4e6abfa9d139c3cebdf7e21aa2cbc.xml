{"nodes":[{"pos":[768,940],"content":"Provides properties for accessing the current state of the keyboard, such as what keys are currently pressed, and provides a method to send keystrokes to the active window.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides properties for accessing the current state of the keyboard, such as what keys are currently pressed, and provides a method to send keystrokes to the active window.","pos":[0,172]}]},{"pos":[953,1851],"content":"The `My.Computer.Keyboard` object provides an interface to the computer's keyboard. The properties of the `My.Computer.Keyboard` provide information about the state of several special keys. The `My.Computer.Keyboard.SendKeys` method lets you send keys to the active window as if they have been typed at the keyboard.      ## Tasks    The following table lists an example of a task involving the `My.Computer.Keyboard` object.      |||   |-|-|   |To|See|   |Send keystrokes to an application|[How to: Start an Application and Send it Keystrokes (Visual Basic)](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Keyboard`</ph> object provides an interface to the computer's keyboard.","pos":[0,83],"source":"The `My.Computer.Keyboard` object provides an interface to the computer's keyboard."},{"content":"The properties of the <ph id=\"ph1\">`My.Computer.Keyboard`</ph> provide information about the state of several special keys.","pos":[84,189],"source":" The properties of the `My.Computer.Keyboard` provide information about the state of several special keys."},{"content":"The <ph id=\"ph1\">`My.Computer.Keyboard.SendKeys`</ph> method lets you send keys to the active window as if they have been typed at the keyboard.","pos":[190,316],"source":" The `My.Computer.Keyboard.SendKeys` method lets you send keys to the active window as if they have been typed at the keyboard."},{"content":"Tasks    The following table lists an example of a task involving the <ph id=\"ph1\">`My.Computer.Keyboard`</ph> object.","pos":[325,425],"source":"      ## Tasks    The following table lists an example of a task involving the `My.Computer.Keyboard` object."},{"content":"|||   |-|-|   |To|See|   |Send keystrokes to an application|<bpt id=\"p1\">[</bpt>How to: Start an Application and Send it Keystrokes (Visual Basic)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept>|   |Class Library|<bpt id=\"p3\">**</bpt>Yes<ept id=\"p3\">**</ept>|   |Console Application|<bpt id=\"p4\">**</bpt>Yes<ept id=\"p4\">**</ept>|   |Windows Control Library|<bpt id=\"p5\">**</bpt>Yes<ept id=\"p5\">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id=\"p6\">**</bpt>Yes<ept id=\"p6\">**</ept>|   |Web Site|No|","pos":[431,877],"source":"      |||   |-|-|   |To|See|   |Send keystrokes to an application|[How to: Start an Application and Send it Keystrokes (Visual Basic)](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"}]},{"pos":[2598,2698],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.Devices.Keyboard\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Devices.Keyboard\"></xref> class."},{"pos":[3230,3338],"content":"Gets a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicating if the ALT key is down.","needQuote":true,"needEscape":true,"source":"Gets a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> indicating if the ALT key is down."},{"pos":[3351,3788],"content":"The `My.Computer.Keyboard.AltKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property.      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Keyboard.AltKeyDown`</ph> property provides functionality similar to the &lt;xref:System.Windows.Forms.Control.ModifierKeys%2A&gt; property.","pos":[0,146],"source":"The `My.Computer.Keyboard.AltKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property."},{"content":"Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>|   |Class Library|<bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept>|   |Console Application|<bpt id=\"p3\">**</bpt>Yes<ept id=\"p3\">**</ept>|   |Windows Control Library|<bpt id=\"p4\">**</bpt>Yes<ept id=\"p4\">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id=\"p5\">**</bpt>Yes<ept id=\"p5\">**</ept>|   |Web Site|No|","pos":[155,424],"source":"      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"}]},{"pos":[4137,4371],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value: <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the ALT key is down; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":false,"needEscape":true,"source":"A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the ALT key is down; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>."},{"pos":[4837,4948],"content":"Gets a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicating if CAPS LOCK is turned on.","needQuote":true,"needEscape":true,"source":"Gets a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> indicating if CAPS LOCK is turned on."},{"pos":[4961,5292],"content":"Only the state of CAPS LOCK is returned.      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Only the state of CAPS LOCK is returned.","pos":[0,40]},{"content":"Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>|   |Class Library|<bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept>|   |Console Application|<bpt id=\"p3\">**</bpt>Yes<ept id=\"p3\">**</ept>|   |Windows Control Library|<bpt id=\"p4\">**</bpt>Yes<ept id=\"p4\">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id=\"p5\">**</bpt>Yes<ept id=\"p5\">**</ept>|   |Web Site|No|","pos":[49,318],"source":"      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"}]},{"pos":[5644,5881],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value: <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if CAPS LOCK is turned on; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":false,"needEscape":true,"source":"A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if CAPS LOCK is turned on; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>."},{"pos":[6360,6467],"content":"Gets a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicating if a CTRL key is down.","needQuote":true,"needEscape":true,"source":"Gets a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> indicating if a CTRL key is down."},{"pos":[6480,6918],"content":"The `My.Computer.Keyboard.CtrlKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property.      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Keyboard.CtrlKeyDown`</ph> property provides functionality similar to the &lt;xref:System.Windows.Forms.Control.ModifierKeys%2A&gt; property.","pos":[0,147],"source":"The `My.Computer.Keyboard.CtrlKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property."},{"content":"Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>|   |Class Library|<bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept>|   |Console Application|<bpt id=\"p3\">**</bpt>Yes<ept id=\"p3\">**</ept>|   |Windows Control Library|<bpt id=\"p4\">**</bpt>Yes<ept id=\"p4\">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id=\"p5\">**</bpt>Yes<ept id=\"p5\">**</ept>|   |Web Site|No|","pos":[156,425],"source":"      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"}]},{"pos":[7269,7502],"content":"A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value. <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if a CTRL key is down; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","pos":[0,75],"source":"A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a CTRL key is down; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[76,233],"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if a CTRL key is down; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>."}]},{"pos":[7963,8074],"content":"Gets a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicating if the NUM LOCK key is on.","needQuote":true,"needEscape":true,"source":"Gets a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> indicating if the NUM LOCK key is on."},{"pos":[8087,8425],"content":"Only the state of the NUM LOCK key is returned.      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Only the state of the NUM LOCK key is returned.","pos":[0,47]},{"content":"Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>|   |Class Library|<bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept>|   |Console Application|<bpt id=\"p3\">**</bpt>Yes<ept id=\"p3\">**</ept>|   |Windows Control Library|<bpt id=\"p4\">**</bpt>Yes<ept id=\"p4\">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id=\"p5\">**</bpt>Yes<ept id=\"p5\">**</ept>|   |Web Site|No|","pos":[56,325],"source":"      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"}]},{"pos":[8770,8999],"content":"A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value. <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if NUM LOCK is on; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","pos":[0,75],"source":"A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if NUM LOCK is on; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[76,229],"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if NUM LOCK is on; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>."}]},{"pos":[9471,9590],"content":"Gets a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicating whether the SCROLL LOCK key is on.","needQuote":true,"needEscape":true,"source":"Gets a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> indicating whether the SCROLL LOCK key is on."},{"pos":[9603,9944],"content":"Only the state of the SCROLL LOCK key is returned.      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Only the state of the SCROLL LOCK key is returned.","pos":[0,50]},{"content":"Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>|   |Class Library|<bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept>|   |Console Application|<bpt id=\"p3\">**</bpt>Yes<ept id=\"p3\">**</ept>|   |Windows Control Library|<bpt id=\"p4\">**</bpt>Yes<ept id=\"p4\">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id=\"p5\">**</bpt>Yes<ept id=\"p5\">**</ept>|   |Web Site|No|","pos":[59,328],"source":"      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"}]},{"pos":[10298,10530],"content":"A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value. <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if SCROLL LOCK is on; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","pos":[0,75],"source":"A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if SCROLL LOCK is on; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[76,232],"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if SCROLL LOCK is on; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>."}]},{"pos":[11047,11126],"content":"Sends one or more keystrokes to the active window, as if typed on the keyboard.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sends one or more keystrokes to the active window, as if typed on the keyboard.","pos":[0,79]}]},{"pos":[11139,13573],"content":"The `My.Computer.Keyboard.SendKeys` method provides functionality similar to the <xref:System.Windows.Forms.SendKeys.Send%2A> and <xref:System.Windows.Forms.SendKeys.SendWait%2A> methods.       The `wait` argument is useful if the other application must finish before your application can continue.      > [!NOTE] >  Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications. For more information, see [Walkthrough: Calling Windows APIs](~/add/includes/ajax-current-ext-md.md).       The `keys` argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys). Each key is represented by one or more characters, such as `a` for the character \"a\", or `{ENTER}` for the ENTER key.       To combine a key with SHIFT, precede the key code with `+` (plus sign). To combine a key with CTRL, precede the key code with `^` (caret). To combine a key with ALT, precede the key code with `%` (percent sign). To specify repeating keys, use the form `{`*key number*`}`. You must put a space between *key* and *number*. For example, `{LEFT 42}` means \"press the LEFT ARROW key 42 times\"; `{h 10}` means \"press 'h' 10 times.\"       The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).      |||   |-|-|   |Key|Code|   |BACKSPACE|{BACKSPACE} or {BS}|   |BREAK|{BREAK}|   |CAPS LOCK|{CAPSLOCK}|   |CLEAR|{CLEAR}|   |DELETE|{DELETE} or {DEL}|   |DOWN ARROW|{DOWN}|   |END|{END}|   |ENTER (numeric keypad)|{ENTER}|   |ENTER|~|   |ESC|{ESCAPE} or {ESC}|   |HELP|{HELP}|   |HOME|{HOME}|   |INS|{INSERT}|   |LEFT ARROW|{LEFT}|   |NUM LOCK|{NUMLOCK}|   |PAGE DOWN|{PGDN}|   |PAGE UP|{PGUP}|   |RETURN|{RETURN}|   |RIGHT ARROW|{RIGHT}|   |SCROLL LOCK|{SCROLLLOCK}|   |TAB|{TAB}|   |UP ARROW|{UP}|   |F1 through F15|{F1} through {F15}|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Keyboard.SendKeys`</ph> method provides functionality similar to the &lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt; and &lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt; methods.","pos":[0,187],"source":"The `My.Computer.Keyboard.SendKeys` method provides functionality similar to the <xref:System.Windows.Forms.SendKeys.Send%2A> and <xref:System.Windows.Forms.SendKeys.SendWait%2A> methods."},{"content":"The <ph id=\"ph1\">`wait`</ph> argument is useful if the other application must finish before your application can continue.","pos":[194,298],"source":"       The `wait` argument is useful if the other application must finish before your application can continue."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as <ph id=\"ph2\">`FindWindow`</ph> and <ph id=\"ph3\">`SetForegroundWindow`</ph>, to force focus on other applications.","pos":[304,608],"source":"      > [!NOTE] >  Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Walkthrough: Calling Windows APIs<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[609,710],"source":" For more information, see [Walkthrough: Calling Windows APIs](~/add/includes/ajax-current-ext-md.md)."},{"content":"The <ph id=\"ph1\">`keys`</ph> argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys).","pos":[717,844],"source":"       The `keys` argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys)."},{"content":"Each key is represented by one or more characters, such as <ph id=\"ph1\">`a`</ph> for the character \"a\", or <ph id=\"ph2\">`{ENTER}`</ph> for the ENTER key.","pos":[845,962],"source":" Each key is represented by one or more characters, such as `a` for the character \"a\", or `{ENTER}` for the ENTER key."},{"content":"To combine a key with SHIFT, precede the key code with <ph id=\"ph1\">`+`</ph> (plus sign).","pos":[969,1040],"source":"       To combine a key with SHIFT, precede the key code with `+` (plus sign)."},{"content":"To combine a key with CTRL, precede the key code with <ph id=\"ph1\">`^`</ph> (caret).","pos":[1041,1107],"source":" To combine a key with CTRL, precede the key code with `^` (caret)."},{"content":"To combine a key with ALT, precede the key code with <ph id=\"ph1\">`%`</ph> (percent sign).","pos":[1108,1180],"source":" To combine a key with ALT, precede the key code with `%` (percent sign)."},{"content":"To specify repeating keys, use the form <ph id=\"ph1\">`{`</ph><bpt id=\"p1\">*</bpt>key number<ept id=\"p1\">*</ept><ph id=\"ph2\">`}`</ph>.","pos":[1181,1240],"source":" To specify repeating keys, use the form `{`*key number*`}`."},{"content":"You must put a space between <bpt id=\"p1\">*</bpt>key<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>number<ept id=\"p2\">*</ept>.","pos":[1241,1289],"source":" You must put a space between *key* and *number*."},{"content":"For example, <ph id=\"ph1\">`{LEFT 42}`</ph> means \"press the LEFT ARROW key 42 times\"; <ph id=\"ph2\">`{h 10}`</ph> means \"press 'h' 10 times.\"","pos":[1290,1394],"source":" For example, `{LEFT 42}` means \"press the LEFT ARROW key 42 times\"; `{h 10}` means \"press 'h' 10 times.\""},{"content":"The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).","pos":[1401,1559]},{"content":"|||   |-|-|   |Key|Code|   |BACKSPACE|{BACKSPACE} or {BS}|   |BREAK|{BREAK}|   |CAPS LOCK|{CAPSLOCK}|   |CLEAR|{CLEAR}|   |DELETE|{DELETE} or {DEL}|   |DOWN ARROW|{DOWN}|   |END|{END}|   |ENTER (numeric keypad)|{ENTER}|   |ENTER|~|   |ESC|{ESCAPE} or {ESC}|   |HELP|{HELP}|   |HOME|{HOME}|   |INS|{INSERT}|   |LEFT ARROW|{LEFT}|   |NUM LOCK|{NUMLOCK}|   |PAGE DOWN|{PGDN}|   |PAGE UP|{PGUP}|   |RETURN|{RETURN}|   |RIGHT ARROW|{RIGHT}|   |SCROLL LOCK|{SCROLLLOCK}|   |TAB|{TAB}|   |UP ARROW|{UP}|   |F1 through F15|{F1} through {F15}|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>|   |Class Library|<bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept>|   |Console Application|<bpt id=\"p3\">**</bpt>Yes<ept id=\"p3\">**</ept>|   |Windows Control Library|<bpt id=\"p4\">**</bpt>Yes<ept id=\"p4\">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id=\"p5\">**</bpt>Yes<ept id=\"p5\">**</ept>|   |Web Site|No|","pos":[1565,2377],"source":"      |||   |-|-|   |Key|Code|   |BACKSPACE|{BACKSPACE} or {BS}|   |BREAK|{BREAK}|   |CAPS LOCK|{CAPSLOCK}|   |CLEAR|{CLEAR}|   |DELETE|{DELETE} or {DEL}|   |DOWN ARROW|{DOWN}|   |END|{END}|   |ENTER (numeric keypad)|{ENTER}|   |ENTER|~|   |ESC|{ESCAPE} or {ESC}|   |HELP|{HELP}|   |HOME|{HOME}|   |INS|{INSERT}|   |LEFT ARROW|{LEFT}|   |NUM LOCK|{NUMLOCK}|   |PAGE DOWN|{PGDN}|   |PAGE UP|{PGUP}|   |RETURN|{RETURN}|   |RIGHT ARROW|{RIGHT}|   |SCROLL LOCK|{SCROLLLOCK}|   |TAB|{TAB}|   |UP ARROW|{UP}|   |F1 through F15|{F1} through {F15}|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"}]},{"pos":[14245,14342],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that defines the keys to send.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> that defines the keys to send."},{"pos":[14530,14609],"content":"A partial-trust situation exists in which the user lacks necessary permissions.","needQuote":true,"needEscape":true,"nodes":[{"content":"A partial-trust situation exists in which the user lacks necessary permissions.","pos":[0,79]}]},{"pos":[15100,15179],"content":"Sends one or more keystrokes to the active window, as if typed on the keyboard.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sends one or more keystrokes to the active window, as if typed on the keyboard.","pos":[0,79]}]},{"pos":[15192,17626],"content":"The `My.Computer.Keyboard.SendKeys` method provides functionality similar to the <xref:System.Windows.Forms.SendKeys.Send%2A> and <xref:System.Windows.Forms.SendKeys.SendWait%2A> methods.       The `wait` argument is useful if the other application must finish before your application can continue.      > [!NOTE] >  Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications. For more information, see [Walkthrough: Calling Windows APIs](~/add/includes/ajax-current-ext-md.md).       The `keys` argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys). Each key is represented by one or more characters, such as `a` for the character \"a\", or `{ENTER}` for the ENTER key.       To combine a key with SHIFT, precede the key code with `+` (plus sign). To combine a key with CTRL, precede the key code with `^` (caret). To combine a key with ALT, precede the key code with `%` (percent sign). To specify repeating keys, use the form `{`*key number*`}`. You must put a space between *key* and *number*. For example, `{LEFT 42}` means \"press the LEFT ARROW key 42 times\"; `{h 10}` means \"press 'h' 10 times.\"       The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).      |||   |-|-|   |Key|Code|   |BACKSPACE|{BACKSPACE} or {BS}|   |BREAK|{BREAK}|   |CAPS LOCK|{CAPSLOCK}|   |CLEAR|{CLEAR}|   |DELETE|{DELETE} or {DEL}|   |DOWN ARROW|{DOWN}|   |END|{END}|   |ENTER (numeric keypad)|{ENTER}|   |ENTER|~|   |ESC|{ESCAPE} or {ESC}|   |HELP|{HELP}|   |HOME|{HOME}|   |INS|{INSERT}|   |LEFT ARROW|{LEFT}|   |NUM LOCK|{NUMLOCK}|   |PAGE DOWN|{PGDN}|   |PAGE UP|{PGUP}|   |RETURN|{RETURN}|   |RIGHT ARROW|{RIGHT}|   |SCROLL LOCK|{SCROLLLOCK}|   |TAB|{TAB}|   |UP ARROW|{UP}|   |F1 through F15|{F1} through {F15}|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Keyboard.SendKeys`</ph> method provides functionality similar to the &lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt; and &lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt; methods.","pos":[0,187],"source":"The `My.Computer.Keyboard.SendKeys` method provides functionality similar to the <xref:System.Windows.Forms.SendKeys.Send%2A> and <xref:System.Windows.Forms.SendKeys.SendWait%2A> methods."},{"content":"The <ph id=\"ph1\">`wait`</ph> argument is useful if the other application must finish before your application can continue.","pos":[194,298],"source":"       The `wait` argument is useful if the other application must finish before your application can continue."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as <ph id=\"ph2\">`FindWindow`</ph> and <ph id=\"ph3\">`SetForegroundWindow`</ph>, to force focus on other applications.","pos":[304,608],"source":"      > [!NOTE] >  Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Walkthrough: Calling Windows APIs<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[609,710],"source":" For more information, see [Walkthrough: Calling Windows APIs](~/add/includes/ajax-current-ext-md.md)."},{"content":"The <ph id=\"ph1\">`keys`</ph> argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys).","pos":[717,844],"source":"       The `keys` argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys)."},{"content":"Each key is represented by one or more characters, such as <ph id=\"ph1\">`a`</ph> for the character \"a\", or <ph id=\"ph2\">`{ENTER}`</ph> for the ENTER key.","pos":[845,962],"source":" Each key is represented by one or more characters, such as `a` for the character \"a\", or `{ENTER}` for the ENTER key."},{"content":"To combine a key with SHIFT, precede the key code with <ph id=\"ph1\">`+`</ph> (plus sign).","pos":[969,1040],"source":"       To combine a key with SHIFT, precede the key code with `+` (plus sign)."},{"content":"To combine a key with CTRL, precede the key code with <ph id=\"ph1\">`^`</ph> (caret).","pos":[1041,1107],"source":" To combine a key with CTRL, precede the key code with `^` (caret)."},{"content":"To combine a key with ALT, precede the key code with <ph id=\"ph1\">`%`</ph> (percent sign).","pos":[1108,1180],"source":" To combine a key with ALT, precede the key code with `%` (percent sign)."},{"content":"To specify repeating keys, use the form <ph id=\"ph1\">`{`</ph><bpt id=\"p1\">*</bpt>key number<ept id=\"p1\">*</ept><ph id=\"ph2\">`}`</ph>.","pos":[1181,1240],"source":" To specify repeating keys, use the form `{`*key number*`}`."},{"content":"You must put a space between <bpt id=\"p1\">*</bpt>key<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>number<ept id=\"p2\">*</ept>.","pos":[1241,1289],"source":" You must put a space between *key* and *number*."},{"content":"For example, <ph id=\"ph1\">`{LEFT 42}`</ph> means \"press the LEFT ARROW key 42 times\"; <ph id=\"ph2\">`{h 10}`</ph> means \"press 'h' 10 times.\"","pos":[1290,1394],"source":" For example, `{LEFT 42}` means \"press the LEFT ARROW key 42 times\"; `{h 10}` means \"press 'h' 10 times.\""},{"content":"The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).","pos":[1401,1559]},{"content":"|||   |-|-|   |Key|Code|   |BACKSPACE|{BACKSPACE} or {BS}|   |BREAK|{BREAK}|   |CAPS LOCK|{CAPSLOCK}|   |CLEAR|{CLEAR}|   |DELETE|{DELETE} or {DEL}|   |DOWN ARROW|{DOWN}|   |END|{END}|   |ENTER (numeric keypad)|{ENTER}|   |ENTER|~|   |ESC|{ESCAPE} or {ESC}|   |HELP|{HELP}|   |HOME|{HOME}|   |INS|{INSERT}|   |LEFT ARROW|{LEFT}|   |NUM LOCK|{NUMLOCK}|   |PAGE DOWN|{PGDN}|   |PAGE UP|{PGUP}|   |RETURN|{RETURN}|   |RIGHT ARROW|{RIGHT}|   |SCROLL LOCK|{SCROLLLOCK}|   |TAB|{TAB}|   |UP ARROW|{UP}|   |F1 through F15|{F1} through {F15}|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>|   |Class Library|<bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept>|   |Console Application|<bpt id=\"p3\">**</bpt>Yes<ept id=\"p3\">**</ept>|   |Windows Control Library|<bpt id=\"p4\">**</bpt>Yes<ept id=\"p4\">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id=\"p5\">**</bpt>Yes<ept id=\"p5\">**</ept>|   |Web Site|No|","pos":[1565,2377],"source":"      |||   |-|-|   |Key|Code|   |BACKSPACE|{BACKSPACE} or {BS}|   |BREAK|{BREAK}|   |CAPS LOCK|{CAPSLOCK}|   |CLEAR|{CLEAR}|   |DELETE|{DELETE} or {DEL}|   |DOWN ARROW|{DOWN}|   |END|{END}|   |ENTER (numeric keypad)|{ENTER}|   |ENTER|~|   |ESC|{ESCAPE} or {ESC}|   |HELP|{HELP}|   |HOME|{HOME}|   |INS|{INSERT}|   |LEFT ARROW|{LEFT}|   |NUM LOCK|{NUMLOCK}|   |PAGE DOWN|{PGDN}|   |PAGE UP|{PGUP}|   |RETURN|{RETURN}|   |RIGHT ARROW|{RIGHT}|   |SCROLL LOCK|{SCROLLLOCK}|   |TAB|{TAB}|   |UP ARROW|{UP}|   |F1 through F15|{F1} through {F15}|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"}]},{"pos":[18309,18406],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that defines the keys to send.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> that defines the keys to send."},{"pos":[18468,18723],"content":"Optional. A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> that specifies whether or not to wait for keystrokes to get processed before the application continues. <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> by default.","needQuote":true,"needEscape":true,"nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies whether or not to wait for keystrokes to get processed before the application continues.","pos":[10,182],"source":" A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> that specifies whether or not to wait for keystrokes to get processed before the application continues."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> by default.","pos":[183,255],"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> by default."}]},{"pos":[18911,18990],"content":"A partial-trust situation exists in which the user lacks necessary permissions.","needQuote":true,"needEscape":true,"nodes":[{"content":"A partial-trust situation exists in which the user lacks necessary permissions.","pos":[0,79]}]},{"pos":[19395,19503],"content":"Gets a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicating if a SHIFT key is down.","needQuote":true,"needEscape":true,"source":"Gets a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> indicating if a SHIFT key is down."},{"pos":[19516,19955],"content":"The `My.Computer.Keyboard.ShiftKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property.      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Keyboard.ShiftKeyDown`</ph> property provides functionality similar to the &lt;xref:System.Windows.Forms.Control.ModifierKeys%2A&gt; property.","pos":[0,148],"source":"The `My.Computer.Keyboard.ShiftKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property."},{"content":"Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>|   |Class Library|<bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept>|   |Console Application|<bpt id=\"p3\">**</bpt>Yes<ept id=\"p3\">**</ept>|   |Windows Control Library|<bpt id=\"p4\">**</bpt>Yes<ept id=\"p4\">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id=\"p5\">**</bpt>Yes<ept id=\"p5\">**</ept>|   |Web Site|No|","pos":[157,426],"source":"      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"}]},{"pos":[20317,20551],"content":"A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value. <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if a SHIFT key is down; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","pos":[0,75],"source":"A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a SHIFT key is down; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[76,234],"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if a SHIFT key is down; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.Devices.Keyboard\n  id: Keyboard\n  children:\n  - Microsoft.VisualBasic.Devices.Keyboard.#ctor\n  - Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown\n  - Microsoft.VisualBasic.Devices.Keyboard.CapsLock\n  - Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown\n  - Microsoft.VisualBasic.Devices.Keyboard.NumLock\n  - Microsoft.VisualBasic.Devices.Keyboard.ScrollLock\n  - Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)\n  - Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)\n  - Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown\n  langs:\n  - csharp\n  name: Keyboard\n  nameWithType: Keyboard\n  fullName: Microsoft.VisualBasic.Devices.Keyboard\n  type: Class\n  summary: Provides properties for accessing the current state of the keyboard, such as what keys are currently pressed, and provides a method to send keystrokes to the active window.\n  remarks: \"The `My.Computer.Keyboard` object provides an interface to the computer's keyboard. The properties of the `My.Computer.Keyboard` provide information about the state of several special keys. The `My.Computer.Keyboard.SendKeys` method lets you send keys to the active window as if they have been typed at the keyboard.  \\n  \\n## Tasks  \\n The following table lists an example of a task involving the `My.Computer.Keyboard` object.  \\n  \\n|||  \\n|-|-|  \\n|To|See|  \\n|Send keystrokes to an application|[How to: Start an Application and Send it Keystrokes (Visual Basic)](~/add/includes/ajax-current-ext-md.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.CtrlKeyDown` property to determine if the computer's CTRL key is pressed.  \\n  \\n [!code-vb[VbVbalrMyComputer#36](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#36)]\"\n  syntax:\n    content: public class Keyboard\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: Keyboard()\n  nameWithType: Keyboard.Keyboard()\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.Keyboard()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Devices.Keyboard\"></xref> class.\n  syntax:\n    content: public Keyboard ();\n    parameters: []\n  overload: Microsoft.VisualBasic.Devices.Keyboard.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown\n  id: AltKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: AltKeyDown\n  nameWithType: Keyboard.AltKeyDown\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> indicating if the ALT key is down.\n  remarks: \"The `My.Computer.Keyboard.AltKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property.  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.AltKeyDown` property to determine if the computer's ALT key is down.  \\n  \\n [!code-vb[VbVbalrMyComputer#23](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#23)]\"\n  syntax:\n    content: public bool AltKeyDown { get; }\n    return:\n      type: System.Boolean\n      description: 'A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the ALT key is down; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>.'\n  overload: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock\n  id: CapsLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: CapsLock\n  nameWithType: Keyboard.CapsLock\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.CapsLock\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> indicating if CAPS LOCK is turned on.\n  remarks: \"Only the state of CAPS LOCK is returned.  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.CapsLock` property to determine if the computer's CAPS LOCK is turned on.  \\n  \\n [!code-vb[VbVbalrMyComputer#50](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#50)]\"\n  syntax:\n    content: public bool CapsLock { get; }\n    return:\n      type: System.Boolean\n      description: 'A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if CAPS LOCK is turned on; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>.'\n  overload: Microsoft.VisualBasic.Devices.Keyboard.CapsLock*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown\n  id: CtrlKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: CtrlKeyDown\n  nameWithType: Keyboard.CtrlKeyDown\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> indicating if a CTRL key is down.\n  remarks: \"The `My.Computer.Keyboard.CtrlKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property.  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.CtrlKeyDown` property to determine if the computer's CTRL key is down.  \\n  \\n [!code-vb[VbVbalrMyComputer#34](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#34)]\"\n  syntax:\n    content: public bool CtrlKeyDown { get; }\n    return:\n      type: System.Boolean\n      description: A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value. <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if a CTRL key is down; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>.\n  overload: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock\n  id: NumLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: NumLock\n  nameWithType: Keyboard.NumLock\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.NumLock\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> indicating if the NUM LOCK key is on.\n  remarks: \"Only the state of the NUM LOCK key is returned.  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.NumLock` property to determine if the computer's NUM LOCK key is on.  \\n  \\n [!code-vb[VbVbalrMyComputer#48](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#48)]\"\n  syntax:\n    content: public bool NumLock { get; }\n    return:\n      type: System.Boolean\n      description: A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value. <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if NUM LOCK is on; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>.\n  overload: Microsoft.VisualBasic.Devices.Keyboard.NumLock*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock\n  id: ScrollLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: ScrollLock\n  nameWithType: Keyboard.ScrollLock\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> indicating whether the SCROLL LOCK key is on.\n  remarks: \"Only the state of the SCROLL LOCK key is returned.  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.ScrollLock` property to determine if the computer's SCROLL LOCK key is on.  \\n  \\n [!code-vb[VbVbalrMyComputer#31](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#31)]\"\n  syntax:\n    content: public bool ScrollLock { get; }\n    return:\n      type: System.Boolean\n      description: A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value. <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if SCROLL LOCK is on; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>.\n  overload: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)\n  id: SendKeys(System.String)\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: SendKeys(String)\n  nameWithType: Keyboard.SendKeys(String)\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Sends one or more keystrokes to the active window, as if typed on the keyboard.\n  remarks: \"The `My.Computer.Keyboard.SendKeys` method provides functionality similar to the <xref:System.Windows.Forms.SendKeys.Send%2A> and <xref:System.Windows.Forms.SendKeys.SendWait%2A> methods.  \\n  \\n The `wait` argument is useful if the other application must finish before your application can continue.  \\n  \\n> [!NOTE]\\n>  Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications. For more information, see [Walkthrough: Calling Windows APIs](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The `keys` argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys). Each key is represented by one or more characters, such as `a` for the character \\\"a\\\", or `{ENTER}` for the ENTER key.  \\n  \\n To combine a key with SHIFT, precede the key code with `+` (plus sign). To combine a key with CTRL, precede the key code with `^` (caret). To combine a key with ALT, precede the key code with `%` (percent sign). To specify repeating keys, use the form `{`*key number*`}`. You must put a space between *key* and *number*. For example, `{LEFT 42}` means \\\"press the LEFT ARROW key 42 times\\\"; `{h 10}` means \\\"press 'h' 10 times.\\\"  \\n  \\n The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).  \\n  \\n|||  \\n|-|-|  \\n|Key|Code|  \\n|BACKSPACE|{BACKSPACE} or {BS}|  \\n|BREAK|{BREAK}|  \\n|CAPS LOCK|{CAPSLOCK}|  \\n|CLEAR|{CLEAR}|  \\n|DELETE|{DELETE} or {DEL}|  \\n|DOWN ARROW|{DOWN}|  \\n|END|{END}|  \\n|ENTER (numeric keypad)|{ENTER}|  \\n|ENTER|~|  \\n|ESC|{ESCAPE} or {ESC}|  \\n|HELP|{HELP}|  \\n|HOME|{HOME}|  \\n|INS|{INSERT}|  \\n|LEFT ARROW|{LEFT}|  \\n|NUM LOCK|{NUMLOCK}|  \\n|PAGE DOWN|{PGDN}|  \\n|PAGE UP|{PGUP}|  \\n|RETURN|{RETURN}|  \\n|RIGHT ARROW|{RIGHT}|  \\n|SCROLL LOCK|{SCROLLLOCK}|  \\n|TAB|{TAB}|  \\n|UP ARROW|{UP}|  \\n|F1 through F15|{F1} through {F15}|  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.SendKeys` method to send keystrokes to an external application, the Calculator application, started by the `Shell` function.  \\n  \\n [!code-vb[VbVbalrMyComputer#25](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#25)]  \\n  \\n A <xref:System.ArgumentException> exception is raised if an application with the requested process identifier cannot be found.  \\n  \\n The call to the `Shell` function requires full trust (<xref:System.Security.SecurityException> class).\"\n  syntax:\n    content: public void SendKeys (string keys);\n    parameters:\n    - id: keys\n      type: System.String\n      description: A <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> that defines the keys to send.\n  overload: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: A partial-trust situation exists in which the user lacks necessary permissions.\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)\n  id: SendKeys(System.String,System.Boolean)\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: SendKeys(String,Boolean)\n  nameWithType: Keyboard.SendKeys(String,Boolean)\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String,Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Sends one or more keystrokes to the active window, as if typed on the keyboard.\n  remarks: \"The `My.Computer.Keyboard.SendKeys` method provides functionality similar to the <xref:System.Windows.Forms.SendKeys.Send%2A> and <xref:System.Windows.Forms.SendKeys.SendWait%2A> methods.  \\n  \\n The `wait` argument is useful if the other application must finish before your application can continue.  \\n  \\n> [!NOTE]\\n>  Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications. For more information, see [Walkthrough: Calling Windows APIs](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The `keys` argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys). Each key is represented by one or more characters, such as `a` for the character \\\"a\\\", or `{ENTER}` for the ENTER key.  \\n  \\n To combine a key with SHIFT, precede the key code with `+` (plus sign). To combine a key with CTRL, precede the key code with `^` (caret). To combine a key with ALT, precede the key code with `%` (percent sign). To specify repeating keys, use the form `{`*key number*`}`. You must put a space between *key* and *number*. For example, `{LEFT 42}` means \\\"press the LEFT ARROW key 42 times\\\"; `{h 10}` means \\\"press 'h' 10 times.\\\"  \\n  \\n The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).  \\n  \\n|||  \\n|-|-|  \\n|Key|Code|  \\n|BACKSPACE|{BACKSPACE} or {BS}|  \\n|BREAK|{BREAK}|  \\n|CAPS LOCK|{CAPSLOCK}|  \\n|CLEAR|{CLEAR}|  \\n|DELETE|{DELETE} or {DEL}|  \\n|DOWN ARROW|{DOWN}|  \\n|END|{END}|  \\n|ENTER (numeric keypad)|{ENTER}|  \\n|ENTER|~|  \\n|ESC|{ESCAPE} or {ESC}|  \\n|HELP|{HELP}|  \\n|HOME|{HOME}|  \\n|INS|{INSERT}|  \\n|LEFT ARROW|{LEFT}|  \\n|NUM LOCK|{NUMLOCK}|  \\n|PAGE DOWN|{PGDN}|  \\n|PAGE UP|{PGUP}|  \\n|RETURN|{RETURN}|  \\n|RIGHT ARROW|{RIGHT}|  \\n|SCROLL LOCK|{SCROLLLOCK}|  \\n|TAB|{TAB}|  \\n|UP ARROW|{UP}|  \\n|F1 through F15|{F1} through {F15}|  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.SendKeys` method to send keystrokes to an external application, the Calculator application, started by the `Shell` function.  \\n  \\n [!code-vb[VbVbalrMyComputer#25](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#25)]  \\n  \\n A <xref:System.ArgumentException> exception is raised if an application with the requested process identifier cannot be found.  \\n  \\n The call to the `Shell` function requires full trust (<xref:System.Security.SecurityException> class).\"\n  syntax:\n    content: public void SendKeys (string keys, bool wait);\n    parameters:\n    - id: keys\n      type: System.String\n      description: A <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> that defines the keys to send.\n    - id: wait\n      type: System.Boolean\n      description: Optional. A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> that specifies whether or not to wait for keystrokes to get processed before the application continues. <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> by default.\n  overload: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: A partial-trust situation exists in which the user lacks necessary permissions.\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown\n  id: ShiftKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: ShiftKeyDown\n  nameWithType: Keyboard.ShiftKeyDown\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> indicating if a SHIFT key is down.\n  remarks: \"The `My.Computer.Keyboard.ShiftKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property.  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.ShiftKeyDown` property to determine if one of the computer's SHIFT keys is down.  \\n  \\n [!code-vb[VbVbalrMyComputer#47](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#47)]\"\n  syntax:\n    content: public bool ShiftKeyDown { get; }\n    return:\n      type: System.Boolean\n      description: A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value. <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if a SHIFT key is down; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>.\n  overload: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: Keyboard()\n  nameWithType: Keyboard.Keyboard()\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.Keyboard()\n- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: AltKeyDown\n  nameWithType: Keyboard.AltKeyDown\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: CapsLock\n  nameWithType: Keyboard.CapsLock\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.CapsLock\n- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: CtrlKeyDown\n  nameWithType: Keyboard.CtrlKeyDown\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown\n- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: NumLock\n  nameWithType: Keyboard.NumLock\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.NumLock\n- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: ScrollLock\n  nameWithType: Keyboard.ScrollLock\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock\n- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: SendKeys(String)\n  nameWithType: Keyboard.SendKeys(String)\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: SendKeys(String,Boolean)\n  nameWithType: Keyboard.SendKeys(String,Boolean)\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String,Boolean)\n- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: ShiftKeyDown\n  nameWithType: Keyboard.ShiftKeyDown\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown\n- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor*\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: Keyboard\n  nameWithType: Keyboard.Keyboard\n- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown*\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: AltKeyDown\n  nameWithType: Keyboard.AltKeyDown\n- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock*\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: CapsLock\n  nameWithType: Keyboard.CapsLock\n- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown*\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: CtrlKeyDown\n  nameWithType: Keyboard.CtrlKeyDown\n- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock*\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: NumLock\n  nameWithType: Keyboard.NumLock\n- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock*\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: ScrollLock\n  nameWithType: Keyboard.ScrollLock\n- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: SendKeys\n  nameWithType: Keyboard.SendKeys\n- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown*\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: ShiftKeyDown\n  nameWithType: Keyboard.ShiftKeyDown\n"}