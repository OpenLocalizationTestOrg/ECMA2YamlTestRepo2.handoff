{"nodes":[{"pos":[1274,1370],"content":"Provides a set of services that convert a managed assembly to a COM type library and vice versa.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a set of services that convert a managed assembly to a COM type library and vice versa.","pos":[0,96]}]},{"pos":[2303,2412],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.TypeLibConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.TypeLibConverter\"></xref> class."},{"pos":[3551,3594],"content":"Converts an assembly to a COM type library.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts an assembly to a COM type library.","pos":[0,43]}]},{"pos":[3606,3700],"content":"For more information on <ph id=\"ph1\">`ITypeLib`</ph>, please see its existing documentation in the MSDN library.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For more information on `ITypeLib`, please see its existing documentation in the MSDN library."},{"pos":[4515,4539],"content":"The assembly to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The assembly to convert.","pos":[0,24]}]},{"pos":[4610,4654],"content":"The file name of the resulting type library.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file name of the resulting type library.","pos":[0,44]}]},{"pos":[4754,4867],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.TypeLibExporterFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value indicating any special settings.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Runtime.InteropServices.TypeLibExporterFlags\"></xref> value indicating any special settings."},{"pos":[4978,5097],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.ITypeLibExporterNotifySink\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface implemented by the caller.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.InteropServices.ITypeLibExporterNotifySink\"></xref> interface implemented by the caller."},{"pos":[5155,5264],"content":"An object that implements the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ITypeLib\" name=\"ITypeLib\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"An object that implements the <xref uid=\"langword_csharp_ITypeLib\" name=\"ITypeLib\" href=\"\"></xref> interface."},{"pos":[6426,6469],"content":"Converts a COM type library to an assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts a COM type library to an assembly.","pos":[0,43]}]},{"pos":[6482,7287],"content":"If you do not want to generate a strong name for your assembly, it is valid for `publicKey` and `keyPair` to be `null`, as long as `flags` does not equal <xref:System.Runtime.InteropServices.TypeLibImporterFlags?displayProperty=fullName>. Otherwise, at least one of these parameters must be specified. If `publicKey` is `null`, the public key in `keyPair` will be set in the target assembly's manifest metadata and a signature will be generated based on the contents of the assembly. If `keyPair` is `null`, `publicKey` will be set in the target assembly's manifest metadata and no signature will be generated. Specifying both parameters is not generally useful, and can result in an invalid signature.       For more information on `ITypeLib`, please see its existing documentation in the MSDN library.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you do not want to generate a strong name for your assembly, it is valid for <ph id=\"ph1\">`publicKey`</ph> and <ph id=\"ph2\">`keyPair`</ph> to be <ph id=\"ph3\">`null`</ph>, as long as <ph id=\"ph4\">`flags`</ph> does not equal &lt;xref:System.Runtime.InteropServices.TypeLibImporterFlags?displayProperty=fullName&gt;.","pos":[0,238],"source":"If you do not want to generate a strong name for your assembly, it is valid for `publicKey` and `keyPair` to be `null`, as long as `flags` does not equal <xref:System.Runtime.InteropServices.TypeLibImporterFlags?displayProperty=fullName>."},{"content":"Otherwise, at least one of these parameters must be specified.","pos":[239,301]},{"content":"If <ph id=\"ph1\">`publicKey`</ph> is <ph id=\"ph2\">`null`</ph>, the public key in <ph id=\"ph3\">`keyPair`</ph> will be set in the target assembly's manifest metadata and a signature will be generated based on the contents of the assembly.","pos":[302,483],"source":" If `publicKey` is `null`, the public key in `keyPair` will be set in the target assembly's manifest metadata and a signature will be generated based on the contents of the assembly."},{"content":"If <ph id=\"ph1\">`keyPair`</ph> is <ph id=\"ph2\">`null`</ph>, <ph id=\"ph3\">`publicKey`</ph> will be set in the target assembly's manifest metadata and no signature will be generated.","pos":[484,610],"source":" If `keyPair` is `null`, `publicKey` will be set in the target assembly's manifest metadata and no signature will be generated."},{"content":"Specifying both parameters is not generally useful, and can result in an invalid signature.","pos":[611,702]},{"content":"For more information on <ph id=\"ph1\">`ITypeLib`</ph>, please see its existing documentation in the MSDN library.","pos":[709,803],"source":"       For more information on `ITypeLib`, please see its existing documentation in the MSDN library."}]},{"pos":[7667,7777],"content":"The object that implements the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ITypeLib\" name=\"ITypeLib\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"The object that implements the <xref uid=\"langword_csharp_ITypeLib\" name=\"ITypeLib\" href=\"\"></xref> interface."},{"pos":[7845,7885],"content":"The file name of the resulting assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file name of the resulting assembly.","pos":[0,40]}]},{"pos":[7946,8059],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.TypeLibImporterFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value indicating any special settings.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Runtime.InteropServices.TypeLibImporterFlags\"></xref> value indicating any special settings."},{"pos":[8170,8285],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.ITypeLibImporterNotifySink\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface implemented by the caller.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Runtime.InteropServices.ITypeLibImporterNotifySink\"></xref> interface implemented by the caller."},{"pos":[8351,8446],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_byte\" name=\"byte\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> array containing the public key.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_byte\" name=\"byte\" href=\"\"></xref> array containing the public key."},{"pos":[8532,8655],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Reflection.StrongNameKeyPair\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object containing the public and private cryptographic key pair.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Reflection.StrongNameKeyPair\"></xref> object containing the public and private cryptographic key pair."},{"pos":[8729,9114],"content":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the interfaces require link time checks for <xref href=\"System.Security.Permissions.SecurityPermissionFlag\"></xref> permission. If <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the interfaces require run time checks that require a stack walk and are more expensive, but help provide greater protection.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the interfaces require link time checks for <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.SecurityPermissionFlag\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> permission.","pos":[0,192],"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the interfaces require link time checks for <xref href=\"System.Security.Permissions.SecurityPermissionFlag\"></xref> permission."},{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the interfaces require run time checks that require a stack walk and are more expensive, but help provide greater protection.","pos":[193,385],"source":" If <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the interfaces require run time checks that require a stack walk and are more expensive, but help provide greater protection."}]},{"pos":[9197,9291],"content":"An <xref:System.Reflection.Emit.AssemblyBuilder> object containing the converted type library.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Reflection.Emit.AssemblyBuilder&gt; object containing the converted type library.","pos":[0,94],"source":"An <xref:System.Reflection.Emit.AssemblyBuilder> object containing the converted type library."}]},{"pos":[9495,9819],"content":"<code>typeLib</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>asmFileName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>notifySink</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;typeLib&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,85],"source":"<code>typeLib</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;asmFileName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[92,192],"source":"       -or-       <code>asmFileName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;notifySink&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[199,298],"source":"       -or-       <code>notifySink</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[9916,10031],"content":"<code>asmFileName</code> is an empty string.       -or-       <code>asmFileName</code> is longer than MAX_PATH.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;asmFileName&lt;/code&gt;</ph> is an empty string.","pos":[0,44],"source":"<code>asmFileName</code> is an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;asmFileName&lt;/code&gt;</ph> is longer than MAX_PATH.","pos":[51,111],"source":"       -or-       <code>asmFileName</code> is longer than MAX_PATH."}]},{"pos":[10144,10386],"content":"<code>flags</code> is not <xref href=\"System.Runtime.InteropServices.TypeLibImporterFlags\"></xref>.       -or-       <code>publicKey</code> and <code>keyPair</code> are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;flags&lt;/code&gt;</ph> is not <bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.TypeLibImporterFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,99],"source":"<code>flags</code> is not <xref href=\"System.Runtime.InteropServices.TypeLibImporterFlags\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;publicKey&lt;/code&gt;</ph> and <ph id=\"ph2\">&lt;code&gt;keyPair&lt;/code&gt;</ph> are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[106,230],"source":"       -or-       <code>publicKey</code> and <code>keyPair</code> are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[10524,10591],"content":"The metadata produced has errors preventing any types from loading.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata produced has errors preventing any types from loading.","pos":[0,67]}]},{"pos":[11822,11865],"content":"Converts a COM type library to an assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts a COM type library to an assembly.","pos":[0,43]}]},{"pos":[11878,12682],"content":"If you do not want to generate a strong name for your assembly, it is valid for `publicKey` and `keyPair` to be `null`, as long as `flags` does not equal <xref:System.Runtime.InteropServices.TypeLibImporterFlags?displayProperty=fullName>. Otherwise, atleast one of these parameters must be specified. If `publicKey` is `null`, the public key in `keyPair` will be set in the target assembly's manifest metadata and a signature will be generated based on the contents of the assembly. If `keyPair` is `null`, `publicKey` will be set in the target assembly's manifest metadata and no signature will be generated. Specifying both parameters is not generally useful, and can result in an invalid signature.       For more information on `ITypeLib`, please see its existing documentation in the MSDN library.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you do not want to generate a strong name for your assembly, it is valid for <ph id=\"ph1\">`publicKey`</ph> and <ph id=\"ph2\">`keyPair`</ph> to be <ph id=\"ph3\">`null`</ph>, as long as <ph id=\"ph4\">`flags`</ph> does not equal &lt;xref:System.Runtime.InteropServices.TypeLibImporterFlags?displayProperty=fullName&gt;.","pos":[0,238],"source":"If you do not want to generate a strong name for your assembly, it is valid for `publicKey` and `keyPair` to be `null`, as long as `flags` does not equal <xref:System.Runtime.InteropServices.TypeLibImporterFlags?displayProperty=fullName>."},{"content":"Otherwise, atleast one of these parameters must be specified.","pos":[239,300]},{"content":"If <ph id=\"ph1\">`publicKey`</ph> is <ph id=\"ph2\">`null`</ph>, the public key in <ph id=\"ph3\">`keyPair`</ph> will be set in the target assembly's manifest metadata and a signature will be generated based on the contents of the assembly.","pos":[301,482],"source":" If `publicKey` is `null`, the public key in `keyPair` will be set in the target assembly's manifest metadata and a signature will be generated based on the contents of the assembly."},{"content":"If <ph id=\"ph1\">`keyPair`</ph> is <ph id=\"ph2\">`null`</ph>, <ph id=\"ph3\">`publicKey`</ph> will be set in the target assembly's manifest metadata and no signature will be generated.","pos":[483,609],"source":" If `keyPair` is `null`, `publicKey` will be set in the target assembly's manifest metadata and no signature will be generated."},{"content":"Specifying both parameters is not generally useful, and can result in an invalid signature.","pos":[610,701]},{"content":"For more information on <ph id=\"ph1\">`ITypeLib`</ph>, please see its existing documentation in the MSDN library.","pos":[708,802],"source":"       For more information on `ITypeLib`, please see its existing documentation in the MSDN library."}]},{"pos":[13542,13652],"content":"The object that implements the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ITypeLib\" name=\"ITypeLib\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"The object that implements the <xref uid=\"langword_csharp_ITypeLib\" name=\"ITypeLib\" href=\"\"></xref> interface."},{"pos":[13720,13760],"content":"The file name of the resulting assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file name of the resulting assembly.","pos":[0,40]}]},{"pos":[13860,13973],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.TypeLibImporterFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value indicating any special settings.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Runtime.InteropServices.TypeLibImporterFlags\"></xref> value indicating any special settings."},{"pos":[14084,14199],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.ITypeLibImporterNotifySink\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface implemented by the caller.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Runtime.InteropServices.ITypeLibImporterNotifySink\"></xref> interface implemented by the caller."},{"pos":[14265,14360],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_byte\" name=\"byte\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> array containing the public key.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_byte\" name=\"byte\" href=\"\"></xref> array containing the public key."},{"pos":[14446,14569],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Reflection.StrongNameKeyPair\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object containing the public and private cryptographic key pair.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Reflection.StrongNameKeyPair\"></xref> object containing the public and private cryptographic key pair."},{"pos":[14638,14679],"content":"The namespace for the resulting assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace for the resulting assembly.","pos":[0,41]}]},{"pos":[14747,14891],"content":"The version of the resulting assembly. If <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the version of the type library is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The version of the resulting assembly.","pos":[0,38]},{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the version of the type library is used.","pos":[39,144],"source":" If <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the version of the type library is used."}]},{"pos":[14974,15068],"content":"An <xref:System.Reflection.Emit.AssemblyBuilder> object containing the converted type library.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Reflection.Emit.AssemblyBuilder&gt; object containing the converted type library.","pos":[0,94],"source":"An <xref:System.Reflection.Emit.AssemblyBuilder> object containing the converted type library."}]},{"pos":[15272,15596],"content":"<code>typeLib</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>asmFileName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>notifySink</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;typeLib&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,85],"source":"<code>typeLib</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;asmFileName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[92,192],"source":"       -or-       <code>asmFileName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;notifySink&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[199,298],"source":"       -or-       <code>notifySink</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[15693,15808],"content":"<code>asmFileName</code> is an empty string.       -or-       <code>asmFileName</code> is longer than MAX_PATH.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;asmFileName&lt;/code&gt;</ph> is an empty string.","pos":[0,44],"source":"<code>asmFileName</code> is an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;asmFileName&lt;/code&gt;</ph> is longer than MAX_PATH.","pos":[51,111],"source":"       -or-       <code>asmFileName</code> is longer than MAX_PATH."}]},{"pos":[15921,16163],"content":"<code>flags</code> is not <xref href=\"System.Runtime.InteropServices.TypeLibImporterFlags\"></xref>.       -or-       <code>publicKey</code> and <code>keyPair</code> are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;flags&lt;/code&gt;</ph> is not <bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.TypeLibImporterFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,99],"source":"<code>flags</code> is not <xref href=\"System.Runtime.InteropServices.TypeLibImporterFlags\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;publicKey&lt;/code&gt;</ph> and <ph id=\"ph2\">&lt;code&gt;keyPair&lt;/code&gt;</ph> are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[106,230],"source":"       -or-       <code>publicKey</code> and <code>keyPair</code> are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[16301,16368],"content":"The metadata produced has errors preventing any types from loading.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata produced has errors preventing any types from loading.","pos":[0,67]}]},{"pos":[17137,17224],"content":"Gets the name and code base of a primary interop assembly for a specified type library.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name and code base of a primary interop assembly for a specified type library.","pos":[0,87]}]},{"pos":[17443,17472],"content":"The GUID of the type library.","needQuote":true,"needEscape":true,"nodes":[{"content":"The GUID of the type library.","pos":[0,29]}]},{"pos":[17533,17578],"content":"The major version number of the type library.","needQuote":true,"needEscape":true,"nodes":[{"content":"The major version number of the type library.","pos":[0,45]}]},{"pos":[17639,17684],"content":"The minor version number of the type library.","needQuote":true,"needEscape":true,"nodes":[{"content":"The minor version number of the type library.","pos":[0,45]}]},{"pos":[17744,17773],"content":"The LCID of the type library.","needQuote":true,"needEscape":true,"nodes":[{"content":"The LCID of the type library.","pos":[0,29]}]},{"pos":[17837,17920],"content":"On successful return, the name of the primary interop assembly associated with <ph id=\"ph1\">`g`</ph>.","needQuote":true,"needEscape":true,"source":"On successful return, the name of the primary interop assembly associated with `g`."},{"pos":[17988,18076],"content":"On successful return, the code base of the primary interop assembly associated with <ph id=\"ph1\">`g`</ph>.","needQuote":true,"needEscape":true,"source":"On successful return, the code base of the primary interop assembly associated with `g`."},{"pos":[18135,18328],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the primary interop assembly was found in the registry; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the primary interop assembly was found in the registry; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.TypeLibConverter\n  id: TypeLibConverter\n  children:\n  - System.Runtime.InteropServices.TypeLibConverter.#ctor\n  - System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)\n  - System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)\n  - System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)\n  - System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)\n  langs:\n  - csharp\n  name: TypeLibConverter\n  nameWithType: TypeLibConverter\n  fullName: System.Runtime.InteropServices.TypeLibConverter\n  type: Class\n  summary: Provides a set of services that convert a managed assembly to a COM type library and vice versa.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"F1C3BF79-C3E4-11d3-88E7-00902754C43A\")]\n\n      public sealed class TypeLibConverter : System.Runtime.InteropServices.ITypeLibConverter\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.InteropServices.ITypeLibConverter\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.TypeLibConverter.#ctor\n  id: '#ctor'\n  parent: System.Runtime.InteropServices.TypeLibConverter\n  langs:\n  - csharp\n  name: TypeLibConverter()\n  nameWithType: TypeLibConverter.TypeLibConverter()\n  fullName: System.Runtime.InteropServices.TypeLibConverter.TypeLibConverter()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.TypeLibConverter\"></xref> class.\n  syntax:\n    content: public TypeLibConverter ();\n    parameters: []\n  overload: System.Runtime.InteropServices.TypeLibConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)\n  id: ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)\n  parent: System.Runtime.InteropServices.TypeLibConverter\n  langs:\n  - csharp\n  name: ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)\n  nameWithType: TypeLibConverter.ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)\n  fullName: System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Converts an assembly to a COM type library.\n  remarks: For more information on `ITypeLib`, please see its existing documentation in the MSDN library.\n  example:\n  - >-\n    [!code-cpp[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/add/codesnippet/cpp/00d885a3-4d86-4f95-bcb7-_1.cpp)]\n     [!code-vb[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/add/codesnippet/visualbasic/00d885a3-4d86-4f95-bcb7-_1.vb)]\n     [!code-cs[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/add/codesnippet/csharp/00d885a3-4d86-4f95-bcb7-_1.cs)]\n  syntax:\n    content: public object ConvertAssemblyToTypeLib (System.Reflection.Assembly assembly, string strTypeLibName, System.Runtime.InteropServices.TypeLibExporterFlags flags, System.Runtime.InteropServices.ITypeLibExporterNotifySink notifySink);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: The assembly to convert.\n    - id: strTypeLibName\n      type: System.String\n      description: The file name of the resulting type library.\n    - id: flags\n      type: System.Runtime.InteropServices.TypeLibExporterFlags\n      description: A <xref href=\"System.Runtime.InteropServices.TypeLibExporterFlags\"></xref> value indicating any special settings.\n    - id: notifySink\n      type: System.Runtime.InteropServices.ITypeLibExporterNotifySink\n      description: The <xref href=\"System.Runtime.InteropServices.ITypeLibExporterNotifySink\"></xref> interface implemented by the caller.\n    return:\n      type: System.Object\n      description: An object that implements the <xref uid=\"langword_csharp_ITypeLib\" name=\"ITypeLib\" href=\"\"></xref> interface.\n  overload: System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)\n  id: ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)\n  parent: System.Runtime.InteropServices.TypeLibConverter\n  langs:\n  - csharp\n  name: ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)\n  nameWithType: TypeLibConverter.ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)\n  fullName: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Converts a COM type library to an assembly.\n  remarks: \"If you do not want to generate a strong name for your assembly, it is valid for `publicKey` and `keyPair` to be `null`, as long as `flags` does not equal <xref:System.Runtime.InteropServices.TypeLibImporterFlags?displayProperty=fullName>. Otherwise, at least one of these parameters must be specified. If `publicKey` is `null`, the public key in `keyPair` will be set in the target assembly's manifest metadata and a signature will be generated based on the contents of the assembly. If `keyPair` is `null`, `publicKey` will be set in the target assembly's manifest metadata and no signature will be generated. Specifying both parameters is not generally useful, and can result in an invalid signature.  \\n  \\n For more information on `ITypeLib`, please see its existing documentation in the MSDN library.\"\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, int flags, System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, byte[] publicKey, System.Reflection.StrongNameKeyPair keyPair, bool unsafeInterfaces);\n    parameters:\n    - id: typeLib\n      type: System.Object\n      description: The object that implements the <xref uid=\"langword_csharp_ITypeLib\" name=\"ITypeLib\" href=\"\"></xref> interface.\n    - id: asmFileName\n      type: System.String\n      description: The file name of the resulting assembly.\n    - id: flags\n      type: System.Int32\n      description: A <xref href=\"System.Runtime.InteropServices.TypeLibImporterFlags\"></xref> value indicating any special settings.\n    - id: notifySink\n      type: System.Runtime.InteropServices.ITypeLibImporterNotifySink\n      description: <xref href=\"System.Runtime.InteropServices.ITypeLibImporterNotifySink\"></xref> interface implemented by the caller.\n    - id: publicKey\n      type: System.Byte[]\n      description: A <xref uid=\"langword_csharp_byte\" name=\"byte\" href=\"\"></xref> array containing the public key.\n    - id: keyPair\n      type: System.Reflection.StrongNameKeyPair\n      description: A <xref href=\"System.Reflection.StrongNameKeyPair\"></xref> object containing the public and private cryptographic key pair.\n    - id: unsafeInterfaces\n      type: System.Boolean\n      description: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the interfaces require link time checks for <xref href=\"System.Security.Permissions.SecurityPermissionFlag\"></xref> permission. If <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the interfaces require run time checks that require a stack walk and are more expensive, but help provide greater protection.\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: An <xref:System.Reflection.Emit.AssemblyBuilder> object containing the converted type library.\n  overload: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>typeLib</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>asmFileName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>notifySink</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>asmFileName</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>asmFileName</code> is longer than MAX_PATH.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<code>flags</code> is not <xref href=\\\"System.Runtime.InteropServices.TypeLibImporterFlags\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>publicKey</code> and <code>keyPair</code> are <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.Reflection.ReflectionTypeLoadException\n    commentId: T:System.Reflection.ReflectionTypeLoadException\n    description: The metadata produced has errors preventing any types from loading.\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)\n  id: ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)\n  parent: System.Runtime.InteropServices.TypeLibConverter\n  langs:\n  - csharp\n  name: ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)\n  nameWithType: TypeLibConverter.ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)\n  fullName: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Converts a COM type library to an assembly.\n  remarks: \"If you do not want to generate a strong name for your assembly, it is valid for `publicKey` and `keyPair` to be `null`, as long as `flags` does not equal <xref:System.Runtime.InteropServices.TypeLibImporterFlags?displayProperty=fullName>. Otherwise, atleast one of these parameters must be specified. If `publicKey` is `null`, the public key in `keyPair` will be set in the target assembly's manifest metadata and a signature will be generated based on the contents of the assembly. If `keyPair` is `null`, `publicKey` will be set in the target assembly's manifest metadata and no signature will be generated. Specifying both parameters is not generally useful, and can result in an invalid signature.  \\n  \\n For more information on `ITypeLib`, please see its existing documentation in the MSDN library.\"\n  example:\n  - >-\n    [!code-cpp[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/add/codesnippet/cpp/6fb3bd23-0a7d-4ad3-847a-_1.cpp)]\n     [!code-cs[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/add/codesnippet/csharp/6fb3bd23-0a7d-4ad3-847a-_1.cs)]\n     [!code-vb[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/add/codesnippet/visualbasic/6fb3bd23-0a7d-4ad3-847a-_1.vb)]\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, System.Runtime.InteropServices.TypeLibImporterFlags flags, System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, byte[] publicKey, System.Reflection.StrongNameKeyPair keyPair, string asmNamespace, Version asmVersion);\n    parameters:\n    - id: typeLib\n      type: System.Object\n      description: The object that implements the <xref uid=\"langword_csharp_ITypeLib\" name=\"ITypeLib\" href=\"\"></xref> interface.\n    - id: asmFileName\n      type: System.String\n      description: The file name of the resulting assembly.\n    - id: flags\n      type: System.Runtime.InteropServices.TypeLibImporterFlags\n      description: A <xref href=\"System.Runtime.InteropServices.TypeLibImporterFlags\"></xref> value indicating any special settings.\n    - id: notifySink\n      type: System.Runtime.InteropServices.ITypeLibImporterNotifySink\n      description: <xref href=\"System.Runtime.InteropServices.ITypeLibImporterNotifySink\"></xref> interface implemented by the caller.\n    - id: publicKey\n      type: System.Byte[]\n      description: A <xref uid=\"langword_csharp_byte\" name=\"byte\" href=\"\"></xref> array containing the public key.\n    - id: keyPair\n      type: System.Reflection.StrongNameKeyPair\n      description: A <xref href=\"System.Reflection.StrongNameKeyPair\"></xref> object containing the public and private cryptographic key pair.\n    - id: asmNamespace\n      type: System.String\n      description: The namespace for the resulting assembly.\n    - id: asmVersion\n      type: System.Version\n      description: The version of the resulting assembly. If <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the version of the type library is used.\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: An <xref:System.Reflection.Emit.AssemblyBuilder> object containing the converted type library.\n  overload: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>typeLib</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>asmFileName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>notifySink</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>asmFileName</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>asmFileName</code> is longer than MAX_PATH.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<code>flags</code> is not <xref href=\\\"System.Runtime.InteropServices.TypeLibImporterFlags\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>publicKey</code> and <code>keyPair</code> are <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.Reflection.ReflectionTypeLoadException\n    commentId: T:System.Reflection.ReflectionTypeLoadException\n    description: The metadata produced has errors preventing any types from loading.\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)\n  id: GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)\n  parent: System.Runtime.InteropServices.TypeLibConverter\n  langs:\n  - csharp\n  name: GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)\n  nameWithType: TypeLibConverter.GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)\n  fullName: System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Gets the name and code base of a primary interop assembly for a specified type library.\n  syntax:\n    content: public bool GetPrimaryInteropAssembly (Guid g, int major, int minor, int lcid, out string asmName, out string asmCodeBase);\n    parameters:\n    - id: g\n      type: System.Guid\n      description: The GUID of the type library.\n    - id: major\n      type: System.Int32\n      description: The major version number of the type library.\n    - id: minor\n      type: System.Int32\n      description: The minor version number of the type library.\n    - id: lcid\n      type: System.Int32\n      description: The LCID of the type library.\n    - id: asmName\n      type: System.String\n      description: On successful return, the name of the primary interop assembly associated with `g`.\n    - id: asmCodeBase\n      type: System.String\n      description: On successful return, the code base of the primary interop assembly associated with `g`.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the primary interop assembly was found in the registry; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Reflection.ReflectionTypeLoadException\n  isExternal: true\n  name: System.Reflection.ReflectionTypeLoadException\n- uid: System.Runtime.InteropServices.TypeLibConverter.#ctor\n  parent: System.Runtime.InteropServices.TypeLibConverter\n  isExternal: false\n  name: TypeLibConverter()\n  nameWithType: TypeLibConverter.TypeLibConverter()\n  fullName: System.Runtime.InteropServices.TypeLibConverter.TypeLibConverter()\n- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)\n  parent: System.Runtime.InteropServices.TypeLibConverter\n  isExternal: false\n  name: ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)\n  nameWithType: TypeLibConverter.ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)\n  fullName: System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: true\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.InteropServices.TypeLibExporterFlags\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: TypeLibExporterFlags\n  nameWithType: TypeLibExporterFlags\n  fullName: System.Runtime.InteropServices.TypeLibExporterFlags\n- uid: System.Runtime.InteropServices.ITypeLibExporterNotifySink\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: ITypeLibExporterNotifySink\n  nameWithType: ITypeLibExporterNotifySink\n  fullName: System.Runtime.InteropServices.ITypeLibExporterNotifySink\n- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)\n  parent: System.Runtime.InteropServices.TypeLibConverter\n  isExternal: false\n  name: ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)\n  nameWithType: TypeLibConverter.ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)\n  fullName: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)\n- uid: System.Reflection.Emit.AssemblyBuilder\n  parent: System.Reflection.Emit\n  isExternal: true\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices.ITypeLibImporterNotifySink\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: ITypeLibImporterNotifySink\n  nameWithType: ITypeLibImporterNotifySink\n  fullName: System.Runtime.InteropServices.ITypeLibImporterNotifySink\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.StrongNameKeyPair\n  parent: System.Reflection\n  isExternal: false\n  name: StrongNameKeyPair\n  nameWithType: StrongNameKeyPair\n  fullName: System.Reflection.StrongNameKeyPair\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)\n  parent: System.Runtime.InteropServices.TypeLibConverter\n  isExternal: false\n  name: ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)\n  nameWithType: TypeLibConverter.ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)\n  fullName: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)\n- uid: System.Runtime.InteropServices.TypeLibImporterFlags\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: TypeLibImporterFlags\n  nameWithType: TypeLibImporterFlags\n  fullName: System.Runtime.InteropServices.TypeLibImporterFlags\n- uid: System.Version\n  parent: System\n  isExternal: true\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)\n  parent: System.Runtime.InteropServices.TypeLibConverter\n  isExternal: false\n  name: GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)\n  nameWithType: TypeLibConverter.GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)\n  fullName: System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Runtime.InteropServices.TypeLibConverter.#ctor*\n  parent: System.Runtime.InteropServices.TypeLibConverter\n  isExternal: false\n  name: TypeLibConverter\n  nameWithType: TypeLibConverter.TypeLibConverter\n- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib*\n  parent: System.Runtime.InteropServices.TypeLibConverter\n  isExternal: false\n  name: ConvertAssemblyToTypeLib\n  nameWithType: TypeLibConverter.ConvertAssemblyToTypeLib\n- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly*\n  parent: System.Runtime.InteropServices.TypeLibConverter\n  isExternal: false\n  name: ConvertTypeLibToAssembly\n  nameWithType: TypeLibConverter.ConvertTypeLibToAssembly\n- uid: System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly*\n  parent: System.Runtime.InteropServices.TypeLibConverter\n  isExternal: false\n  name: GetPrimaryInteropAssembly\n  nameWithType: TypeLibConverter.GetPrimaryInteropAssembly\n"}