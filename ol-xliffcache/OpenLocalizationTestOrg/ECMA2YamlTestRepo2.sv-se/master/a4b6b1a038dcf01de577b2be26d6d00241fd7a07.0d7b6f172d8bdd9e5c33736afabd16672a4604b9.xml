{"nodes":[{"pos":[3480,3525],"content":"Represents the base type for all expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the base type for all expressions.","pos":[0,45]}]},{"pos":[3537,3602],"content":"No content here will be updated; please do not add material here.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"No content here will be updated; please do not add material here.","pos":[0,65]}]},{"pos":[4296,4378],"content":"Implements the visitor pattern for expressions that do not produce a result value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the visitor pattern for expressions that do not produce a result value.","pos":[0,82]}]},{"pos":[4610,4698],"content":"An instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An instance of <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref>."},{"pos":[5647,5659],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5715,5727],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6270,6370],"content":"Determines whether the specified <xref:System.Object> is equal to the current DbExpression instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified &lt;xref:System.Object&gt; is equal to the current DbExpression instance.","pos":[0,100],"source":"Determines whether the specified <xref:System.Object> is equal to the current DbExpression instance."}]},{"pos":[6511,6614],"content":"The object to compare to the current <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object to compare to the current <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>."},{"pos":[6673,6893],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified &lt;xref:System.Object&gt; is equal to the current DbExpression instance; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the specified <xref:System.Object> is equal to the current DbExpression instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7411,7493],"content":"Gets the kind of the expression, which indicates the operation of this expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the kind of the expression, which indicates the operation of this expression.","pos":[0,82]}]},{"pos":[7689,7766],"content":"The kind of the expression, which indicates the operation of this expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The kind of the expression, which indicates the operation of this expression.","pos":[0,77]}]},{"pos":[8324,8465],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified binary value, which may be <bpt id=\"p2\">**</bpt>null<ept id=\"p2\">**</ept>","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified binary value, which may be **null**"},{"pos":[8652,8718],"content":"The binary value on which the returned expression should be based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binary value on which the returned expression should be based.","pos":[0,66]}]},{"pos":[8807,8918],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified binary value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified binary value."},{"pos":[9546,9677],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified (nullable) Boolean value.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) Boolean value."},{"pos":[9891,9958],"content":"The Boolean value on which the returned expression should be based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Boolean value on which the returned expression should be based.","pos":[0,67]}]},{"pos":[10047,10159],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified Boolean value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified Boolean value."},{"pos":[10758,10886],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified (nullable) byte value.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) byte value."},{"pos":[11094,11158],"content":"The byte value on which the returned expression should be based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte value on which the returned expression should be based.","pos":[0,64]}]},{"pos":[11247,11356],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified byte value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified byte value."},{"pos":[11992,12138],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified (nullable) &lt;xref:System.DateTime&gt; value.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) <xref:System.DateTime> value."},{"pos":[12358,12426],"content":"The DateTime value on which the returned expression should be based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DateTime value on which the returned expression should be based.","pos":[0,68]}]},{"pos":[12515,12628],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified DateTime value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified DateTime value."},{"pos":[13328,13480],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified (nullable) &lt;xref:System.DateTimeOffset&gt; value.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) <xref:System.DateTimeOffset> value."},{"pos":[13718,13792],"content":"The DateTimeOffset value on which the returned expression should be based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DateTimeOffset value on which the returned expression should be based.","pos":[0,74]}]},{"pos":[13881,14000],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified DateTimeOffset value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified DateTimeOffset value."},{"pos":[14636,14767],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified (nullable) decimal value.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) decimal value."},{"pos":[14984,15051],"content":"The decimal value on which the returned expression should be based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The decimal value on which the returned expression should be based.","pos":[0,67]}]},{"pos":[15140,15252],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified decimal value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified decimal value."},{"pos":[15871,16001],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified (nullable) double value.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) double value."},{"pos":[16215,16281],"content":"The double value on which the returned expression should be based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The double value on which the returned expression should be based.","pos":[0,66]}]},{"pos":[16370,16481],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified double value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified double value."},{"pos":[17101,17285],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified <bpt id=\"p2\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value, which may be null.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified <xref href=\"System.Data.Spatial.DbGeography\"></xref> value, which may be null."},{"pos":[17518,17589],"content":"The DbGeography value on which the returned expression should be based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DbGeography value on which the returned expression should be based.","pos":[0,71]}]},{"pos":[17678,17794],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified DbGeography value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified DbGeography value."},{"pos":[18407,18590],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified <bpt id=\"p2\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value, which may be null.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value, which may be null."},{"pos":[18820,18890],"content":"The DbGeometry value on which the returned expression should be based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DbGeometry value on which the returned expression should be based.","pos":[0,70]}]},{"pos":[18979,19094],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified DbGeometry value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified DbGeometry value."},{"pos":[19694,19836],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified (nullable) &lt;xref:System.Guid&gt; value.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) <xref:System.Guid> value."},{"pos":[20044,20108],"content":"The Guid value on which the returned expression should be based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Guid value on which the returned expression should be based.","pos":[0,64]}]},{"pos":[20197,20306],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified Guid value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified Guid value."},{"pos":[20912,21041],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified (nullable) Int16 value.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) Int16 value."},{"pos":[21252,21317],"content":"The Int16 value on which the returned expression should be based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Int16 value on which the returned expression should be based.","pos":[0,65]}]},{"pos":[21406,21516],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified Int16 value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified Int16 value."},{"pos":[22123,22252],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified (nullable) Int32 value.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) Int32 value."},{"pos":[22461,22526],"content":"The Int32 value on which the returned expression should be based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Int32 value on which the returned expression should be based.","pos":[0,65]}]},{"pos":[22615,22725],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified Int32 value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified Int32 value."},{"pos":[23332,23461],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified (nullable) Int64 value.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) Int64 value."},{"pos":[23671,23736],"content":"The Int64 value on which the returned expression should be based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Int64 value on which the returned expression should be based.","pos":[0,65]}]},{"pos":[23825,23935],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified Int64 value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified Int64 value."},{"pos":[24552,24682],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified (nullable) Single value.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) Single value."},{"pos":[24895,24961],"content":"The Single value on which the returned expression should be based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Single value on which the returned expression should be based.","pos":[0,66]}]},{"pos":[25050,25161],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified Single value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified Single value."},{"pos":[25715,25834],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified string value.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified string value."},{"pos":[26021,26087],"content":"The string value on which the returned expression should be based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string value on which the returned expression should be based.","pos":[0,66]}]},{"pos":[26176,26287],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified string value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified string value."},{"pos":[26798,26837],"content":"Serves as a hash function for the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serves as a hash function for the type.","pos":[0,39]}]},{"pos":[26972,27011],"content":"A hash code for the current expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"A hash code for the current expression.","pos":[0,39]}]},{"pos":[27749,27761],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27850,27862],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28694,28706],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28795,28807],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29632,29644],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29733,29745],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30578,30590],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30679,30691],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31506,31518],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31607,31619],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32462,32474],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32563,32575],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33460,33472],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33561,33573],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34409,34421],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34510,34522],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35351,35363],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35452,35464],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36279,36291],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36380,36392],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37214,37226],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37315,37327],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38147,38159],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38248,38260],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39081,39093],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39182,39194],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40022,40034],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40123,40135],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40873,40885],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40974,40986],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41489,41550],"content":"Gets the type metadata for the result type of the expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type metadata for the result type of the expression.","pos":[0,61]}]},{"pos":[41714,41770],"content":"The type metadata for the result type of the expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type metadata for the result type of the expression.","pos":[0,56]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbExpression\n  id: DbExpression\n  children:\n  - System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  - System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  - System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)\n  - System.Data.Common.CommandTrees.DbExpression.ExpressionKind\n  - System.Data.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.FromGeography(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.FromString(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.GetHashCode\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.ResultType\n  langs:\n  - csharp\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n  type: Class\n  summary: Represents the base type for all expressions.\n  remarks: No content here will be updated; please do not add material here.\n  syntax:\n    content: public abstract class DbExpression\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  id: Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbExpression.Accept(DbExpressionVisitor)\n  fullName: System.Data.Common.CommandTrees.DbExpression.Accept(DbExpressionVisitor)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for expressions that do not produce a result value.\n  syntax:\n    content: public abstract void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor\n      description: An instance of <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref>.\n  overload: System.Data.Common.CommandTrees.DbExpression.Accept*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  id: Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: Accept(DbExpressionVisitor<TResultType>)\n  nameWithType: DbExpression.Accept(DbExpressionVisitor<TResultType>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.Accept(DbExpressionVisitor<TResultType>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Accept<TResultType> (System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType> visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpression.Accept<TResultType>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: DbExpression.Equals(Object)\n  fullName: System.Data.Common.CommandTrees.DbExpression.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Determines whether the specified <xref:System.Object> is equal to the current DbExpression instance.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare to the current <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the specified <xref:System.Object> is equal to the current DbExpression instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Common.CommandTrees.DbExpression.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.ExpressionKind\n  id: ExpressionKind\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: ExpressionKind\n  nameWithType: DbExpression.ExpressionKind\n  fullName: System.Data.Common.CommandTrees.DbExpression.ExpressionKind\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets the kind of the expression, which indicates the operation of this expression.\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbExpressionKind ExpressionKind { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: The kind of the expression, which indicates the operation of this expression.\n  overload: System.Data.Common.CommandTrees.DbExpression.ExpressionKind*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])\n  id: FromBinary(System.Byte[])\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: FromBinary(Byte[])\n  nameWithType: DbExpression.FromBinary(Byte[])\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromBinary(Byte[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified binary value, which may be **null**\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression FromBinary (byte[] value);\n    parameters:\n    - id: value\n      type: System.Byte[]\n      description: The binary value on which the returned expression should be based.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified binary value.\n  overload: System.Data.Common.CommandTrees.DbExpression.FromBinary*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})\n  id: FromBoolean(System.Nullable{System.Boolean})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: FromBoolean(Nullable<Boolean>)\n  nameWithType: DbExpression.FromBoolean(Nullable<Boolean>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromBoolean(Nullable<Boolean>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) Boolean value.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression FromBoolean (Nullable<bool> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Boolean}\n      description: The Boolean value on which the returned expression should be based.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified Boolean value.\n  overload: System.Data.Common.CommandTrees.DbExpression.FromBoolean*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})\n  id: FromByte(System.Nullable{System.Byte})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: FromByte(Nullable<Byte>)\n  nameWithType: DbExpression.FromByte(Nullable<Byte>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromByte(Nullable<Byte>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) byte value.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression FromByte (Nullable<byte> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Byte}\n      description: The byte value on which the returned expression should be based.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified byte value.\n  overload: System.Data.Common.CommandTrees.DbExpression.FromByte*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})\n  id: FromDateTime(System.Nullable{System.DateTime})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: FromDateTime(Nullable<DateTime>)\n  nameWithType: DbExpression.FromDateTime(Nullable<DateTime>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromDateTime(Nullable<DateTime>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) <xref:System.DateTime> value.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression FromDateTime (Nullable<DateTime> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.DateTime}\n      description: The DateTime value on which the returned expression should be based.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified DateTime value.\n  overload: System.Data.Common.CommandTrees.DbExpression.FromDateTime*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})\n  id: FromDateTimeOffset(System.Nullable{System.DateTimeOffset})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: FromDateTimeOffset(Nullable<DateTimeOffset>)\n  nameWithType: DbExpression.FromDateTimeOffset(Nullable<DateTimeOffset>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(Nullable<DateTimeOffset>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) <xref:System.DateTimeOffset> value.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression FromDateTimeOffset (Nullable<DateTimeOffset> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.DateTimeOffset}\n      description: The DateTimeOffset value on which the returned expression should be based.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified DateTimeOffset value.\n  overload: System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})\n  id: FromDecimal(System.Nullable{System.Decimal})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: FromDecimal(Nullable<Decimal>)\n  nameWithType: DbExpression.FromDecimal(Nullable<Decimal>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromDecimal(Nullable<Decimal>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) decimal value.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression FromDecimal (Nullable<decimal> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Decimal}\n      description: The decimal value on which the returned expression should be based.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified decimal value.\n  overload: System.Data.Common.CommandTrees.DbExpression.FromDecimal*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})\n  id: FromDouble(System.Nullable{System.Double})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: FromDouble(Nullable<Double>)\n  nameWithType: DbExpression.FromDouble(Nullable<Double>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromDouble(Nullable<Double>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) double value.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression FromDouble (Nullable<double> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Double}\n      description: The double value on which the returned expression should be based.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified double value.\n  overload: System.Data.Common.CommandTrees.DbExpression.FromDouble*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.FromGeography(System.Data.Spatial.DbGeography)\n  id: FromGeography(System.Data.Spatial.DbGeography)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: FromGeography(DbGeography)\n  nameWithType: DbExpression.FromGeography(DbGeography)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromGeography(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified <xref href=\"System.Data.Spatial.DbGeography\"></xref> value, which may be null.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression FromGeography (System.Data.Spatial.DbGeography value);\n    parameters:\n    - id: value\n      type: System.Data.Spatial.DbGeography\n      description: The DbGeography value on which the returned expression should be based.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified DbGeography value.\n  overload: System.Data.Common.CommandTrees.DbExpression.FromGeography*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Spatial.DbGeometry)\n  id: FromGeometry(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: FromGeometry(DbGeometry)\n  nameWithType: DbExpression.FromGeometry(DbGeometry)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromGeometry(DbGeometry)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value, which may be null.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression FromGeometry (System.Data.Spatial.DbGeometry value);\n    parameters:\n    - id: value\n      type: System.Data.Spatial.DbGeometry\n      description: The DbGeometry value on which the returned expression should be based.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified DbGeometry value.\n  overload: System.Data.Common.CommandTrees.DbExpression.FromGeometry*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})\n  id: FromGuid(System.Nullable{System.Guid})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: FromGuid(Nullable<Guid>)\n  nameWithType: DbExpression.FromGuid(Nullable<Guid>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromGuid(Nullable<Guid>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) <xref:System.Guid> value.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression FromGuid (Nullable<Guid> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Guid}\n      description: The Guid value on which the returned expression should be based.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified Guid value.\n  overload: System.Data.Common.CommandTrees.DbExpression.FromGuid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})\n  id: FromInt16(System.Nullable{System.Int16})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: FromInt16(Nullable<Int16>)\n  nameWithType: DbExpression.FromInt16(Nullable<Int16>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromInt16(Nullable<Int16>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) Int16 value.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression FromInt16 (Nullable<short> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Int16}\n      description: The Int16 value on which the returned expression should be based.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified Int16 value.\n  overload: System.Data.Common.CommandTrees.DbExpression.FromInt16*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})\n  id: FromInt32(System.Nullable{System.Int32})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: FromInt32(Nullable<Int32>)\n  nameWithType: DbExpression.FromInt32(Nullable<Int32>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromInt32(Nullable<Int32>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) Int32 value.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression FromInt32 (Nullable<int> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Int32}\n      description: The Int32 value on which the returned expression should be based.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified Int32 value.\n  overload: System.Data.Common.CommandTrees.DbExpression.FromInt32*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})\n  id: FromInt64(System.Nullable{System.Int64})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: FromInt64(Nullable<Int64>)\n  nameWithType: DbExpression.FromInt64(Nullable<Int64>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromInt64(Nullable<Int64>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) Int64 value.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression FromInt64 (Nullable<long> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Int64}\n      description: The Int64 value on which the returned expression should be based.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified Int64 value.\n  overload: System.Data.Common.CommandTrees.DbExpression.FromInt64*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})\n  id: FromSingle(System.Nullable{System.Single})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: FromSingle(Nullable<Single>)\n  nameWithType: DbExpression.FromSingle(Nullable<Single>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromSingle(Nullable<Single>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified (nullable) Single value.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression FromSingle (Nullable<float> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Single}\n      description: The Single value on which the returned expression should be based.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified Single value.\n  overload: System.Data.Common.CommandTrees.DbExpression.FromSingle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.FromString(System.String)\n  id: FromString(System.String)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: FromString(String)\n  nameWithType: DbExpression.FromString(String)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromString(String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified string value.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression FromString (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The string value on which the returned expression should be based.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that represents the specified string value.\n  overload: System.Data.Common.CommandTrees.DbExpression.FromString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.GetHashCode\n  id: GetHashCode\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: DbExpression.GetHashCode()\n  fullName: System.Data.Common.CommandTrees.DbExpression.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Serves as a hash function for the type.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current expression.\n  overload: System.Data.Common.CommandTrees.DbExpression.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[])\n  id: op_Implicit(System.Byte[])\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: op_Implicit(Byte[])\n  nameWithType: DbExpression.op_Implicit(Byte[])\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Byte[])\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (byte[] value);\n    parameters:\n    - id: value\n      type: System.Byte[]\n      description: To be added.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpression.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeography)\n  id: op_Implicit(System.Data.Spatial.DbGeography)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: op_Implicit(DbGeography)\n  nameWithType: DbExpression.op_Implicit(DbGeography)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(DbGeography)\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (System.Data.Spatial.DbGeography value);\n    parameters:\n    - id: value\n      type: System.Data.Spatial.DbGeography\n      description: To be added.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpression.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeometry)\n  id: op_Implicit(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: op_Implicit(DbGeometry)\n  nameWithType: DbExpression.op_Implicit(DbGeometry)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(DbGeometry)\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (System.Data.Spatial.DbGeometry value);\n    parameters:\n    - id: value\n      type: System.Data.Spatial.DbGeometry\n      description: To be added.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpression.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean})\n  id: op_Implicit(System.Nullable{System.Boolean})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: op_Implicit(Nullable<Boolean>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Boolean>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Boolean>)\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (Nullable<bool> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Boolean}\n      description: To be added.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpression.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte})\n  id: op_Implicit(System.Nullable{System.Byte})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: op_Implicit(Nullable<Byte>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Byte>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Byte>)\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (Nullable<byte> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Byte}\n      description: To be added.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpression.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime})\n  id: op_Implicit(System.Nullable{System.DateTime})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: op_Implicit(Nullable<DateTime>)\n  nameWithType: DbExpression.op_Implicit(Nullable<DateTime>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<DateTime>)\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (Nullable<DateTime> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.DateTime}\n      description: To be added.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpression.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset})\n  id: op_Implicit(System.Nullable{System.DateTimeOffset})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: op_Implicit(Nullable<DateTimeOffset>)\n  nameWithType: DbExpression.op_Implicit(Nullable<DateTimeOffset>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<DateTimeOffset>)\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (Nullable<DateTimeOffset> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.DateTimeOffset}\n      description: To be added.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpression.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal})\n  id: op_Implicit(System.Nullable{System.Decimal})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: op_Implicit(Nullable<Decimal>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Decimal>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Decimal>)\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (Nullable<decimal> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Decimal}\n      description: To be added.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpression.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double})\n  id: op_Implicit(System.Nullable{System.Double})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: op_Implicit(Nullable<Double>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Double>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Double>)\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (Nullable<double> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Double}\n      description: To be added.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpression.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid})\n  id: op_Implicit(System.Nullable{System.Guid})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: op_Implicit(Nullable<Guid>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Guid>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Guid>)\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (Nullable<Guid> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Guid}\n      description: To be added.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpression.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16})\n  id: op_Implicit(System.Nullable{System.Int16})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: op_Implicit(Nullable<Int16>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Int16>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Int16>)\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (Nullable<short> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Int16}\n      description: To be added.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpression.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32})\n  id: op_Implicit(System.Nullable{System.Int32})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: op_Implicit(Nullable<Int32>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Int32>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Int32>)\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (Nullable<int> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Int32}\n      description: To be added.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpression.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64})\n  id: op_Implicit(System.Nullable{System.Int64})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: op_Implicit(Nullable<Int64>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Int64>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Int64>)\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (Nullable<long> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Int64}\n      description: To be added.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpression.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single})\n  id: op_Implicit(System.Nullable{System.Single})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: op_Implicit(Nullable<Single>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Single>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Single>)\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (Nullable<float> value);\n    parameters:\n    - id: value\n      type: System.Nullable{System.Single}\n      description: To be added.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpression.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.String)\n  id: op_Implicit(System.String)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: op_Implicit(String)\n  nameWithType: DbExpression.op_Implicit(String)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(String)\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpression.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpression.ResultType\n  id: ResultType\n  parent: System.Data.Common.CommandTrees.DbExpression\n  langs:\n  - csharp\n  name: ResultType\n  nameWithType: DbExpression.ResultType\n  fullName: System.Data.Common.CommandTrees.DbExpression.ResultType\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets the type metadata for the result type of the expression.\n  syntax:\n    content: public System.Data.Metadata.Edm.TypeUsage ResultType { get; }\n    return:\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: The type metadata for the result type of the expression.\n  overload: System.Data.Common.CommandTrees.DbExpression.ResultType*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbExpression.Accept(DbExpressionVisitor)\n  fullName: System.Data.Common.CommandTrees.DbExpression.Accept(DbExpressionVisitor)\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor\n  nameWithType: DbExpressionVisitor\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor\n- uid: System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: Accept(DbExpressionVisitor<TResultType>)\n  nameWithType: DbExpression.Accept(DbExpressionVisitor<TResultType>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.Accept(DbExpressionVisitor<TResultType>)\n- uid: TResultType\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor<TResultType>\n  nameWithType: DbExpressionVisitor<TResultType>\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>\n- uid: System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DbExpression.Equals(Object)\n  fullName: System.Data.Common.CommandTrees.DbExpression.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Common.CommandTrees.DbExpression.ExpressionKind\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: ExpressionKind\n  nameWithType: DbExpression.ExpressionKind\n  fullName: System.Data.Common.CommandTrees.DbExpression.ExpressionKind\n- uid: System.Data.Common.CommandTrees.DbExpressionKind\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionKind\n  nameWithType: DbExpressionKind\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind\n- uid: System.Data.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromBinary(Byte[])\n  nameWithType: DbExpression.FromBinary(Byte[])\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromBinary(Byte[])\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromBoolean(Nullable<Boolean>)\n  nameWithType: DbExpression.FromBoolean(Nullable<Boolean>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromBoolean(Nullable<Boolean>)\n- uid: System.Nullable{System.Boolean}\n  parent: System\n  isExternal: true\n  name: Nullable<Boolean>\n  nameWithType: Nullable<Boolean>\n  fullName: System.Nullable<System.Boolean>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Boolean>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromByte(Nullable<Byte>)\n  nameWithType: DbExpression.FromByte(Nullable<Byte>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromByte(Nullable<Byte>)\n- uid: System.Nullable{System.Byte}\n  parent: System\n  isExternal: true\n  name: Nullable<Byte>\n  nameWithType: Nullable<Byte>\n  fullName: System.Nullable<System.Byte>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Byte>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromDateTime(Nullable<DateTime>)\n  nameWithType: DbExpression.FromDateTime(Nullable<DateTime>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromDateTime(Nullable<DateTime>)\n- uid: System.Nullable{System.DateTime}\n  parent: System\n  isExternal: true\n  name: Nullable<DateTime>\n  nameWithType: Nullable<DateTime>\n  fullName: System.Nullable<System.DateTime>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.DateTime>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.DateTime\n    name: DateTime\n    nameWithType: DateTime\n    fullName: DateTime\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromDateTimeOffset(Nullable<DateTimeOffset>)\n  nameWithType: DbExpression.FromDateTimeOffset(Nullable<DateTimeOffset>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(Nullable<DateTimeOffset>)\n- uid: System.Nullable{System.DateTimeOffset}\n  parent: System\n  isExternal: true\n  name: Nullable<DateTimeOffset>\n  nameWithType: Nullable<DateTimeOffset>\n  fullName: System.Nullable<System.DateTimeOffset>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.DateTimeOffset>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.DateTimeOffset\n    name: DateTimeOffset\n    nameWithType: DateTimeOffset\n    fullName: DateTimeOffset\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromDecimal(Nullable<Decimal>)\n  nameWithType: DbExpression.FromDecimal(Nullable<Decimal>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromDecimal(Nullable<Decimal>)\n- uid: System.Nullable{System.Decimal}\n  parent: System\n  isExternal: true\n  name: Nullable<Decimal>\n  nameWithType: Nullable<Decimal>\n  fullName: System.Nullable<System.Decimal>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Decimal>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    nameWithType: Decimal\n    fullName: Decimal\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromDouble(Nullable<Double>)\n  nameWithType: DbExpression.FromDouble(Nullable<Double>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromDouble(Nullable<Double>)\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: true\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Double>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    nameWithType: Double\n    fullName: Double\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DbExpression.FromGeography(System.Data.Spatial.DbGeography)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromGeography(DbGeography)\n  nameWithType: DbExpression.FromGeography(DbGeography)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromGeography(DbGeography)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Data.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromGeometry(DbGeometry)\n  nameWithType: DbExpression.FromGeometry(DbGeometry)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromGeometry(DbGeometry)\n- uid: System.Data.Spatial.DbGeometry\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeometry\n  nameWithType: DbGeometry\n  fullName: System.Data.Spatial.DbGeometry\n- uid: System.Data.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromGuid(Nullable<Guid>)\n  nameWithType: DbExpression.FromGuid(Nullable<Guid>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromGuid(Nullable<Guid>)\n- uid: System.Nullable{System.Guid}\n  parent: System\n  isExternal: true\n  name: Nullable<Guid>\n  nameWithType: Nullable<Guid>\n  fullName: System.Nullable<System.Guid>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Guid>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Guid\n    name: Guid\n    nameWithType: Guid\n    fullName: Guid\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromInt16(Nullable<Int16>)\n  nameWithType: DbExpression.FromInt16(Nullable<Int16>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromInt16(Nullable<Int16>)\n- uid: System.Nullable{System.Int16}\n  parent: System\n  isExternal: true\n  name: Nullable<Int16>\n  nameWithType: Nullable<Int16>\n  fullName: System.Nullable<System.Int16>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Int16>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int16\n    name: Int16\n    nameWithType: Int16\n    fullName: Int16\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromInt32(Nullable<Int32>)\n  nameWithType: DbExpression.FromInt32(Nullable<Int32>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromInt32(Nullable<Int32>)\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: true\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Int32>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromInt64(Nullable<Int64>)\n  nameWithType: DbExpression.FromInt64(Nullable<Int64>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromInt64(Nullable<Int64>)\n- uid: System.Nullable{System.Int64}\n  parent: System\n  isExternal: true\n  name: Nullable<Int64>\n  nameWithType: Nullable<Int64>\n  fullName: System.Nullable<System.Int64>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Int64>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    nameWithType: Int64\n    fullName: Int64\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromSingle(Nullable<Single>)\n  nameWithType: DbExpression.FromSingle(Nullable<Single>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromSingle(Nullable<Single>)\n- uid: System.Nullable{System.Single}\n  parent: System\n  isExternal: true\n  name: Nullable<Single>\n  nameWithType: Nullable<Single>\n  fullName: System.Nullable<System.Single>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Single>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    nameWithType: Single\n    fullName: Single\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DbExpression.FromString(System.String)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromString(String)\n  nameWithType: DbExpression.FromString(String)\n  fullName: System.Data.Common.CommandTrees.DbExpression.FromString(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.CommandTrees.DbExpression.GetHashCode\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DbExpression.GetHashCode()\n  fullName: System.Data.Common.CommandTrees.DbExpression.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[])\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Byte[])\n  nameWithType: DbExpression.op_Implicit(Byte[])\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Byte[])\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeography)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(DbGeography)\n  nameWithType: DbExpression.op_Implicit(DbGeography)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(DbGeography)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(DbGeometry)\n  nameWithType: DbExpression.op_Implicit(DbGeometry)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(DbGeometry)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Boolean>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Boolean>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Boolean>)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Byte>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Byte>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Byte>)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<DateTime>)\n  nameWithType: DbExpression.op_Implicit(Nullable<DateTime>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<DateTime>)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<DateTimeOffset>)\n  nameWithType: DbExpression.op_Implicit(Nullable<DateTimeOffset>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<DateTimeOffset>)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Decimal>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Decimal>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Decimal>)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Double>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Double>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Double>)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Guid>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Guid>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Guid>)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Int16>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Int16>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Int16>)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Int32>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Int32>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Int32>)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Int64>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Int64>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Int64>)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Single>)\n  nameWithType: DbExpression.op_Implicit(Nullable<Single>)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(Nullable<Single>)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.String)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(String)\n  nameWithType: DbExpression.op_Implicit(String)\n  fullName: System.Data.Common.CommandTrees.DbExpression.op_Implicit(String)\n- uid: System.Data.Common.CommandTrees.DbExpression.ResultType\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: ResultType\n  nameWithType: DbExpression.ResultType\n  fullName: System.Data.Common.CommandTrees.DbExpression.ResultType\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.Data.Common.CommandTrees.DbExpression.Accept*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: Accept\n  nameWithType: DbExpression.Accept\n- uid: System.Data.Common.CommandTrees.DbExpression.Accept<TResultType>*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: Accept<TResultType>\n  nameWithType: DbExpression.Accept<TResultType>\n- uid: System.Data.Common.CommandTrees.DbExpression.Equals*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: Equals\n  nameWithType: DbExpression.Equals\n- uid: System.Data.Common.CommandTrees.DbExpression.ExpressionKind*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: ExpressionKind\n  nameWithType: DbExpression.ExpressionKind\n- uid: System.Data.Common.CommandTrees.DbExpression.FromBinary*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromBinary\n  nameWithType: DbExpression.FromBinary\n- uid: System.Data.Common.CommandTrees.DbExpression.FromBoolean*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromBoolean\n  nameWithType: DbExpression.FromBoolean\n- uid: System.Data.Common.CommandTrees.DbExpression.FromByte*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromByte\n  nameWithType: DbExpression.FromByte\n- uid: System.Data.Common.CommandTrees.DbExpression.FromDateTime*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromDateTime\n  nameWithType: DbExpression.FromDateTime\n- uid: System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromDateTimeOffset\n  nameWithType: DbExpression.FromDateTimeOffset\n- uid: System.Data.Common.CommandTrees.DbExpression.FromDecimal*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromDecimal\n  nameWithType: DbExpression.FromDecimal\n- uid: System.Data.Common.CommandTrees.DbExpression.FromDouble*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromDouble\n  nameWithType: DbExpression.FromDouble\n- uid: System.Data.Common.CommandTrees.DbExpression.FromGeography*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromGeography\n  nameWithType: DbExpression.FromGeography\n- uid: System.Data.Common.CommandTrees.DbExpression.FromGeometry*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromGeometry\n  nameWithType: DbExpression.FromGeometry\n- uid: System.Data.Common.CommandTrees.DbExpression.FromGuid*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromGuid\n  nameWithType: DbExpression.FromGuid\n- uid: System.Data.Common.CommandTrees.DbExpression.FromInt16*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromInt16\n  nameWithType: DbExpression.FromInt16\n- uid: System.Data.Common.CommandTrees.DbExpression.FromInt32*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromInt32\n  nameWithType: DbExpression.FromInt32\n- uid: System.Data.Common.CommandTrees.DbExpression.FromInt64*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromInt64\n  nameWithType: DbExpression.FromInt64\n- uid: System.Data.Common.CommandTrees.DbExpression.FromSingle*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromSingle\n  nameWithType: DbExpression.FromSingle\n- uid: System.Data.Common.CommandTrees.DbExpression.FromString*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromString\n  nameWithType: DbExpression.FromString\n- uid: System.Data.Common.CommandTrees.DbExpression.GetHashCode*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: GetHashCode\n  nameWithType: DbExpression.GetHashCode\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit\n  nameWithType: DbExpression.op_Implicit\n- uid: System.Data.Common.CommandTrees.DbExpression.ResultType*\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: ResultType\n  nameWithType: DbExpression.ResultType\n"}