{"nodes":[{"pos":[3632,3644],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5035,5047],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5673,5685],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6379,6391],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6451,6463],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7031,7043],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8154,8166],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8225,8237],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8895,8907],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8968,8980],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9534,9546],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10428,10440],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10526,10538],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11448,11460],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11509,11521],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11607,11619],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12253,12265],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12890,12902],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13501,13513],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13570,13582],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14214,14226],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14272,14284],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15527,15539],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16323,16335],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17940,17952],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18787,18799],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18858,18870],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19731,19743],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19793,19805],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20645,20657],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21558,21570],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21631,21643],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22478,22490],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23298,23310],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24182,24194],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24992,25004],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25061,25073],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26564,26576],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26635,26647],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27458,27470],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27527,27539],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28398,28410],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28472,28484],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29259,29271],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30045,30057],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30879,30891],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30949,30961],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31763,31775],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32582,32594],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  id: XmlQuerySequence`1\n  children:\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(System.Int32)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(`0)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(`0[],System.Int32)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.Add(`0)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.Clear\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.Contains(`0)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.CopyTo(`0[],System.Int32)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.Count\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence`1)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence`1,`0)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.Empty\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.GetEnumerator\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.IndexOf(`0)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.Item(System.Int32)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.OnItemsChanged\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.SortByKeys(System.Array)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Clear\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Remove(`0)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#IsSynchronized\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#SyncRoot\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Add(System.Object)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Clear\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Contains(System.Object)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IndexOf(System.Object)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsFixedSize\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsReadOnly\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Item(System.Int32)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Remove(System.Object)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#RemoveAt(System.Int32)\n  langs:\n  - csharp\n  name: XmlQuerySequence<T>\n  nameWithType: XmlQuerySequence<T>\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>\n  type: Class\n  syntax:\n    content: >-\n      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]\n\n      public class XmlQuerySequence<T> : System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IList<T>, System.Collections.IList\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<T>\n  - System.Collections.Generic.IEnumerable<T>\n  - System.Collections.Generic.IList<T>\n  - System.Collections.IList\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor\n  id: '#ctor'\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: XmlQuerySequence()\n  nameWithType: XmlQuerySequence<T>.XmlQuerySequence()\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.XmlQuerySequence()\n  type: Constructor\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: public XmlQuerySequence ();\n    parameters: []\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: XmlQuerySequence(Int32)\n  nameWithType: XmlQuerySequence<T>.XmlQuerySequence(Int32)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.XmlQuerySequence(Int32)\n  type: Constructor\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: public XmlQuerySequence (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(`0)\n  id: '#ctor(`0)'\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: XmlQuerySequence(T)\n  nameWithType: XmlQuerySequence<T>.XmlQuerySequence(T)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.XmlQuerySequence(T)\n  type: Constructor\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: public XmlQuerySequence (T value);\n    parameters:\n    - id: value\n      type: T\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(`0[],System.Int32)\n  id: '#ctor(`0[],System.Int32)'\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: XmlQuerySequence(T[],Int32)\n  nameWithType: XmlQuerySequence<T>.XmlQuerySequence(T[],Int32)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.XmlQuerySequence(T[],Int32)\n  type: Constructor\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: public XmlQuerySequence (T[] array, int size);\n    parameters:\n    - id: array\n      type: T[]\n      description: To be added.\n    - id: size\n      type: System.Int32\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Add(`0)\n  id: Add(`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: Add(T)\n  nameWithType: XmlQuerySequence<T>.Add(T)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.Add(T)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: public void Add (T value);\n    parameters:\n    - id: value\n      type: T\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Clear\n  id: Clear\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: XmlQuerySequence<T>.Clear()\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.Clear()\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: Contains(T)\n  nameWithType: XmlQuerySequence<T>.Contains(T)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.Contains(T)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: public bool Contains (T value);\n    parameters:\n    - id: value\n      type: T\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: CopyTo(T[],Int32)\n  nameWithType: XmlQuerySequence<T>.CopyTo(T[],Int32)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.CopyTo(T[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: public void CopyTo (T[] array, int index);\n    parameters:\n    - id: array\n      type: T[]\n      description: To be added.\n    - id: index\n      type: System.Int32\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Count\n  id: Count\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: XmlQuerySequence<T>.Count\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.Count\n  type: Property\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence`1)\n  id: CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence`1)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: CreateOrReuse(XmlQuerySequence<T>)\n  nameWithType: XmlQuerySequence<T>.CreateOrReuse(XmlQuerySequence<T>)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.CreateOrReuse(XmlQuerySequence<T>)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: public static System.Xml.Xsl.Runtime.XmlQuerySequence<T> CreateOrReuse (System.Xml.Xsl.Runtime.XmlQuerySequence<T> seq);\n    parameters:\n    - id: seq\n      type: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n      description: To be added.\n    return:\n      type: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence`1,`0)\n  id: CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence`1,`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: CreateOrReuse(XmlQuerySequence<T>,T)\n  nameWithType: XmlQuerySequence<T>.CreateOrReuse(XmlQuerySequence<T>,T)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.CreateOrReuse(XmlQuerySequence<T>,T)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: public static System.Xml.Xsl.Runtime.XmlQuerySequence<T> CreateOrReuse (System.Xml.Xsl.Runtime.XmlQuerySequence<T> seq, T item);\n    parameters:\n    - id: seq\n      type: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n      description: To be added.\n    - id: item\n      type: T\n      description: To be added.\n    return:\n      type: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Empty\n  id: Empty\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: XmlQuerySequence<T>.Empty\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.Empty\n  type: Field\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: public static readonly System.Xml.Xsl.Runtime.XmlQuerySequence<T> Empty;\n    return:\n      type: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: XmlQuerySequence<T>.GetEnumerator()\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<T> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{T}\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.IndexOf(`0)\n  id: IndexOf(`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: IndexOf(T)\n  nameWithType: XmlQuerySequence<T>.IndexOf(T)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.IndexOf(T)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: public int IndexOf (T value);\n    parameters:\n    - id: value\n      type: T\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: XmlQuerySequence<T>.Item(Int32)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: public T this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.OnItemsChanged\n  id: OnItemsChanged\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: OnItemsChanged()\n  nameWithType: XmlQuerySequence<T>.OnItemsChanged()\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.OnItemsChanged()\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: protected virtual void OnItemsChanged ();\n    parameters: []\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.OnItemsChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.SortByKeys(System.Array)\n  id: SortByKeys(System.Array)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: SortByKeys(Array)\n  nameWithType: XmlQuerySequence<T>.SortByKeys(Array)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.SortByKeys(Array)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: public void SortByKeys (Array keys);\n    parameters:\n    - id: keys\n      type: System.Array\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.SortByKeys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  id: System#Collections#Generic#ICollection{T}#Add(`0)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(T)\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.ICollection(T)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.Generic.ICollection(T)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: void ICollection<T>.Add (T value);\n    parameters:\n    - id: value\n      type: T\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection<T>#Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Clear\n  id: System#Collections#Generic#ICollection{T}#Clear\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection()\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.ICollection()\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.Generic.ICollection()\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: void ICollection<T>.Clear ();\n    parameters: []\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection<T>#Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  id: System#Collections#Generic#ICollection{T}#IsReadOnly\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.ICollection\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection<T>#IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Remove(`0)\n  id: System#Collections#Generic#ICollection{T}#Remove(`0)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(T)\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.ICollection(T)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.Generic.ICollection(T)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: bool ICollection<T>.Remove (T value);\n    parameters:\n    - id: value\n      type: T\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection<T>#Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)\n  id: System#Collections#Generic#IList{T}#Insert(System.Int32,`0)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.IList(Int32,T)\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.IList(Int32,T)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.Generic.IList(Int32,T)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: void IList<T>.Insert (int index, T value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    - id: value\n      type: T\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList<T>#Insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)\n  id: System#Collections#Generic#IList{T}#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.IList(Int32)\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.IList(Int32)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.Generic.IList(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: void IList<T>.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList<T>#RemoveAt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: XmlQuerySequence<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: To be added.\n    - id: index\n      type: System.Int32\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: XmlQuerySequence<T>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: XmlQuerySequence<T>.System.Collections.ICollection.SyncRoot\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: XmlQuerySequence<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Add(Object)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Clear\n  id: System#Collections#IList#Clear\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Clear()\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Clear()\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.Clear()\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: void IList.Clear ();\n    parameters: []\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Contains(Object)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.IndexOf(Object)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    - id: value\n      type: System.Object\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.IsFixedSize\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsFixedSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.IsReadOnly\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Item(Int32)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Remove(Object)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#RemoveAt(System.Int32)\n  id: System#Collections#IList#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  langs:\n  - csharp\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: void IList.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n  overload: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#RemoveAt*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: XmlQuerySequence()\n  nameWithType: XmlQuerySequence<T>.XmlQuerySequence()\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.XmlQuerySequence()\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: XmlQuerySequence(Int32)\n  nameWithType: XmlQuerySequence<T>.XmlQuerySequence(Int32)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.XmlQuerySequence(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: XmlQuerySequence(T)\n  nameWithType: XmlQuerySequence<T>.XmlQuerySequence(T)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.XmlQuerySequence(T)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(`0[],System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: XmlQuerySequence(T[],Int32)\n  nameWithType: XmlQuerySequence<T>.XmlQuerySequence(T[],Int32)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.XmlQuerySequence(T[],Int32)\n- uid: T[]\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n  spec.csharp:\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Add(`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: Add(T)\n  nameWithType: XmlQuerySequence<T>.Add(T)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.Add(T)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Clear\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: Clear()\n  nameWithType: XmlQuerySequence<T>.Clear()\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.Clear()\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Contains(`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: Contains(T)\n  nameWithType: XmlQuerySequence<T>.Contains(T)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.Contains(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.CopyTo(`0[],System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: CopyTo(T[],Int32)\n  nameWithType: XmlQuerySequence<T>.CopyTo(T[],Int32)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.CopyTo(T[],Int32)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Count\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: Count\n  nameWithType: XmlQuerySequence<T>.Count\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.Count\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence`1)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: CreateOrReuse(XmlQuerySequence<T>)\n  nameWithType: XmlQuerySequence<T>.CreateOrReuse(XmlQuerySequence<T>)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.CreateOrReuse(XmlQuerySequence<T>)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  parent: System.Xml.Xsl.Runtime\n  isExternal: false\n  name: XmlQuerySequence<T>\n  nameWithType: XmlQuerySequence<T>\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence`1,`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: CreateOrReuse(XmlQuerySequence<T>,T)\n  nameWithType: XmlQuerySequence<T>.CreateOrReuse(XmlQuerySequence<T>,T)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.CreateOrReuse(XmlQuerySequence<T>,T)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Empty\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: Empty\n  nameWithType: XmlQuerySequence<T>.Empty\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.Empty\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.GetEnumerator\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: XmlQuerySequence<T>.GetEnumerator()\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{T}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.IndexOf(`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: IndexOf(T)\n  nameWithType: XmlQuerySequence<T>.IndexOf(T)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.IndexOf(T)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Item(System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: XmlQuerySequence<T>.Item(Int32)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.Item(Int32)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.OnItemsChanged\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: OnItemsChanged()\n  nameWithType: XmlQuerySequence<T>.OnItemsChanged()\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.OnItemsChanged()\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.SortByKeys(System.Array)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: SortByKeys(Array)\n  nameWithType: XmlQuerySequence<T>.SortByKeys(Array)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.SortByKeys(Array)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection(T)\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.ICollection(T)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.Generic.ICollection(T)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Clear\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection()\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.ICollection()\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.Generic.ICollection()\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.ICollection\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.Generic.ICollection\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Remove(`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection(T)\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.ICollection(T)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.Generic.ICollection(T)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.Generic.IList(Int32,T)\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.IList(Int32,T)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.Generic.IList(Int32,T)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.Generic.IList(Int32)\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.IList(Int32)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.Generic.IList(Int32)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: XmlQuerySequence<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#IsSynchronized\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: XmlQuerySequence<T>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.ICollection.IsSynchronized\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#SyncRoot\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: XmlQuerySequence<T>.System.Collections.ICollection.SyncRoot\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.ICollection.SyncRoot\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: XmlQuerySequence<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Add(System.Object)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Add(Object)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.Add(Object)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Clear\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.Clear()\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Clear()\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.Clear()\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Contains(System.Object)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Contains(Object)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.Contains(Object)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.IndexOf(Object)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.IndexOf(Object)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsFixedSize\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.IsFixedSize\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.IsFixedSize\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsReadOnly\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.IsReadOnly\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.IsReadOnly\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Item(System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Item(Int32)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.Item(Int32)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Remove(System.Object)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Remove(Object)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.Remove(Object)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#RemoveAt(System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>.System.Collections.IList.RemoveAt(Int32)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: XmlQuerySequence<T>\n  nameWithType: XmlQuerySequence<T>.XmlQuerySequence<T>\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Add*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: Add\n  nameWithType: XmlQuerySequence<T>.Add\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Clear*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: Clear\n  nameWithType: XmlQuerySequence<T>.Clear\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Contains*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: Contains\n  nameWithType: XmlQuerySequence<T>.Contains\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.CopyTo*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: CopyTo\n  nameWithType: XmlQuerySequence<T>.CopyTo\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Count*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: Count\n  nameWithType: XmlQuerySequence<T>.Count\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: CreateOrReuse\n  nameWithType: XmlQuerySequence<T>.CreateOrReuse\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.GetEnumerator*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: XmlQuerySequence<T>.GetEnumerator\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.IndexOf*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: IndexOf\n  nameWithType: XmlQuerySequence<T>.IndexOf\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Item*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: Item\n  nameWithType: XmlQuerySequence<T>.Item\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.OnItemsChanged*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: OnItemsChanged\n  nameWithType: XmlQuerySequence<T>.OnItemsChanged\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.SortByKeys*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: SortByKeys\n  nameWithType: XmlQuerySequence<T>.SortByKeys\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection<T>#Add*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection<T>.Add\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.ICollection<T>.Add\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection<T>#Clear*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection<T>.Clear\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.ICollection<T>.Clear\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection<T>#IsReadOnly*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection<T>.IsReadOnly\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.ICollection<T>.IsReadOnly\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection<T>#Remove*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection<T>.Remove\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.ICollection<T>.Remove\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList<T>#Insert*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.Generic.IList<T>.Insert\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.IList<T>.Insert\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList<T>#RemoveAt*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.Generic.IList<T>.RemoveAt\n  nameWithType: XmlQuerySequence<T>.System.Collections.Generic.IList<T>.RemoveAt\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#CopyTo*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: XmlQuerySequence<T>.System.Collections.ICollection.CopyTo\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#IsSynchronized*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: XmlQuerySequence<T>.System.Collections.ICollection.IsSynchronized\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#SyncRoot*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: XmlQuerySequence<T>.System.Collections.ICollection.SyncRoot\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: XmlQuerySequence<T>.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Add*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Add\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Clear*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.Clear\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Clear\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Contains*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.Contains\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Contains\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IndexOf*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.IndexOf\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.IndexOf\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Insert*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Insert\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsFixedSize*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.IsFixedSize\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsReadOnly*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.IsReadOnly\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Item*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.Item\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Item\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Remove*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.Remove\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#RemoveAt*\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: System.Collections.IList.RemoveAt\n  nameWithType: XmlQuerySequence<T>.System.Collections.IList.RemoveAt\n"}