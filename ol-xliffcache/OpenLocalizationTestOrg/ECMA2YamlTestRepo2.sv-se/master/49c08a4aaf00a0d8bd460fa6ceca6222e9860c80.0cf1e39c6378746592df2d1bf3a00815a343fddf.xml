{"nodes":[{"pos":[401,513],"content":"Determines whether Internet Protocol version 6 is enabled on the local computer. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether Internet Protocol version 6 is enabled on the local computer. This class cannot be inherited.","pos":[0,112],"nodes":[{"content":"Determines whether Internet Protocol version 6 is enabled on the local computer.","pos":[0,80]},{"content":"This class cannot be inherited.","pos":[81,112]}]}]},{"pos":[4237,4335],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Configuration.Ipv6Element\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Configuration.Ipv6Element\"></xref> class."},{"pos":[4347,4518],"content":"This constructor adds the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A> property to the <xref:System.Configuration.ConfigurationElement.Properties%2A> collection.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor adds the &lt;xref:System.Net.Configuration.Ipv6Element.Enabled%2A&gt; property to the &lt;xref:System.Configuration.ConfigurationElement.Properties%2A&gt; collection.","pos":[0,171],"source":"This constructor adds the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A> property to the <xref:System.Configuration.ConfigurationElement.Properties%2A> collection."}]},{"pos":[5013,5126],"content":"Gets or sets a Boolean value that indicates whether Internet Protocol version 6 is enabled on the local computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that indicates whether Internet Protocol version 6 is enabled on the local computer.","pos":[0,113]}]},{"pos":[5242,5397],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if IPv6 is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if IPv6 is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6044,6056],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Configuration.Ipv6Element\n  id: Ipv6Element\n  children:\n  - System.Net.Configuration.Ipv6Element.#ctor\n  - System.Net.Configuration.Ipv6Element.Enabled\n  - System.Net.Configuration.Ipv6Element.Properties\n  langs:\n  - csharp\n  name: Ipv6Element\n  nameWithType: Ipv6Element\n  fullName: System.Net.Configuration.Ipv6Element\n  type: Class\n  summary: Determines whether Internet Protocol version 6 is enabled on the local computer. This class cannot be inherited.\n  remarks: \"This class corresponds to the `enabled` attribute of the [\\\\&lt;ipv6\\\\&gt; Element (Network Settings)](../Topic/%3Cipv6%3E%20Element%20\\\\(Network%20Settings\\\\).md) configuration element.  \\n  \\n This class is used to specify whether the IPv6 protocol is supported on the local computer. IPv6 is disabled by default.  \\n  \\n This class provides programmatic access to information that can be stored in configuration files.\"\n  syntax:\n    content: 'public sealed class Ipv6Element : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.Net.Configuration.Ipv6Element.#ctor\n  id: '#ctor'\n  parent: System.Net.Configuration.Ipv6Element\n  langs:\n  - csharp\n  name: Ipv6Element()\n  nameWithType: Ipv6Element.Ipv6Element()\n  fullName: System.Net.Configuration.Ipv6Element.Ipv6Element()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Net.Configuration.Ipv6Element\"></xref> class.\n  remarks: This constructor adds the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A> property to the <xref:System.Configuration.ConfigurationElement.Properties%2A> collection.\n  syntax:\n    content: public Ipv6Element ();\n    parameters: []\n  overload: System.Net.Configuration.Ipv6Element.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.Ipv6Element.Enabled\n  id: Enabled\n  parent: System.Net.Configuration.Ipv6Element\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: Ipv6Element.Enabled\n  fullName: System.Net.Configuration.Ipv6Element.Enabled\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets a Boolean value that indicates whether Internet Protocol version 6 is enabled on the local computer.\n  syntax:\n    content: public bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if IPv6 is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Configuration.Ipv6Element.Enabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.Ipv6Element.Properties\n  id: Properties\n  parent: System.Net.Configuration.Ipv6Element\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: Ipv6Element.Properties\n  fullName: System.Net.Configuration.Ipv6Element.Properties\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.Net.Configuration.Ipv6Element.Properties*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.Net.Configuration.Ipv6Element.#ctor\n  parent: System.Net.Configuration.Ipv6Element\n  isExternal: false\n  name: Ipv6Element()\n  nameWithType: Ipv6Element.Ipv6Element()\n  fullName: System.Net.Configuration.Ipv6Element.Ipv6Element()\n- uid: System.Net.Configuration.Ipv6Element.Enabled\n  parent: System.Net.Configuration.Ipv6Element\n  isExternal: false\n  name: Enabled\n  nameWithType: Ipv6Element.Enabled\n  fullName: System.Net.Configuration.Ipv6Element.Enabled\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Configuration.Ipv6Element.Properties\n  parent: System.Net.Configuration.Ipv6Element\n  isExternal: false\n  name: Properties\n  nameWithType: Ipv6Element.Properties\n  fullName: System.Net.Configuration.Ipv6Element.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Net.Configuration.Ipv6Element.#ctor*\n  parent: System.Net.Configuration.Ipv6Element\n  isExternal: false\n  name: Ipv6Element\n  nameWithType: Ipv6Element.Ipv6Element\n- uid: System.Net.Configuration.Ipv6Element.Enabled*\n  parent: System.Net.Configuration.Ipv6Element\n  isExternal: false\n  name: Enabled\n  nameWithType: Ipv6Element.Enabled\n- uid: System.Net.Configuration.Ipv6Element.Properties*\n  parent: System.Net.Configuration.Ipv6Element\n  isExternal: false\n  name: Properties\n  nameWithType: Ipv6Element.Properties\n"}