{"nodes":[{"pos":[399,517],"content":"Defines an identifier for application domains that a cache implementation can use to interact with a host environment.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines an identifier for application domains that a cache implementation can use to interact with a host environment.","pos":[0,118]}]},{"pos":[530,1347],"content":"A [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] host environment such as ASP.NET can use the IApplicationIdentifier interface to define strings that identify individual application domains. The host environment implements the IApplicationIdentifier interface. This interface is then available to <xref:System.Runtime.Caching.ObjectCache> implementations through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property.       A cache implementation uses this reference to obtain an identifier for the application domain. In ASP.NET, cache implementations use the application identifier to construct identifiers for cache performance counters. This provides names for performance counter instances that can be distinguished between application domains when multiple application domains are running.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> host environment such as ASP.NET can use the IApplicationIdentifier interface to define strings that identify individual application domains.","pos":[0,201],"source":"A [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] host environment such as ASP.NET can use the IApplicationIdentifier interface to define strings that identify individual application domains."},{"content":"The host environment implements the IApplicationIdentifier interface.","pos":[202,271]},{"content":"This interface is then available to &lt;xref:System.Runtime.Caching.ObjectCache&gt; implementations through the &lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt; property.","pos":[272,437],"source":" This interface is then available to <xref:System.Runtime.Caching.ObjectCache> implementations through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property."},{"content":"A cache implementation uses this reference to obtain an identifier for the application domain.","pos":[444,538]},{"content":"In ASP.NET, cache implementations use the application identifier to construct identifiers for cache performance counters.","pos":[539,660]},{"content":"This provides names for performance counter instances that can be distinguished between application domains when multiple application domains are running.","pos":[661,815]}]},{"pos":[1918,1963],"content":"Gets an identifier for an application domain.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an identifier for an application domain.","pos":[0,45]}]},{"pos":[1976,2775],"content":"The GetApplicationId method is typically implemented by a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] host environment in order to construct an application identifier for an <xref:System.Runtime.Caching.ObjectCache> implementation. A <xref:System.Runtime.Caching.ObjectCache> implementation uses this information to identify the application domain that is currently running.       For example, in ASP.NET, the cache uses an application identifier to construct identifiers for cache performance counters. The cache calls the GetApplicationId method that is implemented by the host environment and the host returns the identifier. This provides names for performance counter instances that can be distinguished between application domains when multiple application domains are running.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetApplicationId method is typically implemented by a <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> host environment in order to construct an application identifier for an &lt;xref:System.Runtime.Caching.ObjectCache&gt; implementation.","pos":[0,245],"source":"The GetApplicationId method is typically implemented by a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] host environment in order to construct an application identifier for an <xref:System.Runtime.Caching.ObjectCache> implementation."},{"content":"A &lt;xref:System.Runtime.Caching.ObjectCache&gt; implementation uses this information to identify the application domain that is currently running.","pos":[246,388],"source":" A <xref:System.Runtime.Caching.ObjectCache> implementation uses this information to identify the application domain that is currently running."},{"content":"For example, in ASP.NET, the cache uses an application identifier to construct identifiers for cache performance counters.","pos":[395,517]},{"content":"The cache calls the GetApplicationId method that is implemented by the host environment and the host returns the identifier.","pos":[518,642]},{"content":"This provides names for performance counter instances that can be distinguished between application domains when multiple application domains are running.","pos":[643,797]}]},{"pos":[2911,2966],"content":"A unique identifier for the current application domain.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique identifier for the current application domain.","pos":[0,55]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Caching.Hosting.IApplicationIdentifier\n  id: IApplicationIdentifier\n  children:\n  - System.Runtime.Caching.Hosting.IApplicationIdentifier.GetApplicationId\n  langs:\n  - csharp\n  name: IApplicationIdentifier\n  nameWithType: IApplicationIdentifier\n  fullName: System.Runtime.Caching.Hosting.IApplicationIdentifier\n  type: Interface\n  summary: Defines an identifier for application domains that a cache implementation can use to interact with a host environment.\n  remarks: \"A [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] host environment such as ASP.NET can use the IApplicationIdentifier interface to define strings that identify individual application domains. The host environment implements the IApplicationIdentifier interface. This interface is then available to <xref:System.Runtime.Caching.ObjectCache> implementations through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property.  \\n  \\n A cache implementation uses this reference to obtain an identifier for the application domain. In ASP.NET, cache implementations use the application identifier to construct identifiers for cache performance counters. This provides names for performance counter instances that can be distinguished between application domains when multiple application domains are running.\"\n  syntax:\n    content: public interface IApplicationIdentifier\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.Caching.Hosting.IApplicationIdentifier.GetApplicationId\n  id: GetApplicationId\n  parent: System.Runtime.Caching.Hosting.IApplicationIdentifier\n  langs:\n  - csharp\n  name: GetApplicationId()\n  nameWithType: IApplicationIdentifier.GetApplicationId()\n  fullName: System.Runtime.Caching.Hosting.IApplicationIdentifier.GetApplicationId()\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Hosting\n  summary: Gets an identifier for an application domain.\n  remarks: \"The GetApplicationId method is typically implemented by a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] host environment in order to construct an application identifier for an <xref:System.Runtime.Caching.ObjectCache> implementation. A <xref:System.Runtime.Caching.ObjectCache> implementation uses this information to identify the application domain that is currently running.  \\n  \\n For example, in ASP.NET, the cache uses an application identifier to construct identifiers for cache performance counters. The cache calls the GetApplicationId method that is implemented by the host environment and the host returns the identifier. This provides names for performance counter instances that can be distinguished between application domains when multiple application domains are running.\"\n  syntax:\n    content: public string GetApplicationId ();\n    parameters: []\n    return:\n      type: System.String\n      description: A unique identifier for the current application domain.\n  overload: System.Runtime.Caching.Hosting.IApplicationIdentifier.GetApplicationId*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.Caching.Hosting.IApplicationIdentifier.GetApplicationId\n  parent: System.Runtime.Caching.Hosting.IApplicationIdentifier\n  isExternal: false\n  name: GetApplicationId()\n  nameWithType: IApplicationIdentifier.GetApplicationId()\n  fullName: System.Runtime.Caching.Hosting.IApplicationIdentifier.GetApplicationId()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Caching.Hosting.IApplicationIdentifier.GetApplicationId*\n  parent: System.Runtime.Caching.Hosting.IApplicationIdentifier\n  isExternal: false\n  name: GetApplicationId\n  nameWithType: IApplicationIdentifier.GetApplicationId\n"}