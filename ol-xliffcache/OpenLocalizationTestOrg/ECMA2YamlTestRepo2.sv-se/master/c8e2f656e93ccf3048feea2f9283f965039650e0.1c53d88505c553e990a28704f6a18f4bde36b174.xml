{"nodes":[{"pos":[338,509],"content":"The <ph id=\"ph1\">[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]</ph> class derived from <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Web.WebServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to instantiate data services.","needQuote":true,"needEscape":true,"source":"The [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] class derived from <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> used to instantiate data services."},{"pos":[522,1443],"content":"[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] are not autonomous server entities. Instead, the service is a component hosted in an environment such as the Windows Communication Foundation (WCF) that provides core server networking facilities. Specifically, a service does not bind to and listen on a network socket for incoming requests to its Representational State Transfer (REST) entry points. The host handles direct interactions with the network and support caching, scalability, and authentication modules.       [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host. This allows [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] to run in a range of hosting environments. For more information, see [Hosting the Data Service](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]</ph> are not autonomous server entities.","pos":[0,89],"source":"[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] are not autonomous server entities."},{"content":"Instead, the service is a component hosted in an environment such as the Windows Communication Foundation (WCF) that provides core server networking facilities.","pos":[90,250]},{"content":"Specifically, a service does not bind to and listen on a network socket for incoming requests to its Representational State Transfer (REST) entry points.","pos":[251,404]},{"content":"The host handles direct interactions with the network and support caching, scalability, and authentication modules.","pos":[405,520]},{"content":"<ph id=\"ph1\">[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]</ph> defines a generic hosting interface &lt;xref:System.Data.Services.IDataServiceHost&gt; that abstracts its implementation from a specific host.","pos":[527,717],"source":"[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host."},{"content":"This allows <ph id=\"ph1\">[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]</ph> to run in a range of hosting environments.","pos":[718,826],"source":" This allows [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] to run in a range of hosting environments."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Hosting the Data Service<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[827,919],"source":" For more information, see [Hosting the Data Service](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[6125,6254],"content":"Instantiates <bpt id=\"p1\">&lt;xref href=\"System.Data.Services.DataServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for <ph id=\"ph1\">[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]</ph>.","needQuote":true,"needEscape":true,"source":"Instantiates <xref href=\"System.Data.Services.DataServiceHost\"></xref> for [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]."},{"pos":[6267,6798],"content":"[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host. This allows [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] to run in a range of hosting environments. This interface should not be confused with <xref:System.Data.Services.DataServiceHost>, which instead handles registration and activation for the service. A default <xref:System.Data.Services.IDataServiceHost> is used in this case.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]</ph> defines a generic hosting interface &lt;xref:System.Data.Services.IDataServiceHost&gt; that abstracts its implementation from a specific host.","pos":[0,190],"source":"[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host."},{"content":"This allows <ph id=\"ph1\">[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]</ph> to run in a range of hosting environments.","pos":[191,299],"source":" This allows [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] to run in a range of hosting environments."},{"content":"This interface should not be confused with &lt;xref:System.Data.Services.DataServiceHost&gt;, which instead handles registration and activation for the service.","pos":[300,454],"source":" This interface should not be confused with <xref:System.Data.Services.DataServiceHost>, which instead handles registration and activation for the service."},{"content":"A default &lt;xref:System.Data.Services.IDataServiceHost&gt; is used in this case.","pos":[455,531],"source":" A default <xref:System.Data.Services.IDataServiceHost> is used in this case."}]},{"pos":[6968,7049],"content":"Identifies the <ph id=\"ph1\">[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]</ph> to the host.","needQuote":true,"needEscape":true,"source":"Identifies the [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] to the host."},{"pos":[7118,7138],"content":"The URI of the host.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URI of the host.","pos":[0,20]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Services.DataServiceHost\n  id: DataServiceHost\n  children:\n  - System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])\n  langs:\n  - csharp\n  name: DataServiceHost\n  nameWithType: DataServiceHost\n  fullName: System.Data.Services.DataServiceHost\n  type: Class\n  summary: The [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] class derived from <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> used to instantiate data services.\n  remarks: \"[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] are not autonomous server entities. Instead, the service is a component hosted in an environment such as the Windows Communication Foundation (WCF) that provides core server networking facilities. Specifically, a service does not bind to and listen on a network socket for incoming requests to its Representational State Transfer (REST) entry points. The host handles direct interactions with the network and support caching, scalability, and authentication modules.  \\n  \\n [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host. This allows [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] to run in a range of hosting environments. For more information, see [Hosting the Data Service](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public class DataServiceHost : System.ServiceModel.Web.WebServiceHost\n  inheritance:\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.ServiceHostBase\n  - System.ServiceModel.ServiceHost\n  - System.ServiceModel.Web.WebServiceHost\n  implements: []\n  inheritedMembers:\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  - System.ServiceModel.ServiceHost.ApplyConfiguration\n  - System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  - System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)\n  - System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)\n  - System.ServiceModel.ServiceHost.OnClosed\n  - System.ServiceModel.ServiceHost.SingletonInstance\n  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  - System.ServiceModel.ServiceHostBase.Authentication\n  - System.ServiceModel.ServiceHostBase.Authorization\n  - System.ServiceModel.ServiceHostBase.BaseAddresses\n  - System.ServiceModel.ServiceHostBase.ChannelDispatchers\n  - System.ServiceModel.ServiceHostBase.CloseTimeout\n  - System.ServiceModel.ServiceHostBase.Credentials\n  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout\n  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout\n  - System.ServiceModel.ServiceHostBase.Description\n  - System.ServiceModel.ServiceHostBase.Extensions\n  - System.ServiceModel.ServiceHostBase.ImplementedContracts\n  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)\n  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)\n  - System.ServiceModel.ServiceHostBase.InitializeRuntime\n  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)\n  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit\n  - System.ServiceModel.ServiceHostBase.OnAbort\n  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)\n  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)\n  - System.ServiceModel.ServiceHostBase.OnOpened\n  - System.ServiceModel.ServiceHostBase.OpenTimeout\n  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters\n  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)\n  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose\n  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived\n  - System.ServiceModel.Web.WebServiceHost.OnOpening\n  platform:\n  - net462\n- uid: System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])\n  id: '#ctor(System.Type,System.Uri[])'\n  parent: System.Data.Services.DataServiceHost\n  langs:\n  - csharp\n  name: DataServiceHost(Type,Uri[])\n  nameWithType: DataServiceHost.DataServiceHost(Type,Uri[])\n  fullName: System.Data.Services.DataServiceHost.DataServiceHost(Type,Uri[])\n  type: Constructor\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  summary: Instantiates <xref href=\"System.Data.Services.DataServiceHost\"></xref> for [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)].\n  remarks: '[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host. This allows [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] to run in a range of hosting environments. This interface should not be confused with <xref:System.Data.Services.DataServiceHost>, which instead handles registration and activation for the service. A default <xref:System.Data.Services.IDataServiceHost> is used in this case.'\n  syntax:\n    content: public DataServiceHost (Type serviceType, Uri[] baseAddresses);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: Identifies the [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] to the host.\n    - id: baseAddresses\n      type: System.Uri[]\n      description: The URI of the host.\n  overload: System.Data.Services.DataServiceHost.#ctor*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Web.WebServiceHost\n  isExternal: false\n  name: System.ServiceModel.Web.WebServiceHost\n- uid: System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])\n  parent: System.Data.Services.DataServiceHost\n  isExternal: false\n  name: DataServiceHost(Type,Uri[])\n  nameWithType: DataServiceHost.DataServiceHost(Type,Uri[])\n  fullName: System.Data.Services.DataServiceHost.DataServiceHost(Type,Uri[])\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Uri[]\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri[]\n  spec.csharp:\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: Uri[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Services.DataServiceHost.#ctor*\n  parent: System.Data.Services.DataServiceHost\n  isExternal: false\n  name: DataServiceHost\n  nameWithType: DataServiceHost.DataServiceHost\n"}