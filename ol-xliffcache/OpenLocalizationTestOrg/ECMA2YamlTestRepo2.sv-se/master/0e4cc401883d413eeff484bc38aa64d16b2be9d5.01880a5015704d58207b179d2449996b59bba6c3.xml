{"nodes":[{"pos":[525,668],"content":"Specifies the settings provider used to provide storage for the current application settings class or property. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the settings provider used to provide storage for the current application settings class or property. This class cannot be inherited.","pos":[0,143],"nodes":[{"content":"Specifies the settings provider used to provide storage for the current application settings class or property.","pos":[0,111]},{"content":"This class cannot be inherited.","pos":[112,143]}]}]},{"pos":[681,1974],"content":"Each application settings class defines a group of application settings properties that represent information that persists between executions of the application. However, it is a settings provider—a class derived from <xref:System.Configuration.SettingsProvider>—that actually provides the storage mechanism.       The SettingsProviderAttribute specifies the settings provider used to provide storage for application settings properties. This attribute can be applied to the entire application settings class or individual application settings properties. A SettingsProviderAttribute set at the property level will override the class-level attribute. If a settings provider is not explicitly specified, the default provider is used. For client applications, the default provider is <xref:System.Configuration.LocalFileSettingsProvider>.       Setting providers cannot be determined at run time. Any run-time determination of storage methods must be coded into the settings provider class itself.      > [!CAUTION] >  Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information. A settings provider should be thoroughly vetted before it is adopted for general use.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Each application settings class defines a group of application settings properties that represent information that persists between executions of the application.","pos":[0,162]},{"content":"However, it is a settings provider—a class derived from &lt;xref:System.Configuration.SettingsProvider&gt;—that actually provides the storage mechanism.","pos":[163,309],"source":" However, it is a settings provider—a class derived from <xref:System.Configuration.SettingsProvider>—that actually provides the storage mechanism."},{"content":"The SettingsProviderAttribute specifies the settings provider used to provide storage for application settings properties.","pos":[316,438]},{"content":"This attribute can be applied to the entire application settings class or individual application settings properties.","pos":[439,556]},{"content":"A SettingsProviderAttribute set at the property level will override the class-level attribute.","pos":[557,651]},{"content":"If a settings provider is not explicitly specified, the default provider is used.","pos":[652,733]},{"content":"For client applications, the default provider is &lt;xref:System.Configuration.LocalFileSettingsProvider&gt;.","pos":[734,837],"source":" For client applications, the default provider is <xref:System.Configuration.LocalFileSettingsProvider>."},{"content":"Setting providers cannot be determined at run time.","pos":[844,895]},{"content":"Any run-time determination of storage methods must be coded into the settings provider class itself.","pos":[896,996]},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information.","pos":[1002,1200],"source":"      > [!CAUTION] >  Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information."},{"content":"A settings provider should be thoroughly vetted before it is adopted for general use.","pos":[1201,1286]}]},{"pos":[2744,2849],"content":"Initializes an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.SettingsProviderAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes an instance of the <xref href=\"System.Configuration.SettingsProviderAttribute\"></xref> class."},{"pos":[2862,3303],"content":"The type name is the name of the class, derived from <xref:System.Configuration.SettingsProvider>, that is being specified as the settings provider.      > [!CAUTION] >  Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information. A settings provider should be thoroughly vetted before it is adopted for general use.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The type name is the name of the class, derived from &lt;xref:System.Configuration.SettingsProvider&gt;, that is being specified as the settings provider.","pos":[0,148],"source":"The type name is the name of the class, derived from <xref:System.Configuration.SettingsProvider>, that is being specified as the settings provider."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information.","pos":[154,352],"source":"      > [!CAUTION] >  Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information."},{"content":"A settings provider should be thoroughly vetted before it is adopted for general use.","pos":[353,438]}]},{"pos":[3476,3544],"content":"A <xref:System.String> containing the name of the settings provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; containing the name of the settings provider.","pos":[0,68],"source":"A <xref:System.String> containing the name of the settings provider."}]},{"pos":[4123,4231],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.SettingsProviderAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.SettingsProviderAttribute\"></xref> class."},{"pos":[4391,4450],"content":"A <xref:System.Type> containing the settings provider type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; containing the settings provider type.","pos":[0,59],"source":"A <xref:System.Type> containing the settings provider type."}]},{"pos":[4975,5019],"content":"Gets the type name of the settings provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type name of the settings provider.","pos":[0,44]}]},{"pos":[5031,5154],"content":"The ProviderTypeName property is set in the <xref:System.Configuration.SettingsProviderAttribute.%23ctor%2A> for the class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ProviderTypeName property is set in the &lt;xref:System.Configuration.SettingsProviderAttribute.%23ctor%2A&gt; for the class.","pos":[0,123],"source":"The ProviderTypeName property is set in the <xref:System.Configuration.SettingsProviderAttribute.%23ctor%2A> for the class."}]},{"pos":[5275,5343],"content":"A <xref:System.String> containing the name of the settings provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; containing the name of the settings provider.","pos":[0,68],"source":"A <xref:System.String> containing the name of the settings provider."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.SettingsProviderAttribute\n  id: SettingsProviderAttribute\n  children:\n  - System.Configuration.SettingsProviderAttribute.#ctor(System.String)\n  - System.Configuration.SettingsProviderAttribute.#ctor(System.Type)\n  - System.Configuration.SettingsProviderAttribute.ProviderTypeName\n  langs:\n  - csharp\n  name: SettingsProviderAttribute\n  nameWithType: SettingsProviderAttribute\n  fullName: System.Configuration.SettingsProviderAttribute\n  type: Class\n  summary: Specifies the settings provider used to provide storage for the current application settings class or property. This class cannot be inherited.\n  remarks: \"Each application settings class defines a group of application settings properties that represent information that persists between executions of the application. However, it is a settings provider—a class derived from <xref:System.Configuration.SettingsProvider>—that actually provides the storage mechanism.  \\n  \\n The SettingsProviderAttribute specifies the settings provider used to provide storage for application settings properties. This attribute can be applied to the entire application settings class or individual application settings properties. A SettingsProviderAttribute set at the property level will override the class-level attribute. If a settings provider is not explicitly specified, the default provider is used. For client applications, the default provider is <xref:System.Configuration.LocalFileSettingsProvider>.  \\n  \\n Setting providers cannot be determined at run time. Any run-time determination of storage methods must be coded into the settings provider class itself.  \\n  \\n> [!CAUTION]\\n>  Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information. A settings provider should be thoroughly vetted before it is adopted for general use.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property)]\n\n      public sealed class SettingsProviderAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Configuration.SettingsProviderAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Configuration.SettingsProviderAttribute\n  langs:\n  - csharp\n  name: SettingsProviderAttribute(String)\n  nameWithType: SettingsProviderAttribute.SettingsProviderAttribute(String)\n  fullName: System.Configuration.SettingsProviderAttribute.SettingsProviderAttribute(String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Configuration\n  summary: Initializes an instance of the <xref href=\"System.Configuration.SettingsProviderAttribute\"></xref> class.\n  remarks: \"The type name is the name of the class, derived from <xref:System.Configuration.SettingsProvider>, that is being specified as the settings provider.  \\n  \\n> [!CAUTION]\\n>  Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information. A settings provider should be thoroughly vetted before it is adopted for general use.\"\n  syntax:\n    content: public SettingsProviderAttribute (string providerTypeName);\n    parameters:\n    - id: providerTypeName\n      type: System.String\n      description: A <xref:System.String> containing the name of the settings provider.\n  overload: System.Configuration.SettingsProviderAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.SettingsProviderAttribute.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.Configuration.SettingsProviderAttribute\n  langs:\n  - csharp\n  name: SettingsProviderAttribute(Type)\n  nameWithType: SettingsProviderAttribute.SettingsProviderAttribute(Type)\n  fullName: System.Configuration.SettingsProviderAttribute.SettingsProviderAttribute(Type)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.SettingsProviderAttribute\"></xref> class.\n  syntax:\n    content: public SettingsProviderAttribute (Type providerType);\n    parameters:\n    - id: providerType\n      type: System.Type\n      description: A <xref:System.Type> containing the settings provider type.\n  overload: System.Configuration.SettingsProviderAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.SettingsProviderAttribute.ProviderTypeName\n  id: ProviderTypeName\n  parent: System.Configuration.SettingsProviderAttribute\n  langs:\n  - csharp\n  name: ProviderTypeName\n  nameWithType: SettingsProviderAttribute.ProviderTypeName\n  fullName: System.Configuration.SettingsProviderAttribute.ProviderTypeName\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Configuration\n  summary: Gets the type name of the settings provider.\n  remarks: The ProviderTypeName property is set in the <xref:System.Configuration.SettingsProviderAttribute.%23ctor%2A> for the class.\n  syntax:\n    content: public string ProviderTypeName { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the name of the settings provider.\n  overload: System.Configuration.SettingsProviderAttribute.ProviderTypeName*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.Configuration.SettingsProviderAttribute.#ctor(System.String)\n  parent: System.Configuration.SettingsProviderAttribute\n  isExternal: false\n  name: SettingsProviderAttribute(String)\n  nameWithType: SettingsProviderAttribute.SettingsProviderAttribute(String)\n  fullName: System.Configuration.SettingsProviderAttribute.SettingsProviderAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.SettingsProviderAttribute.#ctor(System.Type)\n  parent: System.Configuration.SettingsProviderAttribute\n  isExternal: false\n  name: SettingsProviderAttribute(Type)\n  nameWithType: SettingsProviderAttribute.SettingsProviderAttribute(Type)\n  fullName: System.Configuration.SettingsProviderAttribute.SettingsProviderAttribute(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Configuration.SettingsProviderAttribute.ProviderTypeName\n  parent: System.Configuration.SettingsProviderAttribute\n  isExternal: false\n  name: ProviderTypeName\n  nameWithType: SettingsProviderAttribute.ProviderTypeName\n  fullName: System.Configuration.SettingsProviderAttribute.ProviderTypeName\n- uid: System.Configuration.SettingsProviderAttribute.#ctor*\n  parent: System.Configuration.SettingsProviderAttribute\n  isExternal: false\n  name: SettingsProviderAttribute\n  nameWithType: SettingsProviderAttribute.SettingsProviderAttribute\n- uid: System.Configuration.SettingsProviderAttribute.ProviderTypeName*\n  parent: System.Configuration.SettingsProviderAttribute\n  isExternal: false\n  name: ProviderTypeName\n  nameWithType: SettingsProviderAttribute.ProviderTypeName\n"}