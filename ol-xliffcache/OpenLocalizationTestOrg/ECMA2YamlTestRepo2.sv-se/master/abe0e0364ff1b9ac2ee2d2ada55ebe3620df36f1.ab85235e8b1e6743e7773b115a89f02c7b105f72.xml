{"nodes":[{"pos":[764,878],"content":"When overridden in a derived class, represents the results of the authorization policies that have been evaluated.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, represents the results of the authorization policies that have been evaluated.","pos":[0,114]}]},{"pos":[891,2715],"content":"Claims are added to an EvaluationContext by authorization policies. An authorization policy takes a set of claims, such as those found in a security token, and adds additional claims based on the current set. For instance, an authorization policy might evaluate a claim that contains the date of birth and add a claim that states the user is over 21 years old and add an Over21 claim to the EvaluationContext.       Classes that implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface do not authorize users, but they enable the <xref:System.ServiceModel.ServiceAuthorizationManager> class to do so. The <xref:System.ServiceModel.ServiceAuthorizationManager> calls the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method for each authorization policy in effect. The <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method determines whether additional claims should be added for the user based on the current claims. An authorization policy's <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method may be called multiple times, as claims are added to the EvaluationContext by other authorization policies. When all authorization policies in effect are done, the <xref:System.ServiceModel.ServiceAuthorizationManager> class makes authorization decisions based upon the final set of claims. The <xref:System.ServiceModel.ServiceAuthorizationManager> class then creates an <xref:System.IdentityModel.Policy.AuthorizationContext> that contains an immutable set of claims that reflects these authorization decisions.       An evaluation context contains a set of <xref:System.IdentityModel.Claims.ClaimSet> objects: an expiration time, which specifies the span of time during which the evaluation context is valid, and a unique identifier.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Claims are added to an EvaluationContext by authorization policies. An authorization policy takes a set of claims, such as those found in a security token, and adds additional claims based on the current set. For instance, an authorization policy might evaluate a claim that contains the date of birth and add a claim that states the user is over 21 years old and add an Over21 claim to the EvaluationContext.       Classes that implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface do not authorize users, but they enable the <xref:System.ServiceModel.ServiceAuthorizationManager> class to do so. The <xref:System.ServiceModel.ServiceAuthorizationManager> calls the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method for each authorization policy in effect. The <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method determines whether additional claims should be added for the user based on the current claims. An authorization policy's <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method may be called multiple times, as claims are added to the EvaluationContext by other authorization policies. When all authorization policies in effect are done, the <xref:System.ServiceModel.ServiceAuthorizationManager> class makes authorization decisions based upon the final set of claims. The <xref:System.ServiceModel.ServiceAuthorizationManager> class then creates an <xref:System.IdentityModel.Policy.AuthorizationContext> that contains an immutable set of claims that reflects these authorization decisions.       An evaluation context contains a set of <xref:System.IdentityModel.Claims.ClaimSet> objects: an expiration time, which specifies the span of time during which the evaluation context is valid, and a unique identifier.","pos":[0,1820],"nodes":[{"content":"Claims are added to an EvaluationContext by authorization policies.","pos":[0,67]},{"content":"An authorization policy takes a set of claims, such as those found in a security token, and adds additional claims based on the current set.","pos":[68,208]},{"content":"For instance, an authorization policy might evaluate a claim that contains the date of birth and add a claim that states the user is over 21 years old and add an Over21 claim to the EvaluationContext.","pos":[209,409]},{"content":"Classes that implement the &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt; interface do not authorize users, but they enable the &lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt; class to do so.","pos":[416,623],"source":"       Classes that implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface do not authorize users, but they enable the <xref:System.ServiceModel.ServiceAuthorizationManager> class to do so."},{"content":"The &lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt; calls the &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A&gt; method for each authorization policy in effect.","pos":[624,808],"source":" The <xref:System.ServiceModel.ServiceAuthorizationManager> calls the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method for each authorization policy in effect."},{"content":"The &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A&gt; method determines whether additional claims should be added for the user based on the current claims.","pos":[809,982],"source":" The <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method determines whether additional claims should be added for the user based on the current claims."},{"content":"An authorization policy's &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A&gt; method may be called multiple times, as claims are added to the EvaluationContext by other authorization policies.","pos":[983,1191],"source":" An authorization policy's <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method may be called multiple times, as claims are added to the EvaluationContext by other authorization policies."},{"content":"When all authorization policies in effect are done, the &lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt; class makes authorization decisions based upon the final set of claims.","pos":[1192,1374],"source":" When all authorization policies in effect are done, the <xref:System.ServiceModel.ServiceAuthorizationManager> class makes authorization decisions based upon the final set of claims."},{"content":"The &lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt; class then creates an &lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt; that contains an immutable set of claims that reflects these authorization decisions.","pos":[1375,1597],"source":" The <xref:System.ServiceModel.ServiceAuthorizationManager> class then creates an <xref:System.IdentityModel.Policy.AuthorizationContext> that contains an immutable set of claims that reflects these authorization decisions."},{"content":"An evaluation context contains a set of &lt;xref:System.IdentityModel.Claims.ClaimSet&gt; objects: an expiration time, which specifies the span of time during which the evaluation context is valid, and a unique identifier.","pos":[1604,1820],"source":"       An evaluation context contains a set of <xref:System.IdentityModel.Claims.ClaimSet> objects: an expiration time, which specifies the span of time during which the evaluation context is valid, and a unique identifier."}]}]},{"pos":[3296,3403],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.EvaluationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Policy.EvaluationContext\"></xref> class."},{"pos":[4251,4298],"content":"Adds a set of claims to the evaluation context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a set of claims to the evaluation context.","pos":[0,47]}]},{"pos":[4311,4644],"content":"The claims are added to the set of claims contained within the <xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A> property.       Each time the AddClaimSet method is called to add claims to the evaluation context, the <xref:System.IdentityModel.Policy.EvaluationContext.Generation%2A> property should be incremented.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The claims are added to the set of claims contained within the <xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A> property.       Each time the AddClaimSet method is called to add claims to the evaluation context, the <xref:System.IdentityModel.Policy.EvaluationContext.Generation%2A> property should be incremented.","pos":[0,331],"nodes":[{"content":"The claims are added to the set of claims contained within the &lt;xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A&gt; property.","pos":[0,138],"source":"The claims are added to the set of claims contained within the <xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A> property."},{"content":"Each time the AddClaimSet method is called to add claims to the evaluation context, the &lt;xref:System.IdentityModel.Policy.EvaluationContext.Generation%2A&gt; property should be incremented.","pos":[145,331],"source":"       Each time the AddClaimSet method is called to add claims to the evaluation context, the <xref:System.IdentityModel.Policy.EvaluationContext.Generation%2A> property should be incremented."}]}]},{"pos":[4921,5083],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the authorization policy that is adding claims to the evaluation context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that represents the authorization policy that is adding claims to the evaluation context."},{"pos":[5171,5261],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Claims.ClaimSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains a set of claims.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref> that contains a set of claims."},{"pos":[5766,5945],"content":"Gets a read-only collection of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Claims.ClaimSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that contains the claims added by authorization policies that have been evaluated.","needQuote":true,"needEscape":true,"source":"Gets a read-only collection of <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref> objects that contains the claims added by authorization policies that have been evaluated."},{"pos":[5957,6116],"content":"To add claims to this collection, for example from an authorization policy, use the <xref:System.IdentityModel.Policy.EvaluationContext.AddClaimSet%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To add claims to this collection, for example from an authorization policy, use the &lt;xref:System.IdentityModel.Policy.EvaluationContext.AddClaimSet%2A&gt; method.","pos":[0,159],"source":"To add claims to this collection, for example from an authorization policy, use the <xref:System.IdentityModel.Policy.EvaluationContext.AddClaimSet%2A> method."}]},{"pos":[6394,6553],"content":"A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; objects that contains the claims added by authorization policies that have been evaluated.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id=\"ph2\">&amp;gt;</ph> objects that contains the claims added by authorization policies that have been evaluated.","pos":[0,159],"source":"A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; objects that contains the claims added by authorization policies that have been evaluated."}]},{"pos":[7061,7140],"content":"Gets the number of times that claims have been added to the evaluation context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of times that claims have been added to the evaluation context.","pos":[0,79]}]},{"pos":[7153,8085],"content":"The <xref:System.ServiceModel.ServiceAuthorizationManager> class uses the Generation property to determine if another evaluation round is required. Each time an authorization policy calls the `AddToTarget` method to add claims to the evaluation context, the Generation property is incremented.       The <xref:System.ServiceModel.ServiceAuthorizationManager> class examines the Generation property after calling the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method on all authorization policies again. If the Generation property has been incremented during evaluation, the <xref:System.ServiceModel.ServiceAuthorizationManager> class calls the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method on any authorization policies that returned `false` the last time the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method was called on that authorization policy.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt; class uses the Generation property to determine if another evaluation round is required.","pos":[0,147],"source":"The <xref:System.ServiceModel.ServiceAuthorizationManager> class uses the Generation property to determine if another evaluation round is required."},{"content":"Each time an authorization policy calls the <ph id=\"ph1\">`AddToTarget`</ph> method to add claims to the evaluation context, the Generation property is incremented.","pos":[148,293],"source":" Each time an authorization policy calls the `AddToTarget` method to add claims to the evaluation context, the Generation property is incremented."},{"content":"The &lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt; class examines the Generation property after calling the &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A&gt; method on all authorization policies again.","pos":[300,527],"source":"       The <xref:System.ServiceModel.ServiceAuthorizationManager> class examines the Generation property after calling the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method on all authorization policies again."},{"content":"If the Generation property has been incremented during evaluation, the &lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt; class calls the &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A&gt; method on any authorization policies that returned <ph id=\"ph1\">`false`</ph> the last time the &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A&gt; method was called on that authorization policy.","pos":[528,930],"source":" If the Generation property has been incremented during evaluation, the <xref:System.ServiceModel.ServiceAuthorizationManager> class calls the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method on any authorization policies that returned `false` the last time the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method was called on that authorization policy."}]},{"pos":[8206,8280],"content":"The number of times that claims have been added to the evaluation context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of times that claims have been added to the evaluation context.","pos":[0,74]}]},{"pos":[8789,8919],"content":"Gets a collection of non-claim properties associated with this <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.EvaluationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a collection of non-claim properties associated with this <xref href=\"System.IdentityModel.Policy.EvaluationContext\"></xref>."},{"pos":[8931,9490],"content":"The classes in the <xref:System.IdentityModel.Selectors> namespace that implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface (authorization policies) add a property named `Identities` to the.<xref:System.IdentityModel.Policy.AuthorizationContext.Properties%2A> collection. The `Identities` property contains an object of type <xref:System.Collections.Generic.IList%601> that contains one or more <xref:System.Security.Principal.IIdentity> instances that represent identity information that is provided by the authorization policies.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The classes in the &lt;xref:System.IdentityModel.Selectors&gt; namespace that implement the &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt; interface (authorization policies) add a property named <ph id=\"ph1\">`Identities`</ph> to the.&lt;xref:System.IdentityModel.Policy.AuthorizationContext.Properties%2A&gt; collection.","pos":[0,299],"source":"The classes in the <xref:System.IdentityModel.Selectors> namespace that implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface (authorization policies) add a property named `Identities` to the.<xref:System.IdentityModel.Policy.AuthorizationContext.Properties%2A> collection."},{"content":"The <ph id=\"ph1\">`Identities`</ph> property contains an object of type &lt;xref:System.Collections.Generic.IList%601&gt; that contains one or more &lt;xref:System.Security.Principal.IIdentity&gt; instances that represent identity information that is provided by the authorization policies.","pos":[300,559],"source":" The `Identities` property contains an object of type <xref:System.Collections.Generic.IList%601> that contains one or more <xref:System.Security.Principal.IIdentity> instances that represent identity information that is provided by the authorization policies."}]},{"pos":[9715,9824],"content":"A &lt;xref:System.Collections.Generic.Dictionary%602&gt; that specifies a collection of non-claim properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id=\"ph2\">&amp;gt;</ph> that specifies a collection of non-claim properties.","pos":[0,109],"source":"A &lt;xref:System.Collections.Generic.Dictionary%602&gt; that specifies a collection of non-claim properties."}]},{"pos":[10445,10568],"content":"Sets the date and time at which this <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.EvaluationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is no longer valid.","needQuote":true,"needEscape":true,"source":"Sets the date and time at which this <xref href=\"System.IdentityModel.Policy.EvaluationContext\"></xref> is no longer valid."},{"pos":[10580,10752],"content":"Calling the RecordExpirationTime method multiple times only has an effect if the <ph id=\"ph1\">`expirationTime`</ph> parameter has a value that is earlier than the previously specified value.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Calling the RecordExpirationTime method multiple times only has an effect if the `expirationTime` parameter has a value that is earlier than the previously specified value."},{"pos":[10933,11103],"content":"A &lt;xref:System.DateTime&gt; value that indicates the date and time when this <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.AuthorizationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is no longer valid.","needQuote":true,"needEscape":true,"source":"A <xref:System.DateTime> value that indicates the date and time when this <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> object is no longer valid."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Policy.EvaluationContext\n  id: EvaluationContext\n  children:\n  - System.IdentityModel.Policy.EvaluationContext.#ctor\n  - System.IdentityModel.Policy.EvaluationContext.AddClaimSet(System.IdentityModel.Policy.IAuthorizationPolicy,System.IdentityModel.Claims.ClaimSet)\n  - System.IdentityModel.Policy.EvaluationContext.ClaimSets\n  - System.IdentityModel.Policy.EvaluationContext.Generation\n  - System.IdentityModel.Policy.EvaluationContext.Properties\n  - System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime(System.DateTime)\n  langs:\n  - csharp\n  name: EvaluationContext\n  nameWithType: EvaluationContext\n  fullName: System.IdentityModel.Policy.EvaluationContext\n  type: Class\n  summary: When overridden in a derived class, represents the results of the authorization policies that have been evaluated.\n  remarks: \"Claims are added to an EvaluationContext by authorization policies. An authorization policy takes a set of claims, such as those found in a security token, and adds additional claims based on the current set. For instance, an authorization policy might evaluate a claim that contains the date of birth and add a claim that states the user is over 21 years old and add an Over21 claim to the EvaluationContext.  \\n  \\n Classes that implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface do not authorize users, but they enable the <xref:System.ServiceModel.ServiceAuthorizationManager> class to do so. The <xref:System.ServiceModel.ServiceAuthorizationManager> calls the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method for each authorization policy in effect. The <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method determines whether additional claims should be added for the user based on the current claims. An authorization policy's <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method may be called multiple times, as claims are added to the EvaluationContext by other authorization policies. When all authorization policies in effect are done, the <xref:System.ServiceModel.ServiceAuthorizationManager> class makes authorization decisions based upon the final set of claims. The <xref:System.ServiceModel.ServiceAuthorizationManager> class then creates an <xref:System.IdentityModel.Policy.AuthorizationContext> that contains an immutable set of claims that reflects these authorization decisions.  \\n  \\n An evaluation context contains a set of <xref:System.IdentityModel.Claims.ClaimSet> objects: an expiration time, which specifies the span of time during which the evaluation context is valid, and a unique identifier.\"\n  syntax:\n    content: public abstract class EvaluationContext\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Policy.EvaluationContext.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Policy.EvaluationContext\n  langs:\n  - csharp\n  name: EvaluationContext()\n  nameWithType: EvaluationContext.EvaluationContext()\n  fullName: System.IdentityModel.Policy.EvaluationContext.EvaluationContext()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Policy\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Policy.EvaluationContext\"></xref> class.\n  syntax:\n    content: protected EvaluationContext ();\n    parameters: []\n  overload: System.IdentityModel.Policy.EvaluationContext.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Policy.EvaluationContext.AddClaimSet(System.IdentityModel.Policy.IAuthorizationPolicy,System.IdentityModel.Claims.ClaimSet)\n  id: AddClaimSet(System.IdentityModel.Policy.IAuthorizationPolicy,System.IdentityModel.Claims.ClaimSet)\n  parent: System.IdentityModel.Policy.EvaluationContext\n  langs:\n  - csharp\n  name: AddClaimSet(IAuthorizationPolicy,ClaimSet)\n  nameWithType: EvaluationContext.AddClaimSet(IAuthorizationPolicy,ClaimSet)\n  fullName: System.IdentityModel.Policy.EvaluationContext.AddClaimSet(IAuthorizationPolicy,ClaimSet)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Policy\n  summary: Adds a set of claims to the evaluation context.\n  remarks: \"The claims are added to the set of claims contained within the <xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A> property.  \\n  \\n Each time the AddClaimSet method is called to add claims to the evaluation context, the <xref:System.IdentityModel.Policy.EvaluationContext.Generation%2A> property should be incremented.\"\n  syntax:\n    content: public abstract void AddClaimSet (System.IdentityModel.Policy.IAuthorizationPolicy policy, System.IdentityModel.Claims.ClaimSet claimSet);\n    parameters:\n    - id: policy\n      type: System.IdentityModel.Policy.IAuthorizationPolicy\n      description: An <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that represents the authorization policy that is adding claims to the evaluation context.\n    - id: claimSet\n      type: System.IdentityModel.Claims.ClaimSet\n      description: A <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref> that contains a set of claims.\n  overload: System.IdentityModel.Policy.EvaluationContext.AddClaimSet*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Policy.EvaluationContext.ClaimSets\n  id: ClaimSets\n  parent: System.IdentityModel.Policy.EvaluationContext\n  langs:\n  - csharp\n  name: ClaimSets\n  nameWithType: EvaluationContext.ClaimSets\n  fullName: System.IdentityModel.Policy.EvaluationContext.ClaimSets\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Policy\n  summary: Gets a read-only collection of <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref> objects that contains the claims added by authorization policies that have been evaluated.\n  remarks: To add claims to this collection, for example from an authorization policy, use the <xref:System.IdentityModel.Policy.EvaluationContext.AddClaimSet%2A> method.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Claims.ClaimSet> ClaimSets { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Claims.ClaimSet}\n      description: A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; objects that contains the claims added by authorization policies that have been evaluated.\n  overload: System.IdentityModel.Policy.EvaluationContext.ClaimSets*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Policy.EvaluationContext.Generation\n  id: Generation\n  parent: System.IdentityModel.Policy.EvaluationContext\n  langs:\n  - csharp\n  name: Generation\n  nameWithType: EvaluationContext.Generation\n  fullName: System.IdentityModel.Policy.EvaluationContext.Generation\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Policy\n  summary: Gets the number of times that claims have been added to the evaluation context.\n  remarks: \"The <xref:System.ServiceModel.ServiceAuthorizationManager> class uses the Generation property to determine if another evaluation round is required. Each time an authorization policy calls the `AddToTarget` method to add claims to the evaluation context, the Generation property is incremented.  \\n  \\n The <xref:System.ServiceModel.ServiceAuthorizationManager> class examines the Generation property after calling the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method on all authorization policies again. If the Generation property has been incremented during evaluation, the <xref:System.ServiceModel.ServiceAuthorizationManager> class calls the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method on any authorization policies that returned `false` the last time the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method was called on that authorization policy.\"\n  syntax:\n    content: public abstract int Generation { get; }\n    return:\n      type: System.Int32\n      description: The number of times that claims have been added to the evaluation context.\n  overload: System.IdentityModel.Policy.EvaluationContext.Generation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Policy.EvaluationContext.Properties\n  id: Properties\n  parent: System.IdentityModel.Policy.EvaluationContext\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: EvaluationContext.Properties\n  fullName: System.IdentityModel.Policy.EvaluationContext.Properties\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Policy\n  summary: Gets a collection of non-claim properties associated with this <xref href=\"System.IdentityModel.Policy.EvaluationContext\"></xref>.\n  remarks: The classes in the <xref:System.IdentityModel.Selectors> namespace that implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface (authorization policies) add a property named `Identities` to the.<xref:System.IdentityModel.Policy.AuthorizationContext.Properties%2A> collection. The `Identities` property contains an object of type <xref:System.Collections.Generic.IList%601> that contains one or more <xref:System.Security.Principal.IIdentity> instances that represent identity information that is provided by the authorization policies.\n  syntax:\n    content: public abstract System.Collections.Generic.IDictionary<string,object> Properties { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: A &lt;xref:System.Collections.Generic.Dictionary%602&gt; that specifies a collection of non-claim properties.\n  overload: System.IdentityModel.Policy.EvaluationContext.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime(System.DateTime)\n  id: RecordExpirationTime(System.DateTime)\n  parent: System.IdentityModel.Policy.EvaluationContext\n  langs:\n  - csharp\n  name: RecordExpirationTime(DateTime)\n  nameWithType: EvaluationContext.RecordExpirationTime(DateTime)\n  fullName: System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime(DateTime)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Policy\n  summary: Sets the date and time at which this <xref href=\"System.IdentityModel.Policy.EvaluationContext\"></xref> is no longer valid.\n  remarks: Calling the RecordExpirationTime method multiple times only has an effect if the `expirationTime` parameter has a value that is earlier than the previously specified value.\n  syntax:\n    content: public abstract void RecordExpirationTime (DateTime expirationTime);\n    parameters:\n    - id: expirationTime\n      type: System.DateTime\n      description: A <xref:System.DateTime> value that indicates the date and time when this <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> object is no longer valid.\n  overload: System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.IdentityModel.Policy.EvaluationContext.#ctor\n  parent: System.IdentityModel.Policy.EvaluationContext\n  isExternal: false\n  name: EvaluationContext()\n  nameWithType: EvaluationContext.EvaluationContext()\n  fullName: System.IdentityModel.Policy.EvaluationContext.EvaluationContext()\n- uid: System.IdentityModel.Policy.EvaluationContext.AddClaimSet(System.IdentityModel.Policy.IAuthorizationPolicy,System.IdentityModel.Claims.ClaimSet)\n  parent: System.IdentityModel.Policy.EvaluationContext\n  isExternal: false\n  name: AddClaimSet(IAuthorizationPolicy,ClaimSet)\n  nameWithType: EvaluationContext.AddClaimSet(IAuthorizationPolicy,ClaimSet)\n  fullName: System.IdentityModel.Policy.EvaluationContext.AddClaimSet(IAuthorizationPolicy,ClaimSet)\n- uid: System.IdentityModel.Policy.IAuthorizationPolicy\n  parent: System.IdentityModel.Policy\n  isExternal: false\n  name: IAuthorizationPolicy\n  nameWithType: IAuthorizationPolicy\n  fullName: System.IdentityModel.Policy.IAuthorizationPolicy\n- uid: System.IdentityModel.Claims.ClaimSet\n  parent: System.IdentityModel.Claims\n  isExternal: false\n  name: ClaimSet\n  nameWithType: ClaimSet\n  fullName: System.IdentityModel.Claims.ClaimSet\n- uid: System.IdentityModel.Policy.EvaluationContext.ClaimSets\n  parent: System.IdentityModel.Policy.EvaluationContext\n  isExternal: false\n  name: ClaimSets\n  nameWithType: EvaluationContext.ClaimSets\n  fullName: System.IdentityModel.Policy.EvaluationContext.ClaimSets\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Claims.ClaimSet}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<ClaimSet>\n  nameWithType: ReadOnlyCollection<ClaimSet>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Claims.ClaimSet>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.IdentityModel.Claims.ClaimSet>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Claims.ClaimSet\n    name: ClaimSet\n    nameWithType: ClaimSet\n    fullName: ClaimSet\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Policy.EvaluationContext.Generation\n  parent: System.IdentityModel.Policy.EvaluationContext\n  isExternal: false\n  name: Generation\n  nameWithType: EvaluationContext.Generation\n  fullName: System.IdentityModel.Policy.EvaluationContext.Generation\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IdentityModel.Policy.EvaluationContext.Properties\n  parent: System.IdentityModel.Policy.EvaluationContext\n  isExternal: false\n  name: Properties\n  nameWithType: EvaluationContext.Properties\n  fullName: System.IdentityModel.Policy.EvaluationContext.Properties\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.String,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime(System.DateTime)\n  parent: System.IdentityModel.Policy.EvaluationContext\n  isExternal: false\n  name: RecordExpirationTime(DateTime)\n  nameWithType: EvaluationContext.RecordExpirationTime(DateTime)\n  fullName: System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime(DateTime)\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.IdentityModel.Policy.EvaluationContext.#ctor*\n  parent: System.IdentityModel.Policy.EvaluationContext\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: EvaluationContext.EvaluationContext\n- uid: System.IdentityModel.Policy.EvaluationContext.AddClaimSet*\n  parent: System.IdentityModel.Policy.EvaluationContext\n  isExternal: false\n  name: AddClaimSet\n  nameWithType: EvaluationContext.AddClaimSet\n- uid: System.IdentityModel.Policy.EvaluationContext.ClaimSets*\n  parent: System.IdentityModel.Policy.EvaluationContext\n  isExternal: false\n  name: ClaimSets\n  nameWithType: EvaluationContext.ClaimSets\n- uid: System.IdentityModel.Policy.EvaluationContext.Generation*\n  parent: System.IdentityModel.Policy.EvaluationContext\n  isExternal: false\n  name: Generation\n  nameWithType: EvaluationContext.Generation\n- uid: System.IdentityModel.Policy.EvaluationContext.Properties*\n  parent: System.IdentityModel.Policy.EvaluationContext\n  isExternal: false\n  name: Properties\n  nameWithType: EvaluationContext.Properties\n- uid: System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime*\n  parent: System.IdentityModel.Policy.EvaluationContext\n  isExternal: false\n  name: RecordExpirationTime\n  nameWithType: EvaluationContext.RecordExpirationTime\n"}