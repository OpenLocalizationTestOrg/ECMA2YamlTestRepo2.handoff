{"nodes":[{"pos":[1007,1130],"content":"Serves as a base class for readers of incoming request parameters for Web services implemented using HTTP but without SOAP.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serves as a base class for readers of incoming request parameters for Web services implemented using HTTP but without SOAP.","pos":[0,123]}]},{"pos":[1143,2164],"content":"ValueCollectionParameterReader and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations. Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams. Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard. The ValueCollectionParameterReader class provides, among other methods, a common <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.Read%2A> method for all service-side readers of collections of name/value pairs into Web method parameters. The name/value pairs have been parsed from an incoming HTTP request.       You typically will not need to use ValueCollectionParameterReader or its descendant classes directly. The appropriate types  are used according to settings in an ASP.NET configuration file (Web.config).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"ValueCollectionParameterReader and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations. Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams. Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard. The ValueCollectionParameterReader class provides, among other methods, a common <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.Read%2A> method for all service-side readers of collections of name/value pairs into Web method parameters. The name/value pairs have been parsed from an incoming HTTP request.       You typically will not need to use ValueCollectionParameterReader or its descendant classes directly. The appropriate types  are used according to settings in an ASP.NET configuration file (Web.config).","pos":[0,1019],"nodes":[{"content":"ValueCollectionParameterReader and other classes in the &lt;xref:System.Web.Services.Protocols&gt; namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.","pos":[0,206],"source":"ValueCollectionParameterReader and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations."},{"content":"Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams.","pos":[207,377]},{"content":"Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.","pos":[378,485]},{"content":"The ValueCollectionParameterReader class provides, among other methods, a common &lt;xref:System.Web.Services.Protocols.ValueCollectionParameterReader.Read%2A&gt; method for all service-side readers of collections of name/value pairs into Web method parameters.","pos":[486,741],"source":" The ValueCollectionParameterReader class provides, among other methods, a common <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.Read%2A> method for all service-side readers of collections of name/value pairs into Web method parameters."},{"content":"The name/value pairs have been parsed from an incoming HTTP request.","pos":[742,810]},{"content":"You typically will not need to use ValueCollectionParameterReader or its descendant classes directly.","pos":[817,918]},{"content":"The appropriate types  are used according to settings in an ASP.NET configuration file (Web.config).","pos":[919,1019]}]}]},{"pos":[3548,3670],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.ValueCollectionParameterReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.ValueCollectionParameterReader\"></xref> class."},{"pos":[4508,4556],"content":"Returns an initializer for the specified method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an initializer for the specified method.","pos":[0,48]}]},{"pos":[4569,5270],"content":"The object returned by the GetInitializer method is the <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> property of the `methodinfo` parameter. The <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> property value is an array of type <xref:System.Reflection.ParameterInfo>.       The GetInitializer method is invoked during service initialization. Later, at the time a request is processed, the initializer object is passed to the <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize%2A> method of another <xref:System.Web.Services.Protocols.ValueCollectionParameterReader> instance. The other instance performs the actual reading.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The object returned by the GetInitializer method is the &lt;xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A&gt; property of the <ph id=\"ph1\">`methodinfo`</ph> parameter.","pos":[0,166],"source":"The object returned by the GetInitializer method is the <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> property of the `methodinfo` parameter."},{"content":"The &lt;xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A&gt; property value is an array of type &lt;xref:System.Reflection.ParameterInfo&gt;.","pos":[167,316],"source":" The <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> property value is an array of type <xref:System.Reflection.ParameterInfo>."},{"content":"The GetInitializer method is invoked during service initialization.","pos":[323,390]},{"content":"Later, at the time a request is processed, the initializer object is passed to the &lt;xref:System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize%2A&gt; method of another &lt;xref:System.Web.Services.Protocols.ValueCollectionParameterReader&gt; instance.","pos":[391,651],"source":" Later, at the time a request is processed, the initializer object is passed to the <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize%2A> method of another <xref:System.Web.Services.Protocols.ValueCollectionParameterReader> instance."},{"content":"The other instance performs the actual reading.","pos":[652,699]}]},{"pos":[5511,5650],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the Web method for which the initializer is obtained.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"></xref> that specifies the Web method for which the initializer is obtained."},{"pos":[5708,5807],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> representing the Web method.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"></xref> representing the Web method."},{"pos":[6446,6470],"content":"Initializes an instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes an instance.","pos":[0,24]}]},{"pos":[6483,6756],"content":"The Initialize method is invoked at the time a request is processed.       The input parameter, `o`, is obtained by calling the <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer%2A> method on another instance during service initialization.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Initialize method is invoked at the time a request is processed.","pos":[0,68]},{"content":"The input parameter, <ph id=\"ph1\">`o`</ph>, is obtained by calling the &lt;xref:System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer%2A&gt; method on another instance during service initialization.","pos":[75,271],"source":"       The input parameter, `o`, is obtained by calling the <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer%2A> method on another instance during service initialization."}]},{"pos":[6898,7127],"content":"A &lt;xref:System.Reflection.ParameterInfo&gt; array, obtained through the &lt;xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters*&gt; property of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"A <xref:System.Reflection.ParameterInfo> array, obtained through the <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters*> property of the <xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"></xref> class."},{"pos":[7824,7979],"content":"Determines whether a particular parameter type is supported by the <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.ValueCollectionParameterReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Determines whether a particular parameter type is supported by the <xref href=\"System.Web.Services.Protocols.ValueCollectionParameterReader\"></xref> class."},{"pos":[8178,8257],"content":"A <xref:System.Reflection.ParameterInfo> that specifies the parameter to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Reflection.ParameterInfo&gt; that specifies the parameter to check.","pos":[0,79],"source":"A <xref:System.Reflection.ParameterInfo> that specifies the parameter to check."}]},{"pos":[8316,8516],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a method's parameter definitions are supported by the reader; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a method's parameter definitions are supported by the reader; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9258,9430],"content":"Determines whether a method definition's parameter definitions are supported by the <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.ValueCollectionParameterReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Determines whether a method definition's parameter definitions are supported by the <xref href=\"System.Web.Services.Protocols.ValueCollectionParameterReader\"></xref> class."},{"pos":[9663,9769],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the method to check.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"></xref> that specifies the method to check."},{"pos":[9828,10028],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a method's parameter definitions are supported by the reader; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a method's parameter definitions are supported by the reader; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10747,10853],"content":"Translates a collection of name/value pairs into an array of objects representing method parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Translates a collection of name/value pairs into an array of objects representing method parameter values.","pos":[0,106]}]},{"pos":[10865,11220],"content":"The Read method is called by the Read method defined in thetwo classes derived from <xref:System.Web.Services.Protocols.ValueCollectionParameterReader>, <xref:System.Web.Services.Protocols.UrlParameterReader> and <xref:System.Web.Services.Protocols.HtmlFormParameterReader>. Those two classes' Read methods take an <xref:System.Web.HttpRequest> parameter.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Read method is called by the Read method defined in thetwo classes derived from <xref:System.Web.Services.Protocols.ValueCollectionParameterReader>, <xref:System.Web.Services.Protocols.UrlParameterReader> and <xref:System.Web.Services.Protocols.HtmlFormParameterReader>. Those two classes' Read methods take an <xref:System.Web.HttpRequest> parameter.","pos":[0,355],"nodes":[{"content":"The Read method is called by the Read method defined in thetwo classes derived from &lt;xref:System.Web.Services.Protocols.ValueCollectionParameterReader&gt;, &lt;xref:System.Web.Services.Protocols.UrlParameterReader&gt; and &lt;xref:System.Web.Services.Protocols.HtmlFormParameterReader&gt;.","pos":[0,274],"source":"The Read method is called by the Read method defined in thetwo classes derived from <xref:System.Web.Services.Protocols.ValueCollectionParameterReader>, <xref:System.Web.Services.Protocols.UrlParameterReader> and <xref:System.Web.Services.Protocols.HtmlFormParameterReader>."},{"content":"Those two classes' Read methods take an &lt;xref:System.Web.HttpRequest&gt; parameter.","pos":[275,355],"source":" Those two classes' Read methods take an <xref:System.Web.HttpRequest> parameter."}]}]},{"pos":[11452,11628],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies the collection of name/value pairs containing method parameter names and values.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> object that specifies the collection of name/value pairs containing method parameter names and values."},{"pos":[11688,11766],"content":"An array of <xref:System.Object> objects representing method parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Object&gt; objects representing method parameter values.","pos":[0,78],"source":"An array of <xref:System.Object> objects representing method parameter values."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader\n  id: ValueCollectionParameterReader\n  children:\n  - System.Web.Services.Protocols.ValueCollectionParameterReader.#ctor\n  - System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)\n  - System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize(System.Object)\n  - System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Reflection.ParameterInfo)\n  - System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Web.Services.Protocols.LogicalMethodInfo)\n  - System.Web.Services.Protocols.ValueCollectionParameterReader.Read(System.Collections.Specialized.NameValueCollection)\n  langs:\n  - csharp\n  name: ValueCollectionParameterReader\n  nameWithType: ValueCollectionParameterReader\n  fullName: System.Web.Services.Protocols.ValueCollectionParameterReader\n  type: Class\n  summary: Serves as a base class for readers of incoming request parameters for Web services implemented using HTTP but without SOAP.\n  remarks: \"ValueCollectionParameterReader and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations. Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams. Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard. The ValueCollectionParameterReader class provides, among other methods, a common <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.Read%2A> method for all service-side readers of collections of name/value pairs into Web method parameters. The name/value pairs have been parsed from an incoming HTTP request.  \\n  \\n You typically will not need to use ValueCollectionParameterReader or its descendant classes directly. The appropriate types  are used according to settings in an ASP.NET configuration file (Web.config).\"\n  syntax:\n    content: 'public abstract class ValueCollectionParameterReader : System.Web.Services.Protocols.MimeParameterReader'\n  inheritance:\n  - System.Object\n  - System.Web.Services.Protocols.MimeFormatter\n  - System.Web.Services.Protocols.MimeParameterReader\n  implements: []\n  inheritedMembers:\n  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)\n  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)\n  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])\n  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])\n  - System.Web.Services.Protocols.MimeParameterReader.Read(System.Web.HttpRequest)\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader.#ctor\n  id: '#ctor'\n  parent: System.Web.Services.Protocols.ValueCollectionParameterReader\n  langs:\n  - csharp\n  name: ValueCollectionParameterReader()\n  nameWithType: ValueCollectionParameterReader.ValueCollectionParameterReader()\n  fullName: System.Web.Services.Protocols.ValueCollectionParameterReader.ValueCollectionParameterReader()\n  type: Constructor\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.ValueCollectionParameterReader\"></xref> class.\n  syntax:\n    content: protected ValueCollectionParameterReader ();\n    parameters: []\n  overload: System.Web.Services.Protocols.ValueCollectionParameterReader.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)\n  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)\n  parent: System.Web.Services.Protocols.ValueCollectionParameterReader\n  langs:\n  - csharp\n  name: GetInitializer(LogicalMethodInfo)\n  nameWithType: ValueCollectionParameterReader.GetInitializer(LogicalMethodInfo)\n  fullName: System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer(LogicalMethodInfo)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Returns an initializer for the specified method.\n  remarks: \"The object returned by the GetInitializer method is the <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> property of the `methodinfo` parameter. The <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> property value is an array of type <xref:System.Reflection.ParameterInfo>.  \\n  \\n The GetInitializer method is invoked during service initialization. Later, at the time a request is processed, the initializer object is passed to the <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize%2A> method of another <xref:System.Web.Services.Protocols.ValueCollectionParameterReader> instance. The other instance performs the actual reading.\"\n  syntax:\n    content: public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);\n    parameters:\n    - id: methodInfo\n      type: System.Web.Services.Protocols.LogicalMethodInfo\n      description: A <xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"></xref> that specifies the Web method for which the initializer is obtained.\n    return:\n      type: System.Object\n      description: A <xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"></xref> representing the Web method.\n  overload: System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize(System.Object)\n  id: Initialize(System.Object)\n  parent: System.Web.Services.Protocols.ValueCollectionParameterReader\n  langs:\n  - csharp\n  name: Initialize(Object)\n  nameWithType: ValueCollectionParameterReader.Initialize(Object)\n  fullName: System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize(Object)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Initializes an instance.\n  remarks: \"The Initialize method is invoked at the time a request is processed.  \\n  \\n The input parameter, `o`, is obtained by calling the <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer%2A> method on another instance during service initialization.\"\n  syntax:\n    content: public override void Initialize (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: A <xref:System.Reflection.ParameterInfo> array, obtained through the <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters*> property of the <xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"></xref> class.\n  overload: System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Reflection.ParameterInfo)\n  id: IsSupported(System.Reflection.ParameterInfo)\n  parent: System.Web.Services.Protocols.ValueCollectionParameterReader\n  langs:\n  - csharp\n  name: IsSupported(ParameterInfo)\n  nameWithType: ValueCollectionParameterReader.IsSupported(ParameterInfo)\n  fullName: System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(ParameterInfo)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Determines whether a particular parameter type is supported by the <xref href=\"System.Web.Services.Protocols.ValueCollectionParameterReader\"></xref> class.\n  syntax:\n    content: public static bool IsSupported (System.Reflection.ParameterInfo paramInfo);\n    parameters:\n    - id: paramInfo\n      type: System.Reflection.ParameterInfo\n      description: A <xref:System.Reflection.ParameterInfo> that specifies the parameter to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a method's parameter definitions are supported by the reader; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Web.Services.Protocols.LogicalMethodInfo)\n  id: IsSupported(System.Web.Services.Protocols.LogicalMethodInfo)\n  parent: System.Web.Services.Protocols.ValueCollectionParameterReader\n  langs:\n  - csharp\n  name: IsSupported(LogicalMethodInfo)\n  nameWithType: ValueCollectionParameterReader.IsSupported(LogicalMethodInfo)\n  fullName: System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(LogicalMethodInfo)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Determines whether a method definition's parameter definitions are supported by the <xref href=\"System.Web.Services.Protocols.ValueCollectionParameterReader\"></xref> class.\n  syntax:\n    content: public static bool IsSupported (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);\n    parameters:\n    - id: methodInfo\n      type: System.Web.Services.Protocols.LogicalMethodInfo\n      description: A <xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"></xref> that specifies the method to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a method's parameter definitions are supported by the reader; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader.Read(System.Collections.Specialized.NameValueCollection)\n  id: Read(System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.Services.Protocols.ValueCollectionParameterReader\n  langs:\n  - csharp\n  name: Read(NameValueCollection)\n  nameWithType: ValueCollectionParameterReader.Read(NameValueCollection)\n  fullName: System.Web.Services.Protocols.ValueCollectionParameterReader.Read(NameValueCollection)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Translates a collection of name/value pairs into an array of objects representing method parameter values.\n  remarks: The Read method is called by the Read method defined in thetwo classes derived from <xref:System.Web.Services.Protocols.ValueCollectionParameterReader>, <xref:System.Web.Services.Protocols.UrlParameterReader> and <xref:System.Web.Services.Protocols.HtmlFormParameterReader>. Those two classes' Read methods take an <xref:System.Web.HttpRequest> parameter.\n  syntax:\n    content: protected object[] Read (System.Collections.Specialized.NameValueCollection collection);\n    parameters:\n    - id: collection\n      type: System.Collections.Specialized.NameValueCollection\n      description: A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> object that specifies the collection of name/value pairs containing method parameter names and values.\n    return:\n      type: System.Object[]\n      description: An array of <xref:System.Object> objects representing method parameter values.\n  overload: System.Web.Services.Protocols.ValueCollectionParameterReader.Read*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.Services.Protocols.MimeParameterReader\n  isExternal: false\n  name: System.Web.Services.Protocols.MimeParameterReader\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader.#ctor\n  parent: System.Web.Services.Protocols.ValueCollectionParameterReader\n  isExternal: false\n  name: ValueCollectionParameterReader()\n  nameWithType: ValueCollectionParameterReader.ValueCollectionParameterReader()\n  fullName: System.Web.Services.Protocols.ValueCollectionParameterReader.ValueCollectionParameterReader()\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)\n  parent: System.Web.Services.Protocols.ValueCollectionParameterReader\n  isExternal: false\n  name: GetInitializer(LogicalMethodInfo)\n  nameWithType: ValueCollectionParameterReader.GetInitializer(LogicalMethodInfo)\n  fullName: System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer(LogicalMethodInfo)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Services.Protocols.LogicalMethodInfo\n  parent: System.Web.Services.Protocols\n  isExternal: false\n  name: LogicalMethodInfo\n  nameWithType: LogicalMethodInfo\n  fullName: System.Web.Services.Protocols.LogicalMethodInfo\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize(System.Object)\n  parent: System.Web.Services.Protocols.ValueCollectionParameterReader\n  isExternal: false\n  name: Initialize(Object)\n  nameWithType: ValueCollectionParameterReader.Initialize(Object)\n  fullName: System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize(Object)\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Reflection.ParameterInfo)\n  parent: System.Web.Services.Protocols.ValueCollectionParameterReader\n  isExternal: false\n  name: IsSupported(ParameterInfo)\n  nameWithType: ValueCollectionParameterReader.IsSupported(ParameterInfo)\n  fullName: System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(ParameterInfo)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.ParameterInfo\n  parent: System.Reflection\n  isExternal: true\n  name: ParameterInfo\n  nameWithType: ParameterInfo\n  fullName: System.Reflection.ParameterInfo\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Web.Services.Protocols.LogicalMethodInfo)\n  parent: System.Web.Services.Protocols.ValueCollectionParameterReader\n  isExternal: false\n  name: IsSupported(LogicalMethodInfo)\n  nameWithType: ValueCollectionParameterReader.IsSupported(LogicalMethodInfo)\n  fullName: System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(LogicalMethodInfo)\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader.Read(System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.Services.Protocols.ValueCollectionParameterReader\n  isExternal: false\n  name: Read(NameValueCollection)\n  nameWithType: ValueCollectionParameterReader.Read(NameValueCollection)\n  fullName: System.Web.Services.Protocols.ValueCollectionParameterReader.Read(NameValueCollection)\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader.#ctor*\n  parent: System.Web.Services.Protocols.ValueCollectionParameterReader\n  isExternal: false\n  name: ValueCollectionParameterReader\n  nameWithType: ValueCollectionParameterReader.ValueCollectionParameterReader\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer*\n  parent: System.Web.Services.Protocols.ValueCollectionParameterReader\n  isExternal: false\n  name: GetInitializer\n  nameWithType: ValueCollectionParameterReader.GetInitializer\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize*\n  parent: System.Web.Services.Protocols.ValueCollectionParameterReader\n  isExternal: false\n  name: Initialize\n  nameWithType: ValueCollectionParameterReader.Initialize\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported*\n  parent: System.Web.Services.Protocols.ValueCollectionParameterReader\n  isExternal: false\n  name: IsSupported\n  nameWithType: ValueCollectionParameterReader.IsSupported\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader.Read*\n  parent: System.Web.Services.Protocols.ValueCollectionParameterReader\n  isExternal: false\n  name: Read\n  nameWithType: ValueCollectionParameterReader.Read\n"}