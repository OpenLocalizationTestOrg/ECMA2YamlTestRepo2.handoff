{"nodes":[{"pos":[1570,1624],"content":"Enables packet routing and the use of one-way methods.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables packet routing and the use of one-way methods.","pos":[0,54]}]},{"pos":[1637,2619],"content":"To enable packet routing a *one-way conversion* layer is required, which this class provides. This class is a binding in the stack of bindings that performs a message-level shape change called `OneWayBindingElement`. This shape change can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IInputChannel>, or conversely it can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IOutputChannel>. A user can create a custom binding that layers this binding over a session-aware or request-reply transport to make it packet routable.       This class is also useful when you want to expose one-way methods in a more native fashion. More transformations can be applied over this layer, such as Composite Duplex and Reliable Messaging.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"To enable packet routing a <bpt id=\"p1\">*</bpt>one-way conversion<ept id=\"p1\">*</ept> layer is required, which this class provides.","pos":[0,93],"source":"To enable packet routing a *one-way conversion* layer is required, which this class provides."},{"content":"This class is a binding in the stack of bindings that performs a message-level shape change called <ph id=\"ph1\">`OneWayBindingElement`</ph>.","pos":[94,216],"source":" This class is a binding in the stack of bindings that performs a message-level shape change called `OneWayBindingElement`."},{"content":"This shape change can take a &lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt; or a &lt;xref:System.ServiceModel.Channels.IRequestChannel&gt; and expose it as a &lt;xref:System.ServiceModel.Channels.IInputChannel&gt;, or conversely it can take a &lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt; or a &lt;xref:System.ServiceModel.Channels.IRequestChannel&gt; and expose it as a &lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;.","pos":[217,644],"source":" This shape change can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IInputChannel>, or conversely it can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IOutputChannel>."},{"content":"A user can create a custom binding that layers this binding over a session-aware or request-reply transport to make it packet routable.","pos":[645,780]},{"content":"This class is also useful when you want to expose one-way methods in a more native fashion.","pos":[787,878]},{"content":"More transformations can be applied over this layer, such as Composite Duplex and Reliable Messaging.","pos":[879,980]}]},{"pos":[3415,3526],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Channels.OneWayBindingElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.OneWayBindingElement\"></xref> class."},{"pos":[4587,4599],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4698,4710],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5792,5804],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5896,5908],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6888,6900],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6959,6971],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8023,8035],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8094,8106],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8702,8733],"content":"Gets the channel pool settings.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the channel pool settings.","pos":[0,31]}]},{"pos":[8939,9100],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Channels.ChannelPoolSettings\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains properties of the channel pool associated with this binding element.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ServiceModel.Channels.ChannelPoolSettings\"></xref> object that contains properties of the channel pool associated with this binding element."},{"pos":[9616,9649],"content":"Clones an instance of this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clones an instance of this class.","pos":[0,33]}]},{"pos":[9849,9894],"content":"A cloned copy of this instance of this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"A cloned copy of this instance of this class.","pos":[0,45]}]},{"pos":[10791,10803],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10849,10861],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11438,11503],"content":"Gets or sets the maximum number of channels that can be accepted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum number of channels that can be accepted.","pos":[0,65]}]},{"pos":[11628,11705],"content":"The maximum number of channels that can be accepted. The default value is 10.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of channels that can be accepted. The default value is 10.","pos":[0,77],"nodes":[{"content":"The maximum number of channels that can be accepted.","pos":[0,52]},{"content":"The default value is 10.","pos":[53,77]}]}]},{"pos":[12262,12332],"content":"Gets or sets a value that indicates whether packet routing is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether packet routing is enabled.","pos":[0,70]}]},{"pos":[12345,13628],"content":"This class can optionally use a message-level protocol that transforms a `DuplexSessionChannel`/`RequestChannel`/`ReplyChannel` to a one-way channel and allows the messages from the transformed channel to be routed. Usage of this protocol is controlled by the PacketRoutable property.       When this property is `true`, upon `DuplexSessionChannel` initiation (for example, Buffered TCP and Named Pipes), this class adds a message header (MustUnderstand = `false`, signed if security is enabled) that semantically means “you can packet-route this channel”. On the acceptor side, when this property is `true`, this class looks for this header in the first message received on the channel. If this header does not exist, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] faults the channel. If the header exists, then [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] funnels the new channel into a shared input channel.       To transform a Request-Reply channel (for example, TCP Streaming or HTTP) when this property is `true`, this header is added to every request to signal that the request can be packet routed. [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] also verifies that `SendRequest` returns `null` and replies with `null` on the server.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class can optionally use a message-level protocol that transforms a <ph id=\"ph1\">`DuplexSessionChannel`</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">`RequestChannel`</ph><ph id=\"ph4\">/</ph><ph id=\"ph5\">`ReplyChannel`</ph> to a one-way channel and allows the messages from the transformed channel to be routed.","pos":[0,215],"source":"This class can optionally use a message-level protocol that transforms a `DuplexSessionChannel`/`RequestChannel`/`ReplyChannel` to a one-way channel and allows the messages from the transformed channel to be routed."},{"content":"Usage of this protocol is controlled by the PacketRoutable property.","pos":[216,284]},{"content":"When this property is <ph id=\"ph1\">`true`</ph>, upon <ph id=\"ph2\">`DuplexSessionChannel`</ph> initiation (for example, Buffered TCP and Named Pipes), this class adds a message header (MustUnderstand = <ph id=\"ph3\">`false`</ph>, signed if security is enabled) that semantically means “you can packet-route this channel”.","pos":[291,556],"source":"       When this property is `true`, upon `DuplexSessionChannel` initiation (for example, Buffered TCP and Named Pipes), this class adds a message header (MustUnderstand = `false`, signed if security is enabled) that semantically means “you can packet-route this channel”."},{"content":"On the acceptor side, when this property is <ph id=\"ph1\">`true`</ph>, this class looks for this header in the first message received on the channel.","pos":[557,687],"source":" On the acceptor side, when this property is `true`, this class looks for this header in the first message received on the channel."},{"content":"If this header does not exist, <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> faults the channel.","pos":[688,797],"source":" If this header does not exist, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] faults the channel."},{"content":"If the header exists, then <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> funnels the new channel into a shared input channel.","pos":[798,936],"source":" If the header exists, then [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] funnels the new channel into a shared input channel."},{"content":"To transform a Request-Reply channel (for example, TCP Streaming or HTTP) when this property is <ph id=\"ph1\">`true`</ph>, this header is added to every request to signal that the request can be packet routed.","pos":[943,1133],"source":"       To transform a Request-Reply channel (for example, TCP Streaming or HTTP) when this property is `true`, this header is added to every request to signal that the request can be packet routed."},{"content":"<ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> also verifies that <ph id=\"ph2\">`SendRequest`</ph> returns <ph id=\"ph3\">`null`</ph> and replies with <ph id=\"ph4\">`null`</ph> on the server.","pos":[1134,1279],"source":"[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] also verifies that `SendRequest` returns `null` and replies with `null` on the server."}]},{"pos":[13752,13996],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if packet routing is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if packet routing is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,165],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if packet routing is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[166,244],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[14652,14770],"content":"Returns whether the properties of the channel pool that are associated with this binding element should be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns whether the properties of the channel pool that are associated with this binding element should be serialized.","pos":[0,118]}]},{"pos":[14922,15108],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the channel pool settings should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the channel pool settings should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16295,16373],"content":"Exports a custom policy assertion that represents the one-way binding element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exports a custom policy assertion that represents the one-way binding element.","pos":[0,78]}]},{"pos":[16386,18017],"content":"This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] to communicate to clients the existence of this custom binding element in the binding stack.       This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects. Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes. Then use this method to add your own policy assertions to the appropriate collection.       The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported. This enables this method to correctly scope their exported policy assertions. For example, security attributes in code can add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added.       Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <xref:System.ServiceModel.Description.IPolicyImportExtension> interface.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> to communicate to clients the existence of this custom binding element in the binding stack.","pos":[0,271],"source":"This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] to communicate to clients the existence of this custom binding element in the binding stack."},{"content":"This method takes two parameters: the &lt;xref:System.ServiceModel.Description.MetadataExporter&gt; and &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt; objects.","pos":[278,447],"source":"       This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects."},{"content":"Use the &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;, &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;, and &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt; methods to obtain collections of policy assertions that have already been exported at various scopes.","pos":[448,840],"source":" Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes."},{"content":"Then use this method to add your own policy assertions to the appropriate collection.","pos":[841,926]},{"content":"The &lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A&gt; property exposes the &lt;xref:System.ServiceModel.Description.ContractDescription&gt; for the endpoint that is being exported.","pos":[933,1132],"source":"       The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported."},{"content":"This enables this method to correctly scope their exported policy assertions.","pos":[1133,1210]},{"content":"For example, security attributes in code can add behaviors to the &lt;xref:System.ServiceModel.Description.ContractDescription&gt; that indicate where security policy assertions should be added.","pos":[1211,1399],"source":" For example, security attributes in code can add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added."},{"content":"Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an &lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt; interface.","pos":[1406,1625],"source":"       Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <xref:System.ServiceModel.Description.IPolicyImportExtension> interface."}]},{"pos":[18324,18447],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExporter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that you can use to modify the exporting process.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that you can use to modify the exporting process."},{"pos":[18553,18690],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.PolicyConversionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that you can use to insert your custom policy assertion.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Description.PolicyConversionContext\"></xref> that you can use to insert your custom policy assertion."},{"pos":[18938,19023],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>context</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.OneWayBindingElement\n  id: OneWayBindingElement\n  children:\n  - System.ServiceModel.Channels.OneWayBindingElement.#ctor\n  - System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings\n  - System.ServiceModel.Channels.OneWayBindingElement.Clone\n  - System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels\n  - System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable\n  - System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings\n  - System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  langs:\n  - csharp\n  name: OneWayBindingElement\n  nameWithType: OneWayBindingElement\n  fullName: System.ServiceModel.Channels.OneWayBindingElement\n  type: Class\n  summary: Enables packet routing and the use of one-way methods.\n  remarks: \"To enable packet routing a *one-way conversion* layer is required, which this class provides. This class is a binding in the stack of bindings that performs a message-level shape change called `OneWayBindingElement`. This shape change can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IInputChannel>, or conversely it can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IOutputChannel>. A user can create a custom binding that layers this binding over a session-aware or request-reply transport to make it packet routable.  \\n  \\n This class is also useful when you want to expose one-way methods in a more native fashion. More transformations can be applied over this layer, such as Composite Duplex and Reliable Messaging.\"\n  syntax:\n    content: 'public sealed class OneWayBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension'\n  inheritance:\n  - System.ServiceModel.Channels.BindingElement\n  implements:\n  - System.ServiceModel.Description.IPolicyExportExtension\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.OneWayBindingElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: OneWayBindingElement()\n  nameWithType: OneWayBindingElement.OneWayBindingElement()\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.OneWayBindingElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.OneWayBindingElement\"></xref> class.\n  syntax:\n    content: public OneWayBindingElement ();\n    parameters: []\n  overload: System.ServiceModel.Channels.OneWayBindingElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: BuildChannelFactory(BindingContext)\n  nameWithType: OneWayBindingElement.BuildChannelFactory(BindingContext)\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: To be added.\n    return:\n      type: System.ServiceModel.Channels.IChannelFactory{TChannel}\n      description: To be added.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory<TChannel>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: BuildChannelListener(BindingContext)\n  nameWithType: OneWayBindingElement.BuildChannelListener(BindingContext)\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: To be added.\n    return:\n      type: System.ServiceModel.Channels.IChannelListener`1\n      description: To be added.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener<TChannel>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: CanBuildChannelFactory(BindingContext)\n  nameWithType: OneWayBindingElement.CanBuildChannelFactory(BindingContext)\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: public override bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory<TChannel>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: CanBuildChannelListener(BindingContext)\n  nameWithType: OneWayBindingElement.CanBuildChannelListener(BindingContext)\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: 'public override bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener<TChannel>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings\n  id: ChannelPoolSettings\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: ChannelPoolSettings\n  nameWithType: OneWayBindingElement.ChannelPoolSettings\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the channel pool settings.\n  syntax:\n    content: public System.ServiceModel.Channels.ChannelPoolSettings ChannelPoolSettings { get; set; }\n    return:\n      type: System.ServiceModel.Channels.ChannelPoolSettings\n      description: A <xref href=\"System.ServiceModel.Channels.ChannelPoolSettings\"></xref> object that contains properties of the channel pool associated with this binding element.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.OneWayBindingElement.Clone\n  id: Clone\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: OneWayBindingElement.Clone()\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.Clone()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Clones an instance of this class.\n  syntax:\n    content: public override System.ServiceModel.Channels.BindingElement Clone ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.BindingElement\n      description: A cloned copy of this instance of this class.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: GetProperty(BindingContext)\n  nameWithType: OneWayBindingElement.GetProperty(BindingContext)\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.GetProperty(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.GetProperty<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels\n  id: MaxAcceptedChannels\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: MaxAcceptedChannels\n  nameWithType: OneWayBindingElement.MaxAcceptedChannels\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the maximum number of channels that can be accepted.\n  syntax:\n    content: public int MaxAcceptedChannels { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of channels that can be accepted. The default value is 10.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable\n  id: PacketRoutable\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: PacketRoutable\n  nameWithType: OneWayBindingElement.PacketRoutable\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets a value that indicates whether packet routing is enabled.\n  remarks: \"This class can optionally use a message-level protocol that transforms a `DuplexSessionChannel`/`RequestChannel`/`ReplyChannel` to a one-way channel and allows the messages from the transformed channel to be routed. Usage of this protocol is controlled by the PacketRoutable property.  \\n  \\n When this property is `true`, upon `DuplexSessionChannel` initiation (for example, Buffered TCP and Named Pipes), this class adds a message header (MustUnderstand = `false`, signed if security is enabled) that semantically means “you can packet-route this channel”. On the acceptor side, when this property is `true`, this class looks for this header in the first message received on the channel. If this header does not exist, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] faults the channel. If the header exists, then [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] funnels the new channel into a shared input channel.  \\n  \\n To transform a Request-Reply channel (for example, TCP Streaming or HTTP) when this property is `true`, this header is added to every request to signal that the request can be packet routed. [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] also verifies that `SendRequest` returns `null` and replies with `null` on the server.\"\n  syntax:\n    content: public bool PacketRoutable { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if packet routing is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings\n  id: ShouldSerializeChannelPoolSettings\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: ShouldSerializeChannelPoolSettings()\n  nameWithType: OneWayBindingElement.ShouldSerializeChannelPoolSettings()\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns whether the properties of the channel pool that are associated with this binding element should be serialized.\n  syntax:\n    content: public bool ShouldSerializeChannelPoolSettings ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the channel pool settings should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  id: System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  isEii: true\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)\n  nameWithType: OneWayBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Exports a custom policy assertion that represents the one-way binding element.\n  remarks: \"This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] to communicate to clients the existence of this custom binding element in the binding stack.  \\n  \\n This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects. Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes. Then use this method to add your own policy assertions to the appropriate collection.  \\n  \\n The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported. This enables this method to correctly scope their exported policy assertions. For example, security attributes in code can add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added.  \\n  \\n Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <xref:System.ServiceModel.Description.IPolicyImportExtension> interface.\"\n  syntax:\n    content: void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);\n    parameters:\n    - id: exporter\n      type: System.ServiceModel.Description.MetadataExporter\n      description: The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that you can use to modify the exporting process.\n    - id: context\n      type: System.ServiceModel.Description.PolicyConversionContext\n      description: The <xref href=\"System.ServiceModel.Description.PolicyConversionContext\"></xref> that you can use to insert your custom policy assertion.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Channels.BindingElement\n  isExternal: false\n  name: System.ServiceModel.Channels.BindingElement\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ServiceModel.Channels.OneWayBindingElement.#ctor\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: OneWayBindingElement()\n  nameWithType: OneWayBindingElement.OneWayBindingElement()\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.OneWayBindingElement()\n- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: BuildChannelFactory(BindingContext)\n  nameWithType: OneWayBindingElement.BuildChannelFactory(BindingContext)\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory(BindingContext)\n- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: IChannelFactory<TChannel>\n  nameWithType: IChannelFactory<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>\n  spec.csharp:\n  - uid: System.ServiceModel.Channels.IChannelFactory`1\n    name: IChannelFactory\n    nameWithType: IChannelFactory\n    fullName: IChannelFactory<TChannel>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TChannel\n    name: TChannel\n    nameWithType: TChannel\n    fullName: TChannel\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Channels.BindingContext\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: BindingContext\n  nameWithType: BindingContext\n  fullName: System.ServiceModel.Channels.BindingContext\n- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: BuildChannelListener(BindingContext)\n  nameWithType: OneWayBindingElement.BuildChannelListener(BindingContext)\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener(BindingContext)\n- uid: System.ServiceModel.Channels.IChannelListener`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelListener<TChannel>\n  nameWithType: IChannelListener<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>\n- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: CanBuildChannelFactory(BindingContext)\n  nameWithType: OneWayBindingElement.CanBuildChannelFactory(BindingContext)\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory(BindingContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: CanBuildChannelListener(BindingContext)\n  nameWithType: OneWayBindingElement.CanBuildChannelListener(BindingContext)\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener(BindingContext)\n- uid: System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: ChannelPoolSettings\n  nameWithType: OneWayBindingElement.ChannelPoolSettings\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings\n- uid: System.ServiceModel.Channels.ChannelPoolSettings\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: ChannelPoolSettings\n  nameWithType: ChannelPoolSettings\n  fullName: System.ServiceModel.Channels.ChannelPoolSettings\n- uid: System.ServiceModel.Channels.OneWayBindingElement.Clone\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: Clone()\n  nameWithType: OneWayBindingElement.Clone()\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.Clone()\n- uid: System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: GetProperty(BindingContext)\n  nameWithType: OneWayBindingElement.GetProperty(BindingContext)\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.GetProperty(BindingContext)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: MaxAcceptedChannels\n  nameWithType: OneWayBindingElement.MaxAcceptedChannels\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: PacketRoutable\n  nameWithType: OneWayBindingElement.PacketRoutable\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable\n- uid: System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: ShouldSerializeChannelPoolSettings()\n  nameWithType: OneWayBindingElement.ShouldSerializeChannelPoolSettings()\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings()\n- uid: System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)\n  nameWithType: OneWayBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)\n  fullName: System.ServiceModel.Channels.OneWayBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)\n- uid: System.ServiceModel.Description.MetadataExporter\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: MetadataExporter\n  nameWithType: MetadataExporter\n  fullName: System.ServiceModel.Description.MetadataExporter\n- uid: System.ServiceModel.Description.PolicyConversionContext\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: PolicyConversionContext\n  nameWithType: PolicyConversionContext\n  fullName: System.ServiceModel.Description.PolicyConversionContext\n- uid: System.ServiceModel.Channels.OneWayBindingElement.#ctor*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: OneWayBindingElement\n  nameWithType: OneWayBindingElement.OneWayBindingElement\n- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory<TChannel>*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: BuildChannelFactory<TChannel>\n  nameWithType: OneWayBindingElement.BuildChannelFactory<TChannel>\n- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener<TChannel>*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: BuildChannelListener<TChannel>\n  nameWithType: OneWayBindingElement.BuildChannelListener<TChannel>\n- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory<TChannel>*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>\n  nameWithType: OneWayBindingElement.CanBuildChannelFactory<TChannel>\n- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener<TChannel>*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>\n  nameWithType: OneWayBindingElement.CanBuildChannelListener<TChannel>\n- uid: System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: ChannelPoolSettings\n  nameWithType: OneWayBindingElement.ChannelPoolSettings\n- uid: System.ServiceModel.Channels.OneWayBindingElement.Clone*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: Clone\n  nameWithType: OneWayBindingElement.Clone\n- uid: System.ServiceModel.Channels.OneWayBindingElement.GetProperty<T>*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: GetProperty<T>\n  nameWithType: OneWayBindingElement.GetProperty<T>\n- uid: System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: MaxAcceptedChannels\n  nameWithType: OneWayBindingElement.MaxAcceptedChannels\n- uid: System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: PacketRoutable\n  nameWithType: OneWayBindingElement.PacketRoutable\n- uid: System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: ShouldSerializeChannelPoolSettings\n  nameWithType: OneWayBindingElement.ShouldSerializeChannelPoolSettings\n- uid: System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy\n  nameWithType: OneWayBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy\n"}