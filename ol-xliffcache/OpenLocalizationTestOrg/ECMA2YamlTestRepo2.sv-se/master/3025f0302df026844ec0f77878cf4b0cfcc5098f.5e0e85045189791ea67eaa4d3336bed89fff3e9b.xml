{"nodes":[{"pos":[415,564],"content":"Contains the status code or error code for a specific event log. This status can be used to determine if the event log is available for an operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains the status code or error code for a specific event log. This status can be used to determine if the event log is available for an operation.","pos":[0,149],"nodes":[{"content":"Contains the status code or error code for a specific event log.","pos":[0,64]},{"content":"This status can be used to determine if the event log is available for an operation.","pos":[65,149]}]}]},{"pos":[1109,1178],"content":"Gets the name of the event log for which the status code is obtained.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the event log for which the status code is obtained.","pos":[0,69]}]},{"pos":[1290,1385],"content":"Returns a string that contains the name of the event log for which the status code is obtained.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string that contains the name of the event log for which the status code is obtained.","pos":[0,95]}]},{"pos":[1902,2044],"content":"Gets the status code or error code for the event log. This status or error is the result of a read or subscription operation on the event log.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the status code or error code for the event log. This status or error is the result of a read or subscription operation on the event log.","pos":[0,142],"nodes":[{"content":"Gets the status code or error code for the event log.","pos":[0,53]},{"content":"This status or error is the result of a read or subscription operation on the event log.","pos":[54,142]}]}]},{"pos":[2155,2180],"content":"Returns an integer value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an integer value.","pos":[0,25]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.Reader.EventLogStatus\n  id: EventLogStatus\n  children:\n  - System.Diagnostics.Eventing.Reader.EventLogStatus.LogName\n  - System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode\n  langs:\n  - csharp\n  name: EventLogStatus\n  nameWithType: EventLogStatus\n  fullName: System.Diagnostics.Eventing.Reader.EventLogStatus\n  type: Class\n  summary: Contains the status code or error code for a specific event log. This status can be used to determine if the event log is available for an operation.\n  syntax:\n    content: public sealed class EventLogStatus\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Diagnostics.Eventing.Reader.EventLogStatus.LogName\n  id: LogName\n  parent: System.Diagnostics.Eventing.Reader.EventLogStatus\n  langs:\n  - csharp\n  name: LogName\n  nameWithType: EventLogStatus.LogName\n  fullName: System.Diagnostics.Eventing.Reader.EventLogStatus.LogName\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets the name of the event log for which the status code is obtained.\n  syntax:\n    content: public string LogName { get; }\n    return:\n      type: System.String\n      description: Returns a string that contains the name of the event log for which the status code is obtained.\n  overload: System.Diagnostics.Eventing.Reader.EventLogStatus.LogName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode\n  id: StatusCode\n  parent: System.Diagnostics.Eventing.Reader.EventLogStatus\n  langs:\n  - csharp\n  name: StatusCode\n  nameWithType: EventLogStatus.StatusCode\n  fullName: System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets the status code or error code for the event log. This status or error is the result of a read or subscription operation on the event log.\n  syntax:\n    content: public int StatusCode { get; }\n    return:\n      type: System.Int32\n      description: Returns an integer value.\n  overload: System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Diagnostics.Eventing.Reader.EventLogStatus.LogName\n  parent: System.Diagnostics.Eventing.Reader.EventLogStatus\n  isExternal: false\n  name: LogName\n  nameWithType: EventLogStatus.LogName\n  fullName: System.Diagnostics.Eventing.Reader.EventLogStatus.LogName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode\n  parent: System.Diagnostics.Eventing.Reader.EventLogStatus\n  isExternal: false\n  name: StatusCode\n  nameWithType: EventLogStatus.StatusCode\n  fullName: System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.Eventing.Reader.EventLogStatus.LogName*\n  parent: System.Diagnostics.Eventing.Reader.EventLogStatus\n  isExternal: false\n  name: LogName\n  nameWithType: EventLogStatus.LogName\n- uid: System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode*\n  parent: System.Diagnostics.Eventing.Reader.EventLogStatus\n  isExternal: false\n  name: StatusCode\n  nameWithType: EventLogStatus.StatusCode\n"}