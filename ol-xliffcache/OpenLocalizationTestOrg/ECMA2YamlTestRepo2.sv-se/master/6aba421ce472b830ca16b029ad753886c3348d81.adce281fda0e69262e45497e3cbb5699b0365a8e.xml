{"nodes":[{"pos":[1125,1398],"content":"Wraps a reader that is pointing to enveloped signed XML to provide a reader that can be used to read the content without having to process the signature. The signature is automatically validated when the last element of the envelope is read. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Wraps a reader that is pointing to enveloped signed XML to provide a reader that can be used to read the content without having to process the signature. The signature is automatically validated when the last element of the envelope is read. This class cannot be inherited.","pos":[0,273],"nodes":[{"content":"Wraps a reader that is pointing to enveloped signed XML to provide a reader that can be used to read the content without having to process the signature.","pos":[0,153]},{"content":"The signature is automatically validated when the last element of the envelope is read.","pos":[154,241]},{"content":"This class cannot be inherited.","pos":[242,273]}]}]},{"pos":[5477,5644],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.EnvelopedSignatureReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the specified reader and security token serializer.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.EnvelopedSignatureReader\"></xref> class by using the specified reader and security token serializer."},{"pos":[5657,6217],"content":"The &lt;xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName&gt; constructor is invoked with the following additional parameters:      |Parameter Name|Value|   |--------------------|-----------|   |<ph id=\"ph1\">`signingTokenResolver`</ph><ph id=\"ph2\">|</ph><ph id=\"ph3\">`null`</ph>|   |<ph id=\"ph4\">`requireSignature`</ph><ph id=\"ph5\">|</ph><ph id=\"ph6\">`true`</ph>|   |<ph id=\"ph7\">`automaticallyReadSignature`</ph><ph id=\"ph8\">|</ph><ph id=\"ph9\">`true`</ph>|   |<ph id=\"ph10\">`resolveIntrinsicSigningKeys`</ph><ph id=\"ph11\">|</ph><ph id=\"ph12\">`true`</ph><ph id=\"ph13\">|</ph>","needQuote":false,"needEscape":true,"extradata":"MT","source":"The <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName> constructor is invoked with the following additional parameters:      |Parameter Name|Value|   |--------------------|-----------|   |`signingTokenResolver`|`null`|   |`requireSignature`|`true`|   |`automaticallyReadSignature`|`true`|   |`resolveIntrinsicSigningKeys`|`true`|"},{"pos":[6470,6524],"content":"A reader that is pointing to the enveloped signed XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reader that is pointing to the enveloped signed XML.","pos":[0,54]}]},{"pos":[6645,6775],"content":"The token serializer to be used to deserialize the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the signature.","needQuote":true,"needEscape":true,"source":"The token serializer to be used to deserialize the <xref href=\"System.Security.Cryptography.Xml.KeyInfo\"></xref> of the signature."},{"pos":[6958,7177],"content":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>securityTokenSerializer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,84],"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;securityTokenSerializer&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[91,203],"source":"       -or-       <code>securityTokenSerializer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[8068,8252],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.EnvelopedSignatureReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the specified reader, security token serializer, and token resolver.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.EnvelopedSignatureReader\"></xref> class by using the specified reader, security token serializer, and token resolver."},{"pos":[8265,8790],"content":"The &lt;xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName&gt; constructor is invoked with the following additional parameters:      |Parameter Name|Value|   |--------------------|-----------|   |<ph id=\"ph1\">`requireSignature`</ph><ph id=\"ph2\">|</ph><ph id=\"ph3\">`true`</ph>|   |<ph id=\"ph4\">`automaticallyReadSignature`</ph><ph id=\"ph5\">|</ph><ph id=\"ph6\">`true`</ph>|   |<ph id=\"ph7\">`resolveIntrinsicSigningKeys`</ph><ph id=\"ph8\">|</ph><ph id=\"ph9\">`true`</ph><ph id=\"ph10\">|</ph>","needQuote":false,"needEscape":true,"extradata":"MT","source":"The <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName> constructor is invoked with the following additional parameters:      |Parameter Name|Value|   |--------------------|-----------|   |`requireSignature`|`true`|   |`automaticallyReadSignature`|`true`|   |`resolveIntrinsicSigningKeys`|`true`|"},{"pos":[9118,9172],"content":"A reader that is pointing to the enveloped signed XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reader that is pointing to the enveloped signed XML.","pos":[0,54]}]},{"pos":[9293,9423],"content":"The token serializer to be used to deserialize the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the signature.","needQuote":true,"needEscape":true,"source":"The token serializer to be used to deserialize the <xref href=\"System.Security.Cryptography.Xml.KeyInfo\"></xref> of the signature."},{"pos":[9539,9724],"content":"The token resolver to be used to resolve the signing token. <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> specifies that a default security token resolver should be used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token resolver to be used to resolve the signing token.","pos":[0,59]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> specifies that a default security token resolver should be used.","pos":[60,185],"source":"<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> specifies that a default security token resolver should be used."}]},{"pos":[9907,10126],"content":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>securityTokenSerializer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,84],"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;securityTokenSerializer&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[91,203],"source":"       -or-       <code>securityTokenSerializer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[11179,11373],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.EnvelopedSignatureReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the specified reader, security token serializer, token resolver, and behavior.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.EnvelopedSignatureReader\"></xref> class by using the specified reader, security token serializer, token resolver, and behavior."},{"pos":[11790,11844],"content":"A reader that is pointing to the enveloped signed XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reader that is pointing to the enveloped signed XML.","pos":[0,54]}]},{"pos":[11965,12095],"content":"The token serializer to be used to deserialize the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the signature.","needQuote":true,"needEscape":true,"source":"The token serializer to be used to deserialize the <xref href=\"System.Security.Cryptography.Xml.KeyInfo\"></xref> of the signature."},{"pos":[12211,12396],"content":"The token resolver to be used to resolve the signing token. <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> specifies that a default security token resolver should be used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token resolver to be used to resolve the signing token.","pos":[0,59]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> specifies that a default security token resolver should be used.","pos":[60,185],"source":"<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> specifies that a default security token resolver should be used."}]},{"pos":[12470,12635],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the signature is required; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the signature is required; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12719,12887],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the signature should be read; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the signature should be read; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12972,13153],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if intrinsic signing keys should be resolved; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if intrinsic signing keys should be resolved; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13336,13555],"content":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>securityTokenSerializer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,84],"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;securityTokenSerializer&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[91,203],"source":"       -or-       <code>securityTokenSerializer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[14164,14176],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14656,14692],"content":"Reads the next node from the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads the next node from the stream.","pos":[0,36]}]},{"pos":[14704,15034],"content":"Checks whether the end of the envelope is reached and validates the signature if the `requireSignature` parameter was specified `true` in the constructor. If the reader gets positioned on a `<Signature>` element, the whole signature is read in if the `automaticallyReadSignature` parameter was specified `true` in the constructor.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Checks whether the end of the envelope is reached and validates the signature if the <ph id=\"ph1\">`requireSignature`</ph> parameter was specified <ph id=\"ph2\">`true`</ph> in the constructor.","pos":[0,154],"source":"Checks whether the end of the envelope is reached and validates the signature if the `requireSignature` parameter was specified `true` in the constructor."},{"content":"If the reader gets positioned on a <ph id=\"ph1\">`&lt;Signature&gt;`</ph> element, the whole signature is read in if the <ph id=\"ph2\">`automaticallyReadSignature`</ph> parameter was specified <ph id=\"ph3\">`true`</ph> in the constructor.","pos":[155,330],"source":" If the reader gets positioned on a `<Signature>` element, the whole signature is read in if the `automaticallyReadSignature` parameter was specified `true` in the constructor."}]},{"pos":[15165,15356],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the next node was read successfully; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if there are no more nodes.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the next node was read successfully; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if there are no more nodes."},{"pos":[15899,16027],"content":"Gets the signing credentials that are used in the signature, after the envelope is consumed and when the signature is validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the signing credentials that are used in the signature, after the envelope is consumed and when the signature is validated.","pos":[0,128]}]},{"pos":[16223,16247],"content":"The signing credentials.","needQuote":true,"needEscape":true,"nodes":[{"content":"The signing credentials.","pos":[0,24]}]},{"pos":[16798,16956],"content":"Reads the signature if the reader is currently positioned at a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;Signature&amp;gt;\" name=\"&amp;lt;Signature&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Reads the signature if the reader is currently positioned at a <xref uid=\"langword_csharp_&lt;Signature&gt;\" name=\"&lt;Signature&gt;\" href=\"\"></xref> element."},{"pos":[16968,17135],"content":"If the reader is currently positioned on a <ph id=\"ph1\">`&lt;Signature&gt;`</ph> element, invokes the &lt;xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A&gt;method to read the signature.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the reader is currently positioned on a `<Signature>` element, invokes the <xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A>method to read the signature."},{"pos":[17269,17444],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the signature was successfully read; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the signature was successfully read; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.EnvelopedSignatureReader\n  id: EnvelopedSignatureReader\n  children:\n  - System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)\n  - System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)\n  - System.IdentityModel.EnvelopedSignatureReader.Dispose(System.Boolean)\n  - System.IdentityModel.EnvelopedSignatureReader.Read\n  - System.IdentityModel.EnvelopedSignatureReader.SigningCredentials\n  - System.IdentityModel.EnvelopedSignatureReader.TryReadSignature\n  langs:\n  - csharp\n  name: EnvelopedSignatureReader\n  nameWithType: EnvelopedSignatureReader\n  fullName: System.IdentityModel.EnvelopedSignatureReader\n  type: Class\n  summary: Wraps a reader that is pointing to enveloped signed XML to provide a reader that can be used to read the content without having to process the signature. The signature is automatically validated when the last element of the envelope is read. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class EnvelopedSignatureReader : System.IdentityModel.DelegatingXmlDictionaryReader'\n  inheritance:\n  - System.Xml.XmlDictionaryReader\n  - System.IdentityModel.DelegatingXmlDictionaryReader\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.DelegatingXmlDictionaryReader.AttributeCount\n  - System.IdentityModel.DelegatingXmlDictionaryReader.BaseURI\n  - System.IdentityModel.DelegatingXmlDictionaryReader.Close\n  - System.IdentityModel.DelegatingXmlDictionaryReader.Depth\n  - System.IdentityModel.DelegatingXmlDictionaryReader.EOF\n  - System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.Int32)\n  - System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String)\n  - System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String,System.String)\n  - System.IdentityModel.DelegatingXmlDictionaryReader.HasValue\n  - System.IdentityModel.DelegatingXmlDictionaryReader.InitializeInnerReader(System.Xml.XmlDictionaryReader)\n  - System.IdentityModel.DelegatingXmlDictionaryReader.InnerReader\n  - System.IdentityModel.DelegatingXmlDictionaryReader.IsDefault\n  - System.IdentityModel.DelegatingXmlDictionaryReader.IsEmptyElement\n  - System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.Int32)\n  - System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String)\n  - System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String,System.String)\n  - System.IdentityModel.DelegatingXmlDictionaryReader.LocalName\n  - System.IdentityModel.DelegatingXmlDictionaryReader.LookupNamespace(System.String)\n  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.Int32)\n  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String)\n  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String,System.String)\n  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToElement\n  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToFirstAttribute\n  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToNextAttribute\n  - System.IdentityModel.DelegatingXmlDictionaryReader.Name\n  - System.IdentityModel.DelegatingXmlDictionaryReader.NamespaceURI\n  - System.IdentityModel.DelegatingXmlDictionaryReader.NameTable\n  - System.IdentityModel.DelegatingXmlDictionaryReader.NodeType\n  - System.IdentityModel.DelegatingXmlDictionaryReader.Prefix\n  - System.IdentityModel.DelegatingXmlDictionaryReader.QuoteChar\n  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadAttributeValue\n  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)\n  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)\n  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsUniqueId\n  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadState\n  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)\n  - System.IdentityModel.DelegatingXmlDictionaryReader.ResolveEntity\n  - System.IdentityModel.DelegatingXmlDictionaryReader.Value\n  - System.IdentityModel.DelegatingXmlDictionaryReader.ValueType\n  - System.IdentityModel.DelegatingXmlDictionaryReader.XmlLang\n  - System.IdentityModel.DelegatingXmlDictionaryReader.XmlSpace\n  platform:\n  - net462\n- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)\n  id: '#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)'\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  langs:\n  - csharp\n  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)\n  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)\n  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.EnvelopedSignatureReader\"></xref> class by using the specified reader and security token serializer.\n  remarks: \"The <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName> constructor is invoked with the following additional parameters:  \\n  \\n|Parameter Name|Value|  \\n|--------------------|-----------|  \\n|`signingTokenResolver`|`null`|  \\n|`requireSignature`|`true`|  \\n|`automaticallyReadSignature`|`true`|  \\n|`resolveIntrinsicSigningKeys`|`true`|\"\n  syntax:\n    content: public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: A reader that is pointing to the enveloped signed XML.\n    - id: securityTokenSerializer\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: The token serializer to be used to deserialize the <xref href=\"System.Security.Cryptography.Xml.KeyInfo\"></xref> of the signature.\n  overload: System.IdentityModel.EnvelopedSignatureReader.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>reader</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>securityTokenSerializer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  id: '#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)'\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  langs:\n  - csharp\n  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.EnvelopedSignatureReader\"></xref> class by using the specified reader, security token serializer, and token resolver.\n  remarks: \"The <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName> constructor is invoked with the following additional parameters:  \\n  \\n|Parameter Name|Value|  \\n|--------------------|-----------|  \\n|`requireSignature`|`true`|  \\n|`automaticallyReadSignature`|`true`|  \\n|`resolveIntrinsicSigningKeys`|`true`|\"\n  syntax:\n    content: public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: A reader that is pointing to the enveloped signed XML.\n    - id: securityTokenSerializer\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: The token serializer to be used to deserialize the <xref href=\"System.Security.Cryptography.Xml.KeyInfo\"></xref> of the signature.\n    - id: signingTokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: The token resolver to be used to resolve the signing token. <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> specifies that a default security token resolver should be used.\n  overload: System.IdentityModel.EnvelopedSignatureReader.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>reader</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>securityTokenSerializer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)\n  id: '#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)'\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  langs:\n  - csharp\n  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)\n  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)\n  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.EnvelopedSignatureReader\"></xref> class by using the specified reader, security token serializer, token resolver, and behavior.\n  syntax:\n    content: public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver, bool requireSignature, bool automaticallyReadSignature, bool resolveIntrinsicSigningKeys);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: A reader that is pointing to the enveloped signed XML.\n    - id: securityTokenSerializer\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: The token serializer to be used to deserialize the <xref href=\"System.Security.Cryptography.Xml.KeyInfo\"></xref> of the signature.\n    - id: signingTokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: The token resolver to be used to resolve the signing token. <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> specifies that a default security token resolver should be used.\n    - id: requireSignature\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the signature is required; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: automaticallyReadSignature\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the signature should be read; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: resolveIntrinsicSigningKeys\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if intrinsic signing keys should be resolved; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.EnvelopedSignatureReader.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>reader</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>securityTokenSerializer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.IdentityModel.EnvelopedSignatureReader.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: EnvelopedSignatureReader.Dispose(Boolean)\n  fullName: System.IdentityModel.EnvelopedSignatureReader.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: To be added.\n  overload: System.IdentityModel.EnvelopedSignatureReader.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.EnvelopedSignatureReader.Read\n  id: Read\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  langs:\n  - csharp\n  name: Read()\n  nameWithType: EnvelopedSignatureReader.Read()\n  fullName: System.IdentityModel.EnvelopedSignatureReader.Read()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Reads the next node from the stream.\n  remarks: Checks whether the end of the envelope is reached and validates the signature if the `requireSignature` parameter was specified `true` in the constructor. If the reader gets positioned on a `<Signature>` element, the whole signature is read in if the `automaticallyReadSignature` parameter was specified `true` in the constructor.\n  syntax:\n    content: public override bool Read ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the next node was read successfully; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if there are no more nodes.\n  overload: System.IdentityModel.EnvelopedSignatureReader.Read*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials\n  id: SigningCredentials\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  langs:\n  - csharp\n  name: SigningCredentials\n  nameWithType: EnvelopedSignatureReader.SigningCredentials\n  fullName: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets the signing credentials that are used in the signature, after the envelope is consumed and when the signature is validated.\n  syntax:\n    content: public System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; }\n    return:\n      type: System.IdentityModel.Tokens.SigningCredentials\n      description: The signing credentials.\n  overload: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature\n  id: TryReadSignature\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  langs:\n  - csharp\n  name: TryReadSignature()\n  nameWithType: EnvelopedSignatureReader.TryReadSignature()\n  fullName: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Reads the signature if the reader is currently positioned at a <xref uid=\"langword_csharp_&lt;Signature&gt;\" name=\"&lt;Signature&gt;\" href=\"\"></xref> element.\n  remarks: If the reader is currently positioned on a `<Signature>` element, invokes the <xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A>method to read the signature.\n  syntax:\n    content: public bool TryReadSignature ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the signature was successfully read; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.DelegatingXmlDictionaryReader\n  isExternal: false\n  name: System.IdentityModel.DelegatingXmlDictionaryReader\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  isExternal: false\n  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)\n  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)\n  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.IdentityModel.Selectors.SecurityTokenSerializer\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenSerializer\n  nameWithType: SecurityTokenSerializer\n  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer\n- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  isExternal: false\n  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenResolver\n  nameWithType: SecurityTokenResolver\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  isExternal: false\n  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)\n  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)\n  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.EnvelopedSignatureReader.Dispose(System.Boolean)\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: EnvelopedSignatureReader.Dispose(Boolean)\n  fullName: System.IdentityModel.EnvelopedSignatureReader.Dispose(Boolean)\n- uid: System.IdentityModel.EnvelopedSignatureReader.Read\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  isExternal: false\n  name: Read()\n  nameWithType: EnvelopedSignatureReader.Read()\n  fullName: System.IdentityModel.EnvelopedSignatureReader.Read()\n- uid: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  isExternal: false\n  name: SigningCredentials\n  nameWithType: EnvelopedSignatureReader.SigningCredentials\n  fullName: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials\n- uid: System.IdentityModel.Tokens.SigningCredentials\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SigningCredentials\n  nameWithType: SigningCredentials\n  fullName: System.IdentityModel.Tokens.SigningCredentials\n- uid: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  isExternal: false\n  name: TryReadSignature()\n  nameWithType: EnvelopedSignatureReader.TryReadSignature()\n  fullName: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature()\n- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor*\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  isExternal: false\n  name: EnvelopedSignatureReader\n  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader\n- uid: System.IdentityModel.EnvelopedSignatureReader.Dispose*\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  isExternal: false\n  name: Dispose\n  nameWithType: EnvelopedSignatureReader.Dispose\n- uid: System.IdentityModel.EnvelopedSignatureReader.Read*\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  isExternal: false\n  name: Read\n  nameWithType: EnvelopedSignatureReader.Read\n- uid: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials*\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  isExternal: false\n  name: SigningCredentials\n  nameWithType: EnvelopedSignatureReader.SigningCredentials\n- uid: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature*\n  parent: System.IdentityModel.EnvelopedSignatureReader\n  isExternal: false\n  name: TryReadSignature\n  nameWithType: EnvelopedSignatureReader.TryReadSignature\n"}