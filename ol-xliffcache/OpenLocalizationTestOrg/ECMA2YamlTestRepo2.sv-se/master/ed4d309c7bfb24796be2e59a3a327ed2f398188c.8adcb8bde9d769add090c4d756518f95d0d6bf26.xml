{"nodes":[{"pos":[1190,1327],"content":"Represents a configuration element that specifies a service's credentials based on username and password. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a configuration element that specifies a service's credentials based on username and password. This class cannot be inherited.","pos":[0,137],"nodes":[{"content":"Represents a configuration element that specifies a service's credentials based on username and password.","pos":[0,105]},{"content":"This class cannot be inherited.","pos":[106,137]}]}]},{"pos":[4753,4871],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.UserNameServiceElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.UserNameServiceElement\"></xref> class."},{"pos":[5575,5633],"content":"Gets or sets the maximum length of time a token is cached.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum length of time a token is cached.","pos":[0,58]}]},{"pos":[5771,5859],"content":"A &lt;xref:System.TimeSpan&gt; that represents the maximum length of time a token is cached<ph id=\"ph1\">`.`</ph>","needQuote":true,"needEscape":true,"source":"A <xref:System.TimeSpan> that represents the maximum length of time a token is cached`.`"},{"pos":[6466,6534],"content":"Gets or sets a value that indicates whether logon tokens are cached.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether logon tokens are cached.","pos":[0,68]}]},{"pos":[6659,6901],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if logon tokens are cached; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if logon tokens are cached; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,163],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if logon tokens are cached; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[164,242],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[7626,7714],"content":"Copies the content of the specified configuration element to this configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the content of the specified configuration element to this configuration element.","pos":[0,88]}]},{"pos":[7939,7978],"content":"The configuration element to be copied.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration element to be copied.","pos":[0,39]}]},{"pos":[8170,8252],"content":"<ph id=\"ph1\">&lt;code&gt;from&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>from</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8397,8433],"content":"The configuration file is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration file is read-only.","pos":[0,36]}]},{"pos":[9023,9088],"content":"Gets or sets the type of custom username password validator used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type of custom username password validator used.","pos":[0,65]}]},{"pos":[9233,9285],"content":"The type of custom username password validator used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of custom username password validator used.","pos":[0,52]}]},{"pos":[9923,10019],"content":"Gets or sets a value that indicates whether Windows groups are included in the security context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether Windows groups are included in the security context.","pos":[0,96]}]},{"pos":[10031,10227],"content":"Setting this property to `true` has a performance impact as it results in a full group expansion. Set this property to `false` if you do not need to establish the list of groups a user belongs to.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Setting this property to <ph id=\"ph1\">`true`</ph> has a performance impact as it results in a full group expansion.","pos":[0,97],"source":"Setting this property to `true` has a performance impact as it results in a full group expansion."},{"content":"Set this property to <ph id=\"ph1\">`false`</ph> if you do not need to establish the list of groups a user belongs to.","pos":[98,196],"source":" Set this property to `false` if you do not need to establish the list of groups a user belongs to."}]},{"pos":[10356,10626],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if Windows groups are included in the security context; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if Windows groups are included in the security context; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,191],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if Windows groups are included in the security context; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[192,270],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[11249,11306],"content":"Gets or sets the maximum number of logon tokens to cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum number of logon tokens to cache.","pos":[0,57]}]},{"pos":[11432,11476],"content":"The maximum number of logon tokens to cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of logon tokens to cache.","pos":[0,44]}]},{"pos":[12109,12216],"content":"Gets or sets a string that specifies the name of a member provider that provides password validation logic.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a string that specifies the name of a member provider that provides password validation logic.","pos":[0,107]}]},{"pos":[12228,12535],"content":"When using username `ClientCredentialType` on a binding, the usernames are mapped to Windows accounts by default. It is possible to override this behavior using this property, which provides the name of the <xref:System.Web.Security.MembershipProvider> that specifies the relevant password validation logic.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When using username <ph id=\"ph1\">`ClientCredentialType`</ph> on a binding, the usernames are mapped to Windows accounts by default.","pos":[0,113],"source":"When using username `ClientCredentialType` on a binding, the usernames are mapped to Windows accounts by default."},{"content":"It is possible to override this behavior using this property, which provides the name of the &lt;xref:System.Web.Security.MembershipProvider&gt; that specifies the relevant password validation logic.","pos":[114,307],"source":" It is possible to override this behavior using this property, which provides the name of the <xref:System.Web.Security.MembershipProvider> that specifies the relevant password validation logic."}]},{"pos":[12667,12737],"content":"The name of a member provider that provides password validation logic.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of a member provider that provides password validation logic.","pos":[0,70]}]},{"pos":[13512,13524],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14187,14251],"content":"Gets or sets the manner in which username password is validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the manner in which username password is validated.","pos":[0,64]}]},{"pos":[14490,14585],"content":"A valid <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.UserNamePasswordValidationMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"A valid <xref href=\"System.ServiceModel.Security.UserNamePasswordValidationMode\"></xref> value."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.UserNameServiceElement\n  id: UserNameServiceElement\n  children:\n  - System.ServiceModel.Configuration.UserNameServiceElement.#ctor\n  - System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime\n  - System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens\n  - System.ServiceModel.Configuration.UserNameServiceElement.Copy(System.ServiceModel.Configuration.UserNameServiceElement)\n  - System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType\n  - System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups\n  - System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens\n  - System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName\n  - System.ServiceModel.Configuration.UserNameServiceElement.Properties\n  - System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode\n  langs:\n  - csharp\n  name: UserNameServiceElement\n  nameWithType: UserNameServiceElement\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement\n  type: Class\n  summary: Represents a configuration element that specifies a service's credentials based on username and password. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class UserNameServiceElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: UserNameServiceElement()\n  nameWithType: UserNameServiceElement.UserNameServiceElement()\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.UserNameServiceElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.UserNameServiceElement\"></xref> class.\n  syntax:\n    content: public UserNameServiceElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime\n  id: CachedLogonTokenLifetime\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: CachedLogonTokenLifetime\n  nameWithType: UserNameServiceElement.CachedLogonTokenLifetime\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the maximum length of time a token is cached.\n  syntax:\n    content: public TimeSpan CachedLogonTokenLifetime { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that represents the maximum length of time a token is cached`.`\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens\n  id: CacheLogonTokens\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: CacheLogonTokens\n  nameWithType: UserNameServiceElement.CacheLogonTokens\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that indicates whether logon tokens are cached.\n  syntax:\n    content: public bool CacheLogonTokens { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if logon tokens are cached; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.Copy(System.ServiceModel.Configuration.UserNameServiceElement)\n  id: Copy(System.ServiceModel.Configuration.UserNameServiceElement)\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: Copy(UserNameServiceElement)\n  nameWithType: UserNameServiceElement.Copy(UserNameServiceElement)\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.Copy(UserNameServiceElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Copies the content of the specified configuration element to this configuration element.\n  syntax:\n    content: public void Copy (System.ServiceModel.Configuration.UserNameServiceElement from);\n    parameters:\n    - id: from\n      type: System.ServiceModel.Configuration.UserNameServiceElement\n      description: The configuration element to be copied.\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.Copy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>from</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: The configuration file is read-only.\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType\n  id: CustomUserNamePasswordValidatorType\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: CustomUserNamePasswordValidatorType\n  nameWithType: UserNameServiceElement.CustomUserNamePasswordValidatorType\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the type of custom username password validator used.\n  syntax:\n    content: public string CustomUserNamePasswordValidatorType { get; set; }\n    return:\n      type: System.String\n      description: The type of custom username password validator used.\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups\n  id: IncludeWindowsGroups\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: IncludeWindowsGroups\n  nameWithType: UserNameServiceElement.IncludeWindowsGroups\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that indicates whether Windows groups are included in the security context.\n  remarks: Setting this property to `true` has a performance impact as it results in a full group expansion. Set this property to `false` if you do not need to establish the list of groups a user belongs to.\n  syntax:\n    content: public bool IncludeWindowsGroups { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if Windows groups are included in the security context; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens\n  id: MaxCachedLogonTokens\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: MaxCachedLogonTokens\n  nameWithType: UserNameServiceElement.MaxCachedLogonTokens\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the maximum number of logon tokens to cache.\n  syntax:\n    content: public int MaxCachedLogonTokens { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of logon tokens to cache.\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName\n  id: MembershipProviderName\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: MembershipProviderName\n  nameWithType: UserNameServiceElement.MembershipProviderName\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a string that specifies the name of a member provider that provides password validation logic.\n  remarks: When using username `ClientCredentialType` on a binding, the usernames are mapped to Windows accounts by default. It is possible to override this behavior using this property, which provides the name of the <xref:System.Web.Security.MembershipProvider> that specifies the relevant password validation logic.\n  syntax:\n    content: public string MembershipProviderName { get; set; }\n    return:\n      type: System.String\n      description: The name of a member provider that provides password validation logic.\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: UserNameServiceElement.Properties\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode\n  id: UserNamePasswordValidationMode\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: UserNamePasswordValidationMode\n  nameWithType: UserNameServiceElement.UserNamePasswordValidationMode\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the manner in which username password is validated.\n  syntax:\n    content: public System.ServiceModel.Security.UserNamePasswordValidationMode UserNamePasswordValidationMode { get; set; }\n    return:\n      type: System.ServiceModel.Security.UserNamePasswordValidationMode\n      description: A valid <xref href=\"System.ServiceModel.Security.UserNamePasswordValidationMode\"></xref> value.\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Configuration.ConfigurationErrorsException\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationErrorsException\n  nameWithType: ConfigurationErrorsException\n  fullName: System.Configuration.ConfigurationErrorsException\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.#ctor\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: UserNameServiceElement()\n  nameWithType: UserNameServiceElement.UserNameServiceElement()\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.UserNameServiceElement()\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: CachedLogonTokenLifetime\n  nameWithType: UserNameServiceElement.CachedLogonTokenLifetime\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: CacheLogonTokens\n  nameWithType: UserNameServiceElement.CacheLogonTokens\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.Copy(System.ServiceModel.Configuration.UserNameServiceElement)\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: Copy(UserNameServiceElement)\n  nameWithType: UserNameServiceElement.Copy(UserNameServiceElement)\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.Copy(UserNameServiceElement)\n- uid: System.ServiceModel.Configuration.UserNameServiceElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: UserNameServiceElement\n  nameWithType: UserNameServiceElement\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: CustomUserNamePasswordValidatorType\n  nameWithType: UserNameServiceElement.CustomUserNamePasswordValidatorType\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: IncludeWindowsGroups\n  nameWithType: UserNameServiceElement.IncludeWindowsGroups\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: MaxCachedLogonTokens\n  nameWithType: UserNameServiceElement.MaxCachedLogonTokens\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: MembershipProviderName\n  nameWithType: UserNameServiceElement.MembershipProviderName\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.Properties\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: Properties\n  nameWithType: UserNameServiceElement.Properties\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: UserNamePasswordValidationMode\n  nameWithType: UserNameServiceElement.UserNamePasswordValidationMode\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode\n- uid: System.ServiceModel.Security.UserNamePasswordValidationMode\n  parent: System.ServiceModel.Security\n  isExternal: false\n  name: UserNamePasswordValidationMode\n  nameWithType: UserNamePasswordValidationMode\n  fullName: System.ServiceModel.Security.UserNamePasswordValidationMode\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.#ctor*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: UserNameServiceElement\n  nameWithType: UserNameServiceElement.UserNameServiceElement\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: CachedLogonTokenLifetime\n  nameWithType: UserNameServiceElement.CachedLogonTokenLifetime\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: CacheLogonTokens\n  nameWithType: UserNameServiceElement.CacheLogonTokens\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.Copy*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: Copy\n  nameWithType: UserNameServiceElement.Copy\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: CustomUserNamePasswordValidatorType\n  nameWithType: UserNameServiceElement.CustomUserNamePasswordValidatorType\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: IncludeWindowsGroups\n  nameWithType: UserNameServiceElement.IncludeWindowsGroups\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: MaxCachedLogonTokens\n  nameWithType: UserNameServiceElement.MaxCachedLogonTokens\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: MembershipProviderName\n  nameWithType: UserNameServiceElement.MembershipProviderName\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.Properties*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: Properties\n  nameWithType: UserNameServiceElement.Properties\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: UserNamePasswordValidationMode\n  nameWithType: UserNameServiceElement.UserNamePasswordValidationMode\n"}