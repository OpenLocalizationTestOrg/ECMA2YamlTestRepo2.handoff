{"nodes":[{"pos":[3338,3420],"content":"Provides a base class for CodeDomProvider implementations. This class is abstract.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a base class for CodeDomProvider implementations. This class is abstract.","pos":[0,82],"nodes":[{"content":"Provides a base class for CodeDomProvider implementations.","pos":[0,58]},{"content":"This class is abstract.","pos":[59,82]}]}]},{"pos":[8392,8493],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.CodeDomProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.Compiler.CodeDomProvider\"></xref> class."},{"pos":[9351,9562],"content":"Compiles an assembly based on the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> trees contained in the specified array of <bpt id=\"p2\">&lt;xref href=\"System.CodeDom.CodeCompileUnit\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects, using the specified compiler settings.","needQuote":true,"needEscape":true,"source":"Compiles an assembly based on the <xref href=\"System.CodeDom\"></xref> trees contained in the specified array of <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> objects, using the specified compiler settings."},{"pos":[10429,10550],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that indicates the settings for the compilation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.Compiler.CompilerParameters\"></xref> object that indicates the settings for the compilation."},{"pos":[10642,10746],"content":"An array of type <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeCompileUnit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the code to compile.","needQuote":true,"needEscape":true,"source":"An array of type <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> that indicates the code to compile."},{"pos":[10830,10946],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerResults\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that indicates the results of the compilation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.Compiler.CompilerResults\"></xref> object that indicates the results of the compilation."},{"pos":[11143,11274],"content":"Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler*> method is overridden in a derived class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Neither this method nor the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler*&gt; method is overridden in a derived class.","pos":[0,131],"source":"Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler*> method is overridden in a derived class."}]},{"pos":[11928,12042],"content":"Compiles an assembly from the source code contained in the specified files, using the specified compiler settings.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compiles an assembly from the source code contained in the specified files, using the specified compiler settings.","pos":[0,114]}]},{"pos":[12879,13000],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that indicates the settings for the compilation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.Compiler.CompilerParameters\"></xref> object that indicates the settings for the compilation."},{"pos":[13068,13114],"content":"An array of the names of the files to compile.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of the names of the files to compile.","pos":[0,46]}]},{"pos":[13198,13310],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerResults\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that indicates the results of compilation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.Compiler.CompilerResults\"></xref> object that indicates the results of compilation."},{"pos":[13508,13639],"content":"Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler*> method is overridden in a derived class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Neither this method nor the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler*&gt; method is overridden in a derived class.","pos":[0,131],"source":"Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler*> method is overridden in a derived class."}]},{"pos":[14303,14422],"content":"Compiles an assembly from the specified array of strings containing source code, using the specified compiler settings.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compiles an assembly from the specified array of strings containing source code, using the specified compiler settings.","pos":[0,119]}]},{"pos":[15259,15390],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that indicates the compiler settings for this compilation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.Compiler.CompilerParameters\"></xref> object that indicates the compiler settings for this compilation."},{"pos":[15456,15499],"content":"An array of source code strings to compile.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of source code strings to compile.","pos":[0,43]}]},{"pos":[15583,15695],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerResults\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that indicates the results of compilation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.Compiler.CompilerResults\"></xref> object that indicates the results of compilation."},{"pos":[15895,16026],"content":"Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler*> method is overridden in a derived class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Neither this method nor the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler*&gt; method is overridden in a derived class.","pos":[0,131],"source":"Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler*> method is overridden in a derived class."}]},{"pos":[16434,16498],"content":"When overridden in a derived class, creates a new code compiler.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, creates a new code compiler.","pos":[0,64]}]},{"pos":[16510,16741],"content":"This method is obsolete in the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]. The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeCompiler> methods that are directly available in the code provider.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is obsolete in the <ph id=\"ph1\">[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]</ph>.","pos":[0,85],"source":"This method is obsolete in the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]."},{"content":"The recommended alternative is to call the &lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt; methods that are directly available in the code provider.","pos":[86,231],"source":" The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeCompiler> methods that are directly available in the code provider."}]},{"pos":[16938,17106],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.ICodeCompiler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can be used for compilation of <bpt id=\"p2\">&lt;xref href=\"System.CodeDom\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> based source code representations.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.CodeDom.Compiler.ICodeCompiler\"></xref> that can be used for compilation of <xref href=\"System.CodeDom\"></xref> based source code representations."},{"pos":[17692,17746],"content":"Creates an escaped identifier for the specified value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an escaped identifier for the specified value.","pos":[0,54]}]},{"pos":[17759,18778],"content":"CreateEscapedIdentifier tests whether the identifier conflicts with any reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting. This is referred to an escaped identifier. The escaped identifier contains the same `value` but has escape-code formatting added to differentiate the identifier from the keyword. Two implementation examples are preceding the `value` with \"@\" or bracketing the `value` with \"[\" and \"]\".      > [!NOTE] >  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider. In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider. If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"CreateEscapedIdentifier tests whether the identifier conflicts with any reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting.","pos":[0,187]},{"content":"This is referred to an escaped identifier.","pos":[188,230]},{"content":"The escaped identifier contains the same <ph id=\"ph1\">`value`</ph> but has escape-code formatting added to differentiate the identifier from the keyword.","pos":[231,366],"source":" The escaped identifier contains the same `value` but has escape-code formatting added to differentiate the identifier from the keyword."},{"content":"Two implementation examples are preceding the <ph id=\"ph1\">`value`</ph> with \"@\" or bracketing the <ph id=\"ph2\">`value`</ph> with \"[\" and \"]\".","pos":[367,473],"source":" Two implementation examples are preceding the `value` with \"@\" or bracketing the `value` with \"[\" and \"]\"."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In the .NET Framework versions 1.0 and 1.1, this method is provided by the &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; implementation that is returned by the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt; method of the provider.","pos":[479,741],"source":"      > [!NOTE] >  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider."},{"content":"In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.","pos":[742,864]},{"content":"If the code provider does not override this method, the &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; implementation is called by the base class.","pos":[865,1010],"source":" If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class."}]},{"pos":[18942,18995],"content":"The string for which to create an escaped identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string for which to create an escaped identifier.","pos":[0,53]}]},{"pos":[19053,19090],"content":"The escaped identifier for the value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The escaped identifier for the value.","pos":[0,37]}]},{"pos":[19288,19420],"content":"Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*> method is overridden in a derived class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Neither this method nor the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*&gt; method is overridden in a derived class.","pos":[0,132],"source":"Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*> method is overridden in a derived class."}]},{"pos":[19833,19898],"content":"When overridden in a derived class, creates a new code generator.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, creates a new code generator.","pos":[0,65]}]},{"pos":[19910,20181],"content":"This method is obsolete in the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]. The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeGenerator> methods that are directly available in the <xref:System.CodeDom.Compiler.CodeDomProvider> class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is obsolete in the <ph id=\"ph1\">[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]</ph>.","pos":[0,85],"source":"This method is obsolete in the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]."},{"content":"The recommended alternative is to call the &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; methods that are directly available in the &lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt; class.","pos":[86,271],"source":" The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeGenerator> methods that are directly available in the <xref:System.CodeDom.Compiler.CodeDomProvider> class."}]},{"pos":[20381,20543],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.ICodeGenerator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can be used to generate <bpt id=\"p2\">&lt;xref href=\"System.CodeDom\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> based source code representations.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.CodeDom.Compiler.ICodeGenerator\"></xref> that can be used to generate <xref href=\"System.CodeDom\"></xref> based source code representations."},{"pos":[21116,21240],"content":"When overridden in a derived class, creates a new code generator using the specified <xref:System.IO.TextWriter> for output.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, creates a new code generator using the specified &lt;xref:System.IO.TextWriter&gt; for output.","pos":[0,124],"source":"When overridden in a derived class, creates a new code generator using the specified <xref:System.IO.TextWriter> for output."}]},{"pos":[21253,21762],"content":"This method uses the specified <xref:System.IO.TextWriter> for output. This method supports more optimized code generation that incrementally updates the source code.      > [!NOTE] >  The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method uses the specified &lt;xref:System.IO.TextWriter&gt; for output.","pos":[0,70],"source":"This method uses the specified <xref:System.IO.TextWriter> for output."},{"content":"This method supports more optimized code generation that incrementally updates the source code.","pos":[71,166]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The base class implementation calls the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt; method, which is obsolete in the <ph id=\"ph2\">[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]</ph> and results in a &lt;xref:System.NotSupportedException&gt; if an &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; object is not returned.","pos":[172,506],"source":"      > [!NOTE] >  The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned."}]},{"pos":[21973,22020],"content":"A <xref:System.IO.TextWriter> to use to output.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.IO.TextWriter&gt; to use to output.","pos":[0,47],"source":"A <xref:System.IO.TextWriter> to use to output."}]},{"pos":[22103,22265],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.ICodeGenerator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can be used to generate <bpt id=\"p2\">&lt;xref href=\"System.CodeDom\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> based source code representations.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.CodeDom.Compiler.ICodeGenerator\"></xref> that can be used to generate <xref href=\"System.CodeDom\"></xref> based source code representations."},{"pos":[22812,22918],"content":"When overridden in a derived class, creates a new code generator using the specified file name for output.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, creates a new code generator using the specified file name for output.","pos":[0,106]}]},{"pos":[22931,23326],"content":"This method uses the specified file name for output.      > [!NOTE] >  The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method uses the specified file name for output.","pos":[0,52]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The base class implementation calls the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt; method, which is obsolete in the <ph id=\"ph2\">[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]</ph> and results in a &lt;xref:System.NotSupportedException&gt; if an &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; object is not returned.","pos":[58,392],"source":"      > [!NOTE] >  The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned."}]},{"pos":[23520,23547],"content":"The file name to output to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file name to output to.","pos":[0,27]}]},{"pos":[23630,23792],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.ICodeGenerator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can be used to generate <bpt id=\"p2\">&lt;xref href=\"System.CodeDom\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> based source code representations.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.CodeDom.Compiler.ICodeGenerator\"></xref> that can be used to generate <xref href=\"System.CodeDom\"></xref> based source code representations."},{"pos":[24276,24338],"content":"When overridden in a derived class, creates a new code parser.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, creates a new code parser.","pos":[0,62]}]},{"pos":[24528,24727],"content":"An <xref href=\"System.CodeDom.Compiler.ICodeParser\"></xref> that can be used to parse source code. The base implementation always returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.ICodeParser\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can be used to parse source code.","pos":[0,98],"source":"An <xref href=\"System.CodeDom.Compiler.ICodeParser\"></xref> that can be used to parse source code."},{"content":"The base implementation always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[99,199],"source":" The base implementation always returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[25266,25370],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.CodeDomProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance for the specified language.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.CodeDom.Compiler.CodeDomProvider\"></xref> instance for the specified language."},{"pos":[29605,29623],"content":"The language name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The language name.","pos":[0,18]}]},{"pos":[29707,29778],"content":"A CodeDOM provider that is implemented for the specified language name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A CodeDOM provider that is implemented for the specified language name.","pos":[0,71]}]},{"pos":[30005,30084],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">language</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have a configured provider on this computer.","needQuote":true,"needEscape":true,"source":"The <code>language</code> does not have a configured provider on this computer."},{"pos":[30187,30277],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">language</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>language</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[30390,30439],"content":"The caller does not have the required permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]},{"pos":[31112,31237],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.CodeDomProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance for the specified language and provider options.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.CodeDom.Compiler.CodeDomProvider\"></xref> instance for the specified language and provider options."},{"pos":[31250,32216],"content":"> [!NOTE] >  This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers. CreateProvider enables you to specify at run time the version of the code provider you want to instantiate. If you know at design time which code provider is to be used, you should create an instance of that code provider instead of using the CreateProvider method.       Use CreateProvider when you want to dynamically find a configured provider implementation for a specific language and options. Language names are case-insensitive. For information about supported provider options, see the specific CodeDOM provider documentation.       For information about validating a provider and calling a provider if more than one provider implementation is configured for the language name, see the Remarks section of the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph> &gt;  This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.","pos":[0,155],"source":"> [!NOTE] >  This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers."},{"content":"CreateProvider enables you to specify at run time the version of the code provider you want to instantiate.","pos":[156,263]},{"content":"If you know at design time which code provider is to be used, you should create an instance of that code provider instead of using the CreateProvider method.","pos":[264,421]},{"content":"Use CreateProvider when you want to dynamically find a configured provider implementation for a specific language and options.","pos":[428,554]},{"content":"Language names are case-insensitive.","pos":[555,591]},{"content":"For information about supported provider options, see the specific CodeDOM provider documentation.","pos":[592,690]},{"content":"For information about validating a provider and calling a provider if more than one provider implementation is configured for the language name, see the Remarks section of the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29&gt; method.","pos":[697,961],"source":"       For information about validating a provider and calling a provider if more than one provider implementation is configured for the language name, see the Remarks section of the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> method."}]},{"pos":[32826,32844],"content":"The language name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The language name.","pos":[0,18]}]},{"pos":[32970,33031],"content":"A collection of provider options from the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of provider options from the configuration file.","pos":[0,61]}]},{"pos":[33115,33198],"content":"A CodeDOM provider that is implemented for the specified language name and options.","needQuote":true,"needEscape":true,"nodes":[{"content":"A CodeDOM provider that is implemented for the specified language name and options.","pos":[0,83]}]},{"pos":[33774,33825],"content":"Creates a valid identifier for the specified value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a valid identifier for the specified value.","pos":[0,51]}]},{"pos":[33838,34737],"content":"CreateValidIdentifier tests whether the identifier conflicts with reserved or language keywords, and if so, attempts to return a valid identifier name that does not conflict. Usually the returned identifier is only slightly modified to differentiate the identifier from the keyword; for example, the name might be preceded by the underscore (\"_\") character.      > [!NOTE] >  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider. In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider. If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"CreateValidIdentifier tests whether the identifier conflicts with reserved or language keywords, and if so, attempts to return a valid identifier name that does not conflict.","pos":[0,174]},{"content":"Usually the returned identifier is only slightly modified to differentiate the identifier from the keyword; for example, the name might be preceded by the underscore (\"_\") character.","pos":[175,357]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In the .NET Framework versions 1.0 and 1.1, this method is provided by the &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; implementation that is returned by the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt; method of the provider.","pos":[363,625],"source":"      > [!NOTE] >  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider."},{"content":"In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.","pos":[626,748]},{"content":"If the code provider does not override this method, the &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; implementation is called by the base class.","pos":[749,894],"source":" If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class."}]},{"pos":[34899,34951],"content":"The string for which to generate a valid identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string for which to generate a valid identifier.","pos":[0,52]}]},{"pos":[35009,35052],"content":"A valid identifier for the specified value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A valid identifier for the specified value.","pos":[0,43]}]},{"pos":[35248,35380],"content":"Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*> method is overridden in a derived class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Neither this method nor the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*&gt; method is overridden in a derived class.","pos":[0,132],"source":"Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*> method is overridden in a derived class."}]},{"pos":[35779,35869],"content":"Gets the default file name extension to use for source code files in the current language.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default file name extension to use for source code files in the current language.","pos":[0,90]}]},{"pos":[35881,36002],"content":"This property is used by code generators and code compilers to indicate what file extensions should be generated or used.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is used by code generators and code compilers to indicate what file extensions should be generated or used.","pos":[0,121]}]},{"pos":[36676,36834],"content":"A file name extension corresponding to the extension of the source files of the current language. The base implementation always returns <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A file name extension corresponding to the extension of the source files of the current language. The base implementation always returns <xref:System.String>.","pos":[0,158],"nodes":[{"content":"A file name extension corresponding to the extension of the source files of the current language.","pos":[0,97]},{"content":"The base implementation always returns &lt;xref:System.String&gt;.","pos":[98,158],"source":" The base implementation always returns <xref:System.String>."}]}]},{"pos":[37728,37886],"content":"Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and sends it to the specified text writer, using the specified options.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and sends it to the specified text writer, using the specified options.","pos":[0,158]}]},{"pos":[72614,73146],"content":"> [!NOTE] >  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider. In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider. If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph> &gt;  In the .NET Framework versions 1.0 and 1.1, this method is provided by the &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; implementation that is returned by the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt; method of the provider.","pos":[0,262],"source":"> [!NOTE] >  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider."},{"content":"In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.","pos":[263,385]},{"content":"If the code provider does not override this method, the &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; implementation is called by the base class.","pos":[386,531],"source":" If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.Compiler.CodeDomProvider\n  id: CodeDomProvider\n  children:\n  - System.CodeDom.Compiler.CodeDomProvider.#ctor\n  - System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])\n  - System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])\n  - System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])\n  - System.CodeDom.Compiler.CodeDomProvider.CreateCompiler\n  - System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.CreateGenerator\n  - System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)\n  - System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.CreateParser\n  - System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})\n  - System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.FileExtension\n  - System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo\n  - System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)\n  - System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)\n  - System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.LanguageOptions\n  - System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)\n  - System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)\n  langs:\n  - csharp\n  name: CodeDomProvider\n  nameWithType: CodeDomProvider\n  fullName: System.CodeDom.Compiler.CodeDomProvider\n  type: Class\n  summary: Provides a base class for CodeDomProvider implementations. This class is abstract.\n  remarks: \"A CodeDomProvider can be used to create and retrieve instances of code generators and code compilers. Code generators can be used to generate code in a particular language, and code compilers can be used to compile code into assemblies.  \\n  \\n> [!NOTE]\\n>  In the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)], the methods made available in the code generator and code compiler are available directly from the code provider. You do not need to call <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> or <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> to access the methods, and those methods are marked as obsolete. This applies to preexisting as well as new code provider implementations.  \\n  \\n A CodeDomProvider implementation typically provides code generation and/or code compilation interfaces for generating code and managing compilation for a single programming language. Several languages are supported by CodeDomProvider implementations that ship with the [!INCLUDE[winsdklong](~/add/includes/winsdklong-md.md)]. These languages include C#, Visual Basic, C++, and JScript. Developers or compiler vendors can implement the <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> interfaces and provide a CodeDomProvider that extends CodeDOM support to other programming languages.  \\n  \\n The [\\\\&lt;system.codedom\\\\&gt; Element](../Topic/%3Csystem.codedom%3E%20Element.md) in the machine configuration file (Machine.config) provides a mechanism for developers and compiler vendors to add configuration settings for additional CodeDomProvider implementations.  \\n  \\n The CodeDomProvider class provides static methods to discover and enumerate the CodeDomProvider implementations on a computer. The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method returns the settings for all CodeDomProvider implementations on a computer. The <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method returns the settings for a specific CodeDomProvider implementation, based on the programming language name. The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns an instance of a CodeDomProvider implementation for a specific language.  \\n  \\n For more details on language provider settings in the configuration file, see [Compiler and Language Provider Settings Schema](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  This class makes a link demand and an inheritance demand at the class level. A <xref:System.Security.SecurityException> is thrown if either the immediate caller or the derived class does not have full trust permission. For details about security demands, see [Link Demands](~/add/includes/ajax-current-ext-md.md) and [Inheritance Demands](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9).\"\n  example:\n  - \"The following example program can generate and compile source code based on a CodeDOM model of a program that prints \\\"Hello World\\\" using the <xref:System.Console> class. A Windows Forms user interface is provided. The user can select the target programming language from several selections: C#, Visual Basic, and JScript.  \\n  \\n [!code-cpp[CodeDomExample#1](~/add/codesnippet/cpp/t-system.codedom.compile_7_1.cpp)]\\n [!code-cs[CodeDomExample#1](~/add/codesnippet/csharp/t-system.codedom.compile_7_1.cs)]\\n [!code-vb[CodeDomExample#1](~/add/codesnippet/visualbasic/t-system.codedom.compile_7_1.vb)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.ToolboxItem(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class CodeDomProvider : System.ComponentModel.Component\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: CodeDomProvider()\n  nameWithType: CodeDomProvider.CodeDomProvider()\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CodeDomProvider()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.Compiler.CodeDomProvider\"></xref> class.\n  syntax:\n    content: protected CodeDomProvider ();\n    parameters: []\n  overload: System.CodeDom.Compiler.CodeDomProvider.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])\n  id: CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: CompileAssemblyFromDom(CompilerParameters,CodeCompileUnit[])\n  nameWithType: CodeDomProvider.CompileAssemblyFromDom(CompilerParameters,CodeCompileUnit[])\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(CompilerParameters,CodeCompileUnit[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Compiles an assembly based on the <xref href=\"System.CodeDom\"></xref> trees contained in the specified array of <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> objects, using the specified compiler settings.\n  remarks: >-\n    > [!NOTE]\n\n    >  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider. In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider. If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.\n  syntax:\n    content: public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom (System.CodeDom.Compiler.CompilerParameters options, System.CodeDom.CodeCompileUnit[] compilationUnits);\n    parameters:\n    - id: options\n      type: System.CodeDom.Compiler.CompilerParameters\n      description: A <xref href=\"System.CodeDom.Compiler.CompilerParameters\"></xref> object that indicates the settings for the compilation.\n    - id: compilationUnits\n      type: System.CodeDom.CodeCompileUnit[]\n      description: An array of type <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> that indicates the code to compile.\n    return:\n      type: System.CodeDom.Compiler.CompilerResults\n      description: A <xref href=\"System.CodeDom.Compiler.CompilerResults\"></xref> object that indicates the results of the compilation.\n  overload: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler*> method is overridden in a derived class.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])\n  id: CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: CompileAssemblyFromFile(CompilerParameters,String[])\n  nameWithType: CodeDomProvider.CompileAssemblyFromFile(CompilerParameters,String[])\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(CompilerParameters,String[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Compiles an assembly from the source code contained in the specified files, using the specified compiler settings.\n  remarks: >-\n    > [!NOTE]\n\n    >  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider. In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider. If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.\n  syntax:\n    content: public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile (System.CodeDom.Compiler.CompilerParameters options, string[] fileNames);\n    parameters:\n    - id: options\n      type: System.CodeDom.Compiler.CompilerParameters\n      description: A <xref href=\"System.CodeDom.Compiler.CompilerParameters\"></xref> object that indicates the settings for the compilation.\n    - id: fileNames\n      type: System.String[]\n      description: An array of the names of the files to compile.\n    return:\n      type: System.CodeDom.Compiler.CompilerResults\n      description: A <xref href=\"System.CodeDom.Compiler.CompilerResults\"></xref> object that indicates the results of compilation.\n  overload: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler*> method is overridden in a derived class.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])\n  id: CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: CompileAssemblyFromSource(CompilerParameters,String[])\n  nameWithType: CodeDomProvider.CompileAssemblyFromSource(CompilerParameters,String[])\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(CompilerParameters,String[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Compiles an assembly from the specified array of strings containing source code, using the specified compiler settings.\n  remarks: >-\n    > [!NOTE]\n\n    >  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider. In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider. If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.\n  syntax:\n    content: public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource (System.CodeDom.Compiler.CompilerParameters options, string[] sources);\n    parameters:\n    - id: options\n      type: System.CodeDom.Compiler.CompilerParameters\n      description: A <xref href=\"System.CodeDom.Compiler.CompilerParameters\"></xref> object that indicates the compiler settings for this compilation.\n    - id: sources\n      type: System.String[]\n      description: An array of source code strings to compile.\n    return:\n      type: System.CodeDom.Compiler.CompilerResults\n      description: A <xref href=\"System.CodeDom.Compiler.CompilerResults\"></xref> object that indicates the results of compilation.\n  overload: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler*> method is overridden in a derived class.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateCompiler\n  id: CreateCompiler\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: CreateCompiler()\n  nameWithType: CodeDomProvider.CreateCompiler()\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateCompiler()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: When overridden in a derived class, creates a new code compiler.\n  remarks: This method is obsolete in the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]. The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeCompiler> methods that are directly available in the code provider.\n  syntax:\n    content: public abstract System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();\n    parameters: []\n    return:\n      type: System.CodeDom.Compiler.ICodeCompiler\n      description: An <xref href=\"System.CodeDom.Compiler.ICodeCompiler\"></xref> that can be used for compilation of <xref href=\"System.CodeDom\"></xref> based source code representations.\n  overload: System.CodeDom.Compiler.CodeDomProvider.CreateCompiler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)\n  id: CreateEscapedIdentifier(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: CreateEscapedIdentifier(String)\n  nameWithType: CodeDomProvider.CreateEscapedIdentifier(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Creates an escaped identifier for the specified value.\n  remarks: \"CreateEscapedIdentifier tests whether the identifier conflicts with any reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting. This is referred to an escaped identifier. The escaped identifier contains the same `value` but has escape-code formatting added to differentiate the identifier from the keyword. Two implementation examples are preceding the `value` with \\\"@\\\" or bracketing the `value` with \\\"[\\\" and \\\"]\\\".  \\n  \\n> [!NOTE]\\n>  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider. In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider. If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.\"\n  syntax:\n    content: public virtual string CreateEscapedIdentifier (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The string for which to create an escaped identifier.\n    return:\n      type: System.String\n      description: The escaped identifier for the value.\n  overload: System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*> method is overridden in a derived class.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator\n  id: CreateGenerator\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: CreateGenerator()\n  nameWithType: CodeDomProvider.CreateGenerator()\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: When overridden in a derived class, creates a new code generator.\n  remarks: This method is obsolete in the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]. The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeGenerator> methods that are directly available in the <xref:System.CodeDom.Compiler.CodeDomProvider> class.\n  syntax:\n    content: public abstract System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();\n    parameters: []\n    return:\n      type: System.CodeDom.Compiler.ICodeGenerator\n      description: An <xref href=\"System.CodeDom.Compiler.ICodeGenerator\"></xref> that can be used to generate <xref href=\"System.CodeDom\"></xref> based source code representations.\n  overload: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)\n  id: CreateGenerator(System.IO.TextWriter)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: CreateGenerator(TextWriter)\n  nameWithType: CodeDomProvider.CreateGenerator(TextWriter)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(TextWriter)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: When overridden in a derived class, creates a new code generator using the specified <xref:System.IO.TextWriter> for output.\n  remarks: \"This method uses the specified <xref:System.IO.TextWriter> for output. This method supports more optimized code generation that incrementally updates the source code.  \\n  \\n> [!NOTE]\\n>  The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.\"\n  syntax:\n    content: public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (System.IO.TextWriter output);\n    parameters:\n    - id: output\n      type: System.IO.TextWriter\n      description: A <xref:System.IO.TextWriter> to use to output.\n    return:\n      type: System.CodeDom.Compiler.ICodeGenerator\n      description: An <xref href=\"System.CodeDom.Compiler.ICodeGenerator\"></xref> that can be used to generate <xref href=\"System.CodeDom\"></xref> based source code representations.\n  overload: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)\n  id: CreateGenerator(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: CreateGenerator(String)\n  nameWithType: CodeDomProvider.CreateGenerator(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: When overridden in a derived class, creates a new code generator using the specified file name for output.\n  remarks: \"This method uses the specified file name for output.  \\n  \\n> [!NOTE]\\n>  The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.\"\n  syntax:\n    content: public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (string fileName);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The file name to output to.\n    return:\n      type: System.CodeDom.Compiler.ICodeGenerator\n      description: An <xref href=\"System.CodeDom.Compiler.ICodeGenerator\"></xref> that can be used to generate <xref href=\"System.CodeDom\"></xref> based source code representations.\n  overload: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateParser\n  id: CreateParser\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: CreateParser()\n  nameWithType: CodeDomProvider.CreateParser()\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateParser()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: When overridden in a derived class, creates a new code parser.\n  syntax:\n    content: public virtual System.CodeDom.Compiler.ICodeParser CreateParser ();\n    parameters: []\n    return:\n      type: System.CodeDom.Compiler.ICodeParser\n      description: An <xref href=\"System.CodeDom.Compiler.ICodeParser\"></xref> that can be used to parse source code. The base implementation always returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.CodeDom.Compiler.CodeDomProvider.CreateParser*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)\n  id: CreateProvider(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: CreateProvider(String)\n  nameWithType: CodeDomProvider.CreateProvider(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateProvider(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Gets a <xref href=\"System.CodeDom.Compiler.CodeDomProvider\"></xref> instance for the specified language.\n  remarks: \"> [!NOTE]\\n>  This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers. CreateProvider allows you to specify at run time the code provider you wish to instantiate. If you know at design time which code provider is to be used, you should create an instance of that code provider rather than use the CreateProvider method.  \\n  \\n The CreateProvider method returns a <xref:System.CodeDom.Compiler.CodeDomProvider> instance for a specific language name; it is similar to calling the <xref:System.Activator.CreateInstance%2A?displayProperty=fullName> method with the language provider type. Use CreateProvider when you want to dynamically find a configured provider implementation for a language name.  \\n  \\n If more than one provider implementation is configured for the language name, CreateProvider returns a provider instance for the last matching configuration element.  \\n  \\n Use the [Activator.CreateInstance(Type, BindingFlags, Binder, Object\\\\[\\\\], CultureInfo)](assetId:///M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)?qualifyHint=True&autoUpgrade=False) method overload when you want a specific language provider implementation. For example, use the CreateProvider method to get a provider instance that supports the language name `\\\"CSharp\\\"`; use the [Activator.CreateInstance(Type, BindingFlags, Binder, Object\\\\[\\\\], CultureInfo)](assetId:///M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)?qualifyHint=True&autoUpgrade=False) method overload to get a provider instance specifically for the <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=fullName> implementation. You should use the [Activator.CreateInstance(Type, BindingFlags, Binder, Object\\\\[\\\\], CultureInfo, Object\\\\[\\\\])](assetId:///M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])?qualifyHint=True&autoUpgrade=False) method if you have multiple code providers for a language and you desire to instantiate a specific code provider.  \\n  \\n The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language. You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to CreateProvider. If you pass an unsupported language name to CreateProvider a <xref:System.Configuration.ConfigurationException?displayProperty=fullName> is thrown.  \\n  \\n The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method can be used to determine all <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer, including additional implementations provided by developers and compiler vendors that are identified in the [\\\\&lt;system.codedom\\\\&gt; Element](../Topic/%3Csystem.codedom%3E%20Element.md) in the machine configuration file (Machine.config).  \\n  \\n The CreateProvider method returns an instance of a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a specific language.  \\n  \\n Language names are case-insensitive.\"\n  example:\n  - \"The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \\n  \\n [!code-cpp[CodeDom_CompilerInfo#6](~/add/codesnippet/cpp/m-system.codedom.compile_8_1.cpp)]\\n [!code-vb[CodeDom_CompilerInfo#6](~/add/codesnippet/visualbasic/m-system.codedom.compile_8_1.vb)]\\n [!code-cs[CodeDom_CompilerInfo#6](~/add/codesnippet/csharp/m-system.codedom.compile_8_1.cs)]\"\n  syntax:\n    content: public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language);\n    parameters:\n    - id: language\n      type: System.String\n      description: The language name.\n    return:\n      type: System.CodeDom.Compiler.CodeDomProvider\n      description: A CodeDOM provider that is implemented for the specified language name.\n  overload: System.CodeDom.Compiler.CodeDomProvider.CreateProvider*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: The <code>language</code> does not have a configured provider on this computer.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>language</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})\n  id: CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: CreateProvider(String,IDictionary<String,String>)\n  nameWithType: CodeDomProvider.CreateProvider(String,IDictionary<String,String>)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateProvider(String,IDictionary<String,String>)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Gets a <xref href=\"System.CodeDom.Compiler.CodeDomProvider\"></xref> instance for the specified language and provider options.\n  remarks: \"> [!NOTE]\\n>  This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers. CreateProvider enables you to specify at run time the version of the code provider you want to instantiate. If you know at design time which code provider is to be used, you should create an instance of that code provider instead of using the CreateProvider method.  \\n  \\n Use CreateProvider when you want to dynamically find a configured provider implementation for a specific language and options. Language names are case-insensitive. For information about supported provider options, see the specific CodeDOM provider documentation.  \\n  \\n For information about validating a provider and calling a provider if more than one provider implementation is configured for the language name, see the Remarks section of the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> method.\"\n  example:\n  - \"The following example shows how to create an instance of a provider by using the `providerOptions` parameter.  \\n  \\n [!code-vb[CodeDomProvider.ProviderOptions#1](~/add/codesnippet/visualbasic/3796218a-f189-4563-bef3-_1.vb)]\\n [!code-cs[CodeDomProvider.ProviderOptions#1](~/add/codesnippet/csharp/3796218a-f189-4563-bef3-_1.cs)]\"\n  syntax:\n    content: public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language, System.Collections.Generic.IDictionary<string,string> providerOptions);\n    parameters:\n    - id: language\n      type: System.String\n      description: The language name.\n    - id: providerOptions\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: A collection of provider options from the configuration file.\n    return:\n      type: System.CodeDom.Compiler.CodeDomProvider\n      description: A CodeDOM provider that is implemented for the specified language name and options.\n  overload: System.CodeDom.Compiler.CodeDomProvider.CreateProvider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)\n  id: CreateValidIdentifier(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: CreateValidIdentifier(String)\n  nameWithType: CodeDomProvider.CreateValidIdentifier(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Creates a valid identifier for the specified value.\n  remarks: \"CreateValidIdentifier tests whether the identifier conflicts with reserved or language keywords, and if so, attempts to return a valid identifier name that does not conflict. Usually the returned identifier is only slightly modified to differentiate the identifier from the keyword; for example, the name might be preceded by the underscore (\\\"_\\\") character.  \\n  \\n> [!NOTE]\\n>  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider. In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider. If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.\"\n  syntax:\n    content: public virtual string CreateValidIdentifier (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The string for which to generate a valid identifier.\n    return:\n      type: System.String\n      description: A valid identifier for the specified value.\n  overload: System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*> method is overridden in a derived class.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.FileExtension\n  id: FileExtension\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: FileExtension\n  nameWithType: CodeDomProvider.FileExtension\n  fullName: System.CodeDom.Compiler.CodeDomProvider.FileExtension\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Gets the default file name extension to use for source code files in the current language.\n  remarks: This property is used by code generators and code compilers to indicate what file extensions should be generated or used.\n  example:\n  - \"The following code example creates an instance of <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName>. The example displays the provider name, hash code and default file name extension for the new provider instance.  \\n  \\n [!code-cpp[CodeDom_CompilerInfo#3](~/add/codesnippet/cpp/p-system.codedom.compile_10_1.cpp)]\\n [!code-vb[CodeDom_CompilerInfo#3](~/add/codesnippet/visualbasic/p-system.codedom.compile_10_1.vb)]\\n [!code-cs[CodeDom_CompilerInfo#3](~/add/codesnippet/csharp/p-system.codedom.compile_10_1.cs)]\"\n  syntax:\n    content: public virtual string FileExtension { get; }\n    return:\n      type: System.String\n      description: A file name extension corresponding to the extension of the source files of the current language. The base implementation always returns <xref:System.String>.\n  overload: System.CodeDom.Compiler.CodeDomProvider.FileExtension*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  id: GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)\n  nameWithType: CodeDomProvider.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and sends it to the specified text writer, using the specified options.\n  remarks: >-\n    > [!NOTE]\n\n    >  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider. In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider. If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.\n  example:\n  - \"The following code example shows the use of the GenerateCodeFromCompileUnit method to generate code for a \\\"Hello World\\\" application from a <xref:System.CodeDom.CodeCompileUnit>. This example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeDomProvider> class.  \\n  \\n [!code-cpp[CodeDomExample#3](~/add/codesnippet/cpp/947a7b52-7e8b-4165-86e9-_1.cpp)]\\n [!code-cs[CodeDomExample#3](~/add/codesnippet/csharp/947a7b52-7e8b-4165-86e9-_1.cs)]\\n [!code-vb[CodeDomExample#3](~/add/codesnippet/visualbasic/947a7b52-7e8b-4165-86e9-_1.vb)]\"\n  syntax:\n    content: public virtual void GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit compileUnit, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);\n    parameters:\n    - id: compileUnit\n      type: System.CodeDom.CodeCompileUnit\n      description: A <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> for which to generate code.\n    - id: writer\n      type: System.IO.TextWriter\n      description: The <xref:System.IO.TextWriter> to which the output code is sent.\n    - id: options\n      type: System.CodeDom.Compiler.CodeGeneratorOptions\n      description: A <xref href=\"System.CodeDom.Compiler.CodeGeneratorOptions\"></xref> that indicates the options to use for generating code.\n  overload: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*> method is overridden in a derived class.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  id: GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)\n  nameWithType: CodeDomProvider.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Generates code for the specified Code Document Object Model (CodeDOM) expression and sends it to the specified text writer, using the specified options.\n  remarks: >-\n    > [!NOTE]\n\n    >  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider. In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider. If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.\n  syntax:\n    content: public virtual void GenerateCodeFromExpression (System.CodeDom.CodeExpression expression, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);\n    parameters:\n    - id: expression\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> object that indicates the expression for which to generate code.\n    - id: writer\n      type: System.IO.TextWriter\n      description: The <xref:System.IO.TextWriter> to which output code is sent.\n    - id: options\n      type: System.CodeDom.Compiler.CodeGeneratorOptions\n      description: A <xref href=\"System.CodeDom.Compiler.CodeGeneratorOptions\"></xref> that indicates the options to use for generating code.\n  overload: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*> method is overridden in a derived class.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  id: GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)\n  nameWithType: CodeDomProvider.GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Generates code for the specified Code Document Object Model (CodeDOM) member declaration and sends it to the specified text writer, using the specified options.\n  remarks: The base class implementation throws a <xref:System.NotImplementedException>. See <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=fullName> for documentation describing an implementation of this method.\n  example:\n  - \"The following code example shows the use of the GenerateCodeFromMember method as implemented by the <xref:Microsoft.CSharp.CSharpCodeProvider> and <xref:Microsoft.VisualBasic.VBCodeProvider> classes.  \\n  \\n [!code-cs[CodeDom_GenerateCodeFromMember#1](~/add/codesnippet/csharp/7dd87db0-a6d3-462b-9277-_1.cs)]\\n [!code-vb[CodeDom_GenerateCodeFromMember#1](~/add/codesnippet/visualbasic/7dd87db0-a6d3-462b-9277-_1.vb)]\"\n  syntax:\n    content: public virtual void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);\n    parameters:\n    - id: member\n      type: System.CodeDom.CodeTypeMember\n      description: A <xref href=\"System.CodeDom.CodeTypeMember\"></xref> object that indicates the member for which to generate code.\n    - id: writer\n      type: System.IO.TextWriter\n      description: The <xref:System.IO.TextWriter> to which output code is sent.\n    - id: options\n      type: System.CodeDom.Compiler.CodeGeneratorOptions\n      description: A <xref href=\"System.CodeDom.Compiler.CodeGeneratorOptions\"></xref> that indicates the options to use for generating code.\n  overload: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: This method is not overridden in a derived class.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  id: GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)\n  nameWithType: CodeDomProvider.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Generates code for the specified Code Document Object Model (CodeDOM) namespace and sends it to the specified text writer, using the specified options.\n  remarks: >-\n    > [!NOTE]\n\n    >  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider. In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider. If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.\n  syntax:\n    content: public virtual void GenerateCodeFromNamespace (System.CodeDom.CodeNamespace codeNamespace, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);\n    parameters:\n    - id: codeNamespace\n      type: System.CodeDom.CodeNamespace\n      description: A <xref href=\"System.CodeDom.CodeNamespace\"></xref> object that indicates the namespace for which to generate code.\n    - id: writer\n      type: System.IO.TextWriter\n      description: The <xref:System.IO.TextWriter> to which output code is sent.\n    - id: options\n      type: System.CodeDom.Compiler.CodeGeneratorOptions\n      description: A <xref href=\"System.CodeDom.Compiler.CodeGeneratorOptions\"></xref> that indicates the options to use for generating code.\n  overload: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*> method is overridden in a derived class.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  id: GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)\n  nameWithType: CodeDomProvider.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Generates code for the specified Code Document Object Model (CodeDOM) statement and sends it to the specified text writer, using the specified options.\n  remarks: >-\n    > [!NOTE]\n\n    >  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider. In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider. If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.\n  syntax:\n    content: public virtual void GenerateCodeFromStatement (System.CodeDom.CodeStatement statement, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);\n    parameters:\n    - id: statement\n      type: System.CodeDom.CodeStatement\n      description: A <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the CodeDOM elements for which to generate code.\n    - id: writer\n      type: System.IO.TextWriter\n      description: The <xref:System.IO.TextWriter> to which output code is sent.\n    - id: options\n      type: System.CodeDom.Compiler.CodeGeneratorOptions\n      description: A <xref href=\"System.CodeDom.Compiler.CodeGeneratorOptions\"></xref> that indicates the options to use for generating code.\n  overload: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*> method is overridden in a derived class.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  id: GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)\n  nameWithType: CodeDomProvider.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Generates code for the specified Code Document Object Model (CodeDOM) type declaration and sends it to the specified text writer, using the specified options.\n  remarks: >-\n    > [!NOTE]\n\n    >  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider. In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider. If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.\n  syntax:\n    content: public virtual void GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration codeType, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);\n    parameters:\n    - id: codeType\n      type: System.CodeDom.CodeTypeDeclaration\n      description: A <xref href=\"System.CodeDom.CodeTypeDeclaration\"></xref> object that indicates the type for which to generate code.\n    - id: writer\n      type: System.IO.TextWriter\n      description: The <xref:System.IO.TextWriter> to which output code is sent.\n    - id: options\n      type: System.CodeDom.Compiler.CodeGeneratorOptions\n      description: A <xref href=\"System.CodeDom.Compiler.CodeGeneratorOptions\"></xref> that indicates the options to use for generating code.\n  overload: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*> method is overridden in a derived class.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo\n  id: GetAllCompilerInfo\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: GetAllCompilerInfo()\n  nameWithType: CodeDomProvider.GetAllCompilerInfo()\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Returns the language provider and compiler configuration settings for this computer.\n  remarks: \"Use the GetAllCompilerInfo method to enumerate the language provider settings on a computer.  \\n  \\n> [!NOTE]\\n>  In the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)], the default language providers supplied by the .NET Framework are not specified in the [\\\\&lt;system.codedom\\\\&gt; Element](../Topic/%3Csystem.codedom%3E%20Element.md) compiler configuration section and cannot be removed, so this method returns information about the default providers and any specified in the configuration file.\"\n  example:\n  - \"The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \\n  \\n [!code-cpp[CodeDom_CompilerInfo#8](~/add/codesnippet/cpp/m-system.codedom.compile_1_1.cpp)]\\n [!code-vb[CodeDom_CompilerInfo#8](~/add/codesnippet/visualbasic/m-system.codedom.compile_1_1.vb)]\\n [!code-cs[CodeDom_CompilerInfo#8](~/add/codesnippet/csharp/m-system.codedom.compile_1_1.cs)]\"\n  syntax:\n    content: public static System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo ();\n    parameters: []\n    return:\n      type: System.CodeDom.Compiler.CompilerInfo[]\n      description: An array of type <xref href=\"System.CodeDom.Compiler.CompilerInfo\"></xref> representing the settings of all configured <xref href=\"System.CodeDom.Compiler.CodeDomProvider\"></xref> implementations.\n  overload: System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)\n  id: GetCompilerInfo(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: GetCompilerInfo(String)\n  nameWithType: CodeDomProvider.GetCompilerInfo(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Returns the language provider and compiler configuration settings for the specified language.\n  remarks: \"The [\\\\&lt;system.codedom\\\\&gt; Element](../Topic/%3Csystem.codedom%3E%20Element.md) in the machine configuration file contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer. For information about machine configuration files, see the Machine Configuration Files section in [Configuring Apps](~/add/includes/ajax-current-ext-md.md). The GetCompilerInfo method searches each provider configuration element for the specified language name. The returned <xref:System.CodeDom.Compiler.CompilerInfo> instance contains the configured language provider and compiler settings.  \\n  \\n The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language. You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to GetCompilerInfo. This prevents throwing a <xref:System.Configuration.ConfigurationException?displayProperty=fullName> when you access the <xref:System.CodeDom.Compiler.CompilerInfo> instance for an unsupported language name.  \\n  \\n If more than one provider implementation is configured for the input language name, GetCompilerInfo returns the settings from the last matching provider configuration element.  \\n  \\n Language names are case-insensitive.\"\n  example:\n  - \"The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \\n  \\n [!code-cpp[CodeDom_CompilerInfo#6](~/add/codesnippet/cpp/m-system.codedom.compile_10_1.cpp)]\\n [!code-vb[CodeDom_CompilerInfo#6](~/add/codesnippet/visualbasic/m-system.codedom.compile_10_1.vb)]\\n [!code-cs[CodeDom_CompilerInfo#6](~/add/codesnippet/csharp/m-system.codedom.compile_10_1.cs)]\"\n  syntax:\n    content: public static System.CodeDom.Compiler.CompilerInfo GetCompilerInfo (string language);\n    parameters:\n    - id: language\n      type: System.String\n      description: A language name.\n    return:\n      type: System.CodeDom.Compiler.CompilerInfo\n      description: A <xref href=\"System.CodeDom.Compiler.CompilerInfo\"></xref> object populated with settings of the configured <xref href=\"System.CodeDom.Compiler.CodeDomProvider\"></xref> implementation.\n  overload: System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo*\n  exceptions:\n  - type: System.Configuration.ConfigurationException\n    commentId: T:System.Configuration.ConfigurationException\n    description: The <code>language</code> does not have a configured provider on this computer.\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: The <code>language</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)\n  id: GetConverter(System.Type)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: GetConverter(Type)\n  nameWithType: CodeDomProvider.GetConverter(Type)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GetConverter(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Gets a <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified data type.\n  remarks: A derived class can override this method to provide specific types of type converters for specific data types.\n  syntax:\n    content: public virtual System.ComponentModel.TypeConverter GetConverter (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of object to retrieve a type converter for.\n    return:\n      type: System.ComponentModel.TypeConverter\n      description: A <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified type, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if a <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified type cannot be found.\n  overload: System.CodeDom.Compiler.CodeDomProvider.GetConverter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)\n  id: GetLanguageFromExtension(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: GetLanguageFromExtension(String)\n  nameWithType: CodeDomProvider.GetLanguageFromExtension(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Returns a language name associated with the specified file name extension, as configured in the <xref href=\"System.CodeDom.Compiler.CodeDomProvider\"></xref> compiler configuration section.\n  remarks: \"The [\\\\&lt;system.codedom\\\\&gt; Element](../Topic/%3Csystem.codedom%3E%20Element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer. The GetLanguageFromExtension method searches each provider configuration element for the specified file name extension.  \\n  \\n The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> method checks whether at least one provider implementation supports a specific file name extension. You can validate a file name extension using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> before passing it to GetLanguageFromExtension. This prevents GetLanguageFromExtension from throwing a <xref:System.Configuration.ConfigurationException?displayProperty=fullName> for an unsupported file name extension.  \\n  \\n If a provider implementation supports the input file name extension, and there are multiple supported languages configured for that provider, then GetLanguageFromExtension returns the first language name for that provider. If more than one provider implementation is configured for the input file name extension, GetLanguageFromExtension returns the language name from the last matching provider configuration element.  \\n  \\n Language names and file name extensions are case-insensitive.\"\n  example:\n  - \"The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \\n  \\n [!code-cpp[CodeDom_CompilerInfo#5](~/add/codesnippet/cpp/8fa7bea7-627d-4e5f-82ae-_1.cpp)]\\n [!code-vb[CodeDom_CompilerInfo#5](~/add/codesnippet/visualbasic/8fa7bea7-627d-4e5f-82ae-_1.vb)]\\n [!code-cs[CodeDom_CompilerInfo#5](~/add/codesnippet/csharp/8fa7bea7-627d-4e5f-82ae-_1.cs)]\"\n  syntax:\n    content: public static string GetLanguageFromExtension (string extension);\n    parameters:\n    - id: extension\n      type: System.String\n      description: A file name extension.\n    return:\n      type: System.String\n      description: A language name associated with the file name extension, as configured in the <xref href=\"System.CodeDom.Compiler.CodeDomProvider\"></xref> compiler configuration settings.\n  overload: System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension*\n  exceptions:\n  - type: System.Configuration.ConfigurationException\n    commentId: T:System.Configuration.ConfigurationException\n    description: The <code>extension</code> does not have a configured language provider on this computer.\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: The <code>extension</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)\n  id: GetTypeOutput(System.CodeDom.CodeTypeReference)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: GetTypeOutput(CodeTypeReference)\n  nameWithType: CodeDomProvider.GetTypeOutput(CodeTypeReference)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(CodeTypeReference)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Gets the type indicated by the specified <xref href=\"System.CodeDom.CodeTypeReference\"></xref>.\n  remarks: >-\n    > [!NOTE]\n\n    >  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider. In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider. If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.\n  syntax:\n    content: public virtual string GetTypeOutput (System.CodeDom.CodeTypeReference type);\n    parameters:\n    - id: type\n      type: System.CodeDom.CodeTypeReference\n      description: A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type to return.\n    return:\n      type: System.String\n      description: A text representation of the specified type, formatted for the language in which code is generated by this code generator. In Visual Basic, for example, passing in a <xref href=\"System.CodeDom.CodeTypeReference\"></xref> for the <xref:System.Int32> type will return \"Integer\".\n  overload: System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*> method is overridden in a derived class.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)\n  id: IsDefinedExtension(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: IsDefinedExtension(String)\n  nameWithType: CodeDomProvider.IsDefinedExtension(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Tests whether a file name extension has an associated <xref href=\"System.CodeDom.Compiler.CodeDomProvider\"></xref> implementation configured on the computer.\n  remarks: \"The [\\\\&lt;system.codedom\\\\&gt; Element](../Topic/%3Csystem.codedom%3E%20Element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer. The IsDefinedExtension method searches the provider configuration elements for the specified file name extension.  \\n  \\n File name extensions are case-insensitive.\"\n  example:\n  - \"The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \\n  \\n [!code-cpp[CodeDom_CompilerInfo#5](~/add/codesnippet/cpp/m-system.codedom.compile_11_1.cpp)]\\n [!code-vb[CodeDom_CompilerInfo#5](~/add/codesnippet/visualbasic/m-system.codedom.compile_11_1.vb)]\\n [!code-cs[CodeDom_CompilerInfo#5](~/add/codesnippet/csharp/m-system.codedom.compile_11_1.cs)]\"\n  syntax:\n    content: public static bool IsDefinedExtension (string extension);\n    parameters:\n    - id: extension\n      type: System.String\n      description: A file name extension.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a <xref href=\"System.CodeDom.Compiler.CodeDomProvider\"></xref> implementation is configured for the specified file name extension; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>extension</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)\n  id: IsDefinedLanguage(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: IsDefinedLanguage(String)\n  nameWithType: CodeDomProvider.IsDefinedLanguage(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Tests whether a language has a <xref href=\"System.CodeDom.Compiler.CodeDomProvider\"></xref> implementation configured on the computer.\n  remarks: \"The [\\\\&lt;system.codedom\\\\&gt; Element](../Topic/%3Csystem.codedom%3E%20Element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer. The IsDefinedLanguage method searches the provider configuration elements for the specified language name.  \\n  \\n Language names are case-insensitive.\"\n  example:\n  - \"The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \\n  \\n [!code-cpp[CodeDom_CompilerInfo#6](~/add/codesnippet/cpp/m-system.codedom.compile_12_1.cpp)]\\n [!code-vb[CodeDom_CompilerInfo#6](~/add/codesnippet/visualbasic/m-system.codedom.compile_12_1.vb)]\\n [!code-cs[CodeDom_CompilerInfo#6](~/add/codesnippet/csharp/m-system.codedom.compile_12_1.cs)]\"\n  syntax:\n    content: public static bool IsDefinedLanguage (string language);\n    parameters:\n    - id: language\n      type: System.String\n      description: The language name.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a <xref href=\"System.CodeDom.Compiler.CodeDomProvider\"></xref> implementation is configured for the specified language; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>language</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)\n  id: IsValidIdentifier(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: IsValidIdentifier(String)\n  nameWithType: CodeDomProvider.IsValidIdentifier(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Returns a value that indicates whether the specified value is a valid identifier for the current language.\n  remarks: \"This method tests whether an identifier is valid. The IsValidIdentifier method is provider specific. Identifiers that are valid for one provider might not be valid for other providers. If `value` contains characters outside of the ASCII character range, check the identifier for all the languages that might be used to compile the code.  \\n  \\n> [!NOTE]\\n>  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider. In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider. If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.\"\n  syntax:\n    content: public virtual bool IsValidIdentifier (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The value to verify as a valid identifier.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>value</code> parameter is a valid identifier; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*> method is overridden in a derived class.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.LanguageOptions\n  id: LanguageOptions\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: LanguageOptions\n  nameWithType: CodeDomProvider.LanguageOptions\n  fullName: System.CodeDom.Compiler.CodeDomProvider.LanguageOptions\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Gets a language features identifier.\n  syntax:\n    content: public virtual System.CodeDom.Compiler.LanguageOptions LanguageOptions { get; }\n    return:\n      type: System.CodeDom.Compiler.LanguageOptions\n      description: A <xref href=\"System.CodeDom.Compiler.LanguageOptions\"></xref> that indicates special features of the language.\n  overload: System.CodeDom.Compiler.CodeDomProvider.LanguageOptions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)\n  id: Parse(System.IO.TextReader)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: Parse(TextReader)\n  nameWithType: CodeDomProvider.Parse(TextReader)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.Parse(TextReader)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Compiles the code read from the specified text stream into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>.\n  remarks: >-\n    > [!NOTE]\n\n    >  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeParser> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> method of the provider. In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider. If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeParser> implementation is called by the base class.\n  syntax:\n    content: public virtual System.CodeDom.CodeCompileUnit Parse (System.IO.TextReader codeStream);\n    parameters:\n    - id: codeStream\n      type: System.IO.TextReader\n      description: A <xref:System.IO.TextReader> object that is used to read the code to be parsed.\n    return:\n      type: System.CodeDom.CodeCompileUnit\n      description: A <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> that contains a representation of the parsed code.\n  overload: System.CodeDom.Compiler.CodeDomProvider.Parse*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*> method is overridden in a derived class.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)\n  id: Supports(System.CodeDom.Compiler.GeneratorSupport)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  langs:\n  - csharp\n  name: Supports(GeneratorSupport)\n  nameWithType: CodeDomProvider.Supports(GeneratorSupport)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.Supports(GeneratorSupport)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Returns a value indicating whether the specified code generation support is provided.\n  remarks: \"This method can be called with a number of <xref:System.CodeDom.Compiler.GeneratorSupport> flags at once to test for a set of capabilities by joining a set of appropriate capability flags together with a binary `OR` operator (&#124;).  \\n  \\n> [!NOTE]\\n>  In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider. In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider. If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.\"\n  syntax:\n    content: public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport generatorSupport);\n    parameters:\n    - id: generatorSupport\n      type: System.CodeDom.Compiler.GeneratorSupport\n      description: A <xref href=\"System.CodeDom.Compiler.GeneratorSupport\"></xref> object that indicates the type of code generation support to verify.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified code generation support is provided; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.CodeDom.Compiler.CodeDomProvider.Supports*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Neither this method nor the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*> method is overridden in a derived class.\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.Component\n  isExternal: false\n  name: System.ComponentModel.Component\n- uid: System.NotImplementedException\n  isExternal: true\n  name: System.NotImplementedException\n- uid: System.Configuration.ConfigurationErrorsException\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationErrorsException\n  nameWithType: ConfigurationErrorsException\n  fullName: System.Configuration.ConfigurationErrorsException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.Configuration.ConfigurationException\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationException\n  nameWithType: ConfigurationException\n  fullName: System.Configuration.ConfigurationException\n- uid: System.CodeDom.Compiler.CodeDomProvider.#ctor\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CodeDomProvider()\n  nameWithType: CodeDomProvider.CodeDomProvider()\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CodeDomProvider()\n- uid: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CompileAssemblyFromDom(CompilerParameters,CodeCompileUnit[])\n  nameWithType: CodeDomProvider.CompileAssemblyFromDom(CompilerParameters,CodeCompileUnit[])\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(CompilerParameters,CodeCompileUnit[])\n- uid: System.CodeDom.Compiler.CompilerResults\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: CompilerResults\n  nameWithType: CompilerResults\n  fullName: System.CodeDom.Compiler.CompilerResults\n- uid: System.CodeDom.Compiler.CompilerParameters\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: CompilerParameters\n  nameWithType: CompilerParameters\n  fullName: System.CodeDom.Compiler.CompilerParameters\n- uid: System.CodeDom.CodeCompileUnit[]\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeCompileUnit\n  nameWithType: CodeCompileUnit\n  fullName: System.CodeDom.CodeCompileUnit[]\n  spec.csharp:\n  - uid: System.CodeDom.CodeCompileUnit\n    name: CodeCompileUnit\n    nameWithType: CodeCompileUnit\n    fullName: CodeCompileUnit[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CompileAssemblyFromFile(CompilerParameters,String[])\n  nameWithType: CodeDomProvider.CompileAssemblyFromFile(CompilerParameters,String[])\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(CompilerParameters,String[])\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CompileAssemblyFromSource(CompilerParameters,String[])\n  nameWithType: CodeDomProvider.CompileAssemblyFromSource(CompilerParameters,String[])\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(CompilerParameters,String[])\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateCompiler\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateCompiler()\n  nameWithType: CodeDomProvider.CreateCompiler()\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateCompiler()\n- uid: System.CodeDom.Compiler.ICodeCompiler\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: ICodeCompiler\n  nameWithType: ICodeCompiler\n  fullName: System.CodeDom.Compiler.ICodeCompiler\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateEscapedIdentifier(String)\n  nameWithType: CodeDomProvider.CreateEscapedIdentifier(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateGenerator()\n  nameWithType: CodeDomProvider.CreateGenerator()\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator()\n- uid: System.CodeDom.Compiler.ICodeGenerator\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: ICodeGenerator\n  nameWithType: ICodeGenerator\n  fullName: System.CodeDom.Compiler.ICodeGenerator\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateGenerator(TextWriter)\n  nameWithType: CodeDomProvider.CreateGenerator(TextWriter)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(TextWriter)\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: true\n  name: TextWriter\n  nameWithType: TextWriter\n  fullName: System.IO.TextWriter\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateGenerator(String)\n  nameWithType: CodeDomProvider.CreateGenerator(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(String)\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateParser\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateParser()\n  nameWithType: CodeDomProvider.CreateParser()\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateParser()\n- uid: System.CodeDom.Compiler.ICodeParser\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: ICodeParser\n  nameWithType: ICodeParser\n  fullName: System.CodeDom.Compiler.ICodeParser\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateProvider(String)\n  nameWithType: CodeDomProvider.CreateProvider(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateProvider(String)\n- uid: System.CodeDom.Compiler.CodeDomProvider\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: CodeDomProvider\n  nameWithType: CodeDomProvider\n  fullName: System.CodeDom.Compiler.CodeDomProvider\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateProvider(String,IDictionary<String,String>)\n  nameWithType: CodeDomProvider.CreateProvider(String,IDictionary<String,String>)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateProvider(String,IDictionary<String,String>)\n- uid: System.Collections.Generic.IDictionary{System.String,System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<String,String>\n  nameWithType: IDictionary<String,String>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.String,System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateValidIdentifier(String)\n  nameWithType: CodeDomProvider.CreateValidIdentifier(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(String)\n- uid: System.CodeDom.Compiler.CodeDomProvider.FileExtension\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: FileExtension\n  nameWithType: CodeDomProvider.FileExtension\n  fullName: System.CodeDom.Compiler.CodeDomProvider.FileExtension\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)\n  nameWithType: CodeDomProvider.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)\n- uid: System.CodeDom.CodeCompileUnit\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeCompileUnit\n  nameWithType: CodeCompileUnit\n  fullName: System.CodeDom.CodeCompileUnit\n- uid: System.CodeDom.Compiler.CodeGeneratorOptions\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: CodeGeneratorOptions\n  nameWithType: CodeGeneratorOptions\n  fullName: System.CodeDom.Compiler.CodeGeneratorOptions\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)\n  nameWithType: CodeDomProvider.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)\n- uid: System.CodeDom.CodeExpression\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeExpression\n  nameWithType: CodeExpression\n  fullName: System.CodeDom.CodeExpression\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)\n  nameWithType: CodeDomProvider.GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)\n- uid: System.CodeDom.CodeTypeMember\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeMember\n  nameWithType: CodeTypeMember\n  fullName: System.CodeDom.CodeTypeMember\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)\n  nameWithType: CodeDomProvider.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)\n- uid: System.CodeDom.CodeNamespace\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeNamespace\n  nameWithType: CodeNamespace\n  fullName: System.CodeDom.CodeNamespace\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)\n  nameWithType: CodeDomProvider.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)\n- uid: System.CodeDom.CodeStatement\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeStatement\n  nameWithType: CodeStatement\n  fullName: System.CodeDom.CodeStatement\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)\n  nameWithType: CodeDomProvider.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)\n- uid: System.CodeDom.CodeTypeDeclaration\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeDeclaration\n  nameWithType: CodeTypeDeclaration\n  fullName: System.CodeDom.CodeTypeDeclaration\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GetAllCompilerInfo()\n  nameWithType: CodeDomProvider.GetAllCompilerInfo()\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo()\n- uid: System.CodeDom.Compiler.CompilerInfo[]\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: CompilerInfo\n  nameWithType: CompilerInfo\n  fullName: System.CodeDom.Compiler.CompilerInfo[]\n  spec.csharp:\n  - uid: System.CodeDom.Compiler.CompilerInfo\n    name: CompilerInfo\n    nameWithType: CompilerInfo\n    fullName: CompilerInfo[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GetCompilerInfo(String)\n  nameWithType: CodeDomProvider.GetCompilerInfo(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(String)\n- uid: System.CodeDom.Compiler.CompilerInfo\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: CompilerInfo\n  nameWithType: CompilerInfo\n  fullName: System.CodeDom.Compiler.CompilerInfo\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GetConverter(Type)\n  nameWithType: CodeDomProvider.GetConverter(Type)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GetConverter(Type)\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GetLanguageFromExtension(String)\n  nameWithType: CodeDomProvider.GetLanguageFromExtension(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(String)\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GetTypeOutput(CodeTypeReference)\n  nameWithType: CodeDomProvider.GetTypeOutput(CodeTypeReference)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(CodeTypeReference)\n- uid: System.CodeDom.CodeTypeReference\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeReference\n  nameWithType: CodeTypeReference\n  fullName: System.CodeDom.CodeTypeReference\n- uid: System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: IsDefinedExtension(String)\n  nameWithType: CodeDomProvider.IsDefinedExtension(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: IsDefinedLanguage(String)\n  nameWithType: CodeDomProvider.IsDefinedLanguage(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(String)\n- uid: System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: IsValidIdentifier(String)\n  nameWithType: CodeDomProvider.IsValidIdentifier(String)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(String)\n- uid: System.CodeDom.Compiler.CodeDomProvider.LanguageOptions\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: LanguageOptions\n  nameWithType: CodeDomProvider.LanguageOptions\n  fullName: System.CodeDom.Compiler.CodeDomProvider.LanguageOptions\n- uid: System.CodeDom.Compiler.LanguageOptions\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: LanguageOptions\n  nameWithType: LanguageOptions\n  fullName: System.CodeDom.Compiler.LanguageOptions\n- uid: System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: Parse(TextReader)\n  nameWithType: CodeDomProvider.Parse(TextReader)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.Parse(TextReader)\n- uid: System.IO.TextReader\n  parent: System.IO\n  isExternal: true\n  name: TextReader\n  nameWithType: TextReader\n  fullName: System.IO.TextReader\n- uid: System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: Supports(GeneratorSupport)\n  nameWithType: CodeDomProvider.Supports(GeneratorSupport)\n  fullName: System.CodeDom.Compiler.CodeDomProvider.Supports(GeneratorSupport)\n- uid: System.CodeDom.Compiler.GeneratorSupport\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: GeneratorSupport\n  nameWithType: GeneratorSupport\n  fullName: System.CodeDom.Compiler.GeneratorSupport\n- uid: System.CodeDom.Compiler.CodeDomProvider.#ctor*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CodeDomProvider\n  nameWithType: CodeDomProvider.CodeDomProvider\n- uid: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CompileAssemblyFromDom\n  nameWithType: CodeDomProvider.CompileAssemblyFromDom\n- uid: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CompileAssemblyFromFile\n  nameWithType: CodeDomProvider.CompileAssemblyFromFile\n- uid: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CompileAssemblyFromSource\n  nameWithType: CodeDomProvider.CompileAssemblyFromSource\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateCompiler*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateCompiler\n  nameWithType: CodeDomProvider.CreateCompiler\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateEscapedIdentifier\n  nameWithType: CodeDomProvider.CreateEscapedIdentifier\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateGenerator\n  nameWithType: CodeDomProvider.CreateGenerator\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateParser*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateParser\n  nameWithType: CodeDomProvider.CreateParser\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateProvider*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateProvider\n  nameWithType: CodeDomProvider.CreateProvider\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateValidIdentifier\n  nameWithType: CodeDomProvider.CreateValidIdentifier\n- uid: System.CodeDom.Compiler.CodeDomProvider.FileExtension*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: FileExtension\n  nameWithType: CodeDomProvider.FileExtension\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GenerateCodeFromCompileUnit\n  nameWithType: CodeDomProvider.GenerateCodeFromCompileUnit\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GenerateCodeFromExpression\n  nameWithType: CodeDomProvider.GenerateCodeFromExpression\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GenerateCodeFromMember\n  nameWithType: CodeDomProvider.GenerateCodeFromMember\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GenerateCodeFromNamespace\n  nameWithType: CodeDomProvider.GenerateCodeFromNamespace\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GenerateCodeFromStatement\n  nameWithType: CodeDomProvider.GenerateCodeFromStatement\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GenerateCodeFromType\n  nameWithType: CodeDomProvider.GenerateCodeFromType\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GetAllCompilerInfo\n  nameWithType: CodeDomProvider.GetAllCompilerInfo\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GetCompilerInfo\n  nameWithType: CodeDomProvider.GetCompilerInfo\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetConverter*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GetConverter\n  nameWithType: CodeDomProvider.GetConverter\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GetLanguageFromExtension\n  nameWithType: CodeDomProvider.GetLanguageFromExtension\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GetTypeOutput\n  nameWithType: CodeDomProvider.GetTypeOutput\n- uid: System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: IsDefinedExtension\n  nameWithType: CodeDomProvider.IsDefinedExtension\n- uid: System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: IsDefinedLanguage\n  nameWithType: CodeDomProvider.IsDefinedLanguage\n- uid: System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: IsValidIdentifier\n  nameWithType: CodeDomProvider.IsValidIdentifier\n- uid: System.CodeDom.Compiler.CodeDomProvider.LanguageOptions*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: LanguageOptions\n  nameWithType: CodeDomProvider.LanguageOptions\n- uid: System.CodeDom.Compiler.CodeDomProvider.Parse*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: Parse\n  nameWithType: CodeDomProvider.Parse\n- uid: System.CodeDom.Compiler.CodeDomProvider.Supports*\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: Supports\n  nameWithType: CodeDomProvider.Supports\n"}