{"nodes":[{"pos":[753,852],"content":"Contains information about a single instance of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Data.Binding\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Contains information about a single instance of a <xref href=\"System.Windows.Data.Binding\"></xref>."},{"pos":[865,2503],"content":"The <xref:System.Windows.Data.Binding> class is the high-level class for the declaration of a binding. The BindingExpression class is the underlying object that maintains the connection between the binding source and the binding target. A <xref:System.Windows.Data.Binding> contains all the information that can be shared across several BindingExpression objects. A BindingExpression is an instance expression that cannot be shared and that contains all the instance information about the <xref:System.Windows.Data.Binding>.       For example, consider the following, where `myDataObject` is an instance of the `MyData` class, `myBinding` is the source <xref:System.Windows.Data.Binding> object, and `MyData` class is a defined class that contains a string property named `MyDataProperty`. This example binds the text content of `mytext`, which is an instance of <xref:System.Windows.Controls.TextBlock>, to `MyDataProperty`.       [!code-cs[CodeOnlyBinding#1](~/add/codesnippet/csharp/CodeOnlyBinding/binding.cs#1)]  [!code-vb[CodeOnlyBinding#1](~/add/codesnippet/visualbasic/CodeOnlyBinding_VB/App.vb#1)]       You can use the same `myBinding` object to create other bindings. For example, you might use the `myBinding` object to bind the text content of a check box to `MyDataProperty`. In that scenario, there will be two instances of BindingExpression that share the `myBinding` object.       You can obtain a BindingExpression object by using the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method or the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound object.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Data.Binding&gt; class is the high-level class for the declaration of a binding.","pos":[0,102],"source":"The <xref:System.Windows.Data.Binding> class is the high-level class for the declaration of a binding."},{"content":"The BindingExpression class is the underlying object that maintains the connection between the binding source and the binding target.","pos":[103,236]},{"content":"A &lt;xref:System.Windows.Data.Binding&gt; contains all the information that can be shared across several BindingExpression objects.","pos":[237,363],"source":" A <xref:System.Windows.Data.Binding> contains all the information that can be shared across several BindingExpression objects."},{"content":"A BindingExpression is an instance expression that cannot be shared and that contains all the instance information about the &lt;xref:System.Windows.Data.Binding&gt;.","pos":[364,524],"source":" A BindingExpression is an instance expression that cannot be shared and that contains all the instance information about the <xref:System.Windows.Data.Binding>."},{"content":"For example, consider the following, where <ph id=\"ph1\">`myDataObject`</ph> is an instance of the <ph id=\"ph2\">`MyData`</ph> class, <ph id=\"ph3\">`myBinding`</ph> is the source &lt;xref:System.Windows.Data.Binding&gt; object, and <ph id=\"ph4\">`MyData`</ph> class is a defined class that contains a string property named <ph id=\"ph5\">`MyDataProperty`</ph>.","pos":[531,789],"source":"       For example, consider the following, where `myDataObject` is an instance of the `MyData` class, `myBinding` is the source <xref:System.Windows.Data.Binding> object, and `MyData` class is a defined class that contains a string property named `MyDataProperty`."},{"content":"This example binds the text content of <ph id=\"ph1\">`mytext`</ph>, which is an instance of &lt;xref:System.Windows.Controls.TextBlock&gt;, to <ph id=\"ph2\">`MyDataProperty`</ph>.","pos":[790,925],"source":" This example binds the text content of `mytext`, which is an instance of <xref:System.Windows.Controls.TextBlock>, to `MyDataProperty`."},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>CodeOnlyBinding#1<ept id=\"p2\">](~/add/codesnippet/csharp/CodeOnlyBinding/binding.cs#1)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>CodeOnlyBinding#1<ept id=\"p4\">](~/add/codesnippet/visualbasic/CodeOnlyBinding_VB/App.vb#1)</ept><ept id=\"p3\">]</ept>       You can use the same <ph id=\"ph1\">`myBinding`</ph> object to create other bindings.","pos":[932,1178],"source":"[!code-cs[CodeOnlyBinding#1](~/add/codesnippet/csharp/CodeOnlyBinding/binding.cs#1)]  [!code-vb[CodeOnlyBinding#1](~/add/codesnippet/visualbasic/CodeOnlyBinding_VB/App.vb#1)]       You can use the same `myBinding` object to create other bindings."},{"content":"For example, you might use the <ph id=\"ph1\">`myBinding`</ph> object to bind the text content of a check box to <ph id=\"ph2\">`MyDataProperty`</ph>.","pos":[1179,1289],"source":" For example, you might use the `myBinding` object to bind the text content of a check box to `MyDataProperty`."},{"content":"In that scenario, there will be two instances of BindingExpression that share the <ph id=\"ph1\">`myBinding`</ph> object.","pos":[1290,1391],"source":" In that scenario, there will be two instances of BindingExpression that share the `myBinding` object."},{"content":"You can obtain a BindingExpression object by using the &lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt; method or the &lt;xref:System.Windows.FrameworkElement.GetBindingExpression%2A&gt; method on a data-bound object.","pos":[1398,1629],"source":"       You can obtain a BindingExpression object by using the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method or the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound object."}]},{"pos":[3865,3970],"content":"Gets the binding source object that this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> uses.","needQuote":true,"needEscape":true,"source":"Gets the binding source object that this <xref href=\"System.Windows.Data.BindingExpression\"></xref> uses."},{"pos":[4911,5011],"content":"The binding source object that this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> uses.","needQuote":true,"needEscape":true,"source":"The binding source object that this <xref href=\"System.Windows.Data.BindingExpression\"></xref> uses."},{"pos":[5494,5636],"content":"Returns the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Data.Binding\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object of the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the <xref href=\"System.Windows.Data.Binding\"></xref> object of the current <xref href=\"System.Windows.Data.BindingExpression\"></xref>."},{"pos":[5789,5883],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Data.Binding\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object of the current binding expression.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Data.Binding\"></xref> object of the current binding expression."},{"pos":[6376,6475],"content":"Gets the binding source object for this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the binding source object for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>."},{"pos":[6594,6688],"content":"The binding source object for this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The binding source object for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>."},{"pos":[7242,7355],"content":"Gets the name of the binding source property for this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the name of the binding source property for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>."},{"pos":[7486,7594],"content":"The name of the binding source property for this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The name of the binding source property for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>."},{"pos":[8449,8613],"content":"This member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"source":"This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"pos":[8807,9024],"content":"The type of the <xref href=\"System.Windows.WeakEventManager\"></xref> calling this method. This only recognizes manager objects of type <xref href=\"System.Collections.Specialized.CollectionChangedEventManager\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.WeakEventManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> calling this method.","pos":[0,89],"source":"The type of the <xref href=\"System.Windows.WeakEventManager\"></xref> calling this method."},{"content":"This only recognizes manager objects of type <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.CollectionChangedEventManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[90,217],"source":" This only recognizes manager objects of type <xref href=\"System.Collections.Specialized.CollectionChangedEventManager\"></xref>."}]},{"pos":[9087,9120],"content":"Object that originated the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Object that originated the event.","pos":[0,33]}]},{"pos":[9181,9192],"content":"Event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Event data.","pos":[0,11]}]},{"pos":[9251,9421],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the listener handled the event; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the listener handled the event; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9945,10136],"content":"Sends the current binding target value to the binding source property in <bpt id=\"p1\">&lt;xref href=\"System.Windows.Data.BindingMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.Data.BindingMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> bindings.","needQuote":true,"needEscape":true,"source":"Sends the current binding target value to the binding source property in <xref href=\"System.Windows.Data.BindingMode\"></xref> or <xref href=\"System.Windows.Data.BindingMode\"></xref> bindings."},{"pos":[10149,10574],"content":"This method does nothing when the <xref:System.Windows.Data.Binding.Mode%2A> of the binding is not <xref:System.Windows.Data.BindingMode> or <xref:System.Windows.Data.BindingMode>.       If the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of your binding is set to <xref:System.Windows.Data.UpdateSourceTrigger>, you must call the UpdateSource method or the changes will not propagate back to the source.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method does nothing when the <xref:System.Windows.Data.Binding.Mode%2A> of the binding is not <xref:System.Windows.Data.BindingMode> or <xref:System.Windows.Data.BindingMode>.       If the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of your binding is set to <xref:System.Windows.Data.UpdateSourceTrigger>, you must call the UpdateSource method or the changes will not propagate back to the source.","pos":[0,423],"nodes":[{"content":"This method does nothing when the &lt;xref:System.Windows.Data.Binding.Mode%2A&gt; of the binding is not &lt;xref:System.Windows.Data.BindingMode&gt; or &lt;xref:System.Windows.Data.BindingMode&gt;.","pos":[0,180],"source":"This method does nothing when the <xref:System.Windows.Data.Binding.Mode%2A> of the binding is not <xref:System.Windows.Data.BindingMode> or <xref:System.Windows.Data.BindingMode>."},{"content":"If the &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt; value of your binding is set to &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;, you must call the UpdateSource method or the changes will not propagate back to the source.","pos":[187,423],"source":"       If the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of your binding is set to <xref:System.Windows.Data.UpdateSourceTrigger>, you must call the UpdateSource method or the changes will not propagate back to the source."}]}]},{"pos":[10844,10890],"content":"The binding has been detached from its target.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binding has been detached from its target.","pos":[0,46]}]},{"pos":[11295,11382],"content":"Forces a data transfer from the binding source property to the binding target property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Forces a data transfer from the binding source property to the binding target property.","pos":[0,87]}]},{"pos":[11394,11955],"content":"This method enables you to force a data transfer from the source property to the target property. If your source object implements a proper property-changed notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>, target updates happen automatically. However, you have the option to use this method to update the target property explicitly in cases where your source object does not provide the proper property-changed notifications. You can also use this method if your application needs to update the target properties periodically.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method enables you to force a data transfer from the source property to the target property. If your source object implements a proper property-changed notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>, target updates happen automatically. However, you have the option to use this method to update the target property explicitly in cases where your source object does not provide the proper property-changed notifications. You can also use this method if your application needs to update the target properties periodically.","pos":[0,561],"nodes":[{"content":"This method enables you to force a data transfer from the source property to the target property.","pos":[0,97]},{"content":"If your source object implements a proper property-changed notification mechanism such as &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;, target updates happen automatically.","pos":[98,277],"source":" If your source object implements a proper property-changed notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>, target updates happen automatically."},{"content":"However, you have the option to use this method to update the target property explicitly in cases where your source object does not provide the proper property-changed notifications.","pos":[278,460]},{"content":"You can also use this method if your application needs to update the target properties periodically.","pos":[461,561]}]}]},{"pos":[12224,12270],"content":"The binding has been detached from its target.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binding has been detached from its target.","pos":[0,46]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Data.BindingExpression\n  id: BindingExpression\n  children:\n  - System.Windows.Data.BindingExpression.DataItem\n  - System.Windows.Data.BindingExpression.ParentBinding\n  - System.Windows.Data.BindingExpression.ResolvedSource\n  - System.Windows.Data.BindingExpression.ResolvedSourcePropertyName\n  - System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)\n  - System.Windows.Data.BindingExpression.UpdateSource\n  - System.Windows.Data.BindingExpression.UpdateTarget\n  langs:\n  - csharp\n  name: BindingExpression\n  nameWithType: BindingExpression\n  fullName: System.Windows.Data.BindingExpression\n  type: Class\n  summary: Contains information about a single instance of a <xref href=\"System.Windows.Data.Binding\"></xref>.\n  remarks: \"The <xref:System.Windows.Data.Binding> class is the high-level class for the declaration of a binding. The BindingExpression class is the underlying object that maintains the connection between the binding source and the binding target. A <xref:System.Windows.Data.Binding> contains all the information that can be shared across several BindingExpression objects. A BindingExpression is an instance expression that cannot be shared and that contains all the instance information about the <xref:System.Windows.Data.Binding>.  \\n  \\n For example, consider the following, where `myDataObject` is an instance of the `MyData` class, `myBinding` is the source <xref:System.Windows.Data.Binding> object, and `MyData` class is a defined class that contains a string property named `MyDataProperty`. This example binds the text content of `mytext`, which is an instance of <xref:System.Windows.Controls.TextBlock>, to `MyDataProperty`.  \\n  \\n [!code-cs[CodeOnlyBinding#1](~/add/codesnippet/csharp/CodeOnlyBinding/binding.cs#1)]\\n [!code-vb[CodeOnlyBinding#1](~/add/codesnippet/visualbasic/CodeOnlyBinding_VB/App.vb#1)]  \\n  \\n You can use the same `myBinding` object to create other bindings. For example, you might use the `myBinding` object to bind the text content of a check box to `MyDataProperty`. In that scenario, there will be two instances of BindingExpression that share the `myBinding` object.  \\n  \\n You can obtain a BindingExpression object by using the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method or the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound object.\"\n  syntax:\n    content: 'public sealed class BindingExpression : System.Windows.Data.BindingExpressionBase, System.Windows.IWeakEventListener'\n  inheritance:\n  - System.Object\n  - System.Windows.Expression\n  - System.Windows.Data.BindingExpressionBase\n  implements:\n  - System.Windows.IWeakEventListener\n  inheritedMembers:\n  - System.Windows.Data.BindingExpressionBase.BindingGroup\n  - System.Windows.Data.BindingExpressionBase.HasError\n  - System.Windows.Data.BindingExpressionBase.HasValidationError\n  - System.Windows.Data.BindingExpressionBase.IsDirty\n  - System.Windows.Data.BindingExpressionBase.ParentBindingBase\n  - System.Windows.Data.BindingExpressionBase.Status\n  - System.Windows.Data.BindingExpressionBase.Target\n  - System.Windows.Data.BindingExpressionBase.TargetProperty\n  - System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate\n  - System.Windows.Data.BindingExpressionBase.ValidationError\n  - System.Windows.Data.BindingExpressionBase.ValidationErrors\n  platform:\n  - net462\n- uid: System.Windows.Data.BindingExpression.DataItem\n  id: DataItem\n  parent: System.Windows.Data.BindingExpression\n  langs:\n  - csharp\n  name: DataItem\n  nameWithType: BindingExpression.DataItem\n  fullName: System.Windows.Data.BindingExpression.DataItem\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets the binding source object that this <xref href=\"System.Windows.Data.BindingExpression\"></xref> uses.\n  remarks: ''\n  example:\n  - \"The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the DataItem property to access the binding source object.  \\n  \\n The <xref:System.Windows.Controls.TextBlock> `SavingsText` is the binding target object, and its <xref:System.Windows.Controls.TextBlock.Text%2A> property is the binding target property.  \\n  \\n [!code-cs[DirectionalBinding#OnRentRaise](~/add/codesnippet/csharp/DirectionalBinding/Page1.xaml.cs#onrentraise)]\\n [!code-vb[DirectionalBinding#OnRentRaise](~/add/codesnippet/visualbasic/DirectionalBinding_VB/DirectionalBinding.vb#onrentraise)]\"\n  syntax:\n    content: public object DataItem { get; }\n    return:\n      type: System.Object\n      description: The binding source object that this <xref href=\"System.Windows.Data.BindingExpression\"></xref> uses.\n  overload: System.Windows.Data.BindingExpression.DataItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Data.BindingExpression.ParentBinding\n  id: ParentBinding\n  parent: System.Windows.Data.BindingExpression\n  langs:\n  - csharp\n  name: ParentBinding\n  nameWithType: BindingExpression.ParentBinding\n  fullName: System.Windows.Data.BindingExpression.ParentBinding\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Returns the <xref href=\"System.Windows.Data.Binding\"></xref> object of the current <xref href=\"System.Windows.Data.BindingExpression\"></xref>.\n  syntax:\n    content: public System.Windows.Data.Binding ParentBinding { get; }\n    return:\n      type: System.Windows.Data.Binding\n      description: The <xref href=\"System.Windows.Data.Binding\"></xref> object of the current binding expression.\n  overload: System.Windows.Data.BindingExpression.ParentBinding*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Data.BindingExpression.ResolvedSource\n  id: ResolvedSource\n  parent: System.Windows.Data.BindingExpression\n  langs:\n  - csharp\n  name: ResolvedSource\n  nameWithType: BindingExpression.ResolvedSource\n  fullName: System.Windows.Data.BindingExpression.ResolvedSource\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets the binding source object for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>.\n  syntax:\n    content: public object ResolvedSource { get; }\n    return:\n      type: System.Object\n      description: The binding source object for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>.\n  overload: System.Windows.Data.BindingExpression.ResolvedSource*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName\n  id: ResolvedSourcePropertyName\n  parent: System.Windows.Data.BindingExpression\n  langs:\n  - csharp\n  name: ResolvedSourcePropertyName\n  nameWithType: BindingExpression.ResolvedSourcePropertyName\n  fullName: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets the name of the binding source property for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>.\n  syntax:\n    content: public string ResolvedSourcePropertyName { get; }\n    return:\n      type: System.String\n      description: The name of the binding source property for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>.\n  overload: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)\n  id: System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)\n  isEii: true\n  parent: System.Windows.Data.BindingExpression\n  langs:\n  - csharp\n  name: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)\n  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)\n  fullName: System.Windows.Data.BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);\n    parameters:\n    - id: managerType\n      type: System.Type\n      description: The type of the <xref href=\"System.Windows.WeakEventManager\"></xref> calling this method. This only recognizes manager objects of type <xref href=\"System.Collections.Specialized.CollectionChangedEventManager\"></xref>.\n    - id: sender\n      type: System.Object\n      description: Object that originated the event.\n    - id: e\n      type: System.EventArgs\n      description: Event data.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the listener handled the event; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Data.BindingExpression.UpdateSource\n  id: UpdateSource\n  parent: System.Windows.Data.BindingExpression\n  langs:\n  - csharp\n  name: UpdateSource()\n  nameWithType: BindingExpression.UpdateSource()\n  fullName: System.Windows.Data.BindingExpression.UpdateSource()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Sends the current binding target value to the binding source property in <xref href=\"System.Windows.Data.BindingMode\"></xref> or <xref href=\"System.Windows.Data.BindingMode\"></xref> bindings.\n  remarks: \"This method does nothing when the <xref:System.Windows.Data.Binding.Mode%2A> of the binding is not <xref:System.Windows.Data.BindingMode> or <xref:System.Windows.Data.BindingMode>.  \\n  \\n If the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of your binding is set to <xref:System.Windows.Data.UpdateSourceTrigger>, you must call the UpdateSource method or the changes will not propagate back to the source.\"\n  syntax:\n    content: public override void UpdateSource ();\n    parameters: []\n  overload: System.Windows.Data.BindingExpression.UpdateSource*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The binding has been detached from its target.\n  platform:\n  - net462\n- uid: System.Windows.Data.BindingExpression.UpdateTarget\n  id: UpdateTarget\n  parent: System.Windows.Data.BindingExpression\n  langs:\n  - csharp\n  name: UpdateTarget()\n  nameWithType: BindingExpression.UpdateTarget()\n  fullName: System.Windows.Data.BindingExpression.UpdateTarget()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Forces a data transfer from the binding source property to the binding target property.\n  remarks: This method enables you to force a data transfer from the source property to the target property. If your source object implements a proper property-changed notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>, target updates happen automatically. However, you have the option to use this method to update the target property explicitly in cases where your source object does not provide the proper property-changed notifications. You can also use this method if your application needs to update the target properties periodically.\n  syntax:\n    content: public override void UpdateTarget ();\n    parameters: []\n  overload: System.Windows.Data.BindingExpression.UpdateTarget*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The binding has been detached from its target.\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Data.BindingExpressionBase\n  isExternal: false\n  name: System.Windows.Data.BindingExpressionBase\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Windows.Data.BindingExpression.DataItem\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: DataItem\n  nameWithType: BindingExpression.DataItem\n  fullName: System.Windows.Data.BindingExpression.DataItem\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Data.BindingExpression.ParentBinding\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: ParentBinding\n  nameWithType: BindingExpression.ParentBinding\n  fullName: System.Windows.Data.BindingExpression.ParentBinding\n- uid: System.Windows.Data.Binding\n  parent: System.Windows.Data\n  isExternal: false\n  name: Binding\n  nameWithType: Binding\n  fullName: System.Windows.Data.Binding\n- uid: System.Windows.Data.BindingExpression.ResolvedSource\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: ResolvedSource\n  nameWithType: BindingExpression.ResolvedSource\n  fullName: System.Windows.Data.BindingExpression.ResolvedSource\n- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: ResolvedSourcePropertyName\n  nameWithType: BindingExpression.ResolvedSourcePropertyName\n  fullName: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)\n  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)\n  fullName: System.Windows.Data.BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Data.BindingExpression.UpdateSource\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: UpdateSource()\n  nameWithType: BindingExpression.UpdateSource()\n  fullName: System.Windows.Data.BindingExpression.UpdateSource()\n- uid: System.Windows.Data.BindingExpression.UpdateTarget\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: UpdateTarget()\n  nameWithType: BindingExpression.UpdateTarget()\n  fullName: System.Windows.Data.BindingExpression.UpdateTarget()\n- uid: System.Windows.Data.BindingExpression.DataItem*\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: DataItem\n  nameWithType: BindingExpression.DataItem\n- uid: System.Windows.Data.BindingExpression.ParentBinding*\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: ParentBinding\n  nameWithType: BindingExpression.ParentBinding\n- uid: System.Windows.Data.BindingExpression.ResolvedSource*\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: ResolvedSource\n  nameWithType: BindingExpression.ResolvedSource\n- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName*\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: ResolvedSourcePropertyName\n  nameWithType: BindingExpression.ResolvedSourcePropertyName\n- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent*\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: System.Windows.IWeakEventListener.ReceiveWeakEvent\n  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent\n- uid: System.Windows.Data.BindingExpression.UpdateSource*\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: UpdateSource\n  nameWithType: BindingExpression.UpdateSource\n- uid: System.Windows.Data.BindingExpression.UpdateTarget*\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: UpdateTarget\n  nameWithType: BindingExpression.UpdateTarget\n"}