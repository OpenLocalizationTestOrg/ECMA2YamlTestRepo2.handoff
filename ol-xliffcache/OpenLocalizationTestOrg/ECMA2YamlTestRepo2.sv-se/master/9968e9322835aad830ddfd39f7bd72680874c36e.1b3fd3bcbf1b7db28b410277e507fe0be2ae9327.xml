{"nodes":[{"pos":[853,897],"content":"Represents a variable within a symbol store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a variable within a symbol store.","pos":[0,44]}]},{"pos":[910,1222],"content":"The ISymbolVariable interface can be a parameter, a local variable, or a field.      > [!NOTE] >  This interface is the managed counterpart of the `ISymUnmanagedVariable` interface, which is one of the unmanaged symbol store interfaces that provide an alternate way to read and write debug symbol information.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ISymbolVariable interface can be a parameter, a local variable, or a field.","pos":[0,79]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This interface is the managed counterpart of the <ph id=\"ph2\">`ISymUnmanagedVariable`</ph> interface, which is one of the unmanaged symbol store interfaces that provide an alternate way to read and write debug symbol information.","pos":[85,309],"source":"      > [!NOTE] >  This interface is the managed counterpart of the `ISymUnmanagedVariable` interface, which is one of the unmanaged symbol store interfaces that provide an alternate way to read and write debug symbol information."}]},{"pos":[1791,1828],"content":"Gets the first address of a variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the first address of a variable.","pos":[0,37]}]},{"pos":[1840,1966],"content":"For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information about the use of this property, see the &lt;xref:System.Diagnostics.SymbolStore.SymAddressKind&gt; enumeration.","pos":[0,126],"source":"For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration."}]},{"pos":[2080,2114],"content":"The first address of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first address of the variable.","pos":[0,34]}]},{"pos":[2634,2672],"content":"Gets the second address of a variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the second address of a variable.","pos":[0,38]}]},{"pos":[2684,2810],"content":"For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information about the use of this property, see the &lt;xref:System.Diagnostics.SymbolStore.SymAddressKind&gt; enumeration.","pos":[0,126],"source":"For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration."}]},{"pos":[2924,2959],"content":"The second address of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second address of the variable.","pos":[0,35]}]},{"pos":[3479,3516],"content":"Gets the third address of a variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the third address of a variable.","pos":[0,37]}]},{"pos":[3528,3654],"content":"For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information about the use of this property, see the &lt;xref:System.Diagnostics.SymbolStore.SymAddressKind&gt; enumeration.","pos":[0,126],"source":"For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration."}]},{"pos":[3768,3802],"content":"The third address of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The third address of the variable.","pos":[0,34]}]},{"pos":[4312,4429],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymAddressKind\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value describing the type of the address.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Diagnostics.SymbolStore.SymAddressKind\"></xref> value describing the type of the address."},{"pos":[4616,4726],"content":"The type of the address. One of the <xref href=\"System.Diagnostics.SymbolStore.SymAddressKind\"></xref> values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the address.","pos":[0,24]},{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymAddressKind\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[25,110],"source":" One of the <xref href=\"System.Diagnostics.SymbolStore.SymAddressKind\"></xref> values."}]},{"pos":[5229,5265],"content":"Gets the attributes of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the attributes of the variable.","pos":[0,36]}]},{"pos":[5380,5404],"content":"The variable attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The variable attributes.","pos":[0,24]}]},{"pos":[5901,5968],"content":"Gets the end offset of a variable within the scope of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the end offset of a variable within the scope of the variable.","pos":[0,67]}]},{"pos":[5980,6026],"content":"This property only applies to local variables.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property only applies to local variables.","pos":[0,46]}]},{"pos":[6136,6167],"content":"The end offset of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The end offset of the variable.","pos":[0,31]}]},{"pos":[6682,6710],"content":"Gets the variable signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the variable signature.","pos":[0,28]}]},{"pos":[6841,6882],"content":"The variable signature as an opaque blob.","needQuote":true,"needEscape":true,"nodes":[{"content":"The variable signature as an opaque blob.","pos":[0,41]}]},{"pos":[7356,7386],"content":"Gets the name of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the variable.","pos":[0,30]}]},{"pos":[7495,7520],"content":"The name of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the variable.","pos":[0,25]}]},{"pos":[8021,8092],"content":"Gets the start offset of the variable within the scope of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the start offset of the variable within the scope of the variable.","pos":[0,71]}]},{"pos":[8104,8153],"content":"This property only applies to the local variable.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property only applies to the local variable.","pos":[0,49]}]},{"pos":[8265,8298],"content":"The start offset of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The start offset of the variable.","pos":[0,33]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable\n  id: ISymbolVariable\n  children:\n  - System.Diagnostics.SymbolStore.ISymbolVariable.AddressField1\n  - System.Diagnostics.SymbolStore.ISymbolVariable.AddressField2\n  - System.Diagnostics.SymbolStore.ISymbolVariable.AddressField3\n  - System.Diagnostics.SymbolStore.ISymbolVariable.AddressKind\n  - System.Diagnostics.SymbolStore.ISymbolVariable.Attributes\n  - System.Diagnostics.SymbolStore.ISymbolVariable.EndOffset\n  - System.Diagnostics.SymbolStore.ISymbolVariable.GetSignature\n  - System.Diagnostics.SymbolStore.ISymbolVariable.Name\n  - System.Diagnostics.SymbolStore.ISymbolVariable.StartOffset\n  langs:\n  - csharp\n  name: ISymbolVariable\n  nameWithType: ISymbolVariable\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable\n  type: Interface\n  summary: Represents a variable within a symbol store.\n  remarks: \"The ISymbolVariable interface can be a parameter, a local variable, or a field.  \\n  \\n> [!NOTE]\\n>  This interface is the managed counterpart of the `ISymUnmanagedVariable` interface, which is one of the unmanaged symbol store interfaces that provide an alternate way to read and write debug symbol information.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface ISymbolVariable\n  implements: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField1\n  id: AddressField1\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  langs:\n  - csharp\n  name: AddressField1\n  nameWithType: ISymbolVariable.AddressField1\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField1\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the first address of a variable.\n  remarks: For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration.\n  syntax:\n    content: public int AddressField1 { get; }\n    return:\n      type: System.Int32\n      description: The first address of the variable.\n  overload: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField1*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField2\n  id: AddressField2\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  langs:\n  - csharp\n  name: AddressField2\n  nameWithType: ISymbolVariable.AddressField2\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField2\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the second address of a variable.\n  remarks: For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration.\n  syntax:\n    content: public int AddressField2 { get; }\n    return:\n      type: System.Int32\n      description: The second address of the variable.\n  overload: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField2*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField3\n  id: AddressField3\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  langs:\n  - csharp\n  name: AddressField3\n  nameWithType: ISymbolVariable.AddressField3\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField3\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the third address of a variable.\n  remarks: For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration.\n  syntax:\n    content: public int AddressField3 { get; }\n    return:\n      type: System.Int32\n      description: The third address of the variable.\n  overload: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField3*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.AddressKind\n  id: AddressKind\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  langs:\n  - csharp\n  name: AddressKind\n  nameWithType: ISymbolVariable.AddressKind\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.AddressKind\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the <xref href=\"System.Diagnostics.SymbolStore.SymAddressKind\"></xref> value describing the type of the address.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.SymAddressKind AddressKind { get; }\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: The type of the address. One of the <xref href=\"System.Diagnostics.SymbolStore.SymAddressKind\"></xref> values.\n  overload: System.Diagnostics.SymbolStore.ISymbolVariable.AddressKind*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.Attributes\n  id: Attributes\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: ISymbolVariable.Attributes\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.Attributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the attributes of the variable.\n  syntax:\n    content: public object Attributes { get; }\n    return:\n      type: System.Object\n      description: The variable attributes.\n  overload: System.Diagnostics.SymbolStore.ISymbolVariable.Attributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.EndOffset\n  id: EndOffset\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  langs:\n  - csharp\n  name: EndOffset\n  nameWithType: ISymbolVariable.EndOffset\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.EndOffset\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the end offset of a variable within the scope of the variable.\n  remarks: This property only applies to local variables.\n  syntax:\n    content: public int EndOffset { get; }\n    return:\n      type: System.Int32\n      description: The end offset of the variable.\n  overload: System.Diagnostics.SymbolStore.ISymbolVariable.EndOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.GetSignature\n  id: GetSignature\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  langs:\n  - csharp\n  name: GetSignature()\n  nameWithType: ISymbolVariable.GetSignature()\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.GetSignature()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the variable signature.\n  syntax:\n    content: public byte[] GetSignature ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: The variable signature as an opaque blob.\n  overload: System.Diagnostics.SymbolStore.ISymbolVariable.GetSignature*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.Name\n  id: Name\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ISymbolVariable.Name\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the name of the variable.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The name of the variable.\n  overload: System.Diagnostics.SymbolStore.ISymbolVariable.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.StartOffset\n  id: StartOffset\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  langs:\n  - csharp\n  name: StartOffset\n  nameWithType: ISymbolVariable.StartOffset\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.StartOffset\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the start offset of the variable within the scope of the variable.\n  remarks: This property only applies to the local variable.\n  syntax:\n    content: public int StartOffset { get; }\n    return:\n      type: System.Int32\n      description: The start offset of the variable.\n  overload: System.Diagnostics.SymbolStore.ISymbolVariable.StartOffset*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField1\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: AddressField1\n  nameWithType: ISymbolVariable.AddressField1\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField1\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField2\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: AddressField2\n  nameWithType: ISymbolVariable.AddressField2\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField2\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField3\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: AddressField3\n  nameWithType: ISymbolVariable.AddressField3\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField3\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.AddressKind\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: AddressKind\n  nameWithType: ISymbolVariable.AddressKind\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.AddressKind\n- uid: System.Diagnostics.SymbolStore.SymAddressKind\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymAddressKind\n  nameWithType: SymAddressKind\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.Attributes\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: Attributes\n  nameWithType: ISymbolVariable.Attributes\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.Attributes\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.EndOffset\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: EndOffset\n  nameWithType: ISymbolVariable.EndOffset\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.EndOffset\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.GetSignature\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: GetSignature()\n  nameWithType: ISymbolVariable.GetSignature()\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.GetSignature()\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.Name\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: Name\n  nameWithType: ISymbolVariable.Name\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.StartOffset\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: StartOffset\n  nameWithType: ISymbolVariable.StartOffset\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable.StartOffset\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField1*\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: AddressField1\n  nameWithType: ISymbolVariable.AddressField1\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField2*\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: AddressField2\n  nameWithType: ISymbolVariable.AddressField2\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.AddressField3*\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: AddressField3\n  nameWithType: ISymbolVariable.AddressField3\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.AddressKind*\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: AddressKind\n  nameWithType: ISymbolVariable.AddressKind\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.Attributes*\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: Attributes\n  nameWithType: ISymbolVariable.Attributes\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.EndOffset*\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: EndOffset\n  nameWithType: ISymbolVariable.EndOffset\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.GetSignature*\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: GetSignature\n  nameWithType: ISymbolVariable.GetSignature\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.Name*\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: Name\n  nameWithType: ISymbolVariable.Name\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable.StartOffset*\n  parent: System.Diagnostics.SymbolStore.ISymbolVariable\n  isExternal: false\n  name: StartOffset\n  nameWithType: ISymbolVariable.StartOffset\n"}