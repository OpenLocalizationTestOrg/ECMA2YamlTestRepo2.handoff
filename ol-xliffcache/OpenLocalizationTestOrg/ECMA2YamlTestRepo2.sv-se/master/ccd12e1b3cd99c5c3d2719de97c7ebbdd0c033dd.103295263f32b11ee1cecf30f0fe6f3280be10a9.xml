{"nodes":[{"pos":[1829,1872],"content":"Represents a collection of temporary files.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a collection of temporary files.","pos":[0,43]}]},{"pos":[1885,4738],"content":"TempFileCollection can be used to generate unique file names and to keep track of a list of files. This can be useful to <xref:System.CodeDom.Compiler.ICodeCompiler> implementers when managing a list of compiler-generated intermediate files, which are sometimes deleted after use.       To specify a directory to generate unique temporary file names in, use an appropriately overloaded constructor. You can also use a constructor overload to indicate whether files added to the collection should, if not specified otherwise when using the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> or <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> methods, be deleted when the collection is disposed or the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called.       A file in any directory can be added to an instance of TempFileCollection using the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> method.       To generate a unique name for a temporary file of a particular file extension, call <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> and specifiy the extension of the file name to generate. The <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method will return a string consisting of a full path to a file name of the specified extension in the directory specified by the <xref:System.CodeDom.Compiler.TempFileCollection.TempDir%2A> property. The <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method will only return one unique file name per file name extension.       Both the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> and <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> methods have overloads that allow you to specify whether the files should be deleted when the collection is disposed or the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called.       The <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method will delete all the files in the collection except those that are marked to be kept.       The <xref:System.CodeDom.Compiler.TempFileCollection.BasePath%2A> property indicates a full path to the base file name, without a file name extension, used to generate the file names returned by the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method.      > [!NOTE] >  This class contains a link demand and an inheritance demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission. For details about security demands, see [Link Demands](~/add/includes/ajax-current-ext-md.md) and [Inheritance Demands](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"TempFileCollection can be used to generate unique file names and to keep track of a list of files.","pos":[0,98]},{"content":"This can be useful to &lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt; implementers when managing a list of compiler-generated intermediate files, which are sometimes deleted after use.","pos":[99,280],"source":" This can be useful to <xref:System.CodeDom.Compiler.ICodeCompiler> implementers when managing a list of compiler-generated intermediate files, which are sometimes deleted after use."},{"content":"To specify a directory to generate unique temporary file names in, use an appropriately overloaded constructor.","pos":[287,398]},{"content":"You can also use a constructor overload to indicate whether files added to the collection should, if not specified otherwise when using the &lt;xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A&gt; or &lt;xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A&gt; methods, be deleted when the collection is disposed or the &lt;xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A&gt; method is called.","pos":[399,805],"source":" You can also use a constructor overload to indicate whether files added to the collection should, if not specified otherwise when using the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> or <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> methods, be deleted when the collection is disposed or the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called."},{"content":"A file in any directory can be added to an instance of TempFileCollection using the &lt;xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A&gt; method.","pos":[812,964],"source":"       A file in any directory can be added to an instance of TempFileCollection using the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> method."},{"content":"To generate a unique name for a temporary file of a particular file extension, call &lt;xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A&gt; and specifiy the extension of the file name to generate.","pos":[971,1177],"source":"       To generate a unique name for a temporary file of a particular file extension, call <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> and specifiy the extension of the file name to generate."},{"content":"The &lt;xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A&gt; method will return a string consisting of a full path to a file name of the specified extension in the directory specified by the &lt;xref:System.CodeDom.Compiler.TempFileCollection.TempDir%2A&gt; property.","pos":[1178,1448],"source":" The <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method will return a string consisting of a full path to a file name of the specified extension in the directory specified by the <xref:System.CodeDom.Compiler.TempFileCollection.TempDir%2A> property."},{"content":"The &lt;xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A&gt; method will only return one unique file name per file name extension.","pos":[1449,1588],"source":" The <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method will only return one unique file name per file name extension."},{"content":"Both the &lt;xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A&gt; and &lt;xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A&gt; methods have overloads that allow you to specify whether the files should be deleted when the collection is disposed or the &lt;xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A&gt; method is called.","pos":[1595,1936],"source":"       Both the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> and <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> methods have overloads that allow you to specify whether the files should be deleted when the collection is disposed or the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called."},{"content":"The &lt;xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A&gt; method will delete all the files in the collection except those that are marked to be kept.","pos":[1943,2098],"source":"       The <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method will delete all the files in the collection except those that are marked to be kept."},{"content":"The &lt;xref:System.CodeDom.Compiler.TempFileCollection.BasePath%2A&gt; property indicates a full path to the base file name, without a file name extension, used to generate the file names returned by the &lt;xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A&gt; method.","pos":[2105,2377],"source":"       The <xref:System.CodeDom.Compiler.TempFileCollection.BasePath%2A> property indicates a full path to the base file name, without a file name extension, used to generate the file names returned by the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This class contains a link demand and an inheritance demand at the class level that applies to all members.","pos":[2383,2503],"source":"      > [!NOTE] >  This class contains a link demand and an inheritance demand at the class level that applies to all members."},{"content":"A &lt;xref:System.Security.SecurityException&gt; is thrown when either the immediate caller or the derived class does not have full-trust permission.","pos":[2504,2647],"source":" A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission."},{"content":"For details about security demands, see <bpt id=\"p1\">[</bpt>Link Demands<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>Inheritance Demands<ept id=\"p2\">](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.","pos":[2648,2838],"source":" For details about security demands, see [Link Demands](~/add/includes/ajax-current-ext-md.md) and [Inheritance Demands](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."}]},{"pos":[5869,5993],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.TempFileCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with default values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> class with default values."},{"pos":[6005,6264],"content":"This is a default constructor that initializes the collection with default settings. By default, this temporary files collection will store the files in a default temporary directory and will delete the temporary files after they have been generated and used.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This is a default constructor that initializes the collection with default settings. By default, this temporary files collection will store the files in a default temporary directory and will delete the temporary files after they have been generated and used.","pos":[0,259],"nodes":[{"content":"This is a default constructor that initializes the collection with default settings.","pos":[0,84]},{"content":"By default, this temporary files collection will store the files in a default temporary directory and will delete the temporary files after they have been generated and used.","pos":[85,259]}]}]},{"pos":[6884,7113],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.TempFileCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified temporary directory that is set to delete the temporary files after their generation and use, by default.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> class using the specified temporary directory that is set to delete the temporary files after their generation and use, by default."},{"pos":[7260,7333],"content":"A path to the temporary directory to use for storing the temporary files.","needQuote":true,"needEscape":true,"nodes":[{"content":"A path to the temporary directory to use for storing the temporary files.","pos":[0,73]}]},{"pos":[7935,8199],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.TempFileCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified temporary directory and specified value indicating whether to keep or delete the temporary files after their generation and use, by default.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> class using the specified temporary directory and specified value indicating whether to keep or delete the temporary files after their generation and use, by default."},{"pos":[8211,9309],"content":"The value of `keepFiles` is used to set the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> parameter. The temporary files in the collection are retained or deleted upon the completion of compiler activity based on the value of the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property in the collection. As each file is added to the collection, the current value of <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> is associated with it, unless it is added with a method that has a `keepFile` parameter, in which case that value is used for that specific file. When the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called, if <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> is `true`, all files are deleted, including those added with a <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> value of `true`. This allows specific files, those identified as being keep files, to be temporarily retained after compilation for purposes such as error reporting, then deleted when they are no longer needed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of <ph id=\"ph1\">`keepFiles`</ph> is used to set the &lt;xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt; parameter.","pos":[0,117],"source":"The value of `keepFiles` is used to set the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> parameter."},{"content":"The temporary files in the collection are retained or deleted upon the completion of compiler activity based on the value of the &lt;xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt; property in the collection.","pos":[118,337],"source":" The temporary files in the collection are retained or deleted upon the completion of compiler activity based on the value of the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property in the collection."},{"content":"As each file is added to the collection, the current value of &lt;xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt; is associated with it, unless it is added with a method that has a <ph id=\"ph1\">`keepFile`</ph> parameter, in which case that value is used for that specific file.","pos":[338,608],"source":" As each file is added to the collection, the current value of <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> is associated with it, unless it is added with a method that has a `keepFile` parameter, in which case that value is used for that specific file."},{"content":"When the &lt;xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A&gt; method is called, if &lt;xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt; is <ph id=\"ph1\">`true`</ph>, all files are deleted, including those added with a &lt;xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt; value of <ph id=\"ph2\">`true`</ph>.","pos":[609,904],"source":" When the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called, if <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> is `true`, all files are deleted, including those added with a <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> value of `true`."},{"content":"This allows specific files, those identified as being keep files, to be temporarily retained after compilation for purposes such as error reporting, then deleted when they are no longer needed.","pos":[905,1098]}]},{"pos":[9472,9545],"content":"A path to the temporary directory to use for storing the temporary files.","needQuote":true,"needEscape":true,"nodes":[{"content":"A path to the temporary directory to use for storing the temporary files.","pos":[0,73]}]},{"pos":[9612,9826],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the temporary files should be kept after use; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the temporary files should be deleted.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the temporary files should be kept after use; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the temporary files should be deleted."},{"pos":[10363,10437],"content":"Adds a file name with the specified file name extension to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a file name with the specified file name extension to the collection.","pos":[0,74]}]},{"pos":[10450,10778],"content":"This method returns a file name with the specified extension that has been added to the temporary files collection. Other code must still create the file before it can be used.       This method can be called only once for each file name extension, because it will return the same name if it is called with the same extension.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method returns a file name with the specified extension that has been added to the temporary files collection. Other code must still create the file before it can be used.       This method can be called only once for each file name extension, because it will return the same name if it is called with the same extension.","pos":[0,326],"nodes":[{"content":"This method returns a file name with the specified extension that has been added to the temporary files collection.","pos":[0,115]},{"content":"Other code must still create the file before it can be used.","pos":[116,176]},{"content":"This method can be called only once for each file name extension, because it will return the same name if it is called with the same extension.","pos":[183,326]}]}]},{"pos":[10939,11031],"content":"The file name extension for the auto-generated temporary file name to add to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file name extension for the auto-generated temporary file name to add to the collection.","pos":[0,92]}]},{"pos":[11089,11168],"content":"A file name with the specified extension that was just added to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A file name with the specified extension that was just added to the collection.","pos":[0,79]}]},{"pos":[11766,11925],"content":"Adds a file name with the specified file name extension to the collection, using the specified value indicating whether the file should be deleted or retained.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a file name with the specified file name extension to the collection, using the specified value indicating whether the file should be deleted or retained.","pos":[0,159]}]},{"pos":[11938,12266],"content":"This method returns a file name with the specified extension that has been added to the temporary files collection. Other code must still create the file before it can be used.       This method can be called only once for each file name extension, because it will return the same name if it is called with the same extension.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method returns a file name with the specified extension that has been added to the temporary files collection. Other code must still create the file before it can be used.       This method can be called only once for each file name extension, because it will return the same name if it is called with the same extension.","pos":[0,326],"nodes":[{"content":"This method returns a file name with the specified extension that has been added to the temporary files collection.","pos":[0,115]},{"content":"Other code must still create the file before it can be used.","pos":[116,176]},{"content":"This method can be called only once for each file name extension, because it will return the same name if it is called with the same extension.","pos":[183,326]}]}]},{"pos":[12442,12534],"content":"The file name extension for the auto-generated temporary file name to add to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file name extension for the auto-generated temporary file name to add to the collection.","pos":[0,92]}]},{"pos":[12600,12792],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the file should be kept after use; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the file should be deleted.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the file should be kept after use; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the file should be deleted."},{"pos":[12850,12929],"content":"A file name with the specified extension that was just added to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A file name with the specified extension that was just added to the collection.","pos":[0,79]}]},{"pos":[13107,13217],"content":"<ph id=\"ph1\">&lt;code&gt;fileExtension&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","needQuote":true,"needEscape":true,"source":"<code>fileExtension</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string."},{"pos":[13704,13929],"content":"Adds the specified file to the collection, using the specified value indicating whether to keep the file after the collection is disposed or when the <xref:System.CodeDom.Compiler.TempFileCollection.Delete*> method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified file to the collection, using the specified value indicating whether to keep the file after the collection is disposed or when the &lt;xref:System.CodeDom.Compiler.TempFileCollection.Delete*&gt; method is called.","pos":[0,225],"source":"Adds the specified file to the collection, using the specified value indicating whether to keep the file after the collection is disposed or when the <xref:System.CodeDom.Compiler.TempFileCollection.Delete*> method is called."}]},{"pos":[14589,14635],"content":"The name of the file to add to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the file to add to the collection.","pos":[0,46]}]},{"pos":[14701,14893],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the file should be kept after use; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the file should be deleted.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the file should be kept after use; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the file should be deleted."},{"pos":[15067,15237],"content":"<code>fileName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string.       -or-       <code>fileName</code> is a duplicate.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;fileName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","pos":[0,105],"source":"<code>fileName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;fileName&lt;/code&gt;</ph> is a duplicate.","pos":[112,160],"source":"       -or-       <code>fileName</code> is a duplicate."}]},{"pos":[15624,15795],"content":"Gets the full path to the base file name, without a file name extension, on the temporary directory path, that is used to generate temporary file names for the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the full path to the base file name, without a file name extension, on the temporary directory path, that is used to generate temporary file names for the collection.","pos":[0,171]}]},{"pos":[15908,16074],"content":"The full path to the base file name, without a file name extension, on the temporary directory path, that is used to generate temporary file names for the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The full path to the base file name, without a file name extension, on the temporary directory path, that is used to generate temporary file names for the collection.","pos":[0,166]}]},{"pos":[16266,16587],"content":"If the BasePath property has not been set or is set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, and <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.FileIOPermissionAccess\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is not granted for the temporary directory indicated by the &lt;xref:System.CodeDom.Compiler.TempFileCollection.TempDir*&gt; property.","needQuote":true,"needEscape":true,"source":"If the BasePath property has not been set or is set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, and <xref href=\"System.Security.Permissions.FileIOPermissionAccess\"></xref> is not granted for the temporary directory indicated by the <xref:System.CodeDom.Compiler.TempFileCollection.TempDir*> property."},{"pos":[17069,17164],"content":"Copies the members of the collection to the specified string, beginning at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the members of the collection to the specified string, beginning at the specified index.","pos":[0,95]}]},{"pos":[17323,17355],"content":"The array of strings to copy to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The array of strings to copy to.","pos":[0,32]}]},{"pos":[17416,17459],"content":"The index of the array to begin copying to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the array to begin copying to.","pos":[0,43]}]},{"pos":[17910,17953],"content":"Gets the number of files in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of files in the collection.","pos":[0,43]}]},{"pos":[18059,18097],"content":"The number of files in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of files in the collection.","pos":[0,38]}]},{"pos":[18556,18639],"content":"Deletes the temporary files within this collection that were not marked to be kept.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes the temporary files within this collection that were not marked to be kept.","pos":[0,83]}]},{"pos":[18651,19206],"content":"The Delete method examines each file in the collection to determine, on an individual basis, whether the file is to be kept or deleted. Files can be explicitly marked to be kept when added to the collection using add methods that take a `keepFile` parameter. When adding a file to the collection using the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> overload that does not have a `keepFile` parameter the value of the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property is used as the default keep file indicator.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Delete method examines each file in the collection to determine, on an individual basis, whether the file is to be kept or deleted.","pos":[0,135]},{"content":"Files can be explicitly marked to be kept when added to the collection using add methods that take a <ph id=\"ph1\">`keepFile`</ph> parameter.","pos":[136,258],"source":" Files can be explicitly marked to be kept when added to the collection using add methods that take a `keepFile` parameter."},{"content":"When adding a file to the collection using the &lt;xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A&gt; overload that does not have a <ph id=\"ph1\">`keepFile`</ph> parameter the value of the &lt;xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt; property is used as the default keep file indicator.","pos":[259,555],"source":" When adding a file to the collection using the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> overload that does not have a `keepFile` parameter the value of the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property is used as the default keep file indicator."}]},{"pos":[19789,19944],"content":"Releases the unmanaged resources used by the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.TempFileCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally releases the managed resources.","needQuote":true,"needEscape":true,"source":"Releases the unmanaged resources used by the <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> and optionally releases the managed resources."},{"pos":[19957,20505],"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.       When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.CodeDom.Compiler.TempFileCollection> references. This method invokes the `Dispose()` method of each referenced object.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the &lt;xref:System.Object.Finalize%2A&gt; method.","pos":[0,103],"source":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[104,209],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id=\"ph1\">`Dispose`</ph> with <ph id=\"ph2\">`disposing`</ph> set to <ph id=\"ph3\">`false`</ph>.","pos":[210,293],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."},{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.CodeDom.Compiler.TempFileCollection&gt; references.","pos":[300,476],"source":"       When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.CodeDom.Compiler.TempFileCollection> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[477,546],"source":" This method invokes the `Dispose()` method of each referenced object."}]},{"pos":[20661,20870],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources."},{"pos":[21341,21434],"content":"Attempts to delete the temporary files before this object is reclaimed by garbage collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to delete the temporary files before this object is reclaimed by garbage collection.","pos":[0,93]}]},{"pos":[21447,22241],"content":"This method overrides <xref:System.Object.Finalize%2A?displayProperty=fullName> and cleans up resources by calling `Dispose(false)`. Override `Dispose(Boolean)` to customize the cleanup.       Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName> method.       For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method overrides &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt; and cleans up resources by calling <ph id=\"ph1\">`Dispose(false)`</ph>.","pos":[0,132],"source":"This method overrides <xref:System.Object.Finalize%2A?displayProperty=fullName> and cleans up resources by calling `Dispose(false)`."},{"content":"Override <ph id=\"ph1\">`Dispose(Boolean)`</ph> to customize the cleanup.","pos":[133,186],"source":" Override `Dispose(Boolean)` to customize the cleanup."},{"content":"Application code should not call this method; an object's <ph id=\"ph1\">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the &lt;xref:System.GC.SuppressFinalize%2A?displayProperty=fullName&gt; method.","pos":[193,470],"source":"       Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName> method."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Finalize Methods and Destructors<ept id=\"p1\">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id=\"p2\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>, and <bpt id=\"p3\">[</bpt>Overriding the Finalize Method<ept id=\"p3\">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.","pos":[477,790],"source":"       For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."}]},{"pos":[22805,22873],"content":"Gets an enumerator that can enumerate the members of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an enumerator that can enumerate the members of the collection.","pos":[0,68]}]},{"pos":[23046,23126],"content":"An <xref:System.Collections.IEnumerator> that contains the collection's members.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerator&gt; that contains the collection's members.","pos":[0,80],"source":"An <xref:System.Collections.IEnumerator> that contains the collection's members."}]},{"pos":[23604,23789],"content":"Gets or sets a value indicating whether to keep the files, by default, when the <xref:System.CodeDom.Compiler.TempFileCollection.Delete*> method is called or the collection is disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether to keep the files, by default, when the &lt;xref:System.CodeDom.Compiler.TempFileCollection.Delete*&gt; method is called or the collection is disposed.","pos":[0,185],"source":"Gets or sets a value indicating whether to keep the files, by default, when the <xref:System.CodeDom.Compiler.TempFileCollection.Delete*> method is called or the collection is disposed."}]},{"pos":[23801,24548],"content":"The value of the KeepFiles property is used as the default value when the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> overload that does not have a `keepFile` parameter is called to add a temporary file to the collection. Each temporary file in the collection has an associated keep file flag that determines, on a per-file basis, whether that file is to be kept or deleted. Files are automatically kept or deleted on completion of the compilation based on their associated keep files value. However, after compilation is complete, files that were kept can be released by setting KeepFiles false and calling the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method.  This will result in all files being deleted.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the KeepFiles property is used as the default value when the &lt;xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A&gt; overload that does not have a <ph id=\"ph1\">`keepFile`</ph> parameter is called to add a temporary file to the collection.","pos":[0,243],"source":"The value of the KeepFiles property is used as the default value when the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> overload that does not have a `keepFile` parameter is called to add a temporary file to the collection."},{"content":"Each temporary file in the collection has an associated keep file flag that determines, on a per-file basis, whether that file is to be kept or deleted.","pos":[244,396]},{"content":"Files are automatically kept or deleted on completion of the compilation based on their associated keep files value.","pos":[397,513]},{"content":"However, after compilation is complete, files that were kept can be released by setting KeepFiles false and calling the &lt;xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A&gt; method.","pos":[514,701],"source":" However, after compilation is complete, files that were kept can be released by setting KeepFiles false and calling the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method."},{"content":"This will result in all files being deleted.","pos":[703,747]}]},{"pos":[24666,24830],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the files should be kept; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the files should be kept; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25549,25652],"content":"Copies the elements of the collection to an array, starting at the specified index of the target array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the elements of the collection to an array, starting at the specified index of the target array.","pos":[0,103]}]},{"pos":[25664,25874],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.","pos":[0,210],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.CodeDom.Compiler.TempFileCollection&gt; instance is cast to an &lt;xref:System.Collections.ICollection&gt; interface.","pos":[60,210],"source":" It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface."}]}]},{"pos":[26024,26209],"content":"The one-dimensional <xref:System.Array> that is the destination of the elements copied from <xref:System.Collections.ICollection>. The <xref:System.Array> must have zero-based indexing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The one-dimensional <xref:System.Array> that is the destination of the elements copied from <xref:System.Collections.ICollection>. The <xref:System.Array> must have zero-based indexing.","pos":[0,185],"nodes":[{"content":"The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from &lt;xref:System.Collections.ICollection&gt;.","pos":[0,130],"source":"The one-dimensional <xref:System.Array> that is the destination of the elements copied from <xref:System.Collections.ICollection>."},{"content":"The &lt;xref:System.Array&gt; must have zero-based indexing.","pos":[131,185],"source":" The <xref:System.Array> must have zero-based indexing."}]}]},{"pos":[26270,26324],"content":"The zero-based index in array at which copying begins.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index in array at which copying begins.","pos":[0,54]}]},{"pos":[26975,27031],"content":"Gets the number of elements contained in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of elements contained in the collection.","pos":[0,56]}]},{"pos":[27043,27253],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.","pos":[0,210],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.CodeDom.Compiler.TempFileCollection&gt; instance is cast to an &lt;xref:System.Collections.ICollection&gt; interface.","pos":[60,210],"source":" It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface."}]}]},{"pos":[27383,27461],"content":"The number of elements contained in the <xref:System.Collections.ICollection>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of elements contained in the &lt;xref:System.Collections.ICollection&gt;.","pos":[0,78],"source":"The number of elements contained in the <xref:System.Collections.ICollection>."}]},{"pos":[28156,28243],"content":"Gets a value indicating whether access to the collection is synchronized (thread safe).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether access to the collection is synchronized (thread safe).","pos":[0,87]}]},{"pos":[28255,28465],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.","pos":[0,210],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.CodeDom.Compiler.TempFileCollection&gt; instance is cast to an &lt;xref:System.Collections.ICollection&gt; interface.","pos":[60,210],"source":" It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface."}]}]},{"pos":[28607,28828],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to the &lt;xref:System.Collections.ICollection&gt; is synchronized (thread safe); otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref:System.Collections.ICollection> is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[29502,29574],"content":"Gets an object that can be used to synchronize access to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object that can be used to synchronize access to the collection.","pos":[0,72]}]},{"pos":[29586,29796],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.","pos":[0,210],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.CodeDom.Compiler.TempFileCollection&gt; instance is cast to an &lt;xref:System.Collections.ICollection&gt; interface.","pos":[60,210],"source":" It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface."}]}]},{"pos":[29933,30027],"content":"An object that can be used to synchronize access to the <xref:System.Collections.ICollection>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that can be used to synchronize access to the &lt;xref:System.Collections.ICollection&gt;.","pos":[0,94],"source":"An object that can be used to synchronize access to the <xref:System.Collections.ICollection>."}]},{"pos":[30724,30781],"content":"Returns an enumerator that iterates through a collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that iterates through a collection.","pos":[0,57]}]},{"pos":[30793,31003],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.","pos":[0,210],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.CodeDom.Compiler.TempFileCollection&gt; instance is cast to an &lt;xref:System.Collections.IEnumerable&gt; interface.","pos":[60,210],"source":" It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface."}]}]},{"pos":[31181,31273],"content":"An <xref:System.Collections.IEnumerator> that can be used to iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerator&gt; that can be used to iterate through the collection.","pos":[0,92],"source":"An <xref:System.Collections.IEnumerator> that can be used to iterate through the collection."}]},{"pos":[31885,31989],"content":"Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.","pos":[0,104]}]},{"pos":[32001,32199],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.IDisposable> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.IDisposable> interface.","pos":[0,198],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.CodeDom.Compiler.TempFileCollection&gt; instance is cast to an &lt;xref:System.IDisposable&gt; interface.","pos":[60,198],"source":" It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.IDisposable> interface."}]}]},{"pos":[32751,32812],"content":"Gets the temporary directory to store the temporary files in.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the temporary directory to store the temporary files in.","pos":[0,61]}]},{"pos":[32924,32980],"content":"The temporary directory to store the temporary files in.","needQuote":true,"needEscape":true,"nodes":[{"content":"The temporary directory to store the temporary files in.","pos":[0,56]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.Compiler.TempFileCollection\n  id: TempFileCollection\n  children:\n  - System.CodeDom.Compiler.TempFileCollection.#ctor\n  - System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)\n  - System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)\n  - System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)\n  - System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)\n  - System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)\n  - System.CodeDom.Compiler.TempFileCollection.BasePath\n  - System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)\n  - System.CodeDom.Compiler.TempFileCollection.Count\n  - System.CodeDom.Compiler.TempFileCollection.Delete\n  - System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)\n  - System.CodeDom.Compiler.TempFileCollection.Finalize\n  - System.CodeDom.Compiler.TempFileCollection.GetEnumerator\n  - System.CodeDom.Compiler.TempFileCollection.KeepFiles\n  - System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count\n  - System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized\n  - System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot\n  - System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose\n  - System.CodeDom.Compiler.TempFileCollection.TempDir\n  langs:\n  - csharp\n  name: TempFileCollection\n  nameWithType: TempFileCollection\n  fullName: System.CodeDom.Compiler.TempFileCollection\n  type: Class\n  summary: Represents a collection of temporary files.\n  remarks: \"TempFileCollection can be used to generate unique file names and to keep track of a list of files. This can be useful to <xref:System.CodeDom.Compiler.ICodeCompiler> implementers when managing a list of compiler-generated intermediate files, which are sometimes deleted after use.  \\n  \\n To specify a directory to generate unique temporary file names in, use an appropriately overloaded constructor. You can also use a constructor overload to indicate whether files added to the collection should, if not specified otherwise when using the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> or <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> methods, be deleted when the collection is disposed or the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called.  \\n  \\n A file in any directory can be added to an instance of TempFileCollection using the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> method.  \\n  \\n To generate a unique name for a temporary file of a particular file extension, call <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> and specifiy the extension of the file name to generate. The <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method will return a string consisting of a full path to a file name of the specified extension in the directory specified by the <xref:System.CodeDom.Compiler.TempFileCollection.TempDir%2A> property. The <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method will only return one unique file name per file name extension.  \\n  \\n Both the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> and <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> methods have overloads that allow you to specify whether the files should be deleted when the collection is disposed or the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called.  \\n  \\n The <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method will delete all the files in the collection except those that are marked to be kept.  \\n  \\n The <xref:System.CodeDom.Compiler.TempFileCollection.BasePath%2A> property indicates a full path to the base file name, without a file name extension, used to generate the file names returned by the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method.  \\n  \\n> [!NOTE]\\n>  This class contains a link demand and an inheritance demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission. For details about security demands, see [Link Demands](~/add/includes/ajax-current-ext-md.md) and [Inheritance Demands](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9).\"\n  example:\n  - \"The following example shows the use of the TempFileCollection class and the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> and <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> methods.  \\n  \\n [!code-cs[System.CodeDom.Compiler.TempFileCollection#1](~/add/codesnippet/csharp/t-system.codedom.compile_1_1.cs)]\\n [!code-vb[System.CodeDom.Compiler.TempFileCollection#1](~/add/codesnippet/visualbasic/t-system.codedom.compile_1_1.vb)]\"\n  syntax:\n    content: 'public class TempFileCollection : IDisposable, System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: TempFileCollection()\n  nameWithType: TempFileCollection.TempFileCollection()\n  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> class with default values.\n  remarks: This is a default constructor that initializes the collection with default settings. By default, this temporary files collection will store the files in a default temporary directory and will delete the temporary files after they have been generated and used.\n  syntax:\n    content: public TempFileCollection ();\n    parameters: []\n  overload: System.CodeDom.Compiler.TempFileCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: TempFileCollection(String)\n  nameWithType: TempFileCollection.TempFileCollection(String)\n  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection(String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> class using the specified temporary directory that is set to delete the temporary files after their generation and use, by default.\n  syntax:\n    content: public TempFileCollection (string tempDir);\n    parameters:\n    - id: tempDir\n      type: System.String\n      description: A path to the temporary directory to use for storing the temporary files.\n  overload: System.CodeDom.Compiler.TempFileCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)\n  id: '#ctor(System.String,System.Boolean)'\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: TempFileCollection(String,Boolean)\n  nameWithType: TempFileCollection.TempFileCollection(String,Boolean)\n  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection(String,Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> class using the specified temporary directory and specified value indicating whether to keep or delete the temporary files after their generation and use, by default.\n  remarks: The value of `keepFiles` is used to set the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> parameter. The temporary files in the collection are retained or deleted upon the completion of compiler activity based on the value of the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property in the collection. As each file is added to the collection, the current value of <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> is associated with it, unless it is added with a method that has a `keepFile` parameter, in which case that value is used for that specific file. When the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called, if <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> is `true`, all files are deleted, including those added with a <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> value of `true`. This allows specific files, those identified as being keep files, to be temporarily retained after compilation for purposes such as error reporting, then deleted when they are no longer needed.\n  syntax:\n    content: public TempFileCollection (string tempDir, bool keepFiles);\n    parameters:\n    - id: tempDir\n      type: System.String\n      description: A path to the temporary directory to use for storing the temporary files.\n    - id: keepFiles\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the temporary files should be kept after use; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the temporary files should be deleted.\n  overload: System.CodeDom.Compiler.TempFileCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)\n  id: AddExtension(System.String)\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: AddExtension(String)\n  nameWithType: TempFileCollection.AddExtension(String)\n  fullName: System.CodeDom.Compiler.TempFileCollection.AddExtension(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Adds a file name with the specified file name extension to the collection.\n  remarks: \"This method returns a file name with the specified extension that has been added to the temporary files collection. Other code must still create the file before it can be used.  \\n  \\n This method can be called only once for each file name extension, because it will return the same name if it is called with the same extension.\"\n  syntax:\n    content: public string AddExtension (string fileExtension);\n    parameters:\n    - id: fileExtension\n      type: System.String\n      description: The file name extension for the auto-generated temporary file name to add to the collection.\n    return:\n      type: System.String\n      description: A file name with the specified extension that was just added to the collection.\n  overload: System.CodeDom.Compiler.TempFileCollection.AddExtension*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)\n  id: AddExtension(System.String,System.Boolean)\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: AddExtension(String,Boolean)\n  nameWithType: TempFileCollection.AddExtension(String,Boolean)\n  fullName: System.CodeDom.Compiler.TempFileCollection.AddExtension(String,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Adds a file name with the specified file name extension to the collection, using the specified value indicating whether the file should be deleted or retained.\n  remarks: \"This method returns a file name with the specified extension that has been added to the temporary files collection. Other code must still create the file before it can be used.  \\n  \\n This method can be called only once for each file name extension, because it will return the same name if it is called with the same extension.\"\n  syntax:\n    content: public string AddExtension (string fileExtension, bool keepFile);\n    parameters:\n    - id: fileExtension\n      type: System.String\n      description: The file name extension for the auto-generated temporary file name to add to the collection.\n    - id: keepFile\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the file should be kept after use; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the file should be deleted.\n    return:\n      type: System.String\n      description: A file name with the specified extension that was just added to the collection.\n  overload: System.CodeDom.Compiler.TempFileCollection.AddExtension*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>fileExtension</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)\n  id: AddFile(System.String,System.Boolean)\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: AddFile(String,Boolean)\n  nameWithType: TempFileCollection.AddFile(String,Boolean)\n  fullName: System.CodeDom.Compiler.TempFileCollection.AddFile(String,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Adds the specified file to the collection, using the specified value indicating whether to keep the file after the collection is disposed or when the <xref:System.CodeDom.Compiler.TempFileCollection.Delete*> method is called.\n  remarks: ''\n  example:\n  - \"The following example shows the use of the AddFile method to add a file that is to be kept to the collection. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.TempFileCollection> class.  \\n  \\n [!code-cs[System.CodeDom.Compiler.TempFileCollection#2](~/add/codesnippet/csharp/a38042f1-5040-47a0-b145-_1.cs)]\\n [!code-vb[System.CodeDom.Compiler.TempFileCollection#2](~/add/codesnippet/visualbasic/a38042f1-5040-47a0-b145-_1.vb)]\"\n  syntax:\n    content: public void AddFile (string fileName, bool keepFile);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of the file to add to the collection.\n    - id: keepFile\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the file should be kept after use; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the file should be deleted.\n  overload: System.CodeDom.Compiler.TempFileCollection.AddFile*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>fileName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> or an empty string.  \\n  \\n -or-  \\n  \\n <code>fileName</code> is a duplicate.\"\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.BasePath\n  id: BasePath\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: BasePath\n  nameWithType: TempFileCollection.BasePath\n  fullName: System.CodeDom.Compiler.TempFileCollection.BasePath\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Gets the full path to the base file name, without a file name extension, on the temporary directory path, that is used to generate temporary file names for the collection.\n  syntax:\n    content: public string BasePath { get; }\n    return:\n      type: System.String\n      description: The full path to the base file name, without a file name extension, on the temporary directory path, that is used to generate temporary file names for the collection.\n  overload: System.CodeDom.Compiler.TempFileCollection.BasePath*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: If the BasePath property has not been set or is set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, and <xref href=\"System.Security.Permissions.FileIOPermissionAccess\"></xref> is not granted for the temporary directory indicated by the <xref:System.CodeDom.Compiler.TempFileCollection.TempDir*> property.\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)\n  id: CopyTo(System.String[],System.Int32)\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: CopyTo(String[],Int32)\n  nameWithType: TempFileCollection.CopyTo(String[],Int32)\n  fullName: System.CodeDom.Compiler.TempFileCollection.CopyTo(String[],Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Copies the members of the collection to the specified string, beginning at the specified index.\n  syntax:\n    content: public void CopyTo (string[] fileNames, int start);\n    parameters:\n    - id: fileNames\n      type: System.String[]\n      description: The array of strings to copy to.\n    - id: start\n      type: System.Int32\n      description: The index of the array to begin copying to.\n  overload: System.CodeDom.Compiler.TempFileCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.Count\n  id: Count\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: TempFileCollection.Count\n  fullName: System.CodeDom.Compiler.TempFileCollection.Count\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Gets the number of files in the collection.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of files in the collection.\n  overload: System.CodeDom.Compiler.TempFileCollection.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.Delete\n  id: Delete\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: Delete()\n  nameWithType: TempFileCollection.Delete()\n  fullName: System.CodeDom.Compiler.TempFileCollection.Delete()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Deletes the temporary files within this collection that were not marked to be kept.\n  remarks: The Delete method examines each file in the collection to determine, on an individual basis, whether the file is to be kept or deleted. Files can be explicitly marked to be kept when added to the collection using add methods that take a `keepFile` parameter. When adding a file to the collection using the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> overload that does not have a `keepFile` parameter the value of the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property is used as the default keep file indicator.\n  syntax:\n    content: public void Delete ();\n    parameters: []\n  overload: System.CodeDom.Compiler.TempFileCollection.Delete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: TempFileCollection.Dispose(Boolean)\n  fullName: System.CodeDom.Compiler.TempFileCollection.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Releases the unmanaged resources used by the <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.CodeDom.Compiler.TempFileCollection> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources.\n  overload: System.CodeDom.Compiler.TempFileCollection.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.Finalize\n  id: Finalize\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: TempFileCollection.Finalize()\n  fullName: System.CodeDom.Compiler.TempFileCollection.Finalize()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Attempts to delete the temporary files before this object is reclaimed by garbage collection.\n  remarks: \"This method overrides <xref:System.Object.Finalize%2A?displayProperty=fullName> and cleans up resources by calling `Dispose(false)`. Override `Dispose(Boolean)` to customize the cleanup.  \\n  \\n Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName> method.  \\n  \\n For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).\"\n  syntax:\n    content: ~TempFileCollection ();\n    parameters: []\n  overload: System.CodeDom.Compiler.TempFileCollection.Finalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: TempFileCollection.GetEnumerator()\n  fullName: System.CodeDom.Compiler.TempFileCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Gets an enumerator that can enumerate the members of the collection.\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> that contains the collection's members.\n  overload: System.CodeDom.Compiler.TempFileCollection.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.KeepFiles\n  id: KeepFiles\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: KeepFiles\n  nameWithType: TempFileCollection.KeepFiles\n  fullName: System.CodeDom.Compiler.TempFileCollection.KeepFiles\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Gets or sets a value indicating whether to keep the files, by default, when the <xref:System.CodeDom.Compiler.TempFileCollection.Delete*> method is called or the collection is disposed.\n  remarks: The value of the KeepFiles property is used as the default value when the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> overload that does not have a `keepFile` parameter is called to add a temporary file to the collection. Each temporary file in the collection has an associated keep file flag that determines, on a per-file basis, whether that file is to be kept or deleted. Files are automatically kept or deleted on completion of the compilation based on their associated keep files value. However, after compilation is complete, files that were kept can be released by setting KeepFiles false and calling the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method.  This will result in all files being deleted.\n  syntax:\n    content: public bool KeepFiles { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the files should be kept; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.CodeDom.Compiler.TempFileCollection.KeepFiles*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: TempFileCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Copies the elements of the collection to an array, starting at the specified index of the target array.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: void ICollection.CopyTo (Array array, int start);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional <xref:System.Array> that is the destination of the elements copied from <xref:System.Collections.ICollection>. The <xref:System.Array> must have zero-based indexing.\n    - id: start\n      type: System.Int32\n      description: The zero-based index in array at which copying begins.\n  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count\n  id: System#Collections#ICollection#Count\n  isEii: true\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.Count\n  nameWithType: TempFileCollection.System.Collections.ICollection.Count\n  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.Count\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Gets the number of elements contained in the collection.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: int System.Collections.ICollection.Count { get; }\n    return:\n      type: System.Int32\n      description: The number of elements contained in the <xref:System.Collections.ICollection>.\n  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: TempFileCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Gets a value indicating whether access to the collection is synchronized (thread safe).\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref:System.Collections.ICollection> is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: TempFileCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Gets an object that can be used to synchronize access to the collection.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the <xref:System.Collections.ICollection>.\n  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: TempFileCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Returns an enumerator that iterates through a collection.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> that can be used to iterate through the collection.\n  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose\n  id: System#IDisposable#Dispose\n  isEii: true\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: System.IDisposable.Dispose()\n  nameWithType: TempFileCollection.System.IDisposable.Dispose()\n  fullName: System.CodeDom.Compiler.TempFileCollection.System.IDisposable.Dispose()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.IDisposable> interface.\n  syntax:\n    content: void IDisposable.Dispose ();\n    parameters: []\n  overload: System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.Compiler.TempFileCollection.TempDir\n  id: TempDir\n  parent: System.CodeDom.Compiler.TempFileCollection\n  langs:\n  - csharp\n  name: TempDir\n  nameWithType: TempFileCollection.TempDir\n  fullName: System.CodeDom.Compiler.TempFileCollection.TempDir\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom.Compiler\n  summary: Gets the temporary directory to store the temporary files in.\n  syntax:\n    content: public string TempDir { get; }\n    return:\n      type: System.String\n      description: The temporary directory to store the temporary files in.\n  overload: System.CodeDom.Compiler.TempFileCollection.TempDir*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.CodeDom.Compiler.TempFileCollection.#ctor\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: TempFileCollection()\n  nameWithType: TempFileCollection.TempFileCollection()\n  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection()\n- uid: System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: TempFileCollection(String)\n  nameWithType: TempFileCollection.TempFileCollection(String)\n  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: TempFileCollection(String,Boolean)\n  nameWithType: TempFileCollection.TempFileCollection(String,Boolean)\n  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection(String,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: AddExtension(String)\n  nameWithType: TempFileCollection.AddExtension(String)\n  fullName: System.CodeDom.Compiler.TempFileCollection.AddExtension(String)\n- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: AddExtension(String,Boolean)\n  nameWithType: TempFileCollection.AddExtension(String,Boolean)\n  fullName: System.CodeDom.Compiler.TempFileCollection.AddExtension(String,Boolean)\n- uid: System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: AddFile(String,Boolean)\n  nameWithType: TempFileCollection.AddFile(String,Boolean)\n  fullName: System.CodeDom.Compiler.TempFileCollection.AddFile(String,Boolean)\n- uid: System.CodeDom.Compiler.TempFileCollection.BasePath\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: BasePath\n  nameWithType: TempFileCollection.BasePath\n  fullName: System.CodeDom.Compiler.TempFileCollection.BasePath\n- uid: System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: CopyTo(String[],Int32)\n  nameWithType: TempFileCollection.CopyTo(String[],Int32)\n  fullName: System.CodeDom.Compiler.TempFileCollection.CopyTo(String[],Int32)\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.CodeDom.Compiler.TempFileCollection.Count\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: Count\n  nameWithType: TempFileCollection.Count\n  fullName: System.CodeDom.Compiler.TempFileCollection.Count\n- uid: System.CodeDom.Compiler.TempFileCollection.Delete\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: Delete()\n  nameWithType: TempFileCollection.Delete()\n  fullName: System.CodeDom.Compiler.TempFileCollection.Delete()\n- uid: System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: TempFileCollection.Dispose(Boolean)\n  fullName: System.CodeDom.Compiler.TempFileCollection.Dispose(Boolean)\n- uid: System.CodeDom.Compiler.TempFileCollection.Finalize\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: Finalize()\n  nameWithType: TempFileCollection.Finalize()\n  fullName: System.CodeDom.Compiler.TempFileCollection.Finalize()\n- uid: System.CodeDom.Compiler.TempFileCollection.GetEnumerator\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: TempFileCollection.GetEnumerator()\n  fullName: System.CodeDom.Compiler.TempFileCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.CodeDom.Compiler.TempFileCollection.KeepFiles\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: KeepFiles\n  nameWithType: TempFileCollection.KeepFiles\n  fullName: System.CodeDom.Compiler.TempFileCollection.KeepFiles\n- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: TempFileCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: TempFileCollection.System.Collections.ICollection.Count\n  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.Count\n- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: TempFileCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: TempFileCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.SyncRoot\n- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: TempFileCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: System.IDisposable.Dispose()\n  nameWithType: TempFileCollection.System.IDisposable.Dispose()\n  fullName: System.CodeDom.Compiler.TempFileCollection.System.IDisposable.Dispose()\n- uid: System.CodeDom.Compiler.TempFileCollection.TempDir\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: TempDir\n  nameWithType: TempFileCollection.TempDir\n  fullName: System.CodeDom.Compiler.TempFileCollection.TempDir\n- uid: System.CodeDom.Compiler.TempFileCollection.#ctor*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: TempFileCollection\n  nameWithType: TempFileCollection.TempFileCollection\n- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: AddExtension\n  nameWithType: TempFileCollection.AddExtension\n- uid: System.CodeDom.Compiler.TempFileCollection.AddFile*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: AddFile\n  nameWithType: TempFileCollection.AddFile\n- uid: System.CodeDom.Compiler.TempFileCollection.BasePath*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: BasePath\n  nameWithType: TempFileCollection.BasePath\n- uid: System.CodeDom.Compiler.TempFileCollection.CopyTo*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: TempFileCollection.CopyTo\n- uid: System.CodeDom.Compiler.TempFileCollection.Count*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: Count\n  nameWithType: TempFileCollection.Count\n- uid: System.CodeDom.Compiler.TempFileCollection.Delete*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: Delete\n  nameWithType: TempFileCollection.Delete\n- uid: System.CodeDom.Compiler.TempFileCollection.Dispose*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: Dispose\n  nameWithType: TempFileCollection.Dispose\n- uid: System.CodeDom.Compiler.TempFileCollection.Finalize*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: Finalize\n  nameWithType: TempFileCollection.Finalize\n- uid: System.CodeDom.Compiler.TempFileCollection.GetEnumerator*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: TempFileCollection.GetEnumerator\n- uid: System.CodeDom.Compiler.TempFileCollection.KeepFiles*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: KeepFiles\n  nameWithType: TempFileCollection.KeepFiles\n- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: TempFileCollection.System.Collections.ICollection.CopyTo\n- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: TempFileCollection.System.Collections.ICollection.Count\n- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: TempFileCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: TempFileCollection.System.Collections.ICollection.SyncRoot\n- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: TempFileCollection.System.Collections.IEnumerable.GetEnumerator\n- uid: System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: System.IDisposable.Dispose\n  nameWithType: TempFileCollection.System.IDisposable.Dispose\n- uid: System.CodeDom.Compiler.TempFileCollection.TempDir*\n  parent: System.CodeDom.Compiler.TempFileCollection\n  isExternal: false\n  name: TempDir\n  nameWithType: TempFileCollection.TempDir\n"}