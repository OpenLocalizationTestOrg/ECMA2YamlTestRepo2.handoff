{"nodes":[{"pos":[1479,1531],"content":"Represents an asymmetric key for X.509 certificates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an asymmetric key for X.509 certificates.","pos":[0,52]}]},{"pos":[2494,2647],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509AsymmetricSecurityKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified X.509 certificate.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509AsymmetricSecurityKey\"></xref> class using the specified X.509 certificate."},{"pos":[2914,3040],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the X.509 certificate.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that represents the X.509 certificate."},{"pos":[3230,3319],"content":"<ph id=\"ph1\">&lt;code&gt;certificate&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>certificate</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[3874,3955],"content":"Decrypts the specified encrypted key using the specified cryptographic algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Decrypts the specified encrypted key using the specified cryptographic algorithm.","pos":[0,81]}]},{"pos":[3967,4148],"content":"Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the &lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&gt; or &lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&gt; fields to specify the algorithm.","pos":[0,181],"source":"Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm."}]},{"pos":[4323,4370],"content":"The cryptographic algorithm to decrypt the key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cryptographic algorithm to decrypt the key.","pos":[0,47]}]},{"pos":[4434,4497],"content":"An array of <xref:System.Byte> that contains the encrypted key.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Byte&gt; that contains the encrypted key.","pos":[0,63],"source":"An array of <xref:System.Byte> that contains the encrypted key."}]},{"pos":[4555,4618],"content":"An array of <xref:System.Byte> that contains the decrypted key.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Byte&gt; that contains the decrypted key.","pos":[0,63],"source":"An array of <xref:System.Byte> that contains the decrypted key."}]},{"pos":[4814,5659],"content":"The X.509 certificate specified in the constructor does not have a private key.       -or-       The X.509 certificate has a private key, but it was not generated using the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm.       -or-       The X.509 certificate has a private key, it was generated using the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm, but the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The <code>algorithm</code> parameter is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref> and <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The X.509 certificate specified in the constructor does not have a private key.","pos":[0,79]},{"content":"-or-       The X.509 certificate has a private key, but it was not generated using the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm.","pos":[86,237],"source":"       -or-       The X.509 certificate has a private key, but it was not generated using the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm."},{"content":"-or-       The X.509 certificate has a private key, it was generated using the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm, but the &lt;xref:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm*&gt; property is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[244,547],"source":"       -or-       The X.509 certificate has a private key, it was generated using the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm, but the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">algorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not supported.","pos":[554,619],"source":"       -or-       The <code>algorithm</code> parameter is not supported."},{"content":"The supported algorithms are <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[620,819],"source":" The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref> and <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>."}]},{"pos":[6215,6296],"content":"Encrypts the specified encrypted key using the specified cryptographic algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Encrypts the specified encrypted key using the specified cryptographic algorithm.","pos":[0,81]}]},{"pos":[6308,6489],"content":"Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the &lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&gt; or &lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&gt; fields to specify the algorithm.","pos":[0,181],"source":"Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm."}]},{"pos":[6664,6711],"content":"The cryptographic algorithm to encrypt the key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cryptographic algorithm to encrypt the key.","pos":[0,47]}]},{"pos":[6775,6839],"content":"An array of <xref:System.Byte> that contains the key to encrypt.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Byte&gt; that contains the key to encrypt.","pos":[0,64],"source":"An array of <xref:System.Byte> that contains the key to encrypt."}]},{"pos":[6897,6960],"content":"An array of <xref:System.Byte> that contains the encrypted key.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Byte&gt; that contains the encrypted key.","pos":[0,63],"source":"An array of <xref:System.Byte> that contains the encrypted key."}]},{"pos":[7156,7603],"content":"The X.509 certificate specified in the constructor has a public key that was not generated using the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm.       -or-       The <code>algorithm</code> parameter is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref> and <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The X.509 certificate specified in the constructor has a public key that was not generated using the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm.","pos":[0,165],"source":"The X.509 certificate specified in the constructor has a public key that was not generated using the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">algorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not supported.","pos":[172,237],"source":"       -or-       The <code>algorithm</code> parameter is not supported."},{"content":"The supported algorithms are <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[238,437],"source":" The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref> and <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>."}]},{"pos":[8224,8278],"content":"Gets the specified asymmetric cryptographic algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the specified asymmetric cryptographic algorithm.","pos":[0,54]}]},{"pos":[8290,8691],"content":"Use the &lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;, &lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&gt;, &lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&gt;, &lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt; or &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt; fields to specify the <ph id=\"ph1\">`algorithm`</ph> parameter.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter."},{"pos":[8921,8956],"content":"The asymmetric algorithm to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The asymmetric algorithm to create.","pos":[0,35]}]},{"pos":[9024,9215],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when a private key is required to create the algorithm; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a private key is required to create the algorithm; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9308,9446],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified asymmetric cryptographic algorithm.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> that represents the specified asymmetric cryptographic algorithm."},{"pos":[9654,11190],"content":"<code>privateKey</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and the X.509 certificate specified in the constructor does not have a private key.       -or-       <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref> and the public or private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.DSA\"></xref>.       -or-       <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the public or private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.RSA\"></xref>.       -or-       <code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;privateKey&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the X.509 certificate specified in the constructor does not have a private key.","pos":[0,171],"source":"<code>privateKey</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and the X.509 certificate specified in the constructor does not have a private key."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the public or private key for the X.509 certificate specified in the constructor is not of type <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[178,447],"source":"       -or-       <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref> and the public or private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.DSA\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> or <bpt id=\"p4\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> and the public or private key for the X.509 certificate specified in the constructor is not of type <bpt id=\"p5\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","pos":[454,985],"source":"       -or-       <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the public or private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.RSA\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.","pos":[992,1043],"source":"       -or-       <code>algorithm</code> is not supported."},{"content":"The supported algorithms are <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, <bpt id=\"p4\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>, and <bpt id=\"p5\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","pos":[1044,1494],"source":" The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>."}]},{"pos":[11787,11864],"content":"Gets a cryptographic algorithm that generates a hash for a digital signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a cryptographic algorithm that generates a hash for a digital signature.","pos":[0,77]}]},{"pos":[11876,12137],"content":"Use the &lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;, &lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt; or &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt; fields to specify the <ph id=\"ph1\">`algorithm`</ph> parameter.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter."},{"pos":[12350,12369],"content":"The hash algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash algorithm.","pos":[0,19]}]},{"pos":[12456,12567],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithm\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that generates hashes for digital signatures.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Cryptography.HashAlgorithm\"></xref> that generates hashes for digital signatures."},{"pos":[12780,13103],"content":"<code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.","pos":[0,40],"source":"<code>algorithm</code> is not supported."},{"content":"The supported algorithms are <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, and <bpt id=\"p3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[41,323],"source":" The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>."}]},{"pos":[13674,13732],"content":"Gets the de-formatter algorithm for the digital signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the de-formatter algorithm for the digital signature.","pos":[0,58]}]},{"pos":[13744,14005],"content":"Use the &lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;, &lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt; or &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt; fields to specify the <ph id=\"ph1\">`algorithm`</ph> parameter.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter."},{"pos":[14230,14305],"content":"The de-formatter algorithm for the digital signature to get an instance of.","needQuote":true,"needEscape":true,"nodes":[{"content":"The de-formatter algorithm for the digital signature to get an instance of.","pos":[0,75]}]},{"pos":[14409,14562],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the de-formatter algorithm for the digital signature.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"></xref> that represents the de-formatter algorithm for the digital signature."},{"pos":[14771,15750],"content":"<code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref> and the public key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.DSA\"></xref>.       -or-       <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the public key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.RSA\"></xref>.       -or-       <code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>,       <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the public key for the X.509 certificate specified in the constructor is not of type <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,247],"source":"<code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref> and the public key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.DSA\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and the public key for the X.509 certificate specified in the constructor is not of type <bpt id=\"p3\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[254,606],"source":"       -or-       <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the public key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.RSA\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.","pos":[613,664],"source":"       -or-       <code>algorithm</code> is not supported."},{"content":"The supported algorithms are <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>,       <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, and <bpt id=\"p3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[665,953],"source":" The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>,       <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>."}]},{"pos":[16312,16367],"content":"Gets the formatter algorithm for the digital signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the formatter algorithm for the digital signature.","pos":[0,55]}]},{"pos":[16379,16640],"content":"Use the &lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;, &lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt; or &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt; fields to specify the <ph id=\"ph1\">`algorithm`</ph> parameter.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter."},{"pos":[16861,16933],"content":"The formatter algorithm for the digital signature to get an instance of.","needQuote":true,"needEscape":true,"nodes":[{"content":"The formatter algorithm for the digital signature to get an instance of.","pos":[0,72]}]},{"pos":[17035,17185],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the formatter algorithm for the digital signature.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"></xref> that represents the formatter algorithm for the digital signature."},{"pos":[17392,18474],"content":"The X.509 certificate specified in the constructor does not have a private key.       -or-       <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref> and the private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.DSA\"></xref>.       -or-       <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.RSA\"></xref>.       -or-       <code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>,       <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The X.509 certificate specified in the constructor does not have a private key.","pos":[0,79]},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">algorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and the private key for the X.509 certificate specified in the constructor is not of type <bpt id=\"p3\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[86,345],"source":"       -or-       <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref> and the private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.DSA\"></xref>."},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">algorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or <bpt id=\"p3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and the private key for the X.509 certificate specified in the constructor is not of type <bpt id=\"p4\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[352,705],"source":"       -or-       <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.RSA\"></xref>."},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">algorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not supported.","pos":[712,763],"source":"       -or-       <code>algorithm</code> is not supported."},{"content":"The supported algorithms are <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>,       <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, and <bpt id=\"p3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[764,1052],"source":" The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>,       <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>."}]},{"pos":[18948,19015],"content":"Gets a value that indicates whether the private key is a available.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the private key is a available.","pos":[0,67]}]},{"pos":[19155,19325],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when the private key is available; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when the private key is available; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19984,20065],"content":"Gets a value that indicates whether the specified algorithm uses asymmetric keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the specified algorithm uses asymmetric keys.","pos":[0,81]}]},{"pos":[20233,20261],"content":"The cryptographic algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cryptographic algorithm.","pos":[0,28]}]},{"pos":[20320,20917],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when the specified algorithm is <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, <bpt id=\"p4\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>, <bpt id=\"p5\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>, or <bpt id=\"p6\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p7\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when the specified algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21579,21666],"content":"Gets a value that indicates whether the specified algorithm is supported by this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the specified algorithm is supported by this class.","pos":[0,87]}]},{"pos":[21679,22440],"content":"The IsSupportedAlgorithm method returns `true` when one of the following is true:      -   The `algorithm` parameter is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> and the public key for the X.509 certificate specified in the constructor is of type <xref:System.Security.Cryptography.DSA>.      -   The `algorithm` parameter is <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> and the public key for the X.509 certificate specified in the constructor is of type <xref:System.Security.Cryptography.RSA>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IsSupportedAlgorithm method returns <ph id=\"ph1\">`true`</ph> when one of the following is true:      -   The <ph id=\"ph2\">`algorithm`</ph> parameter is &lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt; and the public key for the X.509 certificate specified in the constructor is of type &lt;xref:System.Security.Cryptography.DSA&gt;.","pos":[0,309],"source":"The IsSupportedAlgorithm method returns `true` when one of the following is true:      -   The `algorithm` parameter is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> and the public key for the X.509 certificate specified in the constructor is of type <xref:System.Security.Cryptography.DSA>."},{"content":"-   The <ph id=\"ph1\">`algorithm`</ph> parameter is &lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&gt;, &lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&gt;, &lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt; or &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt; and the public key for the X.509 certificate specified in the constructor is of type &lt;xref:System.Security.Cryptography.RSA&gt;.","pos":[315,757],"source":"      -   The `algorithm` parameter is <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> and the public key for the X.509 certificate specified in the constructor is of type <xref:System.Security.Cryptography.RSA>."}]},{"pos":[22608,22636],"content":"The cryptographic algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cryptographic algorithm.","pos":[0,28]}]},{"pos":[22695,23352],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when the specified algorithm is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the public key is of the right type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. See the remarks for details.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when the specified algorithm is <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, <bpt id=\"p4\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>, <bpt id=\"p5\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>, or <bpt id=\"p6\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept> and the public key is of the right type; otherwise, <bpt id=\"p7\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept>.","pos":[0,628],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when the specified algorithm is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the public key is of the right type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"See the remarks for details.","pos":[629,657]}]},{"pos":[24013,24093],"content":"Gets a value that indicates whether the specified algorithm uses symmetric keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the specified algorithm uses symmetric keys.","pos":[0,80]}]},{"pos":[24260,24288],"content":"The cryptographic algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cryptographic algorithm.","pos":[0,28]}]},{"pos":[24347,25374],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when the specified algorithm is <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, <bpt id=\"p4\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>, <bpt id=\"p5\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>, <bpt id=\"p6\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept>, <bpt id=\"p7\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept>, <bpt id=\"p8\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap\"&gt;</bpt><ept id=\"p8\">&lt;/xref&gt;</ept>, <bpt id=\"p9\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap\"&gt;</bpt><ept id=\"p9\">&lt;/xref&gt;</ept>, <bpt id=\"p10\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap\"&gt;</bpt><ept id=\"p10\">&lt;/xref&gt;</ept>, or <bpt id=\"p11\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation\"&gt;</bpt><ept id=\"p11\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p12\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p12\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when the specified algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25918,25998],"content":"Gets the size, in bits, of the public key associated with the X.509 certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the size, in bits, of the public key associated with the X.509 certificate.","pos":[0,80]}]},{"pos":[26115,26190],"content":"The size, in bits, of the public key associated with the X.509 certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size, in bits, of the public key associated with the X.509 certificate.","pos":[0,75]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  id: X509AsymmetricSecurityKey\n  children:\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize\n  langs:\n  - csharp\n  name: X509AsymmetricSecurityKey\n  nameWithType: X509AsymmetricSecurityKey\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  type: Class\n  summary: Represents an asymmetric key for X.509 certificates.\n  syntax:\n    content: 'public class X509AsymmetricSecurityKey : System.IdentityModel.Tokens.AsymmetricSecurityKey'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityKey\n  - System.IdentityModel.Tokens.AsymmetricSecurityKey\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: X509AsymmetricSecurityKey(X509Certificate2)\n  nameWithType: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey(X509Certificate2)\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.X509AsymmetricSecurityKey(X509Certificate2)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509AsymmetricSecurityKey\"></xref> class using the specified X.509 certificate.\n  syntax:\n    content: public X509AsymmetricSecurityKey (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that represents the X.509 certificate.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>certificate</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])\n  id: DecryptKey(System.String,System.Byte[])\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: DecryptKey(String,Byte[])\n  nameWithType: X509AsymmetricSecurityKey.DecryptKey(String,Byte[])\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(String,Byte[])\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Decrypts the specified encrypted key using the specified cryptographic algorithm.\n  remarks: Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm.\n  syntax:\n    content: public override byte[] DecryptKey (string algorithm, byte[] keyData);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The cryptographic algorithm to decrypt the key.\n    - id: keyData\n      type: System.Byte[]\n      description: An array of <xref:System.Byte> that contains the encrypted key.\n    return:\n      type: System.Byte[]\n      description: An array of <xref:System.Byte> that contains the decrypted key.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The X.509 certificate specified in the constructor does not have a private key.  \\n  \\n -or-  \\n  \\n The X.509 certificate has a private key, but it was not generated using the <xref href=\\\"System.Security.Cryptography.RSA\\\"></xref> algorithm.  \\n  \\n -or-  \\n  \\n The X.509 certificate has a private key, it was generated using the <xref href=\\\"System.Security.Cryptography.RSA\\\"></xref> algorithm, but the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm*> property is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <code>algorithm</code> parameter is not supported. The supported algorithms are <xref href=\\\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\\\"></xref> and <xref href=\\\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])\n  id: EncryptKey(System.String,System.Byte[])\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: EncryptKey(String,Byte[])\n  nameWithType: X509AsymmetricSecurityKey.EncryptKey(String,Byte[])\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(String,Byte[])\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Encrypts the specified encrypted key using the specified cryptographic algorithm.\n  remarks: Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm.\n  syntax:\n    content: public override byte[] EncryptKey (string algorithm, byte[] keyData);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The cryptographic algorithm to encrypt the key.\n    - id: keyData\n      type: System.Byte[]\n      description: An array of <xref:System.Byte> that contains the key to encrypt.\n    return:\n      type: System.Byte[]\n      description: An array of <xref:System.Byte> that contains the encrypted key.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The X.509 certificate specified in the constructor has a public key that was not generated using the <xref href=\\\"System.Security.Cryptography.RSA\\\"></xref> algorithm.  \\n  \\n -or-  \\n  \\n The <code>algorithm</code> parameter is not supported. The supported algorithms are <xref href=\\\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\\\"></xref> and <xref href=\\\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)\n  id: GetAsymmetricAlgorithm(System.String,System.Boolean)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: GetAsymmetricAlgorithm(String,Boolean)\n  nameWithType: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(String,Boolean)\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(String,Boolean)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the specified asymmetric cryptographic algorithm.\n  remarks: Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.\n  syntax:\n    content: public override System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm (string algorithm, bool privateKey);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The asymmetric algorithm to create.\n    - id: privateKey\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a private key is required to create the algorithm; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: An <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> that represents the specified asymmetric cryptographic algorithm.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"<code>privateKey</code> is <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> and the X.509 certificate specified in the constructor does not have a private key.  \\n  \\n -or-  \\n  \\n <code>algorithm</code> is <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\\\"></xref> and the public or private key for the X.509 certificate specified in the constructor is not of type <xref href=\\\"System.Security.Cryptography.DSA\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>algorithm</code> is <xref href=\\\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\\\"></xref>, <xref href=\\\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\\\"></xref>, <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\\\"></xref> or <xref href=\\\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\\\"></xref> and the public or private key for the X.509 certificate specified in the constructor is not of type <xref href=\\\"System.Security.Cryptography.RSA\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>algorithm</code> is not supported. The supported algorithms are <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\\\"></xref>, <xref href=\\\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\\\"></xref>, <xref href=\\\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\\\"></xref>, <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\\\"></xref>, and <xref href=\\\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)\n  id: GetHashAlgorithmForSignature(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: GetHashAlgorithmForSignature(String)\n  nameWithType: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a cryptographic algorithm that generates a hash for a digital signature.\n  remarks: Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.\n  syntax:\n    content: public override System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The hash algorithm.\n    return:\n      type: System.Security.Cryptography.HashAlgorithm\n      description: A <xref href=\"System.Security.Cryptography.HashAlgorithm\"></xref> that generates hashes for digital signatures.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)\n  id: GetSignatureDeformatter(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: GetSignatureDeformatter(String)\n  nameWithType: X509AsymmetricSecurityKey.GetSignatureDeformatter(String)\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the de-formatter algorithm for the digital signature.\n  remarks: Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.\n  syntax:\n    content: public override System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The de-formatter algorithm for the digital signature to get an instance of.\n    return:\n      type: System.Security.Cryptography.AsymmetricSignatureDeformatter\n      description: An <xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"></xref> that represents the de-formatter algorithm for the digital signature.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"<code>algorithm</code> is <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\\\"></xref> and the public key for the X.509 certificate specified in the constructor is not of type <xref href=\\\"System.Security.Cryptography.DSA\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>algorithm</code> is <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\\\"></xref> or <xref href=\\\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\\\"></xref> and the public key for the X.509 certificate specified in the constructor is not of type <xref href=\\\"System.Security.Cryptography.RSA\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>algorithm</code> is not supported. The supported algorithms are <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\\\"></xref>,  \\n  \\n <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\\\"></xref>, and <xref href=\\\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)\n  id: GetSignatureFormatter(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: GetSignatureFormatter(String)\n  nameWithType: X509AsymmetricSecurityKey.GetSignatureFormatter(String)\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the formatter algorithm for the digital signature.\n  remarks: Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.\n  syntax:\n    content: public override System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The formatter algorithm for the digital signature to get an instance of.\n    return:\n      type: System.Security.Cryptography.AsymmetricSignatureFormatter\n      description: An <xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"></xref> that represents the formatter algorithm for the digital signature.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The X.509 certificate specified in the constructor does not have a private key.  \\n  \\n -or-  \\n  \\n <code>algorithm</code> is <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\\\"></xref> and the private key for the X.509 certificate specified in the constructor is not of type <xref href=\\\"System.Security.Cryptography.DSA\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>algorithm</code> is <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\\\"></xref> or <xref href=\\\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\\\"></xref> and the private key for the X.509 certificate specified in the constructor is not of type <xref href=\\\"System.Security.Cryptography.RSA\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>algorithm</code> is not supported. The supported algorithms are <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\\\"></xref>,  \\n  \\n <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\\\"></xref>, and <xref href=\\\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey\n  id: HasPrivateKey\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: HasPrivateKey()\n  nameWithType: X509AsymmetricSecurityKey.HasPrivateKey()\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether the private key is a available.\n  syntax:\n    content: public override bool HasPrivateKey ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when the private key is available; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)\n  id: IsAsymmetricAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: IsAsymmetricAlgorithm(String)\n  nameWithType: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(String)\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether the specified algorithm uses asymmetric keys.\n  syntax:\n    content: public override bool IsAsymmetricAlgorithm (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The cryptographic algorithm.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when the specified algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)\n  id: IsSupportedAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: IsSupportedAlgorithm(String)\n  nameWithType: X509AsymmetricSecurityKey.IsSupportedAlgorithm(String)\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether the specified algorithm is supported by this class.\n  remarks: \"The IsSupportedAlgorithm method returns `true` when one of the following is true:  \\n  \\n-   The `algorithm` parameter is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> and the public key for the X.509 certificate specified in the constructor is of type <xref:System.Security.Cryptography.DSA>.  \\n  \\n-   The `algorithm` parameter is <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> and the public key for the X.509 certificate specified in the constructor is of type <xref:System.Security.Cryptography.RSA>.\"\n  syntax:\n    content: public override bool IsSupportedAlgorithm (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The cryptographic algorithm.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when the specified algorithm is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the public key is of the right type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. See the remarks for details.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)\n  id: IsSymmetricAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: IsSymmetricAlgorithm(String)\n  nameWithType: X509AsymmetricSecurityKey.IsSymmetricAlgorithm(String)\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether the specified algorithm uses symmetric keys.\n  syntax:\n    content: public override bool IsSymmetricAlgorithm (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The cryptographic algorithm.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when the specified algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize\n  id: KeySize\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: KeySize\n  nameWithType: X509AsymmetricSecurityKey.KeySize\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the size, in bits, of the public key associated with the X.509 certificate.\n  syntax:\n    content: public override int KeySize { get; }\n    return:\n      type: System.Int32\n      description: The size, in bits, of the public key associated with the X.509 certificate.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey\n  isExternal: false\n  name: System.IdentityModel.Tokens.AsymmetricSecurityKey\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: X509AsymmetricSecurityKey(X509Certificate2)\n  nameWithType: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey(X509Certificate2)\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.X509AsymmetricSecurityKey(X509Certificate2)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  nameWithType: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: DecryptKey(String,Byte[])\n  nameWithType: X509AsymmetricSecurityKey.DecryptKey(String,Byte[])\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(String,Byte[])\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: EncryptKey(String,Byte[])\n  nameWithType: X509AsymmetricSecurityKey.EncryptKey(String,Byte[])\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(String,Byte[])\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: GetAsymmetricAlgorithm(String,Boolean)\n  nameWithType: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(String,Boolean)\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(String,Boolean)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: GetHashAlgorithmForSignature(String)\n  nameWithType: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)\n- uid: System.Security.Cryptography.HashAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: HashAlgorithm\n  fullName: System.Security.Cryptography.HashAlgorithm\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: GetSignatureDeformatter(String)\n  nameWithType: X509AsymmetricSecurityKey.GetSignatureDeformatter(String)\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(String)\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricSignatureDeformatter\n  nameWithType: AsymmetricSignatureDeformatter\n  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: GetSignatureFormatter(String)\n  nameWithType: X509AsymmetricSecurityKey.GetSignatureFormatter(String)\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(String)\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricSignatureFormatter\n  nameWithType: AsymmetricSignatureFormatter\n  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: HasPrivateKey()\n  nameWithType: X509AsymmetricSecurityKey.HasPrivateKey()\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey()\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: IsAsymmetricAlgorithm(String)\n  nameWithType: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(String)\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(String)\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: IsSupportedAlgorithm(String)\n  nameWithType: X509AsymmetricSecurityKey.IsSupportedAlgorithm(String)\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(String)\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: IsSymmetricAlgorithm(String)\n  nameWithType: X509AsymmetricSecurityKey.IsSymmetricAlgorithm(String)\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(String)\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: KeySize\n  nameWithType: X509AsymmetricSecurityKey.KeySize\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: X509AsymmetricSecurityKey\n  nameWithType: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: DecryptKey\n  nameWithType: X509AsymmetricSecurityKey.DecryptKey\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: EncryptKey\n  nameWithType: X509AsymmetricSecurityKey.EncryptKey\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: GetAsymmetricAlgorithm\n  nameWithType: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: GetHashAlgorithmForSignature\n  nameWithType: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: GetSignatureDeformatter\n  nameWithType: X509AsymmetricSecurityKey.GetSignatureDeformatter\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: GetSignatureFormatter\n  nameWithType: X509AsymmetricSecurityKey.GetSignatureFormatter\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: HasPrivateKey\n  nameWithType: X509AsymmetricSecurityKey.HasPrivateKey\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: IsAsymmetricAlgorithm\n  nameWithType: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: IsSupportedAlgorithm\n  nameWithType: X509AsymmetricSecurityKey.IsSupportedAlgorithm\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: IsSymmetricAlgorithm\n  nameWithType: X509AsymmetricSecurityKey.IsSymmetricAlgorithm\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: KeySize\n  nameWithType: X509AsymmetricSecurityKey.KeySize\n"}