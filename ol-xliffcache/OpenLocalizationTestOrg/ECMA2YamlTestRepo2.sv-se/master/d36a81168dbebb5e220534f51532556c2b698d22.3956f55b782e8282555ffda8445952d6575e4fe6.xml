{"nodes":[{"pos":[6038,6118],"content":"Represents a 64-bit signed integer to be stored in or retrieved from a database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a 64-bit signed integer to be stored in or retrieved from a database.","pos":[0,80]}]},{"pos":[6869,6996],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure using the supplied long integer.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure using the supplied long integer."},{"pos":[7126,7141],"content":"A long integer.","needQuote":true,"needEscape":true,"nodes":[{"content":"A long integer.","pos":[0,15]}]},{"pos":[7698,7788],"content":"Computes the sum of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"Computes the sum of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters."},{"pos":[8017,8080],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[8154,8217],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[8291,8501],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlInt64.Value*&gt; is equal to the sum of the two <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> is equal to the sum of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters."},{"pos":[9091,9183],"content":"Computes the bitwise AND of its <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"Computes the bitwise AND of its <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> operands."},{"pos":[9419,9482],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[9556,9619],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[9693,9811],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that contains the results of the bitwise AND operation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure that contains the results of the bitwise AND operation."},{"pos":[10403,10498],"content":"Computes the bitwise OR of its two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"Computes the bitwise OR of its two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> operands."},{"pos":[10733,10796],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[10870,10933],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[11007,11124],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that contains the results of the bitwise OR operation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure that contains the results of the bitwise OR operation."},{"pos":[11628,11820],"content":"Compares this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to the supplied <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and returns an indication of their relative values.","needQuote":true,"needEscape":true,"source":"Compares this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> instance to the supplied <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> and returns an indication of their relative values."},{"pos":[11997,12067],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be compared.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> to be compared."},{"pos":[12125,12767],"content":"A signed number that indicates the relative values of the instance and the object.       <table><thead><tr><th> Return value       </th><th> Condition       </th></tr></thead><tbody><tr><td> Less than zero       </td><td> This instance is less than the object.       </td></tr><tr><td> Zero       </td><td> This instance is the same as the object.       </td></tr><tr><td> Greater than zero       </td><td> This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"A signed number that indicates the relative values of the instance and the object.       ","pos":[0,89],"nodes":[{"content":"A signed number that indicates the relative values of the instance and the object.","pos":[0,82]}]},{"content":"Return value","pos":[112,124]},{"content":"Condition","pos":[141,150]},{"content":"Less than zero","pos":[191,205]},{"content":" This instance is less than the object.       ","pos":[221,267],"nodes":[{"content":"This instance is less than the object.","pos":[1,39]}]},{"content":"Zero","pos":[286,290]},{"content":" This instance is the same as the object.       ","pos":[306,354],"nodes":[{"content":"This instance is the same as the object.","pos":[1,41]}]},{"content":"Greater than zero","pos":[373,390]},{"content":" This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).       ","pos":[406,588],"nodes":[{"content":"This instance is greater than the object       -or-       The object is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","pos":[1,175],"source":" This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."}]}]},{"pos":[13234,13396],"content":"Compares this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to the supplied &lt;xref:System.Object&gt; and returns an indication of their relative values.","needQuote":true,"needEscape":true,"source":"Compares this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> instance to the supplied <xref:System.Object> and returns an indication of their relative values."},{"pos":[13534,13574],"content":"The <xref:System.Object> to be compared.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to be compared.","pos":[0,40],"source":"The <xref:System.Object> to be compared."}]},{"pos":[13632,14275],"content":"A signed number that indicates the relative values of the instance and the object.       <table><thead><tr><th> Return value       </th><th> Condition       </th></tr></thead><tbody><tr><td> Less than zero       </td><td> This instance is less than the object.       </td></tr><tr><td> Zero       </td><td> This instance is the same as the object.       </td></tr><tr><td> Greater than zero       </td><td> This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing \" name=\"Nothing \" href=\"\"></xref>in Visual Basic).       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"A signed number that indicates the relative values of the instance and the object.       ","pos":[0,89],"nodes":[{"content":"A signed number that indicates the relative values of the instance and the object.","pos":[0,82]}]},{"content":"Return value","pos":[112,124]},{"content":"Condition","pos":[141,150]},{"content":"Less than zero","pos":[191,205]},{"content":" This instance is less than the object.       ","pos":[221,267],"nodes":[{"content":"This instance is less than the object.","pos":[1,39]}]},{"content":"Zero","pos":[286,290]},{"content":" This instance is the same as the object.       ","pos":[306,354],"nodes":[{"content":"This instance is the same as the object.","pos":[1,41]}]},{"content":"Greater than zero","pos":[373,390]},{"content":" This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing \" name=\"Nothing \" href=\"\"></xref>in Visual Basic).       ","pos":[406,589],"nodes":[{"content":"This instance is greater than the object       -or-       The object is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing \" name=\"Nothing \" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>in Visual Basic).","pos":[1,176],"source":" This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing \" name=\"Nothing \" href=\"\"></xref>in Visual Basic)."}]}]},{"pos":[14852,14945],"content":"Divides the first <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter by the second.","needQuote":true,"needEscape":true,"source":"Divides the first <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter by the second."},{"pos":[15177,15240],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[15314,15377],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[15451,15624],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlInt64.Value*&gt; property contains the results of the division operation.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> property contains the results of the division operation."},{"pos":[16072,16236],"content":"Compares the supplied object parameter to the &lt;xref:System.Data.SqlTypes.SqlInt64.Value*&gt; property of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Compares the supplied object parameter to the <xref:System.Data.SqlTypes.SqlInt64.Value*> property of the <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> object."},{"pos":[16381,16407],"content":"The object to be compared.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to be compared.","pos":[0,26]}]},{"pos":[16466,16702],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if object is an instance of <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and the two are equal; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if object is an instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> and the two are equal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17275,17414],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether they are equal.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether they are equal."},{"pos":[17648,17711],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[17785,17848],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[17924,18208],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If either instance is null, then the <xref uid=\"langword_csharp_SqlInt64\" name=\"SqlInt64\" href=\"\"></xref> will be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two values are equal.","pos":[0,89],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[90,164],"source":" Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"If either instance is null, then the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlInt64\" name=\"SqlInt64\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> will be null.","pos":[165,284],"source":" If either instance is null, then the <xref uid=\"langword_csharp_SqlInt64\" name=\"SqlInt64\" href=\"\"></xref> will be null."}]},{"pos":[18633,18673],"content":"Returns the hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]},{"pos":[18808,18842],"content":"A 32-bit signed integer hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]},{"pos":[19367,19485],"content":"Returns the XML Schema definition language (XSD) of the specified <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the XML Schema definition language (XSD) of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[19704,19759],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[19831,19990],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the XSD of the specified <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> that indicates the XSD of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[20592,20753],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is greater than the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether the first is greater than the second."},{"pos":[20992,21055],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[21129,21192],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[21268,21766],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than the second instance.","pos":[0,174],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[175,239],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[240,498],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[22404,22577],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is greater than or equal to the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether the first is greater than or equal to the second."},{"pos":[22823,22886],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[22960,23023],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[23099,23609],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than or equal to the second instance.","pos":[0,186],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[187,251],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[252,510],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[24017,24135],"content":"Gets a Boolean value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure is null.","needQuote":true,"needEscape":true,"source":"Gets a Boolean value that indicates whether this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure is null."},{"pos":[24147,24235],"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling Null Values<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md)."},{"pos":[24345,24489],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if null.","pos":[0,69],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[70,144],"source":" Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[25072,25230],"content":"Performs a logical comparison on the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is less than the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison on the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether the first is less than the second."},{"pos":[25466,25529],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[25603,25666],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[25742,26237],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than the second instance.","pos":[0,171],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,236],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[237,495],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[26857,27027],"content":"Performs a logical comparison on the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is less than or equal to the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison on the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether the first is less than or equal to the second."},{"pos":[27270,27333],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[27407,27470],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[27546,28053],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than or equal to the second instance.","pos":[0,183],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[184,248],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[249,507],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[28465,28583],"content":"A constant representing the largest possible value for a <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A constant representing the largest possible value for a <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[28595,28644],"content":"The value of this constant is 2 <bpt id=\"p1\">&lt;sup&gt;</bpt>63<ept id=\"p1\">&lt;/sup&gt;</ept> -1.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The value of this constant is 2 <sup>63</sup> -1."},{"pos":[28804,28816],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29169,29288],"content":"A constant representing the smallest possible value for a <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A constant representing the smallest possible value for a <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[29300,29347],"content":"The value of this constant is -2 <bpt id=\"p1\">&lt;sup&gt;</bpt>63<ept id=\"p1\">&lt;/sup&gt;</ept>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The value of this constant is -2 <sup>63</sup>."},{"pos":[29507,29519],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30027,30150],"content":"Computes the remainder after dividing the first <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter by the second.","needQuote":true,"needEscape":true,"source":"Computes the remainder after dividing the first <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter by the second."},{"pos":[30379,30442],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[30516,30579],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[30653,30802],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlInt64.Value*&gt; property contains the remainder.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> property contains the remainder."},{"pos":[31377,31473],"content":"Divides two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values and returns the remainder.","needQuote":true,"needEscape":true,"source":"Divides two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> values and returns the remainder."},{"pos":[31485,31550],"content":"If either instance of <ph id=\"ph1\">`x`</ph> or <ph id=\"ph2\">`y`</ph> is null, the value will be null.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If either instance of `x` or `y` is null, the value will be null."},{"pos":[31783,31842],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> value."},{"pos":[31916,31975],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> value."},{"pos":[32049,32133],"content":"The remainder left after division is performed on <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">x</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">y</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The remainder left after division is performed on <code>x</code> and <code>y</code>."},{"pos":[32717,32811],"content":"Computes the product of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"Computes the product of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters."},{"pos":[33045,33108],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[33182,33245],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[33319,33533],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlInt64.Value*&gt; is equal to the product of the two <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> is equal to the product of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters."},{"pos":[34123,34224],"content":"Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.","pos":[0,101]}]},{"pos":[34461,34524],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[34598,34661],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[34737,35234],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are not equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,497],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[35624,35778],"content":"Represents a <bpt id=\"p1\">&lt;xref href=\"System.DBNull\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can be assigned to this instance of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Represents a <xref href=\"System.DBNull\"></xref> that can be assigned to this instance of the <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[35790,35963],"content":"Null functions as a constant for the <xref:System.Data.SqlTypes.SqlInt64> structure. For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Null functions as a constant for the &lt;xref:System.Data.SqlTypes.SqlInt64&gt; structure.","pos":[0,84],"source":"Null functions as a constant for the <xref:System.Data.SqlTypes.SqlInt64> structure."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling Null Values<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[85,173],"source":" For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[36119,36131],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36607,36719],"content":"Performs a bitwise one's complement operation on its <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand.","needQuote":true,"needEscape":true,"source":"Performs a bitwise one's complement operation on its <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> operand."},{"pos":[36926,36989],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[37063,37280],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlInt64.Value*&gt; is equal to the ones complement of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> is equal to the ones complement of the <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter."},{"pos":[37888,37978],"content":"Computes the sum of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"Computes the sum of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters."},{"pos":[38215,38278],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[38352,38415],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[38489,38699],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlInt64.Value*&gt; is equal to the sum of the two <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> is equal to the sum of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters."},{"pos":[39314,39406],"content":"Computes the bitwise AND of its <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"Computes the bitwise AND of its <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> operands."},{"pos":[39645,39708],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[39782,39845],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[39919,40037],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that contains the results of the bitwise AND operation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure that contains the results of the bitwise AND operation."},{"pos":[40649,40744],"content":"Computes the bitwise OR of its two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"Computes the bitwise OR of its two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> operands."},{"pos":[40982,41045],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[41119,41182],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[41256,41373],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that contains the results of the bitwise OR operation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure that contains the results of the bitwise OR operation."},{"pos":[41979,42072],"content":"Divides the first <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter by the second.","needQuote":true,"needEscape":true,"source":"Divides the first <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter by the second."},{"pos":[42309,42372],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[42446,42509],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[42583,42756],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlInt64.Value*&gt; property contains the results of the division operation.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> property contains the results of the division operation."},{"pos":[43361,43500],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether they are equal.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether they are equal."},{"pos":[43739,43802],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[43876,43939],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[44015,44512],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are not equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,497],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[45132,45201],"content":"Performs a bitwise exclusive-OR operation on the supplied parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs a bitwise exclusive-OR operation on the supplied parameters.","pos":[0,69]}]},{"pos":[45441,45504],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[45578,45641],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[45715,45833],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that contains the results of the bitwise XOR operation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure that contains the results of the bitwise XOR operation."},{"pos":[46626,46638],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46712,46724],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47514,47526],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47600,47612],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48395,48407],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48481,48493],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49210,49222],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49279,49291],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50067,50079],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50153,50165],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50948,50960],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51034,51046],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51829,51841],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51915,51927],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[52547,52708],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is greater than the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether the first is greater than the second."},{"pos":[52950,53013],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[53087,53150],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[53226,53724],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than the second instance.","pos":[0,174],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[175,239],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[240,498],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[54382,54555],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is greater than or equal to the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether the first is greater than or equal to the second."},{"pos":[54804,54867],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[54941,55004],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[55080,55590],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than or equal to the second instance.","pos":[0,186],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[187,251],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[252,510],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[56303,56315],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[56389,56401],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57111,57123],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57197,57209],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57919,57931],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[58005,58017],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[58642,58654],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[58728,58740],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[59355,59456],"content":"Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.","pos":[0,101]}]},{"pos":[59697,59760],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[59834,59897],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[59973,60470],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are not equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,497],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[61077,61235],"content":"Performs a logical comparison on the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is less than the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison on the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether the first is less than the second."},{"pos":[61474,61537],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[61611,61674],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[61750,62245],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than the second instance.","pos":[0,171],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,236],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[237,495],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[62885,63055],"content":"Performs a logical comparison on the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is less than or equal to the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison on the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether the first is less than or equal to the second."},{"pos":[63301,63364],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[63438,63501],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[63577,64084],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than or equal to the second instance.","pos":[0,183],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[184,248],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[249,507],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[64691,64814],"content":"Computes the remainder after dividing the first <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter by the second.","needQuote":true,"needEscape":true,"source":"Computes the remainder after dividing the first <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter by the second."},{"pos":[65050,65113],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[65187,65250],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[65324,65473],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlInt64.Value*&gt; property contains the remainder.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> property contains the remainder."},{"pos":[66077,66171],"content":"Computes the product of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"Computes the product of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters."},{"pos":[66408,66471],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[66545,66608],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[66682,66896],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlInt64.Value*&gt; is equal to the product of the two <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> is equal to the product of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters."},{"pos":[67444,67556],"content":"Performs a bitwise one's complement operation on its <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand.","needQuote":true,"needEscape":true,"source":"Performs a bitwise one's complement operation on its <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> operand."},{"pos":[67766,67829],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[67903,68120],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlInt64.Value*&gt; is equal to the ones complement of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> is equal to the ones complement of the <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter."},{"pos":[68746,68843],"content":"Subtracts the second <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter from the first.","needQuote":true,"needEscape":true,"source":"Subtracts the second <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter from the first."},{"pos":[69083,69146],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[69220,69283],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[69357,69531],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlInt64.Value*&gt; property equals the results of the subtraction operation.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> property equals the results of the subtraction operation."},{"pos":[70077,70224],"content":"The unary minus operator negates the &lt;xref:System.Data.SqlTypes.SqlInt64.Value*&gt; of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand.","needQuote":true,"needEscape":true,"source":"The unary minus operator negates the <xref:System.Data.SqlTypes.SqlInt64.Value*> of the <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> operand."},{"pos":[70433,70496],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[70570,70819],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlInt64.Value<bpt id=\"p2\">*</bpt>&gt; is equal to the negated &lt;xref:System.Data.SqlTypes.SqlInt64.Value<ept id=\"p2\">*</ept>&gt; of the <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> is equal to the negated <xref:System.Data.SqlTypes.SqlInt64.Value*> of the <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter."},{"pos":[71272,71373],"content":"Converts the <xref:System.String> representation of a number to its 64-bit signed integer equivalent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the &lt;xref:System.String&gt; representation of a number to its 64-bit signed integer equivalent.","pos":[0,101],"source":"Converts the <xref:System.String> representation of a number to its 64-bit signed integer equivalent."}]},{"pos":[71532,71570],"content":"The <xref:System.String> to be parsed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.String&gt; to be parsed.","pos":[0,38],"source":"The <xref:System.String> to be parsed."}]},{"pos":[71644,71748],"content":"A 64-bit signed integer equivalent to the value that is contained in the specified <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A 64-bit signed integer equivalent to the value that is contained in the specified &lt;xref:System.String&gt;.","pos":[0,104],"source":"A 64-bit signed integer equivalent to the value that is contained in the specified <xref:System.String>."}]},{"pos":[72330,72427],"content":"Subtracts the second <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter from the first.","needQuote":true,"needEscape":true,"source":"Subtracts the second <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter from the first."},{"pos":[72661,72724],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[72798,72861],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[72935,73109],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlInt64.Value*&gt; property equals the results of the subtraction operation.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> property equals the results of the subtraction operation."},{"pos":[73750,73860],"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]}]},{"pos":[74033,74107],"content":"An <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"></xref>."},{"pos":[74852,74962],"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]}]},{"pos":[75950,76060],"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]}]},{"pos":[76775,76906],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"pos":[77080,77292],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Data.SqlTypes.SqlInt64.Value*&gt; is non-zero; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if zero; otherwise Null.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Data.SqlTypes.SqlInt64.Value*> is non-zero; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if zero; otherwise Null."},{"pos":[77713,77841],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>."},{"pos":[78006,78280],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> equals the <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> of this <bpt id=\"p4\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> equals the <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[78713,78844],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlDecimal\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref>."},{"pos":[79018,79155],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDecimal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> equal to the value of this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>."},{"pos":[79586,79716],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>."},{"pos":[79887,80023],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> equal to the value of this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>."},{"pos":[80448,80577],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt16\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref>."},{"pos":[80745,80880],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt16\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> equal to the value of this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>."},{"pos":[81304,81433],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt32\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref>."},{"pos":[81601,81736],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> equal to the value of this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>."},{"pos":[82160,82289],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>."},{"pos":[82457,82592],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> equal to the value of this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>."},{"pos":[83021,83151],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlSingle\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref>."},{"pos":[83322,83458],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlSingle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> equal to the value of this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>."},{"pos":[83888,84018],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlString\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlString\"></xref>."},{"pos":[84189,84325],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlString\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> representing the value of this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlString\"></xref> representing the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>."},{"pos":[84740,84841],"content":"Converts this instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to &lt;xref:System.String&gt;.","needQuote":true,"needEscape":true,"source":"Converts this instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> to <xref:System.String>."},{"pos":[84977,85082],"content":"A &lt;xref:System.String&gt; representing the value of this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.String> representing the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>."},{"pos":[85475,85587],"content":"Gets the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure. This property is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","pos":[0,84],"source":"Gets the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"content":"This property is read-only.","pos":[85,112]}]},{"pos":[85694,85801],"content":"A long integer representing the value of this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A long integer representing the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[86358,86427],"content":"Performs a bitwise exclusive-OR operation on the supplied parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs a bitwise exclusive-OR operation on the supplied parameters.","pos":[0,69]}]},{"pos":[86656,86719],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[86793,86856],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[86930,87048],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that contains the results of the bitwise XOR operation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure that contains the results of the bitwise XOR operation."},{"pos":[87428,87616],"content":"Represents a zero value that can be assigned to the &lt;xref:System.Data.SqlTypes.SqlInt64.Value*&gt; property of an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Represents a zero value that can be assigned to the <xref:System.Data.SqlTypes.SqlInt64.Value*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure."},{"pos":[87628,87712],"content":"The Zero field is a constant for the <xref:System.Data.SqlTypes.SqlInt64> structure.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Zero field is a constant for the &lt;xref:System.Data.SqlTypes.SqlInt64&gt; structure.","pos":[0,84],"source":"The Zero field is a constant for the <xref:System.Data.SqlTypes.SqlInt64> structure."}]},{"pos":[87868,87880],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.SqlTypes.SqlInt64\n  id: SqlInt64\n  children:\n  - System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)\n  - System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)\n  - System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.Equals(System.Object)\n  - System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.GetHashCode\n  - System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  - System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.IsNull\n  - System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.MaxValue\n  - System.Data.SqlTypes.SqlInt64.MinValue\n  - System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.Null\n  - System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Int64)\n  - System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)\n  - System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)\n  - System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)\n  - System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.Parse(System.String)\n  - System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema\n  - System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  - System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  - System.Data.SqlTypes.SqlInt64.ToSqlBoolean\n  - System.Data.SqlTypes.SqlInt64.ToSqlByte\n  - System.Data.SqlTypes.SqlInt64.ToSqlDecimal\n  - System.Data.SqlTypes.SqlInt64.ToSqlDouble\n  - System.Data.SqlTypes.SqlInt64.ToSqlInt16\n  - System.Data.SqlTypes.SqlInt64.ToSqlInt32\n  - System.Data.SqlTypes.SqlInt64.ToSqlMoney\n  - System.Data.SqlTypes.SqlInt64.ToSqlSingle\n  - System.Data.SqlTypes.SqlInt64.ToSqlString\n  - System.Data.SqlTypes.SqlInt64.ToString\n  - System.Data.SqlTypes.SqlInt64.Value\n  - System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlInt64.Zero\n  langs:\n  - csharp\n  name: SqlInt64\n  nameWithType: SqlInt64\n  fullName: System.Data.SqlTypes.SqlInt64\n  type: Struct\n  summary: Represents a 64-bit signed integer to be stored in or retrieved from a database.\n  syntax:\n    content: >-\n      [System.Xml.Serialization.XmlSchemaProvider(\"GetXsdType\")]\n\n      public struct SqlInt64 : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.Data.SqlTypes.INullable\n  - System.IComparable\n  - System.Xml.Serialization.IXmlSerializable\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)\n  id: '#ctor(System.Int64)'\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: SqlInt64(Int64)\n  nameWithType: SqlInt64.SqlInt64(Int64)\n  fullName: System.Data.SqlTypes.SqlInt64.SqlInt64(Int64)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure using the supplied long integer.\n  syntax:\n    content: public SqlInt64 (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: A long integer.\n  overload: System.Data.SqlTypes.SqlInt64.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: Add(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.Add(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.Add(SqlInt64,SqlInt64)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the sum of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 Add (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> is equal to the sum of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters.\n  overload: System.Data.SqlTypes.SqlInt64.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: BitwiseAnd(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.BitwiseAnd(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.BitwiseAnd(SqlInt64,SqlInt64)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the bitwise AND of its <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> operands.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 BitwiseAnd (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure that contains the results of the bitwise AND operation.\n  overload: System.Data.SqlTypes.SqlInt64.BitwiseAnd*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: BitwiseOr(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.BitwiseOr(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.BitwiseOr(SqlInt64,SqlInt64)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the bitwise OR of its two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> operands.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 BitwiseOr (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure that contains the results of the bitwise OR operation.\n  overload: System.Data.SqlTypes.SqlInt64.BitwiseOr*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)\n  id: CompareTo(System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: CompareTo(SqlInt64)\n  nameWithType: SqlInt64.CompareTo(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.CompareTo(SqlInt64)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> instance to the supplied <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> and returns an indication of their relative values.\n  syntax:\n    content: public int CompareTo (System.Data.SqlTypes.SqlInt64 value);\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlInt64\n      description: The <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> to be compared.\n    return:\n      type: System.Int32\n      description: \"A signed number that indicates the relative values of the instance and the object.  \\n  \\n <table><thead><tr><th> Return value  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance is less than the object.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is the same as the object.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is greater than the object  \\n  \\n -or-  \\n  \\n The object is a null reference (<xref uid=\\\"langword_csharp_Nothing\\\" name=\\\"Nothing\\\" href=\\\"\\\"></xref> in Visual Basic).  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Data.SqlTypes.SqlInt64.CompareTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)\n  id: CompareTo(System.Object)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: CompareTo(Object)\n  nameWithType: SqlInt64.CompareTo(Object)\n  fullName: System.Data.SqlTypes.SqlInt64.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> instance to the supplied <xref:System.Object> and returns an indication of their relative values.\n  syntax:\n    content: public int CompareTo (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to be compared.\n    return:\n      type: System.Int32\n      description: \"A signed number that indicates the relative values of the instance and the object.  \\n  \\n <table><thead><tr><th> Return value  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance is less than the object.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is the same as the object.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is greater than the object  \\n  \\n -or-  \\n  \\n The object is a null reference (<xref uid=\\\"langword_csharp_Nothing \\\" name=\\\"Nothing \\\" href=\\\"\\\"></xref>in Visual Basic).  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Data.SqlTypes.SqlInt64.CompareTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: Divide(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.Divide(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.Divide(SqlInt64,SqlInt64)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Divides the first <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter by the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 Divide (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> property contains the results of the division operation.\n  overload: System.Data.SqlTypes.SqlInt64.Divide*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: SqlInt64.Equals(Object)\n  fullName: System.Data.SqlTypes.SqlInt64.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares the supplied object parameter to the <xref:System.Data.SqlTypes.SqlInt64.Value*> property of the <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> object.\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to be compared.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if object is an instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> and the two are equal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: Equals(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.Equals(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.Equals(SqlInt64,SqlInt64)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether they are equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If either instance is null, then the <xref uid=\"langword_csharp_SqlInt64\" name=\"SqlInt64\" href=\"\"></xref> will be null.\n  overload: System.Data.SqlTypes.SqlInt64.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.GetHashCode\n  id: GetHashCode\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: SqlInt64.GetHashCode()\n  fullName: System.Data.SqlTypes.SqlInt64.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Data.SqlTypes.SqlInt64.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: GetXsdType(XmlSchemaSet)\n  nameWithType: SqlInt64.GetXsdType(XmlSchemaSet)\n  fullName: System.Data.SqlTypes.SqlInt64.GetXsdType(XmlSchemaSet)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Returns the XML Schema definition language (XSD) of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  syntax:\n    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);\n    parameters:\n    - id: schemaSet\n      type: System.Xml.Schema.XmlSchemaSet\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n    return:\n      type: System.Xml.XmlQualifiedName\n      description: A <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> that indicates the XSD of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.GetXsdType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: GreaterThan(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.GreaterThan(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.GreaterThan(SqlInt64,SqlInt64)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether the first is greater than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: GreaterThanOrEqual(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.GreaterThanOrEqual(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(SqlInt64,SqlInt64)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether the first is greater than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.IsNull\n  id: IsNull\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: IsNull\n  nameWithType: SqlInt64.IsNull\n  fullName: System.Data.SqlTypes.SqlInt64.IsNull\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Gets a Boolean value that indicates whether this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure is null.\n  remarks: For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public bool IsNull { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.IsNull*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: LessThan(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.LessThan(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.LessThan(SqlInt64,SqlInt64)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison on the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether the first is less than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: LessThanOrEqual(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.LessThanOrEqual(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.LessThanOrEqual(SqlInt64,SqlInt64)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison on the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether the first is less than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.LessThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.MaxValue\n  id: MaxValue\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: MaxValue\n  nameWithType: SqlInt64.MaxValue\n  fullName: System.Data.SqlTypes.SqlInt64.MaxValue\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: A constant representing the largest possible value for a <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n  remarks: The value of this constant is 2 <sup>63</sup> -1.\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlInt64 MaxValue;\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.MinValue\n  id: MinValue\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: MinValue\n  nameWithType: SqlInt64.MinValue\n  fullName: System.Data.SqlTypes.SqlInt64.MinValue\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: A constant representing the smallest possible value for a <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n  remarks: The value of this constant is -2 <sup>63</sup>.\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlInt64 MinValue;\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: Mod(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.Mod(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.Mod(SqlInt64,SqlInt64)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the remainder after dividing the first <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter by the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 Mod (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> property contains the remainder.\n  overload: System.Data.SqlTypes.SqlInt64.Mod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: Modulus(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.Modulus(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.Modulus(SqlInt64,SqlInt64)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Divides two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> values and returns the remainder.\n  remarks: If either instance of `x` or `y` is null, the value will be null.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 Modulus (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> value.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> value.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: The remainder left after division is performed on <code>x</code> and <code>y</code>.\n  overload: System.Data.SqlTypes.SqlInt64.Modulus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: Multiply(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.Multiply(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.Multiply(SqlInt64,SqlInt64)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the product of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 Multiply (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> is equal to the product of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters.\n  overload: System.Data.SqlTypes.SqlInt64.Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: NotEquals(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.NotEquals(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.NotEquals(SqlInt64,SqlInt64)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.NotEquals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.Null\n  id: \"Null\"\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: \"Null\"\n  nameWithType: SqlInt64.Null\n  fullName: System.Data.SqlTypes.SqlInt64.Null\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Represents a <xref href=\"System.DBNull\"></xref> that can be assigned to this instance of the <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n  remarks: Null functions as a constant for the <xref:System.Data.SqlTypes.SqlInt64> structure. For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlInt64 Null;\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)\n  id: OnesComplement(System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: OnesComplement(SqlInt64)\n  nameWithType: SqlInt64.OnesComplement(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.OnesComplement(SqlInt64)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a bitwise one's complement operation on its <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> operand.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 OnesComplement (System.Data.SqlTypes.SqlInt64 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> is equal to the ones complement of the <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter.\n  overload: System.Data.SqlTypes.SqlInt64.OnesComplement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Addition(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_Addition(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Addition(SqlInt64,SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the sum of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_Addition (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> is equal to the sum of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters.\n  overload: System.Data.SqlTypes.SqlInt64.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_BitwiseAnd(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_BitwiseAnd(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(SqlInt64,SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the bitwise AND of its <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> operands.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_BitwiseAnd (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure that contains the results of the bitwise AND operation.\n  overload: System.Data.SqlTypes.SqlInt64.op_BitwiseAnd*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_BitwiseOr(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_BitwiseOr(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_BitwiseOr(SqlInt64,SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the bitwise OR of its two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> operands.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_BitwiseOr (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure that contains the results of the bitwise OR operation.\n  overload: System.Data.SqlTypes.SqlInt64.op_BitwiseOr*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Division(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_Division(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Division(SqlInt64,SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Divides the first <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter by the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_Division (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> property contains the results of the division operation.\n  overload: System.Data.SqlTypes.SqlInt64.op_Division*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Equality(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_Equality(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Equality(SqlInt64,SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether they are equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_ExclusiveOr(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_ExclusiveOr(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(SqlInt64,SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a bitwise exclusive-OR operation on the supplied parameters.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_ExclusiveOr (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure that contains the results of the bitwise XOR operation.\n  overload: System.Data.SqlTypes.SqlInt64.op_ExclusiveOr*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlInt64)\n  id: op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Explicit(SqlBoolean)\n  nameWithType: SqlInt64.op_Explicit(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_Explicit (System.Data.SqlTypes.SqlBoolean x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlInt64.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlInt64)\n  id: op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Explicit(SqlDecimal)\n  nameWithType: SqlInt64.op_Explicit(SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlDecimal)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_Explicit (System.Data.SqlTypes.SqlDecimal x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlInt64.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlInt64)\n  id: op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Explicit(SqlDouble)\n  nameWithType: SqlInt64.op_Explicit(SqlDouble)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlDouble)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_Explicit (System.Data.SqlTypes.SqlDouble x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlInt64.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Int64)\n  id: op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Int64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Explicit(SqlInt64)\n  nameWithType: SqlInt64.op_Explicit(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static long op_Explicit (System.Data.SqlTypes.SqlInt64 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n    return:\n      type: System.Int64\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlInt64.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlInt64)\n  id: op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Explicit(SqlMoney)\n  nameWithType: SqlInt64.op_Explicit(SqlMoney)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlMoney)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_Explicit (System.Data.SqlTypes.SqlMoney x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlInt64.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlInt64)\n  id: op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Explicit(SqlSingle)\n  nameWithType: SqlInt64.op_Explicit(SqlSingle)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlSingle)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_Explicit (System.Data.SqlTypes.SqlSingle x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlSingle\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlInt64.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlInt64)\n  id: op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Explicit(SqlString)\n  nameWithType: SqlInt64.op_Explicit(SqlString)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlString)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_Explicit (System.Data.SqlTypes.SqlString x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlString\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlInt64.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_GreaterThan(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_GreaterThan(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_GreaterThan(SqlInt64,SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether the first is greater than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.op_GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_GreaterThanOrEqual(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(SqlInt64,SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether the first is greater than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)\n  id: op_Implicit(System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Implicit(SqlByte)\n  nameWithType: SqlInt64.op_Implicit(SqlByte)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Implicit(SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_Implicit (System.Data.SqlTypes.SqlByte x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlInt64.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)\n  id: op_Implicit(System.Data.SqlTypes.SqlInt16)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Implicit(SqlInt16)\n  nameWithType: SqlInt64.op_Implicit(SqlInt16)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Implicit(SqlInt16)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_Implicit (System.Data.SqlTypes.SqlInt16 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt16\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlInt64.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)\n  id: op_Implicit(System.Data.SqlTypes.SqlInt32)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Implicit(SqlInt32)\n  nameWithType: SqlInt64.op_Implicit(SqlInt32)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Implicit(SqlInt32)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_Implicit (System.Data.SqlTypes.SqlInt32 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt32\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlInt64.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)\n  id: op_Implicit(System.Int64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Implicit(Int64)\n  nameWithType: SqlInt64.op_Implicit(Int64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Implicit(Int64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_Implicit (long x);\n    parameters:\n    - id: x\n      type: System.Int64\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlInt64.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Inequality(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_Inequality(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Inequality(SqlInt64,SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_LessThan(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_LessThan(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_LessThan(SqlInt64,SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison on the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether the first is less than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.op_LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_LessThanOrEqual(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(SqlInt64,SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison on the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters to determine whether the first is less than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Modulus(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_Modulus(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Modulus(SqlInt64,SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the remainder after dividing the first <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter by the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_Modulus (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> property contains the remainder.\n  overload: System.Data.SqlTypes.SqlInt64.op_Modulus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Multiply(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_Multiply(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Multiply(SqlInt64,SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the product of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_Multiply (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> is equal to the product of the two <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameters.\n  overload: System.Data.SqlTypes.SqlInt64.op_Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)\n  id: op_OnesComplement(System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_OnesComplement(SqlInt64)\n  nameWithType: SqlInt64.op_OnesComplement(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_OnesComplement(SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a bitwise one's complement operation on its <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> operand.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_OnesComplement (System.Data.SqlTypes.SqlInt64 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> is equal to the ones complement of the <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter.\n  overload: System.Data.SqlTypes.SqlInt64.op_OnesComplement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_Subtraction(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_Subtraction(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Subtraction(SqlInt64,SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Subtracts the second <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter from the first.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_Subtraction (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> property equals the results of the subtraction operation.\n  overload: System.Data.SqlTypes.SqlInt64.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)\n  id: op_UnaryNegation(System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: op_UnaryNegation(SqlInt64)\n  nameWithType: SqlInt64.op_UnaryNegation(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_UnaryNegation(SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The unary minus operator negates the <xref:System.Data.SqlTypes.SqlInt64.Value*> of the <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> operand.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 op_UnaryNegation (System.Data.SqlTypes.SqlInt64 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> is equal to the negated <xref:System.Data.SqlTypes.SqlInt64.Value*> of the <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter.\n  overload: System.Data.SqlTypes.SqlInt64.op_UnaryNegation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: SqlInt64.Parse(String)\n  fullName: System.Data.SqlTypes.SqlInt64.Parse(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts the <xref:System.String> representation of a number to its 64-bit signed integer equivalent.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 Parse (string s);\n    parameters:\n    - id: s\n      type: System.String\n      description: The <xref:System.String> to be parsed.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A 64-bit signed integer equivalent to the value that is contained in the specified <xref:System.String>.\n  overload: System.Data.SqlTypes.SqlInt64.Parse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: Subtract(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.Subtract(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.Subtract(SqlInt64,SqlInt64)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Subtracts the second <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> parameter from the first.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 Subtract (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref:System.Data.SqlTypes.SqlInt64.Value*> property equals the results of the subtraction operation.\n  overload: System.Data.SqlTypes.SqlInt64.Subtract*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema\n  id: System#Xml#Serialization#IXmlSerializable#GetSchema\n  isEii: true\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema()\n  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  fullName: System.Data.SqlTypes.SqlInt64.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();\n    parameters: []\n    return:\n      type: System.Xml.Schema.XmlSchema\n      description: An <xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  isEii: true\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  fullName: System.Data.SqlTypes.SqlInt64.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: <xref uid=\"langword_csharp_XmlReader\" name=\"XmlReader\" href=\"\"></xref>\n  overload: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  isEii: true\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  fullName: System.Data.SqlTypes.SqlInt64.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: <xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"></xref>\n  overload: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlBoolean\n  id: ToSqlBoolean\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: ToSqlBoolean()\n  nameWithType: SqlInt64.ToSqlBoolean()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlBoolean()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlBoolean ToSqlBoolean ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Data.SqlTypes.SqlInt64.Value*> is non-zero; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if zero; otherwise Null.\n  overload: System.Data.SqlTypes.SqlInt64.ToSqlBoolean*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlByte\n  id: ToSqlByte\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: ToSqlByte()\n  nameWithType: SqlInt64.ToSqlByte()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlByte()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlByte ToSqlByte ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> equals the <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlInt64.ToSqlByte*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlDecimal\n  id: ToSqlDecimal\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: ToSqlDecimal()\n  nameWithType: SqlInt64.ToSqlDecimal()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlDecimal()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlDecimal ToSqlDecimal ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: A new <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.ToSqlDecimal*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlDouble\n  id: ToSqlDouble\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: ToSqlDouble()\n  nameWithType: SqlInt64.ToSqlDouble()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlDouble()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlDouble ToSqlDouble ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: A new <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.ToSqlDouble*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlInt16\n  id: ToSqlInt16\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: ToSqlInt16()\n  nameWithType: SqlInt64.ToSqlInt16()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlInt16()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlInt16\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.ToSqlInt16*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlInt32\n  id: ToSqlInt32\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: ToSqlInt32()\n  nameWithType: SqlInt64.ToSqlInt32()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlInt32()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlInt32\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.ToSqlInt32*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlMoney\n  id: ToSqlMoney\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: ToSqlMoney()\n  nameWithType: SqlInt64.ToSqlMoney()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlMoney()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlMoney ToSqlMoney ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.ToSqlMoney*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlSingle\n  id: ToSqlSingle\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: ToSqlSingle()\n  nameWithType: SqlInt64.ToSqlSingle()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlSingle()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlSingle ToSqlSingle ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlSingle\n      description: A new <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.ToSqlSingle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlString\n  id: ToSqlString\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: ToSqlString()\n  nameWithType: SqlInt64.ToSqlString()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlString()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlString\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlString ToSqlString ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlString\n      description: A <xref href=\"System.Data.SqlTypes.SqlString\"></xref> representing the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.ToSqlString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.ToString\n  id: ToString\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: SqlInt64.ToString()\n  fullName: System.Data.SqlTypes.SqlInt64.ToString()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this instance of <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> to <xref:System.String>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref:System.String> representing the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>.\n  overload: System.Data.SqlTypes.SqlInt64.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.Value\n  id: Value\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: Value\n  nameWithType: SqlInt64.Value\n  fullName: System.Data.SqlTypes.SqlInt64.Value\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Gets the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure. This property is read-only.\n  syntax:\n    content: public long Value { get; }\n    return:\n      type: System.Int64\n      description: A long integer representing the value of this <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlInt64.Value*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  id: Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: Xor(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.Xor(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.Xor(SqlInt64,SqlInt64)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a bitwise exclusive-OR operation on the supplied parameters.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlInt64 Xor (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure that contains the results of the bitwise XOR operation.\n  overload: System.Data.SqlTypes.SqlInt64.Xor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlInt64.Zero\n  id: Zero\n  parent: System.Data.SqlTypes.SqlInt64\n  langs:\n  - csharp\n  name: Zero\n  nameWithType: SqlInt64.Zero\n  fullName: System.Data.SqlTypes.SqlInt64.Zero\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Represents a zero value that can be assigned to the <xref:System.Data.SqlTypes.SqlInt64.Value*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure.\n  remarks: The Zero field is a constant for the <xref:System.Data.SqlTypes.SqlInt64> structure.\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlInt64 Zero;\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: SqlInt64(Int64)\n  nameWithType: SqlInt64.SqlInt64(Int64)\n  fullName: System.Data.SqlTypes.SqlInt64.SqlInt64(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Add(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.Add(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.Add(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt64\n  nameWithType: SqlInt64\n  fullName: System.Data.SqlTypes.SqlInt64\n- uid: System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: BitwiseAnd(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.BitwiseAnd(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.BitwiseAnd(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: BitwiseOr(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.BitwiseOr(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.BitwiseOr(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: CompareTo(SqlInt64)\n  nameWithType: SqlInt64.CompareTo(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.CompareTo(SqlInt64)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: CompareTo(Object)\n  nameWithType: SqlInt64.CompareTo(Object)\n  fullName: System.Data.SqlTypes.SqlInt64.CompareTo(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Divide(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.Divide(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.Divide(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.Equals(System.Object)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: SqlInt64.Equals(Object)\n  fullName: System.Data.SqlTypes.SqlInt64.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Equals(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.Equals(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.Equals(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlBoolean\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBoolean\n  nameWithType: SqlBoolean\n  fullName: System.Data.SqlTypes.SqlBoolean\n- uid: System.Data.SqlTypes.SqlInt64.GetHashCode\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: SqlInt64.GetHashCode()\n  fullName: System.Data.SqlTypes.SqlInt64.GetHashCode()\n- uid: System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: GetXsdType(XmlSchemaSet)\n  nameWithType: SqlInt64.GetXsdType(XmlSchemaSet)\n  fullName: System.Data.SqlTypes.SqlInt64.GetXsdType(XmlSchemaSet)\n- uid: System.Xml.XmlQualifiedName\n  parent: System.Xml\n  isExternal: true\n  name: XmlQualifiedName\n  nameWithType: XmlQualifiedName\n  fullName: System.Xml.XmlQualifiedName\n- uid: System.Xml.Schema.XmlSchemaSet\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaSet\n  nameWithType: XmlSchemaSet\n  fullName: System.Xml.Schema.XmlSchemaSet\n- uid: System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: GreaterThan(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.GreaterThan(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.GreaterThan(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: GreaterThanOrEqual(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.GreaterThanOrEqual(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.IsNull\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: IsNull\n  nameWithType: SqlInt64.IsNull\n  fullName: System.Data.SqlTypes.SqlInt64.IsNull\n- uid: System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: LessThan(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.LessThan(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.LessThan(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: LessThanOrEqual(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.LessThanOrEqual(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.LessThanOrEqual(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.MaxValue\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: MaxValue\n  nameWithType: SqlInt64.MaxValue\n  fullName: System.Data.SqlTypes.SqlInt64.MaxValue\n- uid: System.Data.SqlTypes.SqlInt64.MinValue\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: MinValue\n  nameWithType: SqlInt64.MinValue\n  fullName: System.Data.SqlTypes.SqlInt64.MinValue\n- uid: System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Mod(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.Mod(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.Mod(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Modulus(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.Modulus(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.Modulus(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Multiply(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.Multiply(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.Multiply(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: NotEquals(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.NotEquals(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.NotEquals(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.Null\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: \"Null\"\n  nameWithType: SqlInt64.Null\n  fullName: System.Data.SqlTypes.SqlInt64.Null\n- uid: System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: OnesComplement(SqlInt64)\n  nameWithType: SqlInt64.OnesComplement(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.OnesComplement(SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Addition(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_Addition(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Addition(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_BitwiseAnd(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_BitwiseAnd(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_BitwiseOr(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_BitwiseOr(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_BitwiseOr(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Division(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_Division(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Division(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Equality(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_Equality(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Equality(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_ExclusiveOr(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_ExclusiveOr(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Explicit(SqlBoolean)\n  nameWithType: SqlInt64.op_Explicit(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlBoolean)\n- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Explicit(SqlDecimal)\n  nameWithType: SqlInt64.op_Explicit(SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDecimal\n  nameWithType: SqlDecimal\n  fullName: System.Data.SqlTypes.SqlDecimal\n- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Explicit(SqlDouble)\n  nameWithType: SqlInt64.op_Explicit(SqlDouble)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDouble\n  nameWithType: SqlDouble\n  fullName: System.Data.SqlTypes.SqlDouble\n- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Int64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Explicit(SqlInt64)\n  nameWithType: SqlInt64.op_Explicit(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Explicit(SqlMoney)\n  nameWithType: SqlInt64.op_Explicit(SqlMoney)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlMoney\n  nameWithType: SqlMoney\n  fullName: System.Data.SqlTypes.SqlMoney\n- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Explicit(SqlSingle)\n  nameWithType: SqlInt64.op_Explicit(SqlSingle)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlSingle)\n- uid: System.Data.SqlTypes.SqlSingle\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlSingle\n  nameWithType: SqlSingle\n  fullName: System.Data.SqlTypes.SqlSingle\n- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Explicit(SqlString)\n  nameWithType: SqlInt64.op_Explicit(SqlString)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlString)\n- uid: System.Data.SqlTypes.SqlString\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlString\n  nameWithType: SqlString\n  fullName: System.Data.SqlTypes.SqlString\n- uid: System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_GreaterThan(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_GreaterThan(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_GreaterThan(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_GreaterThanOrEqual(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_GreaterThanOrEqual(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Implicit(SqlByte)\n  nameWithType: SqlInt64.op_Implicit(SqlByte)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Implicit(SqlByte)\n- uid: System.Data.SqlTypes.SqlByte\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlByte\n  nameWithType: SqlByte\n  fullName: System.Data.SqlTypes.SqlByte\n- uid: System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Implicit(SqlInt16)\n  nameWithType: SqlInt64.op_Implicit(SqlInt16)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Implicit(SqlInt16)\n- uid: System.Data.SqlTypes.SqlInt16\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt16\n  nameWithType: SqlInt16\n  fullName: System.Data.SqlTypes.SqlInt16\n- uid: System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Implicit(SqlInt32)\n  nameWithType: SqlInt64.op_Implicit(SqlInt32)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Implicit(SqlInt32)\n- uid: System.Data.SqlTypes.SqlInt32\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt32\n  nameWithType: SqlInt32\n  fullName: System.Data.SqlTypes.SqlInt32\n- uid: System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Implicit(Int64)\n  nameWithType: SqlInt64.op_Implicit(Int64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Implicit(Int64)\n- uid: System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Inequality(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_Inequality(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Inequality(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_LessThan(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_LessThan(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_LessThan(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_LessThanOrEqual(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_LessThanOrEqual(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Modulus(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_Modulus(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Modulus(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Multiply(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_Multiply(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Multiply(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_OnesComplement(SqlInt64)\n  nameWithType: SqlInt64.op_OnesComplement(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_OnesComplement(SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Subtraction(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.op_Subtraction(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_Subtraction(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_UnaryNegation(SqlInt64)\n  nameWithType: SqlInt64.op_UnaryNegation(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.op_UnaryNegation(SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.Parse(System.String)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Parse(String)\n  nameWithType: SqlInt64.Parse(String)\n  fullName: System.Data.SqlTypes.SqlInt64.Parse(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Subtract(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.Subtract(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.Subtract(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema()\n  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  fullName: System.Data.SqlTypes.SqlInt64.System.Xml.Serialization.IXmlSerializable.GetSchema()\n- uid: System.Xml.Schema.XmlSchema\n  parent: System.Xml.Schema\n  isExternal: true\n  name: XmlSchema\n  nameWithType: XmlSchema\n  fullName: System.Xml.Schema.XmlSchema\n- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  fullName: System.Data.SqlTypes.SqlInt64.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  fullName: System.Data.SqlTypes.SqlInt64.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlBoolean\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlBoolean()\n  nameWithType: SqlInt64.ToSqlBoolean()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlBoolean()\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlByte\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlByte()\n  nameWithType: SqlInt64.ToSqlByte()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlByte()\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlDecimal\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlDecimal()\n  nameWithType: SqlInt64.ToSqlDecimal()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlDecimal()\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlDouble\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlDouble()\n  nameWithType: SqlInt64.ToSqlDouble()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlDouble()\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlInt16\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlInt16()\n  nameWithType: SqlInt64.ToSqlInt16()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlInt16()\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlInt32\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlInt32()\n  nameWithType: SqlInt64.ToSqlInt32()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlInt32()\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlMoney\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlMoney()\n  nameWithType: SqlInt64.ToSqlMoney()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlMoney()\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlSingle\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlSingle()\n  nameWithType: SqlInt64.ToSqlSingle()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlSingle()\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlString\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlString()\n  nameWithType: SqlInt64.ToSqlString()\n  fullName: System.Data.SqlTypes.SqlInt64.ToSqlString()\n- uid: System.Data.SqlTypes.SqlInt64.ToString\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToString()\n  nameWithType: SqlInt64.ToString()\n  fullName: System.Data.SqlTypes.SqlInt64.ToString()\n- uid: System.Data.SqlTypes.SqlInt64.Value\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Value\n  nameWithType: SqlInt64.Value\n  fullName: System.Data.SqlTypes.SqlInt64.Value\n- uid: System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Xor(SqlInt64,SqlInt64)\n  nameWithType: SqlInt64.Xor(SqlInt64,SqlInt64)\n  fullName: System.Data.SqlTypes.SqlInt64.Xor(SqlInt64,SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64.Zero\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Zero\n  nameWithType: SqlInt64.Zero\n  fullName: System.Data.SqlTypes.SqlInt64.Zero\n- uid: System.Data.SqlTypes.SqlInt64.#ctor*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: SqlInt64\n  nameWithType: SqlInt64.SqlInt64\n- uid: System.Data.SqlTypes.SqlInt64.Add*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Add\n  nameWithType: SqlInt64.Add\n- uid: System.Data.SqlTypes.SqlInt64.BitwiseAnd*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: BitwiseAnd\n  nameWithType: SqlInt64.BitwiseAnd\n- uid: System.Data.SqlTypes.SqlInt64.BitwiseOr*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: BitwiseOr\n  nameWithType: SqlInt64.BitwiseOr\n- uid: System.Data.SqlTypes.SqlInt64.CompareTo*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: CompareTo\n  nameWithType: SqlInt64.CompareTo\n- uid: System.Data.SqlTypes.SqlInt64.Divide*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Divide\n  nameWithType: SqlInt64.Divide\n- uid: System.Data.SqlTypes.SqlInt64.Equals*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Equals\n  nameWithType: SqlInt64.Equals\n- uid: System.Data.SqlTypes.SqlInt64.GetHashCode*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: GetHashCode\n  nameWithType: SqlInt64.GetHashCode\n- uid: System.Data.SqlTypes.SqlInt64.GetXsdType*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: GetXsdType\n  nameWithType: SqlInt64.GetXsdType\n- uid: System.Data.SqlTypes.SqlInt64.GreaterThan*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: GreaterThan\n  nameWithType: SqlInt64.GreaterThan\n- uid: System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: GreaterThanOrEqual\n  nameWithType: SqlInt64.GreaterThanOrEqual\n- uid: System.Data.SqlTypes.SqlInt64.IsNull*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: IsNull\n  nameWithType: SqlInt64.IsNull\n- uid: System.Data.SqlTypes.SqlInt64.LessThan*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: LessThan\n  nameWithType: SqlInt64.LessThan\n- uid: System.Data.SqlTypes.SqlInt64.LessThanOrEqual*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: LessThanOrEqual\n  nameWithType: SqlInt64.LessThanOrEqual\n- uid: System.Data.SqlTypes.SqlInt64.Mod*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Mod\n  nameWithType: SqlInt64.Mod\n- uid: System.Data.SqlTypes.SqlInt64.Modulus*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Modulus\n  nameWithType: SqlInt64.Modulus\n- uid: System.Data.SqlTypes.SqlInt64.Multiply*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Multiply\n  nameWithType: SqlInt64.Multiply\n- uid: System.Data.SqlTypes.SqlInt64.NotEquals*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: NotEquals\n  nameWithType: SqlInt64.NotEquals\n- uid: System.Data.SqlTypes.SqlInt64.OnesComplement*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: OnesComplement\n  nameWithType: SqlInt64.OnesComplement\n- uid: System.Data.SqlTypes.SqlInt64.op_Addition*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Addition\n  nameWithType: SqlInt64.op_Addition\n- uid: System.Data.SqlTypes.SqlInt64.op_BitwiseAnd*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_BitwiseAnd\n  nameWithType: SqlInt64.op_BitwiseAnd\n- uid: System.Data.SqlTypes.SqlInt64.op_BitwiseOr*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_BitwiseOr\n  nameWithType: SqlInt64.op_BitwiseOr\n- uid: System.Data.SqlTypes.SqlInt64.op_Division*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Division\n  nameWithType: SqlInt64.op_Division\n- uid: System.Data.SqlTypes.SqlInt64.op_Equality*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Equality\n  nameWithType: SqlInt64.op_Equality\n- uid: System.Data.SqlTypes.SqlInt64.op_ExclusiveOr*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_ExclusiveOr\n  nameWithType: SqlInt64.op_ExclusiveOr\n- uid: System.Data.SqlTypes.SqlInt64.op_Explicit*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Explicit\n  nameWithType: SqlInt64.op_Explicit\n- uid: System.Data.SqlTypes.SqlInt64.op_GreaterThan*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_GreaterThan\n  nameWithType: SqlInt64.op_GreaterThan\n- uid: System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_GreaterThanOrEqual\n  nameWithType: SqlInt64.op_GreaterThanOrEqual\n- uid: System.Data.SqlTypes.SqlInt64.op_Implicit*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Implicit\n  nameWithType: SqlInt64.op_Implicit\n- uid: System.Data.SqlTypes.SqlInt64.op_Inequality*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Inequality\n  nameWithType: SqlInt64.op_Inequality\n- uid: System.Data.SqlTypes.SqlInt64.op_LessThan*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_LessThan\n  nameWithType: SqlInt64.op_LessThan\n- uid: System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_LessThanOrEqual\n  nameWithType: SqlInt64.op_LessThanOrEqual\n- uid: System.Data.SqlTypes.SqlInt64.op_Modulus*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Modulus\n  nameWithType: SqlInt64.op_Modulus\n- uid: System.Data.SqlTypes.SqlInt64.op_Multiply*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Multiply\n  nameWithType: SqlInt64.op_Multiply\n- uid: System.Data.SqlTypes.SqlInt64.op_OnesComplement*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_OnesComplement\n  nameWithType: SqlInt64.op_OnesComplement\n- uid: System.Data.SqlTypes.SqlInt64.op_Subtraction*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: SqlInt64.op_Subtraction\n- uid: System.Data.SqlTypes.SqlInt64.op_UnaryNegation*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: op_UnaryNegation\n  nameWithType: SqlInt64.op_UnaryNegation\n- uid: System.Data.SqlTypes.SqlInt64.Parse*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Parse\n  nameWithType: SqlInt64.Parse\n- uid: System.Data.SqlTypes.SqlInt64.Subtract*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Subtract\n  nameWithType: SqlInt64.Subtract\n- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema\n  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.GetSchema\n- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml\n  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.ReadXml\n- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml\n  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.WriteXml\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlBoolean*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlBoolean\n  nameWithType: SqlInt64.ToSqlBoolean\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlByte*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlByte\n  nameWithType: SqlInt64.ToSqlByte\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlDecimal*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlDecimal\n  nameWithType: SqlInt64.ToSqlDecimal\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlDouble*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlDouble\n  nameWithType: SqlInt64.ToSqlDouble\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlInt16*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlInt16\n  nameWithType: SqlInt64.ToSqlInt16\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlInt32*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlInt32\n  nameWithType: SqlInt64.ToSqlInt32\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlMoney*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlMoney\n  nameWithType: SqlInt64.ToSqlMoney\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlSingle*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlSingle\n  nameWithType: SqlInt64.ToSqlSingle\n- uid: System.Data.SqlTypes.SqlInt64.ToSqlString*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToSqlString\n  nameWithType: SqlInt64.ToSqlString\n- uid: System.Data.SqlTypes.SqlInt64.ToString*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: ToString\n  nameWithType: SqlInt64.ToString\n- uid: System.Data.SqlTypes.SqlInt64.Value*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Value\n  nameWithType: SqlInt64.Value\n- uid: System.Data.SqlTypes.SqlInt64.Xor*\n  parent: System.Data.SqlTypes.SqlInt64\n  isExternal: false\n  name: Xor\n  nameWithType: SqlInt64.Xor\n"}