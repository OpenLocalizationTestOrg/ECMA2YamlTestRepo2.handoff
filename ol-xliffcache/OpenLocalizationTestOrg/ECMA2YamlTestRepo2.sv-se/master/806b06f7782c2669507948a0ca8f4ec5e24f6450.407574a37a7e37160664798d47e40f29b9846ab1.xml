{"nodes":[{"pos":[1046,1111],"content":"Creates a URL that corresponds to specified URL parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a URL that corresponds to specified URL parameter values.","pos":[0,65]}]},{"pos":[1123,1283],"content":"The RouteUrlExpressionBuilder class makes it possible to set the property of a server control to the URL of a route by providing a list of URL parameter values.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RouteUrlExpressionBuilder class makes it possible to set the property of a server control to the URL of a route by providing a list of URL parameter values.","pos":[0,160]}]},{"pos":[3468,3578],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Compilation.RouteUrlExpressionBuilder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Compilation.RouteUrlExpressionBuilder\"></xref> class."},{"pos":[4601,4692],"content":"Creates a URL that corresponds to specified URL parameter values and to a route URL format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a URL that corresponds to specified URL parameter values and to a route URL format.","pos":[0,91]}]},{"pos":[4705,5369],"content":"ASP.NET calls this method when an expression of the following form is encountered in markup:       `<%$ RouteUrl: urlparameter=value %>`       This method generates the appropriate URL for the specified route-key values for the current <xref:System.Web.Routing.Route> object. This method overrides the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method. It gets from the `entry` parameter a reference to the control to which the expression is bound, it gets from the `context` parameter the expression to be evaluated, and it calls the <xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A> method to generate the URL.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"ASP.NET calls this method when an expression of the following form is encountered in markup:       <ph id=\"ph1\">`&lt;%$ RouteUrl: urlparameter=value %&gt;`</ph>       This method generates the appropriate URL for the specified route-key values for the current &lt;xref:System.Web.Routing.Route&gt; object.","pos":[0,275],"source":"ASP.NET calls this method when an expression of the following form is encountered in markup:       `<%$ RouteUrl: urlparameter=value %>`       This method generates the appropriate URL for the specified route-key values for the current <xref:System.Web.Routing.Route> object."},{"content":"This method overrides the &lt;xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A&gt; method.","pos":[276,379],"source":" This method overrides the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method."},{"content":"It gets from the <ph id=\"ph1\">`entry`</ph> parameter a reference to the control to which the expression is bound, it gets from the <ph id=\"ph2\">`context`</ph> parameter the expression to be evaluated, and it calls the &lt;xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A&gt; method to generate the URL.","pos":[380,660],"source":" It gets from the `entry` parameter a reference to the control to which the expression is bound, it gets from the `context` parameter the expression to be evaluated, and it calls the <xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A> method to generate the URL."}]},{"pos":[5647,5679],"content":"Not used in this implementation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not used in this implementation.","pos":[0,32]}]},{"pos":[5760,5805],"content":"The property that the expression is bound to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property that the expression is bound to.","pos":[0,45]}]},{"pos":[5872,5904],"content":"Not used in this implementation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not used in this implementation.","pos":[0,32]}]},{"pos":[6002,6037],"content":"Properties for the control or page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Properties for the control or page.","pos":[0,35]}]},{"pos":[6095,6412],"content":"The URL that corresponds to the specified URL parameter values and to the selected route. The route is selected by matching route URL patterns to the specified list of parameters. In case more than one route matches a specified list of parameters, a route name can also be specified to indicate which route to select.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL that corresponds to the specified URL parameter values and to the selected route. The route is selected by matching route URL patterns to the specified list of parameters. In case more than one route matches a specified list of parameters, a route name can also be specified to indicate which route to select.","pos":[0,317],"nodes":[{"content":"The URL that corresponds to the specified URL parameter values and to the selected route.","pos":[0,89]},{"content":"The route is selected by matching route URL patterns to the specified list of parameters.","pos":[90,179]},{"content":"In case more than one route matches a specified list of parameters, a route name can also be specified to indicate which route to select.","pos":[180,317]}]}]},{"pos":[7315,7417],"content":"Returns a code expression that is used to perform the property assignment in the generated page class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a code expression that is used to perform the property assignment in the generated page class.","pos":[0,102]}]},{"pos":[7429,7660],"content":"This method is called when the CodeDOM is created for a page or control. The <xref:System.CodeDom.CodeExpression> object that is returned represents the code expression to add to the property assignment in the generated page class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called when the CodeDOM is created for a page or control. The <xref:System.CodeDom.CodeExpression> object that is returned represents the code expression to add to the property assignment in the generated page class.","pos":[0,231],"nodes":[{"content":"This method is called when the CodeDOM is created for a page or control.","pos":[0,72]},{"content":"The &lt;xref:System.CodeDom.CodeExpression&gt; object that is returned represents the code expression to add to the property assignment in the generated page class.","pos":[73,231],"source":" The <xref:System.CodeDom.CodeExpression> object that is returned represents the code expression to add to the property assignment in the generated page class."}]}]},{"pos":[7962,8007],"content":"The property that the expression is bound to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property that the expression is bound to.","pos":[0,45]}]},{"pos":[8074,8209],"content":"The object that represents parsed data as returned by <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that represents parsed data as returned by &lt;xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*&gt;.","pos":[0,135],"source":"The object that represents parsed data as returned by <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>."}]},{"pos":[8307,8342],"content":"Properties for the control or page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Properties for the control or page.","pos":[0,35]}]},{"pos":[8416,8518],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that is used in the property assignment.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> instance that is used in the property assignment."},{"pos":[9164,9242],"content":"Creates a URL that corresponds to specified route keys for a route URL format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a URL that corresponds to specified route keys for a route URL format.","pos":[0,78]}]},{"pos":[9254,9621],"content":"This method generates the appropriate value for the URL by calling the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method of the <xref:System.Web.Routing.RouteCollection> object. It gets the <xref:System.Web.Routing.RequestContext> object from the `control` parameter, and it parses the route name and route parameters from the `expression` parameter.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method generates the appropriate value for the URL by calling the &lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A&gt; method of the &lt;xref:System.Web.Routing.RouteCollection&gt; object.","pos":[0,194],"source":"This method generates the appropriate value for the URL by calling the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method of the <xref:System.Web.Routing.RouteCollection> object."},{"content":"It gets the &lt;xref:System.Web.Routing.RequestContext&gt; object from the <ph id=\"ph1\">`control`</ph> parameter, and it parses the route name and route parameters from the <ph id=\"ph2\">`expression`</ph> parameter.","pos":[195,367],"source":" It gets the <xref:System.Web.Routing.RequestContext> object from the `control` parameter, and it parses the route name and route parameters from the `expression` parameter."}]},{"pos":[9817,9861],"content":"The control that the expression is bound to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control that the expression is bound to.","pos":[0,44]}]},{"pos":[9928,9966],"content":"The expression as specified in markup.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression as specified in markup.","pos":[0,38]}]},{"pos":[10024,10127],"content":"The URL that corresponds to the route URL format of the current <xref:System.Web.Routing.Route> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL that corresponds to the route URL format of the current &lt;xref:System.Web.Routing.Route&gt; object.","pos":[0,103],"source":"The URL that corresponds to the route URL format of the current <xref:System.Web.Routing.Route> object."}]},{"pos":[10318,10417],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">control</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>control</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10528,10711],"content":"The method was unable to parse the expression that was specified in markup. For more information, see <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method was unable to parse the expression that was specified in markup. For more information, see <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>.","pos":[0,183],"nodes":[{"content":"The method was unable to parse the expression that was specified in markup.","pos":[0,75]},{"content":"For more information, see &lt;xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*&gt;.","pos":[76,183],"source":" For more information, see <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>."}]}]},{"pos":[11165,11263],"content":"Gets a value that indicates whether an expression can be evaluated in a page that is not compiled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether an expression can be evaluated in a page that is not compiled.","pos":[0,98]}]},{"pos":[11275,11708],"content":"The SupportsEvaluate property indicates whether the <xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A> method has been implemented in the class and can return a value for the expression in a page that is not compiled. The <xref:System.Web.Compilation.RouteUrlExpressionBuilder> class can evaluate an expression in a page that is not compiled. Therefore, the SupportsEvaluate property always returns `true`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SupportsEvaluate property indicates whether the &lt;xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A&gt; method has been implemented in the class and can return a value for the expression in a page that is not compiled.","pos":[0,244],"source":"The SupportsEvaluate property indicates whether the <xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A> method has been implemented in the class and can return a value for the expression in a page that is not compiled."},{"content":"The &lt;xref:System.Web.Compilation.RouteUrlExpressionBuilder&gt; class can evaluate an expression in a page that is not compiled.","pos":[245,369],"source":" The <xref:System.Web.Compilation.RouteUrlExpressionBuilder> class can evaluate an expression in a page that is not compiled."},{"content":"Therefore, the SupportsEvaluate property always returns <ph id=\"ph1\">`true`</ph>.","pos":[370,433],"source":" Therefore, the SupportsEvaluate property always returns `true`."}]},{"pos":[11837,11905],"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[12736,12834],"content":"Parses an expression into a collection of route keys and values, and optionally into a route name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Parses an expression into a collection of route keys and values, and optionally into a route name.","pos":[0,98]}]},{"pos":[12847,13472],"content":"The TryParseRouteExpression method strips leading and trailing spaces from the expression, and then splits it into key/value pairs by using commas as delimiters. If the route key named `RouteName` is found, that value is passed back in the `routeName` parameter and not in `routeValues`. Otherwise, `null` is returned for `routeName`. Leading and trailing spaces are also stripped from individual keys and values.       The TryParseRouteExpression method returns `false` if the expression is not composed of at least one key/value pair that is in the format *key*`=`*value*, and that uses commas to separate multiple pairs.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TryParseRouteExpression method strips leading and trailing spaces from the expression, and then splits it into key/value pairs by using commas as delimiters.","pos":[0,161]},{"content":"If the route key named <ph id=\"ph1\">`RouteName`</ph> is found, that value is passed back in the <ph id=\"ph2\">`routeName`</ph> parameter and not in <ph id=\"ph3\">`routeValues`</ph>.","pos":[162,287],"source":" If the route key named `RouteName` is found, that value is passed back in the `routeName` parameter and not in `routeValues`."},{"content":"Otherwise, <ph id=\"ph1\">`null`</ph> is returned for <ph id=\"ph2\">`routeName`</ph>.","pos":[288,334],"source":" Otherwise, `null` is returned for `routeName`."},{"content":"Leading and trailing spaces are also stripped from individual keys and values.","pos":[335,413]},{"content":"The TryParseRouteExpression method returns <ph id=\"ph1\">`false`</ph> if the expression is not composed of at least one key/value pair that is in the format <bpt id=\"p1\">*</bpt>key<ept id=\"p1\">*</ept><ph id=\"ph2\">`=`</ph><bpt id=\"p2\">*</bpt>value<ept id=\"p2\">*</ept>, and that uses commas to separate multiple pairs.","pos":[420,623],"source":"       The TryParseRouteExpression method returns `false` if the expression is not composed of at least one key/value pair that is in the format *key*`=`*value*, and that uses commas to separate multiple pairs."}]},{"pos":[13718,13756],"content":"The expression as specified in markup.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression as specified in markup.","pos":[0,38]}]},{"pos":[13850,13907],"content":"The collection of route keys and their associated values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of route keys and their associated values.","pos":[0,57]}]},{"pos":[13973,14151],"content":"When this method returns, contains a string that represents the name of the route, if `expression` contains a route key named `RouteName`. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a string that represents the name of the route, if <ph id=\"ph1\">`expression`</ph> contains a route key named <ph id=\"ph2\">`RouteName`</ph>.","pos":[0,138],"source":"When this method returns, contains a string that represents the name of the route, if `expression` contains a route key named `RouteName`."},{"content":"This parameter is passed uninitialized.","pos":[139,178]}]},{"pos":[14210,14372],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if parsing was successful; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if parsing was successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder\n  id: RouteUrlExpressionBuilder\n  children:\n  - System.Web.Compilation.RouteUrlExpressionBuilder.#ctor\n  - System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)\n  - System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)\n  - System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)\n  - System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate\n  - System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)\n  langs:\n  - csharp\n  name: RouteUrlExpressionBuilder\n  nameWithType: RouteUrlExpressionBuilder\n  fullName: System.Web.Compilation.RouteUrlExpressionBuilder\n  type: Class\n  summary: Creates a URL that corresponds to specified URL parameter values.\n  remarks: The RouteUrlExpressionBuilder class makes it possible to set the property of a server control to the URL of a route by providing a list of URL parameter values.\n  example:\n  - \"The following example shows how to create markup that generates a hyperlink with a URL that is formatted for a route. The route is defined by using `http://www.contoso.com/search/{searchterm}` as the URL pattern.  \\n  \\n```  \\n<asp:HyperLink ID=\\\"HyperLink1\\\" runat=\\\"server\\\"  \\n               NavigateUrl=\\\"<%$ RouteUrl:searchterm=Bicycles %>\\\">  \\n  Search for Bicycles  \\n</asp:HyperLink>  \\n```  \\n  \\n The URL generated for this hyperlink would be `http://www.contoso.com/search/Bicycles`.  \\n  \\n If the URL parameters provided to the `RouteUrl` expression are not sufficient to uniquely identify a route, you must include the route name. For example, if a Web application has two routes with `searchterm` as the sole URL parameter, the routes would have to be defined by using route names, and the hyperlink markup would resemble the following example:  \\n  \\n```  \\n<asp:HyperLink ID=\\\"HyperLink1\\\" runat=\\\"server\\\"  \\n               NavigateUrl=\\\"<%$ RouteUrl:searchterm=Bicycles,  \\n               routename=BasicSearchRoute %>\\\">  \\n  Search for Bicycles  \\n</asp:HyperLink>  \\n```\"\n  syntax:\n    content: >-\n      [System.Web.Compilation.ExpressionEditor(\"System.Web.UI.Design.RouteUrlExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      [System.Web.Compilation.ExpressionPrefix(\"Routes\")]\n\n      public class RouteUrlExpressionBuilder : System.Web.Compilation.ExpressionBuilder\n  inheritance:\n  - System.Object\n  - System.Web.Compilation.ExpressionBuilder\n  implements: []\n  inheritedMembers:\n  - System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)\n  platform:\n  - net462\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor\n  id: '#ctor'\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  langs:\n  - csharp\n  name: RouteUrlExpressionBuilder()\n  nameWithType: RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()\n  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Initializes a new instance of the <xref href=\"System.Web.Compilation.RouteUrlExpressionBuilder\"></xref> class.\n  syntax:\n    content: public RouteUrlExpressionBuilder ();\n    parameters: []\n  overload: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)\n  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  langs:\n  - csharp\n  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)\n  nameWithType: RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)\n  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Creates a URL that corresponds to specified URL parameter values and to a route URL format.\n  remarks: \"ASP.NET calls this method when an expression of the following form is encountered in markup:  \\n  \\n `<%$ RouteUrl: urlparameter=value %>`  \\n  \\n This method generates the appropriate URL for the specified route-key values for the current <xref:System.Web.Routing.Route> object. This method overrides the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method. It gets from the `entry` parameter a reference to the control to which the expression is bound, it gets from the `context` parameter the expression to be evaluated, and it calls the <xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A> method to generate the URL.\"\n  syntax:\n    content: public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);\n    parameters:\n    - id: target\n      type: System.Object\n      description: Not used in this implementation.\n    - id: entry\n      type: System.Web.UI.BoundPropertyEntry\n      description: The property that the expression is bound to.\n    - id: parsedData\n      type: System.Object\n      description: Not used in this implementation.\n    - id: context\n      type: System.Web.Compilation.ExpressionBuilderContext\n      description: Properties for the control or page.\n    return:\n      type: System.Object\n      description: The URL that corresponds to the specified URL parameter values and to the selected route. The route is selected by matching route URL patterns to the specified list of parameters. In case more than one route matches a specified list of parameters, a route name can also be specified to indicate which route to select.\n  overload: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)\n  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  langs:\n  - csharp\n  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)\n  nameWithType: RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)\n  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Returns a code expression that is used to perform the property assignment in the generated page class.\n  remarks: This method is called when the CodeDOM is created for a page or control. The <xref:System.CodeDom.CodeExpression> object that is returned represents the code expression to add to the property assignment in the generated page class.\n  syntax:\n    content: public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);\n    parameters:\n    - id: entry\n      type: System.Web.UI.BoundPropertyEntry\n      description: The property that the expression is bound to.\n    - id: parsedData\n      type: System.Object\n      description: The object that represents parsed data as returned by <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>.\n    - id: context\n      type: System.Web.Compilation.ExpressionBuilderContext\n      description: Properties for the control or page.\n    return:\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> instance that is used in the property assignment.\n  overload: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)\n  id: GetRouteUrl(System.Web.UI.Control,System.String)\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  langs:\n  - csharp\n  name: GetRouteUrl(Control,String)\n  nameWithType: RouteUrlExpressionBuilder.GetRouteUrl(Control,String)\n  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(Control,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Creates a URL that corresponds to specified route keys for a route URL format.\n  remarks: This method generates the appropriate value for the URL by calling the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method of the <xref:System.Web.Routing.RouteCollection> object. It gets the <xref:System.Web.Routing.RequestContext> object from the `control` parameter, and it parses the route name and route parameters from the `expression` parameter.\n  syntax:\n    content: public static string GetRouteUrl (System.Web.UI.Control control, string expression);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control that the expression is bound to.\n    - id: expression\n      type: System.String\n      description: The expression as specified in markup.\n    return:\n      type: System.String\n      description: The URL that corresponds to the route URL format of the current <xref:System.Web.Routing.Route> object.\n  overload: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>control</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The method was unable to parse the expression that was specified in markup. For more information, see <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>.\n  platform:\n  - net462\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate\n  id: SupportsEvaluate\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  langs:\n  - csharp\n  name: SupportsEvaluate\n  nameWithType: RouteUrlExpressionBuilder.SupportsEvaluate\n  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Gets a value that indicates whether an expression can be evaluated in a page that is not compiled.\n  remarks: The SupportsEvaluate property indicates whether the <xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A> method has been implemented in the class and can return a value for the expression in a page that is not compiled. The <xref:System.Web.Compilation.RouteUrlExpressionBuilder> class can evaluate an expression in a page that is not compiled. Therefore, the SupportsEvaluate property always returns `true`.\n  syntax:\n    content: public override bool SupportsEvaluate { get; }\n    return:\n      type: System.Boolean\n      description: Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)\n  id: TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  langs:\n  - csharp\n  name: TryParseRouteExpression(String,RouteValueDictionary,String)\n  nameWithType: RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)\n  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Parses an expression into a collection of route keys and values, and optionally into a route name.\n  remarks: \"The TryParseRouteExpression method strips leading and trailing spaces from the expression, and then splits it into key/value pairs by using commas as delimiters. If the route key named `RouteName` is found, that value is passed back in the `routeName` parameter and not in `routeValues`. Otherwise, `null` is returned for `routeName`. Leading and trailing spaces are also stripped from individual keys and values.  \\n  \\n The TryParseRouteExpression method returns `false` if the expression is not composed of at least one key/value pair that is in the format *key*`=`*value*, and that uses commas to separate multiple pairs.\"\n  syntax:\n    content: public static bool TryParseRouteExpression (string expression, System.Web.Routing.RouteValueDictionary routeValues, out string routeName);\n    parameters:\n    - id: expression\n      type: System.String\n      description: The expression as specified in markup.\n    - id: routeValues\n      type: System.Web.Routing.RouteValueDictionary\n      description: The collection of route keys and their associated values.\n    - id: routeName\n      type: System.String\n      description: When this method returns, contains a string that represents the name of the route, if `expression` contains a route key named `RouteName`. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if parsing was successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.Compilation.ExpressionBuilder\n  isExternal: false\n  name: System.Web.Compilation.ExpressionBuilder\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  isExternal: false\n  name: RouteUrlExpressionBuilder()\n  nameWithType: RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()\n  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  isExternal: false\n  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)\n  nameWithType: RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)\n  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.UI.BoundPropertyEntry\n  parent: System.Web.UI\n  isExternal: false\n  name: BoundPropertyEntry\n  nameWithType: BoundPropertyEntry\n  fullName: System.Web.UI.BoundPropertyEntry\n- uid: System.Web.Compilation.ExpressionBuilderContext\n  parent: System.Web.Compilation\n  isExternal: false\n  name: ExpressionBuilderContext\n  nameWithType: ExpressionBuilderContext\n  fullName: System.Web.Compilation.ExpressionBuilderContext\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  isExternal: false\n  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)\n  nameWithType: RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)\n  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)\n- uid: System.CodeDom.CodeExpression\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeExpression\n  nameWithType: CodeExpression\n  fullName: System.CodeDom.CodeExpression\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  isExternal: false\n  name: GetRouteUrl(Control,String)\n  nameWithType: RouteUrlExpressionBuilder.GetRouteUrl(Control,String)\n  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(Control,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.Control\n  parent: System.Web.UI\n  isExternal: false\n  name: Control\n  nameWithType: Control\n  fullName: System.Web.UI.Control\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  isExternal: false\n  name: SupportsEvaluate\n  nameWithType: RouteUrlExpressionBuilder.SupportsEvaluate\n  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  isExternal: false\n  name: TryParseRouteExpression(String,RouteValueDictionary,String)\n  nameWithType: RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)\n  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)\n- uid: System.Web.Routing.RouteValueDictionary\n  parent: System.Web.Routing\n  isExternal: true\n  name: RouteValueDictionary\n  nameWithType: RouteValueDictionary\n  fullName: System.Web.Routing.RouteValueDictionary\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor*\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  isExternal: false\n  name: RouteUrlExpressionBuilder\n  nameWithType: RouteUrlExpressionBuilder.RouteUrlExpressionBuilder\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression*\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  isExternal: false\n  name: EvaluateExpression\n  nameWithType: RouteUrlExpressionBuilder.EvaluateExpression\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression*\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  isExternal: false\n  name: GetCodeExpression\n  nameWithType: RouteUrlExpressionBuilder.GetCodeExpression\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl*\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  isExternal: false\n  name: GetRouteUrl\n  nameWithType: RouteUrlExpressionBuilder.GetRouteUrl\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate*\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  isExternal: false\n  name: SupportsEvaluate\n  nameWithType: RouteUrlExpressionBuilder.SupportsEvaluate\n- uid: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*\n  parent: System.Web.Compilation.RouteUrlExpressionBuilder\n  isExternal: false\n  name: TryParseRouteExpression\n  nameWithType: RouteUrlExpressionBuilder.TryParseRouteExpression\n"}