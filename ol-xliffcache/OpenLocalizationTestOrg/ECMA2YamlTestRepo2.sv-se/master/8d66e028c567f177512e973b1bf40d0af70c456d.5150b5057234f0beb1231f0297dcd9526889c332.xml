{"nodes":[{"pos":[896,1052],"content":"Contains the results from executing the <bpt id=\"p1\">&lt;xref href=\"System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> against an instance store.","needQuote":true,"needEscape":true,"source":"Contains the results from executing the <xref href=\"System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand\"></xref> against an instance store."},{"pos":[1065,3069],"content":"An instance store should periodically search for activatable workflow instances that belong to a workflow host that uses the store. It should raise the <xref:System.Activities.DurableInstancing.HasActivatableWorkflowEvent> when it finds an activatable instance in the persistence store. If the instance store does not find an activatable instance in the persistence store, it should continue to monitor the persistence store for any activatable instances.       After raising the HasActivatableWorkflowEvent, the instance store should stop monitoring the persistence store for activatable instances until it receives and executes the <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand>. The monitoring continues only if the command execution does not return any activatable workflow instances.       When a generic host receives this event, it executes the <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand> against the instance store to obtain activation parameters required to create a workflow host. The generic host uses these activation parameters to create a workflow host, which in turn loads and runs the service instance. The activation parameters for the WAS activation type are: Site Name, Application Path (relative to the site), and Service Path (relative to the application). An instance store could return multiple sets of these three activation parameters.       A generic host is a host that has an XName parameter named **ActivationType**, which should be set to a value supported by the instance store. Currently, the SQL Workflow Instance Store supports generic hosts with ActivationType parameter set to value: **WAS**. If the ActivationType is not set at all, the SQL Workflow Instance Store treats the host as a generic host.      > [!NOTE] >  The Workflow Management Service that ships with the code named “Dublin” (Application Server Extensions for .NET 4.0) is a generic host that has the activation type set to **WAS**.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An instance store should periodically search for activatable workflow instances that belong to a workflow host that uses the store.","pos":[0,131]},{"content":"It should raise the &lt;xref:System.Activities.DurableInstancing.HasActivatableWorkflowEvent&gt; when it finds an activatable instance in the persistence store.","pos":[132,286],"source":" It should raise the <xref:System.Activities.DurableInstancing.HasActivatableWorkflowEvent> when it finds an activatable instance in the persistence store."},{"content":"If the instance store does not find an activatable instance in the persistence store, it should continue to monitor the persistence store for any activatable instances.","pos":[287,455]},{"content":"After raising the HasActivatableWorkflowEvent, the instance store should stop monitoring the persistence store for activatable instances until it receives and executes the &lt;xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand&gt;.","pos":[462,710],"source":"       After raising the HasActivatableWorkflowEvent, the instance store should stop monitoring the persistence store for activatable instances until it receives and executes the <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand>."},{"content":"The monitoring continues only if the command execution does not return any activatable workflow instances.","pos":[711,817]},{"content":"When a generic host receives this event, it executes the &lt;xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand&gt; against the instance store to obtain activation parameters required to create a workflow host.","pos":[824,1051],"source":"       When a generic host receives this event, it executes the <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand> against the instance store to obtain activation parameters required to create a workflow host."},{"content":"The generic host uses these activation parameters to create a workflow host, which in turn loads and runs the service instance.","pos":[1052,1179]},{"content":"The activation parameters for the WAS activation type are: Site Name, Application Path (relative to the site), and Service Path (relative to the application).","pos":[1180,1338]},{"content":"An instance store could return multiple sets of these three activation parameters.","pos":[1339,1421]},{"content":"A generic host is a host that has an XName parameter named <bpt id=\"p1\">**</bpt>ActivationType<ept id=\"p1\">**</ept>, which should be set to a value supported by the instance store.","pos":[1428,1570],"source":"       A generic host is a host that has an XName parameter named **ActivationType**, which should be set to a value supported by the instance store."},{"content":"Currently, the SQL Workflow Instance Store supports generic hosts with ActivationType parameter set to value: <bpt id=\"p1\">**</bpt>WAS<ept id=\"p1\">**</ept>.","pos":[1571,1689],"source":" Currently, the SQL Workflow Instance Store supports generic hosts with ActivationType parameter set to value: **WAS**."},{"content":"If the ActivationType is not set at all, the SQL Workflow Instance Store treats the host as a generic host.","pos":[1690,1797]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The Workflow Management Service that ships with the code named “Dublin” (Application Server Extensions for .NET 4.0) is a generic host that has the activation type set to <bpt id=\"p1\">**</bpt>WAS<ept id=\"p1\">**</ept>.","pos":[1803,1995],"source":"      > [!NOTE] >  The Workflow Management Service that ships with the code named “Dublin” (Application Server Extensions for .NET 4.0) is a generic host that has the activation type set to **WAS**."}]},{"pos":[3913,4039],"content":"Initializes an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes an instance of the <xref href=\"System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\"></xref> class."},{"pos":[5028,5340],"content":"Creates an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and initializes the &lt;xref:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters*&gt; property with the data in the dictionary object passed in as a parameter.","needQuote":true,"needEscape":true,"source":"Creates an instance of the <xref href=\"System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\"></xref> class and initializes the <xref:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters*> property with the data in the dictionary object passed in as a parameter."},{"pos":[5630,5683],"content":"A dictionary object containing activation parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary object containing activation parameters.","pos":[0,53]}]},{"pos":[6706,7029],"content":"Creates an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and initializes the &lt;xref:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters*&gt; property with the data in the enumerable dictionary object passed in as a parameter.","needQuote":true,"needEscape":true,"source":"Creates an instance of the <xref href=\"System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\"></xref> class and initializes the <xref:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters*> property with the data in the enumerable dictionary object passed in as a parameter."},{"pos":[7399,7464],"content":"An enumerable dictionary object containing activation parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerable dictionary object containing activation parameters.","pos":[0,65]}]},{"pos":[8125,8208],"content":"A list of activation parameters that a generic host uses to create a workflow host.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list of activation parameters that a generic host uses to create a workflow host.","pos":[0,83]}]},{"pos":[8523,8570],"content":"A List object containing activation parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"A List object containing activation parameters.","pos":[0,47]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\n  id: ActivatableWorkflowsQueryResult\n  children:\n  - System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor\n  - System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})\n  - System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}})\n  - System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters\n  langs:\n  - csharp\n  name: ActivatableWorkflowsQueryResult\n  nameWithType: ActivatableWorkflowsQueryResult\n  fullName: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\n  type: Class\n  summary: Contains the results from executing the <xref href=\"System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand\"></xref> against an instance store.\n  remarks: \"An instance store should periodically search for activatable workflow instances that belong to a workflow host that uses the store. It should raise the <xref:System.Activities.DurableInstancing.HasActivatableWorkflowEvent> when it finds an activatable instance in the persistence store. If the instance store does not find an activatable instance in the persistence store, it should continue to monitor the persistence store for any activatable instances.  \\n  \\n After raising the HasActivatableWorkflowEvent, the instance store should stop monitoring the persistence store for activatable instances until it receives and executes the <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand>. The monitoring continues only if the command execution does not return any activatable workflow instances.  \\n  \\n When a generic host receives this event, it executes the <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand> against the instance store to obtain activation parameters required to create a workflow host. The generic host uses these activation parameters to create a workflow host, which in turn loads and runs the service instance. The activation parameters for the WAS activation type are: Site Name, Application Path (relative to the site), and Service Path (relative to the application). An instance store could return multiple sets of these three activation parameters.  \\n  \\n A generic host is a host that has an XName parameter named **ActivationType**, which should be set to a value supported by the instance store. Currently, the SQL Workflow Instance Store supports generic hosts with ActivationType parameter set to value: **WAS**. If the ActivationType is not set at all, the SQL Workflow Instance Store treats the host as a generic host.  \\n  \\n> [!NOTE]\\n>  The Workflow Management Service that ships with the code named “Dublin” (Application Server Extensions for .NET 4.0) is a generic host that has the activation type set to **WAS**.\"\n  syntax:\n    content: 'public sealed class ActivatableWorkflowsQueryResult : System.Runtime.DurableInstancing.InstanceStoreQueryResult'\n  inheritance:\n  - System.Object\n  - System.Runtime.DurableInstancing.InstanceStoreQueryResult\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor\n  id: '#ctor'\n  parent: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\n  langs:\n  - csharp\n  name: ActivatableWorkflowsQueryResult()\n  nameWithType: ActivatableWorkflowsQueryResult.ActivatableWorkflowsQueryResult()\n  fullName: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivatableWorkflowsQueryResult()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DurableInstancing\n  summary: Initializes an instance of the <xref href=\"System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\"></xref> class.\n  syntax:\n    content: public ActivatableWorkflowsQueryResult ();\n    parameters: []\n  overload: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})\n  id: '#ctor(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})'\n  parent: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\n  langs:\n  - csharp\n  name: ActivatableWorkflowsQueryResult(IDictionary<XName,Object>)\n  nameWithType: ActivatableWorkflowsQueryResult.ActivatableWorkflowsQueryResult(IDictionary<XName,Object>)\n  fullName: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivatableWorkflowsQueryResult(IDictionary<XName,Object>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DurableInstancing\n  summary: Creates an instance of the <xref href=\"System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\"></xref> class and initializes the <xref:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters*> property with the data in the dictionary object passed in as a parameter.\n  syntax:\n    content: public ActivatableWorkflowsQueryResult (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,object> parameters);\n    parameters:\n    - id: parameters\n      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}\n      description: A dictionary object containing activation parameters.\n  overload: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}})'\n  parent: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\n  langs:\n  - csharp\n  name: ActivatableWorkflowsQueryResult(IEnumerable<IDictionary<XName,Object>>)\n  nameWithType: ActivatableWorkflowsQueryResult.ActivatableWorkflowsQueryResult(IEnumerable<IDictionary<XName,Object>>)\n  fullName: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivatableWorkflowsQueryResult(IEnumerable<IDictionary<XName,Object>>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DurableInstancing\n  summary: Creates an instance of the <xref href=\"System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\"></xref> class and initializes the <xref:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters*> property with the data in the enumerable dictionary object passed in as a parameter.\n  syntax:\n    content: public ActivatableWorkflowsQueryResult (System.Collections.Generic.IEnumerable<System.Collections.Generic.IDictionary<System.Xml.Linq.XName,object>> parameters);\n    parameters:\n    - id: parameters\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}}\n      description: An enumerable dictionary object containing activation parameters.\n  overload: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters\n  id: ActivationParameters\n  parent: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\n  langs:\n  - csharp\n  name: ActivationParameters\n  nameWithType: ActivatableWorkflowsQueryResult.ActivationParameters\n  fullName: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DurableInstancing\n  summary: A list of activation parameters that a generic host uses to create a workflow host.\n  syntax:\n    content: public System.Collections.Generic.List<System.Collections.Generic.IDictionary<System.Xml.Linq.XName,object>> ActivationParameters { get; }\n    return:\n      type: System.Collections.Generic.List{System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}}\n      description: A List object containing activation parameters.\n  overload: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.DurableInstancing.InstanceStoreQueryResult\n  isExternal: false\n  name: System.Runtime.DurableInstancing.InstanceStoreQueryResult\n- uid: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor\n  parent: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\n  isExternal: false\n  name: ActivatableWorkflowsQueryResult()\n  nameWithType: ActivatableWorkflowsQueryResult.ActivatableWorkflowsQueryResult()\n  fullName: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivatableWorkflowsQueryResult()\n- uid: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})\n  parent: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\n  isExternal: false\n  name: ActivatableWorkflowsQueryResult(IDictionary<XName,Object>)\n  nameWithType: ActivatableWorkflowsQueryResult.ActivatableWorkflowsQueryResult(IDictionary<XName,Object>)\n  fullName: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivatableWorkflowsQueryResult(IDictionary<XName,Object>)\n- uid: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<XName,Object>\n  nameWithType: IDictionary<XName,Object>\n  fullName: System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.Xml.Linq.XName,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.Linq.XName\n    name: XName\n    nameWithType: XName\n    fullName: XName\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}})\n  parent: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\n  isExternal: false\n  name: ActivatableWorkflowsQueryResult(IEnumerable<IDictionary<XName,Object>>)\n  nameWithType: ActivatableWorkflowsQueryResult.ActivatableWorkflowsQueryResult(IEnumerable<IDictionary<XName,Object>>)\n  fullName: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivatableWorkflowsQueryResult(IEnumerable<IDictionary<XName,Object>>)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<IDictionary<XName,Object>>\n  nameWithType: IEnumerable<IDictionary<XName,Object>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Object>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Object>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.Xml.Linq.XName,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.Linq.XName\n    name: XName\n    nameWithType: XName\n    fullName: XName\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters\n  parent: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\n  isExternal: false\n  name: ActivationParameters\n  nameWithType: ActivatableWorkflowsQueryResult.ActivationParameters\n  fullName: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters\n- uid: System.Collections.Generic.List{System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: List<IDictionary<XName,Object>>\n  nameWithType: List<IDictionary<XName,Object>>\n  fullName: System.Collections.Generic.List<System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Object>>\n  spec.csharp:\n  - uid: System.Collections.Generic.List`1\n    name: List\n    nameWithType: List\n    fullName: List<System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Object>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.Xml.Linq.XName,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.Linq.XName\n    name: XName\n    nameWithType: XName\n    fullName: XName\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor*\n  parent: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\n  isExternal: false\n  name: ActivatableWorkflowsQueryResult\n  nameWithType: ActivatableWorkflowsQueryResult.ActivatableWorkflowsQueryResult\n- uid: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters*\n  parent: System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult\n  isExternal: false\n  name: ActivationParameters\n  nameWithType: ActivatableWorkflowsQueryResult.ActivationParameters\n"}