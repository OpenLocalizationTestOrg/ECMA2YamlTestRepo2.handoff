{"nodes":[{"pos":[1048,1138],"content":"Contains activities to be executed by the workflow runtime in an exception handling block.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains activities to be executed by the workflow runtime in an exception handling block.","pos":[0,90]}]},{"pos":[3193,3238],"content":"Creates a new instance of the TryCatch class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new instance of the TryCatch class.","pos":[0,45]}]},{"pos":[4528,4540],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5337,5349],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5796,5988],"content":"The collection of <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Catch\" name=\"Catch\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> elements to be checked when the &lt;xref:System.Activities.Statements.TryCatch.Try*&gt; activity throws an exception.","needQuote":true,"needEscape":true,"source":"The collection of <xref uid=\"langword_csharp_Catch\" name=\"Catch\" href=\"\"></xref> elements to be checked when the <xref:System.Activities.Statements.TryCatch.Try*> activity throws an exception."},{"pos":[6000,6378],"content":"Catches are evaluated in the order in which they are added to the collection. If an exact match for the exception type is found, the matching <xref:System.Activities.Statements.Catch> activity is executed.  If no exact match is found, the <xref:System.Activities.Statements.Catch> with the closest matching <xref:System.Activities.Statements.Catch.ExceptionType%2A> is executed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Catches are evaluated in the order in which they are added to the collection. If an exact match for the exception type is found, the matching <xref:System.Activities.Statements.Catch> activity is executed.  If no exact match is found, the <xref:System.Activities.Statements.Catch> with the closest matching <xref:System.Activities.Statements.Catch.ExceptionType%2A> is executed.","pos":[0,378],"nodes":[{"content":"Catches are evaluated in the order in which they are added to the collection.","pos":[0,77]},{"content":"If an exact match for the exception type is found, the matching &lt;xref:System.Activities.Statements.Catch&gt; activity is executed.","pos":[78,205],"source":" If an exact match for the exception type is found, the matching <xref:System.Activities.Statements.Catch> activity is executed."},{"content":"If no exact match is found, the &lt;xref:System.Activities.Statements.Catch&gt; with the closest matching &lt;xref:System.Activities.Statements.Catch.ExceptionType%2A&gt; is executed.","pos":[207,378],"source":"  If no exact match is found, the <xref:System.Activities.Statements.Catch> with the closest matching <xref:System.Activities.Statements.Catch.ExceptionType%2A> is executed."}]}]},{"pos":[7331,7352],"content":"The catch collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The catch collection.","pos":[0,21]}]},{"pos":[8149,8161],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8609,8816],"content":"The activity to be executed when the &lt;xref:System.Activities.Statements.TryCatch.Try<bpt id=\"p1\">*</bpt>&gt; and any necessary activities in the &lt;xref:System.Activities.Statements.TryCatch.Catches<ept id=\"p1\">*</ept>&gt; collection complete execution.","needQuote":true,"needEscape":true,"source":"The activity to be executed when the <xref:System.Activities.Statements.TryCatch.Try*> and any necessary activities in the <xref:System.Activities.Statements.TryCatch.Catches*> collection complete execution."},{"pos":[9377,9424],"content":"The activity that represents the Finally logic.","needQuote":true,"needEscape":true,"nodes":[{"content":"The activity that represents the Finally logic.","pos":[0,47]}]},{"pos":[10577,10589],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10675,10687],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11132,11237],"content":"The activity first executed when the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.TryCatch\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> executes.","needQuote":true,"needEscape":true,"source":"The activity first executed when the <xref href=\"System.Activities.Statements.TryCatch\"></xref> executes."},{"pos":[11790,11803],"content":"The activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The activity.","pos":[0,13]}]},{"pos":[12748,12760],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13225,13263],"content":"The collection of contained variables.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of contained variables.","pos":[0,38]}]},{"pos":[13496,13524],"content":"The collection of variables.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of variables.","pos":[0,28]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.TryCatch\n  id: TryCatch\n  children:\n  - System.Activities.Statements.TryCatch.#ctor\n  - System.Activities.Statements.TryCatch.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.TryCatch.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.TryCatch.Catches\n  - System.Activities.Statements.TryCatch.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.TryCatch.Finally\n  - System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Statements.TryCatch.Try\n  - System.Activities.Statements.TryCatch.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  - System.Activities.Statements.TryCatch.Variables\n  langs:\n  - csharp\n  name: TryCatch\n  nameWithType: TryCatch\n  fullName: System.Activities.Statements.TryCatch\n  type: Class\n  summary: Contains activities to be executed by the workflow runtime in an exception handling block.\n  remarks: >-\n    > [!NOTE]\n\n    >  The <xref:System.Activities.Statements.TryCatch.Finally%2A> activity member of a TryCatch activity that is the child of a <xref:System.Activities.Statements.TransactionScope> will not execute if an unhandled exception propagates past the <xref:System.Activities.Statements.TransactionScope> boundary.\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Nesting of TransactionScope within a service](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: 'public sealed class TryCatch : System.Activities.NativeActivity'\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  platform:\n  - net462\n- uid: System.Activities.Statements.TryCatch.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: TryCatch()\n  nameWithType: TryCatch.TryCatch()\n  fullName: System.Activities.Statements.TryCatch.TryCatch()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the TryCatch class.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Nesting of TransactionScope within a service](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public TryCatch ();\n    parameters: []\n  overload: System.Activities.Statements.TryCatch.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TryCatch.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: TryCatch.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.TryCatch.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Statements.TryCatch.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TryCatch.Cancel(System.Activities.NativeActivityContext)\n  id: Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: Cancel(NativeActivityContext)\n  nameWithType: TryCatch.Cancel(NativeActivityContext)\n  fullName: System.Activities.Statements.TryCatch.Cancel(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Cancel (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: To be added.\n  overload: System.Activities.Statements.TryCatch.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TryCatch.Catches\n  id: Catches\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: Catches\n  nameWithType: TryCatch.Catches\n  fullName: System.Activities.Statements.TryCatch.Catches\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The collection of <xref uid=\"langword_csharp_Catch\" name=\"Catch\" href=\"\"></xref> elements to be checked when the <xref:System.Activities.Statements.TryCatch.Try*> activity throws an exception.\n  remarks: Catches are evaluated in the order in which they are added to the collection. If an exact match for the exception type is found, the matching <xref:System.Activities.Statements.Catch> activity is executed.  If no exact match is found, the <xref:System.Activities.Statements.Catch> with the closest matching <xref:System.Activities.Statements.Catch.ExceptionType%2A> is executed.\n  example:\n  - \"The following code sample demonstrates setting the Catches property of a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Nesting of TransactionScope within a service](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n Once placed in the designer, <xref:System.Activities.Statements.Catch> activities cannot be reordered in the designer.  To reorder the collection of <xref:System.Activities.Statements.Catch> activities, either delete and re-add them in the correct order, or use the xaml (code) view for the workflow.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Statements.Catch> Catches { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Statements.Catch}\n      description: The catch collection.\n  overload: System.Activities.Statements.TryCatch.Catches*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TryCatch.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: TryCatch.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.TryCatch.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: To be added.\n  overload: System.Activities.Statements.TryCatch.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TryCatch.Finally\n  id: Finally\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: Finally\n  nameWithType: TryCatch.Finally\n  fullName: System.Activities.Statements.TryCatch.Finally\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The activity to be executed when the <xref:System.Activities.Statements.TryCatch.Try*> and any necessary activities in the <xref:System.Activities.Statements.TryCatch.Catches*> collection complete execution.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates setting the Finally property of a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Nesting of TransactionScope within a service](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public System.Activities.Activity Finally { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: The activity that represents the Finally logic.\n  overload: System.Activities.Statements.TryCatch.Finally*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: TryCatch.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n      description: To be added.\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: To be added.\n  overload: System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TryCatch.Try\n  id: Try\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: Try\n  nameWithType: TryCatch.Try\n  fullName: System.Activities.Statements.TryCatch.Try\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The activity first executed when the <xref href=\"System.Activities.Statements.TryCatch\"></xref> executes.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates setting the Try property of a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Nesting of TransactionScope within a service](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public System.Activities.Activity Try { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: The activity.\n  overload: System.Activities.Statements.TryCatch.Try*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TryCatch.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  id: UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: TryCatch.UpdateInstance(NativeActivityUpdateContext)\n  fullName: System.Activities.Statements.TryCatch.UpdateInstance(NativeActivityUpdateContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);\n    parameters:\n    - id: updateContext\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n      description: To be added.\n  overload: System.Activities.Statements.TryCatch.UpdateInstance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TryCatch.Variables\n  id: Variables\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: Variables\n  nameWithType: TryCatch.Variables\n  fullName: System.Activities.Statements.TryCatch.Variables\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The collection of contained variables.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> Variables { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n      description: The collection of variables.\n  overload: System.Activities.Statements.TryCatch.Variables*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.NativeActivity\n  isExternal: false\n  name: System.Activities.NativeActivity\n- uid: System.Activities.Statements.TryCatch.#ctor\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: TryCatch()\n  nameWithType: TryCatch.TryCatch()\n  fullName: System.Activities.Statements.TryCatch.TryCatch()\n- uid: System.Activities.Statements.TryCatch.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: TryCatch.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.TryCatch.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.TryCatch.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: TryCatch.Cancel(NativeActivityContext)\n  fullName: System.Activities.Statements.TryCatch.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.TryCatch.Catches\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Catches\n  nameWithType: TryCatch.Catches\n  fullName: System.Activities.Statements.TryCatch.Catches\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Statements.Catch}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<Catch>\n  nameWithType: Collection<Catch>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Statements.Catch>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.Statements.Catch>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Statements.Catch\n    name: Catch\n    nameWithType: Catch\n    fullName: Catch\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.TryCatch.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: TryCatch.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.TryCatch.Execute(NativeActivityContext)\n- uid: System.Activities.Statements.TryCatch.Finally\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Finally\n  nameWithType: TryCatch.Finally\n  fullName: System.Activities.Statements.TryCatch.Finally\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: TryCatch.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateMapMetadata\n  nameWithType: NativeActivityUpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n- uid: System.Activities.Statements.TryCatch.Try\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Try\n  nameWithType: TryCatch.Try\n  fullName: System.Activities.Statements.TryCatch.Try\n- uid: System.Activities.Statements.TryCatch.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: TryCatch.UpdateInstance(NativeActivityUpdateContext)\n  fullName: System.Activities.Statements.TryCatch.UpdateInstance(NativeActivityUpdateContext)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateContext\n  nameWithType: NativeActivityUpdateContext\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n- uid: System.Activities.Statements.TryCatch.Variables\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Variables\n  nameWithType: TryCatch.Variables\n  fullName: System.Activities.Statements.TryCatch.Variables\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<Variable>\n  nameWithType: Collection<Variable>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.Variable>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Variable\n    name: Variable\n    nameWithType: Variable\n    fullName: Variable\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.TryCatch.#ctor*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: TryCatch\n  nameWithType: TryCatch.TryCatch\n- uid: System.Activities.Statements.TryCatch.CacheMetadata*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: TryCatch.CacheMetadata\n- uid: System.Activities.Statements.TryCatch.Cancel*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Cancel\n  nameWithType: TryCatch.Cancel\n- uid: System.Activities.Statements.TryCatch.Catches*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Catches\n  nameWithType: TryCatch.Catches\n- uid: System.Activities.Statements.TryCatch.Execute*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Execute\n  nameWithType: TryCatch.Execute\n- uid: System.Activities.Statements.TryCatch.Finally*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Finally\n  nameWithType: TryCatch.Finally\n- uid: System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: OnCreateDynamicUpdateMap\n  nameWithType: TryCatch.OnCreateDynamicUpdateMap\n- uid: System.Activities.Statements.TryCatch.Try*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Try\n  nameWithType: TryCatch.Try\n- uid: System.Activities.Statements.TryCatch.UpdateInstance*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: UpdateInstance\n  nameWithType: TryCatch.UpdateInstance\n- uid: System.Activities.Statements.TryCatch.Variables*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Variables\n  nameWithType: TryCatch.Variables\n"}