{"nodes":[{"pos":[1121,1198],"content":"Used internally at run time to support accessing configuration data remotely.","needQuote":true,"needEscape":true,"nodes":[{"content":"Used internally at run time to support accessing configuration data remotely.","pos":[0,77]}]},{"pos":[2367,2502],"content":"Used internally at run time to create a new instance of <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.RemoteWebConfigurationHostServer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Used internally at run time to create a new instance of <xref href=\"System.Web.Configuration.RemoteWebConfigurationHostServer\"></xref>."},{"pos":[3504,3614],"content":"Conditionally encrypts or decrypts the value of the string referenced by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">xmlString</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"Conditionally encrypts or decrypts the value of the string referenced by the <code>xmlString</code> parameter."},{"pos":[3893,4040],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to encrypt; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to decrypt.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to encrypt; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to decrypt."},{"pos":[4106,4143],"content":"The XML to be encrypted or decrypted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML to be encrypted or decrypted.","pos":[0,37]}]},{"pos":[4222,4274],"content":"The provider used to protect the configuration data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider used to protect the configuration data.","pos":[0,52]}]},{"pos":[4353,4403],"content":"The <xref:System.Type> of the protection provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the protection provider.","pos":[0,50],"source":"The <xref:System.Type> of the protection provider."}]},{"pos":[4471,4531],"content":"The keys of optional parameters for the protection provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The keys of optional parameters for the protection provider.","pos":[0,60]}]},{"pos":[4601,4663],"content":"The values of optional parameters for the protection provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The values of optional parameters for the protection provider.","pos":[0,62]}]},{"pos":[4721,4810],"content":"A string that contains either the encrypted or decrypted value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">xmlString</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A string that contains either the encrypted or decrypted value of <code>xmlString</code>."},{"pos":[4993,5123],"content":"<ph id=\"ph1\">&lt;code&gt;protectionProviderType&lt;/code&gt;</ph> does not derive from <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ProtectedConfigurationProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>protectionProviderType</code> does not derive from <xref href=\"System.Configuration.ProtectedConfigurationProvider\"></xref>."},{"pos":[5720,5783],"content":"Used internally to support remote access to configuration data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Used internally to support remote access to configuration data.","pos":[0,63]}]},{"pos":[5969,6026],"content":"The path to the remote configuration file to be accessed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to the remote configuration file to be accessed.","pos":[0,57]}]},{"pos":[6099,6170],"content":"A Boolean value that specifies whether only the <ph id=\"ph1\">`readTime`</ph> is returned.","needQuote":true,"needEscape":true,"source":"A Boolean value that specifies whether only the `readTime` is returned."},{"pos":[6234,6275],"content":"The time when the file was last accessed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time when the file was last accessed.","pos":[0,41]}]},{"pos":[6333,6471],"content":"An <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_array\" name=\"array\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of 8-bit unsigned integers (bytes) that contains the configuration data.","needQuote":true,"needEscape":true,"source":"An <xref uid=\"langword_csharp_array\" name=\"array\" href=\"\"></xref> of 8-bit unsigned integers (bytes) that contains the configuration data."},{"pos":[6643,6717],"content":"<ph id=\"ph1\">&lt;code&gt;fileName&lt;/code&gt;</ph> does not point to a file with the .config extension.","needQuote":true,"needEscape":true,"source":"<code>fileName</code> does not point to a file with the .config extension."},{"pos":[7443,7486],"content":"Gets the details of the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the details of the configuration file.","pos":[0,43]}]},{"pos":[7705,7726],"content":"The name of the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the file.","pos":[0,21]}]},{"pos":[7790,7945],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the file exists; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the file exists; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8005,8026],"content":"The size of the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the file.","pos":[0,21]}]},{"pos":[8092,8122],"content":"The date the file was created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The date the file was created.","pos":[0,30]}]},{"pos":[8191,8226],"content":"The date the file was last written.","needQuote":true,"needEscape":true,"nodes":[{"content":"The date the file was last written.","pos":[0,35]}]},{"pos":[8405,8475],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> does not point to a file with the .config extension.","needQuote":true,"needEscape":true,"source":"<code>name</code> does not point to a file with the .config extension."},{"pos":[9139,9202],"content":"Used internally to support remote access to configuration data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Used internally to support remote access to configuration data.","pos":[0,63]}]},{"pos":[9408,9444],"content":"The level of the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The level of the configuration file.","pos":[0,36]}]},{"pos":[9505,9562],"content":"The path to the remote configuration file to be accessed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to the remote configuration file to be accessed.","pos":[0,57]}]},{"pos":[9623,9655],"content":"The path to the remote computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to the remote computer.","pos":[0,32]}]},{"pos":[9727,9781],"content":"The subpath of the location of the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The subpath of the location of the configuration file.","pos":[0,54]}]},{"pos":[9839,9917],"content":"A concatenated string that represents the file path of the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A concatenated string that represents the file path of the configuration file.","pos":[0,78]}]},{"pos":[10669,10732],"content":"Used internally to support remote access to configuration data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Used internally to support remote access to configuration data.","pos":[0,63]}]},{"pos":[10934,10991],"content":"The path to the remote configuration file to be accessed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to the remote configuration file to be accessed.","pos":[0,57]}]},{"pos":[11064,11107],"content":"The file to duplicate file attributes from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file to duplicate file attributes from.","pos":[0,43]}]},{"pos":[11168,11191],"content":"The data to be written.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data to be written.","pos":[0,23]}]},{"pos":[11255,11296],"content":"The time when the file was last accessed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time when the file was last accessed.","pos":[0,41]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer\n  id: RemoteWebConfigurationHostServer\n  children:\n  - System.Web.Configuration.RemoteWebConfigurationHostServer.#ctor\n  - System.Web.Configuration.RemoteWebConfigurationHostServer.DoEncryptOrDecrypt(System.Boolean,System.String,System.String,System.String,System.String[],System.String[])\n  - System.Web.Configuration.RemoteWebConfigurationHostServer.GetData(System.String,System.Boolean,System.Int64@)\n  - System.Web.Configuration.RemoteWebConfigurationHostServer.GetFileDetails(System.String,System.Boolean@,System.Int64@,System.Int64@,System.Int64@)\n  - System.Web.Configuration.RemoteWebConfigurationHostServer.GetFilePaths(System.Int32,System.String,System.String,System.String)\n  - System.Web.Configuration.RemoteWebConfigurationHostServer.WriteData(System.String,System.String,System.Byte[],System.Int64@)\n  langs:\n  - csharp\n  name: RemoteWebConfigurationHostServer\n  nameWithType: RemoteWebConfigurationHostServer\n  fullName: System.Web.Configuration.RemoteWebConfigurationHostServer\n  type: Class\n  summary: Used internally at run time to support accessing configuration data remotely.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"9FDB6D2C-90EA-4e42-99E6-38B96E28698E\")]\n\n      [System.Runtime.InteropServices.ProgId(\"System.Web.Configuration.RemoteWebConfigurationHostServerV4_32\")]\n\n      public class RemoteWebConfigurationHostServer : System.Web.Configuration.IRemoteWebConfigurationHostServer\n  inheritance:\n  - System.Object\n  implements:\n  - System.Web.Configuration.IRemoteWebConfigurationHostServer\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.#ctor\n  id: '#ctor'\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  langs:\n  - csharp\n  name: RemoteWebConfigurationHostServer()\n  nameWithType: RemoteWebConfigurationHostServer.RemoteWebConfigurationHostServer()\n  fullName: System.Web.Configuration.RemoteWebConfigurationHostServer.RemoteWebConfigurationHostServer()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Used internally at run time to create a new instance of <xref href=\"System.Web.Configuration.RemoteWebConfigurationHostServer\"></xref>.\n  syntax:\n    content: public RemoteWebConfigurationHostServer ();\n    parameters: []\n  overload: System.Web.Configuration.RemoteWebConfigurationHostServer.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.DoEncryptOrDecrypt(System.Boolean,System.String,System.String,System.String,System.String[],System.String[])\n  id: DoEncryptOrDecrypt(System.Boolean,System.String,System.String,System.String,System.String[],System.String[])\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  langs:\n  - csharp\n  name: DoEncryptOrDecrypt(Boolean,String,String,String,String[],String[])\n  nameWithType: RemoteWebConfigurationHostServer.DoEncryptOrDecrypt(Boolean,String,String,String,String[],String[])\n  fullName: System.Web.Configuration.RemoteWebConfigurationHostServer.DoEncryptOrDecrypt(Boolean,String,String,String,String[],String[])\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Conditionally encrypts or decrypts the value of the string referenced by the <code>xmlString</code> parameter.\n  syntax:\n    content: public string DoEncryptOrDecrypt (bool doEncrypt, string xmlString, string protectionProviderName, string protectionProviderType, string[] paramKeys, string[] paramValues);\n    parameters:\n    - id: doEncrypt\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to encrypt; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to decrypt.\n    - id: xmlString\n      type: System.String\n      description: The XML to be encrypted or decrypted.\n    - id: protectionProviderName\n      type: System.String\n      description: The provider used to protect the configuration data.\n    - id: protectionProviderType\n      type: System.String\n      description: The <xref:System.Type> of the protection provider.\n    - id: paramKeys\n      type: System.String[]\n      description: The keys of optional parameters for the protection provider.\n    - id: paramValues\n      type: System.String[]\n      description: The values of optional parameters for the protection provider.\n    return:\n      type: System.String\n      description: A string that contains either the encrypted or decrypted value of <code>xmlString</code>.\n  overload: System.Web.Configuration.RemoteWebConfigurationHostServer.DoEncryptOrDecrypt*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: <code>protectionProviderType</code> does not derive from <xref href=\"System.Configuration.ProtectedConfigurationProvider\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.GetData(System.String,System.Boolean,System.Int64@)\n  id: GetData(System.String,System.Boolean,System.Int64@)\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  langs:\n  - csharp\n  name: GetData(String,Boolean,Int64)\n  nameWithType: RemoteWebConfigurationHostServer.GetData(String,Boolean,Int64)\n  fullName: System.Web.Configuration.RemoteWebConfigurationHostServer.GetData(String,Boolean,Int64)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Used internally to support remote access to configuration data.\n  syntax:\n    content: public byte[] GetData (string fileName, bool getReadTimeOnly, out long readTime);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The path to the remote configuration file to be accessed.\n    - id: getReadTimeOnly\n      type: System.Boolean\n      description: A Boolean value that specifies whether only the `readTime` is returned.\n    - id: readTime\n      type: System.Int64\n      description: The time when the file was last accessed.\n    return:\n      type: System.Byte[]\n      description: An <xref uid=\"langword_csharp_array\" name=\"array\" href=\"\"></xref> of 8-bit unsigned integers (bytes) that contains the configuration data.\n  overload: System.Web.Configuration.RemoteWebConfigurationHostServer.GetData*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: <code>fileName</code> does not point to a file with the .config extension.\n  platform:\n  - net462\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.GetFileDetails(System.String,System.Boolean@,System.Int64@,System.Int64@,System.Int64@)\n  id: GetFileDetails(System.String,System.Boolean@,System.Int64@,System.Int64@,System.Int64@)\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  langs:\n  - csharp\n  name: GetFileDetails(String,Boolean,Int64,Int64,Int64)\n  nameWithType: RemoteWebConfigurationHostServer.GetFileDetails(String,Boolean,Int64,Int64,Int64)\n  fullName: System.Web.Configuration.RemoteWebConfigurationHostServer.GetFileDetails(String,Boolean,Int64,Int64,Int64)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets the details of the configuration file.\n  syntax:\n    content: public void GetFileDetails (string name, out bool exists, out long size, out long createDate, out long lastWriteDate);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the file.\n    - id: exists\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the file exists; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: size\n      type: System.Int64\n      description: The size of the file.\n    - id: createDate\n      type: System.Int64\n      description: The date the file was created.\n    - id: lastWriteDate\n      type: System.Int64\n      description: The date the file was last written.\n  overload: System.Web.Configuration.RemoteWebConfigurationHostServer.GetFileDetails*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: <code>name</code> does not point to a file with the .config extension.\n  platform:\n  - net462\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.GetFilePaths(System.Int32,System.String,System.String,System.String)\n  id: GetFilePaths(System.Int32,System.String,System.String,System.String)\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  langs:\n  - csharp\n  name: GetFilePaths(Int32,String,String,String)\n  nameWithType: RemoteWebConfigurationHostServer.GetFilePaths(Int32,String,String,String)\n  fullName: System.Web.Configuration.RemoteWebConfigurationHostServer.GetFilePaths(Int32,String,String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Used internally to support remote access to configuration data.\n  syntax:\n    content: public string GetFilePaths (int webLevelAsInt, string path, string site, string locationSubPath);\n    parameters:\n    - id: webLevelAsInt\n      type: System.Int32\n      description: The level of the configuration file.\n    - id: path\n      type: System.String\n      description: The path to the remote configuration file to be accessed.\n    - id: site\n      type: System.String\n      description: The path to the remote computer.\n    - id: locationSubPath\n      type: System.String\n      description: The subpath of the location of the configuration file.\n    return:\n      type: System.String\n      description: A concatenated string that represents the file path of the configuration file.\n  overload: System.Web.Configuration.RemoteWebConfigurationHostServer.GetFilePaths*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.WriteData(System.String,System.String,System.Byte[],System.Int64@)\n  id: WriteData(System.String,System.String,System.Byte[],System.Int64@)\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  langs:\n  - csharp\n  name: WriteData(String,String,Byte[],Int64)\n  nameWithType: RemoteWebConfigurationHostServer.WriteData(String,String,Byte[],Int64)\n  fullName: System.Web.Configuration.RemoteWebConfigurationHostServer.WriteData(String,String,Byte[],Int64)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Used internally to support remote access to configuration data.\n  syntax:\n    content: public void WriteData (string fileName, string templateFileName, byte[] data, ref long readTime);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The path to the remote configuration file to be accessed.\n    - id: templateFileName\n      type: System.String\n      description: The file to duplicate file attributes from.\n    - id: data\n      type: System.Byte[]\n      description: The data to be written.\n    - id: readTime\n      type: System.Int64\n      description: The time when the file was last accessed.\n  overload: System.Web.Configuration.RemoteWebConfigurationHostServer.WriteData*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: \"<code>fileName</code> does not point to a file with the .config extension.  \\n  \\n \\\\- or -  \\n  \\n The file has changed since it was read.  \\n  \\n \\\\- or -  \\n  \\n The file is hidden or read-only.  \\n  \\n \\\\- or -  \\n  \\n The method fails to generate a temp file.  \\n  \\n \\\\- or -  \\n  \\n The method fails to create a <xref href=\\\"System.IO.FileStream\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n The temp file fails to overwrite the target file.\"\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Exception\n  isExternal: true\n  name: System.Exception\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.#ctor\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  isExternal: false\n  name: RemoteWebConfigurationHostServer()\n  nameWithType: RemoteWebConfigurationHostServer.RemoteWebConfigurationHostServer()\n  fullName: System.Web.Configuration.RemoteWebConfigurationHostServer.RemoteWebConfigurationHostServer()\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.DoEncryptOrDecrypt(System.Boolean,System.String,System.String,System.String,System.String[],System.String[])\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  isExternal: false\n  name: DoEncryptOrDecrypt(Boolean,String,String,String,String[],String[])\n  nameWithType: RemoteWebConfigurationHostServer.DoEncryptOrDecrypt(Boolean,String,String,String,String[],String[])\n  fullName: System.Web.Configuration.RemoteWebConfigurationHostServer.DoEncryptOrDecrypt(Boolean,String,String,String,String[],String[])\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.GetData(System.String,System.Boolean,System.Int64@)\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  isExternal: false\n  name: GetData(String,Boolean,Int64)\n  nameWithType: RemoteWebConfigurationHostServer.GetData(String,Boolean,Int64)\n  fullName: System.Web.Configuration.RemoteWebConfigurationHostServer.GetData(String,Boolean,Int64)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.GetFileDetails(System.String,System.Boolean@,System.Int64@,System.Int64@,System.Int64@)\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  isExternal: false\n  name: GetFileDetails(String,Boolean,Int64,Int64,Int64)\n  nameWithType: RemoteWebConfigurationHostServer.GetFileDetails(String,Boolean,Int64,Int64,Int64)\n  fullName: System.Web.Configuration.RemoteWebConfigurationHostServer.GetFileDetails(String,Boolean,Int64,Int64,Int64)\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.GetFilePaths(System.Int32,System.String,System.String,System.String)\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  isExternal: false\n  name: GetFilePaths(Int32,String,String,String)\n  nameWithType: RemoteWebConfigurationHostServer.GetFilePaths(Int32,String,String,String)\n  fullName: System.Web.Configuration.RemoteWebConfigurationHostServer.GetFilePaths(Int32,String,String,String)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.WriteData(System.String,System.String,System.Byte[],System.Int64@)\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  isExternal: false\n  name: WriteData(String,String,Byte[],Int64)\n  nameWithType: RemoteWebConfigurationHostServer.WriteData(String,String,Byte[],Int64)\n  fullName: System.Web.Configuration.RemoteWebConfigurationHostServer.WriteData(String,String,Byte[],Int64)\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.#ctor*\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  isExternal: false\n  name: RemoteWebConfigurationHostServer\n  nameWithType: RemoteWebConfigurationHostServer.RemoteWebConfigurationHostServer\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.DoEncryptOrDecrypt*\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  isExternal: false\n  name: DoEncryptOrDecrypt\n  nameWithType: RemoteWebConfigurationHostServer.DoEncryptOrDecrypt\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.GetData*\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  isExternal: false\n  name: GetData\n  nameWithType: RemoteWebConfigurationHostServer.GetData\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.GetFileDetails*\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  isExternal: false\n  name: GetFileDetails\n  nameWithType: RemoteWebConfigurationHostServer.GetFileDetails\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.GetFilePaths*\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  isExternal: false\n  name: GetFilePaths\n  nameWithType: RemoteWebConfigurationHostServer.GetFilePaths\n- uid: System.Web.Configuration.RemoteWebConfigurationHostServer.WriteData*\n  parent: System.Web.Configuration.RemoteWebConfigurationHostServer\n  isExternal: false\n  name: WriteData\n  nameWithType: RemoteWebConfigurationHostServer.WriteData\n"}