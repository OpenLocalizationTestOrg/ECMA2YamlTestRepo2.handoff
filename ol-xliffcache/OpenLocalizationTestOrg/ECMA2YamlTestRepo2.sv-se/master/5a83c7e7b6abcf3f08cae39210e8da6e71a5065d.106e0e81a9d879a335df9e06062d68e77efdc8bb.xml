{"nodes":[{"pos":[1132,1202],"content":"Implements a structure that is used to describe the Size of an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements a structure that is used to describe the Size of an object.","pos":[0,70]}]},{"pos":[1215,1898],"content":"Size is particularly useful because it describes both the <xref:System.Windows.Size.Height%2A> and <xref:System.Windows.Size.Width%2A> of an object. Size is used extensively by the layout system to arrange and measure elements.      <a name=\"xamlAttributeUsage_Size\"></a>    ## XAML Attribute Usage      ```   <object property=\"width,height\"/>   ```      <a name=\"xamlValues_Size\"></a>    ## XAML Values    *width*    A value greater than or equal to 0 that specifies the <xref:System.Windows.Size.Width%2A> of the Size structure.       *height*    A value greater than or equal to 0 that specifies the <xref:System.Windows.Size.Height%2A> of the Size structure.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Size is particularly useful because it describes both the &lt;xref:System.Windows.Size.Height%2A&gt; and &lt;xref:System.Windows.Size.Width%2A&gt; of an object.","pos":[0,148],"source":"Size is particularly useful because it describes both the <xref:System.Windows.Size.Height%2A> and <xref:System.Windows.Size.Width%2A> of an object."},{"content":"Size is used extensively by the layout system to arrange and measure elements.","pos":[149,227]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_Size\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object property=\"width,height\"/&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_Size\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>width<ept id=\"p3\">*</ept>    A value greater than or equal to 0 that specifies the &lt;xref:System.Windows.Size.Width%2A&gt; of the Size structure.","pos":[233,530],"source":"<a name=\"xamlAttributeUsage_Size\"></a>    ## XAML Attribute Usage      ```   <object property=\"width,height\"/>   ```      <a name=\"xamlValues_Size\"></a>    ## XAML Values    *width*    A value greater than or equal to 0 that specifies the <xref:System.Windows.Size.Width%2A> of the Size structure."},{"content":"<bpt id=\"p1\">*</bpt>height<ept id=\"p1\">*</ept>    A value greater than or equal to 0 that specifies the &lt;xref:System.Windows.Size.Height%2A&gt; of the Size structure.","pos":[537,662],"source":"*height*    A value greater than or equal to 0 that specifies the <xref:System.Windows.Size.Height%2A> of the Size structure."}]},{"pos":[2950,3104],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure and assigns it an initial <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">width</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">height</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Size\"></xref> structure and assigns it an initial <code>width</code> and <code>height</code>."},{"pos":[3116,3160],"content":"The <ph id=\"ph1\">`width`</ph> and <ph id=\"ph2\">`height`</ph> cannot be negative.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The `width` and `height` cannot be negative."},{"pos":[3304,3382],"content":"The initial width of the instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The initial width of the instance of <xref href=\"System.Windows.Size\"></xref>."},{"pos":[3445,3524],"content":"The initial height of the instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The initial height of the instance of <xref href=\"System.Windows.Size\"></xref>."},{"pos":[3864,3949],"content":"Gets a value that represents a static empty <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a value that represents a static empty <xref href=\"System.Windows.Size\"></xref>."},{"pos":[3961,4235],"content":"The <xref:System.Windows.Size.Width%2A> and <xref:System.Windows.Size.Height%2A> of the instance of <xref:System.Windows.Size> are equal to negative-infinity when this property is invoked. This is the only situation where <xref:System.Windows.Size> can be a negative number.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Windows.Size.Width%2A> and <xref:System.Windows.Size.Height%2A> of the instance of <xref:System.Windows.Size> are equal to negative-infinity when this property is invoked. This is the only situation where <xref:System.Windows.Size> can be a negative number.","pos":[0,274],"nodes":[{"content":"The &lt;xref:System.Windows.Size.Width%2A&gt; and &lt;xref:System.Windows.Size.Height%2A&gt; of the instance of &lt;xref:System.Windows.Size&gt; are equal to negative-infinity when this property is invoked.","pos":[0,188],"source":"The <xref:System.Windows.Size.Width%2A> and <xref:System.Windows.Size.Height%2A> of the instance of <xref:System.Windows.Size> are equal to negative-infinity when this property is invoked."},{"content":"This is the only situation where &lt;xref:System.Windows.Size&gt; can be a negative number.","pos":[189,274],"source":" This is the only situation where <xref:System.Windows.Size> can be a negative number."}]}]},{"pos":[4371,4433],"content":"An empty instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An empty instance of <xref href=\"System.Windows.Size\"></xref>."},{"pos":[4830,4921],"content":"Compares an object to an instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for equality.","needQuote":true,"needEscape":true,"source":"Compares an object to an instance of <xref href=\"System.Windows.Size\"></xref> for equality."},{"pos":[4933,5078],"content":"<xref:System.Double> values can result in an error when operated upon. Values that are logically equal might fail to result in a value of `true`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"&lt;xref:System.Double&gt; values can result in an error when operated upon.","pos":[0,70],"source":"<xref:System.Double> values can result in an error when operated upon."},{"content":"Values that are logically equal might fail to result in a value of <ph id=\"ph1\">`true`</ph>.","pos":[71,145],"source":" Values that are logically equal might fail to result in a value of `true`."}]},{"pos":[5215,5251],"content":"The <xref:System.Object> to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to compare.","pos":[0,36],"source":"The <xref:System.Object> to compare."}]},{"pos":[5310,5469],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the sizes are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the sizes are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5873,5962],"content":"Compares a value to an instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for equality.","needQuote":true,"needEscape":true,"source":"Compares a value to an instance of <xref href=\"System.Windows.Size\"></xref> for equality."},{"pos":[5974,6119],"content":"<xref:System.Double> values can result in an error when operated upon. Values that are logically equal might fail to result in a value of `true`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"&lt;xref:System.Double&gt; values can result in an error when operated upon.","pos":[0,70],"source":"<xref:System.Double> values can result in an error when operated upon."},{"content":"Values that are logically equal might fail to result in a value of <ph id=\"ph1\">`true`</ph>.","pos":[71,145],"source":" Values that are logically equal might fail to result in a value of `true`."}]},{"pos":[6274,6363],"content":"The size to compare to this current instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The size to compare to this current instance of <xref href=\"System.Windows.Size\"></xref>."},{"pos":[6422,6629],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the instances of <bpt id=\"p2\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> are equal; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the instances of <xref href=\"System.Windows.Size\"></xref> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7088,7168],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for equality.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Windows.Size\"></xref> for equality."},{"pos":[7180,7325],"content":"<xref:System.Double> values can result in an error when operated upon. Values that are logically equal might fail to result in a value of `true`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"&lt;xref:System.Double&gt; values can result in an error when operated upon.","pos":[0,70],"source":"<xref:System.Double> values can result in an error when operated upon."},{"content":"Values that are logically equal might fail to result in a value of <ph id=\"ph1\">`true`</ph>.","pos":[71,145],"source":" Values that are logically equal might fail to result in a value of `true`."}]},{"pos":[7514,7588],"content":"The first instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The first instance of <xref href=\"System.Windows.Size\"></xref> to compare."},{"pos":[7656,7731],"content":"The second instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The second instance of <xref href=\"System.Windows.Size\"></xref> to compare."},{"pos":[7790,7997],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the instances of <bpt id=\"p2\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> are equal; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the instances of <xref href=\"System.Windows.Size\"></xref> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8372,8453],"content":"Gets the hash code for this instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the hash code for this instance of <xref href=\"System.Windows.Size\"></xref>."},{"pos":[8588,8664],"content":"The hash code for this instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The hash code for this instance of <xref href=\"System.Windows.Size\"></xref>."},{"pos":[9015,9100],"content":"Gets or sets the Height of this instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the Height of this instance of <xref href=\"System.Windows.Size\"></xref>."},{"pos":[9216,9336],"content":"The Height of this instance of <xref href=\"System.Windows.Size\"></xref>. The default is 0. The value cannot be negative.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Height of this instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,72],"source":"The Height of this instance of <xref href=\"System.Windows.Size\"></xref>."},{"content":"The default is 0.","pos":[73,90]},{"content":"The value cannot be negative.","pos":[91,120]}]},{"pos":[9687,9818],"content":"Gets a value that indicates whether this instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is &lt;xref:System.Windows.Size.Empty*&gt;.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this instance of <xref href=\"System.Windows.Size\"></xref> is <xref:System.Windows.Size.Empty*>."},{"pos":[9830,10054],"content":"Even if <xref:System.Windows.Size> is 0, the instance of <xref:System.Windows.Size> will still contain a 0 or 1, indicating a zero- or one-dimensional set of points. Therefore, do not use this property to check for a 0 area.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Even if <xref:System.Windows.Size> is 0, the instance of <xref:System.Windows.Size> will still contain a 0 or 1, indicating a zero- or one-dimensional set of points. Therefore, do not use this property to check for a 0 area.","pos":[0,224],"nodes":[{"content":"Even if &lt;xref:System.Windows.Size&gt; is 0, the instance of &lt;xref:System.Windows.Size&gt; will still contain a 0 or 1, indicating a zero- or one-dimensional set of points.","pos":[0,165],"source":"Even if <xref:System.Windows.Size> is 0, the instance of <xref:System.Windows.Size> will still contain a 0 or 1, indicating a zero- or one-dimensional set of points."},{"content":"Therefore, do not use this property to check for a 0 area.","pos":[166,224]}]}]},{"pos":[10165,10362],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this instance of size is &lt;xref:System.Windows.Size.Empty*&gt;; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this instance of size is <xref:System.Windows.Size.Empty*>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10849,10929],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for equality.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Windows.Size\"></xref> for equality."},{"pos":[11123,11197],"content":"The first instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The first instance of <xref href=\"System.Windows.Size\"></xref> to compare."},{"pos":[11265,11340],"content":"The second instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The second instance of <xref href=\"System.Windows.Size\"></xref> to compare."},{"pos":[11399,11553],"content":"true if the two instances of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> are equal; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"true if the two instances of <xref href=\"System.Windows.Size\"></xref> are equal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12206,12218],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12283,12295],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12951,12963],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13029,13041],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13542,13624],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for inequality.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Windows.Size\"></xref> for inequality."},{"pos":[13820,13894],"content":"The first instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The first instance of <xref href=\"System.Windows.Size\"></xref> to compare."},{"pos":[13962,14037],"content":"The second instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The second instance of <xref href=\"System.Windows.Size\"></xref> to compare."},{"pos":[14096,14306],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the instances of <bpt id=\"p2\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> are not equal; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the instances of <xref href=\"System.Windows.Size\"></xref> are not equal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14706,14808],"content":"Returns an instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from a converted &lt;xref:System.String&gt;.","needQuote":true,"needEscape":true,"source":"Returns an instance of <xref href=\"System.Windows.Size\"></xref> from a converted <xref:System.String>."},{"pos":[14967,15057],"content":"A &lt;xref:System.String&gt; value to parse to a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"A <xref:System.String> value to parse to a <xref href=\"System.Windows.Size\"></xref> value."},{"pos":[15121,15177],"content":"An instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An instance of <xref href=\"System.Windows.Size\"></xref>."},{"pos":[15792,15964],"content":"This type or member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"source":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"pos":[16138,16156],"content":"The format to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The format to use.","pos":[0,18]}]},{"pos":[16230,16270],"content":"The provider to use to format the value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider to use to format the value.","pos":[0,40]}]},{"pos":[16328,16386],"content":"The value of the current instance in the specified format.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the current instance in the specified format.","pos":[0,58]}]},{"pos":[16768,16868],"content":"Returns a &lt;xref:System.String&gt; that represents this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns a <xref:System.String> that represents this <xref href=\"System.Windows.Size\"></xref> object."},{"pos":[16880,17071],"content":"If the &lt;xref:System.Windows.Size.Width%2A&gt; property is set to 30 and the &lt;xref:System.Windows.Size.Height%2A&gt; property is set to 40, the ToString method returns a string that says <ph id=\"ph1\">`\"30, 40\"`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the <xref:System.Windows.Size.Width%2A> property is set to 30 and the <xref:System.Windows.Size.Height%2A> property is set to 40, the ToString method returns a string that says `\"30, 40\"`."},{"pos":[17207,17278],"content":"A <xref:System.String> that specifies the width followed by the height.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that specifies the width followed by the height.","pos":[0,71],"source":"A <xref:System.String> that specifies the width followed by the height."}]},{"pos":[17733,17838],"content":"Returns a &lt;xref:System.String&gt; that represents this instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref:System.String> that represents this instance of <xref href=\"System.Windows.Size\"></xref>."},{"pos":[18002,18054],"content":"An object that provides a way to control formatting.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that provides a way to control formatting.","pos":[0,52]}]},{"pos":[18112,18204],"content":"A &lt;xref:System.String&gt; that represents this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref:System.String> that represents this <xref href=\"System.Windows.Size\"></xref> object."},{"pos":[18547,18631],"content":"Gets or sets the Width of this instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the Width of this instance of <xref href=\"System.Windows.Size\"></xref>."},{"pos":[18746,18873],"content":"The Width of this instance of <xref href=\"System.Windows.Size\"></xref>. The default value is `0`. The value cannot be negative.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Width of this instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,71],"source":"The Width of this instance of <xref href=\"System.Windows.Size\"></xref>."},{"content":"The default value is <ph id=\"ph1\">`0`</ph>.","pos":[72,97],"source":" The default value is `0`."},{"content":"The value cannot be negative.","pos":[98,127]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Size\n  id: Size\n  children:\n  - System.Windows.Size.#ctor(System.Double,System.Double)\n  - System.Windows.Size.Empty\n  - System.Windows.Size.Equals(System.Object)\n  - System.Windows.Size.Equals(System.Windows.Size)\n  - System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)\n  - System.Windows.Size.GetHashCode\n  - System.Windows.Size.Height\n  - System.Windows.Size.IsEmpty\n  - System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)\n  - System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Point)\n  - System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Vector)\n  - System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)\n  - System.Windows.Size.Parse(System.String)\n  - System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.Size.ToString\n  - System.Windows.Size.ToString(System.IFormatProvider)\n  - System.Windows.Size.Width\n  langs:\n  - csharp\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n  type: Struct\n  summary: Implements a structure that is used to describe the Size of an object.\n  remarks: \"Size is particularly useful because it describes both the <xref:System.Windows.Size.Height%2A> and <xref:System.Windows.Size.Width%2A> of an object. Size is used extensively by the layout system to arrange and measure elements.  \\n  \\n<a name=\\\"xamlAttributeUsage_Size\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object property=\\\"width,height\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_Size\\\"></a>   \\n## XAML Values  \\n *width*  \\n A value greater than or equal to 0 that specifies the <xref:System.Windows.Size.Width%2A> of the Size structure.  \\n  \\n *height*  \\n A value greater than or equal to 0 that specifies the <xref:System.Windows.Size.Height%2A> of the Size structure.\"\n  example:\n  - \"The following example demonstrates how to use a Size structure in code.  \\n  \\n [!code-cs[PlotPanel#2](~/add/codesnippet/csharp/PlotPanel_csharp/PlotPanel.cs#2)]\\n [!code-cpp[PlotPanel#2](~/add/codesnippet/cpp/plotpanel/PlotPanel.cpp#2)]\\n [!code-vb[PlotPanel#2](~/add/codesnippet/visualbasic/PlotPanel/PlotPanel.vb#2)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.SizeConverter))]\n\n      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.SizeValueSerializer))]\n\n      public struct Size : IFormattable\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.IFormattable\n  platform:\n  - net462\n- uid: System.Windows.Size.#ctor(System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double)'\n  parent: System.Windows.Size\n  langs:\n  - csharp\n  name: Size(Double,Double)\n  nameWithType: Size.Size(Double,Double)\n  fullName: System.Windows.Size.Size(Double,Double)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Size\"></xref> structure and assigns it an initial <code>width</code> and <code>height</code>.\n  remarks: The `width` and `height` cannot be negative.\n  syntax:\n    content: public Size (double width, double height);\n    parameters:\n    - id: width\n      type: System.Double\n      description: The initial width of the instance of <xref href=\"System.Windows.Size\"></xref>.\n    - id: height\n      type: System.Double\n      description: The initial height of the instance of <xref href=\"System.Windows.Size\"></xref>.\n  overload: System.Windows.Size.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Size.Empty\n  id: Empty\n  parent: System.Windows.Size\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: Size.Empty\n  fullName: System.Windows.Size.Empty\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets a value that represents a static empty <xref href=\"System.Windows.Size\"></xref>.\n  remarks: The <xref:System.Windows.Size.Width%2A> and <xref:System.Windows.Size.Height%2A> of the instance of <xref:System.Windows.Size> are equal to negative-infinity when this property is invoked. This is the only situation where <xref:System.Windows.Size> can be a negative number.\n  syntax:\n    content: public static System.Windows.Size Empty { get; }\n    return:\n      type: System.Windows.Size\n      description: An empty instance of <xref href=\"System.Windows.Size\"></xref>.\n  overload: System.Windows.Size.Empty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Size.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Size\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Size.Equals(Object)\n  fullName: System.Windows.Size.Equals(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Compares an object to an instance of <xref href=\"System.Windows.Size\"></xref> for equality.\n  remarks: <xref:System.Double> values can result in an error when operated upon. Values that are logically equal might fail to result in a value of `true`.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The <xref:System.Object> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the sizes are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Size.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Size.Equals(System.Windows.Size)\n  id: Equals(System.Windows.Size)\n  parent: System.Windows.Size\n  langs:\n  - csharp\n  name: Equals(Size)\n  nameWithType: Size.Equals(Size)\n  fullName: System.Windows.Size.Equals(Size)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Compares a value to an instance of <xref href=\"System.Windows.Size\"></xref> for equality.\n  remarks: <xref:System.Double> values can result in an error when operated upon. Values that are logically equal might fail to result in a value of `true`.\n  syntax:\n    content: public bool Equals (System.Windows.Size value);\n    parameters:\n    - id: value\n      type: System.Windows.Size\n      description: The size to compare to this current instance of <xref href=\"System.Windows.Size\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the instances of <xref href=\"System.Windows.Size\"></xref> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Size.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)\n  id: Equals(System.Windows.Size,System.Windows.Size)\n  parent: System.Windows.Size\n  langs:\n  - csharp\n  name: Equals(Size,Size)\n  nameWithType: Size.Equals(Size,Size)\n  fullName: System.Windows.Size.Equals(Size,Size)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Compares two instances of <xref href=\"System.Windows.Size\"></xref> for equality.\n  remarks: <xref:System.Double> values can result in an error when operated upon. Values that are logically equal might fail to result in a value of `true`.\n  syntax:\n    content: public static bool Equals (System.Windows.Size size1, System.Windows.Size size2);\n    parameters:\n    - id: size1\n      type: System.Windows.Size\n      description: The first instance of <xref href=\"System.Windows.Size\"></xref> to compare.\n    - id: size2\n      type: System.Windows.Size\n      description: The second instance of <xref href=\"System.Windows.Size\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the instances of <xref href=\"System.Windows.Size\"></xref> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Size.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Size.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Size\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Size.GetHashCode()\n  fullName: System.Windows.Size.GetHashCode()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the hash code for this instance of <xref href=\"System.Windows.Size\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for this instance of <xref href=\"System.Windows.Size\"></xref>.\n  overload: System.Windows.Size.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Size.Height\n  id: Height\n  parent: System.Windows.Size\n  langs:\n  - csharp\n  name: Height\n  nameWithType: Size.Height\n  fullName: System.Windows.Size.Height\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets or sets the Height of this instance of <xref href=\"System.Windows.Size\"></xref>.\n  syntax:\n    content: public double Height { get; set; }\n    return:\n      type: System.Double\n      description: The Height of this instance of <xref href=\"System.Windows.Size\"></xref>. The default is 0. The value cannot be negative.\n  overload: System.Windows.Size.Height*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Size.IsEmpty\n  id: IsEmpty\n  parent: System.Windows.Size\n  langs:\n  - csharp\n  name: IsEmpty\n  nameWithType: Size.IsEmpty\n  fullName: System.Windows.Size.IsEmpty\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets a value that indicates whether this instance of <xref href=\"System.Windows.Size\"></xref> is <xref:System.Windows.Size.Empty*>.\n  remarks: Even if <xref:System.Windows.Size> is 0, the instance of <xref:System.Windows.Size> will still contain a 0 or 1, indicating a zero- or one-dimensional set of points. Therefore, do not use this property to check for a 0 area.\n  syntax:\n    content: public bool IsEmpty { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this instance of size is <xref:System.Windows.Size.Empty*>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Size.IsEmpty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)\n  id: op_Equality(System.Windows.Size,System.Windows.Size)\n  parent: System.Windows.Size\n  langs:\n  - csharp\n  name: op_Equality(Size,Size)\n  nameWithType: Size.op_Equality(Size,Size)\n  fullName: System.Windows.Size.op_Equality(Size,Size)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Compares two instances of <xref href=\"System.Windows.Size\"></xref> for equality.\n  syntax:\n    content: public static bool op_Equality (System.Windows.Size size1, System.Windows.Size size2);\n    parameters:\n    - id: size1\n      type: System.Windows.Size\n      description: The first instance of <xref href=\"System.Windows.Size\"></xref> to compare.\n    - id: size2\n      type: System.Windows.Size\n      description: The second instance of <xref href=\"System.Windows.Size\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: true if the two instances of <xref href=\"System.Windows.Size\"></xref> are equal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Size.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Point)\n  id: op_Explicit(System.Windows.Size to System.Windows.Point)\n  parent: System.Windows.Size\n  langs:\n  - csharp\n  name: op_Explicit(Size)\n  nameWithType: Size.op_Explicit(Size)\n  fullName: System.Windows.Size.op_Explicit(Size)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  syntax:\n    content: public static System.Windows.Point op_Explicit (System.Windows.Size size);\n    parameters:\n    - id: size\n      type: System.Windows.Size\n      description: To be added.\n    return:\n      type: System.Windows.Point\n      description: To be added.\n  overload: System.Windows.Size.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Vector)\n  id: op_Explicit(System.Windows.Size to System.Windows.Vector)\n  parent: System.Windows.Size\n  langs:\n  - csharp\n  name: op_Explicit(Size)\n  nameWithType: Size.op_Explicit(Size)\n  fullName: System.Windows.Size.op_Explicit(Size)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  syntax:\n    content: public static System.Windows.Vector op_Explicit (System.Windows.Size size);\n    parameters:\n    - id: size\n      type: System.Windows.Size\n      description: To be added.\n    return:\n      type: System.Windows.Vector\n      description: To be added.\n  overload: System.Windows.Size.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)\n  id: op_Inequality(System.Windows.Size,System.Windows.Size)\n  parent: System.Windows.Size\n  langs:\n  - csharp\n  name: op_Inequality(Size,Size)\n  nameWithType: Size.op_Inequality(Size,Size)\n  fullName: System.Windows.Size.op_Inequality(Size,Size)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Compares two instances of <xref href=\"System.Windows.Size\"></xref> for inequality.\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Size size1, System.Windows.Size size2);\n    parameters:\n    - id: size1\n      type: System.Windows.Size\n      description: The first instance of <xref href=\"System.Windows.Size\"></xref> to compare.\n    - id: size2\n      type: System.Windows.Size\n      description: The second instance of <xref href=\"System.Windows.Size\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the instances of <xref href=\"System.Windows.Size\"></xref> are not equal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Size.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Size.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Windows.Size\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: Size.Parse(String)\n  fullName: System.Windows.Size.Parse(String)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Returns an instance of <xref href=\"System.Windows.Size\"></xref> from a converted <xref:System.String>.\n  syntax:\n    content: public static System.Windows.Size Parse (string source);\n    parameters:\n    - id: source\n      type: System.String\n      description: A <xref:System.String> value to parse to a <xref href=\"System.Windows.Size\"></xref> value.\n    return:\n      type: System.Windows.Size\n      description: An instance of <xref href=\"System.Windows.Size\"></xref>.\n  overload: System.Windows.Size.Parse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  id: System#IFormattable#ToString(System.String,System.IFormatProvider)\n  isEii: true\n  parent: System.Windows.Size\n  langs:\n  - csharp\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: Size.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Size.System.IFormattable.ToString(String,IFormatProvider)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: string IFormattable.ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: The format to use.\n    - id: provider\n      type: System.IFormatProvider\n      description: The provider to use to format the value.\n    return:\n      type: System.String\n      description: The value of the current instance in the specified format.\n  overload: System.Windows.Size.System#IFormattable#ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Size.ToString\n  id: ToString\n  parent: System.Windows.Size\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Size.ToString()\n  fullName: System.Windows.Size.ToString()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Returns a <xref:System.String> that represents this <xref href=\"System.Windows.Size\"></xref> object.\n  remarks: If the <xref:System.Windows.Size.Width%2A> property is set to 30 and the <xref:System.Windows.Size.Height%2A> property is set to 40, the ToString method returns a string that says `\"30, 40\"`.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref:System.String> that specifies the width followed by the height.\n  overload: System.Windows.Size.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Size.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Windows.Size\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: Size.ToString(IFormatProvider)\n  fullName: System.Windows.Size.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Returns a <xref:System.String> that represents this instance of <xref href=\"System.Windows.Size\"></xref>.\n  syntax:\n    content: public string ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that provides a way to control formatting.\n    return:\n      type: System.String\n      description: A <xref:System.String> that represents this <xref href=\"System.Windows.Size\"></xref> object.\n  overload: System.Windows.Size.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Size.Width\n  id: Width\n  parent: System.Windows.Size\n  langs:\n  - csharp\n  name: Width\n  nameWithType: Size.Width\n  fullName: System.Windows.Size.Width\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets or sets the Width of this instance of <xref href=\"System.Windows.Size\"></xref>.\n  syntax:\n    content: public double Width { get; set; }\n    return:\n      type: System.Double\n      description: The Width of this instance of <xref href=\"System.Windows.Size\"></xref>. The default value is `0`. The value cannot be negative.\n  overload: System.Windows.Size.Width*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.Size.#ctor(System.Double,System.Double)\n  parent: System.Windows.Size\n  isExternal: false\n  name: Size(Double,Double)\n  nameWithType: Size.Size(Double,Double)\n  fullName: System.Windows.Size.Size(Double,Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Size.Empty\n  parent: System.Windows.Size\n  isExternal: false\n  name: Empty\n  nameWithType: Size.Empty\n  fullName: System.Windows.Size.Empty\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Windows.Size.Equals(System.Object)\n  parent: System.Windows.Size\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Size.Equals(Object)\n  fullName: System.Windows.Size.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Size.Equals(System.Windows.Size)\n  parent: System.Windows.Size\n  isExternal: false\n  name: Equals(Size)\n  nameWithType: Size.Equals(Size)\n  fullName: System.Windows.Size.Equals(Size)\n- uid: System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)\n  parent: System.Windows.Size\n  isExternal: false\n  name: Equals(Size,Size)\n  nameWithType: Size.Equals(Size,Size)\n  fullName: System.Windows.Size.Equals(Size,Size)\n- uid: System.Windows.Size.GetHashCode\n  parent: System.Windows.Size\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Size.GetHashCode()\n  fullName: System.Windows.Size.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Size.Height\n  parent: System.Windows.Size\n  isExternal: false\n  name: Height\n  nameWithType: Size.Height\n  fullName: System.Windows.Size.Height\n- uid: System.Windows.Size.IsEmpty\n  parent: System.Windows.Size\n  isExternal: false\n  name: IsEmpty\n  nameWithType: Size.IsEmpty\n  fullName: System.Windows.Size.IsEmpty\n- uid: System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)\n  parent: System.Windows.Size\n  isExternal: false\n  name: op_Equality(Size,Size)\n  nameWithType: Size.op_Equality(Size,Size)\n  fullName: System.Windows.Size.op_Equality(Size,Size)\n- uid: System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Point)\n  parent: System.Windows.Size\n  isExternal: false\n  name: op_Explicit(Size)\n  nameWithType: Size.op_Explicit(Size)\n  fullName: System.Windows.Size.op_Explicit(Size)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Vector)\n  parent: System.Windows.Size\n  isExternal: false\n  name: op_Explicit(Size)\n  nameWithType: Size.op_Explicit(Size)\n  fullName: System.Windows.Size.op_Explicit(Size)\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: false\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector\n- uid: System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)\n  parent: System.Windows.Size\n  isExternal: false\n  name: op_Inequality(Size,Size)\n  nameWithType: Size.op_Inequality(Size,Size)\n  fullName: System.Windows.Size.op_Inequality(Size,Size)\n- uid: System.Windows.Size.Parse(System.String)\n  parent: System.Windows.Size\n  isExternal: false\n  name: Parse(String)\n  nameWithType: Size.Parse(String)\n  fullName: System.Windows.Size.Parse(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  parent: System.Windows.Size\n  isExternal: false\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: Size.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Size.System.IFormattable.ToString(String,IFormatProvider)\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: true\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.Size.ToString\n  parent: System.Windows.Size\n  isExternal: false\n  name: ToString()\n  nameWithType: Size.ToString()\n  fullName: System.Windows.Size.ToString()\n- uid: System.Windows.Size.ToString(System.IFormatProvider)\n  parent: System.Windows.Size\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: Size.ToString(IFormatProvider)\n  fullName: System.Windows.Size.ToString(IFormatProvider)\n- uid: System.Windows.Size.Width\n  parent: System.Windows.Size\n  isExternal: false\n  name: Width\n  nameWithType: Size.Width\n  fullName: System.Windows.Size.Width\n- uid: System.Windows.Size.#ctor*\n  parent: System.Windows.Size\n  isExternal: false\n  name: Size\n  nameWithType: Size.Size\n- uid: System.Windows.Size.Empty*\n  parent: System.Windows.Size\n  isExternal: false\n  name: Empty\n  nameWithType: Size.Empty\n- uid: System.Windows.Size.Equals*\n  parent: System.Windows.Size\n  isExternal: false\n  name: Equals\n  nameWithType: Size.Equals\n- uid: System.Windows.Size.GetHashCode*\n  parent: System.Windows.Size\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Size.GetHashCode\n- uid: System.Windows.Size.Height*\n  parent: System.Windows.Size\n  isExternal: false\n  name: Height\n  nameWithType: Size.Height\n- uid: System.Windows.Size.IsEmpty*\n  parent: System.Windows.Size\n  isExternal: false\n  name: IsEmpty\n  nameWithType: Size.IsEmpty\n- uid: System.Windows.Size.op_Equality*\n  parent: System.Windows.Size\n  isExternal: false\n  name: op_Equality\n  nameWithType: Size.op_Equality\n- uid: System.Windows.Size.op_Explicit*\n  parent: System.Windows.Size\n  isExternal: false\n  name: op_Explicit\n  nameWithType: Size.op_Explicit\n- uid: System.Windows.Size.op_Inequality*\n  parent: System.Windows.Size\n  isExternal: false\n  name: op_Inequality\n  nameWithType: Size.op_Inequality\n- uid: System.Windows.Size.Parse*\n  parent: System.Windows.Size\n  isExternal: false\n  name: Parse\n  nameWithType: Size.Parse\n- uid: System.Windows.Size.System#IFormattable#ToString*\n  parent: System.Windows.Size\n  isExternal: false\n  name: System.IFormattable.ToString\n  nameWithType: Size.System.IFormattable.ToString\n- uid: System.Windows.Size.ToString*\n  parent: System.Windows.Size\n  isExternal: false\n  name: ToString\n  nameWithType: Size.ToString\n- uid: System.Windows.Size.Width*\n  parent: System.Windows.Size\n  isExternal: false\n  name: Width\n  nameWithType: Size.Width\n"}