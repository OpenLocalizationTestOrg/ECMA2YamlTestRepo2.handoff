{"nodes":[{"pos":[900,912],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[949,961],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[999,1011],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3764,3776],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4658,4670],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4722,4734],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5410,5422],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6103,6115],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Expressions.LessThanOrEqual`3\n  id: LessThanOrEqual`3\n  children:\n  - System.Activities.Expressions.LessThanOrEqual`3.#ctor\n  - System.Activities.Expressions.LessThanOrEqual`3.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Expressions.LessThanOrEqual`3.Execute(System.Activities.CodeActivityContext)\n  - System.Activities.Expressions.LessThanOrEqual`3.Left\n  - System.Activities.Expressions.LessThanOrEqual`3.Right\n  langs:\n  - csharp\n  name: LessThanOrEqual<TLeft,TRight,TResult>\n  nameWithType: LessThanOrEqual<TLeft,TRight,TResult>\n  fullName: System.Activities.Expressions.LessThanOrEqual<TLeft,TRight,TResult>\n  type: Class\n  syntax:\n    content: 'public sealed class LessThanOrEqual<TLeft,TRight,TResult> : System.Activities.CodeActivity<TResult>'\n    typeParameters:\n    - id: TLeft\n      description: To be added.\n    - id: TRight\n      description: To be added.\n    - id: TResult\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.CodeActivity`1\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(`0)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.CodeActivity`1.Implementation\n  - System.Activities.CodeActivity`1.ImplementationVersion\n  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  platform:\n  - net462\n- uid: System.Activities.Expressions.LessThanOrEqual`3.#ctor\n  id: '#ctor'\n  parent: System.Activities.Expressions.LessThanOrEqual`3\n  langs:\n  - csharp\n  name: LessThanOrEqual()\n  nameWithType: LessThanOrEqual<TLeft,TRight,TResult>.LessThanOrEqual()\n  fullName: System.Activities.Expressions.LessThanOrEqual<TLeft,TRight,TResult>.LessThanOrEqual()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public LessThanOrEqual ();\n    parameters: []\n  overload: System.Activities.Expressions.LessThanOrEqual`3.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.LessThanOrEqual`3.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.LessThanOrEqual`3\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: LessThanOrEqual<TLeft,TRight,TResult>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.LessThanOrEqual<TLeft,TRight,TResult>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Expressions.LessThanOrEqual`3.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.LessThanOrEqual`3.Execute(System.Activities.CodeActivityContext)\n  id: Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.LessThanOrEqual`3\n  langs:\n  - csharp\n  name: Execute(CodeActivityContext)\n  nameWithType: LessThanOrEqual<TLeft,TRight,TResult>.Execute(CodeActivityContext)\n  fullName: System.Activities.Expressions.LessThanOrEqual<TLeft,TRight,TResult>.Execute(CodeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override TResult Execute (System.Activities.CodeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.CodeActivityContext\n      description: To be added.\n    return:\n      type: TResult\n      description: To be added.\n  overload: System.Activities.Expressions.LessThanOrEqual`3.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.LessThanOrEqual`3.Left\n  id: Left\n  parent: System.Activities.Expressions.LessThanOrEqual`3\n  langs:\n  - csharp\n  name: Left\n  nameWithType: LessThanOrEqual<TLeft,TRight,TResult>.Left\n  fullName: System.Activities.Expressions.LessThanOrEqual<TLeft,TRight,TResult>.Left\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<TLeft> Left { get; set; }\n    return:\n      type: System.Activities.InArgument{TLeft}\n      description: To be added.\n  overload: System.Activities.Expressions.LessThanOrEqual`3.Left*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.LessThanOrEqual`3.Right\n  id: Right\n  parent: System.Activities.Expressions.LessThanOrEqual`3\n  langs:\n  - csharp\n  name: Right\n  nameWithType: LessThanOrEqual<TLeft,TRight,TResult>.Right\n  fullName: System.Activities.Expressions.LessThanOrEqual<TLeft,TRight,TResult>.Right\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<TRight> Right { get; set; }\n    return:\n      type: System.Activities.InArgument{TRight}\n      description: To be added.\n  overload: System.Activities.Expressions.LessThanOrEqual`3.Right*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.CodeActivity`1\n  isExternal: false\n  name: System.Activities.CodeActivity<TResult>\n- uid: System.Activities.Expressions.LessThanOrEqual`3.#ctor\n  parent: System.Activities.Expressions.LessThanOrEqual`3\n  isExternal: false\n  name: LessThanOrEqual()\n  nameWithType: LessThanOrEqual<TLeft,TRight,TResult>.LessThanOrEqual()\n  fullName: System.Activities.Expressions.LessThanOrEqual<TLeft,TRight,TResult>.LessThanOrEqual()\n- uid: System.Activities.Expressions.LessThanOrEqual`3.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.LessThanOrEqual`3\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: LessThanOrEqual<TLeft,TRight,TResult>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.LessThanOrEqual<TLeft,TRight,TResult>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Expressions.LessThanOrEqual`3.Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.LessThanOrEqual`3\n  isExternal: false\n  name: Execute(CodeActivityContext)\n  nameWithType: LessThanOrEqual<TLeft,TRight,TResult>.Execute(CodeActivityContext)\n  fullName: System.Activities.Expressions.LessThanOrEqual<TLeft,TRight,TResult>.Execute(CodeActivityContext)\n- uid: TResult\n  isExternal: true\n  name: TResult\n  nameWithType: TResult\n  fullName: TResult\n- uid: System.Activities.CodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityContext\n  nameWithType: CodeActivityContext\n  fullName: System.Activities.CodeActivityContext\n- uid: System.Activities.Expressions.LessThanOrEqual`3.Left\n  parent: System.Activities.Expressions.LessThanOrEqual`3\n  isExternal: false\n  name: Left\n  nameWithType: LessThanOrEqual<TLeft,TRight,TResult>.Left\n  fullName: System.Activities.Expressions.LessThanOrEqual<TLeft,TRight,TResult>.Left\n- uid: System.Activities.InArgument{TLeft}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<TLeft>\n  nameWithType: InArgument<TLeft>\n  fullName: System.Activities.InArgument<TLeft>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<TLeft>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TLeft\n    name: TLeft\n    nameWithType: TLeft\n    fullName: TLeft\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.LessThanOrEqual`3.Right\n  parent: System.Activities.Expressions.LessThanOrEqual`3\n  isExternal: false\n  name: Right\n  nameWithType: LessThanOrEqual<TLeft,TRight,TResult>.Right\n  fullName: System.Activities.Expressions.LessThanOrEqual<TLeft,TRight,TResult>.Right\n- uid: System.Activities.InArgument{TRight}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<TRight>\n  nameWithType: InArgument<TRight>\n  fullName: System.Activities.InArgument<TRight>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<TRight>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TRight\n    name: TRight\n    nameWithType: TRight\n    fullName: TRight\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.LessThanOrEqual`3.#ctor*\n  parent: System.Activities.Expressions.LessThanOrEqual`3\n  isExternal: false\n  name: LessThanOrEqual<TLeft,TRight,TResult>\n  nameWithType: LessThanOrEqual<TLeft,TRight,TResult>.LessThanOrEqual<TLeft,TRight,TResult>\n- uid: System.Activities.Expressions.LessThanOrEqual`3.CacheMetadata*\n  parent: System.Activities.Expressions.LessThanOrEqual`3\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: LessThanOrEqual<TLeft,TRight,TResult>.CacheMetadata\n- uid: System.Activities.Expressions.LessThanOrEqual`3.Execute*\n  parent: System.Activities.Expressions.LessThanOrEqual`3\n  isExternal: false\n  name: Execute\n  nameWithType: LessThanOrEqual<TLeft,TRight,TResult>.Execute\n- uid: System.Activities.Expressions.LessThanOrEqual`3.Left*\n  parent: System.Activities.Expressions.LessThanOrEqual`3\n  isExternal: false\n  name: Left\n  nameWithType: LessThanOrEqual<TLeft,TRight,TResult>.Left\n- uid: System.Activities.Expressions.LessThanOrEqual`3.Right*\n  parent: System.Activities.Expressions.LessThanOrEqual`3\n  isExternal: false\n  name: Right\n  nameWithType: LessThanOrEqual<TLeft,TRight,TResult>.Right\n"}