{"nodes":[{"pos":[785,990],"content":"The result of evaluating all authorization policies available from the tokens in the sent message and by calling the <xref:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of evaluating all authorization policies available from the tokens in the sent message and by calling the &lt;xref:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies*&gt; method.","pos":[0,205],"source":"The result of evaluating all authorization policies available from the tokens in the sent message and by calling the <xref:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies*> method."}]},{"pos":[1003,1558],"content":"Evaluating all of the authorization policies in an authorization manager results in a set of <xref:System.IdentityModel.Claims.ClaimSet> objects. These objects make up an authorization context.       An authorization context contains a set of claim set objects, an expiration time that specifies the span of time during which the authorization context is valid, and a unique identifier.       The AuthorizationContext for the current operation can be accessed via the <xref:System.ServiceModel.ServiceSecurityContext.AuthorizationContext%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Evaluating all of the authorization policies in an authorization manager results in a set of <xref:System.IdentityModel.Claims.ClaimSet> objects. These objects make up an authorization context.       An authorization context contains a set of claim set objects, an expiration time that specifies the span of time during which the authorization context is valid, and a unique identifier.       The AuthorizationContext for the current operation can be accessed via the <xref:System.ServiceModel.ServiceSecurityContext.AuthorizationContext%2A> property.","pos":[0,551],"nodes":[{"content":"Evaluating all of the authorization policies in an authorization manager results in a set of &lt;xref:System.IdentityModel.Claims.ClaimSet&gt; objects.","pos":[0,145],"source":"Evaluating all of the authorization policies in an authorization manager results in a set of <xref:System.IdentityModel.Claims.ClaimSet> objects."},{"content":"These objects make up an authorization context.","pos":[146,193]},{"content":"An authorization context contains a set of claim set objects, an expiration time that specifies the span of time during which the authorization context is valid, and a unique identifier.","pos":[200,386]},{"content":"The AuthorizationContext for the current operation can be accessed via the &lt;xref:System.ServiceModel.ServiceSecurityContext.AuthorizationContext%2A&gt; property.","pos":[393,551],"source":"       The AuthorizationContext for the current operation can be accessed via the <xref:System.ServiceModel.ServiceSecurityContext.AuthorizationContext%2A> property."}]}]},{"pos":[2494,2604],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.AuthorizationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> class."},{"pos":[2616,2653],"content":"The default constructor does nothing.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default constructor does nothing.","pos":[0,37]}]},{"pos":[3244,3307],"content":"Gets the set of claims associated with an authorization policy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the set of claims associated with an authorization policy.","pos":[0,63]}]},{"pos":[3319,3544],"content":"Use the ClaimSets property to get the set of claims that were added by the authorization policy. A class deriving from <xref:System.ServiceModel.ServiceAuthorizationManager> can use the claims to make authorization decisions.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the ClaimSets property to get the set of claims that were added by the authorization policy. A class deriving from <xref:System.ServiceModel.ServiceAuthorizationManager> can use the claims to make authorization decisions.","pos":[0,225],"nodes":[{"content":"Use the ClaimSets property to get the set of claims that were added by the authorization policy.","pos":[0,96]},{"content":"A class deriving from &lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt; can use the claims to make authorization decisions.","pos":[97,225],"source":" A class deriving from <xref:System.ServiceModel.ServiceAuthorizationManager> can use the claims to make authorization decisions."}]}]},{"pos":[4040,4207],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id=\"ph2\">&amp;gt;</ph> of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Claims.ClaimSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the set of claims.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref> that contains the set of claims."},{"pos":[5098,5235],"content":"Evaluate all of the specified authorization policies and create an <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.AuthorizationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Evaluate all of the specified authorization policies and create an <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref>."},{"pos":[5247,5337],"content":"The CreateDefaultAuthorizationContext method is typically only used by the infrastructure.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CreateDefaultAuthorizationContext method is typically only used by the infrastructure.","pos":[0,90]}]},{"pos":[5728,5902],"content":"An <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IList%601<ph id=\"ph2\">&amp;gt;</ph> of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the set of authorization policies.","needQuote":true,"needEscape":true,"source":"An &lt;xref:System.Collections.Generic.IList%601&gt; of <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies."},{"pos":[5995,6148],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.AuthorizationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the result of evaluating all the specified authorization policies.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> that contains the result of evaluating all the specified authorization policies."},{"pos":[6715,6848],"content":"Gets the date and time at which this <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.AuthorizationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is no longer valid.","needQuote":true,"needEscape":true,"source":"Gets the date and time at which this <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> object is no longer valid."},{"pos":[6861,7617],"content":"The ExpirationTime property is in Universal Coordinated Time (UTC).      > [!NOTE] >  The service model in [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] does not check the value of the ExpirationTime property. This property is set by [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] using the <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property of the security token on which the authorization context is based. The <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property is checked by [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)], however. The authorization context's expiration time is meant for scenarios such as an authorization policy which has to take some action upon expiration.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ExpirationTime property is in Universal Coordinated Time (UTC).","pos":[0,67]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The service model in <ph id=\"ph2\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> does not check the value of the ExpirationTime property.","pos":[73,222],"source":"      > [!NOTE] >  The service model in [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] does not check the value of the ExpirationTime property."},{"content":"This property is set by <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> using the &lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt; property of the security token on which the authorization context is based.","pos":[223,451],"source":" This property is set by [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] using the <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property of the security token on which the authorization context is based."},{"content":"The &lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt; property is checked by <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph>, however.","pos":[452,607],"source":" The <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property is checked by [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)], however."},{"content":"The authorization context's expiration time is meant for scenarios such as an authorization policy which has to take some action upon expiration.","pos":[608,753]}]},{"pos":[7750,7920],"content":"A &lt;xref:System.DateTime&gt; value that indicates the date and time when this <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.AuthorizationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is no longer valid.","needQuote":true,"needEscape":true,"source":"A <xref:System.DateTime> value that indicates the date and time when this <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> object is no longer valid."},{"pos":[8408,8519],"content":"Gets a unique identifier for this <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.AuthorizationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets a unique identifier for this <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> object."},{"pos":[8531,8568],"content":"Typically, the Id property is a GUID.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Typically, the Id property is a GUID.","pos":[0,37]}]},{"pos":[8684,8763],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.AuthorizationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> object."},{"pos":[9279,9419],"content":"Gets a collection of non-claim properties associated with this <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.AuthorizationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets a collection of non-claim properties associated with this <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> object."},{"pos":[9432,10038],"content":"[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] reserves two properties: `Identities` and `Principal`. The `Identities` property is used by an <xref:System.IdentityModel.Policy.IAuthorizationPolicy> to specify the <xref:System.Collections.Generic.IList%601> of one or more identities that are related to the <xref:System.IdentityModel.Policy.AuthorizationContext>. The `Principal` property is used by an <xref:System.IdentityModel.Policy.IAuthorizationPolicy> to specify the <xref:System.Security.Principal.IPrincipal> that is associated with an <xref:System.IdentityModel.Policy.AuthorizationContext>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> reserves two properties: <ph id=\"ph2\">`Identities`</ph> and <ph id=\"ph3\">`Principal`</ph>.","pos":[0,106],"source":"[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] reserves two properties: `Identities` and `Principal`."},{"content":"The <ph id=\"ph1\">`Identities`</ph> property is used by an &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt; to specify the &lt;xref:System.Collections.Generic.IList%601&gt; of one or more identities that are related to the &lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;.","pos":[107,368],"source":" The `Identities` property is used by an <xref:System.IdentityModel.Policy.IAuthorizationPolicy> to specify the <xref:System.Collections.Generic.IList%601> of one or more identities that are related to the <xref:System.IdentityModel.Policy.AuthorizationContext>."},{"content":"The <ph id=\"ph1\">`Principal`</ph> property is used by an &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt; to specify the &lt;xref:System.Security.Principal.IPrincipal&gt; that is associated with an &lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;.","pos":[369,606],"source":" The `Principal` property is used by an <xref:System.IdentityModel.Policy.IAuthorizationPolicy> to specify the <xref:System.Security.Principal.IPrincipal> that is associated with an <xref:System.IdentityModel.Policy.AuthorizationContext>."}]},{"pos":[10264,10373],"content":"A &lt;xref:System.Collections.Generic.Dictionary%602&gt; that specifies a collection of non-claim properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id=\"ph2\">&amp;gt;</ph> that specifies a collection of non-claim properties.","pos":[0,109],"source":"A &lt;xref:System.Collections.Generic.Dictionary%602&gt; that specifies a collection of non-claim properties."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Policy.AuthorizationContext\n  id: AuthorizationContext\n  children:\n  - System.IdentityModel.Policy.AuthorizationContext.#ctor\n  - System.IdentityModel.Policy.AuthorizationContext.ClaimSets\n  - System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext(System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy})\n  - System.IdentityModel.Policy.AuthorizationContext.ExpirationTime\n  - System.IdentityModel.Policy.AuthorizationContext.Id\n  - System.IdentityModel.Policy.AuthorizationContext.Properties\n  langs:\n  - csharp\n  name: AuthorizationContext\n  nameWithType: AuthorizationContext\n  fullName: System.IdentityModel.Policy.AuthorizationContext\n  type: Class\n  summary: The result of evaluating all authorization policies available from the tokens in the sent message and by calling the <xref:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies*> method.\n  remarks: \"Evaluating all of the authorization policies in an authorization manager results in a set of <xref:System.IdentityModel.Claims.ClaimSet> objects. These objects make up an authorization context.  \\n  \\n An authorization context contains a set of claim set objects, an expiration time that specifies the span of time during which the authorization context is valid, and a unique identifier.  \\n  \\n The AuthorizationContext for the current operation can be accessed via the <xref:System.ServiceModel.ServiceSecurityContext.AuthorizationContext%2A> property.\"\n  example:\n  - >-\n    [!code-cs[C_IAuthorizationPolicy#4](~/add/codesnippet/csharp/t-system.identitymodel.p_2_1.cs)]\n     [!code-vb[C_IAuthorizationPolicy#4](~/add/codesnippet/visualbasic/t-system.identitymodel.p_2_1.vb)]\n  syntax:\n    content: 'public abstract class AuthorizationContext : System.IdentityModel.Policy.IAuthorizationComponent'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IdentityModel.Policy.IAuthorizationComponent\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Policy.AuthorizationContext.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  langs:\n  - csharp\n  name: AuthorizationContext()\n  nameWithType: AuthorizationContext.AuthorizationContext()\n  fullName: System.IdentityModel.Policy.AuthorizationContext.AuthorizationContext()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Policy\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> class.\n  remarks: The default constructor does nothing.\n  syntax:\n    content: protected AuthorizationContext ();\n    parameters: []\n  overload: System.IdentityModel.Policy.AuthorizationContext.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Policy.AuthorizationContext.ClaimSets\n  id: ClaimSets\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  langs:\n  - csharp\n  name: ClaimSets\n  nameWithType: AuthorizationContext.ClaimSets\n  fullName: System.IdentityModel.Policy.AuthorizationContext.ClaimSets\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Policy\n  summary: Gets the set of claims associated with an authorization policy.\n  remarks: Use the ClaimSets property to get the set of claims that were added by the authorization policy. A class deriving from <xref:System.ServiceModel.ServiceAuthorizationManager> can use the claims to make authorization decisions.\n  example:\n  - >-\n    [!code-cs[C_IAuthorizationPolicy#5](~/add/codesnippet/csharp/p-system.identitymodel.p_1.cs)]\n     [!code-vb[C_IAuthorizationPolicy#5](~/add/codesnippet/visualbasic/p-system.identitymodel.p_1.vb)]\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Claims.ClaimSet> ClaimSets { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Claims.ClaimSet}\n      description: A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref> that contains the set of claims.\n  overload: System.IdentityModel.Policy.AuthorizationContext.ClaimSets*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext(System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy})\n  id: CreateDefaultAuthorizationContext(System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy})\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  langs:\n  - csharp\n  name: CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)\n  nameWithType: AuthorizationContext.CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)\n  fullName: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Policy\n  summary: Evaluate all of the specified authorization policies and create an <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref>.\n  remarks: The CreateDefaultAuthorizationContext method is typically only used by the infrastructure.\n  syntax:\n    content: public static System.IdentityModel.Policy.AuthorizationContext CreateDefaultAuthorizationContext (System.Collections.Generic.IList<System.IdentityModel.Policy.IAuthorizationPolicy> authorizationPolicies);\n    parameters:\n    - id: authorizationPolicies\n      type: System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy}\n      description: An &lt;xref:System.Collections.Generic.IList%601&gt; of <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies.\n    return:\n      type: System.IdentityModel.Policy.AuthorizationContext\n      description: An <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> that contains the result of evaluating all the specified authorization policies.\n  overload: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime\n  id: ExpirationTime\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  langs:\n  - csharp\n  name: ExpirationTime\n  nameWithType: AuthorizationContext.ExpirationTime\n  fullName: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Policy\n  summary: Gets the date and time at which this <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> object is no longer valid.\n  remarks: \"The ExpirationTime property is in Universal Coordinated Time (UTC).  \\n  \\n> [!NOTE]\\n>  The service model in [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] does not check the value of the ExpirationTime property. This property is set by [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] using the <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property of the security token on which the authorization context is based. The <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property is checked by [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)], however. The authorization context's expiration time is meant for scenarios such as an authorization policy which has to take some action upon expiration.\"\n  syntax:\n    content: public abstract DateTime ExpirationTime { get; }\n    return:\n      type: System.DateTime\n      description: A <xref:System.DateTime> value that indicates the date and time when this <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> object is no longer valid.\n  overload: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Policy.AuthorizationContext.Id\n  id: Id\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  langs:\n  - csharp\n  name: Id\n  nameWithType: AuthorizationContext.Id\n  fullName: System.IdentityModel.Policy.AuthorizationContext.Id\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Policy\n  summary: Gets a unique identifier for this <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> object.\n  remarks: Typically, the Id property is a GUID.\n  syntax:\n    content: public abstract string Id { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> object.\n  overload: System.IdentityModel.Policy.AuthorizationContext.Id*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Policy.AuthorizationContext.Properties\n  id: Properties\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: AuthorizationContext.Properties\n  fullName: System.IdentityModel.Policy.AuthorizationContext.Properties\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Policy\n  summary: Gets a collection of non-claim properties associated with this <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> object.\n  remarks: '[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] reserves two properties: `Identities` and `Principal`. The `Identities` property is used by an <xref:System.IdentityModel.Policy.IAuthorizationPolicy> to specify the <xref:System.Collections.Generic.IList%601> of one or more identities that are related to the <xref:System.IdentityModel.Policy.AuthorizationContext>. The `Principal` property is used by an <xref:System.IdentityModel.Policy.IAuthorizationPolicy> to specify the <xref:System.Security.Principal.IPrincipal> that is associated with an <xref:System.IdentityModel.Policy.AuthorizationContext>.'\n  syntax:\n    content: public abstract System.Collections.Generic.IDictionary<string,object> Properties { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: A &lt;xref:System.Collections.Generic.Dictionary%602&gt; that specifies a collection of non-claim properties.\n  overload: System.IdentityModel.Policy.AuthorizationContext.Properties*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.IdentityModel.Policy.AuthorizationContext.#ctor\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  isExternal: false\n  name: AuthorizationContext()\n  nameWithType: AuthorizationContext.AuthorizationContext()\n  fullName: System.IdentityModel.Policy.AuthorizationContext.AuthorizationContext()\n- uid: System.IdentityModel.Policy.AuthorizationContext.ClaimSets\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  isExternal: false\n  name: ClaimSets\n  nameWithType: AuthorizationContext.ClaimSets\n  fullName: System.IdentityModel.Policy.AuthorizationContext.ClaimSets\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Claims.ClaimSet}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<ClaimSet>\n  nameWithType: ReadOnlyCollection<ClaimSet>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Claims.ClaimSet>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.IdentityModel.Claims.ClaimSet>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Claims.ClaimSet\n    name: ClaimSet\n    nameWithType: ClaimSet\n    fullName: ClaimSet\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext(System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy})\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  isExternal: false\n  name: CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)\n  nameWithType: AuthorizationContext.CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)\n  fullName: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)\n- uid: System.IdentityModel.Policy.AuthorizationContext\n  parent: System.IdentityModel.Policy\n  isExternal: false\n  name: AuthorizationContext\n  nameWithType: AuthorizationContext\n  fullName: System.IdentityModel.Policy.AuthorizationContext\n- uid: System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<IAuthorizationPolicy>\n  nameWithType: IList<IAuthorizationPolicy>\n  fullName: System.Collections.Generic.IList<System.IdentityModel.Policy.IAuthorizationPolicy>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.IdentityModel.Policy.IAuthorizationPolicy>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Policy.IAuthorizationPolicy\n    name: IAuthorizationPolicy\n    nameWithType: IAuthorizationPolicy\n    fullName: IAuthorizationPolicy\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  isExternal: false\n  name: ExpirationTime\n  nameWithType: AuthorizationContext.ExpirationTime\n  fullName: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.IdentityModel.Policy.AuthorizationContext.Id\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  isExternal: false\n  name: Id\n  nameWithType: AuthorizationContext.Id\n  fullName: System.IdentityModel.Policy.AuthorizationContext.Id\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Policy.AuthorizationContext.Properties\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  isExternal: false\n  name: Properties\n  nameWithType: AuthorizationContext.Properties\n  fullName: System.IdentityModel.Policy.AuthorizationContext.Properties\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.String,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Policy.AuthorizationContext.#ctor*\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  isExternal: false\n  name: AuthorizationContext\n  nameWithType: AuthorizationContext.AuthorizationContext\n- uid: System.IdentityModel.Policy.AuthorizationContext.ClaimSets*\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  isExternal: false\n  name: ClaimSets\n  nameWithType: AuthorizationContext.ClaimSets\n- uid: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext*\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  isExternal: false\n  name: CreateDefaultAuthorizationContext\n  nameWithType: AuthorizationContext.CreateDefaultAuthorizationContext\n- uid: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime*\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  isExternal: false\n  name: ExpirationTime\n  nameWithType: AuthorizationContext.ExpirationTime\n- uid: System.IdentityModel.Policy.AuthorizationContext.Id*\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  isExternal: false\n  name: Id\n  nameWithType: AuthorizationContext.Id\n- uid: System.IdentityModel.Policy.AuthorizationContext.Properties*\n  parent: System.IdentityModel.Policy.AuthorizationContext\n  isExternal: false\n  name: Properties\n  nameWithType: AuthorizationContext.Properties\n"}