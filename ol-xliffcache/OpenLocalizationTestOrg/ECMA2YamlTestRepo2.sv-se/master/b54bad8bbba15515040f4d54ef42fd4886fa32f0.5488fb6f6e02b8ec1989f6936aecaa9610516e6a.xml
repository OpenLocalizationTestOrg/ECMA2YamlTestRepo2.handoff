{"nodes":[{"pos":[945,1019],"content":"Represents a parameter declaration for a method, property, or constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a parameter declaration for a method, property, or constructor.","pos":[0,74]}]},{"pos":[1032,1685],"content":"CodeParameterDeclarationExpression can be used to represent code that declares a parameter for a method, property, or constructor.       The <xref:System.CodeDom.CodeParameterDeclarationExpression.Name%2A> property specifies the name of the parameter. The <xref:System.CodeDom.CodeParameterDeclarationExpression.Type%2A> property specifies the data type of the parameter. The <xref:System.CodeDom.CodeParameterDeclarationExpression.Direction%2A> property specifies the direction modifier of the parameter. The <xref:System.CodeDom.CodeParameterDeclarationExpression.CustomAttributes%2A> property specifies the attributes associated with the parameter.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"CodeParameterDeclarationExpression can be used to represent code that declares a parameter for a method, property, or constructor.       The <xref:System.CodeDom.CodeParameterDeclarationExpression.Name%2A> property specifies the name of the parameter. The <xref:System.CodeDom.CodeParameterDeclarationExpression.Type%2A> property specifies the data type of the parameter. The <xref:System.CodeDom.CodeParameterDeclarationExpression.Direction%2A> property specifies the direction modifier of the parameter. The <xref:System.CodeDom.CodeParameterDeclarationExpression.CustomAttributes%2A> property specifies the attributes associated with the parameter.","pos":[0,651],"nodes":[{"content":"CodeParameterDeclarationExpression can be used to represent code that declares a parameter for a method, property, or constructor.","pos":[0,130]},{"content":"The &lt;xref:System.CodeDom.CodeParameterDeclarationExpression.Name%2A&gt; property specifies the name of the parameter.","pos":[137,251],"source":"       The <xref:System.CodeDom.CodeParameterDeclarationExpression.Name%2A> property specifies the name of the parameter."},{"content":"The &lt;xref:System.CodeDom.CodeParameterDeclarationExpression.Type%2A&gt; property specifies the data type of the parameter.","pos":[252,371],"source":" The <xref:System.CodeDom.CodeParameterDeclarationExpression.Type%2A> property specifies the data type of the parameter."},{"content":"The &lt;xref:System.CodeDom.CodeParameterDeclarationExpression.Direction%2A&gt; property specifies the direction modifier of the parameter.","pos":[372,505],"source":" The <xref:System.CodeDom.CodeParameterDeclarationExpression.Direction%2A> property specifies the direction modifier of the parameter."},{"content":"The &lt;xref:System.CodeDom.CodeParameterDeclarationExpression.CustomAttributes%2A&gt; property specifies the attributes associated with the parameter.","pos":[506,651],"source":" The <xref:System.CodeDom.CodeParameterDeclarationExpression.CustomAttributes%2A> property specifies the attributes associated with the parameter."}]}]},{"pos":[3186,3297],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeParameterDeclarationExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeParameterDeclarationExpression\"></xref> class."},{"pos":[4136,4291],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeParameterDeclarationExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified parameter type and name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeParameterDeclarationExpression\"></xref> class using the specified parameter type and name."},{"pos":[4506,4568],"content":"An object that indicates the type of the parameter to declare.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that indicates the type of the parameter to declare.","pos":[0,62]}]},{"pos":[4629,4666],"content":"The name of the parameter to declare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter to declare.","pos":[0,37]}]},{"pos":[5346,5501],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeParameterDeclarationExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified parameter type and name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeParameterDeclarationExpression\"></xref> class using the specified parameter type and name."},{"pos":[5514,6190],"content":"If the `type` parameter references a generic type, it must follow the syntax conventions for generic types. Generic types are formatted as follows: the name of the type, followed by a grave accent (\"`\"), followed by a count of the generic type arguments, followed by the parameters delimited with brackets.      > [!NOTE] >  You must use square brackets ([]) and not the C# angle brackets (<>) to delimit generic parameters.       To avoid the possibility of making a syntactic mistake, consider using the <xref:System.CodeDom.CodeParameterDeclarationExpression.%23ctor%28System.Type%2CSystem.String%29> constructor that takes a type instead of a string as a parameter.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the <ph id=\"ph1\">`type`</ph> parameter references a generic type, it must follow the syntax conventions for generic types.","pos":[0,107],"source":"If the `type` parameter references a generic type, it must follow the syntax conventions for generic types."},{"content":"Generic types are formatted as follows: the name of the type, followed by a grave accent (\"`\"), followed by a count of the generic type arguments, followed by the parameters delimited with brackets.","pos":[108,306]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You must use square brackets ([]) and not the C# angle brackets (&lt;&gt;) to delimit generic parameters.","pos":[312,424],"source":"      > [!NOTE] >  You must use square brackets ([]) and not the C# angle brackets (<>) to delimit generic parameters."},{"content":"To avoid the possibility of making a syntactic mistake, consider using the &lt;xref:System.CodeDom.CodeParameterDeclarationExpression.%23ctor%28System.Type%2CSystem.String%29&gt; constructor that takes a type instead of a string as a parameter.","pos":[431,669],"source":"       To avoid the possibility of making a syntactic mistake, consider using the <xref:System.CodeDom.CodeParameterDeclarationExpression.%23ctor%28System.Type%2CSystem.String%29> constructor that takes a type instead of a string as a parameter."}]},{"pos":[6361,6398],"content":"The type of the parameter to declare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the parameter to declare.","pos":[0,37]}]},{"pos":[6459,6496],"content":"The name of the parameter to declare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter to declare.","pos":[0,37]}]},{"pos":[7166,7321],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeParameterDeclarationExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified parameter type and name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeParameterDeclarationExpression\"></xref> class using the specified parameter type and name."},{"pos":[7487,7524],"content":"The type of the parameter to declare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the parameter to declare.","pos":[0,37]}]},{"pos":[7585,7622],"content":"The name of the parameter to declare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter to declare.","pos":[0,37]}]},{"pos":[8162,8227],"content":"Gets or sets the custom attributes for the parameter declaration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the custom attributes for the parameter declaration.","pos":[0,65]}]},{"pos":[8432,8479],"content":"An object that indicates the custom attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that indicates the custom attributes.","pos":[0,47]}]},{"pos":[8995,9035],"content":"Gets or sets the direction of the field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the direction of the field.","pos":[0,40]}]},{"pos":[9193,9245],"content":"An object that indicates the direction of the field.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that indicates the direction of the field.","pos":[0,52]}]},{"pos":[9729,9768],"content":"Gets or sets the name of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the parameter.","pos":[0,39]}]},{"pos":[9882,9908],"content":"The name of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter.","pos":[0,26]}]},{"pos":[10387,10426],"content":"Gets or sets the type of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type of the parameter.","pos":[0,39]}]},{"pos":[10585,10611],"content":"The type of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the parameter.","pos":[0,26]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeParameterDeclarationExpression\n  id: CodeParameterDeclarationExpression\n  children:\n  - System.CodeDom.CodeParameterDeclarationExpression.#ctor\n  - System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.CodeDom.CodeTypeReference,System.String)\n  - System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.String,System.String)\n  - System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.Type,System.String)\n  - System.CodeDom.CodeParameterDeclarationExpression.CustomAttributes\n  - System.CodeDom.CodeParameterDeclarationExpression.Direction\n  - System.CodeDom.CodeParameterDeclarationExpression.Name\n  - System.CodeDom.CodeParameterDeclarationExpression.Type\n  langs:\n  - csharp\n  name: CodeParameterDeclarationExpression\n  nameWithType: CodeParameterDeclarationExpression\n  fullName: System.CodeDom.CodeParameterDeclarationExpression\n  type: Class\n  summary: Represents a parameter declaration for a method, property, or constructor.\n  remarks: \"CodeParameterDeclarationExpression can be used to represent code that declares a parameter for a method, property, or constructor.  \\n  \\n The <xref:System.CodeDom.CodeParameterDeclarationExpression.Name%2A> property specifies the name of the parameter. The <xref:System.CodeDom.CodeParameterDeclarationExpression.Type%2A> property specifies the data type of the parameter. The <xref:System.CodeDom.CodeParameterDeclarationExpression.Direction%2A> property specifies the direction modifier of the parameter. The <xref:System.CodeDom.CodeParameterDeclarationExpression.CustomAttributes%2A> property specifies the attributes associated with the parameter.\"\n  example:\n  - \"The following example demonstrates use of CodeParameterDeclarationExpression to declare parameters of a method using different <xref:System.CodeDom.FieldDirection> field reference type specifiers.  \\n  \\n [!code-cs[CodeParameterDeclarationExample#3](~/add/codesnippet/csharp/t-system.codedom.codepar_0_1.cs)]\\n [!code-vb[CodeParameterDeclarationExample#3](~/add/codesnippet/visualbasic/t-system.codedom.codepar_0_1.vb)]\\n [!code-cpp[CodeParameterDeclarationExample#3](~/add/codesnippet/cpp/t-system.codedom.codepar_0_1.cpp)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeParameterDeclarationExpression : System.CodeDom.CodeExpression\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  - System.CodeDom.CodeExpression\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeObject.UserData\n  platform:\n  - net462\n- uid: System.CodeDom.CodeParameterDeclarationExpression.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  langs:\n  - csharp\n  name: CodeParameterDeclarationExpression()\n  nameWithType: CodeParameterDeclarationExpression.CodeParameterDeclarationExpression()\n  fullName: System.CodeDom.CodeParameterDeclarationExpression.CodeParameterDeclarationExpression()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeParameterDeclarationExpression\"></xref> class.\n  syntax:\n    content: public CodeParameterDeclarationExpression ();\n    parameters: []\n  overload: System.CodeDom.CodeParameterDeclarationExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.CodeDom.CodeTypeReference,System.String)\n  id: '#ctor(System.CodeDom.CodeTypeReference,System.String)'\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  langs:\n  - csharp\n  name: CodeParameterDeclarationExpression(CodeTypeReference,String)\n  nameWithType: CodeParameterDeclarationExpression.CodeParameterDeclarationExpression(CodeTypeReference,String)\n  fullName: System.CodeDom.CodeParameterDeclarationExpression.CodeParameterDeclarationExpression(CodeTypeReference,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeParameterDeclarationExpression\"></xref> class using the specified parameter type and name.\n  syntax:\n    content: public CodeParameterDeclarationExpression (System.CodeDom.CodeTypeReference type, string name);\n    parameters:\n    - id: type\n      type: System.CodeDom.CodeTypeReference\n      description: An object that indicates the type of the parameter to declare.\n    - id: name\n      type: System.String\n      description: The name of the parameter to declare.\n  overload: System.CodeDom.CodeParameterDeclarationExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  langs:\n  - csharp\n  name: CodeParameterDeclarationExpression(String,String)\n  nameWithType: CodeParameterDeclarationExpression.CodeParameterDeclarationExpression(String,String)\n  fullName: System.CodeDom.CodeParameterDeclarationExpression.CodeParameterDeclarationExpression(String,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeParameterDeclarationExpression\"></xref> class using the specified parameter type and name.\n  remarks: \"If the `type` parameter references a generic type, it must follow the syntax conventions for generic types. Generic types are formatted as follows: the name of the type, followed by a grave accent (\\\"`\\\"), followed by a count of the generic type arguments, followed by the parameters delimited with brackets.  \\n  \\n> [!NOTE]\\n>  You must use square brackets ([]) and not the C# angle brackets (<>) to delimit generic parameters.  \\n  \\n To avoid the possibility of making a syntactic mistake, consider using the <xref:System.CodeDom.CodeParameterDeclarationExpression.%23ctor%28System.Type%2CSystem.String%29> constructor that takes a type instead of a string as a parameter.\"\n  syntax:\n    content: public CodeParameterDeclarationExpression (string type, string name);\n    parameters:\n    - id: type\n      type: System.String\n      description: The type of the parameter to declare.\n    - id: name\n      type: System.String\n      description: The name of the parameter to declare.\n  overload: System.CodeDom.CodeParameterDeclarationExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.Type,System.String)\n  id: '#ctor(System.Type,System.String)'\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  langs:\n  - csharp\n  name: CodeParameterDeclarationExpression(Type,String)\n  nameWithType: CodeParameterDeclarationExpression.CodeParameterDeclarationExpression(Type,String)\n  fullName: System.CodeDom.CodeParameterDeclarationExpression.CodeParameterDeclarationExpression(Type,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeParameterDeclarationExpression\"></xref> class using the specified parameter type and name.\n  syntax:\n    content: public CodeParameterDeclarationExpression (Type type, string name);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of the parameter to declare.\n    - id: name\n      type: System.String\n      description: The name of the parameter to declare.\n  overload: System.CodeDom.CodeParameterDeclarationExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeParameterDeclarationExpression.CustomAttributes\n  id: CustomAttributes\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  langs:\n  - csharp\n  name: CustomAttributes\n  nameWithType: CodeParameterDeclarationExpression.CustomAttributes\n  fullName: System.CodeDom.CodeParameterDeclarationExpression.CustomAttributes\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the custom attributes for the parameter declaration.\n  syntax:\n    content: public System.CodeDom.CodeAttributeDeclarationCollection CustomAttributes { get; set; }\n    return:\n      type: System.CodeDom.CodeAttributeDeclarationCollection\n      description: An object that indicates the custom attributes.\n  overload: System.CodeDom.CodeParameterDeclarationExpression.CustomAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeParameterDeclarationExpression.Direction\n  id: Direction\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  langs:\n  - csharp\n  name: Direction\n  nameWithType: CodeParameterDeclarationExpression.Direction\n  fullName: System.CodeDom.CodeParameterDeclarationExpression.Direction\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the direction of the field.\n  syntax:\n    content: public System.CodeDom.FieldDirection Direction { get; set; }\n    return:\n      type: System.CodeDom.FieldDirection\n      description: An object that indicates the direction of the field.\n  overload: System.CodeDom.CodeParameterDeclarationExpression.Direction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeParameterDeclarationExpression.Name\n  id: Name\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  langs:\n  - csharp\n  name: Name\n  nameWithType: CodeParameterDeclarationExpression.Name\n  fullName: System.CodeDom.CodeParameterDeclarationExpression.Name\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the name of the parameter.\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of the parameter.\n  overload: System.CodeDom.CodeParameterDeclarationExpression.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeParameterDeclarationExpression.Type\n  id: Type\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  langs:\n  - csharp\n  name: Type\n  nameWithType: CodeParameterDeclarationExpression.Type\n  fullName: System.CodeDom.CodeParameterDeclarationExpression.Type\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the type of the parameter.\n  syntax:\n    content: public System.CodeDom.CodeTypeReference Type { get; set; }\n    return:\n      type: System.CodeDom.CodeTypeReference\n      description: The type of the parameter.\n  overload: System.CodeDom.CodeParameterDeclarationExpression.Type*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.CodeDom.CodeExpression\n  isExternal: false\n  name: System.CodeDom.CodeExpression\n- uid: System.CodeDom.CodeParameterDeclarationExpression.#ctor\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  isExternal: false\n  name: CodeParameterDeclarationExpression()\n  nameWithType: CodeParameterDeclarationExpression.CodeParameterDeclarationExpression()\n  fullName: System.CodeDom.CodeParameterDeclarationExpression.CodeParameterDeclarationExpression()\n- uid: System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.CodeDom.CodeTypeReference,System.String)\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  isExternal: false\n  name: CodeParameterDeclarationExpression(CodeTypeReference,String)\n  nameWithType: CodeParameterDeclarationExpression.CodeParameterDeclarationExpression(CodeTypeReference,String)\n  fullName: System.CodeDom.CodeParameterDeclarationExpression.CodeParameterDeclarationExpression(CodeTypeReference,String)\n- uid: System.CodeDom.CodeTypeReference\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeReference\n  nameWithType: CodeTypeReference\n  fullName: System.CodeDom.CodeTypeReference\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.String,System.String)\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  isExternal: false\n  name: CodeParameterDeclarationExpression(String,String)\n  nameWithType: CodeParameterDeclarationExpression.CodeParameterDeclarationExpression(String,String)\n  fullName: System.CodeDom.CodeParameterDeclarationExpression.CodeParameterDeclarationExpression(String,String)\n- uid: System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.Type,System.String)\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  isExternal: false\n  name: CodeParameterDeclarationExpression(Type,String)\n  nameWithType: CodeParameterDeclarationExpression.CodeParameterDeclarationExpression(Type,String)\n  fullName: System.CodeDom.CodeParameterDeclarationExpression.CodeParameterDeclarationExpression(Type,String)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.CodeDom.CodeParameterDeclarationExpression.CustomAttributes\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  isExternal: false\n  name: CustomAttributes\n  nameWithType: CodeParameterDeclarationExpression.CustomAttributes\n  fullName: System.CodeDom.CodeParameterDeclarationExpression.CustomAttributes\n- uid: System.CodeDom.CodeAttributeDeclarationCollection\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeAttributeDeclarationCollection\n  nameWithType: CodeAttributeDeclarationCollection\n  fullName: System.CodeDom.CodeAttributeDeclarationCollection\n- uid: System.CodeDom.CodeParameterDeclarationExpression.Direction\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  isExternal: false\n  name: Direction\n  nameWithType: CodeParameterDeclarationExpression.Direction\n  fullName: System.CodeDom.CodeParameterDeclarationExpression.Direction\n- uid: System.CodeDom.FieldDirection\n  parent: System.CodeDom\n  isExternal: false\n  name: FieldDirection\n  nameWithType: FieldDirection\n  fullName: System.CodeDom.FieldDirection\n- uid: System.CodeDom.CodeParameterDeclarationExpression.Name\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  isExternal: false\n  name: Name\n  nameWithType: CodeParameterDeclarationExpression.Name\n  fullName: System.CodeDom.CodeParameterDeclarationExpression.Name\n- uid: System.CodeDom.CodeParameterDeclarationExpression.Type\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  isExternal: false\n  name: Type\n  nameWithType: CodeParameterDeclarationExpression.Type\n  fullName: System.CodeDom.CodeParameterDeclarationExpression.Type\n- uid: System.CodeDom.CodeParameterDeclarationExpression.#ctor*\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  isExternal: false\n  name: CodeParameterDeclarationExpression\n  nameWithType: CodeParameterDeclarationExpression.CodeParameterDeclarationExpression\n- uid: System.CodeDom.CodeParameterDeclarationExpression.CustomAttributes*\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  isExternal: false\n  name: CustomAttributes\n  nameWithType: CodeParameterDeclarationExpression.CustomAttributes\n- uid: System.CodeDom.CodeParameterDeclarationExpression.Direction*\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  isExternal: false\n  name: Direction\n  nameWithType: CodeParameterDeclarationExpression.Direction\n- uid: System.CodeDom.CodeParameterDeclarationExpression.Name*\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  isExternal: false\n  name: Name\n  nameWithType: CodeParameterDeclarationExpression.Name\n- uid: System.CodeDom.CodeParameterDeclarationExpression.Type*\n  parent: System.CodeDom.CodeParameterDeclarationExpression\n  isExternal: false\n  name: Type\n  nameWithType: CodeParameterDeclarationExpression.Type\n"}