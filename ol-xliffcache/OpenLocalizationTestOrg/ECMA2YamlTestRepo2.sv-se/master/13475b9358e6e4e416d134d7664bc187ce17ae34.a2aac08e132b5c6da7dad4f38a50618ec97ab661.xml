{"nodes":[{"pos":[774,965],"content":"Implements the `LC` task. Use the `LC` element in your project file to create and execute this task. For usage and parameter information, see [LC Task](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the <ph id=\"ph1\">`LC`</ph> task.","pos":[0,25],"source":"Implements the `LC` task."},{"content":"Use the <ph id=\"ph1\">`LC`</ph> element in your project file to create and execute this task.","pos":[26,100],"source":" Use the `LC` element in your project file to create and execute this task."},{"content":"For usage and parameter information, see <bpt id=\"p1\">[</bpt>LC Task<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[101,191],"source":" For usage and parameter information, see [LC Task](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[4852,4938],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.Build.Tasks.LC\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.Build.Tasks.LC\"></xref> class."},{"pos":[5646,5788],"content":"Generates command line arguments that the license compiler tool (lc.exe) must run directly from the command line and not from a response file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates command line arguments that the license compiler tool (lc.exe) must run directly from the command line and not from a response file.","pos":[0,142]}]},{"pos":[6043,6084],"content":"Command line builder to add arguments to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Command line builder to add arguments to.","pos":[0,41]}]},{"pos":[6570,6635],"content":"Returns the full file path of the license compiler tool (lc.exe).","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the full file path of the license compiler tool (lc.exe).","pos":[0,65]}]},{"pos":[6788,6948],"content":"The full file path of the license compiler tool, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the license compiler tool file is not found.","needQuote":true,"needEscape":true,"source":"The full file path of the license compiler tool, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the license compiler tool file is not found."},{"pos":[7385,7457],"content":"Gets or sets the executable for which the .licenses files are generated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the executable for which the .licenses files are generated.","pos":[0,72]}]},{"pos":[7631,7690],"content":"The executable for which the .licenses files are generated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The executable for which the .licenses files are generated.","pos":[0,59]}]},{"pos":[8083,8184],"content":"Gets or sets a Boolean value that specifies whether to suppress the Microsoft startup banner display.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that specifies whether to suppress the Microsoft startup banner display.","pos":[0,101]}]},{"pos":[8299,8489],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the Microsoft startup banner display is suppressed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the Microsoft startup banner display is suppressed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8920,8992],"content":"Gets or sets the directory in which to place the output .licenses files.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the directory in which to place the output .licenses files.","pos":[0,72]}]},{"pos":[9117,9176],"content":"The directory in which to place the output .licenses files.","needQuote":true,"needEscape":true,"nodes":[{"content":"The directory in which to place the output .licenses files.","pos":[0,59]}]},{"pos":[9606,9650],"content":"Gets or sets the name of the .licenses file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the .licenses file.","pos":[0,44]}]},{"pos":[9662,9806],"content":"If you do not specify a name, the name of the .licx file is used and the .licenses file is placed in the directory that contains the .licx file.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you do not specify a name, the name of the .licx file is used and the .licenses file is placed in the directory that contains the .licx file.","pos":[0,144]}]},{"pos":[9980,10011],"content":"The name of the .licenses file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the .licenses file.","pos":[0,31]}]},{"pos":[10474,10556],"content":"Gets or sets the referenced components to load when generating the .licenses file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the referenced components to load when generating the .licenses file.","pos":[0,82]}]},{"pos":[10741,10810],"content":"The referenced components to load when generating the .licenses file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The referenced components to load when generating the .licenses file.","pos":[0,69]}]},{"pos":[11240,11297],"content":"Gets or sets the path to use to search for the SDK tools.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the path to use to search for the SDK tools.","pos":[0,57]}]},{"pos":[11419,11446],"content":"Returns the SDK tools path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the SDK tools path.","pos":[0,27]}]},{"pos":[11843,11932],"content":"Gets or sets the items that contain licensed components to include in the .licenses file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the items that contain licensed components to include in the .licenses file.","pos":[0,89]}]},{"pos":[11944,12085],"content":"For more information, see the documentation for the <ph id=\"ph1\">`/complist`</ph> switch in <bpt id=\"p1\">[</bpt>Lc.exe (License Compiler)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For more information, see the documentation for the `/complist` switch in [Lc.exe (License Compiler)](~/add/includes/ajax-current-ext-md.md)."},{"pos":[12257,12333],"content":"The items that contain licensed components to include in the .licenses file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The items that contain licensed components to include in the .licenses file.","pos":[0,76]}]},{"pos":[12730,12773],"content":"Gets the name of the license compiler tool.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the license compiler tool.","pos":[0,43]}]},{"pos":[12898,12936],"content":"The name of the license compiler tool.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the license compiler tool.","pos":[0,38]}]},{"pos":[13388,13529],"content":"Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.","pos":[0,141],"nodes":[{"content":"Validates input parameters and logs errors or warnings, if any.","pos":[0,63]},{"content":"Returns a Boolean value that indicates whether task execution should proceed.","pos":[64,141]}]}]},{"pos":[13677,13846],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if task execution should proceed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if task execution should proceed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Tasks.LC\n  id: LC\n  children:\n  - Microsoft.Build.Tasks.LC.#ctor\n  - Microsoft.Build.Tasks.LC.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)\n  - Microsoft.Build.Tasks.LC.GenerateFullPathToTool\n  - Microsoft.Build.Tasks.LC.LicenseTarget\n  - Microsoft.Build.Tasks.LC.NoLogo\n  - Microsoft.Build.Tasks.LC.OutputDirectory\n  - Microsoft.Build.Tasks.LC.OutputLicense\n  - Microsoft.Build.Tasks.LC.ReferencedAssemblies\n  - Microsoft.Build.Tasks.LC.SdkToolsPath\n  - Microsoft.Build.Tasks.LC.Sources\n  - Microsoft.Build.Tasks.LC.ToolName\n  - Microsoft.Build.Tasks.LC.ValidateParameters\n  langs:\n  - csharp\n  name: LC\n  nameWithType: LC\n  fullName: Microsoft.Build.Tasks.LC\n  type: Class\n  summary: Implements the `LC` task. Use the `LC` element in your project file to create and execute this task. For usage and parameter information, see [LC Task](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: 'public class LC : Microsoft.Build.Tasks.ToolTaskExtension'\n  inheritance:\n  - System.Object\n  - Microsoft.Build.Utilities.Task\n  - Microsoft.Build.Utilities.ToolTask\n  - Microsoft.Build.Tasks.ToolTaskExtension\n  implements: []\n  inheritedMembers:\n  - Microsoft.Build.Tasks.ToolTaskExtension.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)\n  - Microsoft.Build.Tasks.ToolTaskExtension.Bag\n  - Microsoft.Build.Tasks.ToolTaskExtension.GenerateCommandLineCommands\n  - Microsoft.Build.Tasks.ToolTaskExtension.GenerateResponseFileCommands\n  - Microsoft.Build.Tasks.ToolTaskExtension.GetBoolParameterWithDefault(System.String,System.Boolean)\n  - Microsoft.Build.Tasks.ToolTaskExtension.GetIntParameterWithDefault(System.String,System.Int32)\n  - Microsoft.Build.Tasks.ToolTaskExtension.HasLoggedErrors\n  - Microsoft.Build.Tasks.ToolTaskExtension.Log\n  - Microsoft.Build.Utilities.Task.BuildEngine\n  - Microsoft.Build.Utilities.Task.BuildEngine2\n  - Microsoft.Build.Utilities.Task.BuildEngine3\n  - Microsoft.Build.Utilities.Task.BuildEngine4\n  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix\n  - Microsoft.Build.Utilities.Task.HostObject\n  - Microsoft.Build.Utilities.Task.TaskResources\n  - Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute\n  - Microsoft.Build.Utilities.ToolTask.Cancel\n  - Microsoft.Build.Utilities.ToolTask.DeleteTempFile(System.String)\n  - Microsoft.Build.Utilities.ToolTask.EchoOff\n  - Microsoft.Build.Utilities.ToolTask.EnvironmentOverride\n  - Microsoft.Build.Utilities.ToolTask.EnvironmentVariables\n  - Microsoft.Build.Utilities.ToolTask.Execute\n  - Microsoft.Build.Utilities.ToolTask.ExecuteTool(System.String,System.String,System.String)\n  - Microsoft.Build.Utilities.ToolTask.ExitCode\n  - Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(System.String,System.String,System.String)\n  - Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(System.String)\n  - Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory\n  - Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors\n  - Microsoft.Build.Utilities.ToolTask.InitializeHostObject\n  - Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)\n  - Microsoft.Build.Utilities.ToolTask.LogPathToTool(System.String,System.String)\n  - Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError\n  - Microsoft.Build.Utilities.ToolTask.LogToolCommand(System.String)\n  - Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding\n  - Microsoft.Build.Utilities.ToolTask.ResponseFileEscape(System.String)\n  - Microsoft.Build.Utilities.ToolTask.SkipTaskExecution\n  - Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding\n  - Microsoft.Build.Utilities.ToolTask.StandardErrorImportance\n  - Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse\n  - Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance\n  - Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding\n  - Microsoft.Build.Utilities.ToolTask.StandardOutputImportance\n  - Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse\n  - Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance\n  - Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout\n  - Microsoft.Build.Utilities.ToolTask.Timeout\n  - Microsoft.Build.Utilities.ToolTask.ToolCanceled\n  - Microsoft.Build.Utilities.ToolTask.ToolExe\n  - Microsoft.Build.Utilities.ToolTask.ToolPath\n  - Microsoft.Build.Utilities.ToolTask.UseCommandProcessor\n  - Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.LC.#ctor\n  id: '#ctor'\n  parent: Microsoft.Build.Tasks.LC\n  langs:\n  - csharp\n  name: LC()\n  nameWithType: LC.LC()\n  fullName: Microsoft.Build.Tasks.LC.LC()\n  type: Constructor\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Initializes a new instance of the <xref href=\"Microsoft.Build.Tasks.LC\"></xref> class.\n  syntax:\n    content: public LC ();\n    parameters: []\n  overload: Microsoft.Build.Tasks.LC.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.LC.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)\n  id: AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)\n  parent: Microsoft.Build.Tasks.LC\n  langs:\n  - csharp\n  name: AddCommandLineCommands(CommandLineBuilderExtension)\n  nameWithType: LC.AddCommandLineCommands(CommandLineBuilderExtension)\n  fullName: Microsoft.Build.Tasks.LC.AddCommandLineCommands(CommandLineBuilderExtension)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Generates command line arguments that the license compiler tool (lc.exe) must run directly from the command line and not from a response file.\n  syntax:\n    content: protected override void AddCommandLineCommands (Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine);\n    parameters:\n    - id: commandLine\n      type: Microsoft.Build.Tasks.CommandLineBuilderExtension\n      description: Command line builder to add arguments to.\n  overload: Microsoft.Build.Tasks.LC.AddCommandLineCommands*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.LC.GenerateFullPathToTool\n  id: GenerateFullPathToTool\n  parent: Microsoft.Build.Tasks.LC\n  langs:\n  - csharp\n  name: GenerateFullPathToTool()\n  nameWithType: LC.GenerateFullPathToTool()\n  fullName: Microsoft.Build.Tasks.LC.GenerateFullPathToTool()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Returns the full file path of the license compiler tool (lc.exe).\n  syntax:\n    content: protected override string GenerateFullPathToTool ();\n    parameters: []\n    return:\n      type: System.String\n      description: The full file path of the license compiler tool, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the license compiler tool file is not found.\n  overload: Microsoft.Build.Tasks.LC.GenerateFullPathToTool*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.LC.LicenseTarget\n  id: LicenseTarget\n  parent: Microsoft.Build.Tasks.LC\n  langs:\n  - csharp\n  name: LicenseTarget\n  nameWithType: LC.LicenseTarget\n  fullName: Microsoft.Build.Tasks.LC.LicenseTarget\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the executable for which the .licenses files are generated.\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem LicenseTarget { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem\n      description: The executable for which the .licenses files are generated.\n  overload: Microsoft.Build.Tasks.LC.LicenseTarget*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.LC.NoLogo\n  id: NoLogo\n  parent: Microsoft.Build.Tasks.LC\n  langs:\n  - csharp\n  name: NoLogo\n  nameWithType: LC.NoLogo\n  fullName: Microsoft.Build.Tasks.LC.NoLogo\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a Boolean value that specifies whether to suppress the Microsoft startup banner display.\n  syntax:\n    content: public bool NoLogo { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the Microsoft startup banner display is suppressed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.LC.NoLogo*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.LC.OutputDirectory\n  id: OutputDirectory\n  parent: Microsoft.Build.Tasks.LC\n  langs:\n  - csharp\n  name: OutputDirectory\n  nameWithType: LC.OutputDirectory\n  fullName: Microsoft.Build.Tasks.LC.OutputDirectory\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the directory in which to place the output .licenses files.\n  syntax:\n    content: public string OutputDirectory { get; set; }\n    return:\n      type: System.String\n      description: The directory in which to place the output .licenses files.\n  overload: Microsoft.Build.Tasks.LC.OutputDirectory*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.LC.OutputLicense\n  id: OutputLicense\n  parent: Microsoft.Build.Tasks.LC\n  langs:\n  - csharp\n  name: OutputLicense\n  nameWithType: LC.OutputLicense\n  fullName: Microsoft.Build.Tasks.LC.OutputLicense\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the name of the .licenses file.\n  remarks: If you do not specify a name, the name of the .licx file is used and the .licenses file is placed in the directory that contains the .licx file.\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem OutputLicense { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem\n      description: The name of the .licenses file.\n  overload: Microsoft.Build.Tasks.LC.OutputLicense*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.LC.ReferencedAssemblies\n  id: ReferencedAssemblies\n  parent: Microsoft.Build.Tasks.LC\n  langs:\n  - csharp\n  name: ReferencedAssemblies\n  nameWithType: LC.ReferencedAssemblies\n  fullName: Microsoft.Build.Tasks.LC.ReferencedAssemblies\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the referenced components to load when generating the .licenses file.\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem[] ReferencedAssemblies { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: The referenced components to load when generating the .licenses file.\n  overload: Microsoft.Build.Tasks.LC.ReferencedAssemblies*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.LC.SdkToolsPath\n  id: SdkToolsPath\n  parent: Microsoft.Build.Tasks.LC\n  langs:\n  - csharp\n  name: SdkToolsPath\n  nameWithType: LC.SdkToolsPath\n  fullName: Microsoft.Build.Tasks.LC.SdkToolsPath\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the path to use to search for the SDK tools.\n  syntax:\n    content: public string SdkToolsPath { get; set; }\n    return:\n      type: System.String\n      description: Returns the SDK tools path.\n  overload: Microsoft.Build.Tasks.LC.SdkToolsPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.LC.Sources\n  id: Sources\n  parent: Microsoft.Build.Tasks.LC\n  langs:\n  - csharp\n  name: Sources\n  nameWithType: LC.Sources\n  fullName: Microsoft.Build.Tasks.LC.Sources\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the items that contain licensed components to include in the .licenses file.\n  remarks: For more information, see the documentation for the `/complist` switch in [Lc.exe (License Compiler)](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem[] Sources { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: The items that contain licensed components to include in the .licenses file.\n  overload: Microsoft.Build.Tasks.LC.Sources*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.LC.ToolName\n  id: ToolName\n  parent: Microsoft.Build.Tasks.LC\n  langs:\n  - csharp\n  name: ToolName\n  nameWithType: LC.ToolName\n  fullName: Microsoft.Build.Tasks.LC.ToolName\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets the name of the license compiler tool.\n  syntax:\n    content: protected override string ToolName { get; }\n    return:\n      type: System.String\n      description: The name of the license compiler tool.\n  overload: Microsoft.Build.Tasks.LC.ToolName*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.LC.ValidateParameters\n  id: ValidateParameters\n  parent: Microsoft.Build.Tasks.LC\n  langs:\n  - csharp\n  name: ValidateParameters()\n  nameWithType: LC.ValidateParameters()\n  fullName: Microsoft.Build.Tasks.LC.ValidateParameters()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.\n  syntax:\n    content: protected override bool ValidateParameters ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if task execution should proceed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.LC.ValidateParameters*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.Build.Tasks.ToolTaskExtension\n  isExternal: false\n  name: Microsoft.Build.Tasks.ToolTaskExtension\n- uid: Microsoft.Build.Tasks.LC.#ctor\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: LC()\n  nameWithType: LC.LC()\n  fullName: Microsoft.Build.Tasks.LC.LC()\n- uid: Microsoft.Build.Tasks.LC.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: AddCommandLineCommands(CommandLineBuilderExtension)\n  nameWithType: LC.AddCommandLineCommands(CommandLineBuilderExtension)\n  fullName: Microsoft.Build.Tasks.LC.AddCommandLineCommands(CommandLineBuilderExtension)\n- uid: Microsoft.Build.Tasks.CommandLineBuilderExtension\n  parent: Microsoft.Build.Tasks\n  isExternal: false\n  name: CommandLineBuilderExtension\n  nameWithType: CommandLineBuilderExtension\n  fullName: Microsoft.Build.Tasks.CommandLineBuilderExtension\n- uid: Microsoft.Build.Tasks.LC.GenerateFullPathToTool\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: GenerateFullPathToTool()\n  nameWithType: LC.GenerateFullPathToTool()\n  fullName: Microsoft.Build.Tasks.LC.GenerateFullPathToTool()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Tasks.LC.LicenseTarget\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: LicenseTarget\n  nameWithType: LC.LicenseTarget\n  fullName: Microsoft.Build.Tasks.LC.LicenseTarget\n- uid: Microsoft.Build.Framework.ITaskItem\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITaskItem\n  nameWithType: ITaskItem\n  fullName: Microsoft.Build.Framework.ITaskItem\n- uid: Microsoft.Build.Tasks.LC.NoLogo\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: NoLogo\n  nameWithType: LC.NoLogo\n  fullName: Microsoft.Build.Tasks.LC.NoLogo\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Build.Tasks.LC.OutputDirectory\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: OutputDirectory\n  nameWithType: LC.OutputDirectory\n  fullName: Microsoft.Build.Tasks.LC.OutputDirectory\n- uid: Microsoft.Build.Tasks.LC.OutputLicense\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: OutputLicense\n  nameWithType: LC.OutputLicense\n  fullName: Microsoft.Build.Tasks.LC.OutputLicense\n- uid: Microsoft.Build.Tasks.LC.ReferencedAssemblies\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: ReferencedAssemblies\n  nameWithType: LC.ReferencedAssemblies\n  fullName: Microsoft.Build.Tasks.LC.ReferencedAssemblies\n- uid: Microsoft.Build.Framework.ITaskItem[]\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITaskItem\n  nameWithType: ITaskItem\n  fullName: Microsoft.Build.Framework.ITaskItem[]\n  spec.csharp:\n  - uid: Microsoft.Build.Framework.ITaskItem\n    name: ITaskItem\n    nameWithType: ITaskItem\n    fullName: ITaskItem[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.Build.Tasks.LC.SdkToolsPath\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: SdkToolsPath\n  nameWithType: LC.SdkToolsPath\n  fullName: Microsoft.Build.Tasks.LC.SdkToolsPath\n- uid: Microsoft.Build.Tasks.LC.Sources\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: Sources\n  nameWithType: LC.Sources\n  fullName: Microsoft.Build.Tasks.LC.Sources\n- uid: Microsoft.Build.Tasks.LC.ToolName\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: ToolName\n  nameWithType: LC.ToolName\n  fullName: Microsoft.Build.Tasks.LC.ToolName\n- uid: Microsoft.Build.Tasks.LC.ValidateParameters\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: ValidateParameters()\n  nameWithType: LC.ValidateParameters()\n  fullName: Microsoft.Build.Tasks.LC.ValidateParameters()\n- uid: Microsoft.Build.Tasks.LC.#ctor*\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: LC\n  nameWithType: LC.LC\n- uid: Microsoft.Build.Tasks.LC.AddCommandLineCommands*\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: AddCommandLineCommands\n  nameWithType: LC.AddCommandLineCommands\n- uid: Microsoft.Build.Tasks.LC.GenerateFullPathToTool*\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: GenerateFullPathToTool\n  nameWithType: LC.GenerateFullPathToTool\n- uid: Microsoft.Build.Tasks.LC.LicenseTarget*\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: LicenseTarget\n  nameWithType: LC.LicenseTarget\n- uid: Microsoft.Build.Tasks.LC.NoLogo*\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: NoLogo\n  nameWithType: LC.NoLogo\n- uid: Microsoft.Build.Tasks.LC.OutputDirectory*\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: OutputDirectory\n  nameWithType: LC.OutputDirectory\n- uid: Microsoft.Build.Tasks.LC.OutputLicense*\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: OutputLicense\n  nameWithType: LC.OutputLicense\n- uid: Microsoft.Build.Tasks.LC.ReferencedAssemblies*\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: ReferencedAssemblies\n  nameWithType: LC.ReferencedAssemblies\n- uid: Microsoft.Build.Tasks.LC.SdkToolsPath*\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: SdkToolsPath\n  nameWithType: LC.SdkToolsPath\n- uid: Microsoft.Build.Tasks.LC.Sources*\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: Sources\n  nameWithType: LC.Sources\n- uid: Microsoft.Build.Tasks.LC.ToolName*\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: ToolName\n  nameWithType: LC.ToolName\n- uid: Microsoft.Build.Tasks.LC.ValidateParameters*\n  parent: Microsoft.Build.Tasks.LC\n  isExternal: false\n  name: ValidateParameters\n  nameWithType: LC.ValidateParameters\n"}