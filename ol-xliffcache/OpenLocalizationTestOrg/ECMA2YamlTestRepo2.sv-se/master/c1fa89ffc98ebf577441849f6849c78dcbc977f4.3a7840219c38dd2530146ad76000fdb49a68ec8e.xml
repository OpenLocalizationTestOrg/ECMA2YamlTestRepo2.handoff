{"nodes":[{"pos":[389,512],"content":"Attaches a modifier to parameters so that binding can work with parameter signatures in which the types have been modified.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attaches a modifier to parameters so that binding can work with parameter signatures in which the types have been modified.","pos":[0,123]}]},{"pos":[524,1614],"content":"The ParameterModifier structure is used with the [Type.InvokeMember(String, BindingFlags, Binder, Object, Object\\[\\], ParameterModifier\\[\\], CultureInfo, String\\[\\])](assetId:///M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])?qualifyHint=True&autoUpgrade=False) method overload when passing parameters by reference to a COM component that is accessed late bound. The parameters that are to be passed by reference are specified by a single ParameterModifier structure, which must be passed in an array containing a single element. The single ParameterModifier structure in this array must be initialized with the number of parameters in the member that is to be invoked. To indicate which of these parameters are passed by reference, set the value of the <xref:System.Reflection.ParameterModifier.Item%2A> property (the indexer in C#) to `true` for the index number corresponding to the zero-based position of the parameter.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ParameterModifier structure is used with the <bpt id=\"p1\">[</bpt>Type.InvokeMember(String, BindingFlags, Binder, Object, Object<ph id=\"ph1\">\\[</ph><ph id=\"ph2\">\\]</ph>, ParameterModifier<ph id=\"ph3\">\\[</ph><ph id=\"ph4\">\\]</ph>, CultureInfo, String<ph id=\"ph5\">\\[</ph><ph id=\"ph6\">\\]</ph>)<ept id=\"p1\">](assetId:///M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])?qualifyHint=True&amp;autoUpgrade=False)</ept> method overload when passing parameters by reference to a COM component that is accessed late bound.","pos":[0,529],"source":"The ParameterModifier structure is used with the [Type.InvokeMember(String, BindingFlags, Binder, Object, Object\\[\\], ParameterModifier\\[\\], CultureInfo, String\\[\\])](assetId:///M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])?qualifyHint=True&autoUpgrade=False) method overload when passing parameters by reference to a COM component that is accessed late bound."},{"content":"The parameters that are to be passed by reference are specified by a single ParameterModifier structure, which must be passed in an array containing a single element.","pos":[530,696]},{"content":"The single ParameterModifier structure in this array must be initialized with the number of parameters in the member that is to be invoked.","pos":[697,836]},{"content":"To indicate which of these parameters are passed by reference, set the value of the &lt;xref:System.Reflection.ParameterModifier.Item%2A&gt; property (the indexer in C#) to <ph id=\"ph1\">`true`</ph> for the index number corresponding to the zero-based position of the parameter.","pos":[837,1090],"source":" To indicate which of these parameters are passed by reference, set the value of the <xref:System.Reflection.ParameterModifier.Item%2A> property (the indexer in C#) to `true` for the index number corresponding to the zero-based position of the parameter."}]},{"pos":[2787,2936],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Reflection.ParameterModifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure representing the specified number of parameters.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Reflection.ParameterModifier\"></xref> structure representing the specified number of parameters."},{"pos":[3092,3117],"content":"The number of parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of parameters.","pos":[0,25]}]},{"pos":[3281,3321],"content":"<ph id=\"ph1\">&lt;code&gt;parameterCount&lt;/code&gt;</ph> is negative.","needQuote":true,"needEscape":true,"source":"<code>parameterCount</code> is negative."},{"pos":[3710,3890],"content":"Gets or sets a value that specifies whether the parameter at the specified index position is to be modified by the current <bpt id=\"p1\">&lt;xref href=\"System.Reflection.ParameterModifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that specifies whether the parameter at the specified index position is to be modified by the current <xref href=\"System.Reflection.ParameterModifier\"></xref>."},{"pos":[3902,3990],"content":"Indexers permit a default property on a type to be indexed as if the type were an array.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Indexers permit a default property on a type to be indexed as if the type were an array.","pos":[0,88]}]},{"pos":[4132,4219],"content":"The index position of the parameter whose modification status is being examined or set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index position of the parameter whose modification status is being examined or set.","pos":[0,87]}]},{"pos":[4278,4537],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the parameter at this index position is to be modified by this <bpt id=\"p2\">&lt;xref href=\"System.Reflection.ParameterModifier\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the parameter at this index position is to be modified by this <xref href=\"System.Reflection.ParameterModifier\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.ParameterModifier\n  id: ParameterModifier\n  children:\n  - System.Reflection.ParameterModifier.#ctor(System.Int32)\n  - System.Reflection.ParameterModifier.Item(System.Int32)\n  langs:\n  - csharp\n  name: ParameterModifier\n  nameWithType: ParameterModifier\n  fullName: System.Reflection.ParameterModifier\n  type: Struct\n  summary: Attaches a modifier to parameters so that binding can work with parameter signatures in which the types have been modified.\n  remarks: The ParameterModifier structure is used with the [Type.InvokeMember(String, BindingFlags, Binder, Object, Object\\[\\], ParameterModifier\\[\\], CultureInfo, String\\[\\])](assetId:///M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])?qualifyHint=True&autoUpgrade=False) method overload when passing parameters by reference to a COM component that is accessed late bound. The parameters that are to be passed by reference are specified by a single ParameterModifier structure, which must be passed in an array containing a single element. The single ParameterModifier structure in this array must be initialized with the number of parameters in the member that is to be invoked. To indicate which of these parameters are passed by reference, set the value of the <xref:System.Reflection.ParameterModifier.Item%2A> property (the indexer in C#) to `true` for the index number corresponding to the zero-based position of the parameter.\n  example:\n  - \"The following code example shows this for a member that has three string arguments, the first and third of which are passed by reference. Assume that a variable named `obj` contains a reference to the COM object.  \\n  \\n [!code-vb[System.Reflection.ParameterModifier#1](~/add/codesnippet/visualbasic/t-system.reflection.para_1.vb)]\\n [!code-cpp[System.Reflection.ParameterModifier#1](~/add/codesnippet/cpp/t-system.reflection.para_1.cpp)]\\n [!code-cs[System.Reflection.ParameterModifier#1](~/add/codesnippet/csharp/t-system.reflection.para_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct ParameterModifier\n  inheritance:\n  - System.ValueType\n  implements: []\n  platform:\n  - net462\n- uid: System.Reflection.ParameterModifier.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Reflection.ParameterModifier\n  langs:\n  - csharp\n  name: ParameterModifier(Int32)\n  nameWithType: ParameterModifier.ParameterModifier(Int32)\n  fullName: System.Reflection.ParameterModifier.ParameterModifier(Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Initializes a new instance of the <xref href=\"System.Reflection.ParameterModifier\"></xref> structure representing the specified number of parameters.\n  syntax:\n    content: public ParameterModifier (int parameterCount);\n    parameters:\n    - id: parameterCount\n      type: System.Int32\n      description: The number of parameters.\n  overload: System.Reflection.ParameterModifier.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>parameterCount</code> is negative.\n  platform:\n  - net462\n- uid: System.Reflection.ParameterModifier.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Reflection.ParameterModifier\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ParameterModifier.Item(Int32)\n  fullName: System.Reflection.ParameterModifier.Item(Int32)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Gets or sets a value that specifies whether the parameter at the specified index position is to be modified by the current <xref href=\"System.Reflection.ParameterModifier\"></xref>.\n  remarks: Indexers permit a default property on a type to be indexed as if the type were an array.\n  syntax:\n    content: public bool this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index position of the parameter whose modification status is being examined or set.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the parameter at this index position is to be modified by this <xref href=\"System.Reflection.ParameterModifier\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Reflection.ParameterModifier.Item*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Reflection.ParameterModifier.#ctor(System.Int32)\n  parent: System.Reflection.ParameterModifier\n  isExternal: false\n  name: ParameterModifier(Int32)\n  nameWithType: ParameterModifier.ParameterModifier(Int32)\n  fullName: System.Reflection.ParameterModifier.ParameterModifier(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.ParameterModifier.Item(System.Int32)\n  parent: System.Reflection.ParameterModifier\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ParameterModifier.Item(Int32)\n  fullName: System.Reflection.ParameterModifier.Item(Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.ParameterModifier.#ctor*\n  parent: System.Reflection.ParameterModifier\n  isExternal: false\n  name: ParameterModifier\n  nameWithType: ParameterModifier.ParameterModifier\n- uid: System.Reflection.ParameterModifier.Item*\n  parent: System.Reflection.ParameterModifier\n  isExternal: false\n  name: Item\n  nameWithType: ParameterModifier.Item\n"}