{"nodes":[{"pos":[1335,1460],"content":"Defines a group of type faces having a similar basic design and certain variations in styles. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines a group of type faces having a similar basic design and certain variations in styles. This class cannot be inherited.","pos":[0,125],"nodes":[{"content":"Defines a group of type faces having a similar basic design and certain variations in styles.","pos":[0,93]},{"content":"This class cannot be inherited.","pos":[94,125]}]}]},{"pos":[3074,3178],"content":"Initializes a new <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the specified generic font family.","needQuote":true,"needEscape":true,"source":"Initializes a new <xref href=\"System.Drawing.FontFamily\"></xref> from the specified generic font family."},{"pos":[3388,3529],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Text.GenericFontFamilies\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from which to create the new <bpt id=\"p2\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Text.GenericFontFamilies\"></xref> from which to create the new <xref href=\"System.Drawing.FontFamily\"></xref>."},{"pos":[3976,4065],"content":"Initializes a new <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified name.","needQuote":true,"needEscape":true,"source":"Initializes a new <xref href=\"System.Drawing.FontFamily\"></xref> with the specified name."},{"pos":[4077,4148],"content":"Passing empty string (\"\") for the <ph id=\"ph1\">`name`</ph> parameter causes an exception.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Passing empty string (\"\") for the `name` parameter causes an exception."},{"pos":[4281,4348],"content":"The name of the new <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The name of the new <xref href=\"System.Drawing.FontFamily\"></xref>."},{"pos":[4503,4751],"content":"<code>name</code> is an empty string (\"\").       -or-       <code>name</code> specifies a font that is not installed on the computer running the application.       -or-       <code>name</code> specifies a font that is not a TrueType font.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is an empty string (\"\").","pos":[0,42],"source":"<code>name</code> is an empty string (\"\")."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> specifies a font that is not installed on the computer running the application.","pos":[49,157],"source":"       -or-       <code>name</code> specifies a font that is not installed on the computer running the application."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> specifies a font that is not a TrueType font.","pos":[164,238],"source":"       -or-       <code>name</code> specifies a font that is not a TrueType font."}]},{"pos":[5252,5414],"content":"Initializes a new <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the specified <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Text.FontCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> with the specified name.","needQuote":true,"needEscape":true,"source":"Initializes a new <xref href=\"System.Drawing.FontFamily\"></xref> in the specified <xref href=\"System.Drawing.Text.FontCollection\"></xref> with the specified name."},{"pos":[5598,5704],"content":"A &lt;xref:System.String&gt; that represents the name of the new <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.String> that represents the name of the new <xref href=\"System.Drawing.FontFamily\"></xref>."},{"pos":[5796,5922],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Text.FontCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Text.FontCollection\"></xref> that contains this <xref href=\"System.Drawing.FontFamily\"></xref>."},{"pos":[6077,6325],"content":"<code>name</code> is an empty string (\"\").       -or-       <code>name</code> specifies a font that is not installed on the computer running the application.       -or-       <code>name</code> specifies a font that is not a TrueType font.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is an empty string (\"\").","pos":[0,42],"source":"<code>name</code> is an empty string (\"\")."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> specifies a font that is not installed on the computer running the application.","pos":[49,157],"source":"       -or-       <code>name</code> specifies a font that is not installed on the computer running the application."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> specifies a font that is not a TrueType font.","pos":[164,238],"source":"       -or-       <code>name</code> specifies a font that is not a TrueType font."}]},{"pos":[6651,6734],"content":"Releases all resources used by this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Releases all resources used by this <xref href=\"System.Drawing.FontFamily\"></xref>."},{"pos":[6747,7689],"content":"Calling Dispose allows the resources used by this <xref:System.Drawing.FontFamily> to be reallocated for other purposes.       Call Dispose when you are finished using the <xref:System.Drawing.FontFamily>. The Dispose method leaves the <xref:System.Drawing.FontFamily> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Drawing.FontFamily> so the garbage collector can reclaim the memory that the <xref:System.Drawing.FontFamily> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  Always call Dispose before you release your last reference to the <xref:System.Drawing.FontFamily>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.FontFamily> object's `Finalize` method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Calling Dispose allows the resources used by this &lt;xref:System.Drawing.FontFamily&gt; to be reallocated for other purposes.","pos":[0,120],"source":"Calling Dispose allows the resources used by this <xref:System.Drawing.FontFamily> to be reallocated for other purposes."},{"content":"Call Dispose when you are finished using the &lt;xref:System.Drawing.FontFamily&gt;.","pos":[127,205],"source":"       Call Dispose when you are finished using the <xref:System.Drawing.FontFamily>."},{"content":"The Dispose method leaves the &lt;xref:System.Drawing.FontFamily&gt; in an unusable state.","pos":[206,290],"source":" The Dispose method leaves the <xref:System.Drawing.FontFamily> in an unusable state."},{"content":"After calling Dispose, you must release all references to the &lt;xref:System.Drawing.FontFamily&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Drawing.FontFamily&gt; was occupying.","pos":[291,490],"source":" After calling Dispose, you must release all references to the <xref:System.Drawing.FontFamily> so the garbage collector can reclaim the memory that the <xref:System.Drawing.FontFamily> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[491,665],"source":" For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.Drawing.FontFamily&gt;.","pos":[671,783],"source":"      > [!NOTE] >  Always call Dispose before you release your last reference to the <xref:System.Drawing.FontFamily>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Drawing.FontFamily&gt; object's <ph id=\"ph1\">`Finalize`</ph> method.","pos":[784,937],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.FontFamily> object's `Finalize` method."}]},{"pos":[8188,8351],"content":"Indicates whether the specified object is a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and is identical to this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Indicates whether the specified object is a <xref href=\"System.Drawing.FontFamily\"></xref> and is identical to this <xref href=\"System.Drawing.FontFamily\"></xref>."},{"pos":[9300,9319],"content":"The object to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to test.","pos":[0,19]}]},{"pos":[9378,9658],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a <bpt id=\"p3\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and is identical to this <bpt id=\"p4\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is a <xref href=\"System.Drawing.FontFamily\"></xref> and is identical to this <xref href=\"System.Drawing.FontFamily\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10047,10186],"content":"Returns an array that contains all the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects associated with the current graphics context.","needQuote":true,"needEscape":true,"source":"Returns an array that contains all the <xref href=\"System.Drawing.FontFamily\"></xref> objects associated with the current graphics context."},{"pos":[11038,11150],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects associated with the current graphics context.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Drawing.FontFamily\"></xref> objects associated with the current graphics context."},{"pos":[11545,11669],"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","pos":[0,124]}]},{"pos":[12158,12230],"content":"Gets a generic monospace <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a generic monospace <xref href=\"System.Drawing.FontFamily\"></xref>."},{"pos":[12389,12479],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents a generic monospace font.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.FontFamily\"></xref> that represents a generic monospace font."},{"pos":[12918,12998],"content":"Gets a generic sans serif <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets a generic sans serif <xref href=\"System.Drawing.FontFamily\"></xref> object."},{"pos":[13157,13255],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents a generic sans serif font.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.FontFamily\"></xref> object that represents a generic sans serif font."},{"pos":[13674,13742],"content":"Gets a generic serif <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a generic serif <xref href=\"System.Drawing.FontFamily\"></xref>."},{"pos":[13897,13983],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents a generic serif font.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.FontFamily\"></xref> that represents a generic serif font."},{"pos":[14486,14605],"content":"Returns the cell ascent, in design units, of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the specified style.","needQuote":true,"needEscape":true,"source":"Returns the cell ascent, in design units, of the <xref href=\"System.Drawing.FontFamily\"></xref> of the specified style."},{"pos":[15596,15689],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains style information for the font.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.FontStyle\"></xref> that contains style information for the font."},{"pos":[15746,15888],"content":"The cell ascent for this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that uses the specified <bpt id=\"p2\">&lt;xref href=\"System.Drawing.FontStyle\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The cell ascent for this <xref href=\"System.Drawing.FontFamily\"></xref> that uses the specified <xref href=\"System.Drawing.FontStyle\"></xref>."},{"pos":[16397,16517],"content":"Returns the cell descent, in design units, of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the specified style.","needQuote":true,"needEscape":true,"source":"Returns the cell descent, in design units, of the <xref href=\"System.Drawing.FontFamily\"></xref> of the specified style."},{"pos":[17511,17604],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains style information for the font.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.FontStyle\"></xref> that contains style information for the font."},{"pos":[17661,17811],"content":"The cell descent metric for this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that uses the specified <bpt id=\"p2\">&lt;xref href=\"System.Drawing.FontStyle\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The cell descent metric for this <xref href=\"System.Drawing.FontFamily\"></xref> that uses the specified <xref href=\"System.Drawing.FontStyle\"></xref>."},{"pos":[18306,18386],"content":"Gets the height, in font design units, of the em square for the specified style.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the height, in font design units, of the em square for the specified style.","pos":[0,80]}]},{"pos":[19506,19587],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to get the em height.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.FontStyle\"></xref> for which to get the em height."},{"pos":[19644,19672],"content":"The height of the em square.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the em square.","pos":[0,28]}]},{"pos":[20159,20298],"content":"Returns an array that contains all the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects available for the specified graphics context.","needQuote":true,"needEscape":true,"source":"Returns an array that contains all the <xref href=\"System.Drawing.FontFamily\"></xref> objects available for the specified graphics context."},{"pos":[20502,20634],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from which to return <bpt id=\"p2\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> object from which to return <xref href=\"System.Drawing.FontFamily\"></xref> objects."},{"pos":[20706,20853],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects available for the specified <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Drawing.FontFamily\"></xref> objects available for the specified <xref href=\"System.Drawing.Graphics\"></xref> object."},{"pos":[21021,21108],"content":"<ph id=\"ph1\">&lt;code&gt;graphics &lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>graphics </code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[21453,21526],"content":"Gets a hash code for this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a hash code for this <xref href=\"System.Drawing.FontFamily\"></xref>."},{"pos":[22476,22546],"content":"The hash code for this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The hash code for this <xref href=\"System.Drawing.FontFamily\"></xref>."},{"pos":[23053,23272],"content":"Returns the line spacing, in design units, of the <xref href=\"System.Drawing.FontFamily\"></xref> of the specified style. The line spacing is the vertical distance between the base lines of two consecutive lines of text.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the line spacing, in design units, of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the specified style.","pos":[0,120],"source":"Returns the line spacing, in design units, of the <xref href=\"System.Drawing.FontFamily\"></xref> of the specified style."},{"content":"The line spacing is the vertical distance between the base lines of two consecutive lines of text.","pos":[121,219]}]},{"pos":[24265,24324],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to apply.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.FontStyle\"></xref> to apply."},{"pos":[24381,24432],"content":"The distance between two consecutive lines of text.","needQuote":true,"needEscape":true,"nodes":[{"content":"The distance between two consecutive lines of text.","pos":[0,51]}]},{"pos":[24871,24971],"content":"Returns the name, in the specified language, of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the name, in the specified language, of this <xref href=\"System.Drawing.FontFamily\"></xref>."},{"pos":[24983,25379],"content":"To indicate language neutral, you should specify 0 for the `language` parameter. For a listing of the available languages and sublanguages, see the Winnt.h header file. If you have [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] installed, this header file can typically be found relative to the [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] installation directory at \\\\\\VC\\PlatformSDK\\Include.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To indicate language neutral, you should specify 0 for the <ph id=\"ph1\">`language`</ph> parameter.","pos":[0,80],"source":"To indicate language neutral, you should specify 0 for the `language` parameter."},{"content":"For a listing of the available languages and sublanguages, see the Winnt.h header file.","pos":[81,168]},{"content":"If you have <ph id=\"ph1\">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph> installed, this header file can typically be found relative to the <ph id=\"ph2\">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph> installation directory at <ph id=\"ph3\">\\\\</ph>\\VC\\PlatformSDK\\Include.","pos":[169,396],"source":" If you have [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] installed, this header file can typically be found relative to the [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] installation directory at \\\\\\VC\\PlatformSDK\\Include."}]},{"pos":[26316,26359],"content":"The language in which the name is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The language in which the name is returned.","pos":[0,43]}]},{"pos":[26417,26548],"content":"A &lt;xref:System.String&gt; that represents the name, in the specified language, of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.String> that represents the name, in the specified language, of this <xref href=\"System.Drawing.FontFamily\"></xref>."},{"pos":[27061,27164],"content":"Indicates whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration is available.","needQuote":true,"needEscape":true,"source":"Indicates whether the specified <xref href=\"System.Drawing.FontStyle\"></xref> enumeration is available."},{"pos":[28156,28214],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to test.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.FontStyle\"></xref> to test."},{"pos":[28273,28485],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p2\">&lt;xref href=\"System.Drawing.FontStyle\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is available; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Drawing.FontStyle\"></xref> is available; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28864,28933],"content":"Gets the name of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the name of this <xref href=\"System.Drawing.FontFamily\"></xref>."},{"pos":[29776,29879],"content":"A &lt;xref:System.String&gt; that represents the name of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.String> that represents the name of this <xref href=\"System.Drawing.FontFamily\"></xref>."},{"pos":[30270,30373],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to a human-readable string representation.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Drawing.FontFamily\"></xref> to a human-readable string representation."},{"pos":[31233,31312],"content":"The string that represents this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string that represents this <xref href=\"System.Drawing.FontFamily\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.FontFamily\n  id: FontFamily\n  children:\n  - System.Drawing.FontFamily.#ctor(System.Drawing.Text.GenericFontFamilies)\n  - System.Drawing.FontFamily.#ctor(System.String)\n  - System.Drawing.FontFamily.#ctor(System.String,System.Drawing.Text.FontCollection)\n  - System.Drawing.FontFamily.Dispose\n  - System.Drawing.FontFamily.Equals(System.Object)\n  - System.Drawing.FontFamily.Families\n  - System.Drawing.FontFamily.Finalize\n  - System.Drawing.FontFamily.GenericMonospace\n  - System.Drawing.FontFamily.GenericSansSerif\n  - System.Drawing.FontFamily.GenericSerif\n  - System.Drawing.FontFamily.GetCellAscent(System.Drawing.FontStyle)\n  - System.Drawing.FontFamily.GetCellDescent(System.Drawing.FontStyle)\n  - System.Drawing.FontFamily.GetEmHeight(System.Drawing.FontStyle)\n  - System.Drawing.FontFamily.GetFamilies(System.Drawing.Graphics)\n  - System.Drawing.FontFamily.GetHashCode\n  - System.Drawing.FontFamily.GetLineSpacing(System.Drawing.FontStyle)\n  - System.Drawing.FontFamily.GetName(System.Int32)\n  - System.Drawing.FontFamily.IsStyleAvailable(System.Drawing.FontStyle)\n  - System.Drawing.FontFamily.Name\n  - System.Drawing.FontFamily.ToString\n  langs:\n  - csharp\n  name: FontFamily\n  nameWithType: FontFamily\n  fullName: System.Drawing.FontFamily\n  type: Class\n  summary: Defines a group of type faces having a similar basic design and certain variations in styles. This class cannot be inherited.\n  remarks: ''\n  example:\n  - \"The following code example shows all the font families in the <xref:System.Drawing.FontFamily.Families%2A> property of the FontFamily class. This example is designed to be used with a Windows Form. To run this example, add a <xref:System.Windows.Forms.ListBox> named `listBox1` to a form and call the `PopulateListBoxWithFonts` method from the form's constructor.  \\n  \\n [!code-cs[System.Drawing.MiscExamples#1](~/add/codesnippet/csharp/t-system.drawing.fontfam_1.cs)]\\n [!code-cpp[System.Drawing.MiscExamples#1](~/add/codesnippet/cpp/t-system.drawing.fontfam_1.cpp)]\\n [!code-vb[System.Drawing.MiscExamples#1](~/add/codesnippet/visualbasic/t-system.drawing.fontfam_1.vb)]\"\n  syntax:\n    content: 'public sealed class FontFamily : MarshalByRefObject, IDisposable'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.#ctor(System.Drawing.Text.GenericFontFamilies)\n  id: '#ctor(System.Drawing.Text.GenericFontFamilies)'\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: FontFamily(GenericFontFamilies)\n  nameWithType: FontFamily.FontFamily(GenericFontFamilies)\n  fullName: System.Drawing.FontFamily.FontFamily(GenericFontFamilies)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new <xref href=\"System.Drawing.FontFamily\"></xref> from the specified generic font family.\n  syntax:\n    content: public FontFamily (System.Drawing.Text.GenericFontFamilies genericFamily);\n    parameters:\n    - id: genericFamily\n      type: System.Drawing.Text.GenericFontFamilies\n      description: The <xref href=\"System.Drawing.Text.GenericFontFamilies\"></xref> from which to create the new <xref href=\"System.Drawing.FontFamily\"></xref>.\n  overload: System.Drawing.FontFamily.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: FontFamily(String)\n  nameWithType: FontFamily.FontFamily(String)\n  fullName: System.Drawing.FontFamily.FontFamily(String)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new <xref href=\"System.Drawing.FontFamily\"></xref> with the specified name.\n  remarks: Passing empty string (\"\") for the `name` parameter causes an exception.\n  syntax:\n    content: public FontFamily (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the new <xref href=\"System.Drawing.FontFamily\"></xref>.\n  overload: System.Drawing.FontFamily.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>name</code> is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n <code>name</code> specifies a font that is not installed on the computer running the application.  \\n  \\n -or-  \\n  \\n <code>name</code> specifies a font that is not a TrueType font.\"\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.#ctor(System.String,System.Drawing.Text.FontCollection)\n  id: '#ctor(System.String,System.Drawing.Text.FontCollection)'\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: FontFamily(String,FontCollection)\n  nameWithType: FontFamily.FontFamily(String,FontCollection)\n  fullName: System.Drawing.FontFamily.FontFamily(String,FontCollection)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new <xref href=\"System.Drawing.FontFamily\"></xref> in the specified <xref href=\"System.Drawing.Text.FontCollection\"></xref> with the specified name.\n  syntax:\n    content: public FontFamily (string name, System.Drawing.Text.FontCollection fontCollection);\n    parameters:\n    - id: name\n      type: System.String\n      description: A <xref:System.String> that represents the name of the new <xref href=\"System.Drawing.FontFamily\"></xref>.\n    - id: fontCollection\n      type: System.Drawing.Text.FontCollection\n      description: The <xref href=\"System.Drawing.Text.FontCollection\"></xref> that contains this <xref href=\"System.Drawing.FontFamily\"></xref>.\n  overload: System.Drawing.FontFamily.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>name</code> is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n <code>name</code> specifies a font that is not installed on the computer running the application.  \\n  \\n -or-  \\n  \\n <code>name</code> specifies a font that is not a TrueType font.\"\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.Dispose\n  id: Dispose\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: FontFamily.Dispose()\n  fullName: System.Drawing.FontFamily.Dispose()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Releases all resources used by this <xref href=\"System.Drawing.FontFamily\"></xref>.\n  remarks: \"Calling Dispose allows the resources used by this <xref:System.Drawing.FontFamily> to be reallocated for other purposes.  \\n  \\n Call Dispose when you are finished using the <xref:System.Drawing.FontFamily>. The Dispose method leaves the <xref:System.Drawing.FontFamily> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Drawing.FontFamily> so the garbage collector can reclaim the memory that the <xref:System.Drawing.FontFamily> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  Always call Dispose before you release your last reference to the <xref:System.Drawing.FontFamily>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.FontFamily> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Drawing.FontFamily.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: FontFamily.Equals(Object)\n  fullName: System.Drawing.FontFamily.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Indicates whether the specified object is a <xref href=\"System.Drawing.FontFamily\"></xref> and is identical to this <xref href=\"System.Drawing.FontFamily\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \\n  \\n-   Creates two <xref:System.Drawing.Font> objects.  \\n  \\n-   Tests whether they are equivalent.  \\n  \\n-   Displays the result of the test in a message box.  \\n  \\n [!code-cpp[System.Drawing.ClassicFontFamilyExamples#1](~/add/codesnippet/cpp/m-system.drawing.fontfam_0_1.cpp)]\\n [!code-cs[System.Drawing.ClassicFontFamilyExamples#1](~/add/codesnippet/csharp/m-system.drawing.fontfam_0_1.cs)]\\n [!code-vb[System.Drawing.ClassicFontFamilyExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_0_1.vb)]\"\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to test.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is a <xref href=\"System.Drawing.FontFamily\"></xref> and is identical to this <xref href=\"System.Drawing.FontFamily\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.FontFamily.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.Families\n  id: Families\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: Families\n  nameWithType: FontFamily.Families\n  fullName: System.Drawing.FontFamily.Families\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns an array that contains all the <xref href=\"System.Drawing.FontFamily\"></xref> objects associated with the current graphics context.\n  remarks: ''\n  example:\n  - \"The following code example shows all the font families in the Families property of the <xref:System.Drawing.FontFamily> class. This example is designed to be used with a Windows Form. To run this example, add a <xref:System.Windows.Forms.ListBox> named `listBox1` to a form and call the `PopulateListBoxWithFonts` method from the form's constructor.  \\n  \\n [!code-cs[System.Drawing.MiscExamples#1](~/add/codesnippet/csharp/p-system.drawing.fontfam_0_1.cs)]\\n [!code-cpp[System.Drawing.MiscExamples#1](~/add/codesnippet/cpp/p-system.drawing.fontfam_0_1.cpp)]\\n [!code-vb[System.Drawing.MiscExamples#1](~/add/codesnippet/visualbasic/p-system.drawing.fontfam_0_1.vb)]\"\n  syntax:\n    content: public static System.Drawing.FontFamily[] Families { get; }\n    return:\n      type: System.Drawing.FontFamily[]\n      description: An array of <xref href=\"System.Drawing.FontFamily\"></xref> objects associated with the current graphics context.\n  overload: System.Drawing.FontFamily.Families*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.Finalize\n  id: Finalize\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: FontFamily.Finalize()\n  fullName: System.Drawing.FontFamily.Finalize()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.\n  syntax:\n    content: ~FontFamily ();\n    parameters: []\n  overload: System.Drawing.FontFamily.Finalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.GenericMonospace\n  id: GenericMonospace\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: GenericMonospace\n  nameWithType: FontFamily.GenericMonospace\n  fullName: System.Drawing.FontFamily.GenericMonospace\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets a generic monospace <xref href=\"System.Drawing.FontFamily\"></xref>.\n  syntax:\n    content: public static System.Drawing.FontFamily GenericMonospace { get; }\n    return:\n      type: System.Drawing.FontFamily\n      description: A <xref href=\"System.Drawing.FontFamily\"></xref> that represents a generic monospace font.\n  overload: System.Drawing.FontFamily.GenericMonospace*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.GenericSansSerif\n  id: GenericSansSerif\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: GenericSansSerif\n  nameWithType: FontFamily.GenericSansSerif\n  fullName: System.Drawing.FontFamily.GenericSansSerif\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets a generic sans serif <xref href=\"System.Drawing.FontFamily\"></xref> object.\n  syntax:\n    content: public static System.Drawing.FontFamily GenericSansSerif { get; }\n    return:\n      type: System.Drawing.FontFamily\n      description: A <xref href=\"System.Drawing.FontFamily\"></xref> object that represents a generic sans serif font.\n  overload: System.Drawing.FontFamily.GenericSansSerif*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.GenericSerif\n  id: GenericSerif\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: GenericSerif\n  nameWithType: FontFamily.GenericSerif\n  fullName: System.Drawing.FontFamily.GenericSerif\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets a generic serif <xref href=\"System.Drawing.FontFamily\"></xref>.\n  syntax:\n    content: public static System.Drawing.FontFamily GenericSerif { get; }\n    return:\n      type: System.Drawing.FontFamily\n      description: A <xref href=\"System.Drawing.FontFamily\"></xref> that represents a generic serif font.\n  overload: System.Drawing.FontFamily.GenericSerif*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.GetCellAscent(System.Drawing.FontStyle)\n  id: GetCellAscent(System.Drawing.FontStyle)\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: GetCellAscent(FontStyle)\n  nameWithType: FontFamily.GetCellAscent(FontStyle)\n  fullName: System.Drawing.FontFamily.GetCellAscent(FontStyle)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns the cell ascent, in design units, of the <xref href=\"System.Drawing.FontFamily\"></xref> of the specified style.\n  remarks: ''\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \\n  \\n-   Creates a <xref:System.Drawing.FontFamily>.  \\n  \\n-   Gets the cell ascent for that font family.  \\n  \\n-   Draws the value of the cell ascent to the screen as text.  \\n  \\n [!code-cpp[System.Drawing.ClassicFontFamilyExamples#2](~/add/codesnippet/cpp/m-system.drawing.fontfam_7_1.cpp)]\\n [!code-cs[System.Drawing.ClassicFontFamilyExamples#2](~/add/codesnippet/csharp/m-system.drawing.fontfam_7_1.cs)]\\n [!code-vb[System.Drawing.ClassicFontFamilyExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_7_1.vb)]\"\n  syntax:\n    content: public int GetCellAscent (System.Drawing.FontStyle style);\n    parameters:\n    - id: style\n      type: System.Drawing.FontStyle\n      description: A <xref href=\"System.Drawing.FontStyle\"></xref> that contains style information for the font.\n    return:\n      type: System.Int32\n      description: The cell ascent for this <xref href=\"System.Drawing.FontFamily\"></xref> that uses the specified <xref href=\"System.Drawing.FontStyle\"></xref>.\n  overload: System.Drawing.FontFamily.GetCellAscent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.GetCellDescent(System.Drawing.FontStyle)\n  id: GetCellDescent(System.Drawing.FontStyle)\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: GetCellDescent(FontStyle)\n  nameWithType: FontFamily.GetCellDescent(FontStyle)\n  fullName: System.Drawing.FontFamily.GetCellDescent(FontStyle)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns the cell descent, in design units, of the <xref href=\"System.Drawing.FontFamily\"></xref> of the specified style.\n  remarks: ''\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \\n  \\n-   Creates a <xref:System.Drawing.FontFamily>.  \\n  \\n-   Gets the cell descent for that font family.  \\n  \\n-   Draws the value of the cell descent to the screen as text.  \\n  \\n [!code-cpp[System.Drawing.ClassicFontFamilyExamples#3](~/add/codesnippet/cpp/m-system.drawing.fontfam_5_1.cpp)]\\n [!code-cs[System.Drawing.ClassicFontFamilyExamples#3](~/add/codesnippet/csharp/m-system.drawing.fontfam_5_1.cs)]\\n [!code-vb[System.Drawing.ClassicFontFamilyExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_5_1.vb)]\"\n  syntax:\n    content: public int GetCellDescent (System.Drawing.FontStyle style);\n    parameters:\n    - id: style\n      type: System.Drawing.FontStyle\n      description: A <xref href=\"System.Drawing.FontStyle\"></xref> that contains style information for the font.\n    return:\n      type: System.Int32\n      description: The cell descent metric for this <xref href=\"System.Drawing.FontFamily\"></xref> that uses the specified <xref href=\"System.Drawing.FontStyle\"></xref>.\n  overload: System.Drawing.FontFamily.GetCellDescent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.GetEmHeight(System.Drawing.FontStyle)\n  id: GetEmHeight(System.Drawing.FontStyle)\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: GetEmHeight(FontStyle)\n  nameWithType: FontFamily.GetEmHeight(FontStyle)\n  fullName: System.Drawing.FontFamily.GetEmHeight(FontStyle)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the height, in font design units, of the em square for the specified style.\n  remarks: '*Em square* is a typography term that refers to the rectangle occupied by the font''s widest letter, traditionally the letter M.'\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \\n  \\n-   Creates a <xref:System.Drawing.FontFamily>.  \\n  \\n-   Gets the em square height for that font family.  \\n  \\n-   Draws the value of the em height to the screen as text.  \\n  \\n [!code-cpp[System.Drawing.ClassicFontFamilyExamples#4](~/add/codesnippet/cpp/m-system.drawing.fontfam_3_1.cpp)]\\n [!code-cs[System.Drawing.ClassicFontFamilyExamples#4](~/add/codesnippet/csharp/m-system.drawing.fontfam_3_1.cs)]\\n [!code-vb[System.Drawing.ClassicFontFamilyExamples#4](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_3_1.vb)]\"\n  syntax:\n    content: public int GetEmHeight (System.Drawing.FontStyle style);\n    parameters:\n    - id: style\n      type: System.Drawing.FontStyle\n      description: The <xref href=\"System.Drawing.FontStyle\"></xref> for which to get the em height.\n    return:\n      type: System.Int32\n      description: The height of the em square.\n  overload: System.Drawing.FontFamily.GetEmHeight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.GetFamilies(System.Drawing.Graphics)\n  id: GetFamilies(System.Drawing.Graphics)\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: GetFamilies(Graphics)\n  nameWithType: FontFamily.GetFamilies(Graphics)\n  fullName: System.Drawing.FontFamily.GetFamilies(Graphics)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns an array that contains all the <xref href=\"System.Drawing.FontFamily\"></xref> objects available for the specified graphics context.\n  syntax:\n    content: public static System.Drawing.FontFamily[] GetFamilies (System.Drawing.Graphics graphics);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> object from which to return <xref href=\"System.Drawing.FontFamily\"></xref> objects.\n    return:\n      type: System.Drawing.FontFamily[]\n      description: An array of <xref href=\"System.Drawing.FontFamily\"></xref> objects available for the specified <xref href=\"System.Drawing.Graphics\"></xref> object.\n  overload: System.Drawing.FontFamily.GetFamilies*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>graphics </code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.GetHashCode\n  id: GetHashCode\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: FontFamily.GetHashCode()\n  fullName: System.Drawing.FontFamily.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets a hash code for this <xref href=\"System.Drawing.FontFamily\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \\n  \\n-   Creates a <xref:System.Drawing.FontFamily>.  \\n  \\n-   Gets the hash code for the font family.  \\n  \\n-   Draws the value of the hash code to the screen as text.  \\n  \\n [!code-cpp[System.Drawing.ClassicFontFamilyExamples#6](~/add/codesnippet/cpp/m-system.drawing.fontfam_8_1.cpp)]\\n [!code-cs[System.Drawing.ClassicFontFamilyExamples#6](~/add/codesnippet/csharp/m-system.drawing.fontfam_8_1.cs)]\\n [!code-vb[System.Drawing.ClassicFontFamilyExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_8_1.vb)]\"\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for this <xref href=\"System.Drawing.FontFamily\"></xref>.\n  overload: System.Drawing.FontFamily.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.GetLineSpacing(System.Drawing.FontStyle)\n  id: GetLineSpacing(System.Drawing.FontStyle)\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: GetLineSpacing(FontStyle)\n  nameWithType: FontFamily.GetLineSpacing(FontStyle)\n  fullName: System.Drawing.FontFamily.GetLineSpacing(FontStyle)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns the line spacing, in design units, of the <xref href=\"System.Drawing.FontFamily\"></xref> of the specified style. The line spacing is the vertical distance between the base lines of two consecutive lines of text.\n  remarks: ''\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \\n  \\n-   Creates a <xref:System.Drawing.FontFamily>.  \\n  \\n-   Gets the line spacing for the font family.  \\n  \\n-   Draws the value of the line spacing to the screen as text.  \\n  \\n [!code-cpp[System.Drawing.ClassicFontFamilyExamples#7](~/add/codesnippet/cpp/m-system.drawing.fontfam_2_1.cpp)]\\n [!code-cs[System.Drawing.ClassicFontFamilyExamples#7](~/add/codesnippet/csharp/m-system.drawing.fontfam_2_1.cs)]\\n [!code-vb[System.Drawing.ClassicFontFamilyExamples#7](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_2_1.vb)]\"\n  syntax:\n    content: public int GetLineSpacing (System.Drawing.FontStyle style);\n    parameters:\n    - id: style\n      type: System.Drawing.FontStyle\n      description: The <xref href=\"System.Drawing.FontStyle\"></xref> to apply.\n    return:\n      type: System.Int32\n      description: The distance between two consecutive lines of text.\n  overload: System.Drawing.FontFamily.GetLineSpacing*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.GetName(System.Int32)\n  id: GetName(System.Int32)\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: GetName(Int32)\n  nameWithType: FontFamily.GetName(Int32)\n  fullName: System.Drawing.FontFamily.GetName(Int32)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns the name, in the specified language, of this <xref href=\"System.Drawing.FontFamily\"></xref>.\n  remarks: To indicate language neutral, you should specify 0 for the `language` parameter. For a listing of the available languages and sublanguages, see the Winnt.h header file. If you have [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] installed, this header file can typically be found relative to the [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] installation directory at \\\\\\VC\\PlatformSDK\\Include.\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \\n  \\n-   Creates a <xref:System.Drawing.FontFamily>.  \\n  \\n-   Gets the name of the font family.  \\n  \\n-   Draws the name of the font family to the screen as text.  \\n  \\n [!code-cpp[System.Drawing.ClassicFontFamilyExamples#8](~/add/codesnippet/cpp/m-system.drawing.fontfam_4_1.cpp)]\\n [!code-cs[System.Drawing.ClassicFontFamilyExamples#8](~/add/codesnippet/csharp/m-system.drawing.fontfam_4_1.cs)]\\n [!code-vb[System.Drawing.ClassicFontFamilyExamples#8](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_4_1.vb)]\"\n  syntax:\n    content: public string GetName (int language);\n    parameters:\n    - id: language\n      type: System.Int32\n      description: The language in which the name is returned.\n    return:\n      type: System.String\n      description: A <xref:System.String> that represents the name, in the specified language, of this <xref href=\"System.Drawing.FontFamily\"></xref>.\n  overload: System.Drawing.FontFamily.GetName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.IsStyleAvailable(System.Drawing.FontStyle)\n  id: IsStyleAvailable(System.Drawing.FontStyle)\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: IsStyleAvailable(FontStyle)\n  nameWithType: FontFamily.IsStyleAvailable(FontStyle)\n  fullName: System.Drawing.FontFamily.IsStyleAvailable(FontStyle)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Indicates whether the specified <xref href=\"System.Drawing.FontStyle\"></xref> enumeration is available.\n  remarks: ''\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \\n  \\n-   Creates a <xref:System.Drawing.FontFamily>.  \\n  \\n-   Tests whether the font family is available in an italic font.  \\n  \\n-   If it is, draws text to the screen.  \\n  \\n [!code-cpp[System.Drawing.ClassicFontFamilyExamples#9](~/add/codesnippet/cpp/m-system.drawing.fontfam_6_1.cpp)]\\n [!code-cs[System.Drawing.ClassicFontFamilyExamples#9](~/add/codesnippet/csharp/m-system.drawing.fontfam_6_1.cs)]\\n [!code-vb[System.Drawing.ClassicFontFamilyExamples#9](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_6_1.vb)]\"\n  syntax:\n    content: public bool IsStyleAvailable (System.Drawing.FontStyle style);\n    parameters:\n    - id: style\n      type: System.Drawing.FontStyle\n      description: The <xref href=\"System.Drawing.FontStyle\"></xref> to test.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Drawing.FontStyle\"></xref> is available; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.FontFamily.IsStyleAvailable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.Name\n  id: Name\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: Name\n  nameWithType: FontFamily.Name\n  fullName: System.Drawing.FontFamily.Name\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the name of this <xref href=\"System.Drawing.FontFamily\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example shows all the font families in the <xref:System.Drawing.FontFamily.Families%2A> property of the <xref:System.Drawing.FontFamily> class. This example is designed to be used with a Windows Form. To run this example, add a <xref:System.Windows.Forms.ListBox> named `listBox1` to a form, and call the `PopulateListBoxWithFonts` method from the form's constructor.  \\n  \\n [!code-cs[System.Drawing.MiscExamples#1](~/add/codesnippet/csharp/p-system.drawing.fontfam_1_1.cs)]\\n [!code-cpp[System.Drawing.MiscExamples#1](~/add/codesnippet/cpp/p-system.drawing.fontfam_1_1.cpp)]\\n [!code-vb[System.Drawing.MiscExamples#1](~/add/codesnippet/visualbasic/p-system.drawing.fontfam_1_1.vb)]\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that represents the name of this <xref href=\"System.Drawing.FontFamily\"></xref>.\n  overload: System.Drawing.FontFamily.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontFamily.ToString\n  id: ToString\n  parent: System.Drawing.FontFamily\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: FontFamily.ToString()\n  fullName: System.Drawing.FontFamily.ToString()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts this <xref href=\"System.Drawing.FontFamily\"></xref> to a human-readable string representation.\n  remarks: ''\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code creates a <xref:System.Drawing.FontFamily> and draws a string representation of the font family to the screen.  \\n  \\n [!code-cpp[System.Drawing.ClassicFontFamilyExamples#10](~/add/codesnippet/cpp/m-system.drawing.fontfam_1_1.cpp)]\\n [!code-cs[System.Drawing.ClassicFontFamilyExamples#10](~/add/codesnippet/csharp/m-system.drawing.fontfam_1_1.cs)]\\n [!code-vb[System.Drawing.ClassicFontFamilyExamples#10](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_1_1.vb)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string that represents this <xref href=\"System.Drawing.FontFamily\"></xref>.\n  overload: System.Drawing.FontFamily.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.MarshalByRefObject\n  isExternal: false\n  name: System.MarshalByRefObject\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Drawing.FontFamily.#ctor(System.Drawing.Text.GenericFontFamilies)\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: FontFamily(GenericFontFamilies)\n  nameWithType: FontFamily.FontFamily(GenericFontFamilies)\n  fullName: System.Drawing.FontFamily.FontFamily(GenericFontFamilies)\n- uid: System.Drawing.Text.GenericFontFamilies\n  parent: System.Drawing.Text\n  isExternal: false\n  name: GenericFontFamilies\n  nameWithType: GenericFontFamilies\n  fullName: System.Drawing.Text.GenericFontFamilies\n- uid: System.Drawing.FontFamily.#ctor(System.String)\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: FontFamily(String)\n  nameWithType: FontFamily.FontFamily(String)\n  fullName: System.Drawing.FontFamily.FontFamily(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Drawing.FontFamily.#ctor(System.String,System.Drawing.Text.FontCollection)\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: FontFamily(String,FontCollection)\n  nameWithType: FontFamily.FontFamily(String,FontCollection)\n  fullName: System.Drawing.FontFamily.FontFamily(String,FontCollection)\n- uid: System.Drawing.Text.FontCollection\n  parent: System.Drawing.Text\n  isExternal: false\n  name: FontCollection\n  nameWithType: FontCollection\n  fullName: System.Drawing.Text.FontCollection\n- uid: System.Drawing.FontFamily.Dispose\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: Dispose()\n  nameWithType: FontFamily.Dispose()\n  fullName: System.Drawing.FontFamily.Dispose()\n- uid: System.Drawing.FontFamily.Equals(System.Object)\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: FontFamily.Equals(Object)\n  fullName: System.Drawing.FontFamily.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Drawing.FontFamily.Families\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: Families\n  nameWithType: FontFamily.Families\n  fullName: System.Drawing.FontFamily.Families\n- uid: System.Drawing.FontFamily[]\n  parent: System.Drawing\n  isExternal: false\n  name: FontFamily\n  nameWithType: FontFamily\n  fullName: System.Drawing.FontFamily[]\n  spec.csharp:\n  - uid: System.Drawing.FontFamily\n    name: FontFamily\n    nameWithType: FontFamily\n    fullName: FontFamily[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Drawing.FontFamily.Finalize\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: Finalize()\n  nameWithType: FontFamily.Finalize()\n  fullName: System.Drawing.FontFamily.Finalize()\n- uid: System.Drawing.FontFamily.GenericMonospace\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GenericMonospace\n  nameWithType: FontFamily.GenericMonospace\n  fullName: System.Drawing.FontFamily.GenericMonospace\n- uid: System.Drawing.FontFamily\n  parent: System.Drawing\n  isExternal: false\n  name: FontFamily\n  nameWithType: FontFamily\n  fullName: System.Drawing.FontFamily\n- uid: System.Drawing.FontFamily.GenericSansSerif\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GenericSansSerif\n  nameWithType: FontFamily.GenericSansSerif\n  fullName: System.Drawing.FontFamily.GenericSansSerif\n- uid: System.Drawing.FontFamily.GenericSerif\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GenericSerif\n  nameWithType: FontFamily.GenericSerif\n  fullName: System.Drawing.FontFamily.GenericSerif\n- uid: System.Drawing.FontFamily.GetCellAscent(System.Drawing.FontStyle)\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GetCellAscent(FontStyle)\n  nameWithType: FontFamily.GetCellAscent(FontStyle)\n  fullName: System.Drawing.FontFamily.GetCellAscent(FontStyle)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Drawing.FontStyle\n  parent: System.Drawing\n  isExternal: false\n  name: FontStyle\n  nameWithType: FontStyle\n  fullName: System.Drawing.FontStyle\n- uid: System.Drawing.FontFamily.GetCellDescent(System.Drawing.FontStyle)\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GetCellDescent(FontStyle)\n  nameWithType: FontFamily.GetCellDescent(FontStyle)\n  fullName: System.Drawing.FontFamily.GetCellDescent(FontStyle)\n- uid: System.Drawing.FontFamily.GetEmHeight(System.Drawing.FontStyle)\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GetEmHeight(FontStyle)\n  nameWithType: FontFamily.GetEmHeight(FontStyle)\n  fullName: System.Drawing.FontFamily.GetEmHeight(FontStyle)\n- uid: System.Drawing.FontFamily.GetFamilies(System.Drawing.Graphics)\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GetFamilies(Graphics)\n  nameWithType: FontFamily.GetFamilies(Graphics)\n  fullName: System.Drawing.FontFamily.GetFamilies(Graphics)\n- uid: System.Drawing.Graphics\n  parent: System.Drawing\n  isExternal: false\n  name: Graphics\n  nameWithType: Graphics\n  fullName: System.Drawing.Graphics\n- uid: System.Drawing.FontFamily.GetHashCode\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: FontFamily.GetHashCode()\n  fullName: System.Drawing.FontFamily.GetHashCode()\n- uid: System.Drawing.FontFamily.GetLineSpacing(System.Drawing.FontStyle)\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GetLineSpacing(FontStyle)\n  nameWithType: FontFamily.GetLineSpacing(FontStyle)\n  fullName: System.Drawing.FontFamily.GetLineSpacing(FontStyle)\n- uid: System.Drawing.FontFamily.GetName(System.Int32)\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GetName(Int32)\n  nameWithType: FontFamily.GetName(Int32)\n  fullName: System.Drawing.FontFamily.GetName(Int32)\n- uid: System.Drawing.FontFamily.IsStyleAvailable(System.Drawing.FontStyle)\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: IsStyleAvailable(FontStyle)\n  nameWithType: FontFamily.IsStyleAvailable(FontStyle)\n  fullName: System.Drawing.FontFamily.IsStyleAvailable(FontStyle)\n- uid: System.Drawing.FontFamily.Name\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: Name\n  nameWithType: FontFamily.Name\n  fullName: System.Drawing.FontFamily.Name\n- uid: System.Drawing.FontFamily.ToString\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: ToString()\n  nameWithType: FontFamily.ToString()\n  fullName: System.Drawing.FontFamily.ToString()\n- uid: System.Drawing.FontFamily.#ctor*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: FontFamily\n  nameWithType: FontFamily.FontFamily\n- uid: System.Drawing.FontFamily.Dispose*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: Dispose\n  nameWithType: FontFamily.Dispose\n- uid: System.Drawing.FontFamily.Equals*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: Equals\n  nameWithType: FontFamily.Equals\n- uid: System.Drawing.FontFamily.Families*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: Families\n  nameWithType: FontFamily.Families\n- uid: System.Drawing.FontFamily.Finalize*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: Finalize\n  nameWithType: FontFamily.Finalize\n- uid: System.Drawing.FontFamily.GenericMonospace*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GenericMonospace\n  nameWithType: FontFamily.GenericMonospace\n- uid: System.Drawing.FontFamily.GenericSansSerif*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GenericSansSerif\n  nameWithType: FontFamily.GenericSansSerif\n- uid: System.Drawing.FontFamily.GenericSerif*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GenericSerif\n  nameWithType: FontFamily.GenericSerif\n- uid: System.Drawing.FontFamily.GetCellAscent*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GetCellAscent\n  nameWithType: FontFamily.GetCellAscent\n- uid: System.Drawing.FontFamily.GetCellDescent*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GetCellDescent\n  nameWithType: FontFamily.GetCellDescent\n- uid: System.Drawing.FontFamily.GetEmHeight*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GetEmHeight\n  nameWithType: FontFamily.GetEmHeight\n- uid: System.Drawing.FontFamily.GetFamilies*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GetFamilies\n  nameWithType: FontFamily.GetFamilies\n- uid: System.Drawing.FontFamily.GetHashCode*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GetHashCode\n  nameWithType: FontFamily.GetHashCode\n- uid: System.Drawing.FontFamily.GetLineSpacing*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GetLineSpacing\n  nameWithType: FontFamily.GetLineSpacing\n- uid: System.Drawing.FontFamily.GetName*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: GetName\n  nameWithType: FontFamily.GetName\n- uid: System.Drawing.FontFamily.IsStyleAvailable*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: IsStyleAvailable\n  nameWithType: FontFamily.IsStyleAvailable\n- uid: System.Drawing.FontFamily.Name*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: Name\n  nameWithType: FontFamily.Name\n- uid: System.Drawing.FontFamily.ToString*\n  parent: System.Drawing.FontFamily\n  isExternal: false\n  name: ToString\n  nameWithType: FontFamily.ToString\n"}