{"nodes":[{"pos":[1502,1609],"content":"Represents a response to a request being handled by an <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Represents a response to a request being handled by an <xref href=\"System.Net.HttpListener\"></xref> object."},{"pos":[1622,2738],"content":"When a client makes a request for a resource handled by an <xref:System.Net.HttpListener> object, the request and response are made available to your application in an <xref:System.Net.HttpListenerContext> object. The request is represented by an <xref:System.Net.HttpListenerRequest> object and is available in the <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName> property. The response is represented by an HttpListenerResponse object and is available in the <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=fullName> property.       You can customize the response by setting various properties, such as <xref:System.Net.HttpListenerResponse.StatusCode%2A>, <xref:System.Net.HttpListenerResponse.StatusDescription%2A>, and <xref:System.Net.HttpListenerResponse.Cookies%2A>. Use the <xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=fullName> property to obtain a <xref:System.IO.Stream> instance to which response data can be written. Finally, send the response data to the client by calling the <xref:System.Net.HttpListenerResponse.Close%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When a client makes a request for a resource handled by an <xref:System.Net.HttpListener> object, the request and response are made available to your application in an <xref:System.Net.HttpListenerContext> object. The request is represented by an <xref:System.Net.HttpListenerRequest> object and is available in the <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName> property. The response is represented by an HttpListenerResponse object and is available in the <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=fullName> property.       You can customize the response by setting various properties, such as <xref:System.Net.HttpListenerResponse.StatusCode%2A>, <xref:System.Net.HttpListenerResponse.StatusDescription%2A>, and <xref:System.Net.HttpListenerResponse.Cookies%2A>. Use the <xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=fullName> property to obtain a <xref:System.IO.Stream> instance to which response data can be written. Finally, send the response data to the client by calling the <xref:System.Net.HttpListenerResponse.Close%2A> method.","pos":[0,1114],"nodes":[{"content":"When a client makes a request for a resource handled by an &lt;xref:System.Net.HttpListener&gt; object, the request and response are made available to your application in an &lt;xref:System.Net.HttpListenerContext&gt; object.","pos":[0,213],"source":"When a client makes a request for a resource handled by an <xref:System.Net.HttpListener> object, the request and response are made available to your application in an <xref:System.Net.HttpListenerContext> object."},{"content":"The request is represented by an &lt;xref:System.Net.HttpListenerRequest&gt; object and is available in the &lt;xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName&gt; property.","pos":[214,399],"source":" The request is represented by an <xref:System.Net.HttpListenerRequest> object and is available in the <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName> property."},{"content":"The response is represented by an HttpListenerResponse object and is available in the &lt;xref:System.Net.HttpListenerContext.Response%2A?displayProperty=fullName&gt; property.","pos":[400,570],"source":" The response is represented by an HttpListenerResponse object and is available in the <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=fullName> property."},{"content":"You can customize the response by setting various properties, such as &lt;xref:System.Net.HttpListenerResponse.StatusCode%2A&gt;, &lt;xref:System.Net.HttpListenerResponse.StatusDescription%2A&gt;, and &lt;xref:System.Net.HttpListenerResponse.Cookies%2A&gt;.","pos":[577,816],"source":"       You can customize the response by setting various properties, such as <xref:System.Net.HttpListenerResponse.StatusCode%2A>, <xref:System.Net.HttpListenerResponse.StatusDescription%2A>, and <xref:System.Net.HttpListenerResponse.Cookies%2A>."},{"content":"Use the &lt;xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=fullName&gt; property to obtain a &lt;xref:System.IO.Stream&gt; instance to which response data can be written.","pos":[817,997],"source":" Use the <xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=fullName> property to obtain a <xref:System.IO.Stream> instance to which response data can be written."},{"content":"Finally, send the response data to the client by calling the &lt;xref:System.Net.HttpListenerResponse.Close%2A&gt; method.","pos":[998,1114],"source":" Finally, send the response data to the client by calling the <xref:System.Net.HttpListenerResponse.Close%2A> method."}]}]},{"pos":[3431,3494],"content":"Closes the connection to the client without sending a response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Closes the connection to the client without sending a response.","pos":[0,63]}]},{"pos":[3506,3909],"content":"Calling this method on an object that has already been closed has no effect. If the response has not already been closed, this method closes it and the associated <xref:System.Net.HttpListenerRequest> and <xref:System.Net.HttpListenerContext> objects. The connection to the client is also closed, regardless of the <xref:System.Net.HttpListenerRequest.KeepAlive%2A> property value of the client request.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Calling this method on an object that has already been closed has no effect. If the response has not already been closed, this method closes it and the associated <xref:System.Net.HttpListenerRequest> and <xref:System.Net.HttpListenerContext> objects. The connection to the client is also closed, regardless of the <xref:System.Net.HttpListenerRequest.KeepAlive%2A> property value of the client request.","pos":[0,403],"nodes":[{"content":"Calling this method on an object that has already been closed has no effect.","pos":[0,76]},{"content":"If the response has not already been closed, this method closes it and the associated &lt;xref:System.Net.HttpListenerRequest&gt; and &lt;xref:System.Net.HttpListenerContext&gt; objects.","pos":[77,251],"source":" If the response has not already been closed, this method closes it and the associated <xref:System.Net.HttpListenerRequest> and <xref:System.Net.HttpListenerContext> objects."},{"content":"The connection to the client is also closed, regardless of the &lt;xref:System.Net.HttpListenerRequest.KeepAlive%2A&gt; property value of the client request.","pos":[252,403],"source":" The connection to the client is also closed, regardless of the <xref:System.Net.HttpListenerRequest.KeepAlive%2A> property value of the client request."}]}]},{"pos":[4489,4563],"content":"Adds the specified header and value to the HTTP headers for this response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified header and value to the HTTP headers for this response.","pos":[0,74]}]},{"pos":[4576,5183],"content":"Calling this method is equivalent to calling the <xref:System.Net.WebHeaderCollection.Set%2A> method on the collection returned by the <xref:System.Net.HttpListenerResponse.Headers%2A> property.       If the header specified in `name` does not exist, this method inserts a new header into the <xref:System.Net.HttpListenerResponse.Headers%2A> property's collection. If `name` is present in the collection, this method replaces the existing value with `value`. To add a value to an existing header without replacing the existing value, use the <xref:System.Net.HttpListenerResponse.AppendHeader%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Calling this method is equivalent to calling the &lt;xref:System.Net.WebHeaderCollection.Set%2A&gt; method on the collection returned by the &lt;xref:System.Net.HttpListenerResponse.Headers%2A&gt; property.","pos":[0,194],"source":"Calling this method is equivalent to calling the <xref:System.Net.WebHeaderCollection.Set%2A> method on the collection returned by the <xref:System.Net.HttpListenerResponse.Headers%2A> property."},{"content":"If the header specified in <ph id=\"ph1\">`name`</ph> does not exist, this method inserts a new header into the &lt;xref:System.Net.HttpListenerResponse.Headers%2A&gt; property's collection.","pos":[201,365],"source":"       If the header specified in `name` does not exist, this method inserts a new header into the <xref:System.Net.HttpListenerResponse.Headers%2A> property's collection."},{"content":"If <ph id=\"ph1\">`name`</ph> is present in the collection, this method replaces the existing value with <ph id=\"ph2\">`value`</ph>.","pos":[366,459],"source":" If `name` is present in the collection, this method replaces the existing value with `value`."},{"content":"To add a value to an existing header without replacing the existing value, use the &lt;xref:System.Net.HttpListenerResponse.AppendHeader%2A&gt; method.","pos":[460,605],"source":" To add a value to an existing header without replacing the existing value, use the <xref:System.Net.HttpListenerResponse.AppendHeader%2A> method."}]},{"pos":[5529,5564],"content":"The name of the HTTP header to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the HTTP header to set.","pos":[0,35]}]},{"pos":[5626,5658],"content":"The value for the <ph id=\"ph1\">`name`</ph> header.","needQuote":true,"needEscape":true,"source":"The value for the `name` header."},{"pos":[5830,5936],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string (\"\").","needQuote":true,"needEscape":true,"source":"<code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\")."},{"pos":[6032,6186],"content":"You are not allowed to specify a value for the specified header.       -or-       <code>name</code> or <code>value</code> contains invalid characters.","needQuote":false,"needEscape":true,"nodes":[{"content":"You are not allowed to specify a value for the specified header.","pos":[0,64]},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept> contains invalid characters.","pos":[71,150],"source":"       -or-       <code>name</code> or <code>value</code> contains invalid characters."}]},{"pos":[6302,6369],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than 65,535 characters.","needQuote":true,"needEscape":true,"source":"The length of <code>value</code> is greater than 65,535 characters."},{"pos":[6791,6882],"content":"Adds the specified <xref:System.Net.Cookie> to the collection of cookies for this response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified &lt;xref:System.Net.Cookie&gt; to the collection of cookies for this response.","pos":[0,91],"source":"Adds the specified <xref:System.Net.Cookie> to the collection of cookies for this response."}]},{"pos":[6895,7294],"content":"Calling this method is equivalent to calling the <xref:System.Net.CookieCollection.Add%2A> method on the collection returned by the <xref:System.Net.HttpListenerResponse.Cookies%2A> property.       If the specified cookie does not exist in the <xref:System.Net.HttpListenerResponse.Cookies%2A> property's collection, `cookie` is added. If the cookie exists in the collection, `cookie` replaces it.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Calling this method is equivalent to calling the &lt;xref:System.Net.CookieCollection.Add%2A&gt; method on the collection returned by the &lt;xref:System.Net.HttpListenerResponse.Cookies%2A&gt; property.","pos":[0,191],"source":"Calling this method is equivalent to calling the <xref:System.Net.CookieCollection.Add%2A> method on the collection returned by the <xref:System.Net.HttpListenerResponse.Cookies%2A> property."},{"content":"If the specified cookie does not exist in the &lt;xref:System.Net.HttpListenerResponse.Cookies%2A&gt; property's collection, <ph id=\"ph1\">`cookie`</ph> is added.","pos":[198,335],"source":"       If the specified cookie does not exist in the <xref:System.Net.HttpListenerResponse.Cookies%2A> property's collection, `cookie` is added."},{"content":"If the cookie exists in the collection, <ph id=\"ph1\">`cookie`</ph> replaces it.","pos":[336,397],"source":" If the cookie exists in the collection, `cookie` replaces it."}]},{"pos":[7641,7725],"content":"The <xref:System.Net.Cookie> to add to the collection to be sent with this response.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Net.Cookie&gt; to add to the collection to be sent with this response.","pos":[0,84],"source":"The <xref:System.Net.Cookie> to add to the collection to be sent with this response."}]},{"pos":[7900,7984],"content":"<ph id=\"ph1\">&lt;code&gt;cookie&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>cookie</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8447,8522],"content":"Appends a value to the specified HTTP header to be sent with this response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Appends a value to the specified HTTP header to be sent with this response.","pos":[0,75]}]},{"pos":[8535,9107],"content":"Calling this method is equivalent to calling the <xref:System.Net.WebHeaderCollection.Add%2A> method on the collection returned by the <xref:System.Net.HttpListenerResponse.Headers%2A> property.       If the header specified in `header` does not exist, this method inserts a new header into the <xref:System.Net.HttpListenerResponse.Headers%2A> property's collection. If `header` is present in the collection, this method adds `value` to the existing values. To replace the value of an existing header, use the <xref:System.Net.HttpListenerResponse.AddHeader%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Calling this method is equivalent to calling the &lt;xref:System.Net.WebHeaderCollection.Add%2A&gt; method on the collection returned by the &lt;xref:System.Net.HttpListenerResponse.Headers%2A&gt; property.","pos":[0,194],"source":"Calling this method is equivalent to calling the <xref:System.Net.WebHeaderCollection.Add%2A> method on the collection returned by the <xref:System.Net.HttpListenerResponse.Headers%2A> property."},{"content":"If the header specified in <ph id=\"ph1\">`header`</ph> does not exist, this method inserts a new header into the &lt;xref:System.Net.HttpListenerResponse.Headers%2A&gt; property's collection.","pos":[201,367],"source":"       If the header specified in `header` does not exist, this method inserts a new header into the <xref:System.Net.HttpListenerResponse.Headers%2A> property's collection."},{"content":"If <ph id=\"ph1\">`header`</ph> is present in the collection, this method adds <ph id=\"ph2\">`value`</ph> to the existing values.","pos":[368,458],"source":" If `header` is present in the collection, this method adds `value` to the existing values."},{"content":"To replace the value of an existing header, use the &lt;xref:System.Net.HttpListenerResponse.AddHeader%2A&gt; method.","pos":[459,570],"source":" To replace the value of an existing header, use the <xref:System.Net.HttpListenerResponse.AddHeader%2A> method."}]},{"pos":[9262,9311],"content":"The name of the HTTP header to append <ph id=\"ph1\">`value`</ph> to.","needQuote":true,"needEscape":true,"source":"The name of the HTTP header to append `value` to."},{"pos":[9373,9414],"content":"The value to append to the <ph id=\"ph1\">`name`</ph> header.","needQuote":true,"needEscape":true,"source":"The value to append to the `name` header."},{"pos":[9582,9872],"content":"<code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\").       -or-       You are not allowed to specify a value for the specified header.       -or-       <code>name</code> or <code>value</code> contains invalid characters.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string (\"\").","pos":[0,106],"source":"<code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\")."},{"content":"-or-       You are not allowed to specify a value for the specified header.","pos":[113,188]},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> contains invalid characters.","pos":[195,274],"source":"       -or-       <code>name</code> or <code>value</code> contains invalid characters."}]},{"pos":[9988,10055],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than 65,535 characters.","needQuote":true,"needEscape":true,"source":"The length of <code>value</code> is greater than 65,535 characters."},{"pos":[10386,10521],"content":"Sends the response to the client and releases the resources held by this <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListenerResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Sends the response to the client and releases the resources held by this <xref href=\"System.Net.HttpListenerResponse\"></xref> instance."},{"pos":[10533,10647],"content":"This method closes the response stream and the <xref:System.Net.HttpListenerRequest> associated with the response.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method closes the response stream and the &lt;xref:System.Net.HttpListenerRequest&gt; associated with the response.","pos":[0,114],"source":"This method closes the response stream and the <xref:System.Net.HttpListenerRequest> associated with the response."}]},{"pos":[11545,11694],"content":"Returns the specified byte array to the client and releases the resources held by this <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListenerResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Returns the specified byte array to the client and releases the resources held by this <xref href=\"System.Net.HttpListenerResponse\"></xref> instance."},{"pos":[11707,12118],"content":"If you are sending body data with the response, you can use this method to send it as a <xref:System.Byte> array instead of writing the body data to the <xref:System.Net.HttpListenerResponse.OutputStream%2A> property and calling the <xref:System.Net.HttpListenerResponse.Close%2A> method.       This method closes the response stream and the <xref:System.Net.HttpListenerRequest> associated with the response.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you are sending body data with the response, you can use this method to send it as a <xref:System.Byte> array instead of writing the body data to the <xref:System.Net.HttpListenerResponse.OutputStream%2A> property and calling the <xref:System.Net.HttpListenerResponse.Close%2A> method.       This method closes the response stream and the <xref:System.Net.HttpListenerRequest> associated with the response.","pos":[0,409],"nodes":[{"content":"If you are sending body data with the response, you can use this method to send it as a &lt;xref:System.Byte&gt; array instead of writing the body data to the &lt;xref:System.Net.HttpListenerResponse.OutputStream%2A&gt; property and calling the &lt;xref:System.Net.HttpListenerResponse.Close%2A&gt; method.","pos":[0,288],"source":"If you are sending body data with the response, you can use this method to send it as a <xref:System.Byte> array instead of writing the body data to the <xref:System.Net.HttpListenerResponse.OutputStream%2A> property and calling the <xref:System.Net.HttpListenerResponse.Close%2A> method."},{"content":"This method closes the response stream and the &lt;xref:System.Net.HttpListenerRequest&gt; associated with the response.","pos":[295,409],"source":"       This method closes the response stream and the <xref:System.Net.HttpListenerRequest> associated with the response."}]}]},{"pos":[12467,12543],"content":"A <xref:System.Byte> array that contains the response to send to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Byte&gt; array that contains the response to send to the client.","pos":[0,76],"source":"A <xref:System.Byte> array that contains the response to send to the client."}]},{"pos":[12610,12805],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to block execution while flushing the stream to the client; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to block execution while flushing the stream to the client; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12973,13065],"content":"<ph id=\"ph1\">&lt;code&gt;responseEntity&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>responseEntity</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13172,13194],"content":"This object is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"This object is closed.","pos":[0,22]}]},{"pos":[13571,13689],"content":"Gets or sets the <xref:System.Text.Encoding> for this response's <xref:System.Net.HttpListenerResponse.OutputStream*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the &lt;xref:System.Text.Encoding&gt; for this response's &lt;xref:System.Net.HttpListenerResponse.OutputStream*&gt;.","pos":[0,118],"source":"Gets or sets the <xref:System.Text.Encoding> for this response's <xref:System.Net.HttpListenerResponse.OutputStream*>."}]},{"pos":[13701,13845],"content":"An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"An &lt;xref:System.Text.Encoding&gt; object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.","pos":[0,144],"source":"An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences."}]},{"pos":[14254,14485],"content":"An &lt;xref:System.Text.Encoding&gt; object suitable for use with the data in the &lt;xref:System.Net.HttpListenerResponse.OutputStream*&gt; property, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no encoding is specified.","needQuote":true,"needEscape":true,"source":"An <xref:System.Text.Encoding> object suitable for use with the data in the <xref:System.Net.HttpListenerResponse.OutputStream*> property, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no encoding is specified."},{"pos":[14940,15015],"content":"Gets or sets the number of bytes in the body data included in the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the number of bytes in the body data included in the response.","pos":[0,75]}]},{"pos":[15028,15411],"content":"The `Content-Length` header expresses the length, in bytes, of the response's body data. When using a format that is not send the data chunked or raw, you must set the ContentLength64 property. If you do not, the <xref:System.Net.HttpListener> does not send the response data.       For a complete list of response headers, see the <xref:System.Net.HttpResponseHeader> enumeration.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`Content-Length`</ph> header expresses the length, in bytes, of the response's body data.","pos":[0,88],"source":"The `Content-Length` header expresses the length, in bytes, of the response's body data."},{"content":"When using a format that is not send the data chunked or raw, you must set the ContentLength64 property.","pos":[89,193]},{"content":"If you do not, the &lt;xref:System.Net.HttpListener&gt; does not send the response data.","pos":[194,276],"source":" If you do not, the <xref:System.Net.HttpListener> does not send the response data."},{"content":"For a complete list of response headers, see the &lt;xref:System.Net.HttpResponseHeader&gt; enumeration.","pos":[283,381],"source":"       For a complete list of response headers, see the <xref:System.Net.HttpResponseHeader> enumeration."}]},{"pos":[15727,15843],"content":"The value of the response's <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Content-Length\" name=\"Content-Length\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> header.","needQuote":true,"needEscape":true,"source":"The value of the response's <xref uid=\"langword_csharp_Content-Length\" name=\"Content-Length\" href=\"\"></xref> header."},{"pos":[16033,16091],"content":"The value specified for a set operation is less than zero.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value specified for a set operation is less than zero.","pos":[0,58]}]},{"pos":[16202,16237],"content":"The response is already being sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"The response is already being sent.","pos":[0,35]}]},{"pos":[16344,16366],"content":"This object is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"This object is closed.","pos":[0,22]}]},{"pos":[16723,16774],"content":"Gets or sets the MIME type of the content returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the MIME type of the content returned.","pos":[0,51]}]},{"pos":[16787,17028],"content":"When communicating with a Web browser, you should explicitly set this property when returning any content type other than `text/html`.       For a complete list of response headers, see the <xref:System.Net.HttpResponseHeader> enumeration.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When communicating with a Web browser, you should explicitly set this property when returning any content type other than <ph id=\"ph1\">`text/html`</ph>.","pos":[0,134],"source":"When communicating with a Web browser, you should explicitly set this property when returning any content type other than `text/html`."},{"content":"For a complete list of response headers, see the &lt;xref:System.Net.HttpResponseHeader&gt; enumeration.","pos":[141,239],"source":"       For a complete list of response headers, see the <xref:System.Net.HttpResponseHeader> enumeration."}]},{"pos":[17150,17307],"content":"A &lt;xref:System.String&gt; instance that contains the text of the response's <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Content-Type\" name=\"Content-Type\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> header.","needQuote":true,"needEscape":true,"source":"A <xref:System.String> instance that contains the text of the response's <xref uid=\"langword_csharp_Content-Type\" name=\"Content-Type\" href=\"\"></xref> header."},{"pos":[17481,17585],"content":"The value specified for a set operation is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value specified for a set operation is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[17680,17744],"content":"The value specified for a set operation is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"The value specified for a set operation is an empty string (\"\").","pos":[0,64]}]},{"pos":[17851,17873],"content":"This object is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"This object is closed.","pos":[0,22]}]},{"pos":[18210,18276],"content":"Gets or sets the collection of cookies returned with the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the collection of cookies returned with the response.","pos":[0,66]}]},{"pos":[18289,18658],"content":"A cookie is name/value text data from a Web server that is stored on the local (client) computer. The following cookie formats are supported: Netscape, RFC 2109, and RFC 2965. The Netscape cookie specification is available at http://wp.netscape.com/newsref/std/cookie_spec.html; the RFC documents are available at [http://www.rfc-editor.org](http://www.rfc-editor.org).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A cookie is name/value text data from a Web server that is stored on the local (client) computer.","pos":[0,97]},{"content":"The following cookie formats are supported: Netscape, RFC 2109, and RFC 2965.","pos":[98,175]},{"content":"The Netscape cookie specification is available at http://wp.netscape.com/newsref/std/cookie_spec.html; the RFC documents are available at <bpt id=\"p1\">[</bpt>http://www.rfc-editor.org<ept id=\"p1\">](http://www.rfc-editor.org)</ept>.","pos":[176,369],"source":" The Netscape cookie specification is available at http://wp.netscape.com/newsref/std/cookie_spec.html; the RFC documents are available at [http://www.rfc-editor.org](http://www.rfc-editor.org)."}]},{"pos":[19063,19219],"content":"A <xref:System.Net.CookieCollection> that contains cookies to accompany the response. The collection is empty if no cookies have been added to the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.Net.CookieCollection> that contains cookies to accompany the response. The collection is empty if no cookies have been added to the response.","pos":[0,156],"nodes":[{"content":"A &lt;xref:System.Net.CookieCollection&gt; that contains cookies to accompany the response.","pos":[0,85],"source":"A <xref:System.Net.CookieCollection> that contains cookies to accompany the response."},{"content":"The collection is empty if no cookies have been added to the response.","pos":[86,156]}]}]},{"pos":[19761,19868],"content":"Copies properties from the specified <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListenerResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to this response.","needQuote":true,"needEscape":true,"source":"Copies properties from the specified <xref href=\"System.Net.HttpListenerResponse\"></xref> to this response."},{"pos":[19881,20751],"content":"If you regularly change many properties from their default values to a fixed set of new values, it is convenient to use an <xref:System.Net.HttpListenerResponse> instance as a template. Customize the template response once and, instead of configuring each response separately, call the CopyFrom method to configure a new response based on property values in the template response.       The following properties are copied from `templateResponse` to the current instance.      -   <xref:System.Net.HttpListenerResponse.Headers%2A>      -   <xref:System.Net.HttpListenerResponse.ContentLength64%2A>      -   <xref:System.Net.HttpListenerResponse.StatusCode%2A>      -   <xref:System.Net.HttpListenerResponse.StatusDescription%2A>      -   <xref:System.Net.HttpListenerResponse.KeepAlive%2A>      -   <xref:System.Net.HttpListenerResponse.ProtocolVersion%2A>","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you regularly change many properties from their default values to a fixed set of new values, it is convenient to use an &lt;xref:System.Net.HttpListenerResponse&gt; instance as a template.","pos":[0,185],"source":"If you regularly change many properties from their default values to a fixed set of new values, it is convenient to use an <xref:System.Net.HttpListenerResponse> instance as a template."},{"content":"Customize the template response once and, instead of configuring each response separately, call the CopyFrom method to configure a new response based on property values in the template response.","pos":[186,380]},{"content":"The following properties are copied from <ph id=\"ph1\">`templateResponse`</ph> to the current instance.","pos":[387,471],"source":"       The following properties are copied from `templateResponse` to the current instance."},{"content":"-   &lt;xref:System.Net.HttpListenerResponse.Headers%2A&gt;      -   &lt;xref:System.Net.HttpListenerResponse.ContentLength64%2A&gt;      -   &lt;xref:System.Net.HttpListenerResponse.StatusCode%2A&gt;      -   &lt;xref:System.Net.HttpListenerResponse.StatusDescription%2A&gt;      -   &lt;xref:System.Net.HttpListenerResponse.KeepAlive%2A&gt;      -   &lt;xref:System.Net.HttpListenerResponse.ProtocolVersion%2A&gt;","pos":[477,856],"source":"      -   <xref:System.Net.HttpListenerResponse.Headers%2A>      -   <xref:System.Net.HttpListenerResponse.ContentLength64%2A>      -   <xref:System.Net.HttpListenerResponse.StatusCode%2A>      -   <xref:System.Net.HttpListenerResponse.StatusDescription%2A>      -   <xref:System.Net.HttpListenerResponse.KeepAlive%2A>      -   <xref:System.Net.HttpListenerResponse.ProtocolVersion%2A>"}]},{"pos":[21247,21321],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListenerResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to copy.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.HttpListenerResponse\"></xref> instance to copy."},{"pos":[21729,21807],"content":"Gets or sets the collection of header name/value pairs returned by the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the collection of header name/value pairs returned by the server.","pos":[0,78]}]},{"pos":[21820,22521],"content":"Response headers contain metadata information such as the date and time of the response, the identity of the responding server, and the MIME type of the data contained in the response body.       For a complete list of response headers, see the <xref:System.Net.HttpResponseHeader> enumeration.      > [!NOTE] >  If you attempt to set a Content-Length, Keep-Alive, Transfer-Encoding, or WWW-Authenticate header using the Headers property, an exception will be thrown. Use the <xref:System.Net.HttpListenerResponse.KeepAlive%2A> or <xref:System.Net.HttpListenerResponse.ContentLength64%2A> properties to set these headers. You cannot set the Transfer-Encoding or WWW-Authenticate headers manually.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Response headers contain metadata information such as the date and time of the response, the identity of the responding server, and the MIME type of the data contained in the response body.","pos":[0,189]},{"content":"For a complete list of response headers, see the &lt;xref:System.Net.HttpResponseHeader&gt; enumeration.","pos":[196,294],"source":"       For a complete list of response headers, see the <xref:System.Net.HttpResponseHeader> enumeration."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If you attempt to set a Content-Length, Keep-Alive, Transfer-Encoding, or WWW-Authenticate header using the Headers property, an exception will be thrown.","pos":[300,467],"source":"      > [!NOTE] >  If you attempt to set a Content-Length, Keep-Alive, Transfer-Encoding, or WWW-Authenticate header using the Headers property, an exception will be thrown."},{"content":"Use the &lt;xref:System.Net.HttpListenerResponse.KeepAlive%2A&gt; or &lt;xref:System.Net.HttpListenerResponse.ContentLength64%2A&gt; properties to set these headers.","pos":[468,621],"source":" Use the <xref:System.Net.HttpListenerResponse.KeepAlive%2A> or <xref:System.Net.HttpListenerResponse.ContentLength64%2A> properties to set these headers."},{"content":"You cannot set the Transfer-Encoding or WWW-Authenticate headers manually.","pos":[622,696]}]},{"pos":[22905,23035],"content":"A <xref:System.Net.WebHeaderCollection> instance that contains all the explicitly set HTTP headers to be included in the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Net.WebHeaderCollection&gt; instance that contains all the explicitly set HTTP headers to be included in the response.","pos":[0,130],"source":"A <xref:System.Net.WebHeaderCollection> instance that contains all the explicitly set HTTP headers to be included in the response."}]},{"pos":[23213,23322],"content":"The <xref:System.Net.WebHeaderCollection> instance specified for a set operation is not valid for a response.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Net.WebHeaderCollection&gt; instance specified for a set operation is not valid for a response.","pos":[0,109],"source":"The <xref:System.Net.WebHeaderCollection> instance specified for a set operation is not valid for a response."}]},{"pos":[23669,23753],"content":"Gets or sets a value indicating whether the server requests a persistent connection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the server requests a persistent connection.","pos":[0,84]}]},{"pos":[23766,24316],"content":"If an HTTP client and server expect to exchange data multiple times in a short period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message. Persistent connections are in widespread use in communications between modern Web browsers and Web servers.       Persistent connections are described in detail in the HTTP/1.1 protocol specification (RFC 2616) available at the RTF Editor Web site ([http://www.rfc-editor.org](http://www.rfc-editor.org)).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If an HTTP client and server expect to exchange data multiple times in a short period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message.","pos":[0,242]},{"content":"Persistent connections are in widespread use in communications between modern Web browsers and Web servers.","pos":[243,350]},{"content":"Persistent connections are described in detail in the HTTP/1.1 protocol specification (RFC 2616) available at the RTF Editor Web site (<bpt id=\"p1\">[</bpt>http://www.rfc-editor.org<ept id=\"p1\">](http://www.rfc-editor.org)</ept>).","pos":[357,548],"source":"       Persistent connections are described in detail in the HTTP/1.1 protocol specification (RFC 2616) available at the RTF Editor Web site ([http://www.rfc-editor.org](http://www.rfc-editor.org))."}]},{"pos":[24713,24973],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the server requests a persistent connection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the server requests a persistent connection; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,183],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the server requests a persistent connection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[184,260],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[25149,25171],"content":"This object is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"This object is closed.","pos":[0,22]}]},{"pos":[25533,25606],"content":"Gets a <xref:System.IO.Stream> object to which a response can be written.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a &lt;xref:System.IO.Stream&gt; object to which a response can be written.","pos":[0,73],"source":"Gets a <xref:System.IO.Stream> object to which a response can be written."}]},{"pos":[25619,25954],"content":"The <xref:System.Net.HttpListenerResponse.ContentLength64%2A> property must be set explicitly before writing to the returned <xref:System.IO.Stream> object.      > [!NOTE] >  Closing the request does not close the stream returned by this property. When you no longer need the stream, you should close it by calling the Close method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Net.HttpListenerResponse.ContentLength64%2A&gt; property must be set explicitly before writing to the returned &lt;xref:System.IO.Stream&gt; object.","pos":[0,156],"source":"The <xref:System.Net.HttpListenerResponse.ContentLength64%2A> property must be set explicitly before writing to the returned <xref:System.IO.Stream> object."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Closing the request does not close the stream returned by this property.","pos":[162,247],"source":"      > [!NOTE] >  Closing the request does not close the stream returned by this property."},{"content":"When you no longer need the stream, you should close it by calling the Close method.","pos":[248,332]}]},{"pos":[26263,26331],"content":"A <xref:System.IO.Stream> object to which a response can be written.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.IO.Stream&gt; object to which a response can be written.","pos":[0,68],"source":"A <xref:System.IO.Stream> object to which a response can be written."}]},{"pos":[26510,26532],"content":"This object is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"This object is closed.","pos":[0,22]}]},{"pos":[26909,26961],"content":"Gets or sets the HTTP version used for the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the HTTP version used for the response.","pos":[0,52]}]},{"pos":[26973,27081],"content":"The capabilities of different HTTP versions are specified in the documents available at http://www.ietf.org.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The capabilities of different HTTP versions are specified in the documents available at http://www.ietf.org.","pos":[0,108]}]},{"pos":[27486,27624],"content":"A <xref:System.Version> object indicating the version of HTTP used when responding to the client. Note that this property is now obsolete.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.Version> object indicating the version of HTTP used when responding to the client. Note that this property is now obsolete.","pos":[0,138],"nodes":[{"content":"A &lt;xref:System.Version&gt; object indicating the version of HTTP used when responding to the client.","pos":[0,97],"source":"A <xref:System.Version> object indicating the version of HTTP used when responding to the client."},{"content":"Note that this property is now obsolete.","pos":[98,138]}]}]},{"pos":[27802,27906],"content":"The value specified for a set operation is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value specified for a set operation is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[28001,28186],"content":"The value specified for a set operation does not have its &lt;xref:System.Version.Major<bpt id=\"p1\">*</bpt>&gt; property set to 1 or does not have its &lt;xref:System.Version.Minor<ept id=\"p1\">*</ept>&gt; property set to either 0 or 1.","needQuote":true,"needEscape":true,"source":"The value specified for a set operation does not have its <xref:System.Version.Major*> property set to 1 or does not have its <xref:System.Version.Minor*> property set to either 0 or 1."},{"pos":[28293,28315],"content":"This object is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"This object is closed.","pos":[0,22]}]},{"pos":[28709,28777],"content":"Configures the response to redirect the client to the specified URL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Configures the response to redirect the client to the specified URL.","pos":[0,68]}]},{"pos":[28789,29125],"content":"The Redirect method is used to redirect a client to the new location for a resource. This method sets the response's `Location` header to `url`, the <xref:System.Net.HttpListenerResponse.StatusCode%2A> property to <xref:System.Net.HttpStatusCode>, and the <xref:System.Net.HttpListenerResponse.StatusDescription%2A> property to \"Found\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Redirect method is used to redirect a client to the new location for a resource.","pos":[0,84]},{"content":"This method sets the response's <ph id=\"ph1\">`Location`</ph> header to <ph id=\"ph2\">`url`</ph>, the &lt;xref:System.Net.HttpListenerResponse.StatusCode%2A&gt; property to &lt;xref:System.Net.HttpStatusCode&gt;, and the &lt;xref:System.Net.HttpListenerResponse.StatusDescription%2A&gt; property to \"Found\".","pos":[85,336],"source":" This method sets the response's `Location` header to `url`, the <xref:System.Net.HttpListenerResponse.StatusCode%2A> property to <xref:System.Net.HttpStatusCode>, and the <xref:System.Net.HttpListenerResponse.StatusDescription%2A> property to \"Found\"."}]},{"pos":[29438,29506],"content":"The URL that the client should use to locate the requested resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL that the client should use to locate the requested resource.","pos":[0,68]}]},{"pos":[29959,30087],"content":"Gets or sets the value of the HTTP <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> header in this response.","needQuote":true,"needEscape":true,"source":"Gets or sets the value of the HTTP <xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"></xref> header in this response."},{"pos":[30100,30340],"content":"The `Location` header specifies the URL to which the client is directed to locate a requested resource.      > [!NOTE] >  Setting this property does not automatically set the <xref:System.Net.HttpListenerResponse.StatusCode%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`Location`</ph> header specifies the URL to which the client is directed to locate a requested resource.","pos":[0,103],"source":"The `Location` header specifies the URL to which the client is directed to locate a requested resource."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Setting this property does not automatically set the &lt;xref:System.Net.HttpListenerResponse.StatusCode%2A&gt; property.","pos":[109,237],"source":"      > [!NOTE] >  Setting this property does not automatically set the <xref:System.Net.HttpListenerResponse.StatusCode%2A> property."}]},{"pos":[30648,30810],"content":"A &lt;xref:System.String&gt; that contains the absolute URL to be sent to the client in the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> header.","needQuote":true,"needEscape":true,"source":"A <xref:System.String> that contains the absolute URL to be sent to the client in the <xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"></xref> header."},{"pos":[30981,31045],"content":"The value specified for a set operation is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"The value specified for a set operation is an empty string (\"\").","pos":[0,64]}]},{"pos":[31152,31174],"content":"This object is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"This object is closed.","pos":[0,22]}]},{"pos":[31531,31596],"content":"Gets or sets whether the response uses chunked transfer encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets whether the response uses chunked transfer encoding.","pos":[0,65]}]},{"pos":[31608,31824],"content":"The body of a chunked message is made up of a series of chunks. Each chunk comprises of two parts—the size of the chunk data and the actual data. When set to true the response is sent using chunked transfer encoding.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The body of a chunked message is made up of a series of chunks. Each chunk comprises of two parts—the size of the chunk data and the actual data. When set to true the response is sent using chunked transfer encoding.","pos":[0,216],"nodes":[{"content":"The body of a chunked message is made up of a series of chunks.","pos":[0,63]},{"content":"Each chunk comprises of two parts—the size of the chunk data and the actual data.","pos":[64,145]},{"content":"When set to true the response is sent using chunked transfer encoding.","pos":[146,216]}]}]},{"pos":[31944,32215],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the response is set to use chunked transfer encoding; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the response is set to use chunked transfer encoding; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,192],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the response is set to use chunked transfer encoding; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[193,271],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[32696,32792],"content":"Adds or updates a <xref:System.Net.Cookie> in the collection of cookies sent with this response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds or updates a &lt;xref:System.Net.Cookie&gt; in the collection of cookies sent with this response.","pos":[0,96],"source":"Adds or updates a <xref:System.Net.Cookie> in the collection of cookies sent with this response."}]},{"pos":[32804,33186],"content":"Two cookies are considered the same if the values of their <xref:System.Net.Cookie.Name%2A>, <xref:System.Net.Cookie.Domain%2A>, and <xref:System.Net.Cookie.Path%2A> properties are the same. If these three pieces of information are the same, the method attempts to update the cookie. The name and domain comparisons are not case sensitive, but the path comparison is case sensitive.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Two cookies are considered the same if the values of their <xref:System.Net.Cookie.Name%2A>, <xref:System.Net.Cookie.Domain%2A>, and <xref:System.Net.Cookie.Path%2A> properties are the same. If these three pieces of information are the same, the method attempts to update the cookie. The name and domain comparisons are not case sensitive, but the path comparison is case sensitive.","pos":[0,382],"nodes":[{"content":"Two cookies are considered the same if the values of their &lt;xref:System.Net.Cookie.Name%2A&gt;, &lt;xref:System.Net.Cookie.Domain%2A&gt;, and &lt;xref:System.Net.Cookie.Path%2A&gt; properties are the same.","pos":[0,190],"source":"Two cookies are considered the same if the values of their <xref:System.Net.Cookie.Name%2A>, <xref:System.Net.Cookie.Domain%2A>, and <xref:System.Net.Cookie.Path%2A> properties are the same."},{"content":"If these three pieces of information are the same, the method attempts to update the cookie.","pos":[191,283]},{"content":"The name and domain comparisons are not case sensitive, but the path comparison is case sensitive.","pos":[284,382]}]}]},{"pos":[33521,33566],"content":"A <xref:System.Net.Cookie> for this response.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Net.Cookie&gt; for this response.","pos":[0,45],"source":"A <xref:System.Net.Cookie> for this response."}]},{"pos":[33738,33822],"content":"<ph id=\"ph1\">&lt;code&gt;cookie&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>cookie</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[33917,33987],"content":"The cookie already exists in the collection and could not be replaced.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cookie already exists in the collection and could not be replaced.","pos":[0,70]}]},{"pos":[34339,34402],"content":"Gets or sets the HTTP status code to be returned to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the HTTP status code to be returned to the client.","pos":[0,63]}]},{"pos":[34415,35098],"content":"Clients use the status code returned by the server to decide how to proceed. A value of <xref:System.Net.HttpStatusCode> indicates that the server successfully processed the client's request and included the requested resource in the response body. Other common status codes include <xref:System.Net.HttpStatusCode>, indicating that the requested resource was not found on the server, and <xref:System.Net.HttpStatusCode>, indicating that it was unnecessary to return the requested resource in the response body because the client's cached copy of the resource is up-to-date.       For a complete list of possible status codes, see the <xref:System.Net.HttpStatusCode> enumeration.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Clients use the status code returned by the server to decide how to proceed. A value of <xref:System.Net.HttpStatusCode> indicates that the server successfully processed the client's request and included the requested resource in the response body. Other common status codes include <xref:System.Net.HttpStatusCode>, indicating that the requested resource was not found on the server, and <xref:System.Net.HttpStatusCode>, indicating that it was unnecessary to return the requested resource in the response body because the client's cached copy of the resource is up-to-date.       For a complete list of possible status codes, see the <xref:System.Net.HttpStatusCode> enumeration.","pos":[0,681],"nodes":[{"content":"Clients use the status code returned by the server to decide how to proceed.","pos":[0,76]},{"content":"A value of &lt;xref:System.Net.HttpStatusCode&gt; indicates that the server successfully processed the client's request and included the requested resource in the response body.","pos":[77,248],"source":" A value of <xref:System.Net.HttpStatusCode> indicates that the server successfully processed the client's request and included the requested resource in the response body."},{"content":"Other common status codes include &lt;xref:System.Net.HttpStatusCode&gt;, indicating that the requested resource was not found on the server, and &lt;xref:System.Net.HttpStatusCode&gt;, indicating that it was unnecessary to return the requested resource in the response body because the client's cached copy of the resource is up-to-date.","pos":[249,575],"source":" Other common status codes include <xref:System.Net.HttpStatusCode>, indicating that the requested resource was not found on the server, and <xref:System.Net.HttpStatusCode>, indicating that it was unnecessary to return the requested resource in the response body because the client's cached copy of the resource is up-to-date."},{"content":"For a complete list of possible status codes, see the &lt;xref:System.Net.HttpStatusCode&gt; enumeration.","pos":[582,681],"source":"       For a complete list of possible status codes, see the <xref:System.Net.HttpStatusCode> enumeration."}]}]},{"pos":[35408,35678],"content":"An <xref:System.Int32> value that specifies the HTTP status code for the requested resource. The default is <xref:System.Net.HttpStatusCode>, indicating that the server successfully processed the client's request and included the requested resource in the response body.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <xref:System.Int32> value that specifies the HTTP status code for the requested resource. The default is <xref:System.Net.HttpStatusCode>, indicating that the server successfully processed the client's request and included the requested resource in the response body.","pos":[0,270],"nodes":[{"content":"An &lt;xref:System.Int32&gt; value that specifies the HTTP status code for the requested resource.","pos":[0,92],"source":"An <xref:System.Int32> value that specifies the HTTP status code for the requested resource."},{"content":"The default is &lt;xref:System.Net.HttpStatusCode&gt;, indicating that the server successfully processed the client's request and included the requested resource in the response body.","pos":[93,270],"source":" The default is <xref:System.Net.HttpStatusCode>, indicating that the server successfully processed the client's request and included the requested resource in the response body."}]}]},{"pos":[35855,35877],"content":"This object is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"This object is closed.","pos":[0,22]}]},{"pos":[35998,36099],"content":"The value specified for a set operation is not valid. Valid values are between 100 and 999 inclusive.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value specified for a set operation is not valid. Valid values are between 100 and 999 inclusive.","pos":[0,101],"nodes":[{"content":"The value specified for a set operation is not valid.","pos":[0,53]},{"content":"Valid values are between 100 and 999 inclusive.","pos":[54,101]}]}]},{"pos":[36486,36565],"content":"Gets or sets a text description of the HTTP status code returned to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a text description of the HTTP status code returned to the client.","pos":[0,79]}]},{"pos":[36577,36703],"content":"The status description typically provides details that explain the <xref:System.Net.HttpListenerResponse.StatusCode%2A> value.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The status description typically provides details that explain the &lt;xref:System.Net.HttpListenerResponse.StatusCode%2A&gt; value.","pos":[0,126],"source":"The status description typically provides details that explain the <xref:System.Net.HttpListenerResponse.StatusCode%2A> value."}]},{"pos":[37108,37358],"content":"The text description of the HTTP status code returned to the client. The default is the RFC 2616 description for the <xref:System.Net.HttpListenerResponse.StatusCode*> property value, or an empty string (\"\") if an RFC 2616 description does not exist.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text description of the HTTP status code returned to the client. The default is the RFC 2616 description for the <xref:System.Net.HttpListenerResponse.StatusCode*> property value, or an empty string (\"\") if an RFC 2616 description does not exist.","pos":[0,250],"nodes":[{"content":"The text description of the HTTP status code returned to the client.","pos":[0,68]},{"content":"The default is the RFC 2616 description for the &lt;xref:System.Net.HttpListenerResponse.StatusCode*&gt; property value, or an empty string (\"\") if an RFC 2616 description does not exist.","pos":[69,250],"source":" The default is the RFC 2616 description for the <xref:System.Net.HttpListenerResponse.StatusCode*> property value, or an empty string (\"\") if an RFC 2616 description does not exist."}]}]},{"pos":[37538,37642],"content":"The value specified for a set operation is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value specified for a set operation is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[37737,37811],"content":"The value specified for a set operation contains non-printable characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value specified for a set operation contains non-printable characters.","pos":[0,74]}]},{"pos":[38261,38349],"content":"Releases all resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListenerResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Releases all resources used by the <xref href=\"System.Net.HttpListenerResponse\"></xref>."},{"pos":[38361,38654],"content":"Use the <xref:System.Net.HttpListenerResponse.Close%2A> method to send the response and release resources held by an <xref:System.Net.HttpListenerResponse>. To discard the response and release the resources held by this instance, use the <xref:System.Net.HttpListenerResponse.Abort%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the <xref:System.Net.HttpListenerResponse.Close%2A> method to send the response and release resources held by an <xref:System.Net.HttpListenerResponse>. To discard the response and release the resources held by this instance, use the <xref:System.Net.HttpListenerResponse.Abort%2A> method.","pos":[0,293],"nodes":[{"content":"Use the &lt;xref:System.Net.HttpListenerResponse.Close%2A&gt; method to send the response and release resources held by an &lt;xref:System.Net.HttpListenerResponse&gt;.","pos":[0,156],"source":"Use the <xref:System.Net.HttpListenerResponse.Close%2A> method to send the response and release resources held by an <xref:System.Net.HttpListenerResponse>."},{"content":"To discard the response and release the resources held by this instance, use the &lt;xref:System.Net.HttpListenerResponse.Abort%2A&gt; method.","pos":[157,293],"source":" To discard the response and release the resources held by this instance, use the <xref:System.Net.HttpListenerResponse.Abort%2A> method."}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.HttpListenerResponse\n  id: HttpListenerResponse\n  children:\n  - System.Net.HttpListenerResponse.Abort\n  - System.Net.HttpListenerResponse.AddHeader(System.String,System.String)\n  - System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)\n  - System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)\n  - System.Net.HttpListenerResponse.Close\n  - System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)\n  - System.Net.HttpListenerResponse.ContentEncoding\n  - System.Net.HttpListenerResponse.ContentLength64\n  - System.Net.HttpListenerResponse.ContentType\n  - System.Net.HttpListenerResponse.Cookies\n  - System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)\n  - System.Net.HttpListenerResponse.Headers\n  - System.Net.HttpListenerResponse.KeepAlive\n  - System.Net.HttpListenerResponse.OutputStream\n  - System.Net.HttpListenerResponse.ProtocolVersion\n  - System.Net.HttpListenerResponse.Redirect(System.String)\n  - System.Net.HttpListenerResponse.RedirectLocation\n  - System.Net.HttpListenerResponse.SendChunked\n  - System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)\n  - System.Net.HttpListenerResponse.StatusCode\n  - System.Net.HttpListenerResponse.StatusDescription\n  - System.Net.HttpListenerResponse.System#IDisposable#Dispose\n  langs:\n  - csharp\n  name: HttpListenerResponse\n  nameWithType: HttpListenerResponse\n  fullName: System.Net.HttpListenerResponse\n  type: Class\n  summary: Represents a response to a request being handled by an <xref href=\"System.Net.HttpListener\"></xref> object.\n  remarks: \"When a client makes a request for a resource handled by an <xref:System.Net.HttpListener> object, the request and response are made available to your application in an <xref:System.Net.HttpListenerContext> object. The request is represented by an <xref:System.Net.HttpListenerRequest> object and is available in the <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName> property. The response is represented by an HttpListenerResponse object and is available in the <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=fullName> property.  \\n  \\n You can customize the response by setting various properties, such as <xref:System.Net.HttpListenerResponse.StatusCode%2A>, <xref:System.Net.HttpListenerResponse.StatusDescription%2A>, and <xref:System.Net.HttpListenerResponse.Cookies%2A>. Use the <xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=fullName> property to obtain a <xref:System.IO.Stream> instance to which response data can be written. Finally, send the response data to the client by calling the <xref:System.Net.HttpListenerResponse.Close%2A> method.\"\n  example:\n  - \"The following code example demonstrates responding to a client request.  \\n  \\n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/t-system.net.httplistene_2_1.cs)]\"\n  syntax:\n    content: 'public sealed class HttpListenerResponse : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.Abort\n  id: Abort\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: Abort()\n  nameWithType: HttpListenerResponse.Abort()\n  fullName: System.Net.HttpListenerResponse.Abort()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Closes the connection to the client without sending a response.\n  remarks: Calling this method on an object that has already been closed has no effect. If the response has not already been closed, this method closes it and the associated <xref:System.Net.HttpListenerRequest> and <xref:System.Net.HttpListenerContext> objects. The connection to the client is also closed, regardless of the <xref:System.Net.HttpListenerRequest.KeepAlive%2A> property value of the client request.\n  syntax:\n    content: public void Abort ();\n    parameters: []\n  overload: System.Net.HttpListenerResponse.Abort*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.AddHeader(System.String,System.String)\n  id: AddHeader(System.String,System.String)\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: AddHeader(String,String)\n  nameWithType: HttpListenerResponse.AddHeader(String,String)\n  fullName: System.Net.HttpListenerResponse.AddHeader(String,String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Adds the specified header and value to the HTTP headers for this response.\n  remarks: \"Calling this method is equivalent to calling the <xref:System.Net.WebHeaderCollection.Set%2A> method on the collection returned by the <xref:System.Net.HttpListenerResponse.Headers%2A> property.  \\n  \\n If the header specified in `name` does not exist, this method inserts a new header into the <xref:System.Net.HttpListenerResponse.Headers%2A> property's collection. If `name` is present in the collection, this method replaces the existing value with `value`. To add a value to an existing header without replacing the existing value, use the <xref:System.Net.HttpListenerResponse.AppendHeader%2A> method.\"\n  example:\n  - \"The following code example demonstrates adding a header using this property.  \\n  \\n [!code-cs[Net_Listener_Basic#26](~/add/codesnippet/csharp/m-system.net.httplistene_2_1.cs)]\"\n  syntax:\n    content: public void AddHeader (string name, string value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the HTTP header to set.\n    - id: value\n      type: System.String\n      description: The value for the `name` header.\n  overload: System.Net.HttpListenerResponse.AddHeader*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\").\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"You are not allowed to specify a value for the specified header.  \\n  \\n -or-  \\n  \\n <code>name</code> or <code>value</code> contains invalid characters.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The length of <code>value</code> is greater than 65,535 characters.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)\n  id: AppendCookie(System.Net.Cookie)\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: AppendCookie(Cookie)\n  nameWithType: HttpListenerResponse.AppendCookie(Cookie)\n  fullName: System.Net.HttpListenerResponse.AppendCookie(Cookie)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Adds the specified <xref:System.Net.Cookie> to the collection of cookies for this response.\n  remarks: \"Calling this method is equivalent to calling the <xref:System.Net.CookieCollection.Add%2A> method on the collection returned by the <xref:System.Net.HttpListenerResponse.Cookies%2A> property.  \\n  \\n If the specified cookie does not exist in the <xref:System.Net.HttpListenerResponse.Cookies%2A> property's collection, `cookie` is added. If the cookie exists in the collection, `cookie` replaces it.\"\n  example:\n  - \"The following code example demonstrates adding a cookie to a response  \\n  \\n [!code-cs[Net_Listener_Basic#20](~/add/codesnippet/csharp/m-system.net.httplistene_3_1.cs)]\"\n  syntax:\n    content: public void AppendCookie (System.Net.Cookie cookie);\n    parameters:\n    - id: cookie\n      type: System.Net.Cookie\n      description: The <xref:System.Net.Cookie> to add to the collection to be sent with this response.\n  overload: System.Net.HttpListenerResponse.AppendCookie*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>cookie</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)\n  id: AppendHeader(System.String,System.String)\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: AppendHeader(String,String)\n  nameWithType: HttpListenerResponse.AppendHeader(String,String)\n  fullName: System.Net.HttpListenerResponse.AppendHeader(String,String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Appends a value to the specified HTTP header to be sent with this response.\n  remarks: \"Calling this method is equivalent to calling the <xref:System.Net.WebHeaderCollection.Add%2A> method on the collection returned by the <xref:System.Net.HttpListenerResponse.Headers%2A> property.  \\n  \\n If the header specified in `header` does not exist, this method inserts a new header into the <xref:System.Net.HttpListenerResponse.Headers%2A> property's collection. If `header` is present in the collection, this method adds `value` to the existing values. To replace the value of an existing header, use the <xref:System.Net.HttpListenerResponse.AddHeader%2A> method.\"\n  syntax:\n    content: public void AppendHeader (string name, string value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the HTTP header to append `value` to.\n    - id: value\n      type: System.String\n      description: The value to append to the `name` header.\n  overload: System.Net.HttpListenerResponse.AppendHeader*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>name</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> or an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n You are not allowed to specify a value for the specified header.  \\n  \\n -or-  \\n  \\n <code>name</code> or <code>value</code> contains invalid characters.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The length of <code>value</code> is greater than 65,535 characters.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.Close\n  id: Close\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: HttpListenerResponse.Close()\n  fullName: System.Net.HttpListenerResponse.Close()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Sends the response to the client and releases the resources held by this <xref href=\"System.Net.HttpListenerResponse\"></xref> instance.\n  remarks: This method closes the response stream and the <xref:System.Net.HttpListenerRequest> associated with the response.\n  example:\n  - \"The following code example demonstrates calling this method to send a <xref:System.Net.HttpStatusCode> (403) response to the client.  \\n  \\n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/m-system.net.httplistene_0_1.vb)]\\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/m-system.net.httplistene_0_1.cs)]\"\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.Net.HttpListenerResponse.Close*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)\n  id: Close(System.Byte[],System.Boolean)\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: Close(Byte[],Boolean)\n  nameWithType: HttpListenerResponse.Close(Byte[],Boolean)\n  fullName: System.Net.HttpListenerResponse.Close(Byte[],Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Returns the specified byte array to the client and releases the resources held by this <xref href=\"System.Net.HttpListenerResponse\"></xref> instance.\n  remarks: \"If you are sending body data with the response, you can use this method to send it as a <xref:System.Byte> array instead of writing the body data to the <xref:System.Net.HttpListenerResponse.OutputStream%2A> property and calling the <xref:System.Net.HttpListenerResponse.Close%2A> method.  \\n  \\n This method closes the response stream and the <xref:System.Net.HttpListenerRequest> associated with the response.\"\n  example:\n  - \"The following code example demonstrates calling this method.  \\n  \\n [!code-cs[Net_Listener_Basic#24](~/add/codesnippet/csharp/m-system.net.httplistene_17_1.cs)]\"\n  syntax:\n    content: public void Close (byte[] responseEntity, bool willBlock);\n    parameters:\n    - id: responseEntity\n      type: System.Byte[]\n      description: A <xref:System.Byte> array that contains the response to send to the client.\n    - id: willBlock\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to block execution while flushing the stream to the client; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.HttpListenerResponse.Close*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>responseEntity</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object is closed.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.ContentEncoding\n  id: ContentEncoding\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: ContentEncoding\n  nameWithType: HttpListenerResponse.ContentEncoding\n  fullName: System.Net.HttpListenerResponse.ContentEncoding\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets the <xref:System.Text.Encoding> for this response's <xref:System.Net.HttpListenerResponse.OutputStream*>.\n  remarks: An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.\n  example:\n  - \"The following code example demonstrates using this property.  \\n  \\n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/p-system.net.httplistene_45_1.vb)]\\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/p-system.net.httplistene_45_1.cs)]\"\n  syntax:\n    content: public System.Text.Encoding ContentEncoding { get; set; }\n    return:\n      type: System.Text.Encoding\n      description: An <xref:System.Text.Encoding> object suitable for use with the data in the <xref:System.Net.HttpListenerResponse.OutputStream*> property, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no encoding is specified.\n  overload: System.Net.HttpListenerResponse.ContentEncoding*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.ContentLength64\n  id: ContentLength64\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: ContentLength64\n  nameWithType: HttpListenerResponse.ContentLength64\n  fullName: System.Net.HttpListenerResponse.ContentLength64\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets the number of bytes in the body data included in the response.\n  remarks: \"The `Content-Length` header expresses the length, in bytes, of the response's body data. When using a format that is not send the data chunked or raw, you must set the ContentLength64 property. If you do not, the <xref:System.Net.HttpListener> does not send the response data.  \\n  \\n For a complete list of response headers, see the <xref:System.Net.HttpResponseHeader> enumeration.\"\n  example:\n  - \"The following code example demonstrates setting the value of this property.  \\n  \\n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/p-system.net.httplistene_15_1.cs)]\"\n  syntax:\n    content: public long ContentLength64 { get; set; }\n    return:\n      type: System.Int64\n      description: The value of the response's <xref uid=\"langword_csharp_Content-Length\" name=\"Content-Length\" href=\"\"></xref> header.\n  overload: System.Net.HttpListenerResponse.ContentLength64*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value specified for a set operation is less than zero.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The response is already being sent.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object is closed.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.ContentType\n  id: ContentType\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: ContentType\n  nameWithType: HttpListenerResponse.ContentType\n  fullName: System.Net.HttpListenerResponse.ContentType\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets the MIME type of the content returned.\n  remarks: \"When communicating with a Web browser, you should explicitly set this property when returning any content type other than `text/html`.  \\n  \\n For a complete list of response headers, see the <xref:System.Net.HttpResponseHeader> enumeration.\"\n  syntax:\n    content: public string ContentType { get; set; }\n    return:\n      type: System.String\n      description: A <xref:System.String> instance that contains the text of the response's <xref uid=\"langword_csharp_Content-Type\" name=\"Content-Type\" href=\"\"></xref> header.\n  overload: System.Net.HttpListenerResponse.ContentType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value specified for a set operation is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value specified for a set operation is an empty string (\"\").\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object is closed.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.Cookies\n  id: Cookies\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: Cookies\n  nameWithType: HttpListenerResponse.Cookies\n  fullName: System.Net.HttpListenerResponse.Cookies\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets the collection of cookies returned with the response.\n  remarks: 'A cookie is name/value text data from a Web server that is stored on the local (client) computer. The following cookie formats are supported: Netscape, RFC 2109, and RFC 2965. The Netscape cookie specification is available at http://wp.netscape.com/newsref/std/cookie_spec.html; the RFC documents are available at [http://www.rfc-editor.org](http://www.rfc-editor.org).'\n  example:\n  - \"The following code example checks a request for a cookie, and returns a new cookie with the response if the request did not have one.  \\n  \\n [!code-cs[Net_Listener_Basic#20](~/add/codesnippet/csharp/p-system.net.httplistene_23_1.cs)]\"\n  syntax:\n    content: public System.Net.CookieCollection Cookies { get; set; }\n    return:\n      type: System.Net.CookieCollection\n      description: A <xref:System.Net.CookieCollection> that contains cookies to accompany the response. The collection is empty if no cookies have been added to the response.\n  overload: System.Net.HttpListenerResponse.Cookies*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)\n  id: CopyFrom(System.Net.HttpListenerResponse)\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: CopyFrom(HttpListenerResponse)\n  nameWithType: HttpListenerResponse.CopyFrom(HttpListenerResponse)\n  fullName: System.Net.HttpListenerResponse.CopyFrom(HttpListenerResponse)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Copies properties from the specified <xref href=\"System.Net.HttpListenerResponse\"></xref> to this response.\n  remarks: \"If you regularly change many properties from their default values to a fixed set of new values, it is convenient to use an <xref:System.Net.HttpListenerResponse> instance as a template. Customize the template response once and, instead of configuring each response separately, call the CopyFrom method to configure a new response based on property values in the template response.  \\n  \\n The following properties are copied from `templateResponse` to the current instance.  \\n  \\n-   <xref:System.Net.HttpListenerResponse.Headers%2A>  \\n  \\n-   <xref:System.Net.HttpListenerResponse.ContentLength64%2A>  \\n  \\n-   <xref:System.Net.HttpListenerResponse.StatusCode%2A>  \\n  \\n-   <xref:System.Net.HttpListenerResponse.StatusDescription%2A>  \\n  \\n-   <xref:System.Net.HttpListenerResponse.KeepAlive%2A>  \\n  \\n-   <xref:System.Net.HttpListenerResponse.ProtocolVersion%2A>\"\n  example:\n  - \"The following code example demonstrates creating a response by copying a template response.  \\n  \\n [!code-vb[NCLListener#5](~/add/codesnippet/visualbasic/m-system.net.httplistene_9_1.vb)]\\n [!code-cs[NCLListener#5](~/add/codesnippet/csharp/m-system.net.httplistene_9_1.cs)]\"\n  syntax:\n    content: public void CopyFrom (System.Net.HttpListenerResponse templateResponse);\n    parameters:\n    - id: templateResponse\n      type: System.Net.HttpListenerResponse\n      description: The <xref href=\"System.Net.HttpListenerResponse\"></xref> instance to copy.\n  overload: System.Net.HttpListenerResponse.CopyFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.Headers\n  id: Headers\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: Headers\n  nameWithType: HttpListenerResponse.Headers\n  fullName: System.Net.HttpListenerResponse.Headers\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets the collection of header name/value pairs returned by the server.\n  remarks: \"Response headers contain metadata information such as the date and time of the response, the identity of the responding server, and the MIME type of the data contained in the response body.  \\n  \\n For a complete list of response headers, see the <xref:System.Net.HttpResponseHeader> enumeration.  \\n  \\n> [!NOTE]\\n>  If you attempt to set a Content-Length, Keep-Alive, Transfer-Encoding, or WWW-Authenticate header using the Headers property, an exception will be thrown. Use the <xref:System.Net.HttpListenerResponse.KeepAlive%2A> or <xref:System.Net.HttpListenerResponse.ContentLength64%2A> properties to set these headers. You cannot set the Transfer-Encoding or WWW-Authenticate headers manually.\"\n  example:\n  - \"The following code example demonstrates displaying the headers in a <xref:System.Net.WebHeaderCollection>.  \\n  \\n [!code-cs[Net_Listener_Basic#23](~/add/codesnippet/csharp/p-system.net.httplistene_32_1.cs)]\"\n  syntax:\n    content: public System.Net.WebHeaderCollection Headers { get; set; }\n    return:\n      type: System.Net.WebHeaderCollection\n      description: A <xref:System.Net.WebHeaderCollection> instance that contains all the explicitly set HTTP headers to be included in the response.\n  overload: System.Net.HttpListenerResponse.Headers*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Net.WebHeaderCollection> instance specified for a set operation is not valid for a response.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.KeepAlive\n  id: KeepAlive\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: KeepAlive\n  nameWithType: HttpListenerResponse.KeepAlive\n  fullName: System.Net.HttpListenerResponse.KeepAlive\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets a value indicating whether the server requests a persistent connection.\n  remarks: \"If an HTTP client and server expect to exchange data multiple times in a short period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message. Persistent connections are in widespread use in communications between modern Web browsers and Web servers.  \\n  \\n Persistent connections are described in detail in the HTTP/1.1 protocol specification (RFC 2616) available at the RTF Editor Web site ([http://www.rfc-editor.org](http://www.rfc-editor.org)).\"\n  example:\n  - \"The following code example demonstrates setting the value of this property.  \\n  \\n [!code-vb[NclListener#7](~/add/codesnippet/visualbasic/p-system.net.httplistene_36_1.vb)]\\n [!code-cs[NclListener#7](~/add/codesnippet/csharp/p-system.net.httplistene_36_1.cs)]\"\n  syntax:\n    content: public bool KeepAlive { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the server requests a persistent connection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Net.HttpListenerResponse.KeepAlive*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object is closed.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.OutputStream\n  id: OutputStream\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: OutputStream\n  nameWithType: HttpListenerResponse.OutputStream\n  fullName: System.Net.HttpListenerResponse.OutputStream\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets a <xref:System.IO.Stream> object to which a response can be written.\n  remarks: \"The <xref:System.Net.HttpListenerResponse.ContentLength64%2A> property must be set explicitly before writing to the returned <xref:System.IO.Stream> object.  \\n  \\n> [!NOTE]\\n>  Closing the request does not close the stream returned by this property. When you no longer need the stream, you should close it by calling the Close method.\"\n  example:\n  - \"The following code example demonstrates calling this method.  \\n  \\n [!code-cs[Net_Listener_Basic#3](~/add/codesnippet/csharp/p-system.net.httplistene_44_1.cs)]\"\n  syntax:\n    content: public System.IO.Stream OutputStream { get; }\n    return:\n      type: System.IO.Stream\n      description: A <xref:System.IO.Stream> object to which a response can be written.\n  overload: System.Net.HttpListenerResponse.OutputStream*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object is closed.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.ProtocolVersion\n  id: ProtocolVersion\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: ProtocolVersion\n  nameWithType: HttpListenerResponse.ProtocolVersion\n  fullName: System.Net.HttpListenerResponse.ProtocolVersion\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets the HTTP version used for the response.\n  remarks: The capabilities of different HTTP versions are specified in the documents available at http://www.ietf.org.\n  example:\n  - \"The following code example demonstrates setting the value of this property.  \\n  \\n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/p-system.net.httplistene_30_1.vb)]\\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/p-system.net.httplistene_30_1.cs)]\"\n  syntax:\n    content: public Version ProtocolVersion { get; set; }\n    return:\n      type: System.Version\n      description: A <xref:System.Version> object indicating the version of HTTP used when responding to the client. Note that this property is now obsolete.\n  overload: System.Net.HttpListenerResponse.ProtocolVersion*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value specified for a set operation is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value specified for a set operation does not have its <xref:System.Version.Major*> property set to 1 or does not have its <xref:System.Version.Minor*> property set to either 0 or 1.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object is closed.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.Redirect(System.String)\n  id: Redirect(System.String)\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: Redirect(String)\n  nameWithType: HttpListenerResponse.Redirect(String)\n  fullName: System.Net.HttpListenerResponse.Redirect(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Configures the response to redirect the client to the specified URL.\n  remarks: The Redirect method is used to redirect a client to the new location for a resource. This method sets the response's `Location` header to `url`, the <xref:System.Net.HttpListenerResponse.StatusCode%2A> property to <xref:System.Net.HttpStatusCode>, and the <xref:System.Net.HttpListenerResponse.StatusDescription%2A> property to \"Found\".\n  example:\n  - \"The following code example demonstrates calling this method.  \\n  \\n [!code-cs[Net_Listener_Basic#27](~/add/codesnippet/csharp/m-system.net.httplistene_11_1.cs)]\"\n  syntax:\n    content: public void Redirect (string url);\n    parameters:\n    - id: url\n      type: System.String\n      description: The URL that the client should use to locate the requested resource.\n  overload: System.Net.HttpListenerResponse.Redirect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.RedirectLocation\n  id: RedirectLocation\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: RedirectLocation\n  nameWithType: HttpListenerResponse.RedirectLocation\n  fullName: System.Net.HttpListenerResponse.RedirectLocation\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets the value of the HTTP <xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"></xref> header in this response.\n  remarks: \"The `Location` header specifies the URL to which the client is directed to locate a requested resource.  \\n  \\n> [!NOTE]\\n>  Setting this property does not automatically set the <xref:System.Net.HttpListenerResponse.StatusCode%2A> property.\"\n  example:\n  - \"The following code example demonstrates setting this property.  \\n  \\n [!code-cs[Net_Listener_Basic#25](~/add/codesnippet/csharp/p-system.net.httplistene_25_1.cs)]\"\n  syntax:\n    content: public string RedirectLocation { get; set; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains the absolute URL to be sent to the client in the <xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"></xref> header.\n  overload: System.Net.HttpListenerResponse.RedirectLocation*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value specified for a set operation is an empty string (\"\").\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object is closed.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.SendChunked\n  id: SendChunked\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: SendChunked\n  nameWithType: HttpListenerResponse.SendChunked\n  fullName: System.Net.HttpListenerResponse.SendChunked\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets whether the response uses chunked transfer encoding.\n  remarks: The body of a chunked message is made up of a series of chunks. Each chunk comprises of two parts—the size of the chunk data and the actual data. When set to true the response is sent using chunked transfer encoding.\n  syntax:\n    content: public bool SendChunked { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the response is set to use chunked transfer encoding; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.HttpListenerResponse.SendChunked*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)\n  id: SetCookie(System.Net.Cookie)\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: SetCookie(Cookie)\n  nameWithType: HttpListenerResponse.SetCookie(Cookie)\n  fullName: System.Net.HttpListenerResponse.SetCookie(Cookie)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Adds or updates a <xref:System.Net.Cookie> in the collection of cookies sent with this response.\n  remarks: Two cookies are considered the same if the values of their <xref:System.Net.Cookie.Name%2A>, <xref:System.Net.Cookie.Domain%2A>, and <xref:System.Net.Cookie.Path%2A> properties are the same. If these three pieces of information are the same, the method attempts to update the cookie. The name and domain comparisons are not case sensitive, but the path comparison is case sensitive.\n  example:\n  - \"The following code example demonstrates calling this method.  \\n  \\n [!code-cs[Net_Listener_Basic#28](~/add/codesnippet/csharp/m-system.net.httplistene_15_1.cs)]\"\n  syntax:\n    content: public void SetCookie (System.Net.Cookie cookie);\n    parameters:\n    - id: cookie\n      type: System.Net.Cookie\n      description: A <xref:System.Net.Cookie> for this response.\n  overload: System.Net.HttpListenerResponse.SetCookie*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>cookie</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The cookie already exists in the collection and could not be replaced.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.StatusCode\n  id: StatusCode\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: StatusCode\n  nameWithType: HttpListenerResponse.StatusCode\n  fullName: System.Net.HttpListenerResponse.StatusCode\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets the HTTP status code to be returned to the client.\n  remarks: \"Clients use the status code returned by the server to decide how to proceed. A value of <xref:System.Net.HttpStatusCode> indicates that the server successfully processed the client's request and included the requested resource in the response body. Other common status codes include <xref:System.Net.HttpStatusCode>, indicating that the requested resource was not found on the server, and <xref:System.Net.HttpStatusCode>, indicating that it was unnecessary to return the requested resource in the response body because the client's cached copy of the resource is up-to-date.  \\n  \\n For a complete list of possible status codes, see the <xref:System.Net.HttpStatusCode> enumeration.\"\n  example:\n  - \"The following code example demonstrates setting the value of this property.  \\n  \\n [!code-cs[Net_Listener_Basic#7](~/add/codesnippet/csharp/p-system.net.httplistene_46_1.cs)]\"\n  syntax:\n    content: public int StatusCode { get; set; }\n    return:\n      type: System.Int32\n      description: An <xref:System.Int32> value that specifies the HTTP status code for the requested resource. The default is <xref:System.Net.HttpStatusCode>, indicating that the server successfully processed the client's request and included the requested resource in the response body.\n  overload: System.Net.HttpListenerResponse.StatusCode*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object is closed.\n  - type: System.Net.ProtocolViolationException\n    commentId: T:System.Net.ProtocolViolationException\n    description: The value specified for a set operation is not valid. Valid values are between 100 and 999 inclusive.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.StatusDescription\n  id: StatusDescription\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: StatusDescription\n  nameWithType: HttpListenerResponse.StatusDescription\n  fullName: System.Net.HttpListenerResponse.StatusDescription\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets a text description of the HTTP status code returned to the client.\n  remarks: The status description typically provides details that explain the <xref:System.Net.HttpListenerResponse.StatusCode%2A> value.\n  example:\n  - \"The following code example demonstrates setting the value of this property.  \\n  \\n [!code-vb[NclListener#7](~/add/codesnippet/visualbasic/p-system.net.httplistene_13_1.vb)]\\n [!code-cs[NclListener#7](~/add/codesnippet/csharp/p-system.net.httplistene_13_1.cs)]\"\n  syntax:\n    content: public string StatusDescription { get; set; }\n    return:\n      type: System.String\n      description: The text description of the HTTP status code returned to the client. The default is the RFC 2616 description for the <xref:System.Net.HttpListenerResponse.StatusCode*> property value, or an empty string (\"\") if an RFC 2616 description does not exist.\n  overload: System.Net.HttpListenerResponse.StatusDescription*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value specified for a set operation is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value specified for a set operation contains non-printable characters.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose\n  id: System#IDisposable#Dispose\n  isEii: true\n  parent: System.Net.HttpListenerResponse\n  langs:\n  - csharp\n  name: System.IDisposable.Dispose()\n  nameWithType: HttpListenerResponse.System.IDisposable.Dispose()\n  fullName: System.Net.HttpListenerResponse.System.IDisposable.Dispose()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Releases all resources used by the <xref href=\"System.Net.HttpListenerResponse\"></xref>.\n  remarks: Use the <xref:System.Net.HttpListenerResponse.Close%2A> method to send the response and release resources held by an <xref:System.Net.HttpListenerResponse>. To discard the response and release the resources held by this instance, use the <xref:System.Net.HttpListenerResponse.Abort%2A> method.\n  syntax:\n    content: void IDisposable.Dispose ();\n    parameters: []\n  overload: System.Net.HttpListenerResponse.System#IDisposable#Dispose*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Net.ProtocolViolationException\n  isExternal: true\n  name: System.Net.ProtocolViolationException\n- uid: System.Net.HttpListenerResponse.Abort\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: Abort()\n  nameWithType: HttpListenerResponse.Abort()\n  fullName: System.Net.HttpListenerResponse.Abort()\n- uid: System.Net.HttpListenerResponse.AddHeader(System.String,System.String)\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: AddHeader(String,String)\n  nameWithType: HttpListenerResponse.AddHeader(String,String)\n  fullName: System.Net.HttpListenerResponse.AddHeader(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: AppendCookie(Cookie)\n  nameWithType: HttpListenerResponse.AppendCookie(Cookie)\n  fullName: System.Net.HttpListenerResponse.AppendCookie(Cookie)\n- uid: System.Net.Cookie\n  parent: System.Net\n  isExternal: true\n  name: Cookie\n  nameWithType: Cookie\n  fullName: System.Net.Cookie\n- uid: System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: AppendHeader(String,String)\n  nameWithType: HttpListenerResponse.AppendHeader(String,String)\n  fullName: System.Net.HttpListenerResponse.AppendHeader(String,String)\n- uid: System.Net.HttpListenerResponse.Close\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: Close()\n  nameWithType: HttpListenerResponse.Close()\n  fullName: System.Net.HttpListenerResponse.Close()\n- uid: System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: Close(Byte[],Boolean)\n  nameWithType: HttpListenerResponse.Close(Byte[],Boolean)\n  fullName: System.Net.HttpListenerResponse.Close(Byte[],Boolean)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.HttpListenerResponse.ContentEncoding\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: ContentEncoding\n  nameWithType: HttpListenerResponse.ContentEncoding\n  fullName: System.Net.HttpListenerResponse.ContentEncoding\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: true\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Net.HttpListenerResponse.ContentLength64\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: ContentLength64\n  nameWithType: HttpListenerResponse.ContentLength64\n  fullName: System.Net.HttpListenerResponse.ContentLength64\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Net.HttpListenerResponse.ContentType\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: ContentType\n  nameWithType: HttpListenerResponse.ContentType\n  fullName: System.Net.HttpListenerResponse.ContentType\n- uid: System.Net.HttpListenerResponse.Cookies\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: Cookies\n  nameWithType: HttpListenerResponse.Cookies\n  fullName: System.Net.HttpListenerResponse.Cookies\n- uid: System.Net.CookieCollection\n  parent: System.Net\n  isExternal: true\n  name: CookieCollection\n  nameWithType: CookieCollection\n  fullName: System.Net.CookieCollection\n- uid: System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: CopyFrom(HttpListenerResponse)\n  nameWithType: HttpListenerResponse.CopyFrom(HttpListenerResponse)\n  fullName: System.Net.HttpListenerResponse.CopyFrom(HttpListenerResponse)\n- uid: System.Net.HttpListenerResponse\n  parent: System.Net\n  isExternal: false\n  name: HttpListenerResponse\n  nameWithType: HttpListenerResponse\n  fullName: System.Net.HttpListenerResponse\n- uid: System.Net.HttpListenerResponse.Headers\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: Headers\n  nameWithType: HttpListenerResponse.Headers\n  fullName: System.Net.HttpListenerResponse.Headers\n- uid: System.Net.WebHeaderCollection\n  parent: System.Net\n  isExternal: true\n  name: WebHeaderCollection\n  nameWithType: WebHeaderCollection\n  fullName: System.Net.WebHeaderCollection\n- uid: System.Net.HttpListenerResponse.KeepAlive\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: KeepAlive\n  nameWithType: HttpListenerResponse.KeepAlive\n  fullName: System.Net.HttpListenerResponse.KeepAlive\n- uid: System.Net.HttpListenerResponse.OutputStream\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: OutputStream\n  nameWithType: HttpListenerResponse.OutputStream\n  fullName: System.Net.HttpListenerResponse.OutputStream\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Net.HttpListenerResponse.ProtocolVersion\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: ProtocolVersion\n  nameWithType: HttpListenerResponse.ProtocolVersion\n  fullName: System.Net.HttpListenerResponse.ProtocolVersion\n- uid: System.Version\n  parent: System\n  isExternal: true\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Net.HttpListenerResponse.Redirect(System.String)\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: Redirect(String)\n  nameWithType: HttpListenerResponse.Redirect(String)\n  fullName: System.Net.HttpListenerResponse.Redirect(String)\n- uid: System.Net.HttpListenerResponse.RedirectLocation\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: RedirectLocation\n  nameWithType: HttpListenerResponse.RedirectLocation\n  fullName: System.Net.HttpListenerResponse.RedirectLocation\n- uid: System.Net.HttpListenerResponse.SendChunked\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: SendChunked\n  nameWithType: HttpListenerResponse.SendChunked\n  fullName: System.Net.HttpListenerResponse.SendChunked\n- uid: System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: SetCookie(Cookie)\n  nameWithType: HttpListenerResponse.SetCookie(Cookie)\n  fullName: System.Net.HttpListenerResponse.SetCookie(Cookie)\n- uid: System.Net.HttpListenerResponse.StatusCode\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: StatusCode\n  nameWithType: HttpListenerResponse.StatusCode\n  fullName: System.Net.HttpListenerResponse.StatusCode\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.HttpListenerResponse.StatusDescription\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: StatusDescription\n  nameWithType: HttpListenerResponse.StatusDescription\n  fullName: System.Net.HttpListenerResponse.StatusDescription\n- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: System.IDisposable.Dispose()\n  nameWithType: HttpListenerResponse.System.IDisposable.Dispose()\n  fullName: System.Net.HttpListenerResponse.System.IDisposable.Dispose()\n- uid: System.Net.HttpListenerResponse.Abort*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: Abort\n  nameWithType: HttpListenerResponse.Abort\n- uid: System.Net.HttpListenerResponse.AddHeader*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: AddHeader\n  nameWithType: HttpListenerResponse.AddHeader\n- uid: System.Net.HttpListenerResponse.AppendCookie*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: AppendCookie\n  nameWithType: HttpListenerResponse.AppendCookie\n- uid: System.Net.HttpListenerResponse.AppendHeader*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: AppendHeader\n  nameWithType: HttpListenerResponse.AppendHeader\n- uid: System.Net.HttpListenerResponse.Close*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: Close\n  nameWithType: HttpListenerResponse.Close\n- uid: System.Net.HttpListenerResponse.ContentEncoding*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: ContentEncoding\n  nameWithType: HttpListenerResponse.ContentEncoding\n- uid: System.Net.HttpListenerResponse.ContentLength64*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: ContentLength64\n  nameWithType: HttpListenerResponse.ContentLength64\n- uid: System.Net.HttpListenerResponse.ContentType*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: ContentType\n  nameWithType: HttpListenerResponse.ContentType\n- uid: System.Net.HttpListenerResponse.Cookies*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: Cookies\n  nameWithType: HttpListenerResponse.Cookies\n- uid: System.Net.HttpListenerResponse.CopyFrom*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: CopyFrom\n  nameWithType: HttpListenerResponse.CopyFrom\n- uid: System.Net.HttpListenerResponse.Headers*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: Headers\n  nameWithType: HttpListenerResponse.Headers\n- uid: System.Net.HttpListenerResponse.KeepAlive*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: KeepAlive\n  nameWithType: HttpListenerResponse.KeepAlive\n- uid: System.Net.HttpListenerResponse.OutputStream*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: OutputStream\n  nameWithType: HttpListenerResponse.OutputStream\n- uid: System.Net.HttpListenerResponse.ProtocolVersion*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: ProtocolVersion\n  nameWithType: HttpListenerResponse.ProtocolVersion\n- uid: System.Net.HttpListenerResponse.Redirect*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: Redirect\n  nameWithType: HttpListenerResponse.Redirect\n- uid: System.Net.HttpListenerResponse.RedirectLocation*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: RedirectLocation\n  nameWithType: HttpListenerResponse.RedirectLocation\n- uid: System.Net.HttpListenerResponse.SendChunked*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: SendChunked\n  nameWithType: HttpListenerResponse.SendChunked\n- uid: System.Net.HttpListenerResponse.SetCookie*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: SetCookie\n  nameWithType: HttpListenerResponse.SetCookie\n- uid: System.Net.HttpListenerResponse.StatusCode*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: StatusCode\n  nameWithType: HttpListenerResponse.StatusCode\n- uid: System.Net.HttpListenerResponse.StatusDescription*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: StatusDescription\n  nameWithType: HttpListenerResponse.StatusDescription\n- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose*\n  parent: System.Net.HttpListenerResponse\n  isExternal: false\n  name: System.IDisposable.Dispose\n  nameWithType: HttpListenerResponse.System.IDisposable.Dispose\n"}