{"nodes":[{"pos":[1564,1715],"content":"Defines the condition definition behind a <xref href=\"System.Workflow.Activities.Rules.RuleConditionReference\"></xref>. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the condition definition behind a <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleConditionReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,119],"source":"Defines the condition definition behind a <xref href=\"System.Workflow.Activities.Rules.RuleConditionReference\"></xref>."},{"content":"This class cannot be inherited.","pos":[120,151]}]},{"pos":[1728,2100],"content":"The RuleExpressionCondition class defines the base conditions evaluated when a <xref:System.Workflow.Activities.Rules.RuleSet> is executed.       This condition type is modeled with CodeDom types. For more information about CodeDom types, see [CodeDOM Types Supported by Windows Workflow Foundation](http://msdn.microsoft.com/en-us/0381740f-0a29-43ae-96e2-17e14e832083).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RuleExpressionCondition class defines the base conditions evaluated when a &lt;xref:System.Workflow.Activities.Rules.RuleSet&gt; is executed.","pos":[0,139],"source":"The RuleExpressionCondition class defines the base conditions evaluated when a <xref:System.Workflow.Activities.Rules.RuleSet> is executed."},{"content":"This condition type is modeled with CodeDom types.","pos":[146,196]},{"content":"For more information about CodeDom types, see <bpt id=\"p1\">[</bpt>CodeDOM Types Supported by Windows Workflow Foundation<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0381740f-0a29-43ae-96e2-17e14e832083)</ept>.","pos":[197,370],"source":" For more information about CodeDom types, see [CodeDOM Types Supported by Windows Workflow Foundation](http://msdn.microsoft.com/en-us/0381740f-0a29-43ae-96e2-17e14e832083)."}]},{"pos":[2855,2973],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref> class."},{"pos":[3759,3914],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using a specified code expression.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref> class by using a specified code expression."},{"pos":[4111,4267],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to initialize the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> with.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.CodeDom.CodeExpression\"></xref> to initialize the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref> with."},{"pos":[4920,5064],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using a specified name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref> class by using a specified name."},{"pos":[5228,5266],"content":"The name of the condition to evaluate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the condition to evaluate.","pos":[0,38]}]},{"pos":[5459,5591],"content":"<ph id=\"ph1\">&lt;code&gt;conditionName&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>conditionName</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[6256,6420],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using a specified name and code expression.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref> class by using a specified name and code expression."},{"pos":[6626,6664],"content":"The name of the condition to evaluate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the condition to evaluate.","pos":[0,38]}]},{"pos":[6747,6903],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to initialize the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> with.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.CodeDom.CodeExpression\"></xref> to initialize the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref> with."},{"pos":[7447,7560],"content":"Creates a deep copy of the current <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a deep copy of the current <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref>."},{"pos":[7766,7881],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is identical to this instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref> that is identical to this instance."},{"pos":[8478,8528],"content":"Determines whether two object instances are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether two object instances are equal.","pos":[0,50]}]},{"pos":[8669,8729],"content":"The <xref:System.Object> to compare with the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to compare with the current object.","pos":[0,60],"source":"The <xref:System.Object> to compare with the current object."}]},{"pos":[8788,8958],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the object instances are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object instances are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9653,9678],"content":"Evaluates the expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Evaluates the expression.","pos":[0,25]}]},{"pos":[9906,10035],"content":"Instance of the runtime context that <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is running in.","needQuote":true,"needEscape":true,"source":"Instance of the runtime context that <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref> is running in."},{"pos":[10094,10266],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the expression evaluates to true; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the expression evaluates to true; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10834,10884],"content":"Gets or sets the expression condition to evaluate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the expression condition to evaluate.","pos":[0,50]}]},{"pos":[11043,11080],"content":"The expression condition to evaluate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression condition to evaluate.","pos":[0,37]}]},{"pos":[11280,11390],"content":"The activity running the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is runtime initialized.","needQuote":true,"needEscape":true,"source":"The activity running the <xref href=\"System.Workflow.Activities.Rules.RuleSet\"></xref> is runtime initialized."},{"pos":[12031,12139],"content":"Gets the dependencies for the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the dependencies for the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref>."},{"pos":[12420,12526],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleValidation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to manage the validation process.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.Activities.Rules.RuleValidation\"></xref> to manage the validation process."},{"pos":[12624,12647],"content":"A list of dependencies.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list of dependencies.","pos":[0,23]}]},{"pos":[13231,13271],"content":"Returns the hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]},{"pos":[13406,13438],"content":"The hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash code for this instance.","pos":[0,32]}]},{"pos":[13979,14030],"content":"Gets or sets the name of the condition to evaluate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the condition to evaluate.","pos":[0,51]}]},{"pos":[14153,14191],"content":"The name of the condition to evaluate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the condition to evaluate.","pos":[0,38]}]},{"pos":[14385,14495],"content":"The activity running the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is runtime initialized.","needQuote":true,"needEscape":true,"source":"The activity running the <xref href=\"System.Workflow.Activities.Rules.RuleSet\"></xref> is runtime initialized."},{"pos":[15021,15071],"content":"Called when all properties have been given values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when all properties have been given values.","pos":[0,50]}]},{"pos":[15083,15130],"content":"After this call, no properties can be modified.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"After this call, no properties can be modified.","pos":[0,47]}]},{"pos":[15792,15845],"content":"Returns the string value of the expression condition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the string value of the expression condition.","pos":[0,53]}]},{"pos":[15981,16135],"content":"The string value of the expression condition. An empty string if the expression condition is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string value of the expression condition.","pos":[0,45]},{"content":"An empty string if the expression condition is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[46,154],"source":" An empty string if the expression condition is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[16837,16908],"content":"Verifies that the expression is configured correctly and has no errors.","needQuote":true,"needEscape":true,"nodes":[{"content":"Verifies that the expression is configured correctly and has no errors.","pos":[0,71]}]},{"pos":[16920,17187],"content":"If the &lt;xref:System.Workflow.Activities.Rules.RuleExpressionCondition&gt; contains errors (the <ph id=\"ph1\">`Validate`</ph> method returns <ph id=\"ph2\">`false`</ph>), then &lt;xref:System.Workflow.Activities.Rules.RuleValidation.Errors%2A?displayProperty=fullName&gt; will contain the list of errors encountered.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the <xref:System.Workflow.Activities.Rules.RuleExpressionCondition> contains errors (the `Validate` method returns `false`), then <xref:System.Workflow.Activities.Rules.RuleValidation.Errors%2A?displayProperty=fullName> will contain the list of errors encountered."},{"pos":[17419,17525],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleValidation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to manage the validation process.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.Activities.Rules.RuleValidation\"></xref> to manage the validation process."},{"pos":[17584,17752],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the expression has no errors; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the expression has no errors; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17948,18076],"content":"<ph id=\"ph1\">&lt;code&gt;validator&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>validator</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition\n  id: RuleExpressionCondition\n  children:\n  - System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor\n  - System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.CodeDom.CodeExpression)\n  - System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)\n  - System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)\n  - System.Workflow.Activities.Rules.RuleExpressionCondition.Clone\n  - System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)\n  - System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)\n  - System.Workflow.Activities.Rules.RuleExpressionCondition.Expression\n  - System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)\n  - System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode\n  - System.Workflow.Activities.Rules.RuleExpressionCondition.Name\n  - System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized\n  - System.Workflow.Activities.Rules.RuleExpressionCondition.ToString\n  - System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)\n  langs:\n  - csharp\n  name: RuleExpressionCondition\n  nameWithType: RuleExpressionCondition\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition\n  type: Class\n  summary: Defines the condition definition behind a <xref href=\"System.Workflow.Activities.Rules.RuleConditionReference\"></xref>. This class cannot be inherited.\n  remarks: \"The RuleExpressionCondition class defines the base conditions evaluated when a <xref:System.Workflow.Activities.Rules.RuleSet> is executed.  \\n  \\n This condition type is modeled with CodeDom types. For more information about CodeDom types, see [CodeDOM Types Supported by Windows Workflow Foundation](http://msdn.microsoft.com/en-us/0381740f-0a29-43ae-96e2-17e14e832083).\"\n  syntax:\n    content: 'public sealed class RuleExpressionCondition : System.Workflow.Activities.Rules.RuleCondition'\n  inheritance:\n  - System.Object\n  - System.Workflow.Activities.Rules.RuleCondition\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  langs:\n  - csharp\n  name: RuleExpressionCondition()\n  nameWithType: RuleExpressionCondition.RuleExpressionCondition()\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref> class.\n  syntax:\n    content: public RuleExpressionCondition ();\n    parameters: []\n  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.CodeDom.CodeExpression)\n  id: '#ctor(System.CodeDom.CodeExpression)'\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  langs:\n  - csharp\n  name: RuleExpressionCondition(CodeExpression)\n  nameWithType: RuleExpressionCondition.RuleExpressionCondition(CodeExpression)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(CodeExpression)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref> class by using a specified code expression.\n  syntax:\n    content: public RuleExpressionCondition (System.CodeDom.CodeExpression expression);\n    parameters:\n    - id: expression\n      type: System.CodeDom.CodeExpression\n      description: The <xref href=\"System.CodeDom.CodeExpression\"></xref> to initialize the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref> with.\n  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  langs:\n  - csharp\n  name: RuleExpressionCondition(String)\n  nameWithType: RuleExpressionCondition.RuleExpressionCondition(String)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref> class by using a specified name.\n  syntax:\n    content: public RuleExpressionCondition (string conditionName);\n    parameters:\n    - id: conditionName\n      type: System.String\n      description: The name of the condition to evaluate.\n  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>conditionName</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)\n  id: '#ctor(System.String,System.CodeDom.CodeExpression)'\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  langs:\n  - csharp\n  name: RuleExpressionCondition(String,CodeExpression)\n  nameWithType: RuleExpressionCondition.RuleExpressionCondition(String,CodeExpression)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(String,CodeExpression)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref> class by using a specified name and code expression.\n  syntax:\n    content: public RuleExpressionCondition (string conditionName, System.CodeDom.CodeExpression expression);\n    parameters:\n    - id: conditionName\n      type: System.String\n      description: The name of the condition to evaluate.\n    - id: expression\n      type: System.CodeDom.CodeExpression\n      description: The <xref href=\"System.CodeDom.CodeExpression\"></xref> to initialize the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref> with.\n  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone\n  id: Clone\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: RuleExpressionCondition.Clone()\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone()\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Creates a deep copy of the current <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref>.\n  syntax:\n    content: public override System.Workflow.Activities.Rules.RuleCondition Clone ();\n    parameters: []\n    return:\n      type: System.Workflow.Activities.Rules.RuleCondition\n      description: A <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref> that is identical to this instance.\n  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: RuleExpressionCondition.Equals(Object)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Determines whether two object instances are equal.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref:System.Object> to compare with the current object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object instances are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)\n  id: Evaluate(System.Workflow.Activities.Rules.RuleExecution)\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  langs:\n  - csharp\n  name: Evaluate(RuleExecution)\n  nameWithType: RuleExpressionCondition.Evaluate(RuleExecution)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(RuleExecution)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Evaluates the expression.\n  syntax:\n    content: public override bool Evaluate (System.Workflow.Activities.Rules.RuleExecution execution);\n    parameters:\n    - id: execution\n      type: System.Workflow.Activities.Rules.RuleExecution\n      description: Instance of the runtime context that <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref> is running in.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the expression evaluates to true; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression\n  id: Expression\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  langs:\n  - csharp\n  name: Expression\n  nameWithType: RuleExpressionCondition.Expression\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Gets or sets the expression condition to evaluate.\n  syntax:\n    content: public System.CodeDom.CodeExpression Expression { get; set; }\n    return:\n      type: System.CodeDom.CodeExpression\n      description: The expression condition to evaluate.\n  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression*\n  exceptions:\n  - type: System.Data.ReadOnlyException\n    commentId: T:System.Data.ReadOnlyException\n    description: The activity running the <xref href=\"System.Workflow.Activities.Rules.RuleSet\"></xref> is runtime initialized.\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)\n  id: GetDependencies(System.Workflow.Activities.Rules.RuleValidation)\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  langs:\n  - csharp\n  name: GetDependencies(RuleValidation)\n  nameWithType: RuleExpressionCondition.GetDependencies(RuleValidation)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(RuleValidation)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Gets the dependencies for the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionCondition\"></xref>.\n  syntax:\n    content: public override System.Collections.Generic.ICollection<string> GetDependencies (System.Workflow.Activities.Rules.RuleValidation validation);\n    parameters:\n    - id: validation\n      type: System.Workflow.Activities.Rules.RuleValidation\n      description: The <xref href=\"System.Workflow.Activities.Rules.RuleValidation\"></xref> to manage the validation process.\n    return:\n      type: System.Collections.Generic.ICollection{System.String}\n      description: A list of dependencies.\n  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode\n  id: GetHashCode\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: RuleExpressionCondition.GetHashCode()\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for this instance.\n  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Name\n  id: Name\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  langs:\n  - csharp\n  name: Name\n  nameWithType: RuleExpressionCondition.Name\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Name\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Gets or sets the name of the condition to evaluate.\n  syntax:\n    content: public override string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of the condition to evaluate.\n  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Name*\n  exceptions:\n  - type: System.Data.ReadOnlyException\n    commentId: T:System.Data.ReadOnlyException\n    description: The activity running the <xref href=\"System.Workflow.Activities.Rules.RuleSet\"></xref> is runtime initialized.\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized\n  id: OnRuntimeInitialized\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  langs:\n  - csharp\n  name: OnRuntimeInitialized()\n  nameWithType: RuleExpressionCondition.OnRuntimeInitialized()\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized()\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Called when all properties have been given values.\n  remarks: After this call, no properties can be modified.\n  syntax:\n    content: public override void OnRuntimeInitialized ();\n    parameters: []\n  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString\n  id: ToString\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: RuleExpressionCondition.ToString()\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString()\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Returns the string value of the expression condition.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string value of the expression condition. An empty string if the expression condition is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)\n  id: Validate(System.Workflow.Activities.Rules.RuleValidation)\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  langs:\n  - csharp\n  name: Validate(RuleValidation)\n  nameWithType: RuleExpressionCondition.Validate(RuleValidation)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(RuleValidation)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Verifies that the expression is configured correctly and has no errors.\n  remarks: If the <xref:System.Workflow.Activities.Rules.RuleExpressionCondition> contains errors (the `Validate` method returns `false`), then <xref:System.Workflow.Activities.Rules.RuleValidation.Errors%2A?displayProperty=fullName> will contain the list of errors encountered.\n  syntax:\n    content: public override bool Validate (System.Workflow.Activities.Rules.RuleValidation validation);\n    parameters:\n    - id: validation\n      type: System.Workflow.Activities.Rules.RuleValidation\n      description: The <xref href=\"System.Workflow.Activities.Rules.RuleValidation\"></xref> to manage the validation process.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the expression has no errors; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>validator</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.Activities.Rules.RuleCondition\n  isExternal: false\n  name: System.Workflow.Activities.Rules.RuleCondition\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Data.ReadOnlyException\n  parent: System.Data\n  isExternal: false\n  name: ReadOnlyException\n  nameWithType: ReadOnlyException\n  fullName: System.Data.ReadOnlyException\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: RuleExpressionCondition()\n  nameWithType: RuleExpressionCondition.RuleExpressionCondition()\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition()\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: RuleExpressionCondition(CodeExpression)\n  nameWithType: RuleExpressionCondition.RuleExpressionCondition(CodeExpression)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(CodeExpression)\n- uid: System.CodeDom.CodeExpression\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeExpression\n  nameWithType: CodeExpression\n  fullName: System.CodeDom.CodeExpression\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: RuleExpressionCondition(String)\n  nameWithType: RuleExpressionCondition.RuleExpressionCondition(String)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: RuleExpressionCondition(String,CodeExpression)\n  nameWithType: RuleExpressionCondition.RuleExpressionCondition(String,CodeExpression)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(String,CodeExpression)\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: Clone()\n  nameWithType: RuleExpressionCondition.Clone()\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone()\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: RuleExpressionCondition.Equals(Object)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: Evaluate(RuleExecution)\n  nameWithType: RuleExpressionCondition.Evaluate(RuleExecution)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(RuleExecution)\n- uid: System.Workflow.Activities.Rules.RuleExecution\n  parent: System.Workflow.Activities.Rules\n  isExternal: false\n  name: RuleExecution\n  nameWithType: RuleExecution\n  fullName: System.Workflow.Activities.Rules.RuleExecution\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: Expression\n  nameWithType: RuleExpressionCondition.Expression\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: GetDependencies(RuleValidation)\n  nameWithType: RuleExpressionCondition.GetDependencies(RuleValidation)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(RuleValidation)\n- uid: System.Collections.Generic.ICollection{System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<String>\n  nameWithType: ICollection<String>\n  fullName: System.Collections.Generic.ICollection<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.Activities.Rules.RuleValidation\n  parent: System.Workflow.Activities.Rules\n  isExternal: false\n  name: RuleValidation\n  nameWithType: RuleValidation\n  fullName: System.Workflow.Activities.Rules.RuleValidation\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: RuleExpressionCondition.GetHashCode()\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Name\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: Name\n  nameWithType: RuleExpressionCondition.Name\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Name\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: OnRuntimeInitialized()\n  nameWithType: RuleExpressionCondition.OnRuntimeInitialized()\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized()\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: ToString()\n  nameWithType: RuleExpressionCondition.ToString()\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString()\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: Validate(RuleValidation)\n  nameWithType: RuleExpressionCondition.Validate(RuleValidation)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(RuleValidation)\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: RuleExpressionCondition\n  nameWithType: RuleExpressionCondition.RuleExpressionCondition\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone*\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: Clone\n  nameWithType: RuleExpressionCondition.Clone\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals*\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: Equals\n  nameWithType: RuleExpressionCondition.Equals\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate*\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: Evaluate\n  nameWithType: RuleExpressionCondition.Evaluate\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression*\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: Expression\n  nameWithType: RuleExpressionCondition.Expression\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies*\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: GetDependencies\n  nameWithType: RuleExpressionCondition.GetDependencies\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode*\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: GetHashCode\n  nameWithType: RuleExpressionCondition.GetHashCode\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Name*\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: Name\n  nameWithType: RuleExpressionCondition.Name\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized*\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: OnRuntimeInitialized\n  nameWithType: RuleExpressionCondition.OnRuntimeInitialized\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString*\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: ToString\n  nameWithType: RuleExpressionCondition.ToString\n- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate*\n  parent: System.Workflow.Activities.Rules.RuleExpressionCondition\n  isExternal: false\n  name: Validate\n  nameWithType: RuleExpressionCondition.Validate\n"}