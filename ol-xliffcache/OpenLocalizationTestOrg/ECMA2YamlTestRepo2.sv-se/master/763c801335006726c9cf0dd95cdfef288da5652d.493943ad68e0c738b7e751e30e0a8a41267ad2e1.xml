{"nodes":[{"pos":[1648,1762],"content":"Defines the routing service, which is responsible for routing messages between endpoints based on filter criteria.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the routing service, which is responsible for routing messages between endpoints based on filter criteria.","pos":[0,114]}]},{"pos":[3273,3377],"content":"Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.","pos":[0,104]}]},{"pos":[4503,4553],"content":"Begins the asynchronous processing of the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins the asynchronous processing of the message.","pos":[0,50]}]},{"pos":[4565,4690],"content":"For more information on using the IDuplexSessionRouter contract, see <xref:System.ServiceModel.Routing.IDuplexSessionRouter>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information on using the IDuplexSessionRouter contract, see &lt;xref:System.ServiceModel.Routing.IDuplexSessionRouter&gt;.","pos":[0,125],"source":"For more information on using the IDuplexSessionRouter contract, see <xref:System.ServiceModel.Routing.IDuplexSessionRouter>."}]},{"pos":[4956,5020],"content":"The <xref:System.ServiceModel.Channels.Message> to be processed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Channels.Message&gt; to be processed.","pos":[0,64],"source":"The <xref:System.ServiceModel.Channels.Message> to be processed."}]},{"pos":[5092,5190],"content":"An <xref:System.AsyncCallback> delegate that is invoked when the message processing has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.AsyncCallback&gt; delegate that is invoked when the message processing has completed.","pos":[0,98],"source":"An <xref:System.AsyncCallback> delegate that is invoked when the message processing has completed."}]},{"pos":[5252,5321],"content":"A user-defined state object that is passed to the callback procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"A user-defined state object that is passed to the callback procedure.","pos":[0,69]}]},{"pos":[5385,5644],"content":"An <xref:System.IAsyncResult> that can be used to poll or wait for results, or both; this value is also needed when invoking &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IDuplexSessionRouter%23EndProcessMessage%2A&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IAsyncResult&gt; that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IDuplexSessionRouter%23EndProcessMessage%2A<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,259],"source":"An <xref:System.IAsyncResult> that can be used to poll or wait for results, or both; this value is also needed when invoking &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IDuplexSessionRouter%23EndProcessMessage%2A&gt;."}]},{"pos":[6579,6638],"content":"Completes the asynchronous execution of message processing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Completes the asynchronous execution of message processing.","pos":[0,59]}]},{"pos":[6650,6775],"content":"For more information on using the IDuplexSessionRouter contract, see <xref:System.ServiceModel.Routing.IDuplexSessionRouter>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information on using the IDuplexSessionRouter contract, see &lt;xref:System.ServiceModel.Routing.IDuplexSessionRouter&gt;.","pos":[0,125],"source":"For more information on using the IDuplexSessionRouter contract, see <xref:System.ServiceModel.Routing.IDuplexSessionRouter>."}]},{"pos":[6950,7140],"content":"The <xref:System.IAsyncResult> returned by the call to &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IDuplexSessionRouter%23BeginProcessMessage%2A&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; returned by the call to <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IDuplexSessionRouter%23BeginProcessMessage%2A<ph id=\"ph2\">&amp;gt;</ph>","pos":[0,190],"source":"The <xref:System.IAsyncResult> returned by the call to &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IDuplexSessionRouter%23BeginProcessMessage%2A&gt;"}]},{"pos":[8230,8283],"content":"Initiates the asynchronous processing of the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initiates the asynchronous processing of the message.","pos":[0,53]}]},{"pos":[8295,8418],"content":"For more information on using the IRequestReplyRouter contract, see <xref:System.ServiceModel.Routing.IRequestReplyRouter>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information on using the IRequestReplyRouter contract, see &lt;xref:System.ServiceModel.Routing.IRequestReplyRouter&gt;.","pos":[0,123],"source":"For more information on using the IRequestReplyRouter contract, see <xref:System.ServiceModel.Routing.IRequestReplyRouter>."}]},{"pos":[8683,8747],"content":"The <xref:System.ServiceModel.Channels.Message> to be processed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Channels.Message&gt; to be processed.","pos":[0,64],"source":"The <xref:System.ServiceModel.Channels.Message> to be processed."}]},{"pos":[8819,8917],"content":"An <xref:System.AsyncCallback> delegate that is invoked when the message processing has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.AsyncCallback&gt; delegate that is invoked when the message processing has completed.","pos":[0,98],"source":"An <xref:System.AsyncCallback> delegate that is invoked when the message processing has completed."}]},{"pos":[8979,9048],"content":"A user-defined state object that is passed to the callback procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"A user-defined state object that is passed to the callback procedure.","pos":[0,69]}]},{"pos":[9112,9370],"content":"An <xref:System.IAsyncResult> that can be used to poll or wait for results, or both; this value is also needed when invoking &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IRequestReplyRouter%23EndProcessRequest%2A&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IAsyncResult&gt; that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IRequestReplyRouter%23EndProcessRequest%2A<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,258],"source":"An <xref:System.IAsyncResult> that can be used to poll or wait for results, or both; this value is also needed when invoking &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IRequestReplyRouter%23EndProcessRequest%2A&gt;."}]},{"pos":[10299,10353],"content":"Finishes asynchronous execution of message processing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Finishes asynchronous execution of message processing.","pos":[0,54]}]},{"pos":[10365,10488],"content":"For more information on using the IRequestReplyRouter contract, see <xref:System.ServiceModel.Routing.IRequestReplyRouter>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information on using the IRequestReplyRouter contract, see &lt;xref:System.ServiceModel.Routing.IRequestReplyRouter&gt;.","pos":[0,123],"source":"For more information on using the IRequestReplyRouter contract, see <xref:System.ServiceModel.Routing.IRequestReplyRouter>."}]},{"pos":[10694,10883],"content":"The <xref:System.IAsyncResult> returned by the call to &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IRequestReplyRouter%23BeginProcessRequest%2A&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; returned by the call to <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IRequestReplyRouter%23BeginProcessRequest%2A<ph id=\"ph2\">&amp;gt;</ph>","pos":[0,189],"source":"The <xref:System.IAsyncResult> returned by the call to &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IRequestReplyRouter%23BeginProcessRequest%2A&gt;"}]},{"pos":[10964,11034],"content":"A <xref:System.ServiceModel.Channels.Message> that contains the reply.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.ServiceModel.Channels.Message&gt; that contains the reply.","pos":[0,70],"source":"A <xref:System.ServiceModel.Channels.Message> that contains the reply."}]},{"pos":[12138,12191],"content":"Initiates the asynchronous processing of the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initiates the asynchronous processing of the message.","pos":[0,53]}]},{"pos":[12203,12332],"content":"For more information on using the ISimplexDatagramRouter contract, see <xref:System.ServiceModel.Routing.ISimplexDatagramRouter>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information on using the ISimplexDatagramRouter contract, see &lt;xref:System.ServiceModel.Routing.ISimplexDatagramRouter&gt;.","pos":[0,129],"source":"For more information on using the ISimplexDatagramRouter contract, see <xref:System.ServiceModel.Routing.ISimplexDatagramRouter>."}]},{"pos":[12600,12664],"content":"The <xref:System.ServiceModel.Channels.Message> to be processed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Channels.Message&gt; to be processed.","pos":[0,64],"source":"The <xref:System.ServiceModel.Channels.Message> to be processed."}]},{"pos":[12736,12834],"content":"An <xref:System.AsyncCallback> delegate that is invoked when the message processing has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.AsyncCallback&gt; delegate that is invoked when the message processing has completed.","pos":[0,98],"source":"An <xref:System.AsyncCallback> delegate that is invoked when the message processing has completed."}]},{"pos":[12896,12965],"content":"A user-defined state object that is passed to the callback procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"A user-defined state object that is passed to the callback procedure.","pos":[0,69]}]},{"pos":[13029,13290],"content":"An <xref:System.IAsyncResult> that can be used to poll or wait for results, or both; this value is also needed when invoking &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexDatagramRouter%23EndProcessMessage%2A&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IAsyncResult&gt; that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexDatagramRouter%23EndProcessMessage%2A<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,261],"source":"An <xref:System.IAsyncResult> that can be used to poll or wait for results, or both; this value is also needed when invoking &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexDatagramRouter%23EndProcessMessage%2A&gt;."}]},{"pos":[14237,14291],"content":"Finishes asynchronous execution of message processing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Finishes asynchronous execution of message processing.","pos":[0,54]}]},{"pos":[14303,14432],"content":"For more information on using the ISimplexDatagramRouter contract, see <xref:System.ServiceModel.Routing.ISimplexDatagramRouter>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information on using the ISimplexDatagramRouter contract, see &lt;xref:System.ServiceModel.Routing.ISimplexDatagramRouter&gt;.","pos":[0,129],"source":"For more information on using the ISimplexDatagramRouter contract, see <xref:System.ServiceModel.Routing.ISimplexDatagramRouter>."}]},{"pos":[14609,14802],"content":"The <xref:System.IAsyncResult> returned by the call to &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexDatagramRouter%23BeginProcessMessage%2A&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; returned by the call to <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexDatagramRouter%23BeginProcessMessage%2A<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,193],"source":"The <xref:System.IAsyncResult> returned by the call to &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexDatagramRouter%23BeginProcessMessage%2A&gt;."}]},{"pos":[15904,15957],"content":"Initiates the asynchronous processing of the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initiates the asynchronous processing of the message.","pos":[0,53]}]},{"pos":[15969,16096],"content":"For more information on using the ISimplexSessionRouter contract, see <xref:System.ServiceModel.Routing.ISimplexSessionRouter>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information on using the ISimplexSessionRouter contract, see &lt;xref:System.ServiceModel.Routing.ISimplexSessionRouter&gt;.","pos":[0,127],"source":"For more information on using the ISimplexSessionRouter contract, see <xref:System.ServiceModel.Routing.ISimplexSessionRouter>."}]},{"pos":[16363,16427],"content":"The <xref:System.ServiceModel.Channels.Message> to be processed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Channels.Message&gt; to be processed.","pos":[0,64],"source":"The <xref:System.ServiceModel.Channels.Message> to be processed."}]},{"pos":[16499,16597],"content":"An <xref:System.AsyncCallback> delegate that is invoked when the message processing has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.AsyncCallback&gt; delegate that is invoked when the message processing has completed.","pos":[0,98],"source":"An <xref:System.AsyncCallback> delegate that is invoked when the message processing has completed."}]},{"pos":[16659,16728],"content":"A user-defined state object that is passed to the callback procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"A user-defined state object that is passed to the callback procedure.","pos":[0,69]}]},{"pos":[16792,17052],"content":"An <xref:System.IAsyncResult> that can be used to poll or wait for results, or both; this value is also needed when invoking &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexSessionRouter%23EndProcessMessage%2A&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IAsyncResult&gt; that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexSessionRouter%23EndProcessMessage%2A<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,260],"source":"An <xref:System.IAsyncResult> that can be used to poll or wait for results, or both; this value is also needed when invoking &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexSessionRouter%23EndProcessMessage%2A&gt;."}]},{"pos":[17993,18047],"content":"Finishes asynchronous execution of message processing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Finishes asynchronous execution of message processing.","pos":[0,54]}]},{"pos":[18059,18186],"content":"For more information on using the ISimplexSessionRouter contract, see <xref:System.ServiceModel.Routing.ISimplexSessionRouter>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information on using the ISimplexSessionRouter contract, see &lt;xref:System.ServiceModel.Routing.ISimplexSessionRouter&gt;.","pos":[0,127],"source":"For more information on using the ISimplexSessionRouter contract, see <xref:System.ServiceModel.Routing.ISimplexSessionRouter>."}]},{"pos":[18362,18554],"content":"The <xref:System.IAsyncResult> returned by the call to &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexSessionRouter%23BeginProcessMessage%2A&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; returned by the call to <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexSessionRouter%23BeginProcessMessage%2A<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,192],"source":"The <xref:System.IAsyncResult> returned by the call to &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexSessionRouter%23BeginProcessMessage%2A&gt;."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Routing.RoutingService\n  id: RoutingService\n  children:\n  - System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose\n  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)\n  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)\n  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)\n  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)\n  langs:\n  - csharp\n  name: RoutingService\n  nameWithType: RoutingService\n  fullName: System.ServiceModel.Routing.RoutingService\n  type: Class\n  summary: Defines the routing service, which is responsible for routing messages between endpoints based on filter criteria.\n  syntax:\n    content: >-\n      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Allowed)]\n\n      [System.ServiceModel.ServiceBehavior(AddressFilterMode=System.ServiceModel.AddressFilterMode.Any, InstanceContextMode=System.ServiceModel.InstanceContextMode.PerSession, UseSynchronizationContext=false, ValidateMustUnderstand=false)]\n\n      public sealed class RoutingService : IDisposable, System.ServiceModel.Routing.IDuplexSessionRouter, System.ServiceModel.Routing.IRequestReplyRouter, System.ServiceModel.Routing.ISimplexDatagramRouter, System.ServiceModel.Routing.ISimplexSessionRouter\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  - System.ServiceModel.Routing.IDuplexSessionRouter\n  - System.ServiceModel.Routing.IRequestReplyRouter\n  - System.ServiceModel.Routing.ISimplexDatagramRouter\n  - System.ServiceModel.Routing.ISimplexSessionRouter\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose\n  id: System#IDisposable#Dispose\n  isEii: true\n  parent: System.ServiceModel.Routing.RoutingService\n  langs:\n  - csharp\n  name: System.IDisposable.Dispose()\n  nameWithType: RoutingService.System.IDisposable.Dispose()\n  fullName: System.ServiceModel.Routing.RoutingService.System.IDisposable.Dispose()\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\n  syntax:\n    content: void IDisposable.Dispose ();\n    parameters: []\n  overload: System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  id: System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  isEii: true\n  parent: System.ServiceModel.Routing.RoutingService\n  langs:\n  - csharp\n  name: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Begins the asynchronous processing of the message.\n  remarks: For more information on using the IDuplexSessionRouter contract, see <xref:System.ServiceModel.Routing.IDuplexSessionRouter>.\n  syntax:\n    content: IAsyncResult IDuplexSessionRouter.BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The <xref:System.ServiceModel.Channels.Message> to be processed.\n    - id: callback\n      type: System.AsyncCallback\n      description: An <xref:System.AsyncCallback> delegate that is invoked when the message processing has completed.\n    - id: state\n      type: System.Object\n      description: A user-defined state object that is passed to the callback procedure.\n    return:\n      type: System.IAsyncResult\n      description: An <xref:System.IAsyncResult> that can be used to poll or wait for results, or both; this value is also needed when invoking &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IDuplexSessionRouter%23EndProcessMessage%2A&gt;.\n  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)\n  id: System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)\n  isEii: true\n  parent: System.ServiceModel.Routing.RoutingService\n  langs:\n  - csharp\n  name: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)\n  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)\n  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Completes the asynchronous execution of message processing.\n  remarks: For more information on using the IDuplexSessionRouter contract, see <xref:System.ServiceModel.Routing.IDuplexSessionRouter>.\n  syntax:\n    content: void IDuplexSessionRouter.EndProcessMessage (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> returned by the call to &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IDuplexSessionRouter%23BeginProcessMessage%2A&gt;\n  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  id: System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  isEii: true\n  parent: System.ServiceModel.Routing.RoutingService\n  langs:\n  - csharp\n  name: System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)\n  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Initiates the asynchronous processing of the message.\n  remarks: For more information on using the IRequestReplyRouter contract, see <xref:System.ServiceModel.Routing.IRequestReplyRouter>.\n  syntax:\n    content: IAsyncResult IRequestReplyRouter.BeginProcessRequest (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The <xref:System.ServiceModel.Channels.Message> to be processed.\n    - id: callback\n      type: System.AsyncCallback\n      description: An <xref:System.AsyncCallback> delegate that is invoked when the message processing has completed.\n    - id: state\n      type: System.Object\n      description: A user-defined state object that is passed to the callback procedure.\n    return:\n      type: System.IAsyncResult\n      description: An <xref:System.IAsyncResult> that can be used to poll or wait for results, or both; this value is also needed when invoking &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IRequestReplyRouter%23EndProcessRequest%2A&gt;.\n  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)\n  id: System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)\n  isEii: true\n  parent: System.ServiceModel.Routing.RoutingService\n  langs:\n  - csharp\n  name: System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)\n  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)\n  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Finishes asynchronous execution of message processing.\n  remarks: For more information on using the IRequestReplyRouter contract, see <xref:System.ServiceModel.Routing.IRequestReplyRouter>.\n  syntax:\n    content: System.ServiceModel.Channels.Message IRequestReplyRouter.EndProcessRequest (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> returned by the call to &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IRequestReplyRouter%23BeginProcessRequest%2A&gt;\n    return:\n      type: System.ServiceModel.Channels.Message\n      description: A <xref:System.ServiceModel.Channels.Message> that contains the reply.\n  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  id: System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  isEii: true\n  parent: System.ServiceModel.Routing.RoutingService\n  langs:\n  - csharp\n  name: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Initiates the asynchronous processing of the message.\n  remarks: For more information on using the ISimplexDatagramRouter contract, see <xref:System.ServiceModel.Routing.ISimplexDatagramRouter>.\n  syntax:\n    content: IAsyncResult ISimplexDatagramRouter.BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The <xref:System.ServiceModel.Channels.Message> to be processed.\n    - id: callback\n      type: System.AsyncCallback\n      description: An <xref:System.AsyncCallback> delegate that is invoked when the message processing has completed.\n    - id: state\n      type: System.Object\n      description: A user-defined state object that is passed to the callback procedure.\n    return:\n      type: System.IAsyncResult\n      description: An <xref:System.IAsyncResult> that can be used to poll or wait for results, or both; this value is also needed when invoking &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexDatagramRouter%23EndProcessMessage%2A&gt;.\n  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)\n  id: System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)\n  isEii: true\n  parent: System.ServiceModel.Routing.RoutingService\n  langs:\n  - csharp\n  name: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)\n  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)\n  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Finishes asynchronous execution of message processing.\n  remarks: For more information on using the ISimplexDatagramRouter contract, see <xref:System.ServiceModel.Routing.ISimplexDatagramRouter>.\n  syntax:\n    content: void ISimplexDatagramRouter.EndProcessMessage (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> returned by the call to &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexDatagramRouter%23BeginProcessMessage%2A&gt;.\n  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  id: System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  isEii: true\n  parent: System.ServiceModel.Routing.RoutingService\n  langs:\n  - csharp\n  name: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Initiates the asynchronous processing of the message.\n  remarks: For more information on using the ISimplexSessionRouter contract, see <xref:System.ServiceModel.Routing.ISimplexSessionRouter>.\n  syntax:\n    content: IAsyncResult ISimplexSessionRouter.BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The <xref:System.ServiceModel.Channels.Message> to be processed.\n    - id: callback\n      type: System.AsyncCallback\n      description: An <xref:System.AsyncCallback> delegate that is invoked when the message processing has completed.\n    - id: state\n      type: System.Object\n      description: A user-defined state object that is passed to the callback procedure.\n    return:\n      type: System.IAsyncResult\n      description: An <xref:System.IAsyncResult> that can be used to poll or wait for results, or both; this value is also needed when invoking &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexSessionRouter%23EndProcessMessage%2A&gt;.\n  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)\n  id: System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)\n  isEii: true\n  parent: System.ServiceModel.Routing.RoutingService\n  langs:\n  - csharp\n  name: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)\n  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)\n  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Finishes asynchronous execution of message processing.\n  remarks: For more information on using the ISimplexSessionRouter contract, see <xref:System.ServiceModel.Routing.ISimplexSessionRouter>.\n  syntax:\n    content: void ISimplexSessionRouter.EndProcessMessage (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> returned by the call to &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexSessionRouter%23BeginProcessMessage%2A&gt;.\n  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.IDisposable.Dispose()\n  nameWithType: RoutingService.System.IDisposable.Dispose()\n  fullName: System.ServiceModel.Routing.RoutingService.System.IDisposable.Dispose()\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)\n  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)\n  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)\n  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)\n  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)\n  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)\n  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)\n  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)\n  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)\n  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)\n- uid: System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose*\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.IDisposable.Dispose\n  nameWithType: RoutingService.System.IDisposable.Dispose\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage*\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage\n  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage*\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage\n  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest*\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest\n  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest*\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest\n  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage*\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage\n  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage*\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage\n  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage*\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage\n  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage\n- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage*\n  parent: System.ServiceModel.Routing.RoutingService\n  isExternal: false\n  name: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage\n  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage\n"}