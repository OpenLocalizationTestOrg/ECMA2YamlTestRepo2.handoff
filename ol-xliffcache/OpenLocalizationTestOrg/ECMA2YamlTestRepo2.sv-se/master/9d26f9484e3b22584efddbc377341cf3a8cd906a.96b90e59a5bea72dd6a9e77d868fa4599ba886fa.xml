{"nodes":[{"pos":[372,620],"content":"Used by <bpt id=\"p1\">&lt;xref href=\"Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to indicate the serialization format of a user-defined type (UDT) or aggregate.","needQuote":true,"needEscape":true,"source":"Used by <xref href=\"Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\"></xref> and <xref href=\"Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\"></xref> to indicate the serialization format of a user-defined type (UDT) or aggregate."},{"pos":[632,852],"content":"Used by <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> and <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> to indicate the serialization format of a user-defined type (UDT) or aggregate.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Used by &lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute&gt; and &lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute&gt; to indicate the serialization format of a user-defined type (UDT) or aggregate.","pos":[0,220],"source":"Used by <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> and <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> to indicate the serialization format of a user-defined type (UDT) or aggregate."}]},{"pos":[1750,2344],"content":"The <xref uid=\"langword_csharp_Native\" name=\"Native\" href=\"\"></xref> serialization format uses a very simple algorithm that enables SQL Server to store an efficient representation of the UDT on disk. Types marked for <xref uid=\"langword_csharp_Native\" name=\"Native\" href=\"\"></xref> serialization can only have value types (structs in Microsoft Visual C# and structures in Microsoft Visual Basic .NET) as members. Members of reference types (such as classes in Visual C# and Visual Basic), either user-defined or those existing in the framework (such as <xref:System.String>), are not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Native\" name=\"Native\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> serialization format uses a very simple algorithm that enables SQL Server to store an efficient representation of the UDT on disk.","pos":[0,199],"source":"The <xref uid=\"langword_csharp_Native\" name=\"Native\" href=\"\"></xref> serialization format uses a very simple algorithm that enables SQL Server to store an efficient representation of the UDT on disk."},{"content":"Types marked for <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Native\" name=\"Native\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> serialization can only have value types (structs in Microsoft Visual C# and structures in Microsoft Visual Basic .NET) as members.","pos":[200,412],"source":" Types marked for <xref uid=\"langword_csharp_Native\" name=\"Native\" href=\"\"></xref> serialization can only have value types (structs in Microsoft Visual C# and structures in Microsoft Visual Basic .NET) as members."},{"content":"Members of reference types (such as classes in Visual C# and Visual Basic), either user-defined or those existing in the framework (such as &lt;xref:System.String&gt;), are not supported.","pos":[413,594],"source":" Members of reference types (such as classes in Visual C# and Visual Basic), either user-defined or those existing in the framework (such as <xref:System.String>), are not supported."}]},{"pos":[2357,3930],"content":"The requirements for this format are:      -   The `StructLayout.LayoutKindSequential` attribute must be applied to the aggregate or UDT if it is defined in a class and not a structure. This controls the physical layout of the data fields, and is used to force the members to be laid out sequentially in the order they appear. SQL Server uses this attribute to determine the field order for UDTs with multiple fields.      -   The type must contain at least one member (serialized values cannot be zero bytes in size).      -   All the fields of the aggregate must be *blittable*, that is, they must have a common representation in both managed and unmanaged memory and not require special handling by the interop marshaler.      -   All the fields of the UDT should be of one of the following types that can be serialized: `bool`, `byte`,`sbyte`,`short`,`ushort`, `int`, `uint`, `long`, `ulong`, `float`, `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, or other value types defined by the user that contain fields of one of these types.      -   The aggregate must not specify a value for `MaxByteSize`.      -   The aggregate must not have any [NonSerialized] fields.      -   Fields must not be marked as an explicit layout (<xref:System.Runtime.InteropServices.StructLayoutAttribute>).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The requirements for this format are:      -   The <ph id=\"ph1\">`StructLayout.LayoutKindSequential`</ph> attribute must be applied to the aggregate or UDT if it is defined in a class and not a structure.","pos":[0,185],"source":"The requirements for this format are:      -   The `StructLayout.LayoutKindSequential` attribute must be applied to the aggregate or UDT if it is defined in a class and not a structure."},{"content":"This controls the physical layout of the data fields, and is used to force the members to be laid out sequentially in the order they appear.","pos":[186,326]},{"content":"SQL Server uses this attribute to determine the field order for UDTs with multiple fields.","pos":[327,417]},{"content":"-   The type must contain at least one member (serialized values cannot be zero bytes in size).","pos":[423,518]},{"content":"-   All the fields of the aggregate must be <bpt id=\"p1\">*</bpt>blittable<ept id=\"p1\">*</ept>, that is, they must have a common representation in both managed and unmanaged memory and not require special handling by the interop marshaler.","pos":[524,724],"source":"      -   All the fields of the aggregate must be *blittable*, that is, they must have a common representation in both managed and unmanaged memory and not require special handling by the interop marshaler."},{"content":"-   All the fields of the UDT should be of one of the following types that can be serialized: <ph id=\"ph1\">`bool`</ph>, <ph id=\"ph2\">`byte`</ph>,<ph id=\"ph3\">`sbyte`</ph>,<ph id=\"ph4\">`short`</ph>,<ph id=\"ph5\">`ushort`</ph>, <ph id=\"ph6\">`int`</ph>, <ph id=\"ph7\">`uint`</ph>, <ph id=\"ph8\">`long`</ph>, <ph id=\"ph9\">`ulong`</ph>, <ph id=\"ph10\">`float`</ph>, <ph id=\"ph11\">`double`</ph>, &lt;xref:System.Data.SqlTypes.SqlByte&gt;, &lt;xref:System.Data.SqlTypes.SqlInt16&gt;, &lt;xref:System.Data.SqlTypes.SqlInt32&gt;, &lt;xref:System.Data.SqlTypes.SqlInt64&gt;, &lt;xref:System.Data.SqlTypes.SqlDateTime&gt;, &lt;xref:System.Data.SqlTypes.SqlSingle&gt;, &lt;xref:System.Data.SqlTypes.SqlDouble&gt;, &lt;xref:System.Data.SqlTypes.SqlMoney&gt;, or other value types defined by the user that contain fields of one of these types.","pos":[730,1307],"source":"      -   All the fields of the UDT should be of one of the following types that can be serialized: `bool`, `byte`,`sbyte`,`short`,`ushort`, `int`, `uint`, `long`, `ulong`, `float`, `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, or other value types defined by the user that contain fields of one of these types."},{"content":"-   The aggregate must not specify a value for <ph id=\"ph1\">`MaxByteSize`</ph>.","pos":[1313,1374],"source":"      -   The aggregate must not specify a value for `MaxByteSize`."},{"content":"-   The aggregate must not have any [NonSerialized] fields.","pos":[1380,1439]},{"content":"-   Fields must not be marked as an explicit layout (&lt;xref:System.Runtime.InteropServices.StructLayoutAttribute&gt;).","pos":[1445,1559],"source":"      -   Fields must not be marked as an explicit layout (<xref:System.Runtime.InteropServices.StructLayoutAttribute>)."}]},{"pos":[4039,4051],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4415,4451],"content":"The serialization format is unknown.","needQuote":true,"needEscape":true,"nodes":[{"content":"The serialization format is unknown.","pos":[0,36]}]},{"pos":[4560,4572],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4956,5392],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_UserDefined\" name=\"UserDefined\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> serialization format gives the developer full control over the binary format through the <bpt id=\"p2\">&lt;xref href=\"Microsoft.SqlServer.Server.IBinarySerialize\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept><bpt id=\"p3\">&lt;xref uid=\"langword_csharp_.Write\" name=\".Write\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and <bpt id=\"p4\">&lt;xref href=\"Microsoft.SqlServer.Server.IBinarySerialize\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept><bpt id=\"p5\">&lt;xref uid=\"langword_csharp_.Read\" name=\".Read\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> methods.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_UserDefined\" name=\"UserDefined\" href=\"\"></xref> serialization format gives the developer full control over the binary format through the <xref href=\"Microsoft.SqlServer.Server.IBinarySerialize\"></xref><xref uid=\"langword_csharp_.Write\" name=\".Write\" href=\"\"></xref> and <xref href=\"Microsoft.SqlServer.Server.IBinarySerialize\"></xref><xref uid=\"langword_csharp_.Read\" name=\".Read\" href=\"\"></xref> methods."},{"pos":[5405,5816],"content":"The aggregate must specify a value for `MaxByteSize`.       Specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> attribute property. The default value is false.       If you omit any field in the <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> or <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> methods, the state of that field is not serialized.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The aggregate must specify a value for <ph id=\"ph1\">`MaxByteSize`</ph>.","pos":[0,53],"source":"The aggregate must specify a value for `MaxByteSize`."},{"content":"Specify the &lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A&gt; attribute property.","pos":[60,170],"source":"       Specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> attribute property."},{"content":"The default value is false.","pos":[171,198]},{"content":"If you omit any field in the &lt;xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A&gt; or &lt;xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A&gt; methods, the state of that field is not serialized.","pos":[205,407],"source":"       If you omit any field in the <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> or <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> methods, the state of that field is not serialized."}]},{"pos":[5930,5942],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.SqlServer.Server.Format\n  id: Format\n  children:\n  - Microsoft.SqlServer.Server.Format.Native\n  - Microsoft.SqlServer.Server.Format.Unknown\n  - Microsoft.SqlServer.Server.Format.UserDefined\n  langs:\n  - csharp\n  name: Format\n  nameWithType: Format\n  fullName: Microsoft.SqlServer.Server.Format\n  type: Enum\n  summary: Used by <xref href=\"Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\"></xref> and <xref href=\"Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\"></xref> to indicate the serialization format of a user-defined type (UDT) or aggregate.\n  remarks: Used by <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> and <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> to indicate the serialization format of a user-defined type (UDT) or aggregate.\n  example:\n  - \"The following example shows the `UserDefinedType` attribute of the Point UDT.  The UDT is byte-ordered, is named \\\"Point\\\", has a validation method named \\\"ValidatePoint\\\", and uses the native serialization format.  \\n  \\n [!code-cs[DataWorks SqlUserDefinedTypeAttribute Example#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_6_1.cs)]\\n [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_6_1.vb)]\"\n  syntax:\n    content: public enum Format\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.Format.Native\n  id: Native\n  parent: Microsoft.SqlServer.Server.Format\n  langs:\n  - csharp\n  name: Native\n  nameWithType: Format.Native\n  fullName: Microsoft.SqlServer.Server.Format.Native\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The <xref uid=\"langword_csharp_Native\" name=\"Native\" href=\"\"></xref> serialization format uses a very simple algorithm that enables SQL Server to store an efficient representation of the UDT on disk. Types marked for <xref uid=\"langword_csharp_Native\" name=\"Native\" href=\"\"></xref> serialization can only have value types (structs in Microsoft Visual C# and structures in Microsoft Visual Basic .NET) as members. Members of reference types (such as classes in Visual C# and Visual Basic), either user-defined or those existing in the framework (such as <xref:System.String>), are not supported.\n  remarks: \"The requirements for this format are:  \\n  \\n-   The `StructLayout.LayoutKindSequential` attribute must be applied to the aggregate or UDT if it is defined in a class and not a structure. This controls the physical layout of the data fields, and is used to force the members to be laid out sequentially in the order they appear. SQL Server uses this attribute to determine the field order for UDTs with multiple fields.  \\n  \\n-   The type must contain at least one member (serialized values cannot be zero bytes in size).  \\n  \\n-   All the fields of the aggregate must be *blittable*, that is, they must have a common representation in both managed and unmanaged memory and not require special handling by the interop marshaler.  \\n  \\n-   All the fields of the UDT should be of one of the following types that can be serialized: `bool`, `byte`,`sbyte`,`short`,`ushort`, `int`, `uint`, `long`, `ulong`, `float`, `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, or other value types defined by the user that contain fields of one of these types.  \\n  \\n-   The aggregate must not specify a value for `MaxByteSize`.  \\n  \\n-   The aggregate must not have any [NonSerialized] fields.  \\n  \\n-   Fields must not be marked as an explicit layout (<xref:System.Runtime.InteropServices.StructLayoutAttribute>).\"\n  syntax:\n    content: Native\n    return:\n      type: Microsoft.SqlServer.Server.Format\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.Format.Unknown\n  id: Unknown\n  parent: Microsoft.SqlServer.Server.Format\n  langs:\n  - csharp\n  name: Unknown\n  nameWithType: Format.Unknown\n  fullName: Microsoft.SqlServer.Server.Format.Unknown\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The serialization format is unknown.\n  syntax:\n    content: Unknown\n    return:\n      type: Microsoft.SqlServer.Server.Format\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.Format.UserDefined\n  id: UserDefined\n  parent: Microsoft.SqlServer.Server.Format\n  langs:\n  - csharp\n  name: UserDefined\n  nameWithType: Format.UserDefined\n  fullName: Microsoft.SqlServer.Server.Format.UserDefined\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The <xref uid=\"langword_csharp_UserDefined\" name=\"UserDefined\" href=\"\"></xref> serialization format gives the developer full control over the binary format through the <xref href=\"Microsoft.SqlServer.Server.IBinarySerialize\"></xref><xref uid=\"langword_csharp_.Write\" name=\".Write\" href=\"\"></xref> and <xref href=\"Microsoft.SqlServer.Server.IBinarySerialize\"></xref><xref uid=\"langword_csharp_.Read\" name=\".Read\" href=\"\"></xref> methods.\n  remarks: \"The aggregate must specify a value for `MaxByteSize`.  \\n  \\n Specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> attribute property. The default value is false.  \\n  \\n If you omit any field in the <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> or <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> methods, the state of that field is not serialized.\"\n  syntax:\n    content: UserDefined\n    return:\n      type: Microsoft.SqlServer.Server.Format\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: Microsoft.SqlServer.Server.Format.Native\n  parent: Microsoft.SqlServer.Server.Format\n  isExternal: false\n  name: Native\n  nameWithType: Format.Native\n  fullName: Microsoft.SqlServer.Server.Format.Native\n- uid: Microsoft.SqlServer.Server.Format\n  parent: Microsoft.SqlServer.Server\n  isExternal: false\n  name: Format\n  nameWithType: Format\n  fullName: Microsoft.SqlServer.Server.Format\n- uid: Microsoft.SqlServer.Server.Format.Unknown\n  parent: Microsoft.SqlServer.Server.Format\n  isExternal: false\n  name: Unknown\n  nameWithType: Format.Unknown\n  fullName: Microsoft.SqlServer.Server.Format.Unknown\n- uid: Microsoft.SqlServer.Server.Format.UserDefined\n  parent: Microsoft.SqlServer.Server.Format\n  isExternal: false\n  name: UserDefined\n  nameWithType: Format.UserDefined\n  fullName: Microsoft.SqlServer.Server.Format.UserDefined\n"}