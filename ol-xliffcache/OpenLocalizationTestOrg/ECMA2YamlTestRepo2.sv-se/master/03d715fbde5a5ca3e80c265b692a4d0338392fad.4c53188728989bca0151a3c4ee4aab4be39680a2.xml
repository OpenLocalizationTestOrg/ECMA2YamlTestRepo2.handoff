{"nodes":[{"pos":[609,754],"content":"Contains options that specify what action the SQL persistence provider should take when it receives an exception when trying to lock an instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains options that specify what action the SQL persistence provider should take when it receives an exception when trying to lock an instance.","pos":[0,145]}]},{"pos":[1389,1707],"content":"Specifies that the persistence provider reattempts to lock an instance with an exponentially increasing delay between successive attempts. The persistence provider passes the <xref:System.Runtime.Persistence.InstanceLockedException> to the caller at the end of the sequence (after retrying predefined number of times).","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the persistence provider reattempts to lock an instance with an exponentially increasing delay between successive attempts. The persistence provider passes the <xref:System.Runtime.Persistence.InstanceLockedException> to the caller at the end of the sequence (after retrying predefined number of times).","pos":[0,318],"nodes":[{"content":"Specifies that the persistence provider reattempts to lock an instance with an exponentially increasing delay between successive attempts.","pos":[0,138]},{"content":"The persistence provider passes the &lt;xref:System.Runtime.Persistence.InstanceLockedException&gt; to the caller at the end of the sequence (after retrying predefined number of times).","pos":[139,318],"source":" The persistence provider passes the <xref:System.Runtime.Persistence.InstanceLockedException> to the caller at the end of the sequence (after retrying predefined number of times)."}]}]},{"pos":[1856,1868],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2399,2680],"content":"Specifies that the persistence provider reattempts to lock the instance with a linear retry interval. The persistence provider passes the <xref:System.Runtime.Persistence.InstanceLockedException> to the caller at the end of the sequence (after retrying predefined number of times).","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the persistence provider reattempts to lock the instance with a linear retry interval. The persistence provider passes the <xref:System.Runtime.Persistence.InstanceLockedException> to the caller at the end of the sequence (after retrying predefined number of times).","pos":[0,281],"nodes":[{"content":"Specifies that the persistence provider reattempts to lock the instance with a linear retry interval.","pos":[0,101]},{"content":"The persistence provider passes the &lt;xref:System.Runtime.Persistence.InstanceLockedException&gt; to the caller at the end of the sequence (after retrying predefined number of times).","pos":[102,281],"source":" The persistence provider passes the <xref:System.Runtime.Persistence.InstanceLockedException> to the caller at the end of the sequence (after retrying predefined number of times)."}]}]},{"pos":[2824,2836],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3352,3481],"content":"Specifies that the persistence provider does not reattempt to lock an instance if the instance is already locked by another host.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the persistence provider does not reattempt to lock an instance if the instance is already locked by another host.","pos":[0,129]}]},{"pos":[3622,3634],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  id: InstanceLockedExceptionAction\n  children:\n  - System.Activities.DurableInstancing.InstanceLockedExceptionAction.AggressiveRetry\n  - System.Activities.DurableInstancing.InstanceLockedExceptionAction.BasicRetry\n  - System.Activities.DurableInstancing.InstanceLockedExceptionAction.NoRetry\n  langs:\n  - csharp\n  name: InstanceLockedExceptionAction\n  nameWithType: InstanceLockedExceptionAction\n  fullName: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  type: Enum\n  summary: Contains options that specify what action the SQL persistence provider should take when it receives an exception when trying to lock an instance.\n  syntax:\n    content: public enum InstanceLockedExceptionAction\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Activities.DurableInstancing.InstanceLockedExceptionAction.AggressiveRetry\n  id: AggressiveRetry\n  parent: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  langs:\n  - csharp\n  name: AggressiveRetry\n  nameWithType: InstanceLockedExceptionAction.AggressiveRetry\n  fullName: System.Activities.DurableInstancing.InstanceLockedExceptionAction.AggressiveRetry\n  type: Field\n  assemblies:\n  - System.Activities.DurableInstancing\n  namespace: System.Activities.DurableInstancing\n  summary: Specifies that the persistence provider reattempts to lock an instance with an exponentially increasing delay between successive attempts. The persistence provider passes the <xref:System.Runtime.Persistence.InstanceLockedException> to the caller at the end of the sequence (after retrying predefined number of times).\n  syntax:\n    content: AggressiveRetry\n    return:\n      type: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DurableInstancing.InstanceLockedExceptionAction.BasicRetry\n  id: BasicRetry\n  parent: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  langs:\n  - csharp\n  name: BasicRetry\n  nameWithType: InstanceLockedExceptionAction.BasicRetry\n  fullName: System.Activities.DurableInstancing.InstanceLockedExceptionAction.BasicRetry\n  type: Field\n  assemblies:\n  - System.Activities.DurableInstancing\n  namespace: System.Activities.DurableInstancing\n  summary: Specifies that the persistence provider reattempts to lock the instance with a linear retry interval. The persistence provider passes the <xref:System.Runtime.Persistence.InstanceLockedException> to the caller at the end of the sequence (after retrying predefined number of times).\n  syntax:\n    content: BasicRetry\n    return:\n      type: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DurableInstancing.InstanceLockedExceptionAction.NoRetry\n  id: NoRetry\n  parent: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  langs:\n  - csharp\n  name: NoRetry\n  nameWithType: InstanceLockedExceptionAction.NoRetry\n  fullName: System.Activities.DurableInstancing.InstanceLockedExceptionAction.NoRetry\n  type: Field\n  assemblies:\n  - System.Activities.DurableInstancing\n  namespace: System.Activities.DurableInstancing\n  summary: Specifies that the persistence provider does not reattempt to lock an instance if the instance is already locked by another host.\n  syntax:\n    content: NoRetry\n    return:\n      type: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Activities.DurableInstancing.InstanceLockedExceptionAction.AggressiveRetry\n  parent: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  isExternal: false\n  name: AggressiveRetry\n  nameWithType: InstanceLockedExceptionAction.AggressiveRetry\n  fullName: System.Activities.DurableInstancing.InstanceLockedExceptionAction.AggressiveRetry\n- uid: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  parent: System.Activities.DurableInstancing\n  isExternal: false\n  name: InstanceLockedExceptionAction\n  nameWithType: InstanceLockedExceptionAction\n  fullName: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n- uid: System.Activities.DurableInstancing.InstanceLockedExceptionAction.BasicRetry\n  parent: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  isExternal: false\n  name: BasicRetry\n  nameWithType: InstanceLockedExceptionAction.BasicRetry\n  fullName: System.Activities.DurableInstancing.InstanceLockedExceptionAction.BasicRetry\n- uid: System.Activities.DurableInstancing.InstanceLockedExceptionAction.NoRetry\n  parent: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  isExternal: false\n  name: NoRetry\n  nameWithType: InstanceLockedExceptionAction.NoRetry\n  fullName: System.Activities.DurableInstancing.InstanceLockedExceptionAction.NoRetry\n"}