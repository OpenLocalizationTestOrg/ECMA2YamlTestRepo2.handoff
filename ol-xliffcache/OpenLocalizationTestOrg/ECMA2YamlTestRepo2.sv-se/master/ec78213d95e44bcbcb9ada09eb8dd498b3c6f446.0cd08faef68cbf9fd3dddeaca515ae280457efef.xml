{"nodes":[{"pos":[2845,2971],"content":"Provides a base class for all strongly typed collections that manage <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Provides a base class for all strongly typed collections that manage <xref href=\"System.Web.UI.IStateManager\"></xref> objects."},{"pos":[2984,5577],"content":"The StateManagedCollection class is the base class for all strongly typed collections that store <xref:System.Web.UI.IStateManager> elements, including <xref:System.Web.UI.WebControls.DataControlFieldCollection>, <xref:System.Web.UI.WebControls.ParameterCollection>, <xref:System.Web.UI.WebControls.StyleCollection>, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>, and others. The StateManagedCollection collection manages its own state as well as the state of the elements it contains. Therefore, a call to <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> saves the state of the collection and the state of all the elements currently contained by the collection.       The most important methods to consider when deriving from the StateManagedCollection class are <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>, <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>, <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>, <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>, and <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>. The <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> and <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> methods are used to store an index in view state for the type of a contained element. Storing an index rather than a fully qualified type name improves performance. The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called whenever elements of the collection are manipulated, and validates the elements according to business rules. Currently, the implementation of the <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method prohibits `null` objects from being stored in the collection; however, you can override this method to define your own validation behavior in a derived type. The <xref:System.Web.UI.StateManagedCollection.SetDirty%2A> method forces the entire collection to be serialized to view state, rather than just serializing changes made to state since the last time it was loaded. The <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> method is an abstract method you can implement to perform this same behavior at the element level.      > [!IMPORTANT] >  StateManagedCollection stores assembly-qualified type names of the collection items in view state. A site visitor could decode the view state and retrieve the type name. If this scenario creates a security concern in your Web site, you can manually encrypt the type name before placing it in the view state.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The StateManagedCollection class is the base class for all strongly typed collections that store &lt;xref:System.Web.UI.IStateManager&gt; elements, including &lt;xref:System.Web.UI.WebControls.DataControlFieldCollection&gt;, &lt;xref:System.Web.UI.WebControls.ParameterCollection&gt;, &lt;xref:System.Web.UI.WebControls.StyleCollection&gt;, &lt;xref:System.Web.UI.WebControls.TreeNodeBindingCollection&gt;, and others.","pos":[0,388],"source":"The StateManagedCollection class is the base class for all strongly typed collections that store <xref:System.Web.UI.IStateManager> elements, including <xref:System.Web.UI.WebControls.DataControlFieldCollection>, <xref:System.Web.UI.WebControls.ParameterCollection>, <xref:System.Web.UI.WebControls.StyleCollection>, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>, and others."},{"content":"The StateManagedCollection collection manages its own state as well as the state of the elements it contains.","pos":[389,498]},{"content":"Therefore, a call to &lt;xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A&gt; saves the state of the collection and the state of all the elements currently contained by the collection.","pos":[499,723],"source":" Therefore, a call to <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> saves the state of the collection and the state of all the elements currently contained by the collection."},{"content":"The most important methods to consider when deriving from the StateManagedCollection class are &lt;xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A&gt;, &lt;xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A&gt;, &lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt;, &lt;xref:System.Web.UI.StateManagedCollection.SetDirty%2A&gt;, and &lt;xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A&gt;.","pos":[730,1133],"source":"       The most important methods to consider when deriving from the StateManagedCollection class are <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>, <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>, <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>, <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>, and <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>."},{"content":"The &lt;xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A&gt; and &lt;xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A&gt; methods are used to store an index in view state for the type of a contained element.","pos":[1134,1351],"source":" The <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> and <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> methods are used to store an index in view state for the type of a contained element."},{"content":"Storing an index rather than a fully qualified type name improves performance.","pos":[1352,1430]},{"content":"The &lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt; method is called whenever elements of the collection are manipulated, and validates the elements according to business rules.","pos":[1431,1618],"source":" The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called whenever elements of the collection are manipulated, and validates the elements according to business rules."},{"content":"Currently, the implementation of the &lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt; method prohibits <ph id=\"ph1\">`null`</ph> objects from being stored in the collection; however, you can override this method to define your own validation behavior in a derived type.","pos":[1619,1878],"source":" Currently, the implementation of the <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method prohibits `null` objects from being stored in the collection; however, you can override this method to define your own validation behavior in a derived type."},{"content":"The &lt;xref:System.Web.UI.StateManagedCollection.SetDirty%2A&gt; method forces the entire collection to be serialized to view state, rather than just serializing changes made to state since the last time it was loaded.","pos":[1879,2092],"source":" The <xref:System.Web.UI.StateManagedCollection.SetDirty%2A> method forces the entire collection to be serialized to view state, rather than just serializing changes made to state since the last time it was loaded."},{"content":"The &lt;xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A&gt; method is an abstract method you can implement to perform this same behavior at the element level.","pos":[2093,2257],"source":" The <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> method is an abstract method you can implement to perform this same behavior at the element level."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  StateManagedCollection stores assembly-qualified type names of the collection items in view state.","pos":[2263,2379],"source":"      > [!IMPORTANT] >  StateManagedCollection stores assembly-qualified type names of the collection items in view state."},{"content":"A site visitor could decode the view state and retrieve the type name.","pos":[2380,2450]},{"content":"If this scenario creates a security concern in your Web site, you can manually encrypt the type name before placing it in the view state.","pos":[2451,2588]}]},{"pos":[6958,7056],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> class."},{"pos":[7068,7150],"content":"Derived classes can override the constructor to provide customized implementation.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Derived classes can override the constructor to provide customized implementation.","pos":[0,82]}]},{"pos":[7657,7753],"content":"Removes all items from the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Removes all items from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."},{"pos":[7765,8027],"content":"The <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method is called before the Clear method is called, and the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method is called after Clear has finished removing elements from the collection.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.StateManagedCollection.OnClear%2A&gt; method is called before the Clear method is called, and the &lt;xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A&gt; method is called after Clear has finished removing elements from the collection.","pos":[0,262],"source":"The <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method is called before the Clear method is called, and the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method is called after Clear has finished removing elements from the collection."}]},{"pos":[8611,8757],"content":"Copies the elements of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection to an array, starting at a particular array index.","needQuote":true,"needEscape":true,"source":"Copies the elements of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection to an array, starting at a particular array index."},{"pos":[8770,8997],"content":"The specified array must be of a compatible type.       The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Web.UI.StateManagedCollection> collection.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The specified array must be of a compatible type.       The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Web.UI.StateManagedCollection> collection.","pos":[0,225],"nodes":[{"content":"The specified array must be of a compatible type.","pos":[0,49]},{"content":"The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:System.Web.UI.StateManagedCollection&gt; collection.","pos":[56,225],"source":"       The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Web.UI.StateManagedCollection> collection."}]}]},{"pos":[9143,9352],"content":"The one-dimensional <xref:System.Array> that is the destination of the elements copied from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>. The <xref:System.Array> must have zero-based indexing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,154],"source":"The one-dimensional <xref:System.Array> that is the destination of the elements copied from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."},{"content":"The &lt;xref:System.Array&gt; must have zero-based indexing.","pos":[155,209],"source":" The <xref:System.Array> must have zero-based indexing."}]},{"pos":[9413,9469],"content":"The zero-based index in <ph id=\"ph1\">`array`</ph> at which copying begins.","needQuote":true,"needEscape":true,"source":"The zero-based index in `array` at which copying begins."},{"pos":[9643,9726],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>array</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9841,9878],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","needQuote":true,"needEscape":true,"source":"<code>index</code> is less than zero."},{"pos":[10707,10821],"content":"Gets the number of elements contained in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Gets the number of elements contained in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."},{"pos":[10927,11025],"content":"The number of elements contained in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The number of elements contained in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."},{"pos":[11546,11839],"content":"When overridden in a derived class, creates an instance of a class that implements <xref href=\"System.Web.UI.IStateManager\"></xref>. The type of object created is based on the specified member of the collection returned by the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, creates an instance of a class that implements <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,132],"source":"When overridden in a derived class, creates an instance of a class that implements <xref href=\"System.Web.UI.IStateManager\"></xref>."},{"content":"The type of object created is based on the specified member of the collection returned by the &lt;xref:System.Web.UI.StateManagedCollection.GetKnownTypes*&gt; method.","pos":[133,293],"source":" The type of object created is based on the specified member of the collection returned by the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes*> method."}]},{"pos":[11851,12403],"content":"The CreateKnownType method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=fullName> method. Derived collections override the CreateKnownType method to return a default instance of the <xref:System.Web.UI.IStateManager> type identified by the provided `index`, which maps to one of the types returned by the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CreateKnownType method is called internally by the &lt;xref:System.Web.UI.StateManagedCollection&gt; collection in its implementation of the &lt;xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=fullName&gt; method.","pos":[0,268],"source":"The CreateKnownType method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=fullName> method."},{"content":"Derived collections override the CreateKnownType method to return a default instance of the &lt;xref:System.Web.UI.IStateManager&gt; type identified by the provided <ph id=\"ph1\">`index`</ph>, which maps to one of the types returned by the &lt;xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A&gt; method.","pos":[269,552],"source":" Derived collections override the CreateKnownType method to return a default instance of the <xref:System.Web.UI.IStateManager> type identified by the provided `index`, which maps to one of the types returned by the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method."}]},{"pos":[13219,13407],"content":"The index, from the ordered list of types returned by &lt;xref:System.Web.UI.StateManagedCollection.GetKnownTypes*&gt;, of the type of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create.","needQuote":true,"needEscape":true,"source":"The index, from the ordered list of types returned by <xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>, of the type of <xref href=\"System.Web.UI.IStateManager\"></xref> to create."},{"pos":[13465,13596],"content":"An instance of a class derived from <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, according to the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p2\">&lt;/code&gt;</ept> provided.","needQuote":true,"needEscape":true,"source":"An instance of a class derived from <xref href=\"System.Web.UI.IStateManager\"></xref>, according to the <code>index</code> provided."},{"pos":[13787,13839],"content":"In all cases when not overridden in a derived class.","needQuote":true,"needEscape":true,"nodes":[{"content":"In all cases when not overridden in a derived class.","pos":[0,52]}]},{"pos":[14234,14349],"content":"Returns an iterator that iterates through the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Returns an iterator that iterates through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."},{"pos":[14522,14661],"content":"An &lt;xref:System.Collections.IEnumerator&gt; that can be used to iterate through the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IEnumerator> that can be used to iterate through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."},{"pos":[15137,15335],"content":"When overridden in a derived class, gets an array of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> types that the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> collection can contain.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, gets an array of <xref href=\"System.Web.UI.IStateManager\"></xref> types that the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection can contain."},{"pos":[15347,15744],"content":"The GetKnownTypes method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method. Derived collections override the GetKnownTypes method to return an array of <xref:System.Type> objects that represent the types the collection can contain.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetKnownTypes method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method. Derived collections override the GetKnownTypes method to return an array of <xref:System.Type> objects that represent the types the collection can contain.","pos":[0,397],"nodes":[{"content":"The GetKnownTypes method is called internally by the &lt;xref:System.Web.UI.StateManagedCollection&gt; collection in its implementation of the &lt;xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A&gt; method.","pos":[0,241],"source":"The GetKnownTypes method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method."},{"content":"Derived collections override the GetKnownTypes method to return an array of &lt;xref:System.Type&gt; objects that represent the types the collection can contain.","pos":[242,397],"source":" Derived collections override the GetKnownTypes method to return an array of <xref:System.Type> objects that represent the types the collection can contain."}]}]},{"pos":[16534,16789],"content":"An ordered array of <xref:System.Type> objects that identify the types of <xref href=\"System.Web.UI.IStateManager\"></xref> objects the collection can contain. The default implementation returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An ordered array of &lt;xref:System.Type&gt; objects that identify the types of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects the collection can contain.","pos":[0,158],"source":"An ordered array of <xref:System.Type> objects that identify the types of <xref href=\"System.Web.UI.IStateManager\"></xref> objects the collection can contain."},{"content":"The default implementation returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[159,255],"source":" The default implementation returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[17235,17403],"content":"When overridden in a derived class, performs additional work before the <xref:System.Web.UI.StateManagedCollection.Clear*> method removes all items from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, performs additional work before the &lt;xref:System.Web.UI.StateManagedCollection.Clear*&gt; method removes all items from the collection.","pos":[0,168],"source":"When overridden in a derived class, performs additional work before the <xref:System.Web.UI.StateManagedCollection.Clear*> method removes all items from the collection."}]},{"pos":[17415,17666],"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnClear method to perform any additional work before all items are removed from the collection using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Collections derived from &lt;xref:System.Web.UI.StateManagedCollection&gt; can override the OnClear method to perform any additional work before all items are removed from the collection using the &lt;xref:System.Web.UI.StateManagedCollection.Clear%2A&gt; method.","pos":[0,251],"source":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnClear method to perform any additional work before all items are removed from the collection using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method."}]},{"pos":[18223,18400],"content":"When overridden in a derived class, performs additional work after the <xref:System.Web.UI.StateManagedCollection.Clear*> method finishes removing all items from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, performs additional work after the &lt;xref:System.Web.UI.StateManagedCollection.Clear*&gt; method finishes removing all items from the collection.","pos":[0,177],"source":"When overridden in a derived class, performs additional work after the <xref:System.Web.UI.StateManagedCollection.Clear*> method finishes removing all items from the collection."}]},{"pos":[18412,18670],"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnClearComplete method to perform any additional work after all items are removed from the collection using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Collections derived from &lt;xref:System.Web.UI.StateManagedCollection&gt; can override the OnClearComplete method to perform any additional work after all items are removed from the collection using the &lt;xref:System.Web.UI.StateManagedCollection.Clear%2A&gt; method.","pos":[0,258],"source":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnClearComplete method to perform any additional work after all items are removed from the collection using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method."}]},{"pos":[19300,19592],"content":"When overridden in a derived class, performs additional work before the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; or &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt; method adds an item to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, performs additional work before the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A<ph id=\"ph2\">&amp;gt;</ph> or <ph id=\"ph3\">&amp;lt;</ph>xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A<ph id=\"ph4\">&amp;gt;</ph> method adds an item to the collection.","pos":[0,292],"source":"When overridden in a derived class, performs additional work before the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; or &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt; method adds an item to the collection."}]},{"pos":[19604,19966],"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnInsert method to perform any additional work before an item is added to the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Collections derived from &lt;xref:System.Web.UI.StateManagedCollection&gt; can override the OnInsert method to perform any additional work before an item is added to the collection using the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt; or &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; method.","pos":[0,362],"source":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnInsert method to perform any additional work before an item is added to the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> method."}]},{"pos":[20125,20287],"content":"The zero-based index at which <ph id=\"ph1\">`value`</ph> should be inserted by the <ph id=\"ph2\">&amp;lt;</ph>xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A<ph id=\"ph3\">&amp;gt;</ph> method.","needQuote":true,"needEscape":true,"source":"The zero-based index at which `value` should be inserted by the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; method."},{"pos":[20349,20437],"content":"The object to insert into the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object to insert into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."},{"pos":[21015,21306],"content":"When overridden in a derived class, performs additional work after the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; or &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt; method adds an item to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, performs additional work after the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A<ph id=\"ph2\">&amp;gt;</ph> or <ph id=\"ph3\">&amp;lt;</ph>xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A<ph id=\"ph4\">&amp;gt;</ph> method adds an item to the collection.","pos":[0,291],"source":"When overridden in a derived class, performs additional work after the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; or &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt; method adds an item to the collection."}]},{"pos":[21318,21687],"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnInsertComplete method to perform any additional work after an item is added to the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Collections derived from &lt;xref:System.Web.UI.StateManagedCollection&gt; can override the OnInsertComplete method to perform any additional work after an item is added to the collection using the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt; or &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; method.","pos":[0,369],"source":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnInsertComplete method to perform any additional work after an item is added to the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> method."}]},{"pos":[21854,22009],"content":"The zero-based index at which <ph id=\"ph1\">`value`</ph> is inserted by the <ph id=\"ph2\">&amp;lt;</ph>xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A<ph id=\"ph3\">&amp;gt;</ph> method.","needQuote":true,"needEscape":true,"source":"The zero-based index at which `value` is inserted by the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; method."},{"pos":[22071,22158],"content":"The object inserted into the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object inserted into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."},{"pos":[22704,23017],"content":"When overridden in a derived class, performs additional work before the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; or &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; method removes the specified item from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, performs additional work before the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A<ph id=\"ph2\">&amp;gt;</ph> or <ph id=\"ph3\">&amp;lt;</ph>xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A<ph id=\"ph4\">&amp;gt;</ph> method removes the specified item from the collection.","pos":[0,313],"source":"When overridden in a derived class, performs additional work before the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; or &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; method removes the specified item from the collection."}]},{"pos":[23029,23400],"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnRemove method to perform any additional work before an item is removed from the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Collections derived from &lt;xref:System.Web.UI.StateManagedCollection&gt; can override the OnRemove method to perform any additional work before an item is removed from the collection using the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; or &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; method.","pos":[0,371],"source":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnRemove method to perform any additional work before an item is removed from the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> method."}]},{"pos":[23559,23725],"content":"The zero-based index of the item to remove, which is used when &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the item to remove, which is used when <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A<ph id=\"ph2\">&amp;gt;</ph> is called.","pos":[0,166],"source":"The zero-based index of the item to remove, which is used when &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; is called."}]},{"pos":[23787,23996],"content":"The object to remove from the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which is used when <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A<ph id=\"ph2\">&amp;gt;</ph> is called.","needQuote":true,"needEscape":true,"source":"The object to remove from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>, which is used when &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; is called."},{"pos":[24574,24886],"content":"When overridden in a derived class, performs additional work after the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; or &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; method removes the specified item from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, performs additional work after the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A<ph id=\"ph2\">&amp;gt;</ph> or <ph id=\"ph3\">&amp;lt;</ph>xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A<ph id=\"ph4\">&amp;gt;</ph> method removes the specified item from the collection.","pos":[0,312],"source":"When overridden in a derived class, performs additional work after the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; or &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; method removes the specified item from the collection."}]},{"pos":[24898,25276],"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnRemoveComplete method to perform any additional work after an item is removed from the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Collections derived from &lt;xref:System.Web.UI.StateManagedCollection&gt; can override the OnRemoveComplete method to perform any additional work after an item is removed from the collection using the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; or &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; method.","pos":[0,378],"source":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnRemoveComplete method to perform any additional work after an item is removed from the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> method."}]},{"pos":[25443,25609],"content":"The zero-based index of the item to remove, which is used when &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the item to remove, which is used when <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A<ph id=\"ph2\">&amp;gt;</ph> is called.","pos":[0,166],"source":"The zero-based index of the item to remove, which is used when &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; is called."}]},{"pos":[25671,25878],"content":"The object removed from the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which is used when <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A<ph id=\"ph2\">&amp;gt;</ph> is called.","needQuote":true,"needEscape":true,"source":"The object removed from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>, which is used when &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; is called."},{"pos":[26390,26523],"content":"When overridden in a derived class, validates an element of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, validates an element of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."},{"pos":[26535,27001],"content":"The OnValidate method is called to validate the object manipulated through the <xref:System.Web.UI.StateManagedCollection> implementation of the <xref:System.Collections.IList> interface methods. The default implementation is to verify that the object manipulated by the collection is not `null`; however, collections derived from <xref:System.Web.UI.StateManagedCollection> override the OnValidate method to perform any additional validation, such as type-checking.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The OnValidate method is called to validate the object manipulated through the &lt;xref:System.Web.UI.StateManagedCollection&gt; implementation of the &lt;xref:System.Collections.IList&gt; interface methods.","pos":[0,195],"source":"The OnValidate method is called to validate the object manipulated through the <xref:System.Web.UI.StateManagedCollection> implementation of the <xref:System.Collections.IList> interface methods."},{"content":"The default implementation is to verify that the object manipulated by the collection is not <ph id=\"ph1\">`null`</ph>; however, collections derived from &lt;xref:System.Web.UI.StateManagedCollection&gt; override the OnValidate method to perform any additional validation, such as type-checking.","pos":[196,466],"source":" The default implementation is to verify that the object manipulated by the collection is not `null`; however, collections derived from <xref:System.Web.UI.StateManagedCollection> override the OnValidate method to perform any additional validation, such as type-checking."}]},{"pos":[27152,27217],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to validate.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.IStateManager\"></xref> to validate."},{"pos":[27395,27478],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[27848,27968],"content":"Forces the entire <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection to be serialized into view state.","needQuote":true,"needEscape":true,"source":"Forces the entire <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection to be serialized into view state."},{"pos":[27980,28401],"content":"The SetDirty method forces the <xref:System.Web.UI.StateManagedCollection> collection to be serialized completely (whereas the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method saves only the change information). This is useful when a collection has changed in a significant way and change information is insufficient to recreate the object in memory from view state.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SetDirty method forces the <xref:System.Web.UI.StateManagedCollection> collection to be serialized completely (whereas the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method saves only the change information). This is useful when a collection has changed in a significant way and change information is insufficient to recreate the object in memory from view state.","pos":[0,421],"nodes":[{"content":"The SetDirty method forces the &lt;xref:System.Web.UI.StateManagedCollection&gt; collection to be serialized completely (whereas the &lt;xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A&gt; method saves only the change information).","pos":[0,266],"source":"The SetDirty method forces the <xref:System.Web.UI.StateManagedCollection> collection to be serialized completely (whereas the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method saves only the change information)."},{"content":"This is useful when a collection has changed in a significant way and change information is insufficient to recreate the object in memory from view state.","pos":[267,421]}]}]},{"pos":[28992,29222],"content":"When overridden in a derived class, instructs an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_object\" name=\"object\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contained by the collection to record its entire state to view state, rather than recording only change information.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, instructs an <xref uid=\"langword_csharp_object\" name=\"object\" href=\"\"></xref> contained by the collection to record its entire state to view state, rather than recording only change information."},{"pos":[29234,29566],"content":"The SetDirtyObject method is called internally by the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>, <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>, and <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SetDirtyObject method is called internally by the &lt;xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A&gt;, &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt;, and &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; methods.","pos":[0,332],"source":"The SetDirtyObject method is called internally by the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>, <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>, and <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> methods."}]},{"pos":[30458,30551],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that should serialize itself completely.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.IStateManager\"></xref> that should serialize itself completely."},{"pos":[31153,31267],"content":"Gets the number of elements contained in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Gets the number of elements contained in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."},{"pos":[31397,31485],"content":"The number of elements in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The number of elements in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."},{"pos":[32154,32386],"content":"Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection is synchronized (thread safe). This method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection is synchronized (thread safe).","pos":[0,135],"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection is synchronized (thread safe)."},{"content":"This method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in all cases.","pos":[136,232],"source":" This method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases."}]},{"pos":[32528,32604],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in all cases.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases."},{"pos":[33252,33477],"content":"Gets an object that can be used to synchronize access to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection. This method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> in all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object that can be used to synchronize access to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","pos":[0,130],"source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."},{"content":"This method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in all cases.","pos":[131,225],"source":" This method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> in all cases."}]},{"pos":[33614,33688],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in all cases.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> in all cases."},{"pos":[34359,34474],"content":"Returns an iterator that iterates through the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Returns an iterator that iterates through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."},{"pos":[34652,34791],"content":"An &lt;xref:System.Collections.IEnumerator&gt; that can be used to iterate through the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IEnumerator> that can be used to iterate through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."},{"pos":[35435,35524],"content":"Adds an item to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Adds an item to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."},{"pos":[35536,35840],"content":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> and <xref:System.Web.UI.StateManagedCollection.OnInsert%2A> methods are called before the element is added to the collection, and the <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> method is called after the element is added.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt; and &lt;xref:System.Web.UI.StateManagedCollection.OnInsert%2A&gt; methods are called before the element is added to the collection, and the &lt;xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A&gt; method is called after the element is added.","pos":[0,304],"source":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> and <xref:System.Web.UI.StateManagedCollection.OnInsert%2A> methods are called before the element is added to the collection, and the <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> method is called after the element is added."}]},{"pos":[35971,36114],"content":"The<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ object \" name=\" object \" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>to add to the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The<xref uid=\"langword_csharp_ object \" name=\" object \" href=\"\"></xref>to add to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."},{"pos":[36171,36222],"content":"The position at which the new element was inserted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position at which the new element was inserted.","pos":[0,51]}]},{"pos":[36418,36515],"content":"The specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The specified <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[37009,37105],"content":"Removes all items from the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Removes all items from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."},{"pos":[37117,37473],"content":"The <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method is called before the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method is called, and the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method is called after <xref:System.Web.UI.StateManagedCollection.Clear%2A> has finished removing elements from the collection.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.StateManagedCollection.OnClear%2A&gt; method is called before the &lt;xref:System.Web.UI.StateManagedCollection.Clear%2A&gt; method is called, and the &lt;xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A&gt; method is called after &lt;xref:System.Web.UI.StateManagedCollection.Clear%2A&gt; has finished removing elements from the collection.","pos":[0,356],"source":"The <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method is called before the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method is called, and the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method is called after <xref:System.Web.UI.StateManagedCollection.Clear%2A> has finished removing elements from the collection."}]},{"pos":[38191,38309],"content":"Determines whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection contains a specific value.","needQuote":true,"needEscape":true,"source":"Determines whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection contains a specific value."},{"pos":[38321,38453],"content":"The &lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt; method is called to validate <ph id=\"ph1\">`value`</ph> before the collection is checked.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the collection is checked."},{"pos":[38590,38734],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_object\" name=\"object\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to locate in the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_object\" name=\"object\" href=\"\"></xref> to locate in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."},{"pos":[38793,39192],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object is found in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is passed for the value parameter, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the object is found in the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,224],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object is found in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is passed for the value parameter, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is returned.","pos":[225,399],"source":" If <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is passed for the value parameter, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is returned."}]},{"pos":[39845,39962],"content":"Determines the index of a specified item in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Determines the index of a specified item in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."},{"pos":[39974,40102],"content":"The &lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt; method is called to validate <ph id=\"ph1\">`value`</ph> before the index is returned.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the index is returned."},{"pos":[40237,40323],"content":"The object to locate in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object to locate in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."},{"pos":[40380,40455],"content":"The index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>, if it is found in the list; otherwise, -1.","needQuote":true,"needEscape":true,"source":"The index of <code>value</code>, if it is found in the list; otherwise, -1."},{"pos":[41146,41263],"content":"Inserts an item into the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection at the specified index.","needQuote":true,"needEscape":true,"source":"Inserts an item into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection at the specified index."},{"pos":[41275,41499],"content":"If `index` is -1, `value` is appended to the beginning of the <xref:System.Web.UI.StateManagedCollection> collection. If `index` equals the number of items in the collection, `value` is appended to the end of the collection.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If <ph id=\"ph1\">`index`</ph> is -1, <ph id=\"ph2\">`value`</ph> is appended to the beginning of the &lt;xref:System.Web.UI.StateManagedCollection&gt; collection.","pos":[0,117],"source":"If `index` is -1, `value` is appended to the beginning of the <xref:System.Web.UI.StateManagedCollection> collection."},{"content":"If <ph id=\"ph1\">`index`</ph> equals the number of items in the collection, <ph id=\"ph2\">`value`</ph> is appended to the end of the collection.","pos":[118,224],"source":" If `index` equals the number of items in the collection, `value` is appended to the end of the collection."}]},{"pos":[41644,41701],"content":"The zero-based index at which <ph id=\"ph1\">`value`</ph> should be inserted.","needQuote":true,"needEscape":true,"source":"The zero-based index at which `value` should be inserted."},{"pos":[41763,41851],"content":"The object to insert into the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object to insert into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."},{"pos":[42062,42129],"content":"The specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is out of range of the collection.","needQuote":true,"needEscape":true,"source":"The specified <code>index</code> is out of range of the collection."},{"pos":[42232,42307],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read-only.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only."},{"pos":[42410,42507],"content":"The specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The specified <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[43027,43246],"content":"Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection has a fixed size. This method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection has a fixed size.","pos":[0,122],"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection has a fixed size."},{"content":"This method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in all cases.","pos":[123,219],"source":" This method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases."}]},{"pos":[43379,43455],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in all cases.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases."},{"pos":[44074,44192],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection is read-only.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection is read-only."},{"pos":[44324,44538],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is read-only; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[45175,45264],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element at the specified index.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.UI.IStateManager\"></xref> element at the specified index."},{"pos":[45426,45469],"content":"The zero-based index of the element to get.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the element to get.","pos":[0,43]}]},{"pos":[45527,45562],"content":"The element at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element at the specified index.","pos":[0,35]}]},{"pos":[45771,45838],"content":"The specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is out of range of the collection.","needQuote":true,"needEscape":true,"source":"The specified <code>index</code> is out of range of the collection."},{"pos":[46385,46516],"content":"Removes the first occurrence of the specified object from the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Removes the first occurrence of the specified object from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."},{"pos":[46528,46900],"content":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the value is removed from the collection. The <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method is called before the object is removed, and the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method is called after the object is removed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt; method is called to validate <ph id=\"ph1\">`value`</ph> before the value is removed from the collection.","pos":[0,147],"source":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the value is removed from the collection."},{"content":"The &lt;xref:System.Web.UI.StateManagedCollection.OnRemove%2A&gt; method is called before the object is removed, and the &lt;xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A&gt; method is called after the object is removed.","pos":[148,372],"source":" The <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method is called before the object is removed, and the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method is called after the object is removed."}]},{"pos":[47035,47123],"content":"The object to remove from the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object to remove from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."},{"pos":[47322,47397],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read-only.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only."},{"pos":[47949,48041],"content":"Removes the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element at the specified index.","needQuote":true,"needEscape":true,"source":"Removes the <xref href=\"System.Web.UI.IStateManager\"></xref> element at the specified index."},{"pos":[48053,48425],"content":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the value is removed from the collection. The <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method is called before the object is removed, and the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method is called after the object is removed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt; method is called to validate <ph id=\"ph1\">`value`</ph> before the value is removed from the collection.","pos":[0,147],"source":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the value is removed from the collection."},{"content":"The &lt;xref:System.Web.UI.StateManagedCollection.OnRemove%2A&gt; method is called before the object is removed, and the &lt;xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A&gt; method is called after the object is removed.","pos":[148,372],"source":" The <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method is called before the object is removed, and the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method is called after the object is removed."}]},{"pos":[48558,48601],"content":"The zero-based index of the item to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the item to remove.","pos":[0,43]}]},{"pos":[48802,48877],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read-only.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only."},{"pos":[49452,49593],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection is saving changes to its view state.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection is saving changes to its view state."},{"pos":[49737,50015],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the collection is marked to save its own state and the state of all the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> items it contains; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection is marked to save its own state and the state of all the <xref href=\"System.Web.UI.IStateManager\"></xref> items it contains; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[50727,50919],"content":"Restores the previously saved view state of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection and the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> items it contains.","needQuote":true,"needEscape":true,"source":"Restores the previously saved view state of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection and the <xref href=\"System.Web.UI.IStateManager\"></xref> items it contains."},{"pos":[50932,51876],"content":"This method restores view-state information that was saved by the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method.       View state is the accumulation of the values of a server control's properties. These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property's value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).       This method is used primarily by control developers. You can override this method to specify how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method restores view-state information that was saved by the &lt;xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A&gt; method.","pos":[0,170],"source":"This method restores view-state information that was saved by the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method."},{"content":"View state is the accumulation of the values of a server control's properties.","pos":[177,255]},{"content":"These values are automatically placed in the server control's &lt;xref:System.Web.UI.Control.ViewState%2A&gt; property, which is an instance of the &lt;xref:System.Web.UI.StateBag&gt; class.","pos":[256,434],"source":" These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class."},{"content":"This property's value is then persisted to a string object after the save state stage of the server control life cycle.","pos":[435,554]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: ASP.NET Web Server Controls<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1)</ept>.","pos":[555,686],"source":" For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1)."},{"content":"This method is used primarily by control developers.","pos":[693,745]},{"content":"You can override this method to specify how a custom server control restores its view state.","pos":[746,838]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET State Management Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[839,940],"source":" For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[52037,52120],"content":"An object that represents the collection and collection elements' state to restore.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that represents the collection and collection elements' state to restore.","pos":[0,83]}]},{"pos":[52778,53003],"content":"Saves the changes to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection and each <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object it contains since the time the page was posted back to the server.","needQuote":true,"needEscape":true,"source":"Saves the changes to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection and each <xref href=\"System.Web.UI.IStateManager\"></xref> object it contains since the time the page was posted back to the server."},{"pos":[53016,54140],"content":"This method is used primarily by control developers.       View state is the accumulation of the values of a server control's properties. These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property's value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).       When view state is saved, this string object is returned to the client as a variable that is stored in an HTML hidden element (`<input type=\"hidden\">`). When you author custom server controls, you can improve efficiency by overriding this method and modifying your server control's <xref:System.Web.UI.Control.ViewState%2A> property. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1) and[ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is used primarily by control developers.","pos":[0,52]},{"content":"View state is the accumulation of the values of a server control's properties.","pos":[59,137]},{"content":"These values are automatically placed in the server control's &lt;xref:System.Web.UI.Control.ViewState%2A&gt; property, which is an instance of the &lt;xref:System.Web.UI.StateBag&gt; class.","pos":[138,316],"source":" These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class."},{"content":"This property's value is then persisted to a string object after the save state stage of the server control life cycle.","pos":[317,436]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: ASP.NET Web Server Controls<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1)</ept>.","pos":[437,568],"source":" For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1)."},{"content":"When view state is saved, this string object is returned to the client as a variable that is stored in an HTML hidden element (<ph id=\"ph1\">`&lt;input type=\"hidden\"&gt;`</ph>).","pos":[575,727],"source":"       When view state is saved, this string object is returned to the client as a variable that is stored in an HTML hidden element (`<input type=\"hidden\">`)."},{"content":"When you author custom server controls, you can improve efficiency by overriding this method and modifying your server control's &lt;xref:System.Web.UI.Control.ViewState%2A&gt; property.","pos":[728,908],"source":" When you author custom server controls, you can improve efficiency by overriding this method and modifying your server control's <xref:System.Web.UI.Control.ViewState%2A> property."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: ASP.NET Web Server Controls<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1)</ept> and<bpt id=\"p2\">[</bpt>ASP.NET State Management Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[909,1118],"source":" For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1) and[ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[54280,54577],"content":"The object that contains the changes to the view state of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> and the items it contains. If no view state is associated with the collection and its elements, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that contains the changes to the view state of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the items it contains.","pos":[0,146],"source":"The object that contains the changes to the view state of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> and the items it contains."},{"content":"If no view state is associated with the collection and its elements, this method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[147,297],"source":" If no view state is associated with the collection and its elements, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[55240,55501],"content":"Causes the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection and each of the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects it contains to track changes to their view state so they can be persisted across requests for the same page.","needQuote":true,"needEscape":true,"source":"Causes the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection and each of the <xref href=\"System.Web.UI.IStateManager\"></xref> objects it contains to track changes to their view state so they can be persisted across requests for the same page."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.StateManagedCollection\n  id: StateManagedCollection\n  children:\n  - System.Web.UI.StateManagedCollection.#ctor\n  - System.Web.UI.StateManagedCollection.Clear\n  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)\n  - System.Web.UI.StateManagedCollection.Count\n  - System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)\n  - System.Web.UI.StateManagedCollection.GetEnumerator\n  - System.Web.UI.StateManagedCollection.GetKnownTypes\n  - System.Web.UI.StateManagedCollection.OnClear\n  - System.Web.UI.StateManagedCollection.OnClearComplete\n  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)\n  - System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)\n  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)\n  - System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)\n  - System.Web.UI.StateManagedCollection.OnValidate(System.Object)\n  - System.Web.UI.StateManagedCollection.SetDirty\n  - System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)\n  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count\n  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized\n  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot\n  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\n  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState\n  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState\n  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState\n  langs:\n  - csharp\n  name: StateManagedCollection\n  nameWithType: StateManagedCollection\n  fullName: System.Web.UI.StateManagedCollection\n  type: Class\n  summary: Provides a base class for all strongly typed collections that manage <xref href=\"System.Web.UI.IStateManager\"></xref> objects.\n  remarks: \"The StateManagedCollection class is the base class for all strongly typed collections that store <xref:System.Web.UI.IStateManager> elements, including <xref:System.Web.UI.WebControls.DataControlFieldCollection>, <xref:System.Web.UI.WebControls.ParameterCollection>, <xref:System.Web.UI.WebControls.StyleCollection>, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>, and others. The StateManagedCollection collection manages its own state as well as the state of the elements it contains. Therefore, a call to <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> saves the state of the collection and the state of all the elements currently contained by the collection.  \\n  \\n The most important methods to consider when deriving from the StateManagedCollection class are <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>, <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>, <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>, <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>, and <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>. The <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> and <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> methods are used to store an index in view state for the type of a contained element. Storing an index rather than a fully qualified type name improves performance. The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called whenever elements of the collection are manipulated, and validates the elements according to business rules. Currently, the implementation of the <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method prohibits `null` objects from being stored in the collection; however, you can override this method to define your own validation behavior in a derived type. The <xref:System.Web.UI.StateManagedCollection.SetDirty%2A> method forces the entire collection to be serialized to view state, rather than just serializing changes made to state since the last time it was loaded. The <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> method is an abstract method you can implement to perform this same behavior at the element level.  \\n  \\n> [!IMPORTANT]\\n>  StateManagedCollection stores assembly-qualified type names of the collection items in view state. A site visitor could decode the view state and retrieve the type name. If this scenario creates a security concern in your Web site, you can manually encrypt the type name before placing it in the view state.\"\n  example:\n  - \"The following code example demonstrates how to derive a strongly typed collection class from StateManagedCollection to contain <xref:System.Web.UI.IStateManager> objects. In this example, the `CycleCollection` is derived to contain instances of the abstract `Cycle` class, which can be either `Bicycle` or `Tricycle` objects. The `Cycle` class implements the <xref:System.Web.UI.IStateManager> interface because it stores the value of the `CycleColor` property in view state.  \\n  \\n [!code-cs[Samples.AspNet.CycleCollection#1](~/add/codesnippet/csharp/t-system.web.ui.stateman_1.cs)]\\n [!code-vb[Samples.AspNet.CycleCollection#1](~/add/codesnippet/visualbasic/t-system.web.ui.stateman_1.vb)]\"\n  syntax:\n    content: 'public abstract class StateManagedCollection : System.Collections.IList, System.Web.UI.IStateManager'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IList\n  - System.Web.UI.IStateManager\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: StateManagedCollection()\n  nameWithType: StateManagedCollection.StateManagedCollection()\n  fullName: System.Web.UI.StateManagedCollection.StateManagedCollection()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> class.\n  remarks: Derived classes can override the constructor to provide customized implementation.\n  syntax:\n    content: protected StateManagedCollection ();\n    parameters: []\n  overload: System.Web.UI.StateManagedCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.Clear\n  id: Clear\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: StateManagedCollection.Clear()\n  fullName: System.Web.UI.StateManagedCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Removes all items from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method is called before the Clear method is called, and the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method is called after Clear has finished removing elements from the collection.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Web.UI.StateManagedCollection.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: CopyTo(Array,Int32)\n  nameWithType: StateManagedCollection.CopyTo(Array,Int32)\n  fullName: System.Web.UI.StateManagedCollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Copies the elements of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection to an array, starting at a particular array index.\n  remarks: \"The specified array must be of a compatible type.  \\n  \\n The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Web.UI.StateManagedCollection> collection.\"\n  syntax:\n    content: public void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional <xref:System.Array> that is the destination of the elements copied from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>. The <xref:System.Array> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in `array` at which copying begins.\n  overload: System.Web.UI.StateManagedCollection.CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>array</code> is multidimensional.  \\n  \\n \\\\- or -  \\n  \\n <code>index</code> is greater than or equal to the length of <code>array</code>.  \\n  \\n \\\\- or -  \\n  \\n The number of elements in the source <xref href=\\\"System.Web.UI.StateManagedCollection\\\"></xref> is greater than the available space from the <code>index</code> to the end of the destination <code>array</code>.\"\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.Count\n  id: Count\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: StateManagedCollection.Count\n  fullName: System.Web.UI.StateManagedCollection.Count\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the number of elements contained in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of elements contained in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)\n  id: CreateKnownType(System.Int32)\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: CreateKnownType(Int32)\n  nameWithType: StateManagedCollection.CreateKnownType(Int32)\n  fullName: System.Web.UI.StateManagedCollection.CreateKnownType(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, creates an instance of a class that implements <xref href=\"System.Web.UI.IStateManager\"></xref>. The type of object created is based on the specified member of the collection returned by the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes*> method.\n  remarks: The CreateKnownType method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=fullName> method. Derived collections override the CreateKnownType method to return a default instance of the <xref:System.Web.UI.IStateManager> type identified by the provided `index`, which maps to one of the types returned by the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method.\n  example:\n  - \"The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the CreateKnownType method. The `CycleCollection` implementation of CreateKnownType returns the default instance of either a `Bicycle` or `Tricycle` object, depending on the index passed. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \\n  \\n [!code-cs[Samples.AspNet.CycleCollection#2](~/add/codesnippet/csharp/m-system.web.ui.stateman_1_1.cs)]\\n [!code-vb[Samples.AspNet.CycleCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.stateman_1_1.vb)]\"\n  syntax:\n    content: protected virtual object CreateKnownType (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index, from the ordered list of types returned by <xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>, of the type of <xref href=\"System.Web.UI.IStateManager\"></xref> to create.\n    return:\n      type: System.Object\n      description: An instance of a class derived from <xref href=\"System.Web.UI.IStateManager\"></xref>, according to the <code>index</code> provided.\n  overload: System.Web.UI.StateManagedCollection.CreateKnownType*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: In all cases when not overridden in a derived class.\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: StateManagedCollection.GetEnumerator()\n  fullName: System.Web.UI.StateManagedCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Returns an iterator that iterates through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> that can be used to iterate through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.GetKnownTypes\n  id: GetKnownTypes\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: GetKnownTypes()\n  nameWithType: StateManagedCollection.GetKnownTypes()\n  fullName: System.Web.UI.StateManagedCollection.GetKnownTypes()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, gets an array of <xref href=\"System.Web.UI.IStateManager\"></xref> types that the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection can contain.\n  remarks: The GetKnownTypes method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method. Derived collections override the GetKnownTypes method to return an array of <xref:System.Type> objects that represent the types the collection can contain.\n  example:\n  - \"The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the GetKnownTypes method. The `CycleCollection` implementation of GetKnownTypes returns a <xref:System.Type> array of known types, including `Bicycle` and `Tricycle` types. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \\n  \\n [!code-cs[Samples.AspNet.CycleCollection#2](~/add/codesnippet/csharp/m-system.web.ui.stateman_0_1.cs)]\\n [!code-vb[Samples.AspNet.CycleCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.stateman_0_1.vb)]\"\n  syntax:\n    content: protected virtual Type[] GetKnownTypes ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: An ordered array of <xref:System.Type> objects that identify the types of <xref href=\"System.Web.UI.IStateManager\"></xref> objects the collection can contain. The default implementation returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.GetKnownTypes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.OnClear\n  id: OnClear\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: OnClear()\n  nameWithType: StateManagedCollection.OnClear()\n  fullName: System.Web.UI.StateManagedCollection.OnClear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, performs additional work before the <xref:System.Web.UI.StateManagedCollection.Clear*> method removes all items from the collection.\n  remarks: Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnClear method to perform any additional work before all items are removed from the collection using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method.\n  syntax:\n    content: protected virtual void OnClear ();\n    parameters: []\n  overload: System.Web.UI.StateManagedCollection.OnClear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.OnClearComplete\n  id: OnClearComplete\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: OnClearComplete()\n  nameWithType: StateManagedCollection.OnClearComplete()\n  fullName: System.Web.UI.StateManagedCollection.OnClearComplete()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, performs additional work after the <xref:System.Web.UI.StateManagedCollection.Clear*> method finishes removing all items from the collection.\n  remarks: Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnClearComplete method to perform any additional work after all items are removed from the collection using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method.\n  syntax:\n    content: protected virtual void OnClearComplete ();\n    parameters: []\n  overload: System.Web.UI.StateManagedCollection.OnClearComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)\n  id: OnInsert(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: OnInsert(Int32,Object)\n  nameWithType: StateManagedCollection.OnInsert(Int32,Object)\n  fullName: System.Web.UI.StateManagedCollection.OnInsert(Int32,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, performs additional work before the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; or &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt; method adds an item to the collection.\n  remarks: Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnInsert method to perform any additional work before an item is added to the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> method.\n  syntax:\n    content: protected virtual void OnInsert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which `value` should be inserted by the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; method.\n    - id: value\n      type: System.Object\n      description: The object to insert into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.OnInsert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)\n  id: OnInsertComplete(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: OnInsertComplete(Int32,Object)\n  nameWithType: StateManagedCollection.OnInsertComplete(Int32,Object)\n  fullName: System.Web.UI.StateManagedCollection.OnInsertComplete(Int32,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, performs additional work after the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; or &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt; method adds an item to the collection.\n  remarks: Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnInsertComplete method to perform any additional work after an item is added to the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> method.\n  syntax:\n    content: protected virtual void OnInsertComplete (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which `value` is inserted by the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; method.\n    - id: value\n      type: System.Object\n      description: The object inserted into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.OnInsertComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)\n  id: OnRemove(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: OnRemove(Int32,Object)\n  nameWithType: StateManagedCollection.OnRemove(Int32,Object)\n  fullName: System.Web.UI.StateManagedCollection.OnRemove(Int32,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, performs additional work before the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; or &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; method removes the specified item from the collection.\n  remarks: Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnRemove method to perform any additional work before an item is removed from the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> method.\n  syntax:\n    content: protected virtual void OnRemove (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the item to remove, which is used when &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; is called.\n    - id: value\n      type: System.Object\n      description: The object to remove from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>, which is used when &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; is called.\n  overload: System.Web.UI.StateManagedCollection.OnRemove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)\n  id: OnRemoveComplete(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: OnRemoveComplete(Int32,Object)\n  nameWithType: StateManagedCollection.OnRemoveComplete(Int32,Object)\n  fullName: System.Web.UI.StateManagedCollection.OnRemoveComplete(Int32,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, performs additional work after the &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; or &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; method removes the specified item from the collection.\n  remarks: Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the OnRemoveComplete method to perform any additional work after an item is removed from the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> method.\n  syntax:\n    content: protected virtual void OnRemoveComplete (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the item to remove, which is used when &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; is called.\n    - id: value\n      type: System.Object\n      description: The object removed from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>, which is used when &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; is called.\n  overload: System.Web.UI.StateManagedCollection.OnRemoveComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.OnValidate(System.Object)\n  id: OnValidate(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: OnValidate(Object)\n  nameWithType: StateManagedCollection.OnValidate(Object)\n  fullName: System.Web.UI.StateManagedCollection.OnValidate(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, validates an element of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  remarks: The OnValidate method is called to validate the object manipulated through the <xref:System.Web.UI.StateManagedCollection> implementation of the <xref:System.Collections.IList> interface methods. The default implementation is to verify that the object manipulated by the collection is not `null`; however, collections derived from <xref:System.Web.UI.StateManagedCollection> override the OnValidate method to perform any additional validation, such as type-checking.\n  syntax:\n    content: protected virtual void OnValidate (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Web.UI.IStateManager\"></xref> to validate.\n  overload: System.Web.UI.StateManagedCollection.OnValidate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.SetDirty\n  id: SetDirty\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: SetDirty()\n  nameWithType: StateManagedCollection.SetDirty()\n  fullName: System.Web.UI.StateManagedCollection.SetDirty()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Forces the entire <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection to be serialized into view state.\n  remarks: The SetDirty method forces the <xref:System.Web.UI.StateManagedCollection> collection to be serialized completely (whereas the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method saves only the change information). This is useful when a collection has changed in a significant way and change information is insufficient to recreate the object in memory from view state.\n  syntax:\n    content: public void SetDirty ();\n    parameters: []\n  overload: System.Web.UI.StateManagedCollection.SetDirty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)\n  id: SetDirtyObject(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: SetDirtyObject(Object)\n  nameWithType: StateManagedCollection.SetDirtyObject(Object)\n  fullName: System.Web.UI.StateManagedCollection.SetDirtyObject(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, instructs an <xref uid=\"langword_csharp_object\" name=\"object\" href=\"\"></xref> contained by the collection to record its entire state to view state, rather than recording only change information.\n  remarks: The SetDirtyObject method is called internally by the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>, <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>, and <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> methods.\n  example:\n  - \"The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the abstract SetDirtyObject method. The `CycleCollection` uses a <xref:System.Web.UI.StateBag> object to store its view-state information, and simply delegates the call to the <xref:System.Web.UI.StateBag.SetDirty%2A> method of the <xref:System.Web.UI.StateBag> object. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \\n  \\n [!code-cs[Samples.AspNet.CycleCollection#2](~/add/codesnippet/csharp/m-system.web.ui.stateman_2_1.cs)]\\n [!code-vb[Samples.AspNet.CycleCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.stateman_2_1.vb)]\"\n  syntax:\n    content: protected abstract void SetDirtyObject (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The <xref href=\"System.Web.UI.IStateManager\"></xref> that should serialize itself completely.\n  overload: System.Web.UI.StateManagedCollection.SetDirtyObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count\n  id: System#Collections#ICollection#Count\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.Count\n  nameWithType: StateManagedCollection.System.Collections.ICollection.Count\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.Count\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the number of elements contained in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  syntax:\n    content: int System.Collections.ICollection.Count { get; }\n    return:\n      type: System.Int32\n      description: The number of elements in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: StateManagedCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection is synchronized (thread safe). This method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases.\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: StateManagedCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection. This method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> in all cases.\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> in all cases.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Returns an iterator that iterates through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> that can be used to iterate through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: StateManagedCollection.System.Collections.IList.Add(Object)\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Adds an item to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> and <xref:System.Web.UI.StateManagedCollection.OnInsert%2A> methods are called before the element is added to the collection, and the <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> method is called after the element is added.\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The<xref uid=\"langword_csharp_ object \" name=\" object \" href=\"\"></xref>to add to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n    return:\n      type: System.Int32\n      description: The position at which the new element was inserted.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The specified <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear\n  id: System#Collections#IList#Clear\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Clear()\n  nameWithType: StateManagedCollection.System.Collections.IList.Clear()\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Clear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Removes all items from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method is called before the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method is called, and the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method is called after <xref:System.Web.UI.StateManagedCollection.Clear%2A> has finished removing elements from the collection.\n  syntax:\n    content: void IList.Clear ();\n    parameters: []\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: StateManagedCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Determines whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection contains a specific value.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the collection is checked.\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref uid=\"langword_csharp_object\" name=\"object\" href=\"\"></xref> to locate in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object is found in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is passed for the value parameter, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is returned.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: StateManagedCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Determines the index of a specified item in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the index is returned.\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to locate in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n    return:\n      type: System.Int32\n      description: The index of <code>value</code>, if it is found in the list; otherwise, -1.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: StateManagedCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Inserts an item into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection at the specified index.\n  remarks: If `index` is -1, `value` is appended to the beginning of the <xref:System.Web.UI.StateManagedCollection> collection. If `index` equals the number of items in the collection, `value` is appended to the end of the collection.\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which `value` should be inserted.\n    - id: value\n      type: System.Object\n      description: The object to insert into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The specified <code>index</code> is out of range of the collection.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The specified <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: StateManagedCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection has a fixed size. This method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases.\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: StateManagedCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection is read-only.\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: StateManagedCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the <xref href=\"System.Web.UI.IStateManager\"></xref> element at the specified index.\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to get.\n    return:\n      type: System.Object\n      description: The element at the specified index.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The specified <code>index</code> is out of range of the collection.\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: StateManagedCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Removes the first occurrence of the specified object from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the value is removed from the collection. The <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method is called before the object is removed, and the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method is called after the object is removed.\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to remove from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only.\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\n  id: System#Collections#IList#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: StateManagedCollection.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Removes the <xref href=\"System.Web.UI.IStateManager\"></xref> element at the specified index.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the value is removed from the collection. The <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method is called before the object is removed, and the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method is called after the object is removed.\n  syntax:\n    content: void IList.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the item to remove.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only.\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState\n  id: System#Web#UI#IStateManager#IsTrackingViewState\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Web.UI.IStateManager.IsTrackingViewState\n  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState\n  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection is saving changes to its view state.\n  syntax:\n    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection is marked to save its own state and the state of all the <xref href=\"System.Web.UI.IStateManager\"></xref> items it contains; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  id: System#Web#UI#IStateManager#LoadViewState(System.Object)\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Web.UI.IStateManager.LoadViewState(Object)\n  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)\n  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Restores the previously saved view state of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection and the <xref href=\"System.Web.UI.IStateManager\"></xref> items it contains.\n  remarks: \"This method restores view-state information that was saved by the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method.  \\n  \\n View state is the accumulation of the values of a server control's properties. These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property's value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).  \\n  \\n This method is used primarily by control developers. You can override this method to specify how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: void IStateManager.LoadViewState (object savedState);\n    parameters:\n    - id: savedState\n      type: System.Object\n      description: An object that represents the collection and collection elements' state to restore.\n  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState\n  id: System#Web#UI#IStateManager#SaveViewState\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Web.UI.IStateManager.SaveViewState()\n  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()\n  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Saves the changes to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection and each <xref href=\"System.Web.UI.IStateManager\"></xref> object it contains since the time the page was posted back to the server.\n  remarks: \"This method is used primarily by control developers.  \\n  \\n View state is the accumulation of the values of a server control's properties. These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property's value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).  \\n  \\n When view state is saved, this string object is returned to the client as a variable that is stored in an HTML hidden element (`<input type=\\\"hidden\\\">`). When you author custom server controls, you can improve efficiency by overriding this method and modifying your server control's <xref:System.Web.UI.Control.ViewState%2A> property. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1) and[ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: object IStateManager.SaveViewState ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The object that contains the changes to the view state of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> and the items it contains. If no view state is associated with the collection and its elements, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState\n  id: System#Web#UI#IStateManager#TrackViewState\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: System.Web.UI.IStateManager.TrackViewState()\n  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()\n  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Causes the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection and each of the <xref href=\"System.Web.UI.IStateManager\"></xref> objects it contains to track changes to their view state so they can be persisted across requests for the same page.\n  remarks: 'View state is the accumulation of the values of a server control''s properties. These values are automatically placed in the server control''s <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property''s value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).'\n  syntax:\n    content: void IStateManager.TrackViewState ();\n    parameters: []\n  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.Web.UI.StateManagedCollection.#ctor\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: StateManagedCollection()\n  nameWithType: StateManagedCollection.StateManagedCollection()\n  fullName: System.Web.UI.StateManagedCollection.StateManagedCollection()\n- uid: System.Web.UI.StateManagedCollection.Clear\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: StateManagedCollection.Clear()\n  fullName: System.Web.UI.StateManagedCollection.Clear()\n- uid: System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: CopyTo(Array,Int32)\n  nameWithType: StateManagedCollection.CopyTo(Array,Int32)\n  fullName: System.Web.UI.StateManagedCollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.StateManagedCollection.Count\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: Count\n  nameWithType: StateManagedCollection.Count\n  fullName: System.Web.UI.StateManagedCollection.Count\n- uid: System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: CreateKnownType(Int32)\n  nameWithType: StateManagedCollection.CreateKnownType(Int32)\n  fullName: System.Web.UI.StateManagedCollection.CreateKnownType(Int32)\n- uid: System.Web.UI.StateManagedCollection.GetEnumerator\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: StateManagedCollection.GetEnumerator()\n  fullName: System.Web.UI.StateManagedCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Web.UI.StateManagedCollection.GetKnownTypes\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: GetKnownTypes()\n  nameWithType: StateManagedCollection.GetKnownTypes()\n  fullName: System.Web.UI.StateManagedCollection.GetKnownTypes()\n- uid: System.Type[]\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.UI.StateManagedCollection.OnClear\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnClear()\n  nameWithType: StateManagedCollection.OnClear()\n  fullName: System.Web.UI.StateManagedCollection.OnClear()\n- uid: System.Web.UI.StateManagedCollection.OnClearComplete\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnClearComplete()\n  nameWithType: StateManagedCollection.OnClearComplete()\n  fullName: System.Web.UI.StateManagedCollection.OnClearComplete()\n- uid: System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnInsert(Int32,Object)\n  nameWithType: StateManagedCollection.OnInsert(Int32,Object)\n  fullName: System.Web.UI.StateManagedCollection.OnInsert(Int32,Object)\n- uid: System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnInsertComplete(Int32,Object)\n  nameWithType: StateManagedCollection.OnInsertComplete(Int32,Object)\n  fullName: System.Web.UI.StateManagedCollection.OnInsertComplete(Int32,Object)\n- uid: System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnRemove(Int32,Object)\n  nameWithType: StateManagedCollection.OnRemove(Int32,Object)\n  fullName: System.Web.UI.StateManagedCollection.OnRemove(Int32,Object)\n- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnRemoveComplete(Int32,Object)\n  nameWithType: StateManagedCollection.OnRemoveComplete(Int32,Object)\n  fullName: System.Web.UI.StateManagedCollection.OnRemoveComplete(Int32,Object)\n- uid: System.Web.UI.StateManagedCollection.OnValidate(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnValidate(Object)\n  nameWithType: StateManagedCollection.OnValidate(Object)\n  fullName: System.Web.UI.StateManagedCollection.OnValidate(Object)\n- uid: System.Web.UI.StateManagedCollection.SetDirty\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: SetDirty()\n  nameWithType: StateManagedCollection.SetDirty()\n  fullName: System.Web.UI.StateManagedCollection.SetDirty()\n- uid: System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: SetDirtyObject(Object)\n  nameWithType: StateManagedCollection.SetDirtyObject(Object)\n  fullName: System.Web.UI.StateManagedCollection.SetDirtyObject(Object)\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: StateManagedCollection.System.Collections.ICollection.Count\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.Count\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: StateManagedCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: StateManagedCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: StateManagedCollection.System.Collections.IList.Add(Object)\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Add(Object)\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Clear()\n  nameWithType: StateManagedCollection.System.Collections.IList.Clear()\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Clear()\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: StateManagedCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Contains(Object)\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: StateManagedCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IndexOf(Object)\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: StateManagedCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: StateManagedCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsFixedSize\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: StateManagedCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsReadOnly\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: StateManagedCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Item(Int32)\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: StateManagedCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Remove(Object)\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: StateManagedCollection.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.RemoveAt(Int32)\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.IsTrackingViewState\n  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState\n  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.LoadViewState(Object)\n  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)\n  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.SaveViewState()\n  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()\n  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.TrackViewState()\n  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()\n  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()\n- uid: System.Web.UI.StateManagedCollection.#ctor*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: StateManagedCollection\n  nameWithType: StateManagedCollection.StateManagedCollection\n- uid: System.Web.UI.StateManagedCollection.Clear*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: Clear\n  nameWithType: StateManagedCollection.Clear\n- uid: System.Web.UI.StateManagedCollection.CopyTo*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: StateManagedCollection.CopyTo\n- uid: System.Web.UI.StateManagedCollection.Count*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: Count\n  nameWithType: StateManagedCollection.Count\n- uid: System.Web.UI.StateManagedCollection.CreateKnownType*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: CreateKnownType\n  nameWithType: StateManagedCollection.CreateKnownType\n- uid: System.Web.UI.StateManagedCollection.GetEnumerator*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: StateManagedCollection.GetEnumerator\n- uid: System.Web.UI.StateManagedCollection.GetKnownTypes*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: GetKnownTypes\n  nameWithType: StateManagedCollection.GetKnownTypes\n- uid: System.Web.UI.StateManagedCollection.OnClear*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnClear\n  nameWithType: StateManagedCollection.OnClear\n- uid: System.Web.UI.StateManagedCollection.OnClearComplete*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnClearComplete\n  nameWithType: StateManagedCollection.OnClearComplete\n- uid: System.Web.UI.StateManagedCollection.OnInsert*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnInsert\n  nameWithType: StateManagedCollection.OnInsert\n- uid: System.Web.UI.StateManagedCollection.OnInsertComplete*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnInsertComplete\n  nameWithType: StateManagedCollection.OnInsertComplete\n- uid: System.Web.UI.StateManagedCollection.OnRemove*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnRemove\n  nameWithType: StateManagedCollection.OnRemove\n- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnRemoveComplete\n  nameWithType: StateManagedCollection.OnRemoveComplete\n- uid: System.Web.UI.StateManagedCollection.OnValidate*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnValidate\n  nameWithType: StateManagedCollection.OnValidate\n- uid: System.Web.UI.StateManagedCollection.SetDirty*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: SetDirty\n  nameWithType: StateManagedCollection.SetDirty\n- uid: System.Web.UI.StateManagedCollection.SetDirtyObject*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: SetDirtyObject\n  nameWithType: StateManagedCollection.SetDirtyObject\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: StateManagedCollection.System.Collections.ICollection.Count\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: StateManagedCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: StateManagedCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: StateManagedCollection.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: StateManagedCollection.System.Collections.IList.Add\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Clear\n  nameWithType: StateManagedCollection.System.Collections.IList.Clear\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Contains\n  nameWithType: StateManagedCollection.System.Collections.IList.Contains\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf\n  nameWithType: StateManagedCollection.System.Collections.IList.IndexOf\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: StateManagedCollection.System.Collections.IList.Insert\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: StateManagedCollection.System.Collections.IList.IsFixedSize\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: StateManagedCollection.System.Collections.IList.IsReadOnly\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Item\n  nameWithType: StateManagedCollection.System.Collections.IList.Item\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: StateManagedCollection.System.Collections.IList.Remove\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.RemoveAt\n  nameWithType: StateManagedCollection.System.Collections.IList.RemoveAt\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.IsTrackingViewState\n  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.LoadViewState\n  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.LoadViewState\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.SaveViewState\n  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.SaveViewState\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.TrackViewState\n  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.TrackViewState\n"}