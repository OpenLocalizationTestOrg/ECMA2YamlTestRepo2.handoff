{"nodes":[{"pos":[615,646],"content":"Identifies a context attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies a context attribute.","pos":[0,31]}]},{"pos":[658,962],"content":"The IContextAttribute class is exposed from all context attributes. The attributes contribute a property that resides in a context and enforces a specific policy for the objects created in that context. For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IContextAttribute class is exposed from all context attributes.","pos":[0,67]},{"content":"The attributes contribute a property that resides in a context and enforces a specific policy for the objects created in that context.","pos":[68,202]},{"content":"For more information about using attributes, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[203,304],"source":" For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[1811,1873],"content":"Returns context properties to the caller in the given message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns context properties to the caller in the given message.","pos":[0,62]}]},{"pos":[1885,2486],"content":"The GetPropertiesForNewContext method can add context properties directly to the <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties%2A> property list in the <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage> interface. The default implementation in the <xref:System.Runtime.Remoting.Contexts.ContextAttribute> class will add this to the context property list. Context attributes are free to override GetPropertiesForNewContext and can implement their own behavior. For example, they can add to the list a new class that implements the context property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetPropertiesForNewContext method can add context properties directly to the <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties%2A> property list in the <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage> interface. The default implementation in the <xref:System.Runtime.Remoting.Contexts.ContextAttribute> class will add this to the context property list. Context attributes are free to override GetPropertiesForNewContext and can implement their own behavior. For example, they can add to the list a new class that implements the context property.","pos":[0,601],"nodes":[{"content":"The GetPropertiesForNewContext method can add context properties directly to the &lt;xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties%2A&gt; property list in the &lt;xref:System.Runtime.Remoting.Activation.IConstructionCallMessage&gt; interface.","pos":[0,267],"source":"The GetPropertiesForNewContext method can add context properties directly to the <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties%2A> property list in the <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage> interface."},{"content":"The default implementation in the &lt;xref:System.Runtime.Remoting.Contexts.ContextAttribute&gt; class will add this to the context property list.","pos":[268,408],"source":" The default implementation in the <xref:System.Runtime.Remoting.Contexts.ContextAttribute> class will add this to the context property list."},{"content":"Context attributes are free to override GetPropertiesForNewContext and can implement their own behavior.","pos":[409,513]},{"content":"For example, they can add to the list a new class that implements the context property.","pos":[514,601]}]}]},{"pos":[2737,2861],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Activation.IConstructionCallMessage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to which to add the context properties.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Remoting.Activation.IConstructionCallMessage\"></xref> to which to add the context properties."},{"pos":[3708,3816],"content":"Returns a Boolean value indicating whether the specified context meets the context attribute's requirements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a Boolean value indicating whether the specified context meets the context attribute's requirements.","pos":[0,108]}]},{"pos":[4079,4138],"content":"The context to check against the current context attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The context to check against the current context attribute.","pos":[0,59]}]},{"pos":[4244,4334],"content":"The construction call, parameters of which need to be checked against the current context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The construction call, parameters of which need to be checked against the current context.","pos":[0,90]}]},{"pos":[4393,4562],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the passed in context is okay; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the passed in context is okay; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Contexts.IContextAttribute\n  id: IContextAttribute\n  children:\n  - System.Runtime.Remoting.Contexts.IContextAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  - System.Runtime.Remoting.Contexts.IContextAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  langs:\n  - csharp\n  name: IContextAttribute\n  nameWithType: IContextAttribute\n  fullName: System.Runtime.Remoting.Contexts.IContextAttribute\n  type: Interface\n  summary: Identifies a context attribute.\n  remarks: The IContextAttribute class is exposed from all context attributes. The attributes contribute a property that resides in a context and enforces a specific policy for the objects created in that context. For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IContextAttribute\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.IContextAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  id: GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  parent: System.Runtime.Remoting.Contexts.IContextAttribute\n  langs:\n  - csharp\n  name: GetPropertiesForNewContext(IConstructionCallMessage)\n  nameWithType: IContextAttribute.GetPropertiesForNewContext(IConstructionCallMessage)\n  fullName: System.Runtime.Remoting.Contexts.IContextAttribute.GetPropertiesForNewContext(IConstructionCallMessage)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Returns context properties to the caller in the given message.\n  remarks: The GetPropertiesForNewContext method can add context properties directly to the <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties%2A> property list in the <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage> interface. The default implementation in the <xref:System.Runtime.Remoting.Contexts.ContextAttribute> class will add this to the context property list. Context attributes are free to override GetPropertiesForNewContext and can implement their own behavior. For example, they can add to the list a new class that implements the context property.\n  syntax:\n    content: public void GetPropertiesForNewContext (System.Runtime.Remoting.Activation.IConstructionCallMessage msg);\n    parameters:\n    - id: msg\n      type: System.Runtime.Remoting.Activation.IConstructionCallMessage\n      description: The <xref href=\"System.Runtime.Remoting.Activation.IConstructionCallMessage\"></xref> to which to add the context properties.\n  overload: System.Runtime.Remoting.Contexts.IContextAttribute.GetPropertiesForNewContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.IContextAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  id: IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  parent: System.Runtime.Remoting.Contexts.IContextAttribute\n  langs:\n  - csharp\n  name: IsContextOK(Context,IConstructionCallMessage)\n  nameWithType: IContextAttribute.IsContextOK(Context,IConstructionCallMessage)\n  fullName: System.Runtime.Remoting.Contexts.IContextAttribute.IsContextOK(Context,IConstructionCallMessage)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Returns a Boolean value indicating whether the specified context meets the context attribute's requirements.\n  syntax:\n    content: public bool IsContextOK (System.Runtime.Remoting.Contexts.Context ctx, System.Runtime.Remoting.Activation.IConstructionCallMessage msg);\n    parameters:\n    - id: ctx\n      type: System.Runtime.Remoting.Contexts.Context\n      description: The context to check against the current context attribute.\n    - id: msg\n      type: System.Runtime.Remoting.Activation.IConstructionCallMessage\n      description: The construction call, parameters of which need to be checked against the current context.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the passed in context is okay; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.Remoting.Contexts.IContextAttribute.IsContextOK*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.Remoting.Contexts.IContextAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  parent: System.Runtime.Remoting.Contexts.IContextAttribute\n  isExternal: false\n  name: GetPropertiesForNewContext(IConstructionCallMessage)\n  nameWithType: IContextAttribute.GetPropertiesForNewContext(IConstructionCallMessage)\n  fullName: System.Runtime.Remoting.Contexts.IContextAttribute.GetPropertiesForNewContext(IConstructionCallMessage)\n- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage\n  parent: System.Runtime.Remoting.Activation\n  isExternal: false\n  name: IConstructionCallMessage\n  nameWithType: IConstructionCallMessage\n  fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage\n- uid: System.Runtime.Remoting.Contexts.IContextAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  parent: System.Runtime.Remoting.Contexts.IContextAttribute\n  isExternal: false\n  name: IsContextOK(Context,IConstructionCallMessage)\n  nameWithType: IContextAttribute.IsContextOK(Context,IConstructionCallMessage)\n  fullName: System.Runtime.Remoting.Contexts.IContextAttribute.IsContextOK(Context,IConstructionCallMessage)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.Remoting.Contexts.Context\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: Context\n  nameWithType: Context\n  fullName: System.Runtime.Remoting.Contexts.Context\n- uid: System.Runtime.Remoting.Contexts.IContextAttribute.GetPropertiesForNewContext*\n  parent: System.Runtime.Remoting.Contexts.IContextAttribute\n  isExternal: false\n  name: GetPropertiesForNewContext\n  nameWithType: IContextAttribute.GetPropertiesForNewContext\n- uid: System.Runtime.Remoting.Contexts.IContextAttribute.IsContextOK*\n  parent: System.Runtime.Remoting.Contexts.IContextAttribute\n  isExternal: false\n  name: IsContextOK\n  nameWithType: IContextAttribute.IsContextOK\n"}