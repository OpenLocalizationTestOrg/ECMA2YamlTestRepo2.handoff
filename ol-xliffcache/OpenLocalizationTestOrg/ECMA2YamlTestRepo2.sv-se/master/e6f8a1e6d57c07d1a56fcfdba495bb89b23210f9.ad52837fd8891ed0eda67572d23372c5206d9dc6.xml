{"nodes":[{"pos":[842,903],"content":"Represents an activity timer extension that can be persisted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an activity timer extension that can be persisted.","pos":[0,61]}]},{"pos":[916,1260],"content":"A DurableTimerExtension object can only be associated with a single workflow instance. If a DurableTimerExtension object is used with more than one workflow instance, an <xref:System.InvalidOperationException> is thrown with the following message:      ```Output   This TimerExtension has already been attached to a workflow instance.   ```","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A DurableTimerExtension object can only be associated with a single workflow instance.","pos":[0,86]},{"content":"If a DurableTimerExtension object is used with more than one workflow instance, an &lt;xref:System.InvalidOperationException&gt; is thrown with the following message:      <ph id=\"ph1\">```Output   This TimerExtension has already been attached to a workflow instance.   ```</ph>","pos":[87,340],"source":" If a DurableTimerExtension object is used with more than one workflow instance, an <xref:System.InvalidOperationException> is thrown with the following message:      ```Output   This TimerExtension has already been attached to a workflow instance.   ```"}]},{"pos":[2296,2404],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.DurableTimerExtension\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Activities.Statements.DurableTimerExtension\"></xref> class."},{"pos":[2994,3027],"content":"Terminates all registered timers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Terminates all registered timers.","pos":[0,33]}]},{"pos":[3690,3766],"content":"Returns an enumerator that iterates over the collection of timer extensions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that iterates over the collection of timer extensions.","pos":[0,76]}]},{"pos":[3996,4010],"content":"An enumerator.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerator.","pos":[0,14]}]},{"pos":[4653,4747],"content":"Removes a timer object from the table of registered timers for the current workflow operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a timer object from the table of registered timers for the current workflow operation.","pos":[0,94]}]},{"pos":[4941,5059],"content":"A point at which a workflow or activity can passively wait to be resumed following the expiration of the timer object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A point at which a workflow or activity can passively wait to be resumed following the expiration of the timer object.","pos":[0,118]}]},{"pos":[5761,5913],"content":"Adds a timer object that contains the specified time span and bookmark information to the table of registered timers for the current workflow operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a timer object that contains the specified time span and bookmark information to the table of registered timers for the current workflow operation.","pos":[0,152]}]},{"pos":[6115,6242],"content":"A time span object that is added to the timer registration table entry in a workflow operation along with callback information.","needQuote":true,"needEscape":true,"nodes":[{"content":"A time span object that is added to the timer registration table entry in a workflow operation along with callback information.","pos":[0,127]}]},{"pos":[6320,6436],"content":"A point at which a workflow or activity can passively wait to be resumed following the expiration of a timer object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A point at which a workflow or activity can passively wait to be resumed following the expiration of a timer object.","pos":[0,116]}]},{"pos":[7142,7210],"content":"Establishes the specified workflow instance as the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Establishes the specified workflow instance as the current instance.","pos":[0,68]}]},{"pos":[7223,7639],"content":"A <xref:System.Activities.Statements.DurableTimerExtension> object can only be associated with a single workflow instance. If a <xref:System.Activities.Statements.DurableTimerExtension> object is used with more than one workflow instance, an <xref:System.InvalidOperationException> is thrown with the following message:      ```Output   This TimerExtension has already been attached to a workflow instance.   ```","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A &lt;xref:System.Activities.Statements.DurableTimerExtension&gt; object can only be associated with a single workflow instance.","pos":[0,122],"source":"A <xref:System.Activities.Statements.DurableTimerExtension> object can only be associated with a single workflow instance."},{"content":"If a &lt;xref:System.Activities.Statements.DurableTimerExtension&gt; object is used with more than one workflow instance, an &lt;xref:System.InvalidOperationException&gt; is thrown with the following message:      <ph id=\"ph1\">```Output   This TimerExtension has already been attached to a workflow instance.   ```</ph>","pos":[123,412],"source":" If a <xref:System.Activities.Statements.DurableTimerExtension> object is used with more than one workflow instance, an <xref:System.InvalidOperationException> is thrown with the following message:      ```Output   This TimerExtension has already been attached to a workflow instance.   ```"}]},{"pos":[7870,7908],"content":"The workflow instance to make current.","needQuote":true,"needEscape":true,"nodes":[{"content":"The workflow instance to make current.","pos":[0,38]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.DurableTimerExtension\n  id: DurableTimerExtension\n  children:\n  - System.Activities.Statements.DurableTimerExtension.#ctor\n  - System.Activities.Statements.DurableTimerExtension.Dispose\n  - System.Activities.Statements.DurableTimerExtension.GetAdditionalExtensions\n  - System.Activities.Statements.DurableTimerExtension.OnCancelTimer(System.Activities.Bookmark)\n  - System.Activities.Statements.DurableTimerExtension.OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  - System.Activities.Statements.DurableTimerExtension.SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  langs:\n  - csharp\n  name: DurableTimerExtension\n  nameWithType: DurableTimerExtension\n  fullName: System.Activities.Statements.DurableTimerExtension\n  type: Class\n  summary: Represents an activity timer extension that can be persisted.\n  remarks: \"A DurableTimerExtension object can only be associated with a single workflow instance. If a DurableTimerExtension object is used with more than one workflow instance, an <xref:System.InvalidOperationException> is thrown with the following message:  \\n  \\n```Output  \\nThis TimerExtension has already been attached to a workflow instance.  \\n```\"\n  syntax:\n    content: 'public class DurableTimerExtension : System.Activities.Statements.TimerExtension, IDisposable, System.Activities.Hosting.IWorkflowInstanceExtension'\n  inheritance:\n  - System.Object\n  - System.Activities.Statements.TimerExtension\n  implements:\n  - System.Activities.Hosting.IWorkflowInstanceExtension\n  - System.IDisposable\n  inheritedMembers:\n  - System.Activities.Statements.TimerExtension.CancelTimer(System.Activities.Bookmark)\n  - System.Activities.Statements.TimerExtension.RegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  platform:\n  - net462\n- uid: System.Activities.Statements.DurableTimerExtension.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.DurableTimerExtension\n  langs:\n  - csharp\n  name: DurableTimerExtension()\n  nameWithType: DurableTimerExtension.DurableTimerExtension()\n  fullName: System.Activities.Statements.DurableTimerExtension.DurableTimerExtension()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.DurableTimerExtension\"></xref> class.\n  syntax:\n    content: public DurableTimerExtension ();\n    parameters: []\n  overload: System.Activities.Statements.DurableTimerExtension.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.DurableTimerExtension.Dispose\n  id: Dispose\n  parent: System.Activities.Statements.DurableTimerExtension\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: DurableTimerExtension.Dispose()\n  fullName: System.Activities.Statements.DurableTimerExtension.Dispose()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Terminates all registered timers.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Activities.Statements.DurableTimerExtension.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.DurableTimerExtension.GetAdditionalExtensions\n  id: GetAdditionalExtensions\n  parent: System.Activities.Statements.DurableTimerExtension\n  langs:\n  - csharp\n  name: GetAdditionalExtensions()\n  nameWithType: DurableTimerExtension.GetAdditionalExtensions()\n  fullName: System.Activities.Statements.DurableTimerExtension.GetAdditionalExtensions()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Returns an enumerator that iterates over the collection of timer extensions.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<object> GetAdditionalExtensions ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Object}\n      description: An enumerator.\n  overload: System.Activities.Statements.DurableTimerExtension.GetAdditionalExtensions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.DurableTimerExtension.OnCancelTimer(System.Activities.Bookmark)\n  id: OnCancelTimer(System.Activities.Bookmark)\n  parent: System.Activities.Statements.DurableTimerExtension\n  langs:\n  - csharp\n  name: OnCancelTimer(Bookmark)\n  nameWithType: DurableTimerExtension.OnCancelTimer(Bookmark)\n  fullName: System.Activities.Statements.DurableTimerExtension.OnCancelTimer(Bookmark)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Removes a timer object from the table of registered timers for the current workflow operation.\n  syntax:\n    content: protected override void OnCancelTimer (System.Activities.Bookmark bookmark);\n    parameters:\n    - id: bookmark\n      type: System.Activities.Bookmark\n      description: A point at which a workflow or activity can passively wait to be resumed following the expiration of the timer object.\n  overload: System.Activities.Statements.DurableTimerExtension.OnCancelTimer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.DurableTimerExtension.OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  id: OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  parent: System.Activities.Statements.DurableTimerExtension\n  langs:\n  - csharp\n  name: OnRegisterTimer(TimeSpan,Bookmark)\n  nameWithType: DurableTimerExtension.OnRegisterTimer(TimeSpan,Bookmark)\n  fullName: System.Activities.Statements.DurableTimerExtension.OnRegisterTimer(TimeSpan,Bookmark)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Adds a timer object that contains the specified time span and bookmark information to the table of registered timers for the current workflow operation.\n  syntax:\n    content: protected override void OnRegisterTimer (TimeSpan timeout, System.Activities.Bookmark bookmark);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: A time span object that is added to the timer registration table entry in a workflow operation along with callback information.\n    - id: bookmark\n      type: System.Activities.Bookmark\n      description: A point at which a workflow or activity can passively wait to be resumed following the expiration of a timer object.\n  overload: System.Activities.Statements.DurableTimerExtension.OnRegisterTimer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.DurableTimerExtension.SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  id: SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  parent: System.Activities.Statements.DurableTimerExtension\n  langs:\n  - csharp\n  name: SetInstance(WorkflowInstanceProxy)\n  nameWithType: DurableTimerExtension.SetInstance(WorkflowInstanceProxy)\n  fullName: System.Activities.Statements.DurableTimerExtension.SetInstance(WorkflowInstanceProxy)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Establishes the specified workflow instance as the current instance.\n  remarks: \"A <xref:System.Activities.Statements.DurableTimerExtension> object can only be associated with a single workflow instance. If a <xref:System.Activities.Statements.DurableTimerExtension> object is used with more than one workflow instance, an <xref:System.InvalidOperationException> is thrown with the following message:  \\n  \\n```Output  \\nThis TimerExtension has already been attached to a workflow instance.  \\n```\"\n  syntax:\n    content: public virtual void SetInstance (System.Activities.Hosting.WorkflowInstanceProxy instance);\n    parameters:\n    - id: instance\n      type: System.Activities.Hosting.WorkflowInstanceProxy\n      description: The workflow instance to make current.\n  overload: System.Activities.Statements.DurableTimerExtension.SetInstance*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.Statements.TimerExtension\n  isExternal: false\n  name: System.Activities.Statements.TimerExtension\n- uid: System.Activities.Statements.DurableTimerExtension.#ctor\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: DurableTimerExtension()\n  nameWithType: DurableTimerExtension.DurableTimerExtension()\n  fullName: System.Activities.Statements.DurableTimerExtension.DurableTimerExtension()\n- uid: System.Activities.Statements.DurableTimerExtension.Dispose\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: Dispose()\n  nameWithType: DurableTimerExtension.Dispose()\n  fullName: System.Activities.Statements.DurableTimerExtension.Dispose()\n- uid: System.Activities.Statements.DurableTimerExtension.GetAdditionalExtensions\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: GetAdditionalExtensions()\n  nameWithType: DurableTimerExtension.GetAdditionalExtensions()\n  fullName: System.Activities.Statements.DurableTimerExtension.GetAdditionalExtensions()\n- uid: System.Collections.Generic.IEnumerable{System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Object>\n  nameWithType: IEnumerable<Object>\n  fullName: System.Collections.Generic.IEnumerable<System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.DurableTimerExtension.OnCancelTimer(System.Activities.Bookmark)\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: OnCancelTimer(Bookmark)\n  nameWithType: DurableTimerExtension.OnCancelTimer(Bookmark)\n  fullName: System.Activities.Statements.DurableTimerExtension.OnCancelTimer(Bookmark)\n- uid: System.Activities.Bookmark\n  parent: System.Activities\n  isExternal: false\n  name: Bookmark\n  nameWithType: Bookmark\n  fullName: System.Activities.Bookmark\n- uid: System.Activities.Statements.DurableTimerExtension.OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: OnRegisterTimer(TimeSpan,Bookmark)\n  nameWithType: DurableTimerExtension.OnRegisterTimer(TimeSpan,Bookmark)\n  fullName: System.Activities.Statements.DurableTimerExtension.OnRegisterTimer(TimeSpan,Bookmark)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Activities.Statements.DurableTimerExtension.SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: SetInstance(WorkflowInstanceProxy)\n  nameWithType: DurableTimerExtension.SetInstance(WorkflowInstanceProxy)\n  fullName: System.Activities.Statements.DurableTimerExtension.SetInstance(WorkflowInstanceProxy)\n- uid: System.Activities.Hosting.WorkflowInstanceProxy\n  parent: System.Activities.Hosting\n  isExternal: false\n  name: WorkflowInstanceProxy\n  nameWithType: WorkflowInstanceProxy\n  fullName: System.Activities.Hosting.WorkflowInstanceProxy\n- uid: System.Activities.Statements.DurableTimerExtension.#ctor*\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: DurableTimerExtension\n  nameWithType: DurableTimerExtension.DurableTimerExtension\n- uid: System.Activities.Statements.DurableTimerExtension.Dispose*\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: Dispose\n  nameWithType: DurableTimerExtension.Dispose\n- uid: System.Activities.Statements.DurableTimerExtension.GetAdditionalExtensions*\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: GetAdditionalExtensions\n  nameWithType: DurableTimerExtension.GetAdditionalExtensions\n- uid: System.Activities.Statements.DurableTimerExtension.OnCancelTimer*\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: OnCancelTimer\n  nameWithType: DurableTimerExtension.OnCancelTimer\n- uid: System.Activities.Statements.DurableTimerExtension.OnRegisterTimer*\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: OnRegisterTimer\n  nameWithType: DurableTimerExtension.OnRegisterTimer\n- uid: System.Activities.Statements.DurableTimerExtension.SetInstance*\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: SetInstance\n  nameWithType: DurableTimerExtension.SetInstance\n"}