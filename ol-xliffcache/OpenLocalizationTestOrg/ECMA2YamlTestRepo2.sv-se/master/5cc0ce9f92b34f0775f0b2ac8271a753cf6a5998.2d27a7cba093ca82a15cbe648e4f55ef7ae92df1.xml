{"nodes":[{"pos":[728,826],"content":"The Versioned module contains procedures used to interact with objects, applications, and systems.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Versioned module contains procedures used to interact with objects, applications, and systems.","pos":[0,98]}]},{"pos":[839,1241],"content":"This module supports the Visual Basic language keywords and run-time library members that run other programs, call a method or property, sound a beep from the computer, provide a command-line string, manipulate COM objects, and control dialog boxes.       This class is the Visual Basic 2005 updated version of the <xref:Microsoft.VisualBasic.Interaction> class (which was used in Visual Basic 2003).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This module supports the Visual Basic language keywords and run-time library members that run other programs, call a method or property, sound a beep from the computer, provide a command-line string, manipulate COM objects, and control dialog boxes.       This class is the Visual Basic 2005 updated version of the <xref:Microsoft.VisualBasic.Interaction> class (which was used in Visual Basic 2003).","pos":[0,400],"nodes":[{"content":"This module supports the Visual Basic language keywords and run-time library members that run other programs, call a method or property, sound a beep from the computer, provide a command-line string, manipulate COM objects, and control dialog boxes.","pos":[0,249]},{"content":"This class is the Visual Basic 2005 updated version of the &lt;xref:Microsoft.VisualBasic.Interaction&gt; class (which was used in Visual Basic 2003).","pos":[256,400],"source":"       This class is the Visual Basic 2005 updated version of the <xref:Microsoft.VisualBasic.Interaction> class (which was used in Visual Basic 2003)."}]}]},{"pos":[2158,2233],"content":"Executes a method on an object, or sets or returns a property on an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes a method on an object, or sets or returns a property on an object.","pos":[0,75]}]},{"pos":[2471,2603],"content":"Required. <xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"></xref>. A pointer to the object exposing the property or method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[10,75],"source":"<xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"></xref>."},{"content":"A pointer to the object exposing the property or method.","pos":[76,132]}]},{"pos":[2670,2826],"content":"Required. <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. A string expression containing the name of the property or method on the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[10,75],"source":"<xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>."},{"content":"A string expression containing the name of the property or method on the object.","pos":[76,156]}]},{"pos":[2911,3329],"content":"Required. An enumeration member of type <xref href=\"Microsoft.VisualBasic.CallType\"></xref> representing the type of procedure being called. The value of <xref uid=\"langword_csharp_CallType\" name=\"CallType\" href=\"\"></xref> can be <xref uid=\"langword_csharp_Method\" name=\"Method\" href=\"\"></xref>, <xref uid=\"langword_csharp_Get\" name=\"Get\" href=\"\"></xref>, or <xref uid=\"langword_csharp_Set\" name=\"Set\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"An enumeration member of type <bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.CallType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> representing the type of procedure being called.","pos":[10,140],"source":" An enumeration member of type <xref href=\"Microsoft.VisualBasic.CallType\"></xref> representing the type of procedure being called."},{"content":"The value of <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_CallType\" name=\"CallType\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can be <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Method\" name=\"Method\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_Get\" name=\"Get\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, or <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_Set\" name=\"Set\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[141,418],"source":" The value of <xref uid=\"langword_csharp_CallType\" name=\"CallType\" href=\"\"></xref> can be <xref uid=\"langword_csharp_Method\" name=\"Method\" href=\"\"></xref>, <xref uid=\"langword_csharp_Get\" name=\"Get\" href=\"\"></xref>, or <xref uid=\"langword_csharp_Set\" name=\"Set\" href=\"\"></xref>."}]},{"pos":[3397,3576],"content":"Optional. <xref uid=\"langword_csharp_ParamArray\" name=\"ParamArray\" href=\"\"></xref>. A parameter array containing the arguments to be passed to the property or method being called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Optional.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ParamArray\" name=\"ParamArray\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[10,83],"source":"<xref uid=\"langword_csharp_ParamArray\" name=\"ParamArray\" href=\"\"></xref>."},{"content":"A parameter array containing the arguments to be passed to the property or method being called.","pos":[84,179]}]},{"pos":[3634,3709],"content":"Executes a method on an object, or sets or returns a property on an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes a method on an object, or sets or returns a property on an object.","pos":[0,75]}]},{"pos":[4281,4367],"content":"Returns a Boolean value indicating whether an expression can be evaluated as a number.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a Boolean value indicating whether an expression can be evaluated as a number.","pos":[0,86]}]},{"pos":[4523,4609],"content":"Required. <xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"></xref> expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> expression.","pos":[10,86],"source":"<xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"></xref> expression."}]},{"pos":[4668,4754],"content":"Returns a Boolean value indicating whether an expression can be evaluated as a number.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a Boolean value indicating whether an expression can be evaluated as a number.","pos":[0,86]}]},{"pos":[5350,5424],"content":"Returns a string value containing the system data type name of a variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string value containing the system data type name of a variable.","pos":[0,74]}]},{"pos":[5579,5643],"content":"Required. A string variable containing a Visual Basic type name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required. A string variable containing a Visual Basic type name.","pos":[0,64],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"A string variable containing a Visual Basic type name.","pos":[10,64]}]}]},{"pos":[5701,5775],"content":"Returns a string value containing the system data type name of a variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string value containing the system data type name of a variable.","pos":[0,74]}]},{"pos":[6346,6419],"content":"Returns a string value containing data type information about a variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string value containing data type information about a variable.","pos":[0,73]}]},{"pos":[6576,6866],"content":"Required. <xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"></xref> variable. If <xref uid=\"langword_csharp_Option Strict\" name=\"Option Strict\" href=\"\"></xref> is <xref uid=\"langword_csharp_Off\" name=\"Off\" href=\"\"></xref>, you can pass a variable of any data type except a structure.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> variable.","pos":[10,84],"source":"<xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"></xref> variable."},{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Option Strict\" name=\"Option Strict\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Off\" name=\"Off\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, you can pass a variable of any data type except a structure.","pos":[85,290],"source":" If <xref uid=\"langword_csharp_Option Strict\" name=\"Option Strict\" href=\"\"></xref> is <xref uid=\"langword_csharp_Off\" name=\"Off\" href=\"\"></xref>, you can pass a variable of any data type except a structure."}]},{"pos":[6924,6997],"content":"Returns a string value containing data type information about a variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string value containing data type information about a variable.","pos":[0,73]}]},{"pos":[7572,7652],"content":"Returns a string value containing the Visual Basic data type name of a variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string value containing the Visual Basic data type name of a variable.","pos":[0,80]}]},{"pos":[7811,7896],"content":"Required. String variable containing a type name used by the common language runtime.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required. String variable containing a type name used by the common language runtime.","pos":[0,85],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"String variable containing a type name used by the common language runtime.","pos":[10,85]}]}]},{"pos":[7954,8034],"content":"Returns a string value containing the Visual Basic data type name of a variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string value containing the Visual Basic data type name of a variable.","pos":[0,80]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.CompilerServices.Versioned\n  id: Versioned\n  children:\n  - Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])\n  - Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)\n  - Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)\n  - Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)\n  - Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)\n  langs:\n  - csharp\n  name: Versioned\n  nameWithType: Versioned\n  fullName: Microsoft.VisualBasic.CompilerServices.Versioned\n  type: Class\n  summary: The Versioned module contains procedures used to interact with objects, applications, and systems.\n  remarks: \"This module supports the Visual Basic language keywords and run-time library members that run other programs, call a method or property, sound a beep from the computer, provide a command-line string, manipulate COM objects, and control dialog boxes.  \\n  \\n This class is the Visual Basic 2005 updated version of the <xref:Microsoft.VisualBasic.Interaction> class (which was used in Visual Basic 2003).\"\n  syntax:\n    content: >-\n      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]\n\n      public sealed class Versioned\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])\n  id: CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])\n  parent: Microsoft.VisualBasic.CompilerServices.Versioned\n  langs:\n  - csharp\n  name: CallByName(Object,String,CallType,Object[])\n  nameWithType: Versioned.CallByName(Object,String,CallType,Object[])\n  fullName: Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(Object,String,CallType,Object[])\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Executes a method on an object, or sets or returns a property on an object.\n  syntax:\n    content: public static object CallByName (object Instance, string MethodName, Microsoft.VisualBasic.CallType UseCallType, object[] Arguments);\n    parameters:\n    - id: Instance\n      type: System.Object\n      description: Required. <xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"></xref>. A pointer to the object exposing the property or method.\n    - id: MethodName\n      type: System.String\n      description: Required. <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. A string expression containing the name of the property or method on the object.\n    - id: UseCallType\n      type: Microsoft.VisualBasic.CallType\n      description: Required. An enumeration member of type <xref href=\"Microsoft.VisualBasic.CallType\"></xref> representing the type of procedure being called. The value of <xref uid=\"langword_csharp_CallType\" name=\"CallType\" href=\"\"></xref> can be <xref uid=\"langword_csharp_Method\" name=\"Method\" href=\"\"></xref>, <xref uid=\"langword_csharp_Get\" name=\"Get\" href=\"\"></xref>, or <xref uid=\"langword_csharp_Set\" name=\"Set\" href=\"\"></xref>.\n    - id: Arguments\n      type: System.Object[]\n      description: Optional. <xref uid=\"langword_csharp_ParamArray\" name=\"ParamArray\" href=\"\"></xref>. A parameter array containing the arguments to be passed to the property or method being called.\n    return:\n      type: System.Object\n      description: Executes a method on an object, or sets or returns a property on an object.\n  overload: Microsoft.VisualBasic.CompilerServices.Versioned.CallByName*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)\n  id: IsNumeric(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.Versioned\n  langs:\n  - csharp\n  name: IsNumeric(Object)\n  nameWithType: Versioned.IsNumeric(Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a Boolean value indicating whether an expression can be evaluated as a number.\n  syntax:\n    content: public static bool IsNumeric (object Expression);\n    parameters:\n    - id: Expression\n      type: System.Object\n      description: Required. <xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"></xref> expression.\n    return:\n      type: System.Boolean\n      description: Returns a Boolean value indicating whether an expression can be evaluated as a number.\n  overload: Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)\n  id: SystemTypeName(System.String)\n  parent: Microsoft.VisualBasic.CompilerServices.Versioned\n  langs:\n  - csharp\n  name: SystemTypeName(String)\n  nameWithType: Versioned.SystemTypeName(String)\n  fullName: Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a string value containing the system data type name of a variable.\n  syntax:\n    content: public static string SystemTypeName (string VbName);\n    parameters:\n    - id: VbName\n      type: System.String\n      description: Required. A string variable containing a Visual Basic type name.\n    return:\n      type: System.String\n      description: Returns a string value containing the system data type name of a variable.\n  overload: Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)\n  id: TypeName(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.Versioned\n  langs:\n  - csharp\n  name: TypeName(Object)\n  nameWithType: Versioned.TypeName(Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a string value containing data type information about a variable.\n  syntax:\n    content: public static string TypeName (object Expression);\n    parameters:\n    - id: Expression\n      type: System.Object\n      description: Required. <xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"></xref> variable. If <xref uid=\"langword_csharp_Option Strict\" name=\"Option Strict\" href=\"\"></xref> is <xref uid=\"langword_csharp_Off\" name=\"Off\" href=\"\"></xref>, you can pass a variable of any data type except a structure.\n    return:\n      type: System.String\n      description: Returns a string value containing data type information about a variable.\n  overload: Microsoft.VisualBasic.CompilerServices.Versioned.TypeName*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)\n  id: VbTypeName(System.String)\n  parent: Microsoft.VisualBasic.CompilerServices.Versioned\n  langs:\n  - csharp\n  name: VbTypeName(String)\n  nameWithType: Versioned.VbTypeName(String)\n  fullName: Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a string value containing the Visual Basic data type name of a variable.\n  syntax:\n    content: public static string VbTypeName (string SystemName);\n    parameters:\n    - id: SystemName\n      type: System.String\n      description: Required. String variable containing a type name used by the common language runtime.\n    return:\n      type: System.String\n      description: Returns a string value containing the Visual Basic data type name of a variable.\n  overload: Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])\n  parent: Microsoft.VisualBasic.CompilerServices.Versioned\n  isExternal: false\n  name: CallByName(Object,String,CallType,Object[])\n  nameWithType: Versioned.CallByName(Object,String,CallType,Object[])\n  fullName: Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(Object,String,CallType,Object[])\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.CallType\n  parent: Microsoft.VisualBasic\n  isExternal: false\n  name: CallType\n  nameWithType: CallType\n  fullName: Microsoft.VisualBasic.CallType\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.Versioned\n  isExternal: false\n  name: IsNumeric(Object)\n  nameWithType: Versioned.IsNumeric(Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)\n  parent: Microsoft.VisualBasic.CompilerServices.Versioned\n  isExternal: false\n  name: SystemTypeName(String)\n  nameWithType: Versioned.SystemTypeName(String)\n  fullName: Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(String)\n- uid: Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.Versioned\n  isExternal: false\n  name: TypeName(Object)\n  nameWithType: Versioned.TypeName(Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(Object)\n- uid: Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)\n  parent: Microsoft.VisualBasic.CompilerServices.Versioned\n  isExternal: false\n  name: VbTypeName(String)\n  nameWithType: Versioned.VbTypeName(String)\n  fullName: Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(String)\n- uid: Microsoft.VisualBasic.CompilerServices.Versioned.CallByName*\n  parent: Microsoft.VisualBasic.CompilerServices.Versioned\n  isExternal: false\n  name: CallByName\n  nameWithType: Versioned.CallByName\n- uid: Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric*\n  parent: Microsoft.VisualBasic.CompilerServices.Versioned\n  isExternal: false\n  name: IsNumeric\n  nameWithType: Versioned.IsNumeric\n- uid: Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName*\n  parent: Microsoft.VisualBasic.CompilerServices.Versioned\n  isExternal: false\n  name: SystemTypeName\n  nameWithType: Versioned.SystemTypeName\n- uid: Microsoft.VisualBasic.CompilerServices.Versioned.TypeName*\n  parent: Microsoft.VisualBasic.CompilerServices.Versioned\n  isExternal: false\n  name: TypeName\n  nameWithType: Versioned.TypeName\n- uid: Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName*\n  parent: Microsoft.VisualBasic.CompilerServices.Versioned\n  isExternal: false\n  name: VbTypeName\n  nameWithType: Versioned.VbTypeName\n"}