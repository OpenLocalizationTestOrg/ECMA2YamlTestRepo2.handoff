{"nodes":[{"pos":[798,1036],"content":"Describes a service that can return objects that are specified by XAML name, or alternatively, returns a token that defers name resolution. The service can also return an enumerable set of all named objects that are in the XAML namescope.","needQuote":true,"needEscape":true,"nodes":[{"content":"Describes a service that can return objects that are specified by XAML name, or alternatively, returns a token that defers name resolution. The service can also return an enumerable set of all named objects that are in the XAML namescope.","pos":[0,238],"nodes":[{"content":"Describes a service that can return objects that are specified by XAML name, or alternatively, returns a token that defers name resolution.","pos":[0,139]},{"content":"The service can also return an enumerable set of all named objects that are in the XAML namescope.","pos":[140,238]}]}]},{"pos":[1049,2788],"content":"This interface is not intended for external implementation of typical XAML scenarios because it is a service. This service enables markup extensions and type converters to resolve XAML names to other objects from the same XAML source while they are still in a XAML node representation. The service can be used to resolve forward references for any mechanism that relies on XAML names for nonlinear access to the surrounding XAML production. For more information, see [Type Converters and Markup Extensions for XAML](~/add/includes/ajax-current-ext-md.md).       Type converters and markup extensions can query for IXamlNameResolver as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior. For more information, see [Type Converters and Markup Extensions for XAML](../Topic/Type%20Converters%20and%20Markup%20Extensions%20for%20XAML.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/add/includes/ajax-current-ext-md.md).       This service exposes an API that can defer name resolution. The metaphor implemented by the service is that names that cannot be resolved in a first pass against a partial name-object graph should be stored and used to create the fixup token. In the default behavior, all such names are submitted for another resolution attempt on a second pass. On the second pass, the overall name-object graph is complete, and all the fixup tokens are able to resolve.      > [!NOTE] >  Even if they are permitted by a particular implementation, forward references in XAML inevitably have performance consequences. As a best practice for production-quality XAML, avoid forward references whenever possible.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This interface is not intended for external implementation of typical XAML scenarios because it is a service.","pos":[0,109]},{"content":"This service enables markup extensions and type converters to resolve XAML names to other objects from the same XAML source while they are still in a XAML node representation.","pos":[110,285]},{"content":"The service can be used to resolve forward references for any mechanism that relies on XAML names for nonlinear access to the surrounding XAML production.","pos":[286,440]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Type Converters and Markup Extensions for XAML<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[441,555],"source":" For more information, see [Type Converters and Markup Extensions for XAML](~/add/includes/ajax-current-ext-md.md)."},{"content":"Type converters and markup extensions can query for IXamlNameResolver as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.","pos":[562,772]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Type Converters and Markup Extensions for XAML<ept id=\"p1\">](../Topic/Type%20Converters%20and%20Markup%20Extensions%20for%20XAML.md)</ept> and <bpt id=\"p2\">[</bpt>Service Contexts Available to Type Converters and Markup Extensions<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[773,1033],"source":" For more information, see [Type Converters and Markup Extensions for XAML](../Topic/Type%20Converters%20and%20Markup%20Extensions%20for%20XAML.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/add/includes/ajax-current-ext-md.md)."},{"content":"This service exposes an API that can defer name resolution.","pos":[1040,1099]},{"content":"The metaphor implemented by the service is that names that cannot be resolved in a first pass against a partial name-object graph should be stored and used to create the fixup token.","pos":[1100,1282]},{"content":"In the default behavior, all such names are submitted for another resolution attempt on a second pass.","pos":[1283,1385]},{"content":"On the second pass, the overall name-object graph is complete, and all the fixup tokens are able to resolve.","pos":[1386,1494]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Even if they are permitted by a particular implementation, forward references in XAML inevitably have performance consequences.","pos":[1500,1640],"source":"      > [!NOTE] >  Even if they are permitted by a particular implementation, forward references in XAML inevitably have performance consequences."},{"content":"As a best practice for production-quality XAML, avoid forward references whenever possible.","pos":[1641,1732]}]},{"pos":[3302,3371],"content":"Returns an enumerable set of all named objects in the XAML namescope.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerable set of all named objects in the XAML namescope.","pos":[0,69]}]},{"pos":[3700,4148],"content":"An enumerable set of &lt;xref:System.Collections.Generic.KeyValuePair%602&gt; objects. For each &lt;xref:System.Collections.Generic.KeyValuePair%602&gt;, the &lt;xref:System.Collections.Generic.KeyValuePair%602.Key%2A&gt; component is a string, and the &lt;xref:System.Collections.Generic.KeyValuePair%602.Value%2A&gt; component is the object that uses the &lt;xref:System.Collections.Generic.KeyValuePair%602.Key%2A&gt; name in the XAML namescope.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerable set of &lt;xref:System.Collections.Generic.KeyValuePair%602&gt; objects. For each &lt;xref:System.Collections.Generic.KeyValuePair%602&gt;, the &lt;xref:System.Collections.Generic.KeyValuePair%602.Key%2A&gt; component is a string, and the &lt;xref:System.Collections.Generic.KeyValuePair%602.Value%2A&gt; component is the object that uses the &lt;xref:System.Collections.Generic.KeyValuePair%602.Key%2A&gt; name in the XAML namescope.","pos":[0,448],"nodes":[{"content":"An enumerable set of <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.KeyValuePair%602<ph id=\"ph2\">&amp;gt;</ph> objects.","pos":[0,86],"source":"An enumerable set of &lt;xref:System.Collections.Generic.KeyValuePair%602&gt; objects."},{"content":"For each <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.KeyValuePair%602<ph id=\"ph2\">&amp;gt;</ph>, the <ph id=\"ph3\">&amp;lt;</ph>xref:System.Collections.Generic.KeyValuePair%602.Key%2A<ph id=\"ph4\">&amp;gt;</ph> component is a string, and the <ph id=\"ph5\">&amp;lt;</ph>xref:System.Collections.Generic.KeyValuePair%602.Value%2A<ph id=\"ph6\">&amp;gt;</ph> component is the object that uses the <ph id=\"ph7\">&amp;lt;</ph>xref:System.Collections.Generic.KeyValuePair%602.Key%2A<ph id=\"ph8\">&amp;gt;</ph> name in the XAML namescope.","pos":[87,448],"source":" For each &lt;xref:System.Collections.Generic.KeyValuePair%602&gt;, the &lt;xref:System.Collections.Generic.KeyValuePair%602.Key%2A&gt; component is a string, and the &lt;xref:System.Collections.Generic.KeyValuePair%602.Value%2A&gt; component is the object that uses the &lt;xref:System.Collections.Generic.KeyValuePair%602.Key%2A&gt; name in the XAML namescope."}]}]},{"pos":[4771,4866],"content":"Returns an object that can correct for certain markup patterns that produce forward references.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an object that can correct for certain markup patterns that produce forward references.","pos":[0,95]}]},{"pos":[4879,5277],"content":"Existing internal service providers that are available in schema contexts for markup extensions and type converters can implement this service; however, they return an internal type that only the existing XAML writers that work under the default XAML schema context can process.       When all the forward referenced names are resolvable, the user code is called to reparse each name in the list.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Existing internal service providers that are available in schema contexts for markup extensions and type converters can implement this service; however, they return an internal type that only the existing XAML writers that work under the default XAML schema context can process.       When all the forward referenced names are resolvable, the user code is called to reparse each name in the list.","pos":[0,396],"nodes":[{"content":"Existing internal service providers that are available in schema contexts for markup extensions and type converters can implement this service; however, they return an internal type that only the existing XAML writers that work under the default XAML schema context can process.","pos":[0,278]},{"content":"When all the forward referenced names are resolvable, the user code is called to reparse each name in the list.","pos":[285,396]}]}]},{"pos":[5503,5562],"content":"A collection of names that are possible forward references.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of names that are possible forward references.","pos":[0,59]}]},{"pos":[5620,5694],"content":"An object that provides a token for lookup behavior to be evaluated later.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that provides a token for lookup behavior to be evaluated later.","pos":[0,74]}]},{"pos":[6357,6452],"content":"Returns an object that can correct for certain markup patterns that produce forward references.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an object that can correct for certain markup patterns that produce forward references.","pos":[0,95]}]},{"pos":[6465,6902],"content":"Existing internal service providers that are available in schema contexts for markup extensions and type converters implement this service; however, they return an internal type that can only be processed by the existing XAML writers that work under the default XAML schema context.       If `canAssignDirectly` is `false`, when all the forward referenced names are resolvable, the user code is called to reparse each name in the list.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Existing internal service providers that are available in schema contexts for markup extensions and type converters implement this service; however, they return an internal type that can only be processed by the existing XAML writers that work under the default XAML schema context.","pos":[0,282]},{"content":"If <ph id=\"ph1\">`canAssignDirectly`</ph> is <ph id=\"ph2\">`false`</ph>, when all the forward referenced names are resolvable, the user code is called to reparse each name in the list.","pos":[289,435],"source":"       If `canAssignDirectly` is `false`, when all the forward referenced names are resolvable, the user code is called to reparse each name in the list."}]},{"pos":[7152,7211],"content":"A collection of names that are possible forward references.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of names that are possible forward references.","pos":[0,59]}]},{"pos":[7286,7608],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to immediately assign the resolved name reference to the target property. <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to call the user code for a reparse. The default behavior is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to immediately assign the resolved name reference to the target property.","pos":[0,134],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to immediately assign the resolved name reference to the target property."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to call the user code for a reparse.","pos":[135,234],"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to call the user code for a reparse."},{"content":"The default behavior is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[235,322],"source":" The default behavior is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[7666,7740],"content":"An object that provides a token for lookup behavior to be evaluated later.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that provides a token for lookup behavior to be evaluated later.","pos":[0,74]}]},{"pos":[8218,8391],"content":"Gets a value that determines whether calling <xref:System.Xaml.IXamlNameResolver.GetFixupToken*> is available in order to resolve a name into a token for forward resolution.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that determines whether calling &lt;xref:System.Xaml.IXamlNameResolver.GetFixupToken*&gt; is available in order to resolve a name into a token for forward resolution.","pos":[0,173],"source":"Gets a value that determines whether calling <xref:System.Xaml.IXamlNameResolver.GetFixupToken*> is available in order to resolve a name into a token for forward resolution."}]},{"pos":[8403,8627],"content":"This property returns <ph id=\"ph1\">`false`</ph> when &lt;xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A&gt; does not return a token because a &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; is involved in the second pass on an existing token.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This property returns `false` when <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> does not return a token because a <xref:System.Xaml.Schema.XamlValueConverter%601> is involved in the second pass on an existing token."},{"pos":[8752,9028],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if &lt;xref:System.Xaml.IXamlNameResolver.GetFixupToken*&gt; is available as an implementation that returns a useful token for forward resolution; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Xaml.IXamlNameResolver.GetFixupToken*> is available as an implementation that returns a useful token for forward resolution; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9571,9668],"content":"Occurs when a XAML processor has registered all the relevant names to the backing XAML namescope.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a XAML processor has registered all the relevant names to the backing XAML namescope.","pos":[0,97]}]},{"pos":[9816,9828],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10231,10272],"content":"Resolves an object from a name reference.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resolves an object from a name reference.","pos":[0,41]}]},{"pos":[10284,10577],"content":"If a value is returned as `null`, a forward reference might exist. Implementations that want to support forward references can use the `FixupToken` pattern through the <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> and <xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A> APIs.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If a value is returned as <ph id=\"ph1\">`null`</ph>, a forward reference might exist.","pos":[0,66],"source":"If a value is returned as `null`, a forward reference might exist."},{"content":"Implementations that want to support forward references can use the <ph id=\"ph1\">`FixupToken`</ph> pattern through the &lt;xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A&gt; and &lt;xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A&gt; APIs.","pos":[67,293],"source":" Implementations that want to support forward references can use the `FixupToken` pattern through the <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> and <xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A> APIs."}]},{"pos":[10714,10744],"content":"The name reference to resolve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name reference to resolve.","pos":[0,30]}]},{"pos":[10802,10831],"content":"The resolved object; or null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The resolved object; or null.","pos":[0,29]}]},{"pos":[11341,11492],"content":"Resolves an object from a name reference, and provides a tracking value that reports whether the object is fully initialized for object graph purposes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resolves an object from a name reference, and provides a tracking value that reports whether the object is fully initialized for object graph purposes.","pos":[0,151]}]},{"pos":[11658,11688],"content":"The name reference to resolve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name reference to resolve.","pos":[0,30]}]},{"pos":[11764,11995],"content":"When this method returns, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the returned object has any dependencies on unresolved references; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"When this method returns, <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the returned object has any dependencies on unresolved references; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12053,12127],"content":"An object that provides a token for lookup behavior to be evaluated later.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that provides a token for lookup behavior to be evaluated later.","pos":[0,74]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xaml.IXamlNameResolver\n  id: IXamlNameResolver\n  children:\n  - System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope\n  - System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})\n  - System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)\n  - System.Xaml.IXamlNameResolver.IsFixupTokenAvailable\n  - System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete\n  - System.Xaml.IXamlNameResolver.Resolve(System.String)\n  - System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)\n  langs:\n  - csharp\n  name: IXamlNameResolver\n  nameWithType: IXamlNameResolver\n  fullName: System.Xaml.IXamlNameResolver\n  type: Interface\n  summary: Describes a service that can return objects that are specified by XAML name, or alternatively, returns a token that defers name resolution. The service can also return an enumerable set of all named objects that are in the XAML namescope.\n  remarks: \"This interface is not intended for external implementation of typical XAML scenarios because it is a service. This service enables markup extensions and type converters to resolve XAML names to other objects from the same XAML source while they are still in a XAML node representation. The service can be used to resolve forward references for any mechanism that relies on XAML names for nonlinear access to the surrounding XAML production. For more information, see [Type Converters and Markup Extensions for XAML](~/add/includes/ajax-current-ext-md.md).  \\n  \\n Type converters and markup extensions can query for IXamlNameResolver as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior. For more information, see [Type Converters and Markup Extensions for XAML](../Topic/Type%20Converters%20and%20Markup%20Extensions%20for%20XAML.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/add/includes/ajax-current-ext-md.md).  \\n  \\n This service exposes an API that can defer name resolution. The metaphor implemented by the service is that names that cannot be resolved in a first pass against a partial name-object graph should be stored and used to create the fixup token. In the default behavior, all such names are submitted for another resolution attempt on a second pass. On the second pass, the overall name-object graph is complete, and all the fixup tokens are able to resolve.  \\n  \\n> [!NOTE]\\n>  Even if they are permitted by a particular implementation, forward references in XAML inevitably have performance consequences. As a best practice for production-quality XAML, avoid forward references whenever possible.\"\n  syntax:\n    content: public interface IXamlNameResolver\n  implements: []\n  platform:\n  - net462\n- uid: System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope\n  id: GetAllNamesAndValuesInScope\n  parent: System.Xaml.IXamlNameResolver\n  langs:\n  - csharp\n  name: GetAllNamesAndValuesInScope()\n  nameWithType: IXamlNameResolver.GetAllNamesAndValuesInScope()\n  fullName: System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns an enumerable set of all named objects in the XAML namescope.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>> GetAllNamesAndValuesInScope ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}\n      description: An enumerable set of &lt;xref:System.Collections.Generic.KeyValuePair%602&gt; objects. For each &lt;xref:System.Collections.Generic.KeyValuePair%602&gt;, the &lt;xref:System.Collections.Generic.KeyValuePair%602.Key%2A&gt; component is a string, and the &lt;xref:System.Collections.Generic.KeyValuePair%602.Value%2A&gt; component is the object that uses the &lt;xref:System.Collections.Generic.KeyValuePair%602.Key%2A&gt; name in the XAML namescope.\n  overload: System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})\n  id: GetFixupToken(System.Collections.Generic.IEnumerable{System.String})\n  parent: System.Xaml.IXamlNameResolver\n  langs:\n  - csharp\n  name: GetFixupToken(IEnumerable<String>)\n  nameWithType: IXamlNameResolver.GetFixupToken(IEnumerable<String>)\n  fullName: System.Xaml.IXamlNameResolver.GetFixupToken(IEnumerable<String>)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns an object that can correct for certain markup patterns that produce forward references.\n  remarks: \"Existing internal service providers that are available in schema contexts for markup extensions and type converters can implement this service; however, they return an internal type that only the existing XAML writers that work under the default XAML schema context can process.  \\n  \\n When all the forward referenced names are resolvable, the user code is called to reparse each name in the list.\"\n  syntax:\n    content: public object GetFixupToken (System.Collections.Generic.IEnumerable<string> names);\n    parameters:\n    - id: names\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: A collection of names that are possible forward references.\n    return:\n      type: System.Object\n      description: An object that provides a token for lookup behavior to be evaluated later.\n  overload: System.Xaml.IXamlNameResolver.GetFixupToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)\n  id: GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)\n  parent: System.Xaml.IXamlNameResolver\n  langs:\n  - csharp\n  name: GetFixupToken(IEnumerable<String>,Boolean)\n  nameWithType: IXamlNameResolver.GetFixupToken(IEnumerable<String>,Boolean)\n  fullName: System.Xaml.IXamlNameResolver.GetFixupToken(IEnumerable<String>,Boolean)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns an object that can correct for certain markup patterns that produce forward references.\n  remarks: \"Existing internal service providers that are available in schema contexts for markup extensions and type converters implement this service; however, they return an internal type that can only be processed by the existing XAML writers that work under the default XAML schema context.  \\n  \\n If `canAssignDirectly` is `false`, when all the forward referenced names are resolvable, the user code is called to reparse each name in the list.\"\n  syntax:\n    content: public object GetFixupToken (System.Collections.Generic.IEnumerable<string> names, bool canAssignDirectly);\n    parameters:\n    - id: names\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: A collection of names that are possible forward references.\n    - id: canAssignDirectly\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to immediately assign the resolved name reference to the target property. <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to call the user code for a reparse. The default behavior is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Object\n      description: An object that provides a token for lookup behavior to be evaluated later.\n  overload: System.Xaml.IXamlNameResolver.GetFixupToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.IXamlNameResolver.IsFixupTokenAvailable\n  id: IsFixupTokenAvailable\n  parent: System.Xaml.IXamlNameResolver\n  langs:\n  - csharp\n  name: IsFixupTokenAvailable\n  nameWithType: IXamlNameResolver.IsFixupTokenAvailable\n  fullName: System.Xaml.IXamlNameResolver.IsFixupTokenAvailable\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that determines whether calling <xref:System.Xaml.IXamlNameResolver.GetFixupToken*> is available in order to resolve a name into a token for forward resolution.\n  remarks: This property returns `false` when <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> does not return a token because a <xref:System.Xaml.Schema.XamlValueConverter%601> is involved in the second pass on an existing token.\n  syntax:\n    content: public bool IsFixupTokenAvailable { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Xaml.IXamlNameResolver.GetFixupToken*> is available as an implementation that returns a useful token for forward resolution; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.IXamlNameResolver.IsFixupTokenAvailable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete\n  id: OnNameScopeInitializationComplete\n  parent: System.Xaml.IXamlNameResolver\n  langs:\n  - csharp\n  name: OnNameScopeInitializationComplete\n  nameWithType: IXamlNameResolver.OnNameScopeInitializationComplete\n  fullName: System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete\n  type: Event\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Occurs when a XAML processor has registered all the relevant names to the backing XAML namescope.\n  syntax:\n    content: public event EventHandler OnNameScopeInitializationComplete;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.IXamlNameResolver.Resolve(System.String)\n  id: Resolve(System.String)\n  parent: System.Xaml.IXamlNameResolver\n  langs:\n  - csharp\n  name: Resolve(String)\n  nameWithType: IXamlNameResolver.Resolve(String)\n  fullName: System.Xaml.IXamlNameResolver.Resolve(String)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Resolves an object from a name reference.\n  remarks: If a value is returned as `null`, a forward reference might exist. Implementations that want to support forward references can use the `FixupToken` pattern through the <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> and <xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A> APIs.\n  syntax:\n    content: public object Resolve (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name reference to resolve.\n    return:\n      type: System.Object\n      description: The resolved object; or null.\n  overload: System.Xaml.IXamlNameResolver.Resolve*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)\n  id: Resolve(System.String,System.Boolean@)\n  parent: System.Xaml.IXamlNameResolver\n  langs:\n  - csharp\n  name: Resolve(String,Boolean)\n  nameWithType: IXamlNameResolver.Resolve(String,Boolean)\n  fullName: System.Xaml.IXamlNameResolver.Resolve(String,Boolean)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Resolves an object from a name reference, and provides a tracking value that reports whether the object is fully initialized for object graph purposes.\n  syntax:\n    content: public object Resolve (string name, out bool isFullyInitialized);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name reference to resolve.\n    - id: isFullyInitialized\n      type: System.Boolean\n      description: When this method returns, <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the returned object has any dependencies on unresolved references; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Object\n      description: An object that provides a token for lookup behavior to be evaluated later.\n  overload: System.Xaml.IXamlNameResolver.Resolve*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope\n  parent: System.Xaml.IXamlNameResolver\n  isExternal: false\n  name: GetAllNamesAndValuesInScope()\n  nameWithType: IXamlNameResolver.GetAllNamesAndValuesInScope()\n  fullName: System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope()\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<KeyValuePair<String,Object>>\n  nameWithType: IEnumerable<KeyValuePair<String,Object>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.String,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})\n  parent: System.Xaml.IXamlNameResolver\n  isExternal: false\n  name: GetFixupToken(IEnumerable<String>)\n  nameWithType: IXamlNameResolver.GetFixupToken(IEnumerable<String>)\n  fullName: System.Xaml.IXamlNameResolver.GetFixupToken(IEnumerable<String>)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.IEnumerable{System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<String>\n  nameWithType: IEnumerable<String>\n  fullName: System.Collections.Generic.IEnumerable<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)\n  parent: System.Xaml.IXamlNameResolver\n  isExternal: false\n  name: GetFixupToken(IEnumerable<String>,Boolean)\n  nameWithType: IXamlNameResolver.GetFixupToken(IEnumerable<String>,Boolean)\n  fullName: System.Xaml.IXamlNameResolver.GetFixupToken(IEnumerable<String>,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xaml.IXamlNameResolver.IsFixupTokenAvailable\n  parent: System.Xaml.IXamlNameResolver\n  isExternal: false\n  name: IsFixupTokenAvailable\n  nameWithType: IXamlNameResolver.IsFixupTokenAvailable\n  fullName: System.Xaml.IXamlNameResolver.IsFixupTokenAvailable\n- uid: System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete\n  parent: System.Xaml.IXamlNameResolver\n  isExternal: false\n  name: OnNameScopeInitializationComplete\n  nameWithType: IXamlNameResolver.OnNameScopeInitializationComplete\n  fullName: System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Xaml.IXamlNameResolver.Resolve(System.String)\n  parent: System.Xaml.IXamlNameResolver\n  isExternal: false\n  name: Resolve(String)\n  nameWithType: IXamlNameResolver.Resolve(String)\n  fullName: System.Xaml.IXamlNameResolver.Resolve(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)\n  parent: System.Xaml.IXamlNameResolver\n  isExternal: false\n  name: Resolve(String,Boolean)\n  nameWithType: IXamlNameResolver.Resolve(String,Boolean)\n  fullName: System.Xaml.IXamlNameResolver.Resolve(String,Boolean)\n- uid: System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope*\n  parent: System.Xaml.IXamlNameResolver\n  isExternal: false\n  name: GetAllNamesAndValuesInScope\n  nameWithType: IXamlNameResolver.GetAllNamesAndValuesInScope\n- uid: System.Xaml.IXamlNameResolver.GetFixupToken*\n  parent: System.Xaml.IXamlNameResolver\n  isExternal: false\n  name: GetFixupToken\n  nameWithType: IXamlNameResolver.GetFixupToken\n- uid: System.Xaml.IXamlNameResolver.IsFixupTokenAvailable*\n  parent: System.Xaml.IXamlNameResolver\n  isExternal: false\n  name: IsFixupTokenAvailable\n  nameWithType: IXamlNameResolver.IsFixupTokenAvailable\n- uid: System.Xaml.IXamlNameResolver.Resolve*\n  parent: System.Xaml.IXamlNameResolver\n  isExternal: false\n  name: Resolve\n  nameWithType: IXamlNameResolver.Resolve\n"}