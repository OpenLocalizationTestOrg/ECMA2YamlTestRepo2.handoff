{"nodes":[{"pos":[312,395],"content":"Provides contextual information that the provider can use when persisting settings.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides contextual information that the provider can use when persisting settings.","pos":[0,83]}]},{"pos":[408,1737],"content":"The SettingsContext class is the base class used by applications to provide contextual information to the settings provider. Although the class is not abstract, an application can choose to create a specialized class that inherits from SettingsContext class and provides additional information to specific types of providers. The provider can then examine contextual settings when writing properties.       The primary purpose of the SettingsContext class is to provide features that use the <xref:System.Configuration.SettingsBase> class and related infrastructure. The SettingsContext class provides additional feature-specific contextual information about the property data being stored by the <xref:System.Configuration.SettingsBase> instance. Therefore, it is very simple to store additional information in a SettingsContext class without deriving from it (or from other Settings* classes) in order to support additional feature-specific context information.       For example, ASP.NET uses the SettingsContext class to pass along the username associated with the data managed by a <xref:System.Configuration.SettingsBase> instance, as well as a property indicating whether the user is considered authenticated. In this way, ASP.NET uses the SettingsContext class to identify authenticated versus anonymous Profile data.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SettingsContext class is the base class used by applications to provide contextual information to the settings provider. Although the class is not abstract, an application can choose to create a specialized class that inherits from SettingsContext class and provides additional information to specific types of providers. The provider can then examine contextual settings when writing properties.       The primary purpose of the SettingsContext class is to provide features that use the <xref:System.Configuration.SettingsBase> class and related infrastructure. The SettingsContext class provides additional feature-specific contextual information about the property data being stored by the <xref:System.Configuration.SettingsBase> instance. Therefore, it is very simple to store additional information in a SettingsContext class without deriving from it (or from other Settings* classes) in order to support additional feature-specific context information.       For example, ASP.NET uses the SettingsContext class to pass along the username associated with the data managed by a <xref:System.Configuration.SettingsBase> instance, as well as a property indicating whether the user is considered authenticated. In this way, ASP.NET uses the SettingsContext class to identify authenticated versus anonymous Profile data.","pos":[0,1325],"nodes":[{"content":"The SettingsContext class is the base class used by applications to provide contextual information to the settings provider.","pos":[0,124]},{"content":"Although the class is not abstract, an application can choose to create a specialized class that inherits from SettingsContext class and provides additional information to specific types of providers.","pos":[125,325]},{"content":"The provider can then examine contextual settings when writing properties.","pos":[326,400]},{"content":"The primary purpose of the SettingsContext class is to provide features that use the &lt;xref:System.Configuration.SettingsBase&gt; class and related infrastructure.","pos":[407,566],"source":"       The primary purpose of the SettingsContext class is to provide features that use the <xref:System.Configuration.SettingsBase> class and related infrastructure."},{"content":"The SettingsContext class provides additional feature-specific contextual information about the property data being stored by the &lt;xref:System.Configuration.SettingsBase&gt; instance.","pos":[567,747],"source":" The SettingsContext class provides additional feature-specific contextual information about the property data being stored by the <xref:System.Configuration.SettingsBase> instance."},{"content":"Therefore, it is very simple to store additional information in a SettingsContext class without deriving from it (or from other Settings* classes) in order to support additional feature-specific context information.","pos":[748,963]},{"content":"For example, ASP.NET uses the SettingsContext class to pass along the username associated with the data managed by a &lt;xref:System.Configuration.SettingsBase&gt; instance, as well as a property indicating whether the user is considered authenticated.","pos":[970,1216],"source":"       For example, ASP.NET uses the SettingsContext class to pass along the username associated with the data managed by a <xref:System.Configuration.SettingsBase> instance, as well as a property indicating whether the user is considered authenticated."},{"content":"In this way, ASP.NET uses the SettingsContext class to identify authenticated versus anonymous Profile data.","pos":[1217,1325]}]}]},{"pos":[3773,3871],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.SettingsContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.SettingsContext\"></xref> class."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.SettingsContext\n  id: SettingsContext\n  children:\n  - System.Configuration.SettingsContext.#ctor\n  langs:\n  - csharp\n  name: SettingsContext\n  nameWithType: SettingsContext\n  fullName: System.Configuration.SettingsContext\n  type: Class\n  summary: Provides contextual information that the provider can use when persisting settings.\n  remarks: \"The SettingsContext class is the base class used by applications to provide contextual information to the settings provider. Although the class is not abstract, an application can choose to create a specialized class that inherits from SettingsContext class and provides additional information to specific types of providers. The provider can then examine contextual settings when writing properties.  \\n  \\n The primary purpose of the SettingsContext class is to provide features that use the <xref:System.Configuration.SettingsBase> class and related infrastructure. The SettingsContext class provides additional feature-specific contextual information about the property data being stored by the <xref:System.Configuration.SettingsBase> instance. Therefore, it is very simple to store additional information in a SettingsContext class without deriving from it (or from other Settings* classes) in order to support additional feature-specific context information.  \\n  \\n For example, ASP.NET uses the SettingsContext class to pass along the username associated with the data managed by a <xref:System.Configuration.SettingsBase> instance, as well as a property indicating whether the user is considered authenticated. In this way, ASP.NET uses the SettingsContext class to identify authenticated versus anonymous Profile data.\"\n  syntax:\n    content: 'public class SettingsContext : System.Collections.Hashtable'\n  inheritance:\n  - System.Object\n  - System.Collections.Hashtable\n  implements: []\n  inheritedMembers:\n  - System.Collections.Hashtable.Add(System.Object,System.Object)\n  - System.Collections.Hashtable.Clear\n  - System.Collections.Hashtable.Clone\n  - System.Collections.Hashtable.comparer\n  - System.Collections.Hashtable.Contains(System.Object)\n  - System.Collections.Hashtable.ContainsKey(System.Object)\n  - System.Collections.Hashtable.ContainsValue(System.Object)\n  - System.Collections.Hashtable.CopyTo(System.Array,System.Int32)\n  - System.Collections.Hashtable.Count\n  - System.Collections.Hashtable.EqualityComparer\n  - System.Collections.Hashtable.GetEnumerator\n  - System.Collections.Hashtable.GetHash(System.Object)\n  - System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Collections.Hashtable.hcp\n  - System.Collections.Hashtable.IsFixedSize\n  - System.Collections.Hashtable.IsReadOnly\n  - System.Collections.Hashtable.IsSynchronized\n  - System.Collections.Hashtable.Item(System.Object)\n  - System.Collections.Hashtable.KeyEquals(System.Object,System.Object)\n  - System.Collections.Hashtable.Keys\n  - System.Collections.Hashtable.OnDeserialization(System.Object)\n  - System.Collections.Hashtable.Remove(System.Object)\n  - System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)\n  - System.Collections.Hashtable.SyncRoot\n  - System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.Hashtable.Values\n  platform:\n  - net462\n- uid: System.Configuration.SettingsContext.#ctor\n  id: '#ctor'\n  parent: System.Configuration.SettingsContext\n  langs:\n  - csharp\n  name: SettingsContext()\n  nameWithType: SettingsContext.SettingsContext()\n  fullName: System.Configuration.SettingsContext.SettingsContext()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.SettingsContext\"></xref> class.\n  syntax:\n    content: public SettingsContext ();\n    parameters: []\n  overload: System.Configuration.SettingsContext.#ctor*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.Hashtable\n  isExternal: false\n  name: System.Collections.Hashtable\n- uid: System.Configuration.SettingsContext.#ctor\n  parent: System.Configuration.SettingsContext\n  isExternal: false\n  name: SettingsContext()\n  nameWithType: SettingsContext.SettingsContext()\n  fullName: System.Configuration.SettingsContext.SettingsContext()\n- uid: System.Configuration.SettingsContext.#ctor*\n  parent: System.Configuration.SettingsContext\n  isExternal: false\n  name: SettingsContext\n  nameWithType: SettingsContext.SettingsContext\n"}