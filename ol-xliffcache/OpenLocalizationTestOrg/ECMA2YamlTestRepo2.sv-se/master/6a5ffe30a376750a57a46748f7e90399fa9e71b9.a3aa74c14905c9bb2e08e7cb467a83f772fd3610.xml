{"nodes":[{"pos":[370,444],"content":"Represents the execution environment of an activity that is being aborted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the execution environment of an activity that is being aborted.","pos":[0,74]}]},{"pos":[456,867],"content":"Custom activity authors that create activities that are derived from <xref:System.Activities.NativeActivity%601> can override <xref:System.Activities.NativeActivity%601.Abort%2A> to take action in response to being aborted. For example, an activity that interacts with <xref:System.Data.SqlClient.SqlCommand> might want to call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> if the activity is being aborted.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Custom activity authors that create activities that are derived from <xref:System.Activities.NativeActivity%601> can override <xref:System.Activities.NativeActivity%601.Abort%2A> to take action in response to being aborted. For example, an activity that interacts with <xref:System.Data.SqlClient.SqlCommand> might want to call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> if the activity is being aborted.","pos":[0,411],"nodes":[{"content":"Custom activity authors that create activities that are derived from &lt;xref:System.Activities.NativeActivity%601&gt; can override &lt;xref:System.Activities.NativeActivity%601.Abort%2A&gt; to take action in response to being aborted.","pos":[0,223],"source":"Custom activity authors that create activities that are derived from <xref:System.Activities.NativeActivity%601> can override <xref:System.Activities.NativeActivity%601.Abort%2A> to take action in response to being aborted."},{"content":"For example, an activity that interacts with &lt;xref:System.Data.SqlClient.SqlCommand&gt; might want to call &lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt; if the activity is being aborted.","pos":[224,411],"source":" For example, an activity that interacts with <xref:System.Data.SqlClient.SqlCommand> might want to call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> if the activity is being aborted."}]}]},{"pos":[2722,2810],"content":"Gets an <xref:System.Exception> that contains the reason for the activity being aborted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an &lt;xref:System.Exception&gt; that contains the reason for the activity being aborted.","pos":[0,88],"source":"Gets an <xref:System.Exception> that contains the reason for the activity being aborted."}]},{"pos":[2927,2996],"content":"An exception that contains the reason for the activity being aborted.","needQuote":true,"needEscape":true,"nodes":[{"content":"An exception that contains the reason for the activity being aborted.","pos":[0,69]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.NativeActivityAbortContext\n  id: NativeActivityAbortContext\n  children:\n  - System.Activities.NativeActivityAbortContext.Reason\n  langs:\n  - csharp\n  name: NativeActivityAbortContext\n  nameWithType: NativeActivityAbortContext\n  fullName: System.Activities.NativeActivityAbortContext\n  type: Class\n  summary: Represents the execution environment of an activity that is being aborted.\n  remarks: Custom activity authors that create activities that are derived from <xref:System.Activities.NativeActivity%601> can override <xref:System.Activities.NativeActivity%601.Abort%2A> to take action in response to being aborted. For example, an activity that interacts with <xref:System.Data.SqlClient.SqlCommand> might want to call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> if the activity is being aborted.\n  syntax:\n    content: 'public sealed class NativeActivityAbortContext : System.Activities.ActivityContext'\n  inheritance:\n  - System.Object\n  - System.Activities.ActivityContext\n  implements: []\n  inheritedMembers:\n  - System.Activities.ActivityContext.ActivityInstanceId\n  - System.Activities.ActivityContext.DataContext\n  - System.Activities.ActivityContext.GetExtension``1\n  - System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)\n  - System.Activities.ActivityContext.GetValue(System.Activities.Argument)\n  - System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)\n  - System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument`1)\n  - System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument`1)\n  - System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)\n  - System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument`1)\n  - System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)\n  - System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument`1,``0)\n  - System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument`1,``0)\n  - System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)\n  - System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument`1,``0)\n  - System.Activities.ActivityContext.WorkflowInstanceId\n  platform:\n  - net462\n- uid: System.Activities.NativeActivityAbortContext.Reason\n  id: Reason\n  parent: System.Activities.NativeActivityAbortContext\n  langs:\n  - csharp\n  name: Reason\n  nameWithType: NativeActivityAbortContext.Reason\n  fullName: System.Activities.NativeActivityAbortContext.Reason\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets an <xref:System.Exception> that contains the reason for the activity being aborted.\n  syntax:\n    content: public Exception Reason { get; }\n    return:\n      type: System.Exception\n      description: An exception that contains the reason for the activity being aborted.\n  overload: System.Activities.NativeActivityAbortContext.Reason*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.ActivityContext\n  isExternal: false\n  name: System.Activities.ActivityContext\n- uid: System.Activities.NativeActivityAbortContext.Reason\n  parent: System.Activities.NativeActivityAbortContext\n  isExternal: false\n  name: Reason\n  nameWithType: NativeActivityAbortContext.Reason\n  fullName: System.Activities.NativeActivityAbortContext.Reason\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Activities.NativeActivityAbortContext.Reason*\n  parent: System.Activities.NativeActivityAbortContext\n  isExternal: false\n  name: Reason\n  nameWithType: NativeActivityAbortContext.Reason\n"}