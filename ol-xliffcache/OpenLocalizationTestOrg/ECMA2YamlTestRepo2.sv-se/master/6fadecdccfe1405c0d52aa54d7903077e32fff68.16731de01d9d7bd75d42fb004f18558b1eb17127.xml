{"nodes":[{"pos":[1592,1622],"content":"Represents a Windows CheckBox.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a Windows CheckBox.","pos":[0,30]}]},{"pos":[1635,4387],"content":"Use a CheckBox to give the user an option, such as true/false or yes/no. The CheckBox control can display an image or text or both.       CheckBox and <xref:System.Windows.Forms.RadioButton> controls have a similar function: they allow the user to choose from a list of options. CheckBox controls let the user pick a combination of options. In contrast, <xref:System.Windows.Forms.RadioButton> controls allow a user to choose from mutually exclusive options.       The <xref:System.Windows.Forms.CheckBox.Appearance%2A> property determines whether the CheckBox appears as a typical CheckBox or as a button.       The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property determines whether the control supports two or three states. Use the <xref:System.Windows.Forms.CheckBox.Checked%2A> property to get or set the value of a two-state CheckBox control and use the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property to get or set the value of a three-state CheckBox control.      > [!NOTE] >  If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `true`, the <xref:System.Windows.Forms.CheckBox.Checked%2A> property will return `true` for either a checked or indeterminate state.       The <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property determines the style and appearance of the control. If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle?displayProperty=fullName>, the user's operating system determines the appearance of the control.      > [!NOTE] >  When the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle?displayProperty=fullName>, the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> property is ignored and the control is displayed using the <xref:System.Drawing.ContentAlignment?displayProperty=fullName> or <xref:System.Drawing.ContentAlignment?displayProperty=fullName> alignment. If the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> property is set to one of the right alignments, the control is displayed using the <xref:System.Drawing.ContentAlignment?displayProperty=fullName> alignment; otherwise, it is displayed using the <xref:System.Drawing.ContentAlignment?displayProperty=fullName> alignment.       The following describes an indeterminate state: You have a CheckBox that determines if the selected text in a <xref:System.Windows.Forms.RichTextBox> is bold. When you select text you can click the CheckBox to bold the selection. Likewise, when you select some text, the CheckBox displays whether the selected text is bold. If your selected text contains text that is bold and normal, the CheckBox will have an indeterminate state.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use a CheckBox to give the user an option, such as true/false or yes/no.","pos":[0,72]},{"content":"The CheckBox control can display an image or text or both.","pos":[73,131]},{"content":"CheckBox and &lt;xref:System.Windows.Forms.RadioButton&gt; controls have a similar function: they allow the user to choose from a list of options.","pos":[138,278],"source":"       CheckBox and <xref:System.Windows.Forms.RadioButton> controls have a similar function: they allow the user to choose from a list of options."},{"content":"CheckBox controls let the user pick a combination of options.","pos":[279,340]},{"content":"In contrast, &lt;xref:System.Windows.Forms.RadioButton&gt; controls allow a user to choose from mutually exclusive options.","pos":[341,458],"source":" In contrast, <xref:System.Windows.Forms.RadioButton> controls allow a user to choose from mutually exclusive options."},{"content":"The &lt;xref:System.Windows.Forms.CheckBox.Appearance%2A&gt; property determines whether the CheckBox appears as a typical CheckBox or as a button.","pos":[465,606],"source":"       The <xref:System.Windows.Forms.CheckBox.Appearance%2A> property determines whether the CheckBox appears as a typical CheckBox or as a button."},{"content":"The &lt;xref:System.Windows.Forms.CheckBox.ThreeState%2A&gt; property determines whether the control supports two or three states.","pos":[613,737],"source":"       The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property determines whether the control supports two or three states."},{"content":"Use the &lt;xref:System.Windows.Forms.CheckBox.Checked%2A&gt; property to get or set the value of a two-state CheckBox control and use the &lt;xref:System.Windows.Forms.CheckBox.CheckState%2A&gt; property to get or set the value of a three-state CheckBox control.","pos":[738,989],"source":" Use the <xref:System.Windows.Forms.CheckBox.Checked%2A> property to get or set the value of a two-state CheckBox control and use the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property to get or set the value of a three-state CheckBox control."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the &lt;xref:System.Windows.Forms.CheckBox.ThreeState%2A&gt; property is set to <ph id=\"ph2\">`true`</ph>, the &lt;xref:System.Windows.Forms.CheckBox.Checked%2A&gt; property will return <ph id=\"ph3\">`true`</ph> for either a checked or indeterminate state.","pos":[995,1217],"source":"      > [!NOTE] >  If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `true`, the <xref:System.Windows.Forms.CheckBox.Checked%2A> property will return `true` for either a checked or indeterminate state."},{"content":"The &lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt; property determines the style and appearance of the control.","pos":[1224,1340],"source":"       The <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property determines the style and appearance of the control."},{"content":"If the &lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt; property is set to &lt;xref:System.Windows.Forms.FlatStyle?displayProperty=fullName&gt;, the user's operating system determines the appearance of the control.","pos":[1341,1552],"source":" If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle?displayProperty=fullName>, the user's operating system determines the appearance of the control."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When the &lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt; property is set to &lt;xref:System.Windows.Forms.FlatStyle?displayProperty=fullName&gt;, the &lt;xref:System.Windows.Forms.CheckBox.CheckAlign%2A&gt; property is ignored and the control is displayed using the &lt;xref:System.Drawing.ContentAlignment?displayProperty=fullName&gt; or &lt;xref:System.Drawing.ContentAlignment?displayProperty=fullName&gt; alignment.","pos":[1558,1970],"source":"      > [!NOTE] >  When the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle?displayProperty=fullName>, the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> property is ignored and the control is displayed using the <xref:System.Drawing.ContentAlignment?displayProperty=fullName> or <xref:System.Drawing.ContentAlignment?displayProperty=fullName> alignment."},{"content":"If the &lt;xref:System.Windows.Forms.CheckBox.CheckAlign%2A&gt; property is set to one of the right alignments, the control is displayed using the &lt;xref:System.Drawing.ContentAlignment?displayProperty=fullName&gt; alignment; otherwise, it is displayed using the &lt;xref:System.Drawing.ContentAlignment?displayProperty=fullName&gt; alignment.","pos":[1971,2298],"source":" If the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> property is set to one of the right alignments, the control is displayed using the <xref:System.Drawing.ContentAlignment?displayProperty=fullName> alignment; otherwise, it is displayed using the <xref:System.Drawing.ContentAlignment?displayProperty=fullName> alignment."},{"content":"The following describes an indeterminate state: You have a CheckBox that determines if the selected text in a &lt;xref:System.Windows.Forms.RichTextBox&gt; is bold.","pos":[2305,2463],"source":"       The following describes an indeterminate state: You have a CheckBox that determines if the selected text in a <xref:System.Windows.Forms.RichTextBox> is bold."},{"content":"When you select text you can click the CheckBox to bold the selection.","pos":[2464,2534]},{"content":"Likewise, when you select some text, the CheckBox displays whether the selected text is bold.","pos":[2535,2628]},{"content":"If your selected text contains text that is bold and normal, the CheckBox will have an indeterminate state.","pos":[2629,2736]}]},{"pos":[29310,29401],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CheckBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.CheckBox\"></xref> class."},{"pos":[29413,29729],"content":"By default, when a new &lt;xref:System.Windows.Forms.CheckBox&gt; is instantiated, &lt;xref:System.Windows.Forms.CheckBox.AutoCheck%2A&gt; is set to <ph id=\"ph1\">`true`</ph>, &lt;xref:System.Windows.Forms.CheckBox.Checked%2A&gt; is set to <ph id=\"ph2\">`false`</ph>, and &lt;xref:System.Windows.Forms.CheckBox.Appearance%2A&gt; is set to &lt;xref:System.Windows.Forms.Appearance&gt;.","needQuote":true,"needEscape":true,"extradata":"MT","source":"By default, when a new <xref:System.Windows.Forms.CheckBox> is instantiated, <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> is set to `true`, <xref:System.Windows.Forms.CheckBox.Checked%2A> is set to `false`, and <xref:System.Windows.Forms.CheckBox.Appearance%2A> is set to <xref:System.Windows.Forms.Appearance>."},{"pos":[30825,30943],"content":"Gets or sets the value that determines the appearance of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CheckBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the value that determines the appearance of a <xref href=\"System.Windows.Forms.CheckBox\"></xref> control."},{"pos":[30955,31240],"content":"If Appearance value is set to <xref:System.Windows.Forms.Appearance>, the <xref:System.Windows.Forms.CheckBox> has a typical appearance. If the value is set to `Button`, the <xref:System.Windows.Forms.CheckBox> appears like a toggle button, which can be toggled to an up or down state.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If Appearance value is set to &lt;xref:System.Windows.Forms.Appearance&gt;, the &lt;xref:System.Windows.Forms.CheckBox&gt; has a typical appearance.","pos":[0,136],"source":"If Appearance value is set to <xref:System.Windows.Forms.Appearance>, the <xref:System.Windows.Forms.CheckBox> has a typical appearance."},{"content":"If the value is set to <ph id=\"ph1\">`Button`</ph>, the &lt;xref:System.Windows.Forms.CheckBox&gt; appears like a toggle button, which can be toggled to an up or down state.","pos":[137,285],"source":" If the value is set to `Button`, the <xref:System.Windows.Forms.CheckBox> appears like a toggle button, which can be toggled to an up or down state."}]},{"pos":[32013,32159],"content":"One of the <xref href=\"System.Windows.Forms.Appearance\"></xref> values. The default value is <xref href=\"System.Windows.Forms.Appearance\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Appearance\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,71],"source":"One of the <xref href=\"System.Windows.Forms.Appearance\"></xref> values."},{"content":"The default value is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Appearance\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[72,146],"source":" The default value is <xref href=\"System.Windows.Forms.Appearance\"></xref>."}]},{"pos":[32374,32471],"content":"The value assigned is not one of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Appearance\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The value assigned is not one of the <xref href=\"System.Windows.Forms.Appearance\"></xref> values."},{"pos":[32861,32956],"content":"Occurs when the value of the <xref:System.Windows.Forms.CheckBox.Appearance*> property changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.Forms.CheckBox.Appearance*&gt; property changes.","pos":[0,95],"source":"Occurs when the value of the <xref:System.Windows.Forms.CheckBox.Appearance*> property changes."}]},{"pos":[32968,33085],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"pos":[34238,34250],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34620,34937],"content":"Gets or set a value indicating whether the &lt;xref:System.Windows.Forms.CheckBox.Checked<bpt id=\"p1\">*</bpt>&gt; or &lt;xref:System.Windows.Forms.CheckBox.CheckState<ept id=\"p1\">*</ept>&gt; values and the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.CheckBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>'s appearance are automatically changed when the <bpt id=\"p3\">&lt;xref href=\"System.Windows.Forms.CheckBox\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> is clicked.","needQuote":true,"needEscape":true,"source":"Gets or set a value indicating whether the <xref:System.Windows.Forms.CheckBox.Checked*> or <xref:System.Windows.Forms.CheckBox.CheckState*> values and the <xref href=\"System.Windows.Forms.CheckBox\"></xref>'s appearance are automatically changed when the <xref href=\"System.Windows.Forms.CheckBox\"></xref> is clicked."},{"pos":[34949,35191],"content":"If AutoCheck is set to false, you will need to add code to update the <xref:System.Windows.Forms.CheckBox.Checked%2A> or <xref:System.Windows.Forms.CheckBox.CheckState%2A> values in the <xref:System.Windows.Forms.Control.Click> event handler.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If AutoCheck is set to false, you will need to add code to update the &lt;xref:System.Windows.Forms.CheckBox.Checked%2A&gt; or &lt;xref:System.Windows.Forms.CheckBox.CheckState%2A&gt; values in the &lt;xref:System.Windows.Forms.Control.Click&gt; event handler.","pos":[0,242],"source":"If AutoCheck is set to false, you will need to add code to update the <xref:System.Windows.Forms.CheckBox.Checked%2A> or <xref:System.Windows.Forms.CheckBox.CheckState%2A> values in the <xref:System.Windows.Forms.Control.Click> event handler."}]},{"pos":[35876,36341],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Forms.CheckBox.Checked*> value or <xref:System.Windows.Forms.CheckBox.CheckState*> value and the appearance of the control are automatically changed on the <xref href=\"System.Windows.Forms.Control.Click\"></xref> event; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Forms.CheckBox.Checked<bpt id=\"p2\">*</bpt>&gt; value or &lt;xref:System.Windows.Forms.CheckBox.CheckState<ept id=\"p2\">*</ept>&gt; value and the appearance of the control are automatically changed on the <bpt id=\"p3\">&lt;xref href=\"System.Windows.Forms.Control.Click\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> event; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[0,382],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Forms.CheckBox.Checked*> value or <xref:System.Windows.Forms.CheckBox.CheckState*> value and the appearance of the control are automatically changed on the <xref href=\"System.Windows.Forms.Control.Click\"></xref> event; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[383,465],"source":" The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[36769,36902],"content":"Gets or sets the horizontal and vertical alignment of the check mark on a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CheckBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the horizontal and vertical alignment of the check mark on a <xref href=\"System.Windows.Forms.CheckBox\"></xref> control."},{"pos":[38373,38539],"content":"One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values. The default value is <xref uid=\"langword_csharp_MiddleLeft\" name=\"MiddleLeft\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.ContentAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,71],"source":"One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_MiddleLeft\" name=\"MiddleLeft\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[72,166],"source":" The default value is <xref uid=\"langword_csharp_MiddleLeft\" name=\"MiddleLeft\" href=\"\"></xref>."}]},{"pos":[38754,38863],"content":"The value assigned is not one of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.ContentAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values.","needQuote":true,"needEscape":true,"source":"The value assigned is not one of the <xref href=\"System.Drawing.ContentAlignment\"></xref> enumeration values."},{"pos":[39206,39324],"content":"Gets or set a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CheckBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is in the checked state.","needQuote":true,"needEscape":true,"source":"Gets or set a value indicating whether the <xref href=\"System.Windows.Forms.CheckBox\"></xref> is in the checked state."},{"pos":[39336,39637],"content":"When the value is `true`, the <xref:System.Windows.Forms.CheckBox> portion of the control displays a check mark. If the <xref:System.Windows.Forms.CheckBox.Appearance%2A> property is set to `Button`, the control will appear sunken when Checked is `true` and raised like a standard button when `false`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the value is <ph id=\"ph1\">`true`</ph>, the &lt;xref:System.Windows.Forms.CheckBox&gt; portion of the control displays a check mark.","pos":[0,112],"source":"When the value is `true`, the <xref:System.Windows.Forms.CheckBox> portion of the control displays a check mark."},{"content":"If the &lt;xref:System.Windows.Forms.CheckBox.Appearance%2A&gt; property is set to <ph id=\"ph1\">`Button`</ph>, the control will appear sunken when Checked is <ph id=\"ph2\">`true`</ph> and raised like a standard button when <ph id=\"ph3\">`false`</ph>.","pos":[113,301],"source":" If the <xref:System.Windows.Forms.CheckBox.Appearance%2A> property is set to `Button`, the control will appear sunken when Checked is `true` and raised like a standard button when `false`."}]},{"pos":[41082,41924],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.CheckBox\"></xref> is in the checked state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.       <div class=\"alert NOTE\">    If the <xref:System.Windows.Forms.CheckBox.ThreeState*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the Checked property will return <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> for either a <xref uid=\"langword_csharp_Checked\" name=\"Checked\" href=\"\"></xref> or <xref uid=\"langword_csharp_Indeterminate\" name=\"Indeterminate\" href=\"\"></xref><xref:System.Windows.Forms.CheckBox.CheckState*>.      </div>","needQuote":false,"needEscape":true,"nodes":[{"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.CheckBox\"></xref> is in the checked state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.       ","pos":[0,310],"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.CheckBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is in the checked state; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,218],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.CheckBox\"></xref> is in the checked state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[219,303],"source":" The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"content":"    If the <xref:System.Windows.Forms.CheckBox.ThreeState*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the Checked property will return <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> for either a <xref uid=\"langword_csharp_Checked\" name=\"Checked\" href=\"\"></xref> or <xref uid=\"langword_csharp_Indeterminate\" name=\"Indeterminate\" href=\"\"></xref><xref:System.Windows.Forms.CheckBox.CheckState*>.      ","pos":[334,785],"nodes":[{"content":"If the &lt;xref:System.Windows.Forms.CheckBox.ThreeState<bpt id=\"p1\">*</bpt>&gt; property is set to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, the Checked property will return <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> for either a <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_Checked\" name=\"Checked\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> or <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_Indeterminate\" name=\"Indeterminate\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>&lt;xref:System.Windows.Forms.CheckBox.CheckState<ept id=\"p1\">*</ept>&gt;.","pos":[4,445],"source":"    If the <xref:System.Windows.Forms.CheckBox.ThreeState*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the Checked property will return <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> for either a <xref uid=\"langword_csharp_Checked\" name=\"Checked\" href=\"\"></xref> or <xref uid=\"langword_csharp_Indeterminate\" name=\"Indeterminate\" href=\"\"></xref><xref:System.Windows.Forms.CheckBox.CheckState*>."}]}]},{"pos":[42368,42460],"content":"Occurs when the value of the <xref:System.Windows.Forms.CheckBox.Checked*> property changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.Forms.CheckBox.Checked*&gt; property changes.","pos":[0,92],"source":"Occurs when the value of the <xref:System.Windows.Forms.CheckBox.Checked*> property changes."}]},{"pos":[42472,42589],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"pos":[43733,43745],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44120,44201],"content":"Gets or sets the state of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CheckBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the state of the <xref href=\"System.Windows.Forms.CheckBox\"></xref>."},{"pos":[44214,45169],"content":"If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `false`, the CheckState property value can only be set to `CheckState.Indeterminate` in code and not by user interaction.       The following table describes the <xref:System.Windows.Forms.Appearance?displayProperty=fullName> of the <xref:System.Windows.Forms.CheckBox> control in its different states for the `Normal` and `Button` style control <xref:System.Windows.Forms.CheckBox.Appearance%2A?displayProperty=fullName>.      |CheckState|Appearance.Normal|Appearance.Button|   |----------------|-----------------------|-----------------------|   |`Checked`|The <xref:System.Windows.Forms.CheckBox> displays a check mark.|The control appears sunken.|   |`Unchecked`|The <xref:System.Windows.Forms.CheckBox> is empty.|The control appears raised.|   |`Indeterminate`|The <xref:System.Windows.Forms.CheckBox> displays a check mark and is shaded.|The control appears flat.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the &lt;xref:System.Windows.Forms.CheckBox.ThreeState%2A&gt; property is set to <ph id=\"ph1\">`false`</ph>, the CheckState property value can only be set to <ph id=\"ph2\">`CheckState.Indeterminate`</ph> in code and not by user interaction.","pos":[0,198],"source":"If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `false`, the CheckState property value can only be set to `CheckState.Indeterminate` in code and not by user interaction."},{"content":"The following table describes the &lt;xref:System.Windows.Forms.Appearance?displayProperty=fullName&gt; of the &lt;xref:System.Windows.Forms.CheckBox&gt; control in its different states for the <ph id=\"ph1\">`Normal`</ph> and <ph id=\"ph2\">`Button`</ph> style control &lt;xref:System.Windows.Forms.CheckBox.Appearance%2A?displayProperty=fullName&gt;.","pos":[205,499],"source":"       The following table describes the <xref:System.Windows.Forms.Appearance?displayProperty=fullName> of the <xref:System.Windows.Forms.CheckBox> control in its different states for the `Normal` and `Button` style control <xref:System.Windows.Forms.CheckBox.Appearance%2A?displayProperty=fullName>."},{"content":"|CheckState|Appearance.Normal|Appearance.Button|   |----------------|-----------------------|-----------------------|   |<ph id=\"ph1\">`Checked`</ph>|The &lt;xref:System.Windows.Forms.CheckBox&gt; displays a check mark.|The control appears sunken.|   |<ph id=\"ph2\">`Unchecked`</ph>|The &lt;xref:System.Windows.Forms.CheckBox&gt; is empty.|The control appears raised.|   |<ph id=\"ph3\">`Indeterminate`</ph>|The &lt;xref:System.Windows.Forms.CheckBox&gt; displays a check mark and is shaded.|The control appears flat.|","pos":[505,947],"source":"      |CheckState|Appearance.Normal|Appearance.Button|   |----------------|-----------------------|-----------------------|   |`Checked`|The <xref:System.Windows.Forms.CheckBox> displays a check mark.|The control appears sunken.|   |`Unchecked`|The <xref:System.Windows.Forms.CheckBox> is empty.|The control appears raised.|   |`Indeterminate`|The <xref:System.Windows.Forms.CheckBox> displays a check mark and is shaded.|The control appears flat.|"}]},{"pos":[46692,46868],"content":"One of the <xref href=\"System.Windows.Forms.CheckState\"></xref> enumeration values. The default value is <xref uid=\"langword_csharp_Unchecked\" name=\"Unchecked\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CheckState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values.","pos":[0,83],"source":"One of the <xref href=\"System.Windows.Forms.CheckState\"></xref> enumeration values."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Unchecked\" name=\"Unchecked\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[84,176],"source":" The default value is <xref uid=\"langword_csharp_Unchecked\" name=\"Unchecked\" href=\"\"></xref>."}]},{"pos":[47083,47192],"content":"The value assigned is not one of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CheckState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values.","needQuote":true,"needEscape":true,"source":"The value assigned is not one of the <xref href=\"System.Windows.Forms.CheckState\"></xref> enumeration values."},{"pos":[47582,47677],"content":"Occurs when the value of the <xref:System.Windows.Forms.CheckBox.CheckState*> property changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.Forms.CheckBox.CheckState*&gt; property changes.","pos":[0,95],"source":"Occurs when the value of the <xref:System.Windows.Forms.CheckBox.CheckState*> property changes."}]},{"pos":[47689,47806],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"pos":[48959,48971],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49435,49537],"content":"Creates a new accessibility object for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CheckBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Creates a new accessibility object for the <xref href=\"System.Windows.Forms.CheckBox\"></xref> control."},{"pos":[49550,49929],"content":"If you do not explicitly call the CreateAccessibilityInstance method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced.      > [!NOTE] >  To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the .NET Framework.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you do not explicitly call the CreateAccessibilityInstance method, it will be called when the &lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt; property is referenced.","pos":[0,179],"source":"If you do not explicitly call the CreateAccessibilityInstance method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To get or set the &lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt; property, you must add a reference to the <ph id=\"ph2\">`Accessibility`</ph> assembly installed with the .NET Framework.","pos":[185,376],"source":"      > [!NOTE] >  To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the .NET Framework."}]},{"pos":[50143,50227],"content":"A new <xref:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject> for the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new &lt;xref:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject&gt; for the control.","pos":[0,84],"source":"A new <xref:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject> for the control."}]},{"pos":[50683,50756],"content":"Gets the required creation parameters when the control handle is created.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the required creation parameters when the control handle is created.","pos":[0,73]}]},{"pos":[51710,51856],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CreateParams\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the required creation parameters when the handle to the control is created.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.CreateParams\"></xref> that contains the required creation parameters when the handle to the control is created."},{"pos":[52292,52329],"content":"Gets the default size of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default size of the control.","pos":[0,37]}]},{"pos":[52476,52493],"content":"The default size.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default size.","pos":[0,17]}]},{"pos":[52925,53023],"content":"Occurs when the user double-clicks the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CheckBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Occurs when the user double-clicks the <xref href=\"System.Windows.Forms.CheckBox\"></xref> control."},{"pos":[53036,53314],"content":"By default, the <xref:System.Windows.Forms.ControlStyles> and <xref:System.Windows.Forms.ControlStyles> enumerations are set to false for the <xref:System.Windows.Forms.CheckBox> control, and the DoubleClick event is not raised.       This event is not relevant to this class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, the <xref:System.Windows.Forms.ControlStyles> and <xref:System.Windows.Forms.ControlStyles> enumerations are set to false for the <xref:System.Windows.Forms.CheckBox> control, and the DoubleClick event is not raised.       This event is not relevant to this class.","pos":[0,276],"nodes":[{"content":"By default, the &lt;xref:System.Windows.Forms.ControlStyles&gt; and &lt;xref:System.Windows.Forms.ControlStyles&gt; enumerations are set to false for the &lt;xref:System.Windows.Forms.CheckBox&gt; control, and the DoubleClick event is not raised.","pos":[0,228],"source":"By default, the <xref:System.Windows.Forms.ControlStyles> and <xref:System.Windows.Forms.ControlStyles> enumerations are set to false for the <xref:System.Windows.Forms.CheckBox> control, and the DoubleClick event is not raised."},{"content":"This event is not relevant to this class.","pos":[235,276]}]}]},{"pos":[53441,53453],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[53855,53953],"content":"Occurs when the user double-clicks the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CheckBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Occurs when the user double-clicks the <xref href=\"System.Windows.Forms.CheckBox\"></xref> control."},{"pos":[53966,54299],"content":"By default, the <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> and <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> style bits are set to `false` for the <xref:System.Windows.Forms.CheckBox> control, and the MouseDoubleClick event is not raised.       This event is not relevant to this class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, the &lt;xref:System.Windows.Forms.ControlStyles?displayProperty=fullName&gt; and &lt;xref:System.Windows.Forms.ControlStyles?displayProperty=fullName&gt; style bits are set to <ph id=\"ph1\">`false`</ph> for the &lt;xref:System.Windows.Forms.CheckBox&gt; control, and the MouseDoubleClick event is not raised.","pos":[0,283],"source":"By default, the <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> and <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> style bits are set to `false` for the <xref:System.Windows.Forms.CheckBox> control, and the MouseDoubleClick event is not raised."},{"content":"This event is not relevant to this class.","pos":[290,331]}]},{"pos":[54476,54488],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[54975,55061],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CheckBox.AppearanceChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.CheckBox.AppearanceChanged\"></xref> event."},{"pos":[55074,55424],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).       The OnAppearanceChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,158],"source":" For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnAppearanceChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[165,273]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[274,348]}]},{"pos":[55583,55639],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[56174,56257],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CheckBox.CheckedChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.CheckBox.CheckedChanged\"></xref> event."},{"pos":[56270,56617],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).       The OnCheckedChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,158],"source":" For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnCheckedChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[165,270]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[271,345]}]},{"pos":[56773,56829],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[57376,57462],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CheckBox.CheckStateChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.CheckBox.CheckStateChanged\"></xref> event."},{"pos":[57475,57825],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).       The OnCheckStateChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,158],"source":" For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnCheckStateChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[165,273]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[274,348]}]},{"pos":[57984,58040],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[58530,58603],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.Click\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.Click\"></xref> event."},{"pos":[58616,59445],"content":"The OnClick method changes the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property. If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `true`, subsequent clicks of the <xref:System.Windows.Forms.CheckBox> will result in OnClick cycling through all the values of the <xref:System.Windows.Forms.CheckBox.CheckState%2A> enumeration. Otherwise, OnClick switches between <xref:System.Windows.Forms.CheckState> and <xref:System.Windows.Forms.CheckState>.       Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).       The OnClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The OnClick method changes the &lt;xref:System.Windows.Forms.CheckBox.CheckState%2A&gt; property.","pos":[0,91],"source":"The OnClick method changes the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property."},{"content":"If the &lt;xref:System.Windows.Forms.CheckBox.ThreeState%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>, subsequent clicks of the &lt;xref:System.Windows.Forms.CheckBox&gt; will result in OnClick cycling through all the values of the &lt;xref:System.Windows.Forms.CheckBox.CheckState%2A&gt; enumeration.","pos":[92,363],"source":" If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `true`, subsequent clicks of the <xref:System.Windows.Forms.CheckBox> will result in OnClick cycling through all the values of the <xref:System.Windows.Forms.CheckBox.CheckState%2A> enumeration."},{"content":"Otherwise, OnClick switches between &lt;xref:System.Windows.Forms.CheckState&gt; and &lt;xref:System.Windows.Forms.CheckState&gt;.","pos":[364,482],"source":" Otherwise, OnClick switches between <xref:System.Windows.Forms.CheckState> and <xref:System.Windows.Forms.CheckState>."},{"content":"Raising an event invokes the event handler through a delegate.","pos":[489,551]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[552,647],"source":" For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnClick method also allows derived classes to handle the event without attaching a delegate.","pos":[654,750]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[751,825]}]},{"pos":[59593,59649],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[60167,60248],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.HandleCreated\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.HandleCreated\"></xref> event."},{"pos":[60403,60459],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[60998,61063],"content":"Raises the <xref:System.Windows.Forms.ButtonBase.OnKeyUp*> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises the &lt;xref:System.Windows.Forms.ButtonBase.OnKeyUp*&gt; event.","pos":[0,65],"source":"Raises the <xref:System.Windows.Forms.ButtonBase.OnKeyUp*> event."}]},{"pos":[61253,61339],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.KeyEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data."},{"pos":[61882,61909],"content":"Raises the OnMouseUp event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises the OnMouseUp event.","pos":[0,27]}]},{"pos":[62113,62201],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MouseEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data."},{"pos":[62696,62727],"content":"Processes a mnemonic character.","needQuote":true,"needEscape":true,"nodes":[{"content":"Processes a mnemonic character.","pos":[0,31]}]},{"pos":[62740,63622],"content":"This method is called to give a control the opportunity to process a mnemonic character. The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic. If so, the method should perform the action associated with the mnemonic and return `true`. If not, the method should return `false`. Implementations of this method often use the <xref:System.Windows.Forms.Control.IsMnemonic%2A> method to determine whether the given character matches a mnemonic in the control's text.       For example:      ```c#   if (CanSelect && IsMnemonic(charCode, MyControl.Text) {       // Perform action associated with mnemonic.       }   ```       This default implementation of the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method simply returns `false` to indicate that the control has no mnemonic.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called to give a control the opportunity to process a mnemonic character.","pos":[0,88]},{"content":"The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic.","pos":[89,229]},{"content":"If so, the method should perform the action associated with the mnemonic and return <ph id=\"ph1\">`true`</ph>.","pos":[230,321],"source":" If so, the method should perform the action associated with the mnemonic and return `true`."},{"content":"If not, the method should return <ph id=\"ph1\">`false`</ph>.","pos":[322,363],"source":" If not, the method should return `false`."},{"content":"Implementations of this method often use the &lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt; method to determine whether the given character matches a mnemonic in the control's text.","pos":[364,548],"source":" Implementations of this method often use the <xref:System.Windows.Forms.Control.IsMnemonic%2A> method to determine whether the given character matches a mnemonic in the control's text."},{"content":"For example:      <ph id=\"ph1\">```c#   if (CanSelect &amp;&amp; IsMnemonic(charCode, MyControl.Text) {       // Perform action associated with mnemonic.       }   ```</ph>       This default implementation of the &lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt; method simply returns <ph id=\"ph2\">`false`</ph> to indicate that the control has no mnemonic.","pos":[555,872],"source":"       For example:      ```c#   if (CanSelect && IsMnemonic(charCode, MyControl.Text) {       // Perform action associated with mnemonic.       }   ```       This default implementation of the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method simply returns `false` to indicate that the control has no mnemonic."}]},{"pos":[64622,64647],"content":"The character to process.","needQuote":true,"needEscape":true,"nodes":[{"content":"The character to process.","pos":[0,25]}]},{"pos":[64706,64902],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the character was processed as a mnemonic by the control; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the character was processed as a mnemonic by the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[65331,65436],"content":"Gets or sets the alignment of the text on the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CheckBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the alignment of the text on the <xref href=\"System.Windows.Forms.CheckBox\"></xref> control."},{"pos":[65607,65747],"content":"One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values. The default is <xref href=\"System.Drawing.ContentAlignment\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.ContentAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,71],"source":"One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Drawing.ContentAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[72,140],"source":" The default is <xref href=\"System.Drawing.ContentAlignment\"></xref>."}]},{"pos":[66175,66316],"content":"Gets or sets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CheckBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> will allow three check states rather than two.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether the <xref href=\"System.Windows.Forms.CheckBox\"></xref> will allow three check states rather than two."},{"pos":[66328,66592],"content":"If the ThreeState property is set to <ph id=\"ph1\">`false`</ph>, the &lt;xref:System.Windows.Forms.CheckBox.CheckState%2A&gt; property value can only be set to the <ph id=\"ph2\">`Indeterminate`</ph> value of &lt;xref:System.Windows.Forms.CheckState?displayProperty=fullName&gt; in code and not by user interaction.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the ThreeState property is set to `false`, the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property value can only be set to the `Indeterminate` value of <xref:System.Windows.Forms.CheckState?displayProperty=fullName> in code and not by user interaction."},{"pos":[67987,68304],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.CheckBox\"></xref> is able to display three check states; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.CheckBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is able to display three check states; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,232],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.CheckBox\"></xref> is able to display three check states; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[233,317],"source":" The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[68727,68831],"content":"Returns a string that represents the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CheckBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Returns a string that represents the current <xref href=\"System.Windows.Forms.CheckBox\"></xref> control."},{"pos":[68967,69084],"content":"A string that states the control type and the state of the <xref:System.Windows.Forms.CheckBox.CheckState*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that states the control type and the state of the &lt;xref:System.Windows.Forms.CheckBox.CheckState*&gt; property.","pos":[0,117],"source":"A string that states the control type and the state of the <xref:System.Windows.Forms.CheckBox.CheckState*> property."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.CheckBox\n  id: CheckBox\n  children:\n  - System.Windows.Forms.CheckBox.#ctor\n  - System.Windows.Forms.CheckBox.Appearance\n  - System.Windows.Forms.CheckBox.AppearanceChanged\n  - System.Windows.Forms.CheckBox.AutoCheck\n  - System.Windows.Forms.CheckBox.CheckAlign\n  - System.Windows.Forms.CheckBox.Checked\n  - System.Windows.Forms.CheckBox.CheckedChanged\n  - System.Windows.Forms.CheckBox.CheckState\n  - System.Windows.Forms.CheckBox.CheckStateChanged\n  - System.Windows.Forms.CheckBox.CreateAccessibilityInstance\n  - System.Windows.Forms.CheckBox.CreateParams\n  - System.Windows.Forms.CheckBox.DefaultSize\n  - System.Windows.Forms.CheckBox.DoubleClick\n  - System.Windows.Forms.CheckBox.MouseDoubleClick\n  - System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)\n  - System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)\n  - System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)\n  - System.Windows.Forms.CheckBox.OnClick(System.EventArgs)\n  - System.Windows.Forms.CheckBox.OnHandleCreated(System.EventArgs)\n  - System.Windows.Forms.CheckBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.CheckBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.CheckBox.ProcessMnemonic(System.Char)\n  - System.Windows.Forms.CheckBox.TextAlign\n  - System.Windows.Forms.CheckBox.ThreeState\n  - System.Windows.Forms.CheckBox.ToString\n  langs:\n  - csharp\n  name: CheckBox\n  nameWithType: CheckBox\n  fullName: System.Windows.Forms.CheckBox\n  type: Class\n  summary: Represents a Windows CheckBox.\n  remarks: \"Use a CheckBox to give the user an option, such as true/false or yes/no. The CheckBox control can display an image or text or both.  \\n  \\n CheckBox and <xref:System.Windows.Forms.RadioButton> controls have a similar function: they allow the user to choose from a list of options. CheckBox controls let the user pick a combination of options. In contrast, <xref:System.Windows.Forms.RadioButton> controls allow a user to choose from mutually exclusive options.  \\n  \\n The <xref:System.Windows.Forms.CheckBox.Appearance%2A> property determines whether the CheckBox appears as a typical CheckBox or as a button.  \\n  \\n The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property determines whether the control supports two or three states. Use the <xref:System.Windows.Forms.CheckBox.Checked%2A> property to get or set the value of a two-state CheckBox control and use the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property to get or set the value of a three-state CheckBox control.  \\n  \\n> [!NOTE]\\n>  If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `true`, the <xref:System.Windows.Forms.CheckBox.Checked%2A> property will return `true` for either a checked or indeterminate state.  \\n  \\n The <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property determines the style and appearance of the control. If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle?displayProperty=fullName>, the user's operating system determines the appearance of the control.  \\n  \\n> [!NOTE]\\n>  When the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle?displayProperty=fullName>, the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> property is ignored and the control is displayed using the <xref:System.Drawing.ContentAlignment?displayProperty=fullName> or <xref:System.Drawing.ContentAlignment?displayProperty=fullName> alignment. If the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> property is set to one of the right alignments, the control is displayed using the <xref:System.Drawing.ContentAlignment?displayProperty=fullName> alignment; otherwise, it is displayed using the <xref:System.Drawing.ContentAlignment?displayProperty=fullName> alignment.  \\n  \\n The following describes an indeterminate state: You have a CheckBox that determines if the selected text in a <xref:System.Windows.Forms.RichTextBox> is bold. When you select text you can click the CheckBox to bold the selection. Likewise, when you select some text, the CheckBox displays whether the selected text is bold. If your selected text contains text that is bold and normal, the CheckBox will have an indeterminate state.\"\n  example:\n  - \"The following code example creates and initializes a CheckBox, gives it the appearance of a toggle button, sets <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> to `false`, and adds it to a <xref:System.Windows.Forms.Form>.  \\n  \\n [!code-cpp[Classic CheckBox.CheckBox Example#1](~/add/codesnippet/cpp/t-system.windows.forms.c_13_1.cpp)]\\n [!code-vb[Classic CheckBox.CheckBox Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.c_13_1.vb)]\\n [!code-cs[Classic CheckBox.CheckBox Example#1](~/add/codesnippet/csharp/t-system.windows.forms.c_13_1.cs)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultBindingProperty(\"CheckState\")]\n\n      [System.ComponentModel.DefaultEvent(\"CheckedChanged\")]\n\n      [System.ComponentModel.DefaultProperty(\"Checked\")]\n\n      [System.ComponentModel.ToolboxItem(\"System.Windows.Forms.Design.AutoSizeToolboxItem,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CheckBox : System.Windows.Forms.ButtonBase\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Windows.Forms.Control\n  - System.Windows.Forms.ButtonBase\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Windows.Forms.ButtonBase.AutoEllipsis\n  - System.Windows.Forms.ButtonBase.AutoSize\n  - System.Windows.Forms.ButtonBase.AutoSizeChanged\n  - System.Windows.Forms.ButtonBase.BackColor\n  - System.Windows.Forms.ButtonBase.DefaultImeMode\n  - System.Windows.Forms.ButtonBase.Dispose(System.Boolean)\n  - System.Windows.Forms.ButtonBase.FlatAppearance\n  - System.Windows.Forms.ButtonBase.FlatStyle\n  - System.Windows.Forms.ButtonBase.GetPreferredSize(System.Drawing.Size)\n  - System.Windows.Forms.ButtonBase.Image\n  - System.Windows.Forms.ButtonBase.ImageAlign\n  - System.Windows.Forms.ButtonBase.ImageIndex\n  - System.Windows.Forms.ButtonBase.ImageKey\n  - System.Windows.Forms.ButtonBase.ImageList\n  - System.Windows.Forms.ButtonBase.ImeMode\n  - System.Windows.Forms.ButtonBase.ImeModeChanged\n  - System.Windows.Forms.ButtonBase.IsDefault\n  - System.Windows.Forms.ButtonBase.OnEnabledChanged(System.EventArgs)\n  - System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)\n  - System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)\n  - System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)\n  - System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)\n  - System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.ButtonBase.OnParentChanged(System.EventArgs)\n  - System.Windows.Forms.ButtonBase.OnTextChanged(System.EventArgs)\n  - System.Windows.Forms.ButtonBase.OnVisibleChanged(System.EventArgs)\n  - System.Windows.Forms.ButtonBase.ResetFlagsandPaint\n  - System.Windows.Forms.ButtonBase.Text\n  - System.Windows.Forms.ButtonBase.TextImageRelation\n  - System.Windows.Forms.ButtonBase.UseCompatibleTextRendering\n  - System.Windows.Forms.ButtonBase.UseMnemonic\n  - System.Windows.Forms.ButtonBase.UseVisualStyleBackColor\n  - System.Windows.Forms.ButtonBase.WndProc(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)\n  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.AccessibilityObject\n  - System.Windows.Forms.Control.AccessibleDefaultActionDescription\n  - System.Windows.Forms.Control.AccessibleDescription\n  - System.Windows.Forms.Control.AccessibleName\n  - System.Windows.Forms.Control.AccessibleRole\n  - System.Windows.Forms.Control.AllowDrop\n  - System.Windows.Forms.Control.Anchor\n  - System.Windows.Forms.Control.AutoScrollOffset\n  - System.Windows.Forms.Control.BackColorChanged\n  - System.Windows.Forms.Control.BackgroundImage\n  - System.Windows.Forms.Control.BackgroundImageChanged\n  - System.Windows.Forms.Control.BackgroundImageLayout\n  - System.Windows.Forms.Control.BackgroundImageLayoutChanged\n  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)\n  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])\n  - System.Windows.Forms.Control.BindingContext\n  - System.Windows.Forms.Control.BindingContextChanged\n  - System.Windows.Forms.Control.Bottom\n  - System.Windows.Forms.Control.Bounds\n  - System.Windows.Forms.Control.BringToFront\n  - System.Windows.Forms.Control.CanEnableIme\n  - System.Windows.Forms.Control.CanFocus\n  - System.Windows.Forms.Control.CanRaiseEvents\n  - System.Windows.Forms.Control.CanSelect\n  - System.Windows.Forms.Control.Capture\n  - System.Windows.Forms.Control.CausesValidation\n  - System.Windows.Forms.Control.CausesValidationChanged\n  - System.Windows.Forms.Control.ChangeUICues\n  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls\n  - System.Windows.Forms.Control.Click\n  - System.Windows.Forms.Control.ClientRectangle\n  - System.Windows.Forms.Control.ClientSize\n  - System.Windows.Forms.Control.ClientSizeChanged\n  - System.Windows.Forms.Control.CompanyName\n  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)\n  - System.Windows.Forms.Control.ContainsFocus\n  - System.Windows.Forms.Control.ContextMenu\n  - System.Windows.Forms.Control.ContextMenuChanged\n  - System.Windows.Forms.Control.ContextMenuStrip\n  - System.Windows.Forms.Control.ContextMenuStripChanged\n  - System.Windows.Forms.Control.ControlAdded\n  - System.Windows.Forms.Control.ControlRemoved\n  - System.Windows.Forms.Control.Controls\n  - System.Windows.Forms.Control.CreateControl\n  - System.Windows.Forms.Control.CreateControlsInstance\n  - System.Windows.Forms.Control.Created\n  - System.Windows.Forms.Control.CreateGraphics\n  - System.Windows.Forms.Control.CreateHandle\n  - System.Windows.Forms.Control.Cursor\n  - System.Windows.Forms.Control.CursorChanged\n  - System.Windows.Forms.Control.DataBindings\n  - System.Windows.Forms.Control.DefaultBackColor\n  - System.Windows.Forms.Control.DefaultCursor\n  - System.Windows.Forms.Control.DefaultFont\n  - System.Windows.Forms.Control.DefaultForeColor\n  - System.Windows.Forms.Control.DefaultMargin\n  - System.Windows.Forms.Control.DefaultMaximumSize\n  - System.Windows.Forms.Control.DefaultMinimumSize\n  - System.Windows.Forms.Control.DefaultPadding\n  - System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.DestroyHandle\n  - System.Windows.Forms.Control.DisplayRectangle\n  - System.Windows.Forms.Control.Disposing\n  - System.Windows.Forms.Control.Dock\n  - System.Windows.Forms.Control.DockChanged\n  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)\n  - System.Windows.Forms.Control.DoubleBuffered\n  - System.Windows.Forms.Control.DragDrop\n  - System.Windows.Forms.Control.DragEnter\n  - System.Windows.Forms.Control.DragLeave\n  - System.Windows.Forms.Control.DragOver\n  - System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.Enabled\n  - System.Windows.Forms.Control.EnabledChanged\n  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)\n  - System.Windows.Forms.Control.Enter\n  - System.Windows.Forms.Control.FindForm\n  - System.Windows.Forms.Control.Focus\n  - System.Windows.Forms.Control.Focused\n  - System.Windows.Forms.Control.Font\n  - System.Windows.Forms.Control.FontChanged\n  - System.Windows.Forms.Control.FontHeight\n  - System.Windows.Forms.Control.ForeColor\n  - System.Windows.Forms.Control.ForeColorChanged\n  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)\n  - System.Windows.Forms.Control.FromHandle(System.IntPtr)\n  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)\n  - System.Windows.Forms.Control.GetAutoSizeMode\n  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)\n  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)\n  - System.Windows.Forms.Control.GetContainerControl\n  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)\n  - System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)\n  - System.Windows.Forms.Control.GetTopLevel\n  - System.Windows.Forms.Control.GiveFeedback\n  - System.Windows.Forms.Control.GotFocus\n  - System.Windows.Forms.Control.Handle\n  - System.Windows.Forms.Control.HandleCreated\n  - System.Windows.Forms.Control.HandleDestroyed\n  - System.Windows.Forms.Control.HasChildren\n  - System.Windows.Forms.Control.Height\n  - System.Windows.Forms.Control.HelpRequested\n  - System.Windows.Forms.Control.Hide\n  - System.Windows.Forms.Control.ImeModeBase\n  - System.Windows.Forms.Control.InitLayout\n  - System.Windows.Forms.Control.Invalidate\n  - System.Windows.Forms.Control.Invalidate(System.Boolean)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)\n  - System.Windows.Forms.Control.Invalidated\n  - System.Windows.Forms.Control.Invoke(System.Delegate)\n  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])\n  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.InvokeRequired\n  - System.Windows.Forms.Control.IsAccessible\n  - System.Windows.Forms.Control.IsDisposed\n  - System.Windows.Forms.Control.IsHandleCreated\n  - System.Windows.Forms.Control.IsInputChar(System.Char)\n  - System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)\n  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)\n  - System.Windows.Forms.Control.IsMirrored\n  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)\n  - System.Windows.Forms.Control.KeyDown\n  - System.Windows.Forms.Control.KeyPress\n  - System.Windows.Forms.Control.KeyUp\n  - System.Windows.Forms.Control.Layout\n  - System.Windows.Forms.Control.LayoutEngine\n  - System.Windows.Forms.Control.Leave\n  - System.Windows.Forms.Control.Left\n  - System.Windows.Forms.Control.Location\n  - System.Windows.Forms.Control.LocationChanged\n  - System.Windows.Forms.Control.LostFocus\n  - System.Windows.Forms.Control.Margin\n  - System.Windows.Forms.Control.MarginChanged\n  - System.Windows.Forms.Control.MaximumSize\n  - System.Windows.Forms.Control.MinimumSize\n  - System.Windows.Forms.Control.ModifierKeys\n  - System.Windows.Forms.Control.MouseButtons\n  - System.Windows.Forms.Control.MouseCaptureChanged\n  - System.Windows.Forms.Control.MouseClick\n  - System.Windows.Forms.Control.MouseDown\n  - System.Windows.Forms.Control.MouseEnter\n  - System.Windows.Forms.Control.MouseHover\n  - System.Windows.Forms.Control.MouseLeave\n  - System.Windows.Forms.Control.MouseMove\n  - System.Windows.Forms.Control.MousePosition\n  - System.Windows.Forms.Control.MouseUp\n  - System.Windows.Forms.Control.MouseWheel\n  - System.Windows.Forms.Control.Move\n  - System.Windows.Forms.Control.Name\n  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)\n  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)\n  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)\n  - System.Windows.Forms.Control.OnCreateControl\n  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)\n  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnEnter(System.EventArgs)\n  - System.Windows.Forms.Control.OnFontChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)\n  - System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)\n  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)\n  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)\n  - System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)\n  - System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)\n  - System.Windows.Forms.Control.OnLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMove(System.EventArgs)\n  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)\n  - System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)\n  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)\n  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnResize(System.EventArgs)\n  - System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnValidated(System.EventArgs)\n  - System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)\n  - System.Windows.Forms.Control.Padding\n  - System.Windows.Forms.Control.PaddingChanged\n  - System.Windows.Forms.Control.Paint\n  - System.Windows.Forms.Control.Parent\n  - System.Windows.Forms.Control.ParentChanged\n  - System.Windows.Forms.Control.PerformLayout\n  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)\n  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)\n  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)\n  - System.Windows.Forms.Control.PreferredSize\n  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.PreviewKeyDown\n  - System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  - System.Windows.Forms.Control.ProcessDialogChar(System.Char)\n  - System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)\n  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProductName\n  - System.Windows.Forms.Control.ProductVersion\n  - System.Windows.Forms.Control.PropagatingImeMode\n  - System.Windows.Forms.Control.QueryAccessibilityHelp\n  - System.Windows.Forms.Control.QueryContinueDrag\n  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.RecreateHandle\n  - System.Windows.Forms.Control.RecreatingHandle\n  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.Refresh\n  - System.Windows.Forms.Control.Region\n  - System.Windows.Forms.Control.RegionChanged\n  - System.Windows.Forms.Control.RenderRightToLeft\n  - System.Windows.Forms.Control.ResetBackColor\n  - System.Windows.Forms.Control.ResetBindings\n  - System.Windows.Forms.Control.ResetCursor\n  - System.Windows.Forms.Control.ResetFont\n  - System.Windows.Forms.Control.ResetForeColor\n  - System.Windows.Forms.Control.ResetImeMode\n  - System.Windows.Forms.Control.ResetMouseEventArgs\n  - System.Windows.Forms.Control.ResetRightToLeft\n  - System.Windows.Forms.Control.ResetText\n  - System.Windows.Forms.Control.Resize\n  - System.Windows.Forms.Control.ResizeRedraw\n  - System.Windows.Forms.Control.ResumeLayout\n  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)\n  - System.Windows.Forms.Control.Right\n  - System.Windows.Forms.Control.RightToLeft\n  - System.Windows.Forms.Control.RightToLeftChanged\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)\n  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)\n  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)\n  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)\n  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)\n  - System.Windows.Forms.Control.Scale(System.Single)\n  - System.Windows.Forms.Control.Scale(System.Single,System.Single)\n  - System.Windows.Forms.Control.ScaleChildren\n  - System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)\n  - System.Windows.Forms.Control.Select\n  - System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)\n  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)\n  - System.Windows.Forms.Control.SendToBack\n  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)\n  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)\n  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)\n  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)\n  - System.Windows.Forms.Control.SetVisibleCore(System.Boolean)\n  - System.Windows.Forms.Control.Show\n  - System.Windows.Forms.Control.ShowFocusCues\n  - System.Windows.Forms.Control.ShowKeyboardCues\n  - System.Windows.Forms.Control.Site\n  - System.Windows.Forms.Control.Size\n  - System.Windows.Forms.Control.SizeChanged\n  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)\n  - System.Windows.Forms.Control.StyleChanged\n  - System.Windows.Forms.Control.SuspendLayout\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.SystemColorsChanged\n  - System.Windows.Forms.Control.TabIndex\n  - System.Windows.Forms.Control.TabIndexChanged\n  - System.Windows.Forms.Control.TabStop\n  - System.Windows.Forms.Control.TabStopChanged\n  - System.Windows.Forms.Control.Tag\n  - System.Windows.Forms.Control.TextChanged\n  - System.Windows.Forms.Control.Top\n  - System.Windows.Forms.Control.TopLevelControl\n  - System.Windows.Forms.Control.Update\n  - System.Windows.Forms.Control.UpdateBounds\n  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.UpdateStyles\n  - System.Windows.Forms.Control.UpdateZOrder\n  - System.Windows.Forms.Control.UseWaitCursor\n  - System.Windows.Forms.Control.Validated\n  - System.Windows.Forms.Control.Validating\n  - System.Windows.Forms.Control.Visible\n  - System.Windows.Forms.Control.VisibleChanged\n  - System.Windows.Forms.Control.Width\n  - System.Windows.Forms.Control.WindowTarget\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: CheckBox()\n  nameWithType: CheckBox.CheckBox()\n  fullName: System.Windows.Forms.CheckBox.CheckBox()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.CheckBox\"></xref> class.\n  remarks: By default, when a new <xref:System.Windows.Forms.CheckBox> is instantiated, <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> is set to `true`, <xref:System.Windows.Forms.CheckBox.Checked%2A> is set to `false`, and <xref:System.Windows.Forms.CheckBox.Appearance%2A> is set to <xref:System.Windows.Forms.Appearance>.\n  example:\n  - \"The following code example creates and initializes a <xref:System.Windows.Forms.CheckBox>, gives it the appearance of a toggle button, sets <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> to `false`, and adds it to a <xref:System.Windows.Forms.Form>.  \\n  \\n [!code-cpp[Classic CheckBox.CheckBox Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_105_1.cpp)]\\n [!code-vb[Classic CheckBox.CheckBox Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_105_1.vb)]\\n [!code-cs[Classic CheckBox.CheckBox Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_105_1.cs)]\"\n  syntax:\n    content: public CheckBox ();\n    parameters: []\n  overload: System.Windows.Forms.CheckBox.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.Appearance\n  id: Appearance\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: Appearance\n  nameWithType: CheckBox.Appearance\n  fullName: System.Windows.Forms.CheckBox.Appearance\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the value that determines the appearance of a <xref href=\"System.Windows.Forms.CheckBox\"></xref> control.\n  remarks: If Appearance value is set to <xref:System.Windows.Forms.Appearance>, the <xref:System.Windows.Forms.CheckBox> has a typical appearance. If the value is set to `Button`, the <xref:System.Windows.Forms.CheckBox> appears like a toggle button, which can be toggled to an up or down state.\n  example:\n  - \"The following code example creates and initializes a <xref:System.Windows.Forms.CheckBox>, gives it the appearance of a toggle button, sets <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> to `false`, and adds it to a <xref:System.Windows.Forms.Form>.  \\n  \\n [!code-cpp[Classic CheckBox.CheckBox Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_110_1.cpp)]\\n [!code-vb[Classic CheckBox.CheckBox Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_110_1.vb)]\\n [!code-cs[Classic CheckBox.CheckBox Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_110_1.cs)]\"\n  syntax:\n    content: public System.Windows.Forms.Appearance Appearance { get; set; }\n    return:\n      type: System.Windows.Forms.Appearance\n      description: One of the <xref href=\"System.Windows.Forms.Appearance\"></xref> values. The default value is <xref href=\"System.Windows.Forms.Appearance\"></xref>.\n  overload: System.Windows.Forms.CheckBox.Appearance*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value assigned is not one of the <xref href=\"System.Windows.Forms.Appearance\"></xref> values.\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.AppearanceChanged\n  id: AppearanceChanged\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: AppearanceChanged\n  nameWithType: CheckBox.AppearanceChanged\n  fullName: System.Windows.Forms.CheckBox.AppearanceChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref:System.Windows.Forms.CheckBox.Appearance*> property changes.\n  remarks: For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AppearanceChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CheckBox> named `CheckBox1`. Then ensure that the event handler is associated with the AppearanceChanged event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#139](~/add/codesnippet/csharp/e-system.windows.forms.c_71_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#139](~/add/codesnippet/visualbasic/e-system.windows.forms.c_71_1.vb)]\"\n  syntax:\n    content: public event EventHandler AppearanceChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.AutoCheck\n  id: AutoCheck\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: AutoCheck\n  nameWithType: CheckBox.AutoCheck\n  fullName: System.Windows.Forms.CheckBox.AutoCheck\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or set a value indicating whether the <xref:System.Windows.Forms.CheckBox.Checked*> or <xref:System.Windows.Forms.CheckBox.CheckState*> values and the <xref href=\"System.Windows.Forms.CheckBox\"></xref>'s appearance are automatically changed when the <xref href=\"System.Windows.Forms.CheckBox\"></xref> is clicked.\n  remarks: If AutoCheck is set to false, you will need to add code to update the <xref:System.Windows.Forms.CheckBox.Checked%2A> or <xref:System.Windows.Forms.CheckBox.CheckState%2A> values in the <xref:System.Windows.Forms.Control.Click> event handler.\n  example:\n  - \"The following code example creates and initializes a <xref:System.Windows.Forms.CheckBox>, gives it the appearance of a toggle button, sets AutoCheck to `false`, and adds it to a <xref:System.Windows.Forms.Form>.  \\n  \\n [!code-cpp[Classic CheckBox.CheckBox Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_73_1.cpp)]\\n [!code-vb[Classic CheckBox.CheckBox Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_73_1.vb)]\\n [!code-cs[Classic CheckBox.CheckBox Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_73_1.cs)]\"\n  syntax:\n    content: public bool AutoCheck { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Forms.CheckBox.Checked*> value or <xref:System.Windows.Forms.CheckBox.CheckState*> value and the appearance of the control are automatically changed on the <xref href=\"System.Windows.Forms.Control.Click\"></xref> event; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Forms.CheckBox.AutoCheck*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.CheckAlign\n  id: CheckAlign\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: CheckAlign\n  nameWithType: CheckBox.CheckAlign\n  fullName: System.Windows.Forms.CheckBox.CheckAlign\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the horizontal and vertical alignment of the check mark on a <xref href=\"System.Windows.Forms.CheckBox\"></xref> control.\n  remarks: ''\n  example:\n  - \"The following code example displays the values of three properties in a label. The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property alternates between `true` and `false` with alternating clicks of the control and the CheckAlign alternates between the `MiddleRight` and `MiddleLeft` values of <xref:System.Drawing.ContentAlignment>. This example shows how the property values change as the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property changes and the control is checked. This example requires that a <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.Button> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <xref:System.Drawing?displayProperty=fullName> namespace. This code should be called in the <xref:System.Windows.Forms.Control.Click> event handler of the control.  \\n  \\n [!code-cs[Classic CheckBox.CheckAlign Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_47_1.cs)]\\n [!code-vb[Classic CheckBox.CheckAlign Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_47_1.vb)]\\n [!code-cpp[Classic CheckBox.CheckAlign Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_47_1.cpp)]\"\n  syntax:\n    content: public System.Drawing.ContentAlignment CheckAlign { get; set; }\n    return:\n      type: System.Drawing.ContentAlignment\n      description: One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values. The default value is <xref uid=\"langword_csharp_MiddleLeft\" name=\"MiddleLeft\" href=\"\"></xref>.\n  overload: System.Windows.Forms.CheckBox.CheckAlign*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value assigned is not one of the <xref href=\"System.Drawing.ContentAlignment\"></xref> enumeration values.\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.Checked\n  id: Checked\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: Checked\n  nameWithType: CheckBox.Checked\n  fullName: System.Windows.Forms.CheckBox.Checked\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or set a value indicating whether the <xref href=\"System.Windows.Forms.CheckBox\"></xref> is in the checked state.\n  remarks: When the value is `true`, the <xref:System.Windows.Forms.CheckBox> portion of the control displays a check mark. If the <xref:System.Windows.Forms.CheckBox.Appearance%2A> property is set to `Button`, the control will appear sunken when Checked is `true` and raised like a standard button when `false`.\n  example:\n  - \"The following code example displays the values of three properties in a label. The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property alternates between `true` and `false` with alternating clicks of the control and the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> alternates between a <xref:System.Drawing.ContentAlignment> value of `MiddleRight` and `MiddleLeft`. This example shows how the property values change as the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property changes and the control is checked. This example requires that a <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.Button> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <xref:System.Drawing?displayProperty=fullName> namespace. This code should be called in the <xref:System.Windows.Forms.Control.Click> event handler of the control.  \\n  \\n [!code-cs[Classic CheckBox.CheckAlign Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_6_1.cs)]\\n [!code-vb[Classic CheckBox.CheckAlign Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_6_1.vb)]\\n [!code-cpp[Classic CheckBox.CheckAlign Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_6_1.cpp)]\"\n  syntax:\n    content: public bool Checked { get; set; }\n    return:\n      type: System.Boolean\n      description: \"<xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> if the <xref href=\\\"System.Windows.Forms.CheckBox\\\"></xref> is in the checked state; otherwise, <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>. The default value is <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>.  \\n  \\n <div class=\\\"alert NOTE\\\">  \\n If the <xref:System.Windows.Forms.CheckBox.ThreeState*> property is set to <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>, the Checked property will return <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> for either a <xref uid=\\\"langword_csharp_Checked\\\" name=\\\"Checked\\\" href=\\\"\\\"></xref> or <xref uid=\\\"langword_csharp_Indeterminate\\\" name=\\\"Indeterminate\\\" href=\\\"\\\"></xref><xref:System.Windows.Forms.CheckBox.CheckState*>.  \\n  \\n</div>\"\n  overload: System.Windows.Forms.CheckBox.Checked*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.CheckedChanged\n  id: CheckedChanged\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: CheckedChanged\n  nameWithType: CheckBox.CheckedChanged\n  fullName: System.Windows.Forms.CheckBox.CheckedChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref:System.Windows.Forms.CheckBox.Checked*> property changes.\n  remarks: For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CheckedChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CheckBox> named `CheckBox1`. Then ensure that the event handler is associated with the CheckedChanged event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#140](~/add/codesnippet/csharp/e-system.windows.forms.c_77_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#140](~/add/codesnippet/visualbasic/e-system.windows.forms.c_77_1.vb)]\"\n  syntax:\n    content: public event EventHandler CheckedChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.CheckState\n  id: CheckState\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: CheckState\n  nameWithType: CheckBox.CheckState\n  fullName: System.Windows.Forms.CheckBox.CheckState\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the state of the <xref href=\"System.Windows.Forms.CheckBox\"></xref>.\n  remarks: \"If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `false`, the CheckState property value can only be set to `CheckState.Indeterminate` in code and not by user interaction.  \\n  \\n The following table describes the <xref:System.Windows.Forms.Appearance?displayProperty=fullName> of the <xref:System.Windows.Forms.CheckBox> control in its different states for the `Normal` and `Button` style control <xref:System.Windows.Forms.CheckBox.Appearance%2A?displayProperty=fullName>.  \\n  \\n|CheckState|Appearance.Normal|Appearance.Button|  \\n|----------------|-----------------------|-----------------------|  \\n|`Checked`|The <xref:System.Windows.Forms.CheckBox> displays a check mark.|The control appears sunken.|  \\n|`Unchecked`|The <xref:System.Windows.Forms.CheckBox> is empty.|The control appears raised.|  \\n|`Indeterminate`|The <xref:System.Windows.Forms.CheckBox> displays a check mark and is shaded.|The control appears flat.|\"\n  example:\n  - \"The following code example displays the values of three properties in a label. The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property alternates between `true` and `false` with alternating clicks of the control and the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> alternates between the `MiddleRight` and `MiddleLeft` values of <xref:System.Drawing.ContentAlignment?displayProperty=fullName>. This example shows how the property values change as the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property changes and the control is checked. This example requires that a <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.Button> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <xref:System.Drawing?displayProperty=fullName> namespace. This code should be called in the <xref:System.Windows.Forms.Control.Click> event handler of the control.  \\n  \\n [!code-cs[Classic CheckBox.CheckAlign Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_97_1.cs)]\\n [!code-vb[Classic CheckBox.CheckAlign Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_97_1.vb)]\\n [!code-cpp[Classic CheckBox.CheckAlign Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_97_1.cpp)]\"\n  syntax:\n    content: public System.Windows.Forms.CheckState CheckState { get; set; }\n    return:\n      type: System.Windows.Forms.CheckState\n      description: One of the <xref href=\"System.Windows.Forms.CheckState\"></xref> enumeration values. The default value is <xref uid=\"langword_csharp_Unchecked\" name=\"Unchecked\" href=\"\"></xref>.\n  overload: System.Windows.Forms.CheckBox.CheckState*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value assigned is not one of the <xref href=\"System.Windows.Forms.CheckState\"></xref> enumeration values.\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.CheckStateChanged\n  id: CheckStateChanged\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: CheckStateChanged\n  nameWithType: CheckBox.CheckStateChanged\n  fullName: System.Windows.Forms.CheckBox.CheckStateChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref:System.Windows.Forms.CheckBox.CheckState*> property changes.\n  remarks: For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CheckStateChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CheckBox> named `CheckBox1`. Then ensure that the event handler is associated with the CheckStateChanged event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#141](~/add/codesnippet/csharp/e-system.windows.forms.c_82_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#141](~/add/codesnippet/visualbasic/e-system.windows.forms.c_82_1.vb)]\"\n  syntax:\n    content: public event EventHandler CheckStateChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.CreateAccessibilityInstance\n  id: CreateAccessibilityInstance\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: CreateAccessibilityInstance()\n  nameWithType: CheckBox.CreateAccessibilityInstance()\n  fullName: System.Windows.Forms.CheckBox.CreateAccessibilityInstance()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates a new accessibility object for the <xref href=\"System.Windows.Forms.CheckBox\"></xref> control.\n  remarks: \"If you do not explicitly call the CreateAccessibilityInstance method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced.  \\n  \\n> [!NOTE]\\n>  To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the .NET Framework.\"\n  syntax:\n    content: protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();\n    parameters: []\n    return:\n      type: System.Windows.Forms.AccessibleObject\n      description: A new <xref:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject> for the control.\n  overload: System.Windows.Forms.CheckBox.CreateAccessibilityInstance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.CreateParams\n  id: CreateParams\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: CreateParams\n  nameWithType: CheckBox.CreateParams\n  fullName: System.Windows.Forms.CheckBox.CreateParams\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the required creation parameters when the control handle is created.\n  remarks: ''\n  example:\n  - \"The following code example extends the <xref:System.Windows.Forms.Control.CreateParams%2A> property of a <xref:System.Windows.Forms.Button> derived class. The <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=fullName> property is changed, which causes the button to display an <xref:System.Drawing.Icon> rather than an <xref:System.Drawing.Image>. This example requires that you have a class that inherits from the <xref:System.Windows.Forms.Button> class.  \\n  \\n [!code-cs[CreateParams#3](~/add/codesnippet/csharp/p-system.windows.forms.c_33_1.cs)]\\n [!code-cpp[CreateParams#3](~/add/codesnippet/cpp/p-system.windows.forms.c_33_1.cpp)]\\n [!code-vb[CreateParams#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_33_1.vb)]\"\n  syntax:\n    content: protected override System.Windows.Forms.CreateParams CreateParams { get; }\n    return:\n      type: System.Windows.Forms.CreateParams\n      description: A <xref href=\"System.Windows.Forms.CreateParams\"></xref> that contains the required creation parameters when the handle to the control is created.\n  overload: System.Windows.Forms.CheckBox.CreateParams*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.DefaultSize\n  id: DefaultSize\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: DefaultSize\n  nameWithType: CheckBox.DefaultSize\n  fullName: System.Windows.Forms.CheckBox.DefaultSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the default size of the control.\n  syntax:\n    content: protected override System.Drawing.Size DefaultSize { get; }\n    return:\n      type: System.Drawing.Size\n      description: The default size.\n  overload: System.Windows.Forms.CheckBox.DefaultSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.DoubleClick\n  id: DoubleClick\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: DoubleClick\n  nameWithType: CheckBox.DoubleClick\n  fullName: System.Windows.Forms.CheckBox.DoubleClick\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user double-clicks the <xref href=\"System.Windows.Forms.CheckBox\"></xref> control.\n  remarks: \"By default, the <xref:System.Windows.Forms.ControlStyles> and <xref:System.Windows.Forms.ControlStyles> enumerations are set to false for the <xref:System.Windows.Forms.CheckBox> control, and the DoubleClick event is not raised.  \\n  \\n This event is not relevant to this class.\"\n  syntax:\n    content: public event EventHandler DoubleClick;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.MouseDoubleClick\n  id: MouseDoubleClick\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: MouseDoubleClick\n  nameWithType: CheckBox.MouseDoubleClick\n  fullName: System.Windows.Forms.CheckBox.MouseDoubleClick\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user double-clicks the <xref href=\"System.Windows.Forms.CheckBox\"></xref> control.\n  remarks: \"By default, the <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> and <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> style bits are set to `false` for the <xref:System.Windows.Forms.CheckBox> control, and the MouseDoubleClick event is not raised.  \\n  \\n This event is not relevant to this class.\"\n  syntax:\n    content: public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;\n    return:\n      type: System.Windows.Forms.MouseEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)\n  id: OnAppearanceChanged(System.EventArgs)\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: OnAppearanceChanged(EventArgs)\n  nameWithType: CheckBox.OnAppearanceChanged(EventArgs)\n  fullName: System.Windows.Forms.CheckBox.OnAppearanceChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.CheckBox.AppearanceChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnAppearanceChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnAppearanceChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.CheckBox.OnAppearanceChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)\n  id: OnCheckedChanged(System.EventArgs)\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: OnCheckedChanged(EventArgs)\n  nameWithType: CheckBox.OnCheckedChanged(EventArgs)\n  fullName: System.Windows.Forms.CheckBox.OnCheckedChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.CheckBox.CheckedChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnCheckedChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnCheckedChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.CheckBox.OnCheckedChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)\n  id: OnCheckStateChanged(System.EventArgs)\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: OnCheckStateChanged(EventArgs)\n  nameWithType: CheckBox.OnCheckStateChanged(EventArgs)\n  fullName: System.Windows.Forms.CheckBox.OnCheckStateChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.CheckBox.CheckStateChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnCheckStateChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnCheckStateChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.CheckBox.OnCheckStateChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.OnClick(System.EventArgs)\n  id: OnClick(System.EventArgs)\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: OnClick(EventArgs)\n  nameWithType: CheckBox.OnClick(EventArgs)\n  fullName: System.Windows.Forms.CheckBox.OnClick(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Click\"></xref> event.\n  remarks: \"The OnClick method changes the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property. If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `true`, subsequent clicks of the <xref:System.Windows.Forms.CheckBox> will result in OnClick cycling through all the values of the <xref:System.Windows.Forms.CheckBox.CheckState%2A> enumeration. Otherwise, OnClick switches between <xref:System.Windows.Forms.CheckState> and <xref:System.Windows.Forms.CheckState>.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected override void OnClick (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.CheckBox.OnClick*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.OnHandleCreated(System.EventArgs)\n  id: OnHandleCreated(System.EventArgs)\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: OnHandleCreated(EventArgs)\n  nameWithType: CheckBox.OnHandleCreated(EventArgs)\n  fullName: System.Windows.Forms.CheckBox.OnHandleCreated(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.HandleCreated\"></xref> event.\n  syntax:\n    content: protected override void OnHandleCreated (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.CheckBox.OnHandleCreated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  id: OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: OnKeyDown(KeyEventArgs)\n  nameWithType: CheckBox.OnKeyDown(KeyEventArgs)\n  fullName: System.Windows.Forms.CheckBox.OnKeyDown(KeyEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref:System.Windows.Forms.ButtonBase.OnKeyUp*> event.\n  syntax:\n    content: protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.KeyEventArgs\n      description: A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.CheckBox.OnKeyDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  id: OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: OnMouseUp(MouseEventArgs)\n  nameWithType: CheckBox.OnMouseUp(MouseEventArgs)\n  fullName: System.Windows.Forms.CheckBox.OnMouseUp(MouseEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the OnMouseUp event.\n  syntax:\n    content: protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);\n    parameters:\n    - id: mevent\n      type: System.Windows.Forms.MouseEventArgs\n      description: A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.CheckBox.OnMouseUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.ProcessMnemonic(System.Char)\n  id: ProcessMnemonic(System.Char)\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: ProcessMnemonic(Char)\n  nameWithType: CheckBox.ProcessMnemonic(Char)\n  fullName: System.Windows.Forms.CheckBox.ProcessMnemonic(Char)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes a mnemonic character.\n  remarks: \"This method is called to give a control the opportunity to process a mnemonic character. The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic. If so, the method should perform the action associated with the mnemonic and return `true`. If not, the method should return `false`. Implementations of this method often use the <xref:System.Windows.Forms.Control.IsMnemonic%2A> method to determine whether the given character matches a mnemonic in the control's text.  \\n  \\n For example:  \\n  \\n```c#  \\nif (CanSelect && IsMnemonic(charCode, MyControl.Text) {  \\n    // Perform action associated with mnemonic.  \\n    }  \\n```  \\n  \\n This default implementation of the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method simply returns `false` to indicate that the control has no mnemonic.\"\n  example:\n  - \"The following code example demonstrates an extension of the button class that overrides the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method to exhibit custom behavior. The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and <xref:System.Windows.Forms.Control.IsMnemonic%2A> properties. To run this example, paste the following code after a form class, in the same file. Add a button of type `MnemonicButton` to the form.  \\n  \\n [!code-cs[System.Windows.Forms.ProcessMnemonic#1](~/add/codesnippet/csharp/m-system.windows.forms.c_50_1.cs)]\\n [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/add/codesnippet/cpp/m-system.windows.forms.c_50_1.cpp)]\\n [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_50_1.vb)]\"\n  syntax:\n    content: protected override bool ProcessMnemonic (char charCode);\n    parameters:\n    - id: charCode\n      type: System.Char\n      description: The character to process.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the character was processed as a mnemonic by the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.CheckBox.ProcessMnemonic*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.TextAlign\n  id: TextAlign\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: TextAlign\n  nameWithType: CheckBox.TextAlign\n  fullName: System.Windows.Forms.CheckBox.TextAlign\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the alignment of the text on the <xref href=\"System.Windows.Forms.CheckBox\"></xref> control.\n  syntax:\n    content: public override System.Drawing.ContentAlignment TextAlign { get; set; }\n    return:\n      type: System.Drawing.ContentAlignment\n      description: One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values. The default is <xref href=\"System.Drawing.ContentAlignment\"></xref>.\n  overload: System.Windows.Forms.CheckBox.TextAlign*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.ThreeState\n  id: ThreeState\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: ThreeState\n  nameWithType: CheckBox.ThreeState\n  fullName: System.Windows.Forms.CheckBox.ThreeState\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the <xref href=\"System.Windows.Forms.CheckBox\"></xref> will allow three check states rather than two.\n  remarks: If the ThreeState property is set to `false`, the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property value can only be set to the `Indeterminate` value of <xref:System.Windows.Forms.CheckState?displayProperty=fullName> in code and not by user interaction.\n  example:\n  - \"The following code example displays the values of three properties in a label. The ThreeState property alternates between `true` and `false` with alternating clicks of the control and the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> alternates between the `MiddleRight` and `MiddleLeft` values of <xref:System.Drawing.ContentAlignment?displayProperty=fullName>. This example shows how the property values change as the ThreeState property changes and the control is checked. This code requires that a <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.Button> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <xref:System.Drawing?displayProperty=fullName> namespace. This code should be called in the <xref:System.Windows.Forms.Control.Click> event handler of the control.  \\n  \\n [!code-cs[Classic CheckBox.CheckAlign Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_88_1.cs)]\\n [!code-vb[Classic CheckBox.CheckAlign Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_88_1.vb)]\\n [!code-cpp[Classic CheckBox.CheckAlign Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_88_1.cpp)]\"\n  syntax:\n    content: public bool ThreeState { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.CheckBox\"></xref> is able to display three check states; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.CheckBox.ThreeState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CheckBox.ToString\n  id: ToString\n  parent: System.Windows.Forms.CheckBox\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: CheckBox.ToString()\n  fullName: System.Windows.Forms.CheckBox.ToString()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Returns a string that represents the current <xref href=\"System.Windows.Forms.CheckBox\"></xref> control.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that states the control type and the state of the <xref:System.Windows.Forms.CheckBox.CheckState*> property.\n  overload: System.Windows.Forms.CheckBox.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: System.Windows.Forms.ButtonBase\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.Windows.Forms.CheckBox.#ctor\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: CheckBox()\n  nameWithType: CheckBox.CheckBox()\n  fullName: System.Windows.Forms.CheckBox.CheckBox()\n- uid: System.Windows.Forms.CheckBox.Appearance\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: Appearance\n  nameWithType: CheckBox.Appearance\n  fullName: System.Windows.Forms.CheckBox.Appearance\n- uid: System.Windows.Forms.Appearance\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Appearance\n  nameWithType: Appearance\n  fullName: System.Windows.Forms.Appearance\n- uid: System.Windows.Forms.CheckBox.AppearanceChanged\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: AppearanceChanged\n  nameWithType: CheckBox.AppearanceChanged\n  fullName: System.Windows.Forms.CheckBox.AppearanceChanged\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Forms.CheckBox.AutoCheck\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: AutoCheck\n  nameWithType: CheckBox.AutoCheck\n  fullName: System.Windows.Forms.CheckBox.AutoCheck\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.CheckBox.CheckAlign\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: CheckAlign\n  nameWithType: CheckBox.CheckAlign\n  fullName: System.Windows.Forms.CheckBox.CheckAlign\n- uid: System.Drawing.ContentAlignment\n  parent: System.Drawing\n  isExternal: false\n  name: ContentAlignment\n  nameWithType: ContentAlignment\n  fullName: System.Drawing.ContentAlignment\n- uid: System.Windows.Forms.CheckBox.Checked\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: Checked\n  nameWithType: CheckBox.Checked\n  fullName: System.Windows.Forms.CheckBox.Checked\n- uid: System.Windows.Forms.CheckBox.CheckedChanged\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: CheckedChanged\n  nameWithType: CheckBox.CheckedChanged\n  fullName: System.Windows.Forms.CheckBox.CheckedChanged\n- uid: System.Windows.Forms.CheckBox.CheckState\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: CheckState\n  nameWithType: CheckBox.CheckState\n  fullName: System.Windows.Forms.CheckBox.CheckState\n- uid: System.Windows.Forms.CheckState\n  parent: System.Windows.Forms\n  isExternal: false\n  name: CheckState\n  nameWithType: CheckState\n  fullName: System.Windows.Forms.CheckState\n- uid: System.Windows.Forms.CheckBox.CheckStateChanged\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: CheckStateChanged\n  nameWithType: CheckBox.CheckStateChanged\n  fullName: System.Windows.Forms.CheckBox.CheckStateChanged\n- uid: System.Windows.Forms.CheckBox.CreateAccessibilityInstance\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: CreateAccessibilityInstance()\n  nameWithType: CheckBox.CreateAccessibilityInstance()\n  fullName: System.Windows.Forms.CheckBox.CreateAccessibilityInstance()\n- uid: System.Windows.Forms.AccessibleObject\n  parent: System.Windows.Forms\n  isExternal: false\n  name: AccessibleObject\n  nameWithType: AccessibleObject\n  fullName: System.Windows.Forms.AccessibleObject\n- uid: System.Windows.Forms.CheckBox.CreateParams\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: CreateParams\n  nameWithType: CheckBox.CreateParams\n  fullName: System.Windows.Forms.CheckBox.CreateParams\n- uid: System.Windows.Forms.CreateParams\n  parent: System.Windows.Forms\n  isExternal: false\n  name: CreateParams\n  nameWithType: CreateParams\n  fullName: System.Windows.Forms.CreateParams\n- uid: System.Windows.Forms.CheckBox.DefaultSize\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: DefaultSize\n  nameWithType: CheckBox.DefaultSize\n  fullName: System.Windows.Forms.CheckBox.DefaultSize\n- uid: System.Drawing.Size\n  parent: System.Drawing\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Drawing.Size\n- uid: System.Windows.Forms.CheckBox.DoubleClick\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: DoubleClick\n  nameWithType: CheckBox.DoubleClick\n  fullName: System.Windows.Forms.CheckBox.DoubleClick\n- uid: System.Windows.Forms.CheckBox.MouseDoubleClick\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: MouseDoubleClick\n  nameWithType: CheckBox.MouseDoubleClick\n  fullName: System.Windows.Forms.CheckBox.MouseDoubleClick\n- uid: System.Windows.Forms.MouseEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: MouseEventHandler\n  nameWithType: MouseEventHandler\n  fullName: System.Windows.Forms.MouseEventHandler\n- uid: System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: OnAppearanceChanged(EventArgs)\n  nameWithType: CheckBox.OnAppearanceChanged(EventArgs)\n  fullName: System.Windows.Forms.CheckBox.OnAppearanceChanged(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: OnCheckedChanged(EventArgs)\n  nameWithType: CheckBox.OnCheckedChanged(EventArgs)\n  fullName: System.Windows.Forms.CheckBox.OnCheckedChanged(EventArgs)\n- uid: System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: OnCheckStateChanged(EventArgs)\n  nameWithType: CheckBox.OnCheckStateChanged(EventArgs)\n  fullName: System.Windows.Forms.CheckBox.OnCheckStateChanged(EventArgs)\n- uid: System.Windows.Forms.CheckBox.OnClick(System.EventArgs)\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: OnClick(EventArgs)\n  nameWithType: CheckBox.OnClick(EventArgs)\n  fullName: System.Windows.Forms.CheckBox.OnClick(EventArgs)\n- uid: System.Windows.Forms.CheckBox.OnHandleCreated(System.EventArgs)\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: OnHandleCreated(EventArgs)\n  nameWithType: CheckBox.OnHandleCreated(EventArgs)\n  fullName: System.Windows.Forms.CheckBox.OnHandleCreated(EventArgs)\n- uid: System.Windows.Forms.CheckBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: OnKeyDown(KeyEventArgs)\n  nameWithType: CheckBox.OnKeyDown(KeyEventArgs)\n  fullName: System.Windows.Forms.CheckBox.OnKeyDown(KeyEventArgs)\n- uid: System.Windows.Forms.KeyEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: KeyEventArgs\n  nameWithType: KeyEventArgs\n  fullName: System.Windows.Forms.KeyEventArgs\n- uid: System.Windows.Forms.CheckBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: OnMouseUp(MouseEventArgs)\n  nameWithType: CheckBox.OnMouseUp(MouseEventArgs)\n  fullName: System.Windows.Forms.CheckBox.OnMouseUp(MouseEventArgs)\n- uid: System.Windows.Forms.MouseEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: MouseEventArgs\n  nameWithType: MouseEventArgs\n  fullName: System.Windows.Forms.MouseEventArgs\n- uid: System.Windows.Forms.CheckBox.ProcessMnemonic(System.Char)\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: ProcessMnemonic(Char)\n  nameWithType: CheckBox.ProcessMnemonic(Char)\n  fullName: System.Windows.Forms.CheckBox.ProcessMnemonic(Char)\n- uid: System.Char\n  parent: System\n  isExternal: true\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Windows.Forms.CheckBox.TextAlign\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: TextAlign\n  nameWithType: CheckBox.TextAlign\n  fullName: System.Windows.Forms.CheckBox.TextAlign\n- uid: System.Windows.Forms.CheckBox.ThreeState\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: ThreeState\n  nameWithType: CheckBox.ThreeState\n  fullName: System.Windows.Forms.CheckBox.ThreeState\n- uid: System.Windows.Forms.CheckBox.ToString\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: ToString()\n  nameWithType: CheckBox.ToString()\n  fullName: System.Windows.Forms.CheckBox.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Forms.CheckBox.#ctor*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: CheckBox\n  nameWithType: CheckBox.CheckBox\n- uid: System.Windows.Forms.CheckBox.Appearance*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: Appearance\n  nameWithType: CheckBox.Appearance\n- uid: System.Windows.Forms.CheckBox.AutoCheck*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: AutoCheck\n  nameWithType: CheckBox.AutoCheck\n- uid: System.Windows.Forms.CheckBox.CheckAlign*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: CheckAlign\n  nameWithType: CheckBox.CheckAlign\n- uid: System.Windows.Forms.CheckBox.Checked*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: Checked\n  nameWithType: CheckBox.Checked\n- uid: System.Windows.Forms.CheckBox.CheckState*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: CheckState\n  nameWithType: CheckBox.CheckState\n- uid: System.Windows.Forms.CheckBox.CreateAccessibilityInstance*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: CreateAccessibilityInstance\n  nameWithType: CheckBox.CreateAccessibilityInstance\n- uid: System.Windows.Forms.CheckBox.CreateParams*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: CreateParams\n  nameWithType: CheckBox.CreateParams\n- uid: System.Windows.Forms.CheckBox.DefaultSize*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: DefaultSize\n  nameWithType: CheckBox.DefaultSize\n- uid: System.Windows.Forms.CheckBox.OnAppearanceChanged*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: OnAppearanceChanged\n  nameWithType: CheckBox.OnAppearanceChanged\n- uid: System.Windows.Forms.CheckBox.OnCheckedChanged*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: OnCheckedChanged\n  nameWithType: CheckBox.OnCheckedChanged\n- uid: System.Windows.Forms.CheckBox.OnCheckStateChanged*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: OnCheckStateChanged\n  nameWithType: CheckBox.OnCheckStateChanged\n- uid: System.Windows.Forms.CheckBox.OnClick*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: OnClick\n  nameWithType: CheckBox.OnClick\n- uid: System.Windows.Forms.CheckBox.OnHandleCreated*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: OnHandleCreated\n  nameWithType: CheckBox.OnHandleCreated\n- uid: System.Windows.Forms.CheckBox.OnKeyDown*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: OnKeyDown\n  nameWithType: CheckBox.OnKeyDown\n- uid: System.Windows.Forms.CheckBox.OnMouseUp*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: OnMouseUp\n  nameWithType: CheckBox.OnMouseUp\n- uid: System.Windows.Forms.CheckBox.ProcessMnemonic*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: ProcessMnemonic\n  nameWithType: CheckBox.ProcessMnemonic\n- uid: System.Windows.Forms.CheckBox.TextAlign*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: TextAlign\n  nameWithType: CheckBox.TextAlign\n- uid: System.Windows.Forms.CheckBox.ThreeState*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: ThreeState\n  nameWithType: CheckBox.ThreeState\n- uid: System.Windows.Forms.CheckBox.ToString*\n  parent: System.Windows.Forms.CheckBox\n  isExternal: false\n  name: ToString\n  nameWithType: CheckBox.ToString\n"}