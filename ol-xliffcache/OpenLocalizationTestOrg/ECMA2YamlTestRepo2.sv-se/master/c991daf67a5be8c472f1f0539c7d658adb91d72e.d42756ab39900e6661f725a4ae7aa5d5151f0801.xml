{"nodes":[{"pos":[517,725],"content":"Provides the core implementation for the <xref href=\"System.Web.Hosting.VirtualFile\"></xref> and <xref href=\"System.Web.Hosting.VirtualDirectory\"></xref> objects. An abstract class, it cannot be instantiated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the core implementation for the <bpt id=\"p1\">&lt;xref href=\"System.Web.Hosting.VirtualFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"System.Web.Hosting.VirtualDirectory\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects.","pos":[0,162],"source":"Provides the core implementation for the <xref href=\"System.Web.Hosting.VirtualFile\"></xref> and <xref href=\"System.Web.Hosting.VirtualDirectory\"></xref> objects."},{"content":"An abstract class, it cannot be instantiated.","pos":[163,208]}]},{"pos":[737,1157],"content":"The VirtualFileBase abstract class provides the common methods and properties shared between the <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> objects. Implementations of these classes provide the ASP.NET runtime with access to files and paths used for compilation. For more information on using virtual files and paths, see the <xref:System.Web.Hosting.VirtualPathProvider> class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The VirtualFileBase abstract class provides the common methods and properties shared between the <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> objects. Implementations of these classes provide the ASP.NET runtime with access to files and paths used for compilation. For more information on using virtual files and paths, see the <xref:System.Web.Hosting.VirtualPathProvider> class.","pos":[0,420],"nodes":[{"content":"The VirtualFileBase abstract class provides the common methods and properties shared between the &lt;xref:System.Web.Hosting.VirtualFile&gt; and &lt;xref:System.Web.Hosting.VirtualDirectory&gt; objects.","pos":[0,190],"source":"The VirtualFileBase abstract class provides the common methods and properties shared between the <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> objects."},{"content":"Implementations of these classes provide the ASP.NET runtime with access to files and paths used for compilation.","pos":[191,304]},{"content":"For more information on using virtual files and paths, see the &lt;xref:System.Web.Hosting.VirtualPathProvider&gt; class.","pos":[305,420],"source":" For more information on using virtual files and paths, see the <xref:System.Web.Hosting.VirtualPathProvider> class."}]}]},{"pos":[1892,2012],"content":"Initializes the class for use by an inherited class instance. This constructor can be called only by an inherited class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes the class for use by an inherited class instance. This constructor can be called only by an inherited class.","pos":[0,120],"nodes":[{"content":"Initializes the class for use by an inherited class instance.","pos":[0,61]},{"content":"This constructor can be called only by an inherited class.","pos":[62,120]}]}]},{"pos":[2024,2205],"content":"Although you cannot directly construct an instance of the <xref:System.Web.Hosting.VirtualFileBase> class, you can call this constructor from the constructor of an inheriting class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Although you cannot directly construct an instance of the &lt;xref:System.Web.Hosting.VirtualFileBase&gt; class, you can call this constructor from the constructor of an inheriting class.","pos":[0,181],"source":"Although you cannot directly construct an instance of the <xref:System.Web.Hosting.VirtualFileBase> class, you can call this constructor from the constructor of an inheriting class."}]},{"pos":[2795,2930],"content":"Gives a <bpt id=\"p1\">&lt;xref href=\"System.Web.Hosting.VirtualFileBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance an infinite lifetime by preventing a lease from being created.","needQuote":true,"needEscape":true,"source":"Gives a <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance an infinite lifetime by preventing a lease from being created."},{"pos":[2942,3192],"content":"This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method on its base class. It always returns `null` and thereby prevents a lease from being created that would limit the lifetime of the virtual file or directory.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method overrides the &lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt; method on its base class.","pos":[0,113],"source":"This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method on its base class."},{"content":"It always returns <ph id=\"ph1\">`null`</ph> and thereby prevents a lease from being created that would limit the lifetime of the virtual file or directory.","pos":[114,250],"source":" It always returns `null` and thereby prevents a lease from being created that would limit the lifetime of the virtual file or directory."}]},{"pos":[3345,3413],"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Always <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[3877,4063],"content":"When overridden in a derived class, gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.Hosting.VirtualFileBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance represents a virtual file or a virtual directory.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, gets a value indicating whether the <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance represents a virtual file or a virtual directory."},{"pos":[4187,4508],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Web.Hosting.VirtualFileBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance is a virtual directory; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the <bpt id=\"p4\">&lt;xref href=\"System.Web.Hosting.VirtualFileBase\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> instance is a virtual file.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance is a virtual directory; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance is a virtual file."},{"pos":[4923,4969],"content":"Gets the display name of the virtual resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the display name of the virtual resource.","pos":[0,46]}]},{"pos":[4981,5121],"content":"The Name property is typically the file name and extension associated with the resource, although virtual resources may use arbitrary names.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Name property is typically the file name and extension associated with the resource, although virtual resources may use arbitrary names.","pos":[0,140]}]},{"pos":[5238,5275],"content":"The display name of the virtual file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The display name of the virtual file.","pos":[0,37]}]},{"pos":[5718,5745],"content":"Gets the virtual file path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the virtual file path.","pos":[0,27]}]},{"pos":[5757,5851],"content":"The VirtualPath property returns the path to the file or directory represented by this object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The VirtualPath property returns the path to the file or directory represented by this object.","pos":[0,94]}]},{"pos":[5967,5996],"content":"The path to the virtual file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to the virtual file.","pos":[0,29]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Hosting.VirtualFileBase\n  id: VirtualFileBase\n  children:\n  - System.Web.Hosting.VirtualFileBase.#ctor\n  - System.Web.Hosting.VirtualFileBase.InitializeLifetimeService\n  - System.Web.Hosting.VirtualFileBase.IsDirectory\n  - System.Web.Hosting.VirtualFileBase.Name\n  - System.Web.Hosting.VirtualFileBase.VirtualPath\n  langs:\n  - csharp\n  name: VirtualFileBase\n  nameWithType: VirtualFileBase\n  fullName: System.Web.Hosting.VirtualFileBase\n  type: Class\n  summary: Provides the core implementation for the <xref href=\"System.Web.Hosting.VirtualFile\"></xref> and <xref href=\"System.Web.Hosting.VirtualDirectory\"></xref> objects. An abstract class, it cannot be instantiated.\n  remarks: The VirtualFileBase abstract class provides the common methods and properties shared between the <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> objects. Implementations of these classes provide the ASP.NET runtime with access to files and paths used for compilation. For more information on using virtual files and paths, see the <xref:System.Web.Hosting.VirtualPathProvider> class.\n  syntax:\n    content: 'public abstract class VirtualFileBase : MarshalByRefObject'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  implements: []\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Web.Hosting.VirtualFileBase.#ctor\n  id: '#ctor'\n  parent: System.Web.Hosting.VirtualFileBase\n  langs:\n  - csharp\n  name: VirtualFileBase()\n  nameWithType: VirtualFileBase.VirtualFileBase()\n  fullName: System.Web.Hosting.VirtualFileBase.VirtualFileBase()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Initializes the class for use by an inherited class instance. This constructor can be called only by an inherited class.\n  remarks: Although you cannot directly construct an instance of the <xref:System.Web.Hosting.VirtualFileBase> class, you can call this constructor from the constructor of an inheriting class.\n  syntax:\n    content: protected VirtualFileBase ();\n    parameters: []\n  overload: System.Web.Hosting.VirtualFileBase.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService\n  id: InitializeLifetimeService\n  parent: System.Web.Hosting.VirtualFileBase\n  langs:\n  - csharp\n  name: InitializeLifetimeService()\n  nameWithType: VirtualFileBase.InitializeLifetimeService()\n  fullName: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gives a <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance an infinite lifetime by preventing a lease from being created.\n  remarks: This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method on its base class. It always returns `null` and thereby prevents a lease from being created that would limit the lifetime of the virtual file or directory.\n  syntax:\n    content: public override object InitializeLifetimeService ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Always <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.VirtualFileBase.IsDirectory\n  id: IsDirectory\n  parent: System.Web.Hosting.VirtualFileBase\n  langs:\n  - csharp\n  name: IsDirectory\n  nameWithType: VirtualFileBase.IsDirectory\n  fullName: System.Web.Hosting.VirtualFileBase.IsDirectory\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: When overridden in a derived class, gets a value indicating whether the <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance represents a virtual file or a virtual directory.\n  syntax:\n    content: public abstract bool IsDirectory { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance is a virtual directory; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance is a virtual file.\n  overload: System.Web.Hosting.VirtualFileBase.IsDirectory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.VirtualFileBase.Name\n  id: Name\n  parent: System.Web.Hosting.VirtualFileBase\n  langs:\n  - csharp\n  name: Name\n  nameWithType: VirtualFileBase.Name\n  fullName: System.Web.Hosting.VirtualFileBase.Name\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets the display name of the virtual resource.\n  remarks: The Name property is typically the file name and extension associated with the resource, although virtual resources may use arbitrary names.\n  syntax:\n    content: public virtual string Name { get; }\n    return:\n      type: System.String\n      description: The display name of the virtual file.\n  overload: System.Web.Hosting.VirtualFileBase.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.VirtualFileBase.VirtualPath\n  id: VirtualPath\n  parent: System.Web.Hosting.VirtualFileBase\n  langs:\n  - csharp\n  name: VirtualPath\n  nameWithType: VirtualFileBase.VirtualPath\n  fullName: System.Web.Hosting.VirtualFileBase.VirtualPath\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets the virtual file path.\n  remarks: The VirtualPath property returns the path to the file or directory represented by this object.\n  syntax:\n    content: public string VirtualPath { get; }\n    return:\n      type: System.String\n      description: The path to the virtual file.\n  overload: System.Web.Hosting.VirtualFileBase.VirtualPath*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.MarshalByRefObject\n  isExternal: false\n  name: System.MarshalByRefObject\n- uid: System.Web.Hosting.VirtualFileBase.#ctor\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: VirtualFileBase()\n  nameWithType: VirtualFileBase.VirtualFileBase()\n  fullName: System.Web.Hosting.VirtualFileBase.VirtualFileBase()\n- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: VirtualFileBase.InitializeLifetimeService()\n  fullName: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Hosting.VirtualFileBase.IsDirectory\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: IsDirectory\n  nameWithType: VirtualFileBase.IsDirectory\n  fullName: System.Web.Hosting.VirtualFileBase.IsDirectory\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Hosting.VirtualFileBase.Name\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: Name\n  nameWithType: VirtualFileBase.Name\n  fullName: System.Web.Hosting.VirtualFileBase.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Hosting.VirtualFileBase.VirtualPath\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: VirtualPath\n  nameWithType: VirtualFileBase.VirtualPath\n  fullName: System.Web.Hosting.VirtualFileBase.VirtualPath\n- uid: System.Web.Hosting.VirtualFileBase.#ctor*\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: VirtualFileBase\n  nameWithType: VirtualFileBase.VirtualFileBase\n- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService*\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: InitializeLifetimeService\n  nameWithType: VirtualFileBase.InitializeLifetimeService\n- uid: System.Web.Hosting.VirtualFileBase.IsDirectory*\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: IsDirectory\n  nameWithType: VirtualFileBase.IsDirectory\n- uid: System.Web.Hosting.VirtualFileBase.Name*\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: Name\n  nameWithType: VirtualFileBase.Name\n- uid: System.Web.Hosting.VirtualFileBase.VirtualPath*\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: VirtualPath\n  nameWithType: VirtualFileBase.VirtualPath\n"}