{"nodes":[{"pos":[1048,1210],"content":"Provides a type converter for a property representing the field name of a bound column field in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Provides a type converter for a property representing the field name of a bound column field in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[1223,3227],"content":"Use the DataColumnSelectionConverter class to convert object types before assignment to a control property. In general, the DataColumnSelectionConverter class supports converting string object types and supplies a list of standard values available for assignment to the associated control property. The standard values collection is the list of field names for bound column fields for the current <xref:System.Web.UI.WebControls.GridView> control.       To support converting additional object types, derive a class from DataColumnSelectionConverter and override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> and <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> methods for the additional object types. To support a custom list of standard assignable values, override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method.       Apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to specify the DataColumnSelectionConverter class as the type converter for a control property. For example, the <xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A> property of the <xref:System.Web.UI.WebControls.GridView> control specifies DataColumnSelectionConverter as its type converter.      > [!NOTE] >  You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.       The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method indicates that the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method. The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> method indicates that the list is not an exclusive list of possible values.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the DataColumnSelectionConverter class to convert object types before assignment to a control property.","pos":[0,107]},{"content":"In general, the DataColumnSelectionConverter class supports converting string object types and supplies a list of standard values available for assignment to the associated control property.","pos":[108,298]},{"content":"The standard values collection is the list of field names for bound column fields for the current &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[299,447],"source":" The standard values collection is the list of field names for bound column fields for the current <xref:System.Web.UI.WebControls.GridView> control."},{"content":"To support converting additional object types, derive a class from DataColumnSelectionConverter and override the &lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A&gt; and &lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A&gt; methods for the additional object types.","pos":[454,758],"source":"       To support converting additional object types, derive a class from DataColumnSelectionConverter and override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> and <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> methods for the additional object types."},{"content":"To support a custom list of standard assignable values, override the &lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A&gt; method.","pos":[759,913],"source":" To support a custom list of standard assignable values, override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method."},{"content":"Apply the &lt;xref:System.ComponentModel.TypeConverterAttribute&gt; attribute to specify the DataColumnSelectionConverter class as the type converter for a control property.","pos":[920,1087],"source":"       Apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to specify the DataColumnSelectionConverter class as the type converter for a control property."},{"content":"For example, the &lt;xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control specifies DataColumnSelectionConverter as its type converter.","pos":[1088,1293],"source":" For example, the <xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A> property of the <xref:System.Web.UI.WebControls.GridView> control specifies DataColumnSelectionConverter as its type converter."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You should never access a type converter directly.","pos":[1299,1362],"source":"      > [!NOTE] >  You should never access a type converter directly."},{"content":"Instead, call the appropriate converter by using a &lt;xref:System.ComponentModel.TypeDescriptor&gt; object.","pos":[1363,1465],"source":" Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object."},{"content":"For more information, see the examples in &lt;xref:System.ComponentModel.TypeConverter&gt;.","pos":[1466,1551],"source":" For more information, see the examples in <xref:System.ComponentModel.TypeConverter>."},{"content":"The &lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A&gt; method indicates that the converter supports returning a list of available values through the &lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A&gt; method.","pos":[1558,1828],"source":"       The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method indicates that the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method."},{"content":"The &lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A&gt; method indicates that the list is not an exclusive list of possible values.","pos":[1829,1995],"source":" The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> method indicates that the list is not an exclusive list of possible values."}]},{"pos":[7106,7217],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Design.DataColumnSelectionConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.Design.DataColumnSelectionConverter\"></xref> class."},{"pos":[8313,8421],"content":"Indicates whether the specified source type can be converted to the type of the associated control property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether the specified source type can be converted to the type of the associated control property.","pos":[0,108]}]},{"pos":[8434,8803],"content":"Call the CanConvertFrom method to determine whether the <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method supports converting the source type.       The <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method can convert only from a string, so the CanConvertFrom method returns `true` when `sourceType` is a string.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Call the CanConvertFrom method to determine whether the &lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A&gt; method supports converting the source type.","pos":[0,171],"source":"Call the CanConvertFrom method to determine whether the <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method supports converting the source type."},{"content":"The &lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A&gt; method can convert only from a string, so the CanConvertFrom method returns <ph id=\"ph1\">`true`</ph> when <ph id=\"ph2\">`sourceType`</ph> is a string.","pos":[178,367],"source":"       The <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method can convert only from a string, so the CanConvertFrom method returns `true` when `sourceType` is a string."}]},{"pos":[9047,9187],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation that can be used to gain additional context information.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information."},{"pos":[9252,9277],"content":"The type to convert from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to convert from.","pos":[0,25]}]},{"pos":[9336,9516],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the converter can perform the conversion; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10360,10437],"content":"Converts the specified object to the type of the associated control property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified object to the type of the associated control property.","pos":[0,77]}]},{"pos":[10450,10847],"content":"If `value` is a string, then the string representation of `value` is returned. If `value` is `null`, an empty string (\"\") is returned. For all other values, a <xref:System.NotSupportedException> exception is thrown.       Call the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> method to determine whether the ConvertFrom method supports converting the source type.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If <ph id=\"ph1\">`value`</ph> is a string, then the string representation of <ph id=\"ph2\">`value`</ph> is returned.","pos":[0,78],"source":"If `value` is a string, then the string representation of `value` is returned."},{"content":"If <ph id=\"ph1\">`value`</ph> is <ph id=\"ph2\">`null`</ph>, an empty string (\"\") is returned.","pos":[79,134],"source":" If `value` is `null`, an empty string (\"\") is returned."},{"content":"For all other values, a &lt;xref:System.NotSupportedException&gt; exception is thrown.","pos":[135,215],"source":" For all other values, a <xref:System.NotSupportedException> exception is thrown."},{"content":"Call the &lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A&gt; method to determine whether the ConvertFrom method supports converting the source type.","pos":[222,393],"source":"       Call the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> method to determine whether the ConvertFrom method supports converting the source type."}]},{"pos":[11129,11269],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation that can be used to gain additional context information.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information."},{"pos":[11352,11453],"content":"The <xref:System.Globalization.CultureInfo> object that can be used to support localization features.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Globalization.CultureInfo&gt; object that can be used to support localization features.","pos":[0,101],"source":"The <xref:System.Globalization.CultureInfo> object that can be used to support localization features."}]},{"pos":[11515,11537],"content":"The object to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to convert.","pos":[0,22]}]},{"pos":[11595,11665],"content":"An <xref:System.Object> instance that represents the converted object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; instance that represents the converted object.","pos":[0,70],"source":"An <xref:System.Object> instance that represents the converted object."}]},{"pos":[11857,11895],"content":"The conversion could not be performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The conversion could not be performed.","pos":[0,38]}]},{"pos":[12523,12614],"content":"Returns a list of available values that can be assigned to the associated control property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a list of available values that can be assigned to the associated control property.","pos":[0,91]}]},{"pos":[12627,13476],"content":"The GetStandardValues method uses the <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property of the specified `context` object to obtain an <xref:System.ComponentModel.IComponent> implementation. If the <xref:System.ComponentModel.IComponent> implementation is available, it is used to access the associated control at design time and retrieve the list of available values from the associated <xref:System.Web.UI.WebControls.GridView> component.       The collection of available values is built from the bound column fields in the <xref:System.Web.UI.WebControls.GridView> control. The bound column fields consist of <xref:System.Web.UI.WebControls.BoundField> objects in the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection, and from the bound column fields automatically generated for fields in the data source.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetStandardValues method uses the &lt;xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A&gt; property of the specified <ph id=\"ph1\">`context`</ph> object to obtain an &lt;xref:System.ComponentModel.IComponent&gt; implementation.","pos":[0,213],"source":"The GetStandardValues method uses the <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property of the specified `context` object to obtain an <xref:System.ComponentModel.IComponent> implementation."},{"content":"If the &lt;xref:System.ComponentModel.IComponent&gt; implementation is available, it is used to access the associated control at design time and retrieve the list of available values from the associated &lt;xref:System.Web.UI.WebControls.GridView&gt; component.","pos":[214,463],"source":" If the <xref:System.ComponentModel.IComponent> implementation is available, it is used to access the associated control at design time and retrieve the list of available values from the associated <xref:System.Web.UI.WebControls.GridView> component."},{"content":"The collection of available values is built from the bound column fields in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[470,600],"source":"       The collection of available values is built from the bound column fields in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The bound column fields consist of &lt;xref:System.Web.UI.WebControls.BoundField&gt; objects in the &lt;xref:System.Web.UI.WebControls.GridView.Columns%2A&gt; collection, and from the bound column fields automatically generated for fields in the data source.","pos":[601,847],"source":" The bound column fields consist of <xref:System.Web.UI.WebControls.BoundField> objects in the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection, and from the bound column fields automatically generated for fields in the data source."}]},{"pos":[13762,13902],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation that can be used to gain additional context information.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information."},{"pos":[14007,14164],"content":"A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> instance containing available values for assignment to the associated control property.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.ComponentModel.TypeConverter.StandardValuesCollection&gt; instance containing available values for assignment to the associated control property.","pos":[0,157],"source":"A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> instance containing available values for assignment to the associated control property."}]},{"pos":[14935,15070],"content":"Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.","pos":[0,135]}]},{"pos":[15082,15454],"content":"The &lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A&gt; method for a &lt;xref:System.Web.UI.Design.DataColumnSelectionConverter&gt; instance returns <ph id=\"ph1\">`false`</ph>, indicating that the list returned by the &lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A&gt; method is not an exclusive list of all possible assignable values.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> method for a <xref:System.Web.UI.Design.DataColumnSelectionConverter> instance returns `false`, indicating that the list returned by the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method is not an exclusive list of all possible assignable values."},{"pos":[15692,15832],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation that can be used to gain additional context information.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information."},{"pos":[15891,16146],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16926,17060],"content":"Indicates whether this converter returns a set of available values for assignment to a control property, within the specified context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether this converter returns a set of available values for assignment to a control property, within the specified context.","pos":[0,134]}]},{"pos":[17073,17990],"content":"The GetStandardValuesSupported method indicates whether the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method.       The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method for the <xref:System.Web.UI.Design.DataColumnSelectionConverter> object returns `true` if the specified `context` object supplies an <xref:System.ComponentModel.IComponent> implementation in its <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property. The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method uses the <xref:System.ComponentModel.IComponent> implementation to access the associated control at design time and retrieve the list of available bound column fields from the associated <xref:System.Web.UI.WebControls.GridView> component.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetStandardValuesSupported method indicates whether the converter supports returning a list of available values through the &lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A&gt; method.","pos":[0,213],"source":"The GetStandardValuesSupported method indicates whether the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method."},{"content":"The &lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A&gt; method for the &lt;xref:System.Web.UI.Design.DataColumnSelectionConverter&gt; object returns <ph id=\"ph1\">`true`</ph> if the specified <ph id=\"ph2\">`context`</ph> object supplies an &lt;xref:System.ComponentModel.IComponent&gt; implementation in its &lt;xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A&gt; property.","pos":[220,586],"source":"       The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method for the <xref:System.Web.UI.Design.DataColumnSelectionConverter> object returns `true` if the specified `context` object supplies an <xref:System.ComponentModel.IComponent> implementation in its <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property."},{"content":"The &lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A&gt; method uses the &lt;xref:System.ComponentModel.IComponent&gt; implementation to access the associated control at design time and retrieve the list of available bound column fields from the associated &lt;xref:System.Web.UI.WebControls.GridView&gt; component.","pos":[587,915],"source":" The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method uses the <xref:System.ComponentModel.IComponent> implementation to access the associated control at design time and retrieve the list of available bound column fields from the associated <xref:System.Web.UI.WebControls.GridView> component."}]},{"pos":[18229,18369],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation that can be used to gain additional context information.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information."},{"pos":[18428,18674],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this converter returns a standard set of available values for assignment to the associated control property; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter returns a standard set of available values for assignment to the associated control property; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.Design.DataColumnSelectionConverter\n  id: DataColumnSelectionConverter\n  children:\n  - System.Web.UI.Design.DataColumnSelectionConverter.#ctor\n  - System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  langs:\n  - csharp\n  name: DataColumnSelectionConverter\n  nameWithType: DataColumnSelectionConverter\n  fullName: System.Web.UI.Design.DataColumnSelectionConverter\n  type: Class\n  summary: Provides a type converter for a property representing the field name of a bound column field in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"Use the DataColumnSelectionConverter class to convert object types before assignment to a control property. In general, the DataColumnSelectionConverter class supports converting string object types and supplies a list of standard values available for assignment to the associated control property. The standard values collection is the list of field names for bound column fields for the current <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n To support converting additional object types, derive a class from DataColumnSelectionConverter and override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> and <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> methods for the additional object types. To support a custom list of standard assignable values, override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method.  \\n  \\n Apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to specify the DataColumnSelectionConverter class as the type converter for a control property. For example, the <xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A> property of the <xref:System.Web.UI.WebControls.GridView> control specifies DataColumnSelectionConverter as its type converter.  \\n  \\n> [!NOTE]\\n>  You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.  \\n  \\n The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method indicates that the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method. The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> method indicates that the list is not an exclusive list of possible values.\"\n  syntax:\n    content: 'public class DataColumnSelectionConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  langs:\n  - csharp\n  name: DataColumnSelectionConverter()\n  nameWithType: DataColumnSelectionConverter.DataColumnSelectionConverter()\n  fullName: System.Web.UI.Design.DataColumnSelectionConverter.DataColumnSelectionConverter()\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.Design.DataColumnSelectionConverter\"></xref> class.\n  remarks: >-\n    > [!NOTE]\n\n    >  You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.\n  syntax:\n    content: public DataColumnSelectionConverter ();\n    parameters: []\n  overload: System.Web.UI.Design.DataColumnSelectionConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: DataColumnSelectionConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Indicates whether the specified source type can be converted to the type of the associated control property.\n  remarks: \"Call the CanConvertFrom method to determine whether the <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method supports converting the source type.  \\n  \\n The <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method can convert only from a string, so the CanConvertFrom method returns `true` when `sourceType` is a string.\"\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.\n    - id: sourceType\n      type: System.Type\n      description: The type to convert from.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: DataColumnSelectionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Converts the specified object to the type of the associated control property.\n  remarks: \"If `value` is a string, then the string representation of `value` is returned. If `value` is `null`, an empty string (\\\"\\\") is returned. For all other values, a <xref:System.NotSupportedException> exception is thrown.  \\n  \\n Call the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> method to determine whether the ConvertFrom method supports converting the source type.\"\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The <xref:System.Globalization.CultureInfo> object that can be used to support localization features.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> instance that represents the converted object.\n  overload: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion could not be performed.\n  platform:\n  - net462\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  langs:\n  - csharp\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: DataColumnSelectionConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Returns a list of available values that can be assigned to the associated control property.\n  remarks: \"The GetStandardValues method uses the <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property of the specified `context` object to obtain an <xref:System.ComponentModel.IComponent> implementation. If the <xref:System.ComponentModel.IComponent> implementation is available, it is used to access the associated control at design time and retrieve the list of available values from the associated <xref:System.Web.UI.WebControls.GridView> component.  \\n  \\n The collection of available values is built from the bound column fields in the <xref:System.Web.UI.WebControls.GridView> control. The bound column fields consist of <xref:System.Web.UI.WebControls.BoundField> objects in the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection, and from the bound column fields automatically generated for fields in the data source.\"\n  syntax:\n    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.\n    return:\n      type: System.ComponentModel.TypeConverter.StandardValuesCollection\n      description: A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> instance containing available values for assignment to the associated control property.\n  overload: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  langs:\n  - csharp\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: DataColumnSelectionConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.\n  remarks: The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> method for a <xref:System.Web.UI.Design.DataColumnSelectionConverter> instance returns `false`, indicating that the list returned by the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method is not an exclusive list of all possible assignable values.\n  syntax:\n    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  langs:\n  - csharp\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: DataColumnSelectionConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Indicates whether this converter returns a set of available values for assignment to a control property, within the specified context.\n  remarks: \"The GetStandardValuesSupported method indicates whether the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method.  \\n  \\n The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method for the <xref:System.Web.UI.Design.DataColumnSelectionConverter> object returns `true` if the specified `context` object supplies an <xref:System.ComponentModel.IComponent> implementation in its <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property. The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method uses the <xref:System.ComponentModel.IComponent> implementation to access the associated control at design time and retrieve the list of available bound column fields from the associated <xref:System.Web.UI.WebControls.GridView> component.\"\n  syntax:\n    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter returns a standard set of available values for assignment to the associated control property; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.#ctor\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: DataColumnSelectionConverter()\n  nameWithType: DataColumnSelectionConverter.DataColumnSelectionConverter()\n  fullName: System.Web.UI.Design.DataColumnSelectionConverter.DataColumnSelectionConverter()\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: DataColumnSelectionConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: DataColumnSelectionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: DataColumnSelectionConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.StandardValuesCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter+StandardValuesCollection\n  nameWithType: TypeConverter+StandardValuesCollection\n  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: DataColumnSelectionConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: DataColumnSelectionConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.#ctor*\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: DataColumnSelectionConverter\n  nameWithType: DataColumnSelectionConverter.DataColumnSelectionConverter\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom*\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: DataColumnSelectionConverter.CanConvertFrom\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom*\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: DataColumnSelectionConverter.ConvertFrom\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues*\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: GetStandardValues\n  nameWithType: DataColumnSelectionConverter.GetStandardValues\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive*\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: GetStandardValuesExclusive\n  nameWithType: DataColumnSelectionConverter.GetStandardValuesExclusive\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported*\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: GetStandardValuesSupported\n  nameWithType: DataColumnSelectionConverter.GetStandardValuesSupported\n"}