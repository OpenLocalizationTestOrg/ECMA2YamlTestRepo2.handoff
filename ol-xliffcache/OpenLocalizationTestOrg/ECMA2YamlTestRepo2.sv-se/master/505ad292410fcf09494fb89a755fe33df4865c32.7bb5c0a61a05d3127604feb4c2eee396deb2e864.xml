{"nodes":[{"pos":[1832,2020],"content":"Represents a parameter to an <xref href=\"System.Data.Odbc.OdbcCommand\"></xref> and optionally, its mapping to a <xref href=\"System.Data.DataColumn\"></xref>. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a parameter to an <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally, its mapping to a <bpt id=\"p2\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,156],"source":"Represents a parameter to an <xref href=\"System.Data.Odbc.OdbcCommand\"></xref> and optionally, its mapping to a <xref href=\"System.Data.DataColumn\"></xref>."},{"content":"This class cannot be inherited.","pos":[157,188]}]},{"pos":[2033,3699],"content":"Parameter names are not case sensitive.       When querying an Oracle database using the Microsoft OLE DB Provider for Oracle (MSDAORA) and the ODBC .NET Framework Data Provider, using the `LIKE` clause to query values in fixed-length fields might not return all expected matches. The reason is that when Oracle matches values for fixed-length fields in a `LIKE` clause, it matches the entire length of the string, including any padding trailing spaces. For example, if a table in an Oracle database contains a field named \"Field1\" that is defined as `char(3)`, and you enter the value \"a\" into a row of that table, the following code will not return the row.      ```vb#   Dim queryString As String = \"SELECT * FROM Table1 WHERE Field1 LIKE ?\"   Dim command As OleDbCommand = New OleDbCommand(queryString, connection)   command.Parameters.Add(\"@p1\", OleDbType.Char, 3).Value = \"a\"   Dim reader As OleDbDataReader = command.ExecuteReader()   ```      ```c#   string queryString = \"SELECT * FROM Table1 WHERE Field1 LIKE ?\";   OleDbCommand command = new OleDbCommand(queryString, connection);   command.Parameters.Add(\"@p1\", OleDbType.Char, 3).Value = \"a\";   OleDbDataReader reader = command.ExecuteReader();   ```       This is because Oracle stores the column value as \"a  \" (padding \"a\", with trailing spaces, to the fixed field length of 3), which Oracle does not treat as a match for the parameter value of \"a\" in the case of a `LIKE` comparison of fixed-length fields.       To resolve this problem, append a percentage (\"%\") wildcard character to the parameter value (`\"a%\"`), or use an SQL `=` comparison instead.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Parameter names are not case sensitive.","pos":[0,39]},{"content":"When querying an Oracle database using the Microsoft OLE DB Provider for Oracle (MSDAORA) and the ODBC .NET Framework Data Provider, using the <ph id=\"ph1\">`LIKE`</ph> clause to query values in fixed-length fields might not return all expected matches.","pos":[46,280],"source":"       When querying an Oracle database using the Microsoft OLE DB Provider for Oracle (MSDAORA) and the ODBC .NET Framework Data Provider, using the `LIKE` clause to query values in fixed-length fields might not return all expected matches."},{"content":"The reason is that when Oracle matches values for fixed-length fields in a <ph id=\"ph1\">`LIKE`</ph> clause, it matches the entire length of the string, including any padding trailing spaces.","pos":[281,453],"source":" The reason is that when Oracle matches values for fixed-length fields in a `LIKE` clause, it matches the entire length of the string, including any padding trailing spaces."},{"content":"For example, if a table in an Oracle database contains a field named \"Field1\" that is defined as <ph id=\"ph1\">`char(3)`</ph>, and you enter the value \"a\" into a row of that table, the following code will not return the row.","pos":[454,659],"source":" For example, if a table in an Oracle database contains a field named \"Field1\" that is defined as `char(3)`, and you enter the value \"a\" into a row of that table, the following code will not return the row."},{"content":"<ph id=\"ph1\">```vb#   Dim queryString As String = \"SELECT * FROM Table1 WHERE Field1 LIKE ?\"   Dim command As OleDbCommand = New OleDbCommand(queryString, connection)   command.Parameters.Add(\"@p1\", OleDbType.Char, 3).Value = \"a\"   Dim reader As OleDbDataReader = command.ExecuteReader()   ```</ph>      <ph id=\"ph2\">```c#   string queryString = \"SELECT * FROM Table1 WHERE Field1 LIKE ?\";   OleDbCommand command = new OleDbCommand(queryString, connection);   command.Parameters.Add(\"@p1\", OleDbType.Char, 3).Value = \"a\";   OleDbDataReader reader = command.ExecuteReader();   ```</ph>       This is because Oracle stores the column value as \"a  \" (padding \"a\", with trailing spaces, to the fixed field length of 3), which Oracle does not treat as a match for the parameter value of \"a\" in the case of a <ph id=\"ph3\">`LIKE`</ph> comparison of fixed-length fields.","pos":[665,1473],"source":"```vb#   Dim queryString As String = \"SELECT * FROM Table1 WHERE Field1 LIKE ?\"   Dim command As OleDbCommand = New OleDbCommand(queryString, connection)   command.Parameters.Add(\"@p1\", OleDbType.Char, 3).Value = \"a\"   Dim reader As OleDbDataReader = command.ExecuteReader()   ```      ```c#   string queryString = \"SELECT * FROM Table1 WHERE Field1 LIKE ?\";   OleDbCommand command = new OleDbCommand(queryString, connection);   command.Parameters.Add(\"@p1\", OleDbType.Char, 3).Value = \"a\";   OleDbDataReader reader = command.ExecuteReader();   ```       This is because Oracle stores the column value as \"a  \" (padding \"a\", with trailing spaces, to the fixed field length of 3), which Oracle does not treat as a match for the parameter value of \"a\" in the case of a `LIKE` comparison of fixed-length fields."},{"content":"To resolve this problem, append a percentage (\"%\") wildcard character to the parameter value (<ph id=\"ph1\">`\"a%\"`</ph>), or use an SQL <ph id=\"ph2\">`=`</ph> comparison instead.","pos":[1480,1620],"source":"       To resolve this problem, append a percentage (\"%\") wildcard character to the parameter value (`\"a%\"`), or use an SQL `=` comparison instead."}]},{"pos":[5520,5612],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> class."},{"pos":[5624,5692],"content":"The base constructor initializes all fields to their default values.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The base constructor initializes all fields to their default values.","pos":[0,68]}]},{"pos":[6684,6819],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the parameter name and data type.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> class that uses the parameter name and data type."},{"pos":[7367,7393],"content":"The name of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter.","pos":[0,26]}]},{"pos":[7466,7531],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.Odbc.OdbcType\"></xref> values."},{"pos":[7690,7777],"content":"The value supplied in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an invalid back-end data type.","needQuote":true,"needEscape":true,"source":"The value supplied in the <code>type</code> parameter is an invalid back-end data type."},{"pos":[8237,8424],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the parameter name and an <bpt id=\"p2\">&lt;xref href=\"System.Data.Odbc.OdbcParameter\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> class that uses the parameter name and an <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> object."},{"pos":[8437,9057],"content":"Use caution when you are using this overload of the <xref:System.Data.Odbc.OdbcParameter> constructor to specify integer parameter values. Because this overload takes a `value` of type <xref:System.Object>, you must convert the integral value to an <xref:System.Object> type when the value is zero, as the following C# example demonstrates.      ```   Parameter = new OdbcParameter(\"@pname\", Convert.ToInt32(0));   ```       If you do not perform this conversion, the compiler assumes that you are trying to call the <xref:System.Data.Odbc.OdbcParameter.%23ctor%2A?displayProperty=fullName> constructor overload.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use caution when you are using this overload of the &lt;xref:System.Data.Odbc.OdbcParameter&gt; constructor to specify integer parameter values.","pos":[0,138],"source":"Use caution when you are using this overload of the <xref:System.Data.Odbc.OdbcParameter> constructor to specify integer parameter values."},{"content":"Because this overload takes a <ph id=\"ph1\">`value`</ph> of type &lt;xref:System.Object&gt;, you must convert the integral value to an &lt;xref:System.Object&gt; type when the value is zero, as the following C# example demonstrates.","pos":[139,340],"source":" Because this overload takes a `value` of type <xref:System.Object>, you must convert the integral value to an <xref:System.Object> type when the value is zero, as the following C# example demonstrates."},{"content":"<ph id=\"ph1\">```   Parameter = new OdbcParameter(\"@pname\", Convert.ToInt32(0));   ```</ph>       If you do not perform this conversion, the compiler assumes that you are trying to call the &lt;xref:System.Data.Odbc.OdbcParameter.%23ctor%2A?displayProperty=fullName&gt; constructor overload.","pos":[346,612],"source":"```   Parameter = new OdbcParameter(\"@pname\", Convert.ToInt32(0));   ```       If you do not perform this conversion, the compiler assumes that you are trying to call the <xref:System.Data.Odbc.OdbcParameter.%23ctor%2A?displayProperty=fullName> constructor overload."}]},{"pos":[9208,9234],"content":"The name of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter.","pos":[0,26]}]},{"pos":[9296,9358],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> object."},{"pos":[9959,10103],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the parameter name, data type, and length.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> class that uses the parameter name, data type, and length."},{"pos":[10661,10687],"content":"The name of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter.","pos":[0,26]}]},{"pos":[10760,10825],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.Odbc.OdbcType\"></xref> values."},{"pos":[10885,10913],"content":"The length of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of the parameter.","pos":[0,28]}]},{"pos":[11072,11159],"content":"The value supplied in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an invalid back-end data type.","needQuote":true,"needEscape":true,"source":"The value supplied in the <code>type</code> parameter is an invalid back-end data type."},{"pos":[11742,11906],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the parameter name, data type, length, and source column name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> class that uses the parameter name, data type, length, and source column name."},{"pos":[12485,12511],"content":"The name of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter.","pos":[0,26]}]},{"pos":[12584,12649],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.Odbc.OdbcType\"></xref> values."},{"pos":[12709,12737],"content":"The length of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of the parameter.","pos":[0,28]}]},{"pos":[12806,12836],"content":"The name of the source column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the source column.","pos":[0,30]}]},{"pos":[12995,13082],"content":"The value supplied in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an invalid back-end data type.","needQuote":true,"needEscape":true,"source":"The value supplied in the <code>type</code> parameter is an invalid back-end data type."},{"pos":[14064,14286],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the parameter name, data type, length, source column name, parameter direction, numeric precision, and other properties.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> class that uses the parameter name, data type, length, source column name, parameter direction, numeric precision, and other properties."},{"pos":[15073,15099],"content":"The name of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter.","pos":[0,26]}]},{"pos":[15176,15241],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.Odbc.OdbcType\"></xref> values."},{"pos":[15301,15329],"content":"The length of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of the parameter.","pos":[0,28]}]},{"pos":[15421,15491],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.ParameterDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.ParameterDirection\"></xref> values."},{"pos":[15559,15732],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value of the field can be null; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of the field can be null; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15796,15932],"content":"The total number of digits to the left and right of the decimal point to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of digits to the left and right of the decimal point to which &lt;xref:System.Data.Odbc.OdbcParameter.Value*&gt; is resolved.","pos":[0,136],"source":"The total number of digits to the left and right of the decimal point to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved."}]},{"pos":[15992,16093],"content":"The total number of decimal places to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of decimal places to which &lt;xref:System.Data.Odbc.OdbcParameter.Value*&gt; is resolved.","pos":[0,101],"source":"The total number of decimal places to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved."}]},{"pos":[16159,16189],"content":"The name of the source column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the source column.","pos":[0,30]}]},{"pos":[16269,16335],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRowVersion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.DataRowVersion\"></xref> values."},{"pos":[16397,16498],"content":"An &lt;xref:System.Object&gt; that is the value of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object> that is the value of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref>."},{"pos":[16657,16744],"content":"The value supplied in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an invalid back-end data type.","needQuote":true,"needEscape":true,"source":"The value supplied in the <code>type</code> parameter is an invalid back-end data type."},{"pos":[17726,17948],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the parameter name, data type, length, source column name, parameter direction, numeric precision, and other properties.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> class that uses the parameter name, data type, length, source column name, parameter direction, numeric precision, and other properties."},{"pos":[19136,19162],"content":"The name of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter.","pos":[0,26]}]},{"pos":[19239,19305],"content":"One of the <xref:System.Data.Odbc.OdbcParameter.OdbcType*> values.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the &lt;xref:System.Data.Odbc.OdbcParameter.OdbcType*&gt; values.","pos":[0,66],"source":"One of the <xref:System.Data.Odbc.OdbcParameter.OdbcType*> values."}]},{"pos":[19365,19393],"content":"The length of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of the parameter.","pos":[0,28]}]},{"pos":[19485,19555],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.ParameterDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.ParameterDirection\"></xref> values."},{"pos":[19619,19755],"content":"The total number of digits to the left and right of the decimal point to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of digits to the left and right of the decimal point to which &lt;xref:System.Data.Odbc.OdbcParameter.Value*&gt; is resolved.","pos":[0,136],"source":"The total number of digits to the left and right of the decimal point to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved."}]},{"pos":[19815,19916],"content":"The total number of decimal places to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of decimal places to which &lt;xref:System.Data.Odbc.OdbcParameter.Value*&gt; is resolved.","pos":[0,101],"source":"The total number of decimal places to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved."}]},{"pos":[19985,20015],"content":"The name of the source column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the source column.","pos":[0,30]}]},{"pos":[20098,20164],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRowVersion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.DataRowVersion\"></xref> values."},{"pos":[20245,20430],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the corresponding source column is nullable; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if it is not.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the corresponding source column is nullable; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it is not."},{"pos":[20492,20593],"content":"An &lt;xref:System.Object&gt; that is the value of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object> that is the value of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref>."},{"pos":[20752,20839],"content":"The value supplied in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an invalid back-end data type.","needQuote":true,"needEscape":true,"source":"The value supplied in the <code>type</code> parameter is an invalid back-end data type."},{"pos":[21172,21246],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.DbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the parameter.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.DbType\"></xref> of the parameter."},{"pos":[21259,21831],"content":"The <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> and DbType are linked. Therefore, setting the DbType changes the <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> to a supporting <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>.       For a list of the supported data types, see the appropriate <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> member. For more information, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  <xref:System.Data.DbType> is not supported by the Microsoft .NET Framework Data Provider for ODBC.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Data.Odbc.OdbcParameter.OdbcType%2A&gt; and DbType are linked.","pos":[0,76],"source":"The <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> and DbType are linked."},{"content":"Therefore, setting the DbType changes the &lt;xref:System.Data.Odbc.OdbcParameter.OdbcType%2A&gt; to a supporting &lt;xref:System.Data.Odbc.OdbcParameter.OdbcType%2A&gt;.","pos":[77,235],"source":" Therefore, setting the DbType changes the <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> to a supporting <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>."},{"content":"For a list of the supported data types, see the appropriate &lt;xref:System.Data.Odbc.OdbcParameter.OdbcType%2A&gt; member.","pos":[242,359],"source":"       For a list of the supported data types, see the appropriate <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> member."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>DataAdapter Parameters<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[360,450],"source":" For more information, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  &lt;xref:System.Data.DbType&gt; is not supported by the Microsoft .NET Framework Data Provider for ODBC.","pos":[456,567],"source":"      > [!NOTE] >  <xref:System.Data.DbType> is not supported by the Microsoft .NET Framework Data Provider for ODBC."}]},{"pos":[22330,22425],"content":"One of the <xref href=\"System.Data.DbType\"></xref> values. The default is <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,58],"source":"One of the <xref href=\"System.Data.DbType\"></xref> values."},{"content":"The default is &lt;xref:System.String&gt;.","pos":[59,95],"source":" The default is <xref:System.String>."}]},{"pos":[22605,22681],"content":"The property was not set to a valid <bpt id=\"p1\">&lt;xref href=\"System.Data.DbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The property was not set to a valid <xref href=\"System.Data.DbType\"></xref>."},{"pos":[23029,23175],"content":"Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.","pos":[0,146]}]},{"pos":[23188,23743],"content":"If the <xref:System.Data.ParameterDirection> is `Output`, and execution of the associated <xref:System.Data.Odbc.OdbcCommand> does not return a value, the <xref:System.Data.Odbc.OdbcParameter> will contain a null value. Null values are handled using the <xref:System.DBNull> class.       `Output`, `InputOut`, and `ReturnValue` parameters returned by calling <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> cannot be accessed until you call <xref:System.Data.Odbc.OdbcDataReader.Close%2A> or `Dispose` on the <xref:System.Data.Odbc.OdbcDataReader>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the &lt;xref:System.Data.ParameterDirection&gt; is <ph id=\"ph1\">`Output`</ph>, and execution of the associated &lt;xref:System.Data.Odbc.OdbcCommand&gt; does not return a value, the &lt;xref:System.Data.Odbc.OdbcParameter&gt; will contain a null value.","pos":[0,219],"source":"If the <xref:System.Data.ParameterDirection> is `Output`, and execution of the associated <xref:System.Data.Odbc.OdbcCommand> does not return a value, the <xref:System.Data.Odbc.OdbcParameter> will contain a null value."},{"content":"Null values are handled using the &lt;xref:System.DBNull&gt; class.","pos":[220,281],"source":" Null values are handled using the <xref:System.DBNull> class."},{"content":"<ph id=\"ph1\">`Output`</ph>, <ph id=\"ph2\">`InputOut`</ph>, and <ph id=\"ph3\">`ReturnValue`</ph> parameters returned by calling &lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt; cannot be accessed until you call &lt;xref:System.Data.Odbc.OdbcDataReader.Close%2A&gt; or <ph id=\"ph4\">`Dispose`</ph> on the &lt;xref:System.Data.Odbc.OdbcDataReader&gt;.","pos":[288,553],"source":"`Output`, `InputOut`, and `ReturnValue` parameters returned by calling <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> cannot be accessed until you call <xref:System.Data.Odbc.OdbcDataReader.Close%2A> or `Dispose` on the <xref:System.Data.Odbc.OdbcDataReader>."}]},{"pos":[24819,24968],"content":"One of the <xref href=\"System.Data.ParameterDirection\"></xref> values. The default is <xref uid=\"langword_csharp_Input\" name=\"Input\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.ParameterDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,70],"source":"One of the <xref href=\"System.Data.ParameterDirection\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Input\" name=\"Input\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[71,149],"source":" The default is <xref uid=\"langword_csharp_Input\" name=\"Input\" href=\"\"></xref>."}]},{"pos":[25131,25235],"content":"The property was not set to one of the valid <bpt id=\"p1\">&lt;xref href=\"System.Data.ParameterDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The property was not set to one of the valid <xref href=\"System.Data.ParameterDirection\"></xref> values."},{"pos":[25588,25666],"content":"Gets or sets a value that indicates whether the parameter accepts null values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the parameter accepts null values.","pos":[0,78]}]},{"pos":[25678,25739],"content":"Null values are handled using the <xref:System.DBNull> class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Null values are handled using the &lt;xref:System.DBNull&gt; class.","pos":[0,61],"source":"Null values are handled using the <xref:System.DBNull> class."}]},{"pos":[26472,26714],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null values are accepted; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if null values are accepted; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,163],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null values are accepted; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[164,242],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[27129,27210],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the parameter.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.Odbc.OdbcType\"></xref> of the parameter."},{"pos":[27223,27641],"content":"The OdbcType and <xref:System.Data.Odbc.OdbcParameter.DbType%2A> are linked. Therefore, setting the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> changes the OdbcType to a supporting <xref:System.Data.Odbc.OdbcType>.       For a list of the supported data types, see the appropriate <xref:System.Data.Odbc.OdbcType> member. For more information, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The OdbcType and &lt;xref:System.Data.Odbc.OdbcParameter.DbType%2A&gt; are linked.","pos":[0,76],"source":"The OdbcType and <xref:System.Data.Odbc.OdbcParameter.DbType%2A> are linked."},{"content":"Therefore, setting the &lt;xref:System.Data.Odbc.OdbcParameter.DbType%2A&gt; changes the OdbcType to a supporting &lt;xref:System.Data.Odbc.OdbcType&gt;.","pos":[77,218],"source":" Therefore, setting the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> changes the OdbcType to a supporting <xref:System.Data.Odbc.OdbcType>."},{"content":"For a list of the supported data types, see the appropriate &lt;xref:System.Data.Odbc.OdbcType&gt; member.","pos":[225,325],"source":"       For a list of the supported data types, see the appropriate <xref:System.Data.Odbc.OdbcType> member."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>DataAdapter Parameters<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[326,416],"source":" For more information, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[27791,28002],"content":"An <xref href=\"System.Data.Odbc.OdbcType\"></xref> value that is the <xref href=\"System.Data.Odbc.OdbcType\"></xref> of the parameter. The default is <xref uid=\"langword_csharp_Nchar\" name=\"Nchar\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that is the <bpt id=\"p2\">&lt;xref href=\"System.Data.Odbc.OdbcType\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> of the parameter.","pos":[0,132],"source":"An <xref href=\"System.Data.Odbc.OdbcType\"></xref> value that is the <xref href=\"System.Data.Odbc.OdbcType\"></xref> of the parameter."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nchar\" name=\"Nchar\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[133,211],"source":" The default is <xref uid=\"langword_csharp_Nchar\" name=\"Nchar\" href=\"\"></xref>."}]},{"pos":[28440,28521],"content":"Gets or sets the name of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the name of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref>."},{"pos":[28533,29102],"content":"Instead of named parameters, the ODBC .NET Provider uses positional parameters that are marked with a question mark (?) in the syntax of the command text. Parameter objects in the <xref:System.Data.Odbc.OdbcParameterCollection> and the actual parameters accepted by the stored procedure or parameterized SQL statement correspond to each other based on the order in which the <xref:System.Data.Odbc.OdbcParameter> objects are inserted into the collection instead of by parameter name. Parameter names can be supplied, but will be ignored during parameter object binding.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Instead of named parameters, the ODBC .NET Provider uses positional parameters that are marked with a question mark (?) in the syntax of the command text. Parameter objects in the <xref:System.Data.Odbc.OdbcParameterCollection> and the actual parameters accepted by the stored procedure or parameterized SQL statement correspond to each other based on the order in which the <xref:System.Data.Odbc.OdbcParameter> objects are inserted into the collection instead of by parameter name. Parameter names can be supplied, but will be ignored during parameter object binding.","pos":[0,569],"nodes":[{"content":"Instead of named parameters, the ODBC .NET Provider uses positional parameters that are marked with a question mark (?) in the syntax of the command text.","pos":[0,154]},{"content":"Parameter objects in the &lt;xref:System.Data.Odbc.OdbcParameterCollection&gt; and the actual parameters accepted by the stored procedure or parameterized SQL statement correspond to each other based on the order in which the &lt;xref:System.Data.Odbc.OdbcParameter&gt; objects are inserted into the collection instead of by parameter name.","pos":[155,483],"source":" Parameter objects in the <xref:System.Data.Odbc.OdbcParameterCollection> and the actual parameters accepted by the stored procedure or parameterized SQL statement correspond to each other based on the order in which the <xref:System.Data.Odbc.OdbcParameter> objects are inserted into the collection instead of by parameter name."},{"content":"Parameter names can be supplied, but will be ignored during parameter object binding.","pos":[484,569]}]}]},{"pos":[30461,30566],"content":"The name of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref>. The default is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,68],"source":"The name of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref>."},{"content":"The default is an empty string (\"\").","pos":[69,105]}]},{"pos":[30989,31099],"content":"Gets or sets the number of digits used to represent the <xref:System.Data.Odbc.OdbcParameter.Value*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the number of digits used to represent the &lt;xref:System.Data.Odbc.OdbcParameter.Value*&gt; property.","pos":[0,110],"source":"Gets or sets the number of digits used to represent the <xref:System.Data.Odbc.OdbcParameter.Value*> property."}]},{"pos":[31112,31766],"content":"Setting this property to a value other than the value in the database depends on the implementation of the data provider and may return an error code, truncate, or round data.       The Precision property only affects parameters whose <xref:System.Data.Odbc.OdbcType> is `Decimal` or `Numeric`. For other data types, Precision is ignored.      > [!NOTE] >  Use of this property to coerce data passed to the database is not supported. To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter's `Value` property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Setting this property to a value other than the value in the database depends on the implementation of the data provider and may return an error code, truncate, or round data.","pos":[0,175]},{"content":"The Precision property only affects parameters whose &lt;xref:System.Data.Odbc.OdbcType&gt; is <ph id=\"ph1\">`Decimal`</ph> or <ph id=\"ph2\">`Numeric`</ph>.","pos":[182,294],"source":"       The Precision property only affects parameters whose <xref:System.Data.Odbc.OdbcType> is `Decimal` or `Numeric`."},{"content":"For other data types, Precision is ignored.","pos":[295,338]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Use of this property to coerce data passed to the database is not supported.","pos":[344,433],"source":"      > [!NOTE] >  Use of this property to coerce data passed to the database is not supported."},{"content":"To round, truncate, or otherwise coerce data before passing it to the database, use the &lt;xref:System.Math&gt; class that is part of the <ph id=\"ph1\">`System`</ph> namespace prior to assigning a value to the parameter's <ph id=\"ph2\">`Value`</ph> property.","pos":[434,649],"source":" To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter's `Value` property."}]},{"pos":[32477,32714],"content":"The maximum number of digits used to represent the &lt;xref:System.Data.Odbc.OdbcParameter.Value<bpt id=\"p1\">*</bpt>&gt; property. The default value is 0, which indicates that the data provider sets the precision for &lt;xref:System.Data.Odbc.OdbcParameter.Value<ept id=\"p1\">*</ept>&gt;.","needQuote":true,"needEscape":true,"source":"The maximum number of digits used to represent the <xref:System.Data.Odbc.OdbcParameter.Value*> property. The default value is 0, which indicates that the data provider sets the precision for <xref:System.Data.Odbc.OdbcParameter.Value*>."},{"pos":[33147,33236],"content":"Resets the type associated with this <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Resets the type associated with this <xref href=\"System.Data.Odbc.OdbcParameter\"></xref>."},{"pos":[33249,33840],"content":"When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value. Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter. Calling this method affects both the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> and <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> properties of the <xref:System.Data.Odbc.OdbcParameter>.       Calling ResetDbType resets <xref:System.Data.Odbc.OdbcParameter.DbType%2A> to its default value (String).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value. Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter. Calling this method affects both the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> and <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> properties of the <xref:System.Data.Odbc.OdbcParameter>.       Calling ResetDbType resets <xref:System.Data.Odbc.OdbcParameter.DbType%2A> to its default value (String).","pos":[0,589],"nodes":[{"content":"When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value.","pos":[0,164]},{"content":"Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter.","pos":[165,281]},{"content":"Calling this method affects both the &lt;xref:System.Data.Odbc.OdbcParameter.DbType%2A&gt; and &lt;xref:System.Data.Odbc.OdbcParameter.OdbcType%2A&gt; properties of the &lt;xref:System.Data.Odbc.OdbcParameter&gt;.","pos":[282,477],"source":" Calling this method affects both the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> and <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> properties of the <xref:System.Data.Odbc.OdbcParameter>."},{"content":"Calling ResetDbType resets &lt;xref:System.Data.Odbc.OdbcParameter.DbType%2A&gt; to its default value (String).","pos":[484,589],"source":"       Calling ResetDbType resets <xref:System.Data.Odbc.OdbcParameter.DbType%2A> to its default value (String)."}]}]},{"pos":[34365,34454],"content":"Resets the type associated with this <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Resets the type associated with this <xref href=\"System.Data.Odbc.OdbcParameter\"></xref>."},{"pos":[34466,34943],"content":"When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value. Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter. Calling this method affects both the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> and <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> properties of the <xref:System.Data.Odbc.OdbcParameter>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value. Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter. Calling this method affects both the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> and <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> properties of the <xref:System.Data.Odbc.OdbcParameter>.","pos":[0,477],"nodes":[{"content":"When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value.","pos":[0,164]},{"content":"Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter.","pos":[165,281]},{"content":"Calling this method affects both the &lt;xref:System.Data.Odbc.OdbcParameter.DbType%2A&gt; and &lt;xref:System.Data.Odbc.OdbcParameter.OdbcType%2A&gt; properties of the &lt;xref:System.Data.Odbc.OdbcParameter&gt;.","pos":[282,477],"source":" Calling this method affects both the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> and <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> properties of the <xref:System.Data.Odbc.OdbcParameter>."}]}]},{"pos":[35418,35526],"content":"Gets or sets the number of decimal places to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the number of decimal places to which &lt;xref:System.Data.Odbc.OdbcParameter.Value*&gt; is resolved.","pos":[0,108],"source":"Gets or sets the number of decimal places to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved."}]},{"pos":[35539,37048],"content":"The Scale property is used only for decimal and numeric input parameters.       The effect of setting this property to a value other than the value in the database depends on the implementation of the data provider and may return an error code, or truncate or round data.       The Scale property only affects parameters whose <xref:System.Data.Odbc.OdbcType> is `Decimal` or `Numeric`. For other data types, Scale is ignored.       When using SQL Server Native Client 10 (or later) to bind a parameter whose type is Decimal, Numeric, VarNumeric, DBDate, or DBTimeStamp, you must manually specify an appropriate Scale value.      > [!NOTE] >  Use of this property to coerce data passed to the database is not supported. To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter's `Value` property.      > [!NOTE] >  .NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the `scale` of <xref:System.Decimal> parameter values. This can cause modified data being inserted at the data source. If you are using .NET Framework version 1.0, validate the s`cale` of d`ecimal` values before setting the parameter value. When you use .NET Framework version 1.1 or later versions, `scale` values that exceed the `decimal` parameter scale might only be truncated in scale, if that is the behavior of the underlying ODBC driver.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Scale property is used only for decimal and numeric input parameters.","pos":[0,73]},{"content":"The effect of setting this property to a value other than the value in the database depends on the implementation of the data provider and may return an error code, or truncate or round data.","pos":[80,271]},{"content":"The Scale property only affects parameters whose &lt;xref:System.Data.Odbc.OdbcType&gt; is <ph id=\"ph1\">`Decimal`</ph> or <ph id=\"ph2\">`Numeric`</ph>.","pos":[278,386],"source":"       The Scale property only affects parameters whose <xref:System.Data.Odbc.OdbcType> is `Decimal` or `Numeric`."},{"content":"For other data types, Scale is ignored.","pos":[387,426]},{"content":"When using SQL Server Native Client 10 (or later) to bind a parameter whose type is Decimal, Numeric, VarNumeric, DBDate, or DBTimeStamp, you must manually specify an appropriate Scale value.","pos":[433,624]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Use of this property to coerce data passed to the database is not supported.","pos":[630,719],"source":"      > [!NOTE] >  Use of this property to coerce data passed to the database is not supported."},{"content":"To round, truncate, or otherwise coerce data before passing it to the database, use the &lt;xref:System.Math&gt; class that is part of the <ph id=\"ph1\">`System`</ph> namespace prior to assigning a value to the parameter's <ph id=\"ph2\">`Value`</ph> property.","pos":[720,935],"source":" To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter's `Value` property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  .NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the <ph id=\"ph2\">`scale`</ph> of &lt;xref:System.Decimal&gt; parameter values.","pos":[941,1106],"source":"      > [!NOTE] >  .NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the `scale` of <xref:System.Decimal> parameter values."},{"content":"This can cause modified data being inserted at the data source.","pos":[1107,1170]},{"content":"If you are using .NET Framework version 1.0, validate the s<ph id=\"ph1\">`cale`</ph> of d<ph id=\"ph2\">`ecimal`</ph> values before setting the parameter value.","pos":[1171,1292],"source":" If you are using .NET Framework version 1.0, validate the s`cale` of d`ecimal` values before setting the parameter value."},{"content":"When you use .NET Framework version 1.1 or later versions, <ph id=\"ph1\">`scale`</ph> values that exceed the <ph id=\"ph2\">`decimal`</ph> parameter scale might only be truncated in scale, if that is the behavior of the underlying ODBC driver.","pos":[1293,1497],"source":" When you use .NET Framework version 1.1 or later versions, `scale` values that exceed the `decimal` parameter scale might only be truncated in scale, if that is the behavior of the underlying ODBC driver."}]},{"pos":[37755,37868],"content":"The number of decimal places to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of decimal places to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved. The default is 0.","pos":[0,113],"nodes":[{"content":"The number of decimal places to which &lt;xref:System.Data.Odbc.OdbcParameter.Value*&gt; is resolved.","pos":[0,95],"source":"The number of decimal places to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved."},{"content":"The default is 0.","pos":[96,113]}]}]},{"pos":[38258,38318],"content":"Gets or sets the maximum size of the data within the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum size of the data within the column.","pos":[0,60]}]},{"pos":[38331,40275],"content":"The Size property is used for binary and string types.       For nonstring data types and ANSI string data, the Size property refers to the number of bytes. For Unicode string data, Size refers to the number of characters. The count for strings does not include the terminating character.       For variable-length data types, `Size` describes the maximum amount of data to transmit to the server. For example, for a Unicode string value, `Size` could be used to limit the amount of data sent to the server to the first one hundred characters.       For bidirectional and output parameters, and return values, you must set the value of `Size`. This is not required for input parameters, and if not explicitly set, the value of is inferred from the actual size of the specified parameter when a parameterized statement is executed.       The <xref:System.Data.Common.DbParameter.DbType%2A>, <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>, and Size properties of a parameter can be inferred by setting <xref:System.Data.Odbc.OdbcParameter.Value%2A>. Therefore, you are not required to specify them. However, they are not exposed in <xref:System.Data.Odbc.OdbcParameter> property settings. For example, if the size of the parameter has been inferred, `Size` does not contain inferred value after statement execution.      > [!NOTE] >  For an `OdbcParameter` with a <xref:System.Data.Odbc.OdbcParameter.Direction%2A> of `ParameterDirection.Output`, `ParameterDirection.InputOutput`, or `ParameterDirection.ReturnValue`, an exception is thrown when the command is executed if the size of the value returned by the data source exceeds the specified `Size` of the <xref:System.Data.Odbc.OdbcParameter>.       For fixed-length data types, the value of `Size` is ignored. It can be retrieved for informational purposes, and returns the maximum amount of bytes the provider uses when transmitting the value of the parameter to the server.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Size property is used for binary and string types.","pos":[0,54]},{"content":"For nonstring data types and ANSI string data, the Size property refers to the number of bytes.","pos":[61,156]},{"content":"For Unicode string data, Size refers to the number of characters.","pos":[157,222]},{"content":"The count for strings does not include the terminating character.","pos":[223,288]},{"content":"For variable-length data types, <ph id=\"ph1\">`Size`</ph> describes the maximum amount of data to transmit to the server.","pos":[295,397],"source":"       For variable-length data types, `Size` describes the maximum amount of data to transmit to the server."},{"content":"For example, for a Unicode string value, <ph id=\"ph1\">`Size`</ph> could be used to limit the amount of data sent to the server to the first one hundred characters.","pos":[398,543],"source":" For example, for a Unicode string value, `Size` could be used to limit the amount of data sent to the server to the first one hundred characters."},{"content":"For bidirectional and output parameters, and return values, you must set the value of <ph id=\"ph1\">`Size`</ph>.","pos":[550,643],"source":"       For bidirectional and output parameters, and return values, you must set the value of `Size`."},{"content":"This is not required for input parameters, and if not explicitly set, the value of is inferred from the actual size of the specified parameter when a parameterized statement is executed.","pos":[644,830]},{"content":"The &lt;xref:System.Data.Common.DbParameter.DbType%2A&gt;, &lt;xref:System.Data.Odbc.OdbcParameter.OdbcType%2A&gt;, and Size properties of a parameter can be inferred by setting &lt;xref:System.Data.Odbc.OdbcParameter.Value%2A&gt;.","pos":[837,1050],"source":"       The <xref:System.Data.Common.DbParameter.DbType%2A>, <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>, and Size properties of a parameter can be inferred by setting <xref:System.Data.Odbc.OdbcParameter.Value%2A>."},{"content":"Therefore, you are not required to specify them.","pos":[1051,1099]},{"content":"However, they are not exposed in &lt;xref:System.Data.Odbc.OdbcParameter&gt; property settings.","pos":[1100,1189],"source":" However, they are not exposed in <xref:System.Data.Odbc.OdbcParameter> property settings."},{"content":"For example, if the size of the parameter has been inferred, <ph id=\"ph1\">`Size`</ph> does not contain inferred value after statement execution.","pos":[1190,1316],"source":" For example, if the size of the parameter has been inferred, `Size` does not contain inferred value after statement execution."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  For an <ph id=\"ph2\">`OdbcParameter`</ph> with a &lt;xref:System.Data.Odbc.OdbcParameter.Direction%2A&gt; of <ph id=\"ph3\">`ParameterDirection.Output`</ph>, <ph id=\"ph4\">`ParameterDirection.InputOutput`</ph>, or <ph id=\"ph5\">`ParameterDirection.ReturnValue`</ph>, an exception is thrown when the command is executed if the size of the value returned by the data source exceeds the specified <ph id=\"ph6\">`Size`</ph> of the &lt;xref:System.Data.Odbc.OdbcParameter&gt;.","pos":[1322,1698],"source":"      > [!NOTE] >  For an `OdbcParameter` with a <xref:System.Data.Odbc.OdbcParameter.Direction%2A> of `ParameterDirection.Output`, `ParameterDirection.InputOutput`, or `ParameterDirection.ReturnValue`, an exception is thrown when the command is executed if the size of the value returned by the data source exceeds the specified `Size` of the <xref:System.Data.Odbc.OdbcParameter>."},{"content":"For fixed-length data types, the value of <ph id=\"ph1\">`Size`</ph> is ignored.","pos":[1705,1765],"source":"       For fixed-length data types, the value of `Size` is ignored."},{"content":"It can be retrieved for informational purposes, and returns the maximum amount of bytes the provider uses when transmitting the value of the parameter to the server.","pos":[1766,1931]}]},{"pos":[41244,41347],"content":"The maximum size of the data within the column. The default value is inferred from the parameter value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size of the data within the column. The default value is inferred from the parameter value.","pos":[0,103],"nodes":[{"content":"The maximum size of the data within the column.","pos":[0,47]},{"content":"The default value is inferred from the parameter value.","pos":[48,103]}]}]},{"pos":[41776,41957],"content":"Gets or sets the name of the source column mapped to the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and used for loading or returning the &lt;xref:System.Data.Odbc.OdbcParameter.Value*&gt;.","needQuote":true,"needEscape":true,"source":"Gets or sets the name of the source column mapped to the <xref href=\"System.Data.DataSet\"></xref> and used for loading or returning the <xref:System.Data.Odbc.OdbcParameter.Value*>."},{"pos":[41970,42609],"content":"When SourceColumn is set to anything other than an empty string, the value of the parameter is retrieved from the column with the `SourceColumn` name. If <xref:System.Data.Odbc.OdbcParameter.Direction%2A> is set to `Input`, the value is taken from the <xref:System.Data.DataSet>. If `Direction` is set to `Output`, the value is taken from the data source. A `Direction` of `InputOutput` is a combination of both.       For more information about how to use the SourceColumn property, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md) and [Updating Data Sources with DataAdapters](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When SourceColumn is set to anything other than an empty string, the value of the parameter is retrieved from the column with the <ph id=\"ph1\">`SourceColumn`</ph> name.","pos":[0,150],"source":"When SourceColumn is set to anything other than an empty string, the value of the parameter is retrieved from the column with the `SourceColumn` name."},{"content":"If &lt;xref:System.Data.Odbc.OdbcParameter.Direction%2A&gt; is set to <ph id=\"ph1\">`Input`</ph>, the value is taken from the &lt;xref:System.Data.DataSet&gt;.","pos":[151,279],"source":" If <xref:System.Data.Odbc.OdbcParameter.Direction%2A> is set to `Input`, the value is taken from the <xref:System.Data.DataSet>."},{"content":"If <ph id=\"ph1\">`Direction`</ph> is set to <ph id=\"ph2\">`Output`</ph>, the value is taken from the data source.","pos":[280,355],"source":" If `Direction` is set to `Output`, the value is taken from the data source."},{"content":"A <ph id=\"ph1\">`Direction`</ph> of <ph id=\"ph2\">`InputOutput`</ph> is a combination of both.","pos":[356,412],"source":" A `Direction` of `InputOutput` is a combination of both."},{"content":"For more information about how to use the SourceColumn property, see <bpt id=\"p1\">[</bpt>DataAdapter Parameters<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>Updating Data Sources with DataAdapters<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[419,637],"source":"       For more information about how to use the SourceColumn property, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md) and [Updating Data Sources with DataAdapters](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[43270,43390],"content":"The name of the source column that will be used to set the value of this parameter. The default is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the source column that will be used to set the value of this parameter. The default is an empty string (\"\").","pos":[0,120],"nodes":[{"content":"The name of the source column that will be used to set the value of this parameter.","pos":[0,83]},{"content":"The default is an empty string (\"\").","pos":[84,120]}]}]},{"pos":[43882,44083],"content":"Sets or gets a value which indicates whether the source column is nullable. This lets <xref href=\"System.Data.Common.DbCommandBuilder\"></xref> correctly generate Update statements for nullable columns.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets or gets a value which indicates whether the source column is nullable.","pos":[0,75]},{"content":"This lets <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbCommandBuilder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> correctly generate Update statements for nullable columns.","pos":[76,201],"source":" This lets <xref href=\"System.Data.Common.DbCommandBuilder\"></xref> correctly generate Update statements for nullable columns."}]},{"pos":[44096,45466],"content":"SourceColumnNullMapping is used by the <xref:System.Data.Common.DbCommandBuilder> to correctly generate update commands when dealing with nullable columns. Generally, use of SourceColumnNullMapping is limited to developers inheriting from <xref:System.Data.Common.DbCommandBuilder>.       <xref:System.Data.Common.DbCommandBuilder> uses this property to determine whether the source column is nullable, and sets this property to `true` if it is nullable, and `false` if it is not. When <xref:System.Data.Common.DbCommandBuilder> is generating its Update statement, it examines the SourceColumnNullMapping for each parameter. If the property is `true`, <xref:System.Data.Common.DbCommandBuilder> generates a WHERE clauses like the following example. In this query expression, \"FieldName\" represents the name of the field:      ```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ```       If SourceColumnNullMapping for the field is false, <xref:System.Data.Common.DbCommandBuilder> generates the following WHERE clause:      ```   FieldName = @OriginalFieldName   ```       In addition, @IsNull_FieldName contains 1 if the source field contains null, and 0 if it does not. This mechanism allows for a performance optimization in SQL Server, and provides for common code that works across multiple providers.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"SourceColumnNullMapping is used by the &lt;xref:System.Data.Common.DbCommandBuilder&gt; to correctly generate update commands when dealing with nullable columns.","pos":[0,155],"source":"SourceColumnNullMapping is used by the <xref:System.Data.Common.DbCommandBuilder> to correctly generate update commands when dealing with nullable columns."},{"content":"Generally, use of SourceColumnNullMapping is limited to developers inheriting from &lt;xref:System.Data.Common.DbCommandBuilder&gt;.","pos":[156,282],"source":" Generally, use of SourceColumnNullMapping is limited to developers inheriting from <xref:System.Data.Common.DbCommandBuilder>."},{"content":"&lt;xref:System.Data.Common.DbCommandBuilder&gt; uses this property to determine whether the source column is nullable, and sets this property to <ph id=\"ph1\">`true`</ph> if it is nullable, and <ph id=\"ph2\">`false`</ph> if it is not.","pos":[289,480],"source":"       <xref:System.Data.Common.DbCommandBuilder> uses this property to determine whether the source column is nullable, and sets this property to `true` if it is nullable, and `false` if it is not."},{"content":"When &lt;xref:System.Data.Common.DbCommandBuilder&gt; is generating its Update statement, it examines the SourceColumnNullMapping for each parameter.","pos":[481,624],"source":" When <xref:System.Data.Common.DbCommandBuilder> is generating its Update statement, it examines the SourceColumnNullMapping for each parameter."},{"content":"If the property is <ph id=\"ph1\">`true`</ph>, &lt;xref:System.Data.Common.DbCommandBuilder&gt; generates a WHERE clauses like the following example.","pos":[625,748],"source":" If the property is `true`, <xref:System.Data.Common.DbCommandBuilder> generates a WHERE clauses like the following example."},{"content":"In this query expression, \"FieldName\" represents the name of the field:      <ph id=\"ph1\">```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ```</ph>       If SourceColumnNullMapping for the field is false, &lt;xref:System.Data.Common.DbCommandBuilder&gt; generates the following WHERE clause:      <ph id=\"ph2\">```   FieldName = @OriginalFieldName   ```</ph>       In addition, <ph id=\"ph3\">@IsNull_FieldName</ph> contains 1 if the source field contains null, and 0 if it does not.","pos":[749,1218],"source":" In this query expression, \"FieldName\" represents the name of the field:      ```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ```       If SourceColumnNullMapping for the field is false, <xref:System.Data.Common.DbCommandBuilder> generates the following WHERE clause:      ```   FieldName = @OriginalFieldName   ```       In addition, @IsNull_FieldName contains 1 if the source field contains null, and 0 if it does not."},{"content":"This mechanism allows for a performance optimization in SQL Server, and provides for common code that works across multiple providers.","pos":[1219,1353]}]},{"pos":[45608,45779],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the source column is nullable; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if it is not.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the source column is nullable; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it is not."},{"pos":[46232,46363],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRowVersion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use when you load &lt;xref:System.Data.Odbc.OdbcParameter.Value*&gt;.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.DataRowVersion\"></xref> to use when you load <xref:System.Data.Odbc.OdbcParameter.Value*>."},{"pos":[46376,46837],"content":"The `SourceVersion` is used by <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> during an <xref:System.Data.DbDataAdapter.Common.Update%2A> operation to determine whether the parameter value is set to Current or Original. This allows primary keys to be updated.       This property is set to the version of the <xref:System.Data.DataRow> used by either the `Item` property (`DataRow` indexer), or the <xref:System.Data.DataRow.GetChildRows%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`SourceVersion`</ph> is used by &lt;xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A&gt; during an &lt;xref:System.Data.DbDataAdapter.Common.Update%2A&gt; operation to determine whether the parameter value is set to Current or Original.","pos":[0,229],"source":"The `SourceVersion` is used by <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> during an <xref:System.Data.DbDataAdapter.Common.Update%2A> operation to determine whether the parameter value is set to Current or Original."},{"content":"This allows primary keys to be updated.","pos":[230,269]},{"content":"This property is set to the version of the &lt;xref:System.Data.DataRow&gt; used by either the <ph id=\"ph1\">`Item`</ph> property (<ph id=\"ph2\">`DataRow`</ph> indexer), or the &lt;xref:System.Data.DataRow.GetChildRows%2A&gt; method.","pos":[276,459],"source":"       This property is set to the version of the <xref:System.Data.DataRow> used by either the `Item` property (`DataRow` indexer), or the <xref:System.Data.DataRow.GetChildRows%2A> method."}]},{"pos":[47645,47735],"content":"One of the <xref href=\"System.Data.DataRowVersion\"></xref> values. The default is Current.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRowVersion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,66],"source":"One of the <xref href=\"System.Data.DataRowVersion\"></xref> values."},{"content":"The default is Current.","pos":[67,90]}]},{"pos":[48246,48349],"content":"For a description of this member, see &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.ICloneable.Clone%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,103],"source":"For a description of this member, see &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."}]},{"pos":[48361,48546],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Odbc.OdbcParameter> instance is cast to an <xref:System.ICloneable> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Odbc.OdbcParameter> instance is cast to an <xref:System.ICloneable> interface.","pos":[0,185],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Data.Odbc.OdbcParameter&gt; instance is cast to an &lt;xref:System.ICloneable&gt; interface.","pos":[60,185],"source":" It can be used only when the <xref:System.Data.Odbc.OdbcParameter> instance is cast to an <xref:System.ICloneable> interface."}]}]},{"pos":[48674,48733],"content":"A new <xref:System.Object> that is a copy of this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new &lt;xref:System.Object&gt; that is a copy of this instance.","pos":[0,59],"source":"A new <xref:System.Object> that is a copy of this instance."}]},{"pos":[49165,49250],"content":"Gets a string that contains the <xref:System.Data.Odbc.OdbcParameter.ParameterName*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a string that contains the &lt;xref:System.Data.Odbc.OdbcParameter.ParameterName*&gt;.","pos":[0,85],"source":"Gets a string that contains the <xref:System.Data.Odbc.OdbcParameter.ParameterName*>."}]},{"pos":[49386,49466],"content":"A string that contains the <xref:System.Data.Odbc.OdbcParameter.ParameterName*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains the &lt;xref:System.Data.Odbc.OdbcParameter.ParameterName*&gt;.","pos":[0,80],"source":"A string that contains the <xref:System.Data.Odbc.OdbcParameter.ParameterName*>."}]},{"pos":[49864,49904],"content":"Gets or sets the value of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the value of the parameter.","pos":[0,40]}]},{"pos":[49917,51333],"content":"For input parameters, the value is bound to the <xref:System.Data.Odbc.OdbcCommand> that is sent to the server. For output and return-value parameters, the value is set on completion of the <xref:System.Data.Odbc.OdbcCommand> and after the <xref:System.Data.Odbc.OdbcDataReader> is closed.       When you send a null parameter value to the server, the user must specify <xref:System.DBNull>, not null. A null value in the system is an empty object that has no value. <xref:System.DBNull> is used to represent null values. If the parameter is used to call a stored procedure with parameters that have default values, setting Value to null causes the default value to be used.       If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server. The provider tries to convert any type of value if it supports the <xref:System.IConvertible> interface. Conversion errors may result if the specified type is not compatible with the value.       Both the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> and <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> properties can be inferred by setting Value. If applicable, the size, precision, and scale is also inferred from Value when the parameterized statement is executed. However, inferred values are not exposed to the user.       The Value property is overwritten by the `Update` method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"For input parameters, the value is bound to the &lt;xref:System.Data.Odbc.OdbcCommand&gt; that is sent to the server.","pos":[0,111],"source":"For input parameters, the value is bound to the <xref:System.Data.Odbc.OdbcCommand> that is sent to the server."},{"content":"For output and return-value parameters, the value is set on completion of the &lt;xref:System.Data.Odbc.OdbcCommand&gt; and after the &lt;xref:System.Data.Odbc.OdbcDataReader&gt; is closed.","pos":[112,289],"source":" For output and return-value parameters, the value is set on completion of the <xref:System.Data.Odbc.OdbcCommand> and after the <xref:System.Data.Odbc.OdbcDataReader> is closed."},{"content":"When you send a null parameter value to the server, the user must specify &lt;xref:System.DBNull&gt;, not null.","pos":[296,401],"source":"       When you send a null parameter value to the server, the user must specify <xref:System.DBNull>, not null."},{"content":"A null value in the system is an empty object that has no value.","pos":[402,466]},{"content":"&lt;xref:System.DBNull&gt; is used to represent null values.","pos":[467,521],"source":" <xref:System.DBNull> is used to represent null values."},{"content":"If the parameter is used to call a stored procedure with parameters that have default values, setting Value to null causes the default value to be used.","pos":[522,674]},{"content":"If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server.","pos":[681,818]},{"content":"The provider tries to convert any type of value if it supports the &lt;xref:System.IConvertible&gt; interface.","pos":[819,923],"source":" The provider tries to convert any type of value if it supports the <xref:System.IConvertible> interface."},{"content":"Conversion errors may result if the specified type is not compatible with the value.","pos":[924,1008]},{"content":"Both the &lt;xref:System.Data.Odbc.OdbcParameter.DbType%2A&gt; and &lt;xref:System.Data.Odbc.OdbcParameter.OdbcType%2A&gt; properties can be inferred by setting Value.","pos":[1015,1170],"source":"       Both the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> and <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> properties can be inferred by setting Value."},{"content":"If applicable, the size, precision, and scale is also inferred from Value when the parameterized statement is executed.","pos":[1171,1290]},{"content":"However, inferred values are not exposed to the user.","pos":[1291,1344]},{"content":"The Value property is overwritten by the <ph id=\"ph1\">`Update`</ph> method.","pos":[1351,1408],"source":"       The Value property is overwritten by the `Update` method."}]},{"pos":[51973,52059],"content":"An <xref:System.Object> that is the value of the parameter. The default value is null.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <xref:System.Object> that is the value of the parameter. The default value is null.","pos":[0,86],"nodes":[{"content":"An &lt;xref:System.Object&gt; that is the value of the parameter.","pos":[0,59],"source":"An <xref:System.Object> that is the value of the parameter."},{"content":"The default value is null.","pos":[60,86]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Odbc.OdbcParameter\n  id: OdbcParameter\n  children:\n  - System.Data.Odbc.OdbcParameter.#ctor\n  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)\n  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)\n  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)\n  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)\n  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)\n  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)\n  - System.Data.Odbc.OdbcParameter.DbType\n  - System.Data.Odbc.OdbcParameter.Direction\n  - System.Data.Odbc.OdbcParameter.IsNullable\n  - System.Data.Odbc.OdbcParameter.OdbcType\n  - System.Data.Odbc.OdbcParameter.ParameterName\n  - System.Data.Odbc.OdbcParameter.Precision\n  - System.Data.Odbc.OdbcParameter.ResetDbType\n  - System.Data.Odbc.OdbcParameter.ResetOdbcType\n  - System.Data.Odbc.OdbcParameter.Scale\n  - System.Data.Odbc.OdbcParameter.Size\n  - System.Data.Odbc.OdbcParameter.SourceColumn\n  - System.Data.Odbc.OdbcParameter.SourceColumnNullMapping\n  - System.Data.Odbc.OdbcParameter.SourceVersion\n  - System.Data.Odbc.OdbcParameter.System#ICloneable#Clone\n  - System.Data.Odbc.OdbcParameter.ToString\n  - System.Data.Odbc.OdbcParameter.Value\n  langs:\n  - csharp\n  name: OdbcParameter\n  nameWithType: OdbcParameter\n  fullName: System.Data.Odbc.OdbcParameter\n  type: Class\n  summary: Represents a parameter to an <xref href=\"System.Data.Odbc.OdbcCommand\"></xref> and optionally, its mapping to a <xref href=\"System.Data.DataColumn\"></xref>. This class cannot be inherited.\n  remarks: \"Parameter names are not case sensitive.  \\n  \\n When querying an Oracle database using the Microsoft OLE DB Provider for Oracle (MSDAORA) and the ODBC .NET Framework Data Provider, using the `LIKE` clause to query values in fixed-length fields might not return all expected matches. The reason is that when Oracle matches values for fixed-length fields in a `LIKE` clause, it matches the entire length of the string, including any padding trailing spaces. For example, if a table in an Oracle database contains a field named \\\"Field1\\\" that is defined as `char(3)`, and you enter the value \\\"a\\\" into a row of that table, the following code will not return the row.  \\n  \\n```vb#  \\nDim queryString As String = \\\"SELECT * FROM Table1 WHERE Field1 LIKE ?\\\"  \\nDim command As OleDbCommand = New OleDbCommand(queryString, connection)  \\ncommand.Parameters.Add(\\\"@p1\\\", OleDbType.Char, 3).Value = \\\"a\\\"  \\nDim reader As OleDbDataReader = command.ExecuteReader()  \\n```  \\n  \\n```c#  \\nstring queryString = \\\"SELECT * FROM Table1 WHERE Field1 LIKE ?\\\";  \\nOleDbCommand command = new OleDbCommand(queryString, connection);  \\ncommand.Parameters.Add(\\\"@p1\\\", OleDbType.Char, 3).Value = \\\"a\\\";  \\nOleDbDataReader reader = command.ExecuteReader();  \\n```  \\n  \\n This is because Oracle stores the column value as \\\"a  \\\" (padding \\\"a\\\", with trailing spaces, to the fixed field length of 3), which Oracle does not treat as a match for the parameter value of \\\"a\\\" in the case of a `LIKE` comparison of fixed-length fields.  \\n  \\n To resolve this problem, append a percentage (\\\"%\\\") wildcard character to the parameter value (`\\\"a%\\\"`), or use an SQL `=` comparison instead.\"\n  example:\n  - \"The following example creates multiple instances of OdbcParameter through the <xref:System.Data.Odbc.OdbcParameterCollection> within the <xref:System.Data.Odbc.OdbcDataAdapter>. These parameters are used to select data from the data source and place the data in the <xref:System.Data.DataSet>. This example assumes that a <xref:System.Data.DataSet> and an <xref:System.Data.Odbc.OdbcDataAdapter> have already been created by using the appropriate schema, commands, and connection.  \\n  \\n [!code-cs[Classic WebData OdbcParameter#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcp_1_1.cs)]\\n [!code-vb[Classic WebData OdbcParameter#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcp_1_1.vb)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Data.Odbc.OdbcParameter/OdbcParameterConverter))]\n\n      public sealed class OdbcParameter : System.Data.Common.DbParameter, ICloneable\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.Data.Common.DbParameter\n  implements:\n  - System.ICloneable\n  inheritedMembers:\n  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision\n  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.#ctor\n  id: '#ctor'\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: OdbcParameter()\n  nameWithType: OdbcParameter.OdbcParameter()\n  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> class.\n  remarks: The base constructor initializes all fields to their default values.\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \\n  \\n [!code-cs[Classic WebData OdbcParameter.OdbcParameter#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcp_1_1.cs)]\\n [!code-vb[Classic WebData OdbcParameter.OdbcParameter#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcp_1_1.vb)]\"\n  syntax:\n    content: public OdbcParameter ();\n    parameters: []\n  overload: System.Data.Odbc.OdbcParameter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)\n  id: '#ctor(System.String,System.Data.Odbc.OdbcType)'\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: OdbcParameter(String,OdbcType)\n  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType)\n  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> class that uses the parameter name and data type.\n  remarks: ''\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \\n  \\n [!code-vb[Classic WebData OdbcParameter.OdbcParameter1#1](~/add/codesnippet/visualbasic/dcf1840c-d8ee-4878-9114-_1.vb)]\\n [!code-cs[Classic WebData OdbcParameter.OdbcParameter1#1](~/add/codesnippet/csharp/dcf1840c-d8ee-4878-9114-_1.cs)]\"\n  syntax:\n    content: public OdbcParameter (string name, System.Data.Odbc.OdbcType type);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the parameter.\n    - id: type\n      type: System.Data.Odbc.OdbcType\n      description: One of the <xref href=\"System.Data.Odbc.OdbcType\"></xref> values.\n  overload: System.Data.Odbc.OdbcParameter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value supplied in the <code>type</code> parameter is an invalid back-end data type.\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)\n  id: '#ctor(System.String,System.Object)'\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: OdbcParameter(String,Object)\n  nameWithType: OdbcParameter.OdbcParameter(String,Object)\n  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,Object)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> class that uses the parameter name and an <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> object.\n  remarks: \"Use caution when you are using this overload of the <xref:System.Data.Odbc.OdbcParameter> constructor to specify integer parameter values. Because this overload takes a `value` of type <xref:System.Object>, you must convert the integral value to an <xref:System.Object> type when the value is zero, as the following C# example demonstrates.  \\n  \\n```  \\nParameter = new OdbcParameter(\\\"@pname\\\", Convert.ToInt32(0));  \\n```  \\n  \\n If you do not perform this conversion, the compiler assumes that you are trying to call the <xref:System.Data.Odbc.OdbcParameter.%23ctor%2A?displayProperty=fullName> constructor overload.\"\n  syntax:\n    content: public OdbcParameter (string name, object value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the parameter.\n    - id: value\n      type: System.Object\n      description: An <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> object.\n  overload: System.Data.Odbc.OdbcParameter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)\n  id: '#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)'\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: OdbcParameter(String,OdbcType,Int32)\n  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32)\n  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> class that uses the parameter name, data type, and length.\n  remarks: ''\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \\n  \\n [!code-cs[Classic WebData OdbcParameter.OdbcParameter2#1](~/add/codesnippet/csharp/7ed6d552-f3e9-4f28-af5c-_1.cs)]\\n [!code-vb[Classic WebData OdbcParameter.OdbcParameter2#1](~/add/codesnippet/visualbasic/7ed6d552-f3e9-4f28-af5c-_1.vb)]\"\n  syntax:\n    content: public OdbcParameter (string name, System.Data.Odbc.OdbcType type, int size);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the parameter.\n    - id: type\n      type: System.Data.Odbc.OdbcType\n      description: One of the <xref href=\"System.Data.Odbc.OdbcType\"></xref> values.\n    - id: size\n      type: System.Int32\n      description: The length of the parameter.\n  overload: System.Data.Odbc.OdbcParameter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value supplied in the <code>type</code> parameter is an invalid back-end data type.\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)\n  id: '#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)'\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: OdbcParameter(String,OdbcType,Int32,String)\n  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,String)\n  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,String)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> class that uses the parameter name, data type, length, and source column name.\n  remarks: ''\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \\n  \\n [!code-cs[Classic WebData OdbcParameter.OdbcParameter3#1](~/add/codesnippet/csharp/6bdbd90e-e8bb-418c-bf3d-_1.cs)]\\n [!code-vb[Classic WebData OdbcParameter.OdbcParameter3#1](~/add/codesnippet/visualbasic/6bdbd90e-e8bb-418c-bf3d-_1.vb)]\"\n  syntax:\n    content: public OdbcParameter (string name, System.Data.Odbc.OdbcType type, int size, string sourcecolumn);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the parameter.\n    - id: type\n      type: System.Data.Odbc.OdbcType\n      description: One of the <xref href=\"System.Data.Odbc.OdbcType\"></xref> values.\n    - id: size\n      type: System.Int32\n      description: The length of the parameter.\n    - id: sourcecolumn\n      type: System.String\n      description: The name of the source column.\n  overload: System.Data.Odbc.OdbcParameter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value supplied in the <code>type</code> parameter is an invalid back-end data type.\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)\n  id: '#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)'\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)\n  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)\n  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> class that uses the parameter name, data type, length, source column name, parameter direction, numeric precision, and other properties.\n  remarks: ''\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcParameter> and displays the <xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>.  \\n  \\n [!code-cs[Classic WebData OdbcParameter.OdbcParameter4#1](~/add/codesnippet/csharp/46568e54-ed99-4cb1-9dd6-_1.cs)]\\n [!code-vb[Classic WebData OdbcParameter.OdbcParameter4#1](~/add/codesnippet/visualbasic/46568e54-ed99-4cb1-9dd6-_1.vb)]\"\n  syntax:\n    content: public OdbcParameter (string parameterName, System.Data.Odbc.OdbcType odbcType, int size, System.Data.ParameterDirection parameterDirection, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);\n    parameters:\n    - id: parameterName\n      type: System.String\n      description: The name of the parameter.\n    - id: odbcType\n      type: System.Data.Odbc.OdbcType\n      description: One of the <xref href=\"System.Data.Odbc.OdbcType\"></xref> values.\n    - id: size\n      type: System.Int32\n      description: The length of the parameter.\n    - id: parameterDirection\n      type: System.Data.ParameterDirection\n      description: One of the <xref href=\"System.Data.ParameterDirection\"></xref> values.\n    - id: isNullable\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of the field can be null; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: precision\n      type: System.Byte\n      description: The total number of digits to the left and right of the decimal point to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved.\n    - id: scale\n      type: System.Byte\n      description: The total number of decimal places to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved.\n    - id: srcColumn\n      type: System.String\n      description: The name of the source column.\n    - id: srcVersion\n      type: System.Data.DataRowVersion\n      description: One of the <xref href=\"System.Data.DataRowVersion\"></xref> values.\n    - id: value\n      type: System.Object\n      description: An <xref:System.Object> that is the value of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref>.\n  overload: System.Data.Odbc.OdbcParameter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value supplied in the <code>type</code> parameter is an invalid back-end data type.\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)\n  id: '#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)'\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)\n  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)\n  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref> class that uses the parameter name, data type, length, source column name, parameter direction, numeric precision, and other properties.\n  remarks: ''\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcParameter> and displays the <xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>.  \\n  \\n```vb#  \\nPublic Sub CreateOdbcParameter()  \\n  Dim parameter As New OdbcParameter(\\\"Description\\\", OdbcType.VarChar, 11, ParameterDirection.Output, True, 0, 0, \\\"Description\\\", DataRowVersion.Current, False, \\\"garden hose\\\")  \\n  MessageBox.Show(parameter.ToString())  \\nEnd Sub  \\n```  \\n  \\n```c#  \\npublic void CreateOdbcParameter()   \\n{  \\n  OdbcParameter parameter = new OdbcParameter(\\\"Description\\\",OdbcType.VarChar,  \\n              11,ParameterDirection.Output,true,0,0,\\\"Description\\\",  \\n              DataRowVersion.Current, false, \\\"garden hose\\\");  \\n  MessageBox.Show(parameter.ToString());  \\n}  \\n```\"\n  syntax:\n    content: public OdbcParameter (string parameterName, System.Data.Odbc.OdbcType odbcType, int size, System.Data.ParameterDirection parameterDirection, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);\n    parameters:\n    - id: parameterName\n      type: System.String\n      description: The name of the parameter.\n    - id: odbcType\n      type: System.Data.Odbc.OdbcType\n      description: One of the <xref:System.Data.Odbc.OdbcParameter.OdbcType*> values.\n    - id: size\n      type: System.Int32\n      description: The length of the parameter.\n    - id: parameterDirection\n      type: System.Data.ParameterDirection\n      description: One of the <xref href=\"System.Data.ParameterDirection\"></xref> values.\n    - id: precision\n      type: System.Byte\n      description: The total number of digits to the left and right of the decimal point to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved.\n    - id: scale\n      type: System.Byte\n      description: The total number of decimal places to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved.\n    - id: sourceColumn\n      type: System.String\n      description: The name of the source column.\n    - id: sourceVersion\n      type: System.Data.DataRowVersion\n      description: One of the <xref href=\"System.Data.DataRowVersion\"></xref> values.\n    - id: sourceColumnNullMapping\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the corresponding source column is nullable; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it is not.\n    - id: value\n      type: System.Object\n      description: An <xref:System.Object> that is the value of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref>.\n  overload: System.Data.Odbc.OdbcParameter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value supplied in the <code>type</code> parameter is an invalid back-end data type.\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.DbType\n  id: DbType\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: DbType\n  nameWithType: OdbcParameter.DbType\n  fullName: System.Data.Odbc.OdbcParameter.DbType\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets or sets the <xref href=\"System.Data.DbType\"></xref> of the parameter.\n  remarks: \"The <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> and DbType are linked. Therefore, setting the DbType changes the <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> to a supporting <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>.  \\n  \\n For a list of the supported data types, see the appropriate <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> member. For more information, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  <xref:System.Data.DbType> is not supported by the Microsoft .NET Framework Data Provider for ODBC.\"\n  example:\n  - \"The following example calls a **Stored Procedure** with three parameters using the ODBC managed provider.  \\n  \\n [!code-vb[Classic WebData OdbcParameter.DbType#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcp_1_1.vb)]\\n [!code-cs[Classic WebData OdbcParameter.DbType#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcp_1_1.cs)]\"\n  syntax:\n    content: public override System.Data.DbType DbType { get; set; }\n    return:\n      type: System.Data.DbType\n      description: One of the <xref href=\"System.Data.DbType\"></xref> values. The default is <xref:System.String>.\n  overload: System.Data.Odbc.OdbcParameter.DbType*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The property was not set to a valid <xref href=\"System.Data.DbType\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.Direction\n  id: Direction\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: Direction\n  nameWithType: OdbcParameter.Direction\n  fullName: System.Data.Odbc.OdbcParameter.Direction\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.\n  remarks: \"If the <xref:System.Data.ParameterDirection> is `Output`, and execution of the associated <xref:System.Data.Odbc.OdbcCommand> does not return a value, the <xref:System.Data.Odbc.OdbcParameter> will contain a null value. Null values are handled using the <xref:System.DBNull> class.  \\n  \\n `Output`, `InputOut`, and `ReturnValue` parameters returned by calling <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> cannot be accessed until you call <xref:System.Data.Odbc.OdbcDataReader.Close%2A> or `Dispose` on the <xref:System.Data.Odbc.OdbcDataReader>.\"\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \\n  \\n```vb#  \\nPublic Sub CreateMyProc(connection As OdbcConnection)  \\n  \\n   Dim command As OdbcCommand = connection.CreateCommand()  \\n   command.CommandText = \\\"{ call MyProc(?,?,?) }\\\"  \\n   command.Parameters.Add(\\\"\\\", OdbcType.Int).Value = 1  \\n   command.Parameters.Add(\\\"\\\", OdbcType.Decimal).Value = 2  \\n   command.Parameters.Add(\\\"\\\", OdbcType.Decimal).Value = 3  \\n  \\nEnd Sub  \\n```  \\n  \\n```c#  \\npublic void CreateMyProc(OdbcConnection connection)   \\n{  \\n   OdbcCommand command = connection.CreateCommand();  \\n   command.CommandText = \\\"{ call MyProc(?,?,?) }\\\";  \\n   command.Parameters.Add(\\\"\\\", OdbcType.Int).Value = 1;  \\n   command.Parameters.Add(\\\"\\\", OdbcType.Decimal).Value = 2;  \\n   command.Parameters.Add(\\\"\\\", OdbcType.Decimal).Value = 3;  \\n}  \\n```\"\n  syntax:\n    content: public override System.Data.ParameterDirection Direction { get; set; }\n    return:\n      type: System.Data.ParameterDirection\n      description: One of the <xref href=\"System.Data.ParameterDirection\"></xref> values. The default is <xref uid=\"langword_csharp_Input\" name=\"Input\" href=\"\"></xref>.\n  overload: System.Data.Odbc.OdbcParameter.Direction*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The property was not set to one of the valid <xref href=\"System.Data.ParameterDirection\"></xref> values.\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.IsNullable\n  id: IsNullable\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: IsNullable\n  nameWithType: OdbcParameter.IsNullable\n  fullName: System.Data.Odbc.OdbcParameter.IsNullable\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets or sets a value that indicates whether the parameter accepts null values.\n  remarks: Null values are handled using the <xref:System.DBNull> class.\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \\n  \\n```vb#  \\nPublic Sub CreateOdbcParameter()  \\n   Dim parameter As New OdbcParameter(\\\"Description\\\", OdbcType.VarChar, 88)  \\n   parameter.IsNullable = True  \\n   parameter.Direction = ParameterDirection.Output  \\nEnd Sub  \\n```  \\n  \\n```c#  \\npublic void CreateOdbcParameter()   \\n{  \\n   OdbcParameter parameter = new OdbcParameter(\\\"Description\\\", OdbcType.VarChar, 88);  \\n   parameter.IsNullable = true;  \\n   parameter.Direction = ParameterDirection.Output;  \\n}  \\n```\"\n  syntax:\n    content: public override bool IsNullable { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null values are accepted; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Odbc.OdbcParameter.IsNullable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.OdbcType\n  id: OdbcType\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: OdbcType\n  nameWithType: OdbcParameter.OdbcType\n  fullName: System.Data.Odbc.OdbcParameter.OdbcType\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets or sets the <xref href=\"System.Data.Odbc.OdbcType\"></xref> of the parameter.\n  remarks: \"The OdbcType and <xref:System.Data.Odbc.OdbcParameter.DbType%2A> are linked. Therefore, setting the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> changes the OdbcType to a supporting <xref:System.Data.Odbc.OdbcType>.  \\n  \\n For a list of the supported data types, see the appropriate <xref:System.Data.Odbc.OdbcType> member. For more information, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public System.Data.Odbc.OdbcType OdbcType { get; set; }\n    return:\n      type: System.Data.Odbc.OdbcType\n      description: An <xref href=\"System.Data.Odbc.OdbcType\"></xref> value that is the <xref href=\"System.Data.Odbc.OdbcType\"></xref> of the parameter. The default is <xref uid=\"langword_csharp_Nchar\" name=\"Nchar\" href=\"\"></xref>.\n  overload: System.Data.Odbc.OdbcParameter.OdbcType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.ParameterName\n  id: ParameterName\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: ParameterName\n  nameWithType: OdbcParameter.ParameterName\n  fullName: System.Data.Odbc.OdbcParameter.ParameterName\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets or sets the name of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref>.\n  remarks: Instead of named parameters, the ODBC .NET Provider uses positional parameters that are marked with a question mark (?) in the syntax of the command text. Parameter objects in the <xref:System.Data.Odbc.OdbcParameterCollection> and the actual parameters accepted by the stored procedure or parameterized SQL statement correspond to each other based on the order in which the <xref:System.Data.Odbc.OdbcParameter> objects are inserted into the collection instead of by parameter name. Parameter names can be supplied, but will be ignored during parameter object binding.\n  example:\n  - \"The following example assumes that the data source has a table name **MyTable** and a stored procedure named MyProc that is defined as:  \\n  \\n```  \\nCREATE TABLE MyTable (col1 int, col2 smallmoney, col3 decimal)  \\nCREATE PROC MyProc (@p1 int, @p2 smallmoney, @p3 decimal) AS INSERT INTO MyTable VALUES (@p1, @p2, @p3)  \\n```  \\n  \\n The following example creates parameters and calls the MyProc stored procedure:  \\n  \\n```vb#  \\nPublic Sub CreateMyProc(connection As OdbcConnection)  \\n  \\n   Dim command As OdbcCommand = connection.CreateCommand()  \\n  \\n   command.CommandText = \\\"{ call MyProc(?,?,?) }\\\"  \\n   command.Parameters.Add(\\\"\\\", OdbcType.Int).Value = 1  \\n   command.Parameters.Add(\\\"\\\", OdbcType.Decimal).Value = 2  \\n   command.Parameters.Add(\\\"\\\", OdbcType.Decimal).Value = 3  \\n  \\nEnd Sub  \\n```  \\n  \\n```c#  \\npublic void CreateMyProc(OdbcConnection connection)   \\n{  \\n   OdbcCommand command = myConnection.CreateCommand();  \\n  \\n   command.CommandText = \\\"{ call MyProc(?,?,?) }\\\";  \\n   command.Parameters.Add(\\\"\\\", OdbcType.Int).Value = 1;  \\n   command.Parameters.Add(\\\"\\\", OdbcType.Decimal).Value = 2;  \\n   command.Parameters.Add(\\\"\\\", OdbcType.Decimal).Value = 3;  \\n}  \\n```\"\n  syntax:\n    content: public override string ParameterName { get; set; }\n    return:\n      type: System.String\n      description: The name of the <xref href=\"System.Data.Odbc.OdbcParameter\"></xref>. The default is an empty string (\"\").\n  overload: System.Data.Odbc.OdbcParameter.ParameterName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.Precision\n  id: Precision\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: Precision\n  nameWithType: OdbcParameter.Precision\n  fullName: System.Data.Odbc.OdbcParameter.Precision\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets or sets the number of digits used to represent the <xref:System.Data.Odbc.OdbcParameter.Value*> property.\n  remarks: \"Setting this property to a value other than the value in the database depends on the implementation of the data provider and may return an error code, truncate, or round data.  \\n  \\n The Precision property only affects parameters whose <xref:System.Data.Odbc.OdbcType> is `Decimal` or `Numeric`. For other data types, Precision is ignored.  \\n  \\n> [!NOTE]\\n>  Use of this property to coerce data passed to the database is not supported. To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter's `Value` property.\"\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \\n  \\n```vb#  \\nPublic Sub CreateOdbcParameter()  \\n    Dim parameter As New OdbcParameter(\\\"Price\\\", OdbcType.Decimal)  \\n    parameter.Value = 3.1416  \\n    parameter.Precision = 8  \\n    parameter.Scale = 4  \\nEnd Sub   \\n```  \\n  \\n```c#  \\npublic void CreateOdbcParameter()   \\n {  \\n    OdbcParameter parameter = new OdbcParameter(\\\"Price\\\", OdbcType.Decimal);  \\n    parameter.Value = 3.1416;  \\n    parameter.Precision = 8;  \\n    parameter.Scale = 4;  \\n }  \\n```\"\n  syntax:\n    content: public byte Precision { get; set; }\n    return:\n      type: System.Byte\n      description: The maximum number of digits used to represent the <xref:System.Data.Odbc.OdbcParameter.Value*> property. The default value is 0, which indicates that the data provider sets the precision for <xref:System.Data.Odbc.OdbcParameter.Value*>.\n  overload: System.Data.Odbc.OdbcParameter.Precision*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.ResetDbType\n  id: ResetDbType\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: ResetDbType()\n  nameWithType: OdbcParameter.ResetDbType()\n  fullName: System.Data.Odbc.OdbcParameter.ResetDbType()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Resets the type associated with this <xref href=\"System.Data.Odbc.OdbcParameter\"></xref>.\n  remarks: \"When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value. Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter. Calling this method affects both the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> and <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> properties of the <xref:System.Data.Odbc.OdbcParameter>.  \\n  \\n Calling ResetDbType resets <xref:System.Data.Odbc.OdbcParameter.DbType%2A> to its default value (String).\"\n  syntax:\n    content: public override void ResetDbType ();\n    parameters: []\n  overload: System.Data.Odbc.OdbcParameter.ResetDbType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.ResetOdbcType\n  id: ResetOdbcType\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: ResetOdbcType()\n  nameWithType: OdbcParameter.ResetOdbcType()\n  fullName: System.Data.Odbc.OdbcParameter.ResetOdbcType()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Resets the type associated with this <xref href=\"System.Data.Odbc.OdbcParameter\"></xref>.\n  remarks: When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value. Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter. Calling this method affects both the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> and <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> properties of the <xref:System.Data.Odbc.OdbcParameter>.\n  syntax:\n    content: public void ResetOdbcType ();\n    parameters: []\n  overload: System.Data.Odbc.OdbcParameter.ResetOdbcType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.Scale\n  id: Scale\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: Scale\n  nameWithType: OdbcParameter.Scale\n  fullName: System.Data.Odbc.OdbcParameter.Scale\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets or sets the number of decimal places to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved.\n  remarks: \"The Scale property is used only for decimal and numeric input parameters.  \\n  \\n The effect of setting this property to a value other than the value in the database depends on the implementation of the data provider and may return an error code, or truncate or round data.  \\n  \\n The Scale property only affects parameters whose <xref:System.Data.Odbc.OdbcType> is `Decimal` or `Numeric`. For other data types, Scale is ignored.  \\n  \\n When using SQL Server Native Client 10 (or later) to bind a parameter whose type is Decimal, Numeric, VarNumeric, DBDate, or DBTimeStamp, you must manually specify an appropriate Scale value.  \\n  \\n> [!NOTE]\\n>  Use of this property to coerce data passed to the database is not supported. To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter's `Value` property.  \\n  \\n> [!NOTE]\\n>  .NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the `scale` of <xref:System.Decimal> parameter values. This can cause modified data being inserted at the data source. If you are using .NET Framework version 1.0, validate the s`cale` of d`ecimal` values before setting the parameter value. When you use .NET Framework version 1.1 or later versions, `scale` values that exceed the `decimal` parameter scale might only be truncated in scale, if that is the behavior of the underlying ODBC driver.\"\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \\n  \\n```vb#  \\nPublic Sub CreateOdbcParameter()  \\n    Dim parameter As New OdbcParameter(\\\"Price\\\", OdbcType.Decimal)  \\n    parameter.Value = 3.1416  \\n    parameter.Precision = 8  \\n    parameter.Scale = 4  \\nEnd Sub   \\n```  \\n  \\n```c#  \\npublic void CreateOdbcParameter()   \\n {  \\n    OdbcParameter parameter = new OdbcParameter(\\\"Price\\\", OdbcType.Decimal);  \\n    parameter.Value = 3.1416;  \\n    parameter.Precision = 8;  \\n    parameter.Scale = 4;  \\n }  \\n```\"\n  syntax:\n    content: public byte Scale { get; set; }\n    return:\n      type: System.Byte\n      description: The number of decimal places to which <xref:System.Data.Odbc.OdbcParameter.Value*> is resolved. The default is 0.\n  overload: System.Data.Odbc.OdbcParameter.Scale*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.Size\n  id: Size\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: Size\n  nameWithType: OdbcParameter.Size\n  fullName: System.Data.Odbc.OdbcParameter.Size\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets or sets the maximum size of the data within the column.\n  remarks: \"The Size property is used for binary and string types.  \\n  \\n For nonstring data types and ANSI string data, the Size property refers to the number of bytes. For Unicode string data, Size refers to the number of characters. The count for strings does not include the terminating character.  \\n  \\n For variable-length data types, `Size` describes the maximum amount of data to transmit to the server. For example, for a Unicode string value, `Size` could be used to limit the amount of data sent to the server to the first one hundred characters.  \\n  \\n For bidirectional and output parameters, and return values, you must set the value of `Size`. This is not required for input parameters, and if not explicitly set, the value of is inferred from the actual size of the specified parameter when a parameterized statement is executed.  \\n  \\n The <xref:System.Data.Common.DbParameter.DbType%2A>, <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>, and Size properties of a parameter can be inferred by setting <xref:System.Data.Odbc.OdbcParameter.Value%2A>. Therefore, you are not required to specify them. However, they are not exposed in <xref:System.Data.Odbc.OdbcParameter> property settings. For example, if the size of the parameter has been inferred, `Size` does not contain inferred value after statement execution.  \\n  \\n> [!NOTE]\\n>  For an `OdbcParameter` with a <xref:System.Data.Odbc.OdbcParameter.Direction%2A> of `ParameterDirection.Output`, `ParameterDirection.InputOutput`, or `ParameterDirection.ReturnValue`, an exception is thrown when the command is executed if the size of the value returned by the data source exceeds the specified `Size` of the <xref:System.Data.Odbc.OdbcParameter>.  \\n  \\n For fixed-length data types, the value of `Size` is ignored. It can be retrieved for informational purposes, and returns the maximum amount of bytes the provider uses when transmitting the value of the parameter to the server.\"\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \\n  \\n```vb#  \\nPublic Sub CreateOdbcParameter()  \\n    Dim myValue As String = \\\"12 foot scarf - multiple colors, one previous owner\\\"  \\n    Dim parameter As New OdbcParameter(\\\"Description\\\", OdbcType.VarChar)  \\n    parameter.Direction = ParameterDirection.Output  \\n    parameter.Size = myValue.Length  \\n    parameter.Value = myValue  \\nEnd Sub   \\n```  \\n  \\n```c#  \\npublic void CreateOdbcParameter()   \\n {  \\n    string myValue = \\\"12 foot scarf - multiple colors, one previous owner\\\";  \\n    OdbcParameter parameter = new OdbcParameter(\\\"Description\\\", OdbcType.VarChar);  \\n    parameter.Direction = ParameterDirection.Output;  \\n    parameter.Size = myValue.Length;  \\n    parameter.Value = myValue;  \\n }  \\n```\"\n  syntax:\n    content: public override int Size { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum size of the data within the column. The default value is inferred from the parameter value.\n  overload: System.Data.Odbc.OdbcParameter.Size*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.SourceColumn\n  id: SourceColumn\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: SourceColumn\n  nameWithType: OdbcParameter.SourceColumn\n  fullName: System.Data.Odbc.OdbcParameter.SourceColumn\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets or sets the name of the source column mapped to the <xref href=\"System.Data.DataSet\"></xref> and used for loading or returning the <xref:System.Data.Odbc.OdbcParameter.Value*>.\n  remarks: \"When SourceColumn is set to anything other than an empty string, the value of the parameter is retrieved from the column with the `SourceColumn` name. If <xref:System.Data.Odbc.OdbcParameter.Direction%2A> is set to `Input`, the value is taken from the <xref:System.Data.DataSet>. If `Direction` is set to `Output`, the value is taken from the data source. A `Direction` of `InputOutput` is a combination of both.  \\n  \\n For more information about how to use the SourceColumn property, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md) and [Updating Data Sources with DataAdapters](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \\n  \\n```vb#  \\nPublic Sub CreateOdbcParameter()  \\n    Dim parameter As New OdbcParameter(\\\"Description\\\", OdbcType.VarChar, 88)  \\n    parameter.SourceColumn = \\\"Description\\\"  \\nEnd Sub   \\n```  \\n  \\n```c#  \\npublic void CreateOdbcParameter()   \\n {  \\n    OdbcParameter parameter = new OdbcParameter(\\\"Description\\\", OdbcType.VarChar, 88);  \\n    parameter.SourceColumn = \\\"Description\\\";  \\n }  \\n```\"\n  syntax:\n    content: public override string SourceColumn { get; set; }\n    return:\n      type: System.String\n      description: The name of the source column that will be used to set the value of this parameter. The default is an empty string (\"\").\n  overload: System.Data.Odbc.OdbcParameter.SourceColumn*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping\n  id: SourceColumnNullMapping\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: SourceColumnNullMapping\n  nameWithType: OdbcParameter.SourceColumnNullMapping\n  fullName: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Sets or gets a value which indicates whether the source column is nullable. This lets <xref href=\"System.Data.Common.DbCommandBuilder\"></xref> correctly generate Update statements for nullable columns.\n  remarks: \"SourceColumnNullMapping is used by the <xref:System.Data.Common.DbCommandBuilder> to correctly generate update commands when dealing with nullable columns. Generally, use of SourceColumnNullMapping is limited to developers inheriting from <xref:System.Data.Common.DbCommandBuilder>.  \\n  \\n <xref:System.Data.Common.DbCommandBuilder> uses this property to determine whether the source column is nullable, and sets this property to `true` if it is nullable, and `false` if it is not. When <xref:System.Data.Common.DbCommandBuilder> is generating its Update statement, it examines the SourceColumnNullMapping for each parameter. If the property is `true`, <xref:System.Data.Common.DbCommandBuilder> generates a WHERE clauses like the following example. In this query expression, \\\"FieldName\\\" represents the name of the field:  \\n  \\n```  \\n((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   \\n  (FieldName = @Original_FieldName))  \\n```  \\n  \\n If SourceColumnNullMapping for the field is false, <xref:System.Data.Common.DbCommandBuilder> generates the following WHERE clause:  \\n  \\n```  \\nFieldName = @OriginalFieldName  \\n```  \\n  \\n In addition, @IsNull_FieldName contains 1 if the source field contains null, and 0 if it does not. This mechanism allows for a performance optimization in SQL Server, and provides for common code that works across multiple providers.\"\n  syntax:\n    content: public override bool SourceColumnNullMapping { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the source column is nullable; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it is not.\n  overload: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.SourceVersion\n  id: SourceVersion\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: SourceVersion\n  nameWithType: OdbcParameter.SourceVersion\n  fullName: System.Data.Odbc.OdbcParameter.SourceVersion\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets or sets the <xref href=\"System.Data.DataRowVersion\"></xref> to use when you load <xref:System.Data.Odbc.OdbcParameter.Value*>.\n  remarks: \"The `SourceVersion` is used by <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> during an <xref:System.Data.DbDataAdapter.Common.Update%2A> operation to determine whether the parameter value is set to Current or Original. This allows primary keys to be updated.  \\n  \\n This property is set to the version of the <xref:System.Data.DataRow> used by either the `Item` property (`DataRow` indexer), or the <xref:System.Data.DataRow.GetChildRows%2A> method.\"\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \\n  \\n```vb#  \\nPublic Sub CreateOdbcParameter()  \\n    Dim parameter As New OdbcParameter(\\\"Description\\\", OdbcType.VarChar, 88)  \\n    parameter.SourceColumn = \\\"Description\\\"  \\n    parameter.SourceVersion = DataRowVersion.Current  \\nEnd Sub   \\n```  \\n  \\n```c#  \\npublic void CreateOdbcParameter()   \\n {  \\n    OdbcParameter parameter = new OdbcParameter(\\\"Description\\\", OdbcType.VarChar, 88);  \\n    parameter.SourceColumn = \\\"Description\\\";  \\n    parameter.SourceVersion = DataRowVersion.Current;  \\n }  \\n```\"\n  syntax:\n    content: public override System.Data.DataRowVersion SourceVersion { get; set; }\n    return:\n      type: System.Data.DataRowVersion\n      description: One of the <xref href=\"System.Data.DataRowVersion\"></xref> values. The default is Current.\n  overload: System.Data.Odbc.OdbcParameter.SourceVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.System#ICloneable#Clone\n  id: System#ICloneable#Clone\n  isEii: true\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: System.ICloneable.Clone()\n  nameWithType: OdbcParameter.System.ICloneable.Clone()\n  fullName: System.Data.Odbc.OdbcParameter.System.ICloneable.Clone()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: For a description of this member, see &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Odbc.OdbcParameter> instance is cast to an <xref:System.ICloneable> interface.\n  syntax:\n    content: object ICloneable.Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A new <xref:System.Object> that is a copy of this instance.\n  overload: System.Data.Odbc.OdbcParameter.System#ICloneable#Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.ToString\n  id: ToString\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: OdbcParameter.ToString()\n  fullName: System.Data.Odbc.OdbcParameter.ToString()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets a string that contains the <xref:System.Data.Odbc.OdbcParameter.ParameterName*>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that contains the <xref:System.Data.Odbc.OdbcParameter.ParameterName*>.\n  overload: System.Data.Odbc.OdbcParameter.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcParameter.Value\n  id: Value\n  parent: System.Data.Odbc.OdbcParameter\n  langs:\n  - csharp\n  name: Value\n  nameWithType: OdbcParameter.Value\n  fullName: System.Data.Odbc.OdbcParameter.Value\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets or sets the value of the parameter.\n  remarks: \"For input parameters, the value is bound to the <xref:System.Data.Odbc.OdbcCommand> that is sent to the server. For output and return-value parameters, the value is set on completion of the <xref:System.Data.Odbc.OdbcCommand> and after the <xref:System.Data.Odbc.OdbcDataReader> is closed.  \\n  \\n When you send a null parameter value to the server, the user must specify <xref:System.DBNull>, not null. A null value in the system is an empty object that has no value. <xref:System.DBNull> is used to represent null values. If the parameter is used to call a stored procedure with parameters that have default values, setting Value to null causes the default value to be used.  \\n  \\n If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server. The provider tries to convert any type of value if it supports the <xref:System.IConvertible> interface. Conversion errors may result if the specified type is not compatible with the value.  \\n  \\n Both the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> and <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> properties can be inferred by setting Value. If applicable, the size, precision, and scale is also inferred from Value when the parameterized statement is executed. However, inferred values are not exposed to the user.  \\n  \\n The Value property is overwritten by the `Update` method.\"\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \\n  \\n```vb#  \\nPublic Sub CreateOdbcParameter()  \\n    Dim parameter As New OdbcParameter(\\\"Description\\\", OdbcType.VarChar, 88)  \\n    parameter.Value = \\\"garden hose\\\"  \\nEnd Sub   \\n```  \\n  \\n```c#  \\npublic void CreateOdbcParameter()   \\n {  \\n    OdbcParameter parameter = new OdbcParameter(\\\"Description\\\", OdbcType.VarChar, 88);  \\n    parameter.Value = \\\"garden hose\\\";  \\n }  \\n```\"\n  syntax:\n    content: public override object Value { get; set; }\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that is the value of the parameter. The default value is null.\n  overload: System.Data.Odbc.OdbcParameter.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Common.DbParameter\n  isExternal: false\n  name: System.Data.Common.DbParameter\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Data.Odbc.OdbcParameter.#ctor\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: OdbcParameter()\n  nameWithType: OdbcParameter.OdbcParameter()\n  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter()\n- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: OdbcParameter(String,OdbcType)\n  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType)\n  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Odbc.OdbcType\n  parent: System.Data.Odbc\n  isExternal: false\n  name: OdbcType\n  nameWithType: OdbcType\n  fullName: System.Data.Odbc.OdbcType\n- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: OdbcParameter(String,Object)\n  nameWithType: OdbcParameter.OdbcParameter(String,Object)\n  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: OdbcParameter(String,OdbcType,Int32)\n  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32)\n  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: OdbcParameter(String,OdbcType,Int32,String)\n  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,String)\n  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,String)\n- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)\n  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)\n  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)\n- uid: System.Data.ParameterDirection\n  parent: System.Data\n  isExternal: false\n  name: ParameterDirection\n  nameWithType: ParameterDirection\n  fullName: System.Data.ParameterDirection\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Data.DataRowVersion\n  parent: System.Data\n  isExternal: false\n  name: DataRowVersion\n  nameWithType: DataRowVersion\n  fullName: System.Data.DataRowVersion\n- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)\n  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)\n  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)\n- uid: System.Data.Odbc.OdbcParameter.DbType\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: DbType\n  nameWithType: OdbcParameter.DbType\n  fullName: System.Data.Odbc.OdbcParameter.DbType\n- uid: System.Data.DbType\n  parent: System.Data\n  isExternal: false\n  name: DbType\n  nameWithType: DbType\n  fullName: System.Data.DbType\n- uid: System.Data.Odbc.OdbcParameter.Direction\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: Direction\n  nameWithType: OdbcParameter.Direction\n  fullName: System.Data.Odbc.OdbcParameter.Direction\n- uid: System.Data.Odbc.OdbcParameter.IsNullable\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: IsNullable\n  nameWithType: OdbcParameter.IsNullable\n  fullName: System.Data.Odbc.OdbcParameter.IsNullable\n- uid: System.Data.Odbc.OdbcParameter.OdbcType\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: OdbcType\n  nameWithType: OdbcParameter.OdbcType\n  fullName: System.Data.Odbc.OdbcParameter.OdbcType\n- uid: System.Data.Odbc.OdbcParameter.ParameterName\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: ParameterName\n  nameWithType: OdbcParameter.ParameterName\n  fullName: System.Data.Odbc.OdbcParameter.ParameterName\n- uid: System.Data.Odbc.OdbcParameter.Precision\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: Precision\n  nameWithType: OdbcParameter.Precision\n  fullName: System.Data.Odbc.OdbcParameter.Precision\n- uid: System.Data.Odbc.OdbcParameter.ResetDbType\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: ResetDbType()\n  nameWithType: OdbcParameter.ResetDbType()\n  fullName: System.Data.Odbc.OdbcParameter.ResetDbType()\n- uid: System.Data.Odbc.OdbcParameter.ResetOdbcType\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: ResetOdbcType()\n  nameWithType: OdbcParameter.ResetOdbcType()\n  fullName: System.Data.Odbc.OdbcParameter.ResetOdbcType()\n- uid: System.Data.Odbc.OdbcParameter.Scale\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: Scale\n  nameWithType: OdbcParameter.Scale\n  fullName: System.Data.Odbc.OdbcParameter.Scale\n- uid: System.Data.Odbc.OdbcParameter.Size\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: Size\n  nameWithType: OdbcParameter.Size\n  fullName: System.Data.Odbc.OdbcParameter.Size\n- uid: System.Data.Odbc.OdbcParameter.SourceColumn\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: SourceColumn\n  nameWithType: OdbcParameter.SourceColumn\n  fullName: System.Data.Odbc.OdbcParameter.SourceColumn\n- uid: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: SourceColumnNullMapping\n  nameWithType: OdbcParameter.SourceColumnNullMapping\n  fullName: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping\n- uid: System.Data.Odbc.OdbcParameter.SourceVersion\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: SourceVersion\n  nameWithType: OdbcParameter.SourceVersion\n  fullName: System.Data.Odbc.OdbcParameter.SourceVersion\n- uid: System.Data.Odbc.OdbcParameter.System#ICloneable#Clone\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: System.ICloneable.Clone()\n  nameWithType: OdbcParameter.System.ICloneable.Clone()\n  fullName: System.Data.Odbc.OdbcParameter.System.ICloneable.Clone()\n- uid: System.Data.Odbc.OdbcParameter.ToString\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: ToString()\n  nameWithType: OdbcParameter.ToString()\n  fullName: System.Data.Odbc.OdbcParameter.ToString()\n- uid: System.Data.Odbc.OdbcParameter.Value\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: Value\n  nameWithType: OdbcParameter.Value\n  fullName: System.Data.Odbc.OdbcParameter.Value\n- uid: System.Data.Odbc.OdbcParameter.#ctor*\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: OdbcParameter\n  nameWithType: OdbcParameter.OdbcParameter\n- uid: System.Data.Odbc.OdbcParameter.DbType*\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: DbType\n  nameWithType: OdbcParameter.DbType\n- uid: System.Data.Odbc.OdbcParameter.Direction*\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: Direction\n  nameWithType: OdbcParameter.Direction\n- uid: System.Data.Odbc.OdbcParameter.IsNullable*\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: IsNullable\n  nameWithType: OdbcParameter.IsNullable\n- uid: System.Data.Odbc.OdbcParameter.OdbcType*\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: OdbcType\n  nameWithType: OdbcParameter.OdbcType\n- uid: System.Data.Odbc.OdbcParameter.ParameterName*\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: ParameterName\n  nameWithType: OdbcParameter.ParameterName\n- uid: System.Data.Odbc.OdbcParameter.Precision*\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: Precision\n  nameWithType: OdbcParameter.Precision\n- uid: System.Data.Odbc.OdbcParameter.ResetDbType*\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: ResetDbType\n  nameWithType: OdbcParameter.ResetDbType\n- uid: System.Data.Odbc.OdbcParameter.ResetOdbcType*\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: ResetOdbcType\n  nameWithType: OdbcParameter.ResetOdbcType\n- uid: System.Data.Odbc.OdbcParameter.Scale*\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: Scale\n  nameWithType: OdbcParameter.Scale\n- uid: System.Data.Odbc.OdbcParameter.Size*\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: Size\n  nameWithType: OdbcParameter.Size\n- uid: System.Data.Odbc.OdbcParameter.SourceColumn*\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: SourceColumn\n  nameWithType: OdbcParameter.SourceColumn\n- uid: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping*\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: SourceColumnNullMapping\n  nameWithType: OdbcParameter.SourceColumnNullMapping\n- uid: System.Data.Odbc.OdbcParameter.SourceVersion*\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: SourceVersion\n  nameWithType: OdbcParameter.SourceVersion\n- uid: System.Data.Odbc.OdbcParameter.System#ICloneable#Clone*\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: System.ICloneable.Clone\n  nameWithType: OdbcParameter.System.ICloneable.Clone\n- uid: System.Data.Odbc.OdbcParameter.ToString*\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: ToString\n  nameWithType: OdbcParameter.ToString\n- uid: System.Data.Odbc.OdbcParameter.Value*\n  parent: System.Data.Odbc.OdbcParameter\n  isExternal: false\n  name: Value\n  nameWithType: OdbcParameter.Value\n"}