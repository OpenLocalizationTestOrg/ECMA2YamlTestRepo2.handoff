{"nodes":[{"pos":[491,636],"content":"Wraps an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> whose execution is initialized by an event. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Wraps an <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose execution is initialized by an event.","pos":[0,113],"source":"Wraps an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> whose execution is initialized by an event."},{"content":"This class cannot be inherited.","pos":[114,145]}]},{"pos":[649,3673],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       It is a <xref:System.Workflow.ComponentModel.CompositeActivity> that is used to handle an event; typically it can be raised from the host or by the runtime in response to a delay timer expiring. EventDrivenActivity is inherited from <xref:System.Workflow.Activities.SequenceActivity>; therefore, it is a sequence that has the additional restriction that the first activity should be an <xref:System.Workflow.Activities.IEventActivity>.       The EventDrivenActivity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the EventDrivenActivity can contain other activities. The EventDrivenActivity is similar to the <xref:System.Workflow.Activities.SequenceActivity> activity, with some additional characteristics.       An EventDrivenActivity must have a parent that is either a <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.StateActivity>, or <xref:System.Workflow.Activities.StateMachineWorkflowActivity>.       The first child of an EventDrivenActivity activity must be an activity that inherits from <xref:System.Workflow.Activities.IEventActivity>. All subsequent children can be activities of any type. The <xref:System.Workflow.Activities.IEventActivity> blocks and waits for the pending occurrence of some events, such as starting a timer or the arrival of a message. When the event occurs, the <xref:System.Workflow.Activities.IEventActivity> finishes running and then all subsequent activities are executed.       When the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> contains an EventDrivenActivity, the EventDrivenActivity has some restrictions:      -   The EventDrivenActivity may contain one, and only one, activity of type <xref:System.Workflow.Activities.IEventActivity>.      -   The <xref:System.Workflow.Activities.HandleExternalEventActivity> must be the first child activity. An <xref:System.Workflow.Activities.HandleExternalEventActivity> cannot be in the event handler for a child activity and cannot be a child to the EventDrivenActivity if the <xref:System.Workflow.Activities.HandleExternalEventActivity> is not the first child.      -   As long as the first activity is the <xref:System.Workflow.Activities.HandleExternalEventActivity>, the event handler can contain any activities. If an activity other than <xref:System.Workflow.Activities.HandleExternalEventActivity> is contained in EventDrivenActivity, that activity cannot have an event handler.       For example, an activity that supports event handling can be used inside the EventDrivenActivity but the activity cannot have event handlers attached to itself.       Another example is that the EventDrivenActivity can contain a <xref:System.Workflow.Activities.ConditionedActivityGroup>, but the <xref:System.Workflow.Activities.ConditionedActivityGroup> itself cannot contain any <xref:System.Workflow.Activities.HandleExternalEventActivity> classes.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       It is a &lt;xref:System.Workflow.ComponentModel.CompositeActivity&gt; that is used to handle an event; typically it can be raised from the host or by the runtime in response to a delay timer expiring.","pos":[0,282],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       It is a <xref:System.Workflow.ComponentModel.CompositeActivity> that is used to handle an event; typically it can be raised from the host or by the runtime in response to a delay timer expiring."},{"content":"EventDrivenActivity is inherited from &lt;xref:System.Workflow.Activities.SequenceActivity&gt;; therefore, it is a sequence that has the additional restriction that the first activity should be an &lt;xref:System.Workflow.Activities.IEventActivity&gt;.","pos":[283,523],"source":" EventDrivenActivity is inherited from <xref:System.Workflow.Activities.SequenceActivity>; therefore, it is a sequence that has the additional restriction that the first activity should be an <xref:System.Workflow.Activities.IEventActivity>."},{"content":"The EventDrivenActivity is a &lt;xref:System.Workflow.ComponentModel.CompositeActivity&gt;, which means the EventDrivenActivity can contain other activities.","pos":[530,681],"source":"       The EventDrivenActivity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the EventDrivenActivity can contain other activities."},{"content":"The EventDrivenActivity is similar to the &lt;xref:System.Workflow.Activities.SequenceActivity&gt; activity, with some additional characteristics.","pos":[682,822],"source":" The EventDrivenActivity is similar to the <xref:System.Workflow.Activities.SequenceActivity> activity, with some additional characteristics."},{"content":"An EventDrivenActivity must have a parent that is either a &lt;xref:System.Workflow.Activities.ListenActivity&gt;, &lt;xref:System.Workflow.Activities.StateActivity&gt;, or &lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;.","pos":[829,1053],"source":"       An EventDrivenActivity must have a parent that is either a <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.StateActivity>, or <xref:System.Workflow.Activities.StateMachineWorkflowActivity>."},{"content":"The first child of an EventDrivenActivity activity must be an activity that inherits from &lt;xref:System.Workflow.Activities.IEventActivity&gt;.","pos":[1060,1199],"source":"       The first child of an EventDrivenActivity activity must be an activity that inherits from <xref:System.Workflow.Activities.IEventActivity>."},{"content":"All subsequent children can be activities of any type.","pos":[1200,1254]},{"content":"The &lt;xref:System.Workflow.Activities.IEventActivity&gt; blocks and waits for the pending occurrence of some events, such as starting a timer or the arrival of a message.","pos":[1255,1421],"source":" The <xref:System.Workflow.Activities.IEventActivity> blocks and waits for the pending occurrence of some events, such as starting a timer or the arrival of a message."},{"content":"When the event occurs, the &lt;xref:System.Workflow.Activities.IEventActivity&gt; finishes running and then all subsequent activities are executed.","pos":[1422,1563],"source":" When the event occurs, the <xref:System.Workflow.Activities.IEventActivity> finishes running and then all subsequent activities are executed."},{"content":"When the &lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt; contains an EventDrivenActivity, the EventDrivenActivity has some restrictions:      -   The EventDrivenActivity may contain one, and only one, activity of type &lt;xref:System.Workflow.Activities.IEventActivity&gt;.","pos":[1570,1852],"source":"       When the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> contains an EventDrivenActivity, the EventDrivenActivity has some restrictions:      -   The EventDrivenActivity may contain one, and only one, activity of type <xref:System.Workflow.Activities.IEventActivity>."},{"content":"-   The &lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt; must be the first child activity.","pos":[1858,1961],"source":"      -   The <xref:System.Workflow.Activities.HandleExternalEventActivity> must be the first child activity."},{"content":"An &lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt; cannot be in the event handler for a child activity and cannot be a child to the EventDrivenActivity if the &lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt; is not the first child.","pos":[1962,2220],"source":" An <xref:System.Workflow.Activities.HandleExternalEventActivity> cannot be in the event handler for a child activity and cannot be a child to the EventDrivenActivity if the <xref:System.Workflow.Activities.HandleExternalEventActivity> is not the first child."},{"content":"-   As long as the first activity is the &lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;, the event handler can contain any activities.","pos":[2226,2375],"source":"      -   As long as the first activity is the <xref:System.Workflow.Activities.HandleExternalEventActivity>, the event handler can contain any activities."},{"content":"If an activity other than &lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt; is contained in EventDrivenActivity, that activity cannot have an event handler.","pos":[2376,2544],"source":" If an activity other than <xref:System.Workflow.Activities.HandleExternalEventActivity> is contained in EventDrivenActivity, that activity cannot have an event handler."},{"content":"For example, an activity that supports event handling can be used inside the EventDrivenActivity but the activity cannot have event handlers attached to itself.","pos":[2551,2711]},{"content":"Another example is that the EventDrivenActivity can contain a &lt;xref:System.Workflow.Activities.ConditionedActivityGroup&gt;, but the &lt;xref:System.Workflow.Activities.ConditionedActivityGroup&gt; itself cannot contain any &lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt; classes.","pos":[2718,3003],"source":"       Another example is that the EventDrivenActivity can contain a <xref:System.Workflow.Activities.ConditionedActivityGroup>, but the <xref:System.Workflow.Activities.ConditionedActivityGroup> itself cannot contain any <xref:System.Workflow.Activities.HandleExternalEventActivity> classes."}]},{"pos":[13553,13661],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.EventDrivenActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref> class."},{"pos":[14932,15071],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.EventDrivenActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the name of the activity.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref> class using the name of the activity."},{"pos":[15213,15254],"content":"The user-identified name of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user-identified name of the activity.","pos":[0,41]}]},{"pos":[15784,15831],"content":"Gets the event activity that drives the change.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the event activity that drives the change.","pos":[0,47]}]},{"pos":[16012,16054],"content":"The event activity that drives the change.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event activity that drives the change.","pos":[0,42]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.EventDrivenActivity\n  id: EventDrivenActivity\n  children:\n  - System.Workflow.Activities.EventDrivenActivity.#ctor\n  - System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)\n  - System.Workflow.Activities.EventDrivenActivity.EventActivity\n  langs:\n  - csharp\n  name: EventDrivenActivity\n  nameWithType: EventDrivenActivity\n  fullName: System.Workflow.Activities.EventDrivenActivity\n  type: Class\n  summary: Wraps an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> whose execution is initialized by an event. This class cannot be inherited.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n It is a <xref:System.Workflow.ComponentModel.CompositeActivity> that is used to handle an event; typically it can be raised from the host or by the runtime in response to a delay timer expiring. EventDrivenActivity is inherited from <xref:System.Workflow.Activities.SequenceActivity>; therefore, it is a sequence that has the additional restriction that the first activity should be an <xref:System.Workflow.Activities.IEventActivity>.  \\n  \\n The EventDrivenActivity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the EventDrivenActivity can contain other activities. The EventDrivenActivity is similar to the <xref:System.Workflow.Activities.SequenceActivity> activity, with some additional characteristics.  \\n  \\n An EventDrivenActivity must have a parent that is either a <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.StateActivity>, or <xref:System.Workflow.Activities.StateMachineWorkflowActivity>.  \\n  \\n The first child of an EventDrivenActivity activity must be an activity that inherits from <xref:System.Workflow.Activities.IEventActivity>. All subsequent children can be activities of any type. The <xref:System.Workflow.Activities.IEventActivity> blocks and waits for the pending occurrence of some events, such as starting a timer or the arrival of a message. When the event occurs, the <xref:System.Workflow.Activities.IEventActivity> finishes running and then all subsequent activities are executed.  \\n  \\n When the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> contains an EventDrivenActivity, the EventDrivenActivity has some restrictions:  \\n  \\n-   The EventDrivenActivity may contain one, and only one, activity of type <xref:System.Workflow.Activities.IEventActivity>.  \\n  \\n-   The <xref:System.Workflow.Activities.HandleExternalEventActivity> must be the first child activity. An <xref:System.Workflow.Activities.HandleExternalEventActivity> cannot be in the event handler for a child activity and cannot be a child to the EventDrivenActivity if the <xref:System.Workflow.Activities.HandleExternalEventActivity> is not the first child.  \\n  \\n-   As long as the first activity is the <xref:System.Workflow.Activities.HandleExternalEventActivity>, the event handler can contain any activities. If an activity other than <xref:System.Workflow.Activities.HandleExternalEventActivity> is contained in EventDrivenActivity, that activity cannot have an event handler.  \\n  \\n For example, an activity that supports event handling can be used inside the EventDrivenActivity but the activity cannot have event handlers attached to itself.  \\n  \\n Another example is that the EventDrivenActivity can contain a <xref:System.Workflow.Activities.ConditionedActivityGroup>, but the <xref:System.Workflow.Activities.ConditionedActivityGroup> itself cannot contain any <xref:System.Workflow.Activities.HandleExternalEventActivity> classes.\"\n  example:\n  - \"The following code example shows how to use the EventDrivenActivity to perform state machine transitions. This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \\n  \\n [!code-cs[wf_samples#185](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#185)]\\n [!code-vb[wf_samples#185](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#185)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.EventDrivenDesigner), typeof(System.ComponentModel.Design.IDesigner))]\n\n      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]\n\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.EventDrivenActivity), \"Resources.EventDriven.png\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.EventDrivenValidator))]\n\n      public sealed class EventDrivenActivity : System.Workflow.Activities.SequenceActivity\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  - System.Workflow.ComponentModel.CompositeActivity\n  - System.Workflow.Activities.SequenceActivity\n  implements: []\n  inheritedMembers:\n  - System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.CompositeActivity.Activities\n  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  platform:\n  - net462\n- uid: System.Workflow.Activities.EventDrivenActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.EventDrivenActivity\n  langs:\n  - csharp\n  name: EventDrivenActivity()\n  nameWithType: EventDrivenActivity.EventDrivenActivity()\n  fullName: System.Workflow.Activities.EventDrivenActivity.EventDrivenActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create a new instance of the <xref:System.Workflow.Activities.EventDrivenActivity> class.  This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \\n  \\n [!code-cs[wf_samples#187](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#187)]\\n [!code-vb[wf_samples#187](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#187)]\"\n  syntax:\n    content: public EventDrivenActivity ();\n    parameters: []\n  overload: System.Workflow.Activities.EventDrivenActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.EventDrivenActivity\n  langs:\n  - csharp\n  name: EventDrivenActivity(String)\n  nameWithType: EventDrivenActivity.EventDrivenActivity(String)\n  fullName: System.Workflow.Activities.EventDrivenActivity.EventDrivenActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref> class using the name of the activity.\n  syntax:\n    content: public EventDrivenActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-identified name of the activity.\n  overload: System.Workflow.Activities.EventDrivenActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.EventDrivenActivity.EventActivity\n  id: EventActivity\n  parent: System.Workflow.Activities.EventDrivenActivity\n  langs:\n  - csharp\n  name: EventActivity\n  nameWithType: EventDrivenActivity.EventActivity\n  fullName: System.Workflow.Activities.EventDrivenActivity.EventActivity\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the event activity that drives the change.\n  syntax:\n    content: public System.Workflow.Activities.IEventActivity EventActivity { get; }\n    return:\n      type: System.Workflow.Activities.IEventActivity\n      description: The event activity that drives the change.\n  overload: System.Workflow.Activities.EventDrivenActivity.EventActivity*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.Activities.SequenceActivity\n  isExternal: false\n  name: System.Workflow.Activities.SequenceActivity\n- uid: System.Workflow.Activities.EventDrivenActivity.#ctor\n  parent: System.Workflow.Activities.EventDrivenActivity\n  isExternal: false\n  name: EventDrivenActivity()\n  nameWithType: EventDrivenActivity.EventDrivenActivity()\n  fullName: System.Workflow.Activities.EventDrivenActivity.EventDrivenActivity()\n- uid: System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)\n  parent: System.Workflow.Activities.EventDrivenActivity\n  isExternal: false\n  name: EventDrivenActivity(String)\n  nameWithType: EventDrivenActivity.EventDrivenActivity(String)\n  fullName: System.Workflow.Activities.EventDrivenActivity.EventDrivenActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.EventDrivenActivity.EventActivity\n  parent: System.Workflow.Activities.EventDrivenActivity\n  isExternal: false\n  name: EventActivity\n  nameWithType: EventDrivenActivity.EventActivity\n  fullName: System.Workflow.Activities.EventDrivenActivity.EventActivity\n- uid: System.Workflow.Activities.IEventActivity\n  parent: System.Workflow.Activities\n  isExternal: false\n  name: IEventActivity\n  nameWithType: IEventActivity\n  fullName: System.Workflow.Activities.IEventActivity\n- uid: System.Workflow.Activities.EventDrivenActivity.#ctor*\n  parent: System.Workflow.Activities.EventDrivenActivity\n  isExternal: false\n  name: EventDrivenActivity\n  nameWithType: EventDrivenActivity.EventDrivenActivity\n- uid: System.Workflow.Activities.EventDrivenActivity.EventActivity*\n  parent: System.Workflow.Activities.EventDrivenActivity\n  isExternal: false\n  name: EventActivity\n  nameWithType: EventDrivenActivity.EventActivity\n"}