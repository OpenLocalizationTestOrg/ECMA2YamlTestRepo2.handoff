{"nodes":[{"pos":[961,1022],"content":"Represents configuration information for a rule-based export.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents configuration information for a rule-based export.","pos":[0,61]}]},{"pos":[1670,1792],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Registration.ExportBuilder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Registration.ExportBuilder\"></xref> class."},{"pos":[2653,2715],"content":"Specifies a metadata key/value pair to be added to the export.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a metadata key/value pair to be added to the export.","pos":[0,62]}]},{"pos":[2938,2955],"content":"The metadata key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata key.","pos":[0,17]}]},{"pos":[3045,3105],"content":"A function that takes a type and returns the metadata value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A function that takes a type and returns the metadata value.","pos":[0,60]}]},{"pos":[3210,3248],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[3965,4027],"content":"Specifies a metadata key/value pair to be added to the export.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a metadata key/value pair to be added to the export.","pos":[0,62]}]},{"pos":[4236,4253],"content":"The metadata key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata key.","pos":[0,17]}]},{"pos":[4315,4334],"content":"The metadata value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata value.","pos":[0,19]}]},{"pos":[4439,4477],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[5160,5226],"content":"Specifies that the export should be under the given contract name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the export should be under the given contract name.","pos":[0,66]}]},{"pos":[5440,5458],"content":"The contract name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract name.","pos":[0,18]}]},{"pos":[5563,5601],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[5807,5897],"content":"<ph id=\"ph1\">&lt;code&gt;contractName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>contractName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5992,6037],"content":"<ph id=\"ph1\">&lt;code&gt;contractName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>contractName</code> is an empty string."},{"pos":[6607,6668],"content":"Specifies that the export should use the given contract type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the export should use the given contract type.","pos":[0,61]}]},{"pos":[6862,6887],"content":"The contract type to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract type to use.","pos":[0,25]}]},{"pos":[6992,7030],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[7236,7318],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8081,8093],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8709,8756],"content":"Specifies that this export should be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that this export should be inherited.","pos":[0,47]}]},{"pos":[8985,9023],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder\n  id: ExportBuilder\n  children:\n  - System.ComponentModel.Composition.Registration.ExportBuilder.#ctor\n  - System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})\n  - System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(System.String,System.Object)\n  - System.ComponentModel.Composition.Registration.ExportBuilder.AsContractName(System.String)\n  - System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType(System.Type)\n  - System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType``1\n  - System.ComponentModel.Composition.Registration.ExportBuilder.Inherited\n  langs:\n  - csharp\n  name: ExportBuilder\n  nameWithType: ExportBuilder\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder\n  type: Class\n  summary: Represents configuration information for a rule-based export.\n  syntax:\n    content: public sealed class ExportBuilder\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  langs:\n  - csharp\n  name: ExportBuilder()\n  nameWithType: ExportBuilder.ExportBuilder()\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder.ExportBuilder()\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Registration.ExportBuilder\"></xref> class.\n  syntax:\n    content: public ExportBuilder ();\n    parameters: []\n  overload: System.ComponentModel.Composition.Registration.ExportBuilder.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})\n  id: AddMetadata(System.String,System.Func{System.Type,System.Object})\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  langs:\n  - csharp\n  name: AddMetadata(String,Func<Type,Object>)\n  nameWithType: ExportBuilder.AddMetadata(String,Func<Type,Object>)\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(String,Func<Type,Object>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a metadata key/value pair to be added to the export.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.ExportBuilder AddMetadata (string name, Func<Type,object> itemFunc);\n    parameters:\n    - id: name\n      type: System.String\n      description: The metadata key.\n    - id: itemFunc\n      type: System.Func{System.Type,System.Object}\n      description: A function that takes a type and returns the metadata value.\n    return:\n      type: System.ComponentModel.Composition.Registration.ExportBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(System.String,System.Object)\n  id: AddMetadata(System.String,System.Object)\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  langs:\n  - csharp\n  name: AddMetadata(String,Object)\n  nameWithType: ExportBuilder.AddMetadata(String,Object)\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(String,Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a metadata key/value pair to be added to the export.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.ExportBuilder AddMetadata (string name, object value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The metadata key.\n    - id: value\n      type: System.Object\n      description: The metadata value.\n    return:\n      type: System.ComponentModel.Composition.Registration.ExportBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractName(System.String)\n  id: AsContractName(System.String)\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  langs:\n  - csharp\n  name: AsContractName(String)\n  nameWithType: ExportBuilder.AsContractName(String)\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractName(String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that the export should be under the given contract name.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.ExportBuilder AsContractName (string contractName);\n    parameters:\n    - id: contractName\n      type: System.String\n      description: The contract name.\n    return:\n      type: System.ComponentModel.Composition.Registration.ExportBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>contractName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contractName</code> is an empty string.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType(System.Type)\n  id: AsContractType(System.Type)\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  langs:\n  - csharp\n  name: AsContractType(Type)\n  nameWithType: ExportBuilder.AsContractType(Type)\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType(Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that the export should use the given contract type.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.ExportBuilder AsContractType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The contract type to use.\n    return:\n      type: System.ComponentModel.Composition.Registration.ExportBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType``1\n  id: AsContractType``1\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  langs:\n  - csharp\n  name: AsContractType()\n  nameWithType: ExportBuilder.AsContractType()\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.ExportBuilder AsContractType<T> ();\n    parameters: []\n    return:\n      type: System.ComponentModel.Composition.Registration.ExportBuilder\n      description: To be added.\n  overload: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.Inherited\n  id: Inherited\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  langs:\n  - csharp\n  name: Inherited()\n  nameWithType: ExportBuilder.Inherited()\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder.Inherited()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that this export should be inherited.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.ExportBuilder Inherited ();\n    parameters: []\n    return:\n      type: System.ComponentModel.Composition.Registration.ExportBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.ExportBuilder.Inherited*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.#ctor\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  isExternal: false\n  name: ExportBuilder()\n  nameWithType: ExportBuilder.ExportBuilder()\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder.ExportBuilder()\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  isExternal: false\n  name: AddMetadata(String,Func<Type,Object>)\n  nameWithType: ExportBuilder.AddMetadata(String,Func<Type,Object>)\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(String,Func<Type,Object>)\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder\n  parent: System.ComponentModel.Composition.Registration\n  isExternal: false\n  name: ExportBuilder\n  nameWithType: ExportBuilder\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Func{System.Type,System.Object}\n  parent: System\n  isExternal: true\n  name: Func<Type,Object>\n  nameWithType: Func<Type,Object>\n  fullName: System.Func<System.Type,System.Object>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<System.Type,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(System.String,System.Object)\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  isExternal: false\n  name: AddMetadata(String,Object)\n  nameWithType: ExportBuilder.AddMetadata(String,Object)\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(String,Object)\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractName(System.String)\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  isExternal: false\n  name: AsContractName(String)\n  nameWithType: ExportBuilder.AsContractName(String)\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractName(String)\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType(System.Type)\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  isExternal: false\n  name: AsContractType(Type)\n  nameWithType: ExportBuilder.AsContractType(Type)\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType``1\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  isExternal: false\n  name: AsContractType()\n  nameWithType: ExportBuilder.AsContractType()\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType()\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.Inherited\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  isExternal: false\n  name: Inherited()\n  nameWithType: ExportBuilder.Inherited()\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder.Inherited()\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.#ctor*\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  isExternal: false\n  name: ExportBuilder\n  nameWithType: ExportBuilder.ExportBuilder\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata*\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  isExternal: false\n  name: AddMetadata\n  nameWithType: ExportBuilder.AddMetadata\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractName*\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  isExternal: false\n  name: AsContractName\n  nameWithType: ExportBuilder.AsContractName\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType*\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  isExternal: false\n  name: AsContractType\n  nameWithType: ExportBuilder.AsContractType\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType<T>*\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  isExternal: false\n  name: AsContractType<T>\n  nameWithType: ExportBuilder.AsContractType<T>\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder.Inherited*\n  parent: System.ComponentModel.Composition.Registration.ExportBuilder\n  isExternal: false\n  name: Inherited\n  nameWithType: ExportBuilder.Inherited\n"}