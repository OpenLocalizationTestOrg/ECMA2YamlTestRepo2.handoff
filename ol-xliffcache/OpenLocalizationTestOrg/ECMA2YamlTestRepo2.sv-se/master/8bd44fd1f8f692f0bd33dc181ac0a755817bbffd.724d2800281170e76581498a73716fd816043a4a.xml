{"nodes":[{"pos":[716,821],"content":"Provides a type converter to convert Unicode character objects to and from various other representations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a type converter to convert Unicode character objects to and from various other representations.","pos":[0,105]}]},{"pos":[834,1436],"content":"This converter can only convert a string, with a length of 1, to and from a character.       For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  You should never create an instance of a CharConverter. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This converter can only convert a string, with a length of 1, to and from a character.","pos":[0,86]},{"content":"For more information about type converters, see the &lt;xref:System.ComponentModel.TypeConverter&gt; base class and <bpt id=\"p1\">[</bpt>How to: Implement a Type Converter<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[93,279],"source":"       For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You should never create an instance of a CharConverter.","pos":[285,353],"source":"      > [!NOTE] >  You should never create an instance of a CharConverter."},{"content":"Instead, call the &lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt; method of the &lt;xref:System.ComponentModel.TypeDescriptor&gt; class.","pos":[354,496],"source":" Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class."},{"content":"For more information, see the examples in the &lt;xref:System.ComponentModel.TypeConverter&gt; base class.","pos":[497,597],"source":" For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class."}]},{"pos":[5764,5861],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.CharConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.CharConverter\"></xref> class."},{"pos":[6589,6741],"content":"Gets a value indicating whether this converter can convert an object in the given source type to a Unicode character object using the specified context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this converter can convert an object in the given source type to a Unicode character object using the specified context.","pos":[0,152]}]},{"pos":[6754,7073],"content":"This converter can only convert a string, with a length of 1, to and from a character.       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This converter can only convert a string, with a length of 1, to and from a character.","pos":[0,86]},{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[93,222],"source":"       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[223,259],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[260,317],"source":" Also, properties on the context object can return `null`."}]},{"pos":[7317,7417],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[7482,7553],"content":"A <xref:System.Type> that represents the type you want to convert from.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type you want to convert from.","pos":[0,71],"source":"A <xref:System.Type> that represents the type you want to convert from."}]},{"pos":[7612,7793],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this converter can perform the conversion; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8560,8616],"content":"Converts the given object to a Unicode character object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the given object to a Unicode character object.","pos":[0,56]}]},{"pos":[8629,8948],"content":"This converter can only convert a string, with a length of 1, to and from a character.       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This converter can only convert a string, with a length of 1, to and from a character.","pos":[0,86]},{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[93,222],"source":"       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[223,259],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[260,317],"source":" Also, properties on the context object can return `null`."}]},{"pos":[9230,9330],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[9413,9462],"content":"The culture into which <ph id=\"ph1\">`value`</ph> will be converted.","needQuote":true,"needEscape":true,"source":"The culture into which `value` will be converted."},{"pos":[9524,9560],"content":"The <xref:System.Object> to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to convert.","pos":[0,36],"source":"The <xref:System.Object> to convert."}]},{"pos":[9618,9691],"content":"An &lt;xref:System.Object&gt; that represents the converted <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object> that represents the converted <code>value</code>."},{"pos":[9857,9917],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not a valid value for the target type.","needQuote":true,"needEscape":true,"source":"<code>value</code> is not a valid value for the target type."},{"pos":[10020,10055],"content":"The conversion cannot be performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]},{"pos":[10770,10852],"content":"Converts the given value object to a Unicode character object using the arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the given value object to a Unicode character object using the arguments.","pos":[0,82]}]},{"pos":[11153,11253],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[11336,11385],"content":"The culture into which <ph id=\"ph1\">`value`</ph> will be converted.","needQuote":true,"needEscape":true,"source":"The culture into which `value` will be converted."},{"pos":[11447,11483],"content":"The <xref:System.Object> to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to convert.","pos":[0,36],"source":"The <xref:System.Object> to convert."}]},{"pos":[11553,11600],"content":"The <xref:System.Type> to convert the value to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; to convert the value to.","pos":[0,47],"source":"The <xref:System.Type> to convert the value to."}]},{"pos":[11658,11718],"content":"An <xref:System.Object> that represents the converted value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that represents the converted value.","pos":[0,60],"source":"An <xref:System.Object> that represents the converted value."}]},{"pos":[11894,11929],"content":"The conversion cannot be performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.CharConverter\n  id: CharConverter\n  children:\n  - System.ComponentModel.CharConverter.#ctor\n  - System.ComponentModel.CharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.CharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.CharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: CharConverter\n  nameWithType: CharConverter\n  fullName: System.ComponentModel.CharConverter\n  type: Class\n  summary: Provides a type converter to convert Unicode character objects to and from various other representations.\n  remarks: \"This converter can only convert a string, with a length of 1, to and from a character.  \\n  \\n For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  You should never create an instance of a CharConverter. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.\"\n  example:\n  - \"The following code example converts a variable of type <xref:System.Char> to a string variable, and vice versa.  \\n  \\n [!code-cs[Converters#5](~/add/codesnippet/csharp/t-system.componentmodel._75_1.cs)]\\n [!code-vb[Converters#5](~/add/codesnippet/visualbasic/t-system.componentmodel._75_1.vb)]\\n [!code-cpp[Converters#5](~/add/codesnippet/cpp/t-system.componentmodel._75_1.cpp)]\"\n  syntax:\n    content: 'public class CharConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.ComponentModel.CharConverter.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.CharConverter\n  langs:\n  - csharp\n  name: CharConverter()\n  nameWithType: CharConverter.CharConverter()\n  fullName: System.ComponentModel.CharConverter.CharConverter()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.CharConverter\"></xref> class.\n  syntax:\n    content: public CharConverter ();\n    parameters: []\n  overload: System.ComponentModel.CharConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.CharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.CharConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: CharConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.ComponentModel.CharConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this converter can convert an object in the given source type to a Unicode character object using the specified context.\n  remarks: \"This converter can only convert a string, with a length of 1, to and from a character.  \\n  \\n The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\"\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: sourceType\n      type: System.Type\n      description: A <xref:System.Type> that represents the type you want to convert from.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.CharConverter.CanConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.CharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.CharConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: CharConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.ComponentModel.CharConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Converts the given object to a Unicode character object.\n  remarks: \"This converter can only convert a string, with a length of 1, to and from a character.  \\n  \\n The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\"\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The culture into which `value` will be converted.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to convert.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that represents the converted <code>value</code>.\n  overload: System.ComponentModel.CharConverter.ConvertFrom*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>value</code> is not a valid value for the target type.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  platform:\n  - net462\n- uid: System.ComponentModel.CharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.CharConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: CharConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.ComponentModel.CharConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Converts the given value object to a Unicode character object using the arguments.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The culture into which `value` will be converted.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to convert.\n    - id: destinationType\n      type: System.Type\n      description: The <xref:System.Type> to convert the value to.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that represents the converted value.\n  overload: System.ComponentModel.CharConverter.ConvertTo*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.FormatException\n  isExternal: true\n  name: System.FormatException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ComponentModel.CharConverter.#ctor\n  parent: System.ComponentModel.CharConverter\n  isExternal: false\n  name: CharConverter()\n  nameWithType: CharConverter.CharConverter()\n  fullName: System.ComponentModel.CharConverter.CharConverter()\n- uid: System.ComponentModel.CharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.CharConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: CharConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.ComponentModel.CharConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.CharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.CharConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: CharConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.ComponentModel.CharConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.ComponentModel.CharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.CharConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: CharConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.ComponentModel.CharConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n- uid: System.ComponentModel.CharConverter.#ctor*\n  parent: System.ComponentModel.CharConverter\n  isExternal: false\n  name: CharConverter\n  nameWithType: CharConverter.CharConverter\n- uid: System.ComponentModel.CharConverter.CanConvertFrom*\n  parent: System.ComponentModel.CharConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: CharConverter.CanConvertFrom\n- uid: System.ComponentModel.CharConverter.ConvertFrom*\n  parent: System.ComponentModel.CharConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: CharConverter.ConvertFrom\n- uid: System.ComponentModel.CharConverter.ConvertTo*\n  parent: System.ComponentModel.CharConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: CharConverter.ConvertTo\n"}