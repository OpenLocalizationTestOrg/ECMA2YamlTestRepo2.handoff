{"nodes":[{"pos":[816,931],"content":"Declaratively instructs the .NET Framework to instantiate a configuration property. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Declaratively instructs the .NET Framework to instantiate a configuration property. This class cannot be inherited.","pos":[0,115],"nodes":[{"content":"Declaratively instructs the .NET Framework to instantiate a configuration property.","pos":[0,83]},{"content":"This class cannot be inherited.","pos":[84,115]}]}]},{"pos":[944,2658],"content":"You use the ConfigurationPropertyAttribute to decorate a configuration property, which will instruct the .NET Framework to instantiate and to initialize the property using the value of the decorating parameter.      > [!NOTE] >  The simplest way to create a custom configuration element is to use the attributed (declarative) model. You declare the custom public properties and decorate them with the ConfigurationPropertyAttribute attribute. For each property marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related <xref:System.Configuration.ConfigurationProperty> instance. You can also use the programmatic model, in which case it is your responsibility to declare the custom public properties and return their collection.       The .NET Framework configuration system provides attribute types that you can use during the creation of custom configuration elements. There are two kinds of attribute types:      1.  The types instructing the .NET Framework how to instantiate the custom configuration-element properties. These types include:          -   <xref:System.Configuration.ConfigurationCollectionAttribute>          -   ConfigurationPropertyAttribute      2.  The types instructing the .NET Framework how to validate the custom configuration-element properties. These types include:          -   <xref:System.Configuration.IntegerValidatorAttribute>          -   <xref:System.Configuration.LongValidatorAttribute>          -   <xref:System.Configuration.RegexStringValidatorAttribute>          -   <xref:System.Configuration.StringValidatorAttribute>          -   <xref:System.Configuration.TimeSpanValidatorAttribute>","needQuote":false,"needEscape":true,"nodes":[{"content":"You use the ConfigurationPropertyAttribute to decorate a configuration property, which will instruct the .NET Framework to instantiate and to initialize the property using the value of the decorating parameter.","pos":[0,210]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The simplest way to create a custom configuration element is to use the attributed (declarative) model.","pos":[216,332],"source":"      > [!NOTE] >  The simplest way to create a custom configuration element is to use the attributed (declarative) model."},{"content":"You declare the custom public properties and decorate them with the ConfigurationPropertyAttribute attribute.","pos":[333,442]},{"content":"For each property marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related &lt;xref:System.Configuration.ConfigurationProperty&gt; instance.","pos":[443,638],"source":" For each property marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related <xref:System.Configuration.ConfigurationProperty> instance."},{"content":"You can also use the programmatic model, in which case it is your responsibility to declare the custom public properties and return their collection.","pos":[639,788]},{"content":"The .NET Framework configuration system provides attribute types that you can use during the creation of custom configuration elements.","pos":[795,930]},{"content":"There are two kinds of attribute types:      1.","pos":[931,978]},{"content":"The types instructing the .NET Framework how to instantiate the custom configuration-element properties.","pos":[980,1084]},{"content":"These types include:          -   &lt;xref:System.Configuration.ConfigurationCollectionAttribute&gt;          -   ConfigurationPropertyAttribute      2.","pos":[1085,1231],"source":" These types include:          -   <xref:System.Configuration.ConfigurationCollectionAttribute>          -   ConfigurationPropertyAttribute      2."},{"content":"The types instructing the .NET Framework how to validate the custom configuration-element properties.","pos":[1233,1334]},{"content":"These types include:          -   &lt;xref:System.Configuration.IntegerValidatorAttribute&gt;          -   &lt;xref:System.Configuration.LongValidatorAttribute&gt;          -   &lt;xref:System.Configuration.RegexStringValidatorAttribute&gt;          -   &lt;xref:System.Configuration.StringValidatorAttribute&gt;          -   &lt;xref:System.Configuration.TimeSpanValidatorAttribute&gt;","pos":[1335,1691],"source":" These types include:          -   <xref:System.Configuration.IntegerValidatorAttribute>          -   <xref:System.Configuration.LongValidatorAttribute>          -   <xref:System.Configuration.RegexStringValidatorAttribute>          -   <xref:System.Configuration.StringValidatorAttribute>          -   <xref:System.Configuration.TimeSpanValidatorAttribute>"}]},{"pos":[4977,5086],"content":"Initializes a new instance of <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPropertyAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of <xref href=\"System.Configuration.ConfigurationPropertyAttribute\"></xref> class."},{"pos":[5239,5330],"content":"Name of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object defined.","needQuote":true,"needEscape":true,"source":"Name of the <xref href=\"System.Configuration.ConfigurationProperty\"></xref> object defined."},{"pos":[5874,5932],"content":"Gets or sets the default value for the decorated property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the default value for the decorated property.","pos":[0,58]}]},{"pos":[6416,6506],"content":"The object representing the default value of the decorated configuration-element property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object representing the default value of the decorated configuration-element property.","pos":[0,90]}]},{"pos":[7092,7213],"content":"Gets or sets a value indicating whether this is the default property collection for the decorated configuration property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether this is the default property collection for the decorated configuration property.","pos":[0,121]}]},{"pos":[7225,7321],"content":"The IsDefaultCollection property value is ignored if the decorated property is not a collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The IsDefaultCollection property value is ignored if the decorated property is not a collection.","pos":[0,96]}]},{"pos":[7449,7728],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property represents the default collection of an element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the property represents the default collection of an element; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,200],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property represents the default collection of an element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[201,279],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[8251,8349],"content":"Gets or sets a value indicating whether this is a key property for the decorated element property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether this is a key property for the decorated element property.","pos":[0,98]}]},{"pos":[8361,8545],"content":"The IsKey property applies only if the property you decorate is a collection. It does not have any effect if the property is not a collection. Multiple elements can be marked as IsKey.","needQuote":true,"needEscape":true,"nodes":[{"content":"The IsKey property applies only if the property you decorate is a collection. It does not have any effect if the property is not a collection. Multiple elements can be marked as IsKey.","pos":[0,184],"nodes":[{"content":"The IsKey property applies only if the property you decorate is a collection.","pos":[0,77]},{"content":"It does not have any effect if the property is not a collection.","pos":[78,142]},{"content":"Multiple elements can be marked as IsKey.","pos":[143,184]}]}]},{"pos":[8998,9280],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property is a key property for an element of the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the property is a key property for an element of the collection; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,203],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property is a key property for an element of the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[204,282],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[9814,9897],"content":"Gets or sets a value indicating whether the decorated element property is required.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the decorated element property is required.","pos":[0,83]}]},{"pos":[10440,10683],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property is required; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the property is required; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,164],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property is required; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[165,243],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[11192,11254],"content":"Gets the name of the decorated configuration-element property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the decorated configuration-element property.","pos":[0,62]}]},{"pos":[11363,11420],"content":"The name of the decorated configuration-element property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the decorated configuration-element property.","pos":[0,57]}]},{"pos":[11938,12075],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPropertyOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the decorated configuration-element property.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Configuration.ConfigurationPropertyOptions\"></xref> for the decorated configuration-element property."},{"pos":[12271,12401],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPropertyOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values associated with the property.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Configuration.ConfigurationPropertyOptions\"></xref> enumeration values associated with the property."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.ConfigurationPropertyAttribute\n  id: ConfigurationPropertyAttribute\n  children:\n  - System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)\n  - System.Configuration.ConfigurationPropertyAttribute.DefaultValue\n  - System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection\n  - System.Configuration.ConfigurationPropertyAttribute.IsKey\n  - System.Configuration.ConfigurationPropertyAttribute.IsRequired\n  - System.Configuration.ConfigurationPropertyAttribute.Name\n  - System.Configuration.ConfigurationPropertyAttribute.Options\n  langs:\n  - csharp\n  name: ConfigurationPropertyAttribute\n  nameWithType: ConfigurationPropertyAttribute\n  fullName: System.Configuration.ConfigurationPropertyAttribute\n  type: Class\n  summary: Declaratively instructs the .NET Framework to instantiate a configuration property. This class cannot be inherited.\n  remarks: \"You use the ConfigurationPropertyAttribute to decorate a configuration property, which will instruct the .NET Framework to instantiate and to initialize the property using the value of the decorating parameter.  \\n  \\n> [!NOTE]\\n>  The simplest way to create a custom configuration element is to use the attributed (declarative) model. You declare the custom public properties and decorate them with the ConfigurationPropertyAttribute attribute. For each property marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related <xref:System.Configuration.ConfigurationProperty> instance. You can also use the programmatic model, in which case it is your responsibility to declare the custom public properties and return their collection.  \\n  \\n The .NET Framework configuration system provides attribute types that you can use during the creation of custom configuration elements. There are two kinds of attribute types:  \\n  \\n1.  The types instructing the .NET Framework how to instantiate the custom configuration-element properties. These types include:  \\n  \\n    -   <xref:System.Configuration.ConfigurationCollectionAttribute>  \\n  \\n    -   ConfigurationPropertyAttribute  \\n  \\n2.  The types instructing the .NET Framework how to validate the custom configuration-element properties. These types include:  \\n  \\n    -   <xref:System.Configuration.IntegerValidatorAttribute>  \\n  \\n    -   <xref:System.Configuration.LongValidatorAttribute>  \\n  \\n    -   <xref:System.Configuration.RegexStringValidatorAttribute>  \\n  \\n    -   <xref:System.Configuration.StringValidatorAttribute>  \\n  \\n    -   <xref:System.Configuration.TimeSpanValidatorAttribute>\"\n  example:\n  - \"The following example shows how to define the properties of a custom <xref:System.Configuration.ConfigurationSection> object using the ConfigurationPropertyAttribute attribute.  \\n  \\n The example contains two classes. The `UrlsSection` custom class uses the ConfigurationPropertyAttribute to define its own properties. The `UsingConfigurationPropertyAttribute` class uses the `UrlsSection` to read and write the custom section in the application configuration file.  \\n  \\n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#1](~/add/codesnippet/csharp/t-system.configuration.c_21_1.cs)]\\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#1](~/add/codesnippet/visualbasic/t-system.configuration.c_21_1.vb)]  \\n  \\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#21](~/add/codesnippet/visualbasic/t-system.configuration.c_21_2.vb)]\\n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#21](~/add/codesnippet/csharp/t-system.configuration.c_21_2.cs)]  \\n  \\n The following is an excerpt of the configuration file containing the custom section as defined in the previous sample.  \\n  \\n```  \\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>  \\n<configuration>  \\n    <configSections>  \\n        <section name=\\\"CustomSection\\\" type=\\\"UrlsSection, UsingConfigurationPropertyAttribute, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\\\" />  \\n    </configSections>  \\n    <CustomSection name=\\\"Contoso\\\" url=\\\"http://www.contoso.com\\\" />  \\n</configuration>  \\n```\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property)]\n\n      public sealed class ConfigurationPropertyAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  langs:\n  - csharp\n  name: ConfigurationPropertyAttribute(String)\n  nameWithType: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)\n  fullName: System.Configuration.ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Initializes a new instance of <xref href=\"System.Configuration.ConfigurationPropertyAttribute\"></xref> class.\n  syntax:\n    content: public ConfigurationPropertyAttribute (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Name of the <xref href=\"System.Configuration.ConfigurationProperty\"></xref> object defined.\n  overload: System.Configuration.ConfigurationPropertyAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyAttribute.DefaultValue\n  id: DefaultValue\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  langs:\n  - csharp\n  name: DefaultValue\n  nameWithType: ConfigurationPropertyAttribute.DefaultValue\n  fullName: System.Configuration.ConfigurationPropertyAttribute.DefaultValue\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets or sets the default value for the decorated property.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the DefaultValue property.  \\n  \\n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#3](~/add/codesnippet/csharp/p-system.configuration.c_19_1.cs)]\\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#3](~/add/codesnippet/visualbasic/p-system.configuration.c_19_1.vb)]\"\n  syntax:\n    content: public object DefaultValue { get; set; }\n    return:\n      type: System.Object\n      description: The object representing the default value of the decorated configuration-element property.\n  overload: System.Configuration.ConfigurationPropertyAttribute.DefaultValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection\n  id: IsDefaultCollection\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  langs:\n  - csharp\n  name: IsDefaultCollection\n  nameWithType: ConfigurationPropertyAttribute.IsDefaultCollection\n  fullName: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets or sets a value indicating whether this is the default property collection for the decorated configuration property.\n  remarks: The IsDefaultCollection property value is ignored if the decorated property is not a collection.\n  syntax:\n    content: public bool IsDefaultCollection { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property represents the default collection of an element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsKey\n  id: IsKey\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  langs:\n  - csharp\n  name: IsKey\n  nameWithType: ConfigurationPropertyAttribute.IsKey\n  fullName: System.Configuration.ConfigurationPropertyAttribute.IsKey\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets or sets a value indicating whether this is a key property for the decorated element property.\n  remarks: The IsKey property applies only if the property you decorate is a collection. It does not have any effect if the property is not a collection. Multiple elements can be marked as IsKey.\n  example:\n  - \"The following example shows how to use the IsKey property.  \\n  \\n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#2](~/add/codesnippet/csharp/p-system.configuration.c_4_1.cs)]\\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#2](~/add/codesnippet/visualbasic/p-system.configuration.c_4_1.vb)]\"\n  syntax:\n    content: public bool IsKey { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property is a key property for an element of the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.ConfigurationPropertyAttribute.IsKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsRequired\n  id: IsRequired\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  langs:\n  - csharp\n  name: IsRequired\n  nameWithType: ConfigurationPropertyAttribute.IsRequired\n  fullName: System.Configuration.ConfigurationPropertyAttribute.IsRequired\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets or sets a value indicating whether the decorated element property is required.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Configuration.ConfigurationPropertyAttribute.DefaultValue%2A> property.  \\n  \\n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#3](~/add/codesnippet/csharp/p-system.configuration.c_44_1.cs)]\\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#3](~/add/codesnippet/visualbasic/p-system.configuration.c_44_1.vb)]\"\n  syntax:\n    content: public bool IsRequired { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property is required; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.ConfigurationPropertyAttribute.IsRequired*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyAttribute.Name\n  id: Name\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ConfigurationPropertyAttribute.Name\n  fullName: System.Configuration.ConfigurationPropertyAttribute.Name\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets the name of the decorated configuration-element property.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The name of the decorated configuration-element property.\n  overload: System.Configuration.ConfigurationPropertyAttribute.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyAttribute.Options\n  id: Options\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  langs:\n  - csharp\n  name: Options\n  nameWithType: ConfigurationPropertyAttribute.Options\n  fullName: System.Configuration.ConfigurationPropertyAttribute.Options\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets or sets the <xref href=\"System.Configuration.ConfigurationPropertyOptions\"></xref> for the decorated configuration-element property.\n  syntax:\n    content: public System.Configuration.ConfigurationPropertyOptions Options { get; set; }\n    return:\n      type: System.Configuration.ConfigurationPropertyOptions\n      description: One of the <xref href=\"System.Configuration.ConfigurationPropertyOptions\"></xref> enumeration values associated with the property.\n  overload: System.Configuration.ConfigurationPropertyAttribute.Options*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: ConfigurationPropertyAttribute(String)\n  nameWithType: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)\n  fullName: System.Configuration.ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.ConfigurationPropertyAttribute.DefaultValue\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: DefaultValue\n  nameWithType: ConfigurationPropertyAttribute.DefaultValue\n  fullName: System.Configuration.ConfigurationPropertyAttribute.DefaultValue\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: IsDefaultCollection\n  nameWithType: ConfigurationPropertyAttribute.IsDefaultCollection\n  fullName: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsKey\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: IsKey\n  nameWithType: ConfigurationPropertyAttribute.IsKey\n  fullName: System.Configuration.ConfigurationPropertyAttribute.IsKey\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsRequired\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: IsRequired\n  nameWithType: ConfigurationPropertyAttribute.IsRequired\n  fullName: System.Configuration.ConfigurationPropertyAttribute.IsRequired\n- uid: System.Configuration.ConfigurationPropertyAttribute.Name\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: Name\n  nameWithType: ConfigurationPropertyAttribute.Name\n  fullName: System.Configuration.ConfigurationPropertyAttribute.Name\n- uid: System.Configuration.ConfigurationPropertyAttribute.Options\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: Options\n  nameWithType: ConfigurationPropertyAttribute.Options\n  fullName: System.Configuration.ConfigurationPropertyAttribute.Options\n- uid: System.Configuration.ConfigurationPropertyOptions\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyOptions\n  nameWithType: ConfigurationPropertyOptions\n  fullName: System.Configuration.ConfigurationPropertyOptions\n- uid: System.Configuration.ConfigurationPropertyAttribute.#ctor*\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: ConfigurationPropertyAttribute\n  nameWithType: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute\n- uid: System.Configuration.ConfigurationPropertyAttribute.DefaultValue*\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: DefaultValue\n  nameWithType: ConfigurationPropertyAttribute.DefaultValue\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection*\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: IsDefaultCollection\n  nameWithType: ConfigurationPropertyAttribute.IsDefaultCollection\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsKey*\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: IsKey\n  nameWithType: ConfigurationPropertyAttribute.IsKey\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsRequired*\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: IsRequired\n  nameWithType: ConfigurationPropertyAttribute.IsRequired\n- uid: System.Configuration.ConfigurationPropertyAttribute.Name*\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: Name\n  nameWithType: ConfigurationPropertyAttribute.Name\n- uid: System.Configuration.ConfigurationPropertyAttribute.Options*\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: Options\n  nameWithType: ConfigurationPropertyAttribute.Options\n"}