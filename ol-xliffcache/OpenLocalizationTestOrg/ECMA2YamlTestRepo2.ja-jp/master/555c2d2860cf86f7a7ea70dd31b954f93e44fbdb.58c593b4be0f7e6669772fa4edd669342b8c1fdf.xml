{"nodes":[{"pos":[2552,2610],"content":"Performs queries against Active Directory Domain Services.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs queries against Active Directory Domain Services.","pos":[0,58]}]},{"pos":[2623,5418],"content":"Use a DirectorySearcher object to search and perform queries against an Active Directory Domain Services hierarchy using Lightweight Directory Access Protocol (LDAP). LDAP is the only system-supplied Active Directory Service Interfaces (ADSI) provider that supports directory searching. An administrator can make, alter, and delete objects that are found in the hierarchy. For more information, see [Using System.DirectoryServices](http://msdn.microsoft.com/en-us/ffa2f003-3a9a-4e2a-815e-825c8ddd7949).       When you create an instance of DirectorySearcher, you specify the root you want to retrieve, and an optional list of properties to retrieve. The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A> property enables you to set additional properties to do the following tasks:      -   Cache the search results on the local computer. Set the <xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A> property to `true` to store directory information on the local computer. Updates are made to this local cache and committed to Active Directory Domain Services only when the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName> method is called.      -   Specify the length of time to search, using the  <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> property.      -   Retrieve attribute names only. Set the <xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A> property to `true` to retrieve only the names of attributes to which values have been assigned.      -   Perform a paged search. Set the <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> property to specify the maximum number of objects that are returned in a paged search. If you do not want to perform a paged search, set the <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> property to its default of zero.      -   Specify the maximum number of entries to return, using the <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> property. If you set the <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> property to its default of zero, the server-determined default is 1000 entries.      > [!NOTE] >  If the maximum number of returned entries and time limits exceed the limitations that are set on the server, the server settings override the component settings.       For a list of initial property values for an instance of the DirectorySearcher class, see the <xref:System.DirectoryServices.DirectorySearcher.%23ctor> constructor.      > [!NOTE] >  It is assumed that you have a general understanding of Active Directory Domain Services before using this class. For more information, see the <xref:System.DirectoryServices?displayProperty=fullName> overview.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use a DirectorySearcher object to search and perform queries against an Active Directory Domain Services hierarchy using Lightweight Directory Access Protocol (LDAP).","pos":[0,166]},{"content":"LDAP is the only system-supplied Active Directory Service Interfaces (ADSI) provider that supports directory searching.","pos":[167,286]},{"content":"An administrator can make, alter, and delete objects that are found in the hierarchy.","pos":[287,372]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using System.DirectoryServices<ept id=\"p1\">](http://msdn.microsoft.com/en-us/ffa2f003-3a9a-4e2a-815e-825c8ddd7949)</ept>.","pos":[373,502],"source":" For more information, see [Using System.DirectoryServices](http://msdn.microsoft.com/en-us/ffa2f003-3a9a-4e2a-815e-825c8ddd7949)."},{"content":"When you create an instance of DirectorySearcher, you specify the root you want to retrieve, and an optional list of properties to retrieve.","pos":[509,649]},{"content":"The &lt;xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A&gt; property enables you to set additional properties to do the following tasks:      -   Cache the search results on the local computer.","pos":[650,851],"source":" The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A> property enables you to set additional properties to do the following tasks:      -   Cache the search results on the local computer."},{"content":"Set the &lt;xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A&gt; property to <ph id=\"ph1\">`true`</ph> to store directory information on the local computer.","pos":[852,998],"source":" Set the <xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A> property to `true` to store directory information on the local computer."},{"content":"Updates are made to this local cache and committed to Active Directory Domain Services only when the &lt;xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName&gt; method is called.","pos":[999,1206],"source":" Updates are made to this local cache and committed to Active Directory Domain Services only when the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName> method is called."},{"content":"-   Specify the length of time to search, using the  &lt;xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A&gt; property.","pos":[1212,1343],"source":"      -   Specify the length of time to search, using the  <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> property."},{"content":"-   Retrieve attribute names only.","pos":[1349,1383]},{"content":"Set the &lt;xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A&gt; property to <ph id=\"ph1\">`true`</ph> to retrieve only the names of attributes to which values have been assigned.","pos":[1384,1558],"source":" Set the <xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A> property to `true` to retrieve only the names of attributes to which values have been assigned."},{"content":"-   Perform a paged search.","pos":[1564,1591]},{"content":"Set the &lt;xref:System.DirectoryServices.DirectorySearcher.PageSize%2A&gt; property to specify the maximum number of objects that are returned in a paged search.","pos":[1592,1748],"source":" Set the <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> property to specify the maximum number of objects that are returned in a paged search."},{"content":"If you do not want to perform a paged search, set the &lt;xref:System.DirectoryServices.DirectorySearcher.PageSize%2A&gt; property to its default of zero.","pos":[1749,1897],"source":" If you do not want to perform a paged search, set the <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> property to its default of zero."},{"content":"-   Specify the maximum number of entries to return, using the &lt;xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A&gt; property.","pos":[1903,2038],"source":"      -   Specify the maximum number of entries to return, using the <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> property."},{"content":"If you set the &lt;xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A&gt; property to its default of zero, the server-determined default is 1000 entries.","pos":[2039,2196],"source":" If you set the <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> property to its default of zero, the server-determined default is 1000 entries."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the maximum number of returned entries and time limits exceed the limitations that are set on the server, the server settings override the component settings.","pos":[2202,2376],"source":"      > [!NOTE] >  If the maximum number of returned entries and time limits exceed the limitations that are set on the server, the server settings override the component settings."},{"content":"For a list of initial property values for an instance of the DirectorySearcher class, see the &lt;xref:System.DirectoryServices.DirectorySearcher.%23ctor&gt; constructor.","pos":[2383,2547],"source":"       For a list of initial property values for an instance of the DirectorySearcher class, see the <xref:System.DirectoryServices.DirectorySearcher.%23ctor> constructor."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  It is assumed that you have a general understanding of Active Directory Domain Services before using this class.","pos":[2553,2678],"source":"      > [!NOTE] >  It is assumed that you have a general understanding of Active Directory Domain Services before using this class."},{"content":"For more information, see the &lt;xref:System.DirectoryServices?displayProperty=fullName&gt; overview.","pos":[2679,2775],"source":" For more information, see the <xref:System.DirectoryServices?displayProperty=fullName> overview."}]},{"pos":[6806,6930],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectorySearcher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with default values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> class with default values."},{"pos":[6943,7592],"content":"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|A null reference (`Nothing` in Visual Basic)|   |<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|\"(objectClass=*)\"|   |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|An empty <xref:System.Collections.Specialized.StringCollection> object|   |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|","needQuote":false,"needEscape":true,"nodes":[{"content":"The following table shows the initial property values of the &lt;xref:System.DirectoryServices.DirectorySearcher&gt; object.","pos":[0,118],"source":"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object."},{"content":"|Property|Initial value|   |--------------|-------------------|   |&lt;xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A&gt;|A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic)|   |&lt;xref:System.DirectoryServices.DirectorySearcher.Filter%2A&gt;|\"(objectClass=*)\"|   |&lt;xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A&gt;|An empty &lt;xref:System.Collections.Specialized.StringCollection&gt; object|   |&lt;xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A&gt;|&lt;xref:System.DirectoryServices.SearchScope&gt;|","pos":[124,640],"source":"      |Property|Initial value|   |--------------|-------------------|   |<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|A null reference (`Nothing` in Visual Basic)|   |<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|\"(objectClass=*)\"|   |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|An empty <xref:System.Collections.Specialized.StringCollection> object|   |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|"}]},{"pos":[8303,8439],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectorySearcher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified search root.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> class using the specified search root."},{"pos":[8452,8987],"content":"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|\"(objectClass=*)\"|   |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|An empty <xref:System.Collections.Specialized.StringCollection> object|   |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|","needQuote":false,"needEscape":true,"nodes":[{"content":"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|\"(objectClass=*)\"|   |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|An empty <xref:System.Collections.Specialized.StringCollection> object|   |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|","pos":[0,527],"nodes":[{"content":"The following table shows the initial property values of the &lt;xref:System.DirectoryServices.DirectorySearcher&gt; object.","pos":[0,118],"source":"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object."},{"content":"|Property|Initial value|   |--------------|-------------------|   |&lt;xref:System.DirectoryServices.DirectorySearcher.Filter%2A&gt;|\"(objectClass=*)\"|   |&lt;xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A&gt;|An empty &lt;xref:System.Collections.Specialized.StringCollection&gt; object|   |&lt;xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A&gt;|&lt;xref:System.DirectoryServices.SearchScope&gt;|","pos":[124,527],"source":"      |Property|Initial value|   |--------------|-------------------|   |<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|\"(objectClass=*)\"|   |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|An empty <xref:System.Collections.Specialized.StringCollection> object|   |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|"}]}]},{"pos":[9199,9387],"content":"The node in the Active Directory Domain Services hierarchy where the search starts. The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The node in the Active Directory Domain Services hierarchy where the search starts. The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*> property is initialized to this value.","pos":[0,188],"nodes":[{"content":"The node in the Active Directory Domain Services hierarchy where the search starts.","pos":[0,83]},{"content":"The &lt;xref:System.DirectoryServices.DirectorySearcher.SearchRoot*&gt; property is initialized to this value.","pos":[84,188],"source":" The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*> property is initialized to this value."}]}]},{"pos":[9950,10087],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectorySearcher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified search filter.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> class with the specified search filter."},{"pos":[10100,10664],"content":"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|A null reference (`Nothing` in Visual Basic)|   |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|An empty <xref:System.Collections.Specialized.StringCollection> object|   |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|","needQuote":false,"needEscape":true,"nodes":[{"content":"The following table shows the initial property values of the &lt;xref:System.DirectoryServices.DirectorySearcher&gt; object.","pos":[0,118],"source":"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object."},{"content":"|Property|Initial value|   |--------------|-------------------|   |&lt;xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A&gt;|A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic)|   |&lt;xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A&gt;|An empty &lt;xref:System.Collections.Specialized.StringCollection&gt; object|   |&lt;xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A&gt;|&lt;xref:System.DirectoryServices.SearchScope&gt;|","pos":[124,558],"source":"      |Property|Initial value|   |--------------|-------------------|   |<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|A null reference (`Nothing` in Visual Basic)|   |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|An empty <xref:System.Collections.Specialized.StringCollection> object|   |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|"}]},{"pos":[10809,10990],"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.","pos":[0,181],"nodes":[{"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format.","pos":[0,80]},{"content":"The &lt;xref:System.DirectoryServices.DirectorySearcher.Filter*&gt; property is initialized to this value.","pos":[81,181],"source":" The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value."}]}]},{"pos":[11678,11831],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectorySearcher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified search root and search filter.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> class with the specified search root and search filter."},{"pos":[11844,12295],"content":"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|An empty <xref:System.Collections.Specialized.StringCollection> object.|   |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|","needQuote":false,"needEscape":true,"nodes":[{"content":"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|An empty <xref:System.Collections.Specialized.StringCollection> object.|   |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|","pos":[0,446],"nodes":[{"content":"The following table shows the initial property values of the &lt;xref:System.DirectoryServices.DirectorySearcher&gt; object.","pos":[0,118],"source":"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object."},{"content":"|Property|Initial value|   |--------------|-------------------|   |&lt;xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A&gt;|An empty &lt;xref:System.Collections.Specialized.StringCollection&gt; object.|   |&lt;xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A&gt;|&lt;xref:System.DirectoryServices.SearchScope&gt;|","pos":[124,446],"source":"      |Property|Initial value|   |--------------|-------------------|   |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|An empty <xref:System.Collections.Specialized.StringCollection> object.|   |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|"}]}]},{"pos":[12522,12710],"content":"The node in the Active Directory Domain Services hierarchy where the search starts. The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The node in the Active Directory Domain Services hierarchy where the search starts. The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*> property is initialized to this value.","pos":[0,188],"nodes":[{"content":"The node in the Active Directory Domain Services hierarchy where the search starts.","pos":[0,83]},{"content":"The &lt;xref:System.DirectoryServices.DirectorySearcher.SearchRoot*&gt; property is initialized to this value.","pos":[84,188],"source":" The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*> property is initialized to this value."}]}]},{"pos":[12773,12954],"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.","pos":[0,181],"nodes":[{"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format.","pos":[0,80]},{"content":"The &lt;xref:System.DirectoryServices.DirectorySearcher.Filter*&gt; property is initialized to this value.","pos":[81,181],"source":" The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value."}]}]},{"pos":[13576,13740],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectorySearcher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified search filter and properties to retrieve.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> class with the specified search filter and properties to retrieve."},{"pos":[13753,14171],"content":"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|A null reference (`Nothing` in Visual Basic)|   |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|","needQuote":false,"needEscape":true,"nodes":[{"content":"The following table shows the initial property values of the &lt;xref:System.DirectoryServices.DirectorySearcher&gt; object.","pos":[0,118],"source":"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object."},{"content":"|Property|Initial value|   |--------------|-------------------|   |&lt;xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A&gt;|A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic)|   |&lt;xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A&gt;|&lt;xref:System.DirectoryServices.SearchScope&gt;|","pos":[124,413],"source":"      |Property|Initial value|   |--------------|-------------------|   |<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|A null reference (`Nothing` in Visual Basic)|   |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|"}]},{"pos":[14343,14525],"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format. The  <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format. The  <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.","pos":[0,182],"nodes":[{"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format.","pos":[0,80]},{"content":"The  &lt;xref:System.DirectoryServices.DirectorySearcher.Filter*&gt; property is initialized to this value.","pos":[81,182],"source":" The  <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value."}]}]},{"pos":[14600,14763],"content":"The set of properties to retrieve during the search. The <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The set of properties to retrieve during the search. The <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*> property is initialized to this value.","pos":[0,163],"nodes":[{"content":"The set of properties to retrieve during the search.","pos":[0,52]},{"content":"The &lt;xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*&gt; property is initialized to this value.","pos":[53,163],"source":" The <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*> property is initialized to this value."}]}]},{"pos":[15510,15689],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectorySearcher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified search root, search filter, and properties to retrieve..","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> class with the specified search root, search filter, and properties to retrieve.."},{"pos":[15702,16006],"content":"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|","needQuote":false,"needEscape":true,"nodes":[{"content":"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|","pos":[0,300],"nodes":[{"content":"The following table shows the initial property values of the &lt;xref:System.DirectoryServices.DirectorySearcher&gt; object.","pos":[0,118],"source":"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object."},{"content":"|Property|Initial value|   |--------------|-------------------|   |&lt;xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A&gt;|&lt;xref:System.DirectoryServices.SearchScope&gt;|","pos":[124,300],"source":"      |Property|Initial value|   |--------------|-------------------|   |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|"}]}]},{"pos":[16260,16448],"content":"The node in the Active Directory Domain Services hierarchy where the search starts. The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The node in the Active Directory Domain Services hierarchy where the search starts. The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*> property is initialized to this value.","pos":[0,188],"nodes":[{"content":"The node in the Active Directory Domain Services hierarchy where the search starts.","pos":[0,83]},{"content":"The &lt;xref:System.DirectoryServices.DirectorySearcher.SearchRoot*&gt; property is initialized to this value.","pos":[84,188],"source":" The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*> property is initialized to this value."}]}]},{"pos":[16511,16692],"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.","pos":[0,181],"nodes":[{"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format.","pos":[0,80]},{"content":"The &lt;xref:System.DirectoryServices.DirectorySearcher.Filter*&gt; property is initialized to this value.","pos":[81,181],"source":" The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value."}]}]},{"pos":[16767,16937],"content":"The set of properties that are retrieved during the search. The <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The set of properties that are retrieved during the search. The <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*> property is initialized to this value.","pos":[0,170],"nodes":[{"content":"The set of properties that are retrieved during the search.","pos":[0,59]},{"content":"The &lt;xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*&gt; property is initialized to this value.","pos":[60,170],"source":" The <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*> property is initialized to this value."}]}]},{"pos":[17669,17848],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectorySearcher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified search filter, properties to retrieve, and search scope.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> class with the specified search filter, properties to retrieve, and search scope."},{"pos":[17861,18165],"content":"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|A null reference (`Nothing` in Visual Basic)|","needQuote":false,"needEscape":true,"nodes":[{"content":"The following table shows the initial property values of the &lt;xref:System.DirectoryServices.DirectorySearcher&gt; object.","pos":[0,118],"source":"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object."},{"content":"|Property|Initial value|   |--------------|-------------------|   |&lt;xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A&gt;|A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic)|","pos":[124,300],"source":"      |Property|Initial value|   |--------------|-------------------|   |<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|A null reference (`Nothing` in Visual Basic)|"}]},{"pos":[18381,18562],"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.","pos":[0,181],"nodes":[{"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format.","pos":[0,80]},{"content":"The &lt;xref:System.DirectoryServices.DirectorySearcher.Filter*&gt; property is initialized to this value.","pos":[81,181],"source":" The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value."}]}]},{"pos":[18637,18800],"content":"The set of properties to retrieve during the search. The <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The set of properties to retrieve during the search. The <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*> property is initialized to this value.","pos":[0,163],"nodes":[{"content":"The set of properties to retrieve during the search.","pos":[0,52]},{"content":"The &lt;xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*&gt; property is initialized to this value.","pos":[53,163],"source":" The <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*> property is initialized to this value."}]}]},{"pos":[18885,19041],"content":"The scope of the search that is observed by the server. The <xref href=\"System.DirectoryServices.SearchScope\"></xref> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scope of the search that is observed by the server.","pos":[0,55]},{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.SearchScope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property is initialized to this value.","pos":[56,156],"source":" The <xref href=\"System.DirectoryServices.SearchScope\"></xref> property is initialized to this value."}]},{"pos":[19898,20090],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectorySearcher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified search root, search filter, properties to retrieve, and search scope.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> class with the specified search root, search filter, properties to retrieve, and search scope."},{"pos":[20387,20575],"content":"The node in the Active Directory Domain Services hierarchy where the search starts. The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The node in the Active Directory Domain Services hierarchy where the search starts. The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*> property is initialized to this value.","pos":[0,188],"nodes":[{"content":"The node in the Active Directory Domain Services hierarchy where the search starts.","pos":[0,83]},{"content":"The &lt;xref:System.DirectoryServices.DirectorySearcher.SearchRoot*&gt; property is initialized to this value.","pos":[84,188],"source":" The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*> property is initialized to this value."}]}]},{"pos":[20638,20819],"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.","pos":[0,181],"nodes":[{"content":"The search filter string in Lightweight Directory Access Protocol (LDAP) format.","pos":[0,80]},{"content":"The &lt;xref:System.DirectoryServices.DirectorySearcher.Filter*&gt; property is initialized to this value.","pos":[81,181],"source":" The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value."}]}]},{"pos":[20894,21057],"content":"The set of properties to retrieve during the search. The <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The set of properties to retrieve during the search. The <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*> property is initialized to this value.","pos":[0,163],"nodes":[{"content":"The set of properties to retrieve during the search.","pos":[0,52]},{"content":"The &lt;xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*&gt; property is initialized to this value.","pos":[53,163],"source":" The <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*> property is initialized to this value."}]}]},{"pos":[21142,21298],"content":"The scope of the search that is observed by the server. The <xref href=\"System.DirectoryServices.SearchScope\"></xref> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scope of the search that is observed by the server.","pos":[0,55]},{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.SearchScope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property is initialized to this value.","pos":[56,156],"source":" The <xref href=\"System.DirectoryServices.SearchScope\"></xref> property is initialized to this value."}]},{"pos":[21801,21879],"content":"Gets or sets a value that indicates if the search is performed asynchronously.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates if the search is performed asynchronously.","pos":[0,78]}]},{"pos":[21892,22118],"content":"An asynchronous search can show results as they are found while simultaneously searching for additional results. This is useful for tasks such as populating list boxes.       The default setting for this property is `false`.","needQuote":false,"needEscape":true,"nodes":[{"content":"An asynchronous search can show results as they are found while simultaneously searching for additional results.","pos":[0,112]},{"content":"This is useful for tasks such as populating list boxes.","pos":[113,168]},{"content":"The default setting for this property is <ph id=\"ph1\">`false`</ph>.","pos":[175,224],"source":"       The default setting for this property is `false`."}]},{"pos":[22788,22953],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the search is asynchronous; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> otherwise.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the search is asynchronous; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise."},{"pos":[23498,23638],"content":"Gets or sets the LDAP display name of the distinguished name attribute to search in. Only one attribute can be used for this type of search.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the LDAP display name of the distinguished name attribute to search in. Only one attribute can be used for this type of search.","pos":[0,140],"nodes":[{"content":"Gets or sets the LDAP display name of the distinguished name attribute to search in.","pos":[0,84]},{"content":"Only one attribute can be used for this type of search.","pos":[85,140]}]}]},{"pos":[23651,25258],"content":"The attribute that this property is set to must be a distinguished name attribute, such as member or managedBy. The attribute can be either single or multi-valued. For more information, see the adschema topics \"[Member](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_member.asp)\" and \"[Managed-By](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_managedby.asp)\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).       The search is performed against the objects that are identified by the distinguished name that is specified in the attribute of the base object. For example, if the base object is an adschema group class and the AttributeScopeQuery is set to \"member,\" then the search will be performed against all objects that are members of the group. For more information, see the adschema \"Group\" class topic in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).       When the AttributeScopeQuery property is used, the <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> property must be set to <xref:System.DirectoryServices.SearchScope>. If the <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> property is set to any other value, setting the AttributeScopeQuery property will throw an <xref:System.ArgumentException>.       For more information, see the \"Performing an Attribute Scope Query\" topic in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)).","needQuote":false,"needEscape":true,"nodes":[{"content":"The attribute that this property is set to must be a distinguished name attribute, such as member or managedBy.","pos":[0,111]},{"content":"The attribute can be either single or multi-valued.","pos":[112,163]},{"content":"For more information, see the adschema topics \"<bpt id=\"p1\">[</bpt>Member<ept id=\"p1\">](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_member.asp)</ept>\" and \"<bpt id=\"p2\">[</bpt>Managed-By<ept id=\"p2\">](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_managedby.asp)</ept>\" in the MSDN Library at <bpt id=\"p3\">[</bpt>http://msdn.microsoft.com/library<ept id=\"p3\">](http://msdn.microsoft.com/library)</ept>.","pos":[164,531],"source":" For more information, see the adschema topics \"[Member](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_member.asp)\" and \"[Managed-By](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_managedby.asp)\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."},{"content":"The search is performed against the objects that are identified by the distinguished name that is specified in the attribute of the base object.","pos":[538,682]},{"content":"For example, if the base object is an adschema group class and the AttributeScopeQuery is set to \"member,\" then the search will be performed against all objects that are members of the group.","pos":[683,874]},{"content":"For more information, see the adschema \"Group\" class topic in the MSDN Library at <bpt id=\"p1\">[</bpt>http://msdn.microsoft.com/library<ept id=\"p1\">](http://msdn.microsoft.com/library)</ept>.","pos":[875,1028],"source":" For more information, see the adschema \"Group\" class topic in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."},{"content":"When the AttributeScopeQuery property is used, the &lt;xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A&gt; property must be set to &lt;xref:System.DirectoryServices.SearchScope&gt;.","pos":[1035,1219],"source":"       When the AttributeScopeQuery property is used, the <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> property must be set to <xref:System.DirectoryServices.SearchScope>."},{"content":"If the &lt;xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A&gt; property is set to any other value, setting the AttributeScopeQuery property will throw an &lt;xref:System.ArgumentException&gt;.","pos":[1220,1415],"source":" If the <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> property is set to any other value, setting the AttributeScopeQuery property will throw an <xref:System.ArgumentException>."},{"content":"For more information, see the \"Performing an Attribute Scope Query\" topic in the MSDN Library at <bpt id=\"p1\">[</bpt>http://msdn.microsoft.com/library<ept id=\"p1\">](http://msdn.microsoft.com/library)</ept>).","pos":[1422,1591],"source":"       For more information, see the \"Performing an Attribute Scope Query\" topic in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library))."}]},{"pos":[26117,26241],"content":"The LDAP display name of the attribute to perform the search against, or an empty string of no attribute scope query is set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The LDAP display name of the attribute to perform the search against, or an empty string of no attribute scope query is set.","pos":[0,124]}]},{"pos":[26426,26589],"content":"The &lt;xref:System.DirectoryServices.DirectorySearcher.SearchScope*&gt; property is set to a value other than <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.SearchScope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.DirectoryServices.DirectorySearcher.SearchScope*> property is set to a value other than <xref href=\"System.DirectoryServices.SearchScope\"></xref>."},{"pos":[27013,27097],"content":"Gets or sets a value indicating whether the result is cached on the client computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the result is cached on the client computer.","pos":[0,84]}]},{"pos":[27109,27490],"content":"If the search returns a large result set, the search will be more efficient if this property is set to `false` to avoid the transfer of the result set to the client computer.  If you do so, however, you will not be able to enumerate the results twice, because the <xref:System.DirectoryServices.SearchResultCollection> object creates a new enumerator object each time it is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the search returns a large result set, the search will be more efficient if this property is set to <ph id=\"ph1\">`false`</ph> to avoid the transfer of the result set to the client computer.","pos":[0,174],"source":"If the search returns a large result set, the search will be more efficient if this property is set to `false` to avoid the transfer of the result set to the client computer."},{"content":"If you do so, however, you will not be able to enumerate the results twice, because the &lt;xref:System.DirectoryServices.SearchResultCollection&gt; object creates a new enumerator object each time it is called.","pos":[176,381],"source":"  If you do so, however, you will not be able to enumerate the results twice, because the <xref:System.DirectoryServices.SearchResultCollection> object creates a new enumerator object each time it is called."}]},{"pos":[27611,27871],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the result is cached on the client computer; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the result is cached on the client computer; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,183],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the result is cached on the client computer; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[184,260],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[28386,28581],"content":"Gets or sets the maximum amount of time that the client waits for the server to return results. If the server does not respond within this time, the search is aborted and no results are returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum amount of time that the client waits for the server to return results. If the server does not respond within this time, the search is aborted and no results are returned.","pos":[0,195],"nodes":[{"content":"Gets or sets the maximum amount of time that the client waits for the server to return results.","pos":[0,95]},{"content":"If the server does not respond within this time, the search is aborted and no results are returned.","pos":[96,195]}]}]},{"pos":[28594,28913],"content":"The minimum resolution of this property is one second. Fractions of seconds are ignored.       If the <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> is reached before the client times out, the server returns its results and the client stops waiting. The maximum server time limit is 120 seconds.","needQuote":false,"needEscape":true,"nodes":[{"content":"The minimum resolution of this property is one second. Fractions of seconds are ignored.       If the <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> is reached before the client times out, the server returns its results and the client stops waiting. The maximum server time limit is 120 seconds.","pos":[0,317],"nodes":[{"content":"The minimum resolution of this property is one second.","pos":[0,54]},{"content":"Fractions of seconds are ignored.","pos":[55,88]},{"content":"If the &lt;xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A&gt; is reached before the client times out, the server returns its results and the client stops waiting.","pos":[95,271],"source":"       If the <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> is reached before the client times out, the server returns its results and the client stops waiting."},{"content":"The maximum server time limit is 120 seconds.","pos":[272,317]}]}]},{"pos":[29042,29248],"content":"A <xref:System.TimeSpan> structure that contains the maximum amount of time for the client to wait for the server to return results.       The default value is -1 second, which means to wait indefinitely.","needQuote":false,"needEscape":true,"nodes":[{"content":"A <xref:System.TimeSpan> structure that contains the maximum amount of time for the client to wait for the server to return results.       The default value is -1 second, which means to wait indefinitely.","pos":[0,204],"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; structure that contains the maximum amount of time for the client to wait for the server to return results.","pos":[0,132],"source":"A <xref:System.TimeSpan> structure that contains the maximum amount of time for the client to wait for the server to return results."},{"content":"The default value is -1 second, which means to wait indefinitely.","pos":[139,204]}]}]},{"pos":[29750,29859],"content":"Gets or sets a value indicating how the aliases of objects that are found during a search should be resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating how the aliases of objects that are found during a search should be resolved.","pos":[0,109]}]},{"pos":[30748,30986],"content":"A <xref href=\"System.DirectoryServices.DereferenceAlias\"></xref> value that specifies the behavior in which aliases are dereferenced. The default setting for this property is <xref href=\"System.DirectoryServices.DereferenceAlias\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DereferenceAlias\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that specifies the behavior in which aliases are dereferenced.","pos":[0,133],"source":"A <xref href=\"System.DirectoryServices.DereferenceAlias\"></xref> value that specifies the behavior in which aliases are dereferenced."},{"content":"The default setting for this property is <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DereferenceAlias\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[134,238],"source":" The default setting for this property is <xref href=\"System.DirectoryServices.DereferenceAlias\"></xref>."}]},{"pos":[31554,31654],"content":"Gets or sets an object that represents the directory synchronization control to use with the search.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets an object that represents the directory synchronization control to use with the search.","pos":[0,100]}]},{"pos":[31667,32159],"content":"The directory synchronization control, commonly referred to as the DirSync control, is an LDAP control that is used to search for objects that have changed since a previous state.       For more information, see the topic \"[Polling for Changes Using the DirSync Control](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ad/ad/polling_for_changes_using_the_dirsync_control.asp)\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).","needQuote":false,"needEscape":true,"nodes":[{"content":"The directory synchronization control, commonly referred to as the DirSync control, is an LDAP control that is used to search for objects that have changed since a previous state.","pos":[0,179]},{"content":"For more information, see the topic \"<bpt id=\"p1\">[</bpt>Polling for Changes Using the DirSync Control<ept id=\"p1\">](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ad/ad/polling_for_changes_using_the_dirsync_control.asp)</ept>\" in the MSDN Library at <bpt id=\"p2\">[</bpt>http://msdn.microsoft.com/library<ept id=\"p2\">](http://msdn.microsoft.com/library)</ept>.","pos":[186,488],"source":"       For more information, see the topic \"[Polling for Changes Using the DirSync Control](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ad/ad/polling_for_changes_using_the_dirsync_control.asp)\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."}]},{"pos":[32373,32592],"content":"The <xref href=\"System.DirectoryServices.DirectorySynchronization\"></xref> object for the search. <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the directory synchronization control should not be used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectorySynchronization\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the search.","pos":[0,97],"source":"The <xref href=\"System.DirectoryServices.DirectorySynchronization\"></xref> object for the search."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the directory synchronization control should not be used.","pos":[98,219],"source":"<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the directory synchronization control should not be used."}]},{"pos":[33146,33315],"content":"Releases the managed resources that are used by the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectorySearcher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and, optionally, releases unmanaged resources.","needQuote":true,"needEscape":true,"source":"Releases the managed resources that are used by the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> object and, optionally, releases unmanaged resources."},{"pos":[33471,33697],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this method releases both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if it releases only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method releases both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it releases only unmanaged resources."},{"pos":[34192,34266],"content":"Gets or sets a value that indicates the format of the distinguished names.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates the format of the distinguished names.","pos":[0,74]}]},{"pos":[34846,34921],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ExtendedDN\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.DirectoryServices.ExtendedDN\"></xref> values."},{"pos":[35399,35501],"content":"Gets or sets a value indicating the Lightweight Directory Access Protocol (LDAP) format filter string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating the Lightweight Directory Access Protocol (LDAP) format filter string.","pos":[0,102]}]},{"pos":[37412,37545],"content":"The search filter string in LDAP format, such as \"(objectClass=user)\". The default is \"(objectClass=*)\", which retrieves all objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The search filter string in LDAP format, such as \"(objectClass=user)\". The default is \"(objectClass=*)\", which retrieves all objects.","pos":[0,133],"nodes":[{"content":"The search filter string in LDAP format, such as \"(objectClass=user)\".","pos":[0,70]},{"content":"The default is \"(objectClass=*)\", which retrieves all objects.","pos":[71,133]}]}]},{"pos":[38028,38103],"content":"Executes the search and returns a collection of the entries that are found.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes the search and returns a collection of the entries that are found.","pos":[0,75]}]},{"pos":[38115,38500],"content":"Due to implementation restrictions, the <xref:System.DirectoryServices.SearchResultCollection> class cannot release all of its unmanaged resources when it is garbage collected. To prevent a memory leak, you must call the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method when the <xref:System.DirectoryServices.SearchResultCollection> object is no longer needed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Due to implementation restrictions, the <xref:System.DirectoryServices.SearchResultCollection> class cannot release all of its unmanaged resources when it is garbage collected. To prevent a memory leak, you must call the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method when the <xref:System.DirectoryServices.SearchResultCollection> object is no longer needed.","pos":[0,385],"nodes":[{"content":"Due to implementation restrictions, the &lt;xref:System.DirectoryServices.SearchResultCollection&gt; class cannot release all of its unmanaged resources when it is garbage collected.","pos":[0,176],"source":"Due to implementation restrictions, the <xref:System.DirectoryServices.SearchResultCollection> class cannot release all of its unmanaged resources when it is garbage collected."},{"content":"To prevent a memory leak, you must call the &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt; method when the &lt;xref:System.DirectoryServices.SearchResultCollection&gt; object is no longer needed.","pos":[177,385],"source":" To prevent a memory leak, you must call the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method when the <xref:System.DirectoryServices.SearchResultCollection> object is no longer needed."}]}]},{"pos":[38701,38819],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.SearchResultCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the results of the search.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.SearchResultCollection\"></xref> object that contains the results of the search."},{"pos":[39008,39102],"content":"The specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not a container.","needQuote":true,"needEscape":true,"source":"The specified <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> is not a container."},{"pos":[39205,39267],"content":"Searching is not supported by the provider that is being used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Searching is not supported by the provider that is being used.","pos":[0,62]}]},{"pos":[39670,39737],"content":"Executes the search and returns only the first entry that is found.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes the search and returns only the first entry that is found.","pos":[0,67]}]},{"pos":[39749,39945],"content":"If more than one entry is found during the search, only the first entry is returned. If no entries are found to match the search criteria, a null reference (`Nothing` in Visual Basic) is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"If more than one entry is found during the search, only the first entry is returned.","pos":[0,84]},{"content":"If no entries are found to match the search criteria, a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic) is returned.","pos":[85,196],"source":" If no entries are found to match the search criteria, a null reference (`Nothing` in Visual Basic) is returned."}]},{"pos":[40126,40256],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.SearchResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the first entry that is found during the search.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.SearchResult\"></xref> object that contains the first entry that is found during the search."},{"pos":[40741,40805],"content":"Gets or sets a value indicating the page size in a paged search.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating the page size in a paged search.","pos":[0,64]}]},{"pos":[40817,41061],"content":"After the server has found the number of objects that are specified by the PageSize property, it will stop searching and return the results to the client. When the client requests more data, the server will restart the search where it left off.","needQuote":true,"needEscape":true,"nodes":[{"content":"After the server has found the number of objects that are specified by the PageSize property, it will stop searching and return the results to the client. When the client requests more data, the server will restart the search where it left off.","pos":[0,244],"nodes":[{"content":"After the server has found the number of objects that are specified by the PageSize property, it will stop searching and return the results to the client.","pos":[0,154]},{"content":"When the client requests more data, the server will restart the search where it left off.","pos":[155,244]}]}]},{"pos":[41175,41304],"content":"The maximum number of objects the server can return in a paged search. The default is zero, which means do not do a paged search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of objects the server can return in a paged search. The default is zero, which means do not do a paged search.","pos":[0,129],"nodes":[{"content":"The maximum number of objects the server can return in a paged search.","pos":[0,70]},{"content":"The default is zero, which means do not do a paged search.","pos":[71,129]}]}]},{"pos":[41478,41510],"content":"The new value is less than zero.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new value is less than zero.","pos":[0,32]}]},{"pos":[41954,42031],"content":"Gets a value indicating the list of properties to retrieve during the search.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating the list of properties to retrieve during the search.","pos":[0,77]}]},{"pos":[42044,42824],"content":"To retrieve specific properties, add them to this collection before you begin the search. For example, `searcher.PropertiesToLoad.Add(\"phone\");` will add the phone property to the list of properties to retrieve in the search.       The property \"ADsPath\" is always retrieved during the search. On [!INCLUDE[Win2kFamily](~/add/includes/win2kfamily-md.md)] and earlier operating systems, the account that performs the search must be a member of the Administrators group to retrieve the ntSecurityDescriptor property. If this is not the case, the property value that is returned for ntSecurityDescriptor will be `null`. For more information, see the topic \"NT-Security-Descriptor\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).","needQuote":false,"needEscape":true,"nodes":[{"content":"To retrieve specific properties, add them to this collection before you begin the search.","pos":[0,89]},{"content":"For example, <ph id=\"ph1\">`searcher.PropertiesToLoad.Add(\"phone\");`</ph> will add the phone property to the list of properties to retrieve in the search.","pos":[90,225],"source":" For example, `searcher.PropertiesToLoad.Add(\"phone\");` will add the phone property to the list of properties to retrieve in the search."},{"content":"The property \"ADsPath\" is always retrieved during the search.","pos":[232,293]},{"content":"On <ph id=\"ph1\">[!INCLUDE[Win2kFamily](~/add/includes/win2kfamily-md.md)]</ph> and earlier operating systems, the account that performs the search must be a member of the Administrators group to retrieve the ntSecurityDescriptor property.","pos":[294,514],"source":" On [!INCLUDE[Win2kFamily](~/add/includes/win2kfamily-md.md)] and earlier operating systems, the account that performs the search must be a member of the Administrators group to retrieve the ntSecurityDescriptor property."},{"content":"If this is not the case, the property value that is returned for ntSecurityDescriptor will be <ph id=\"ph1\">`null`</ph>.","pos":[515,616],"source":" If this is not the case, the property value that is returned for ntSecurityDescriptor will be `null`."},{"content":"For more information, see the topic \"NT-Security-Descriptor\" in the MSDN Library at <bpt id=\"p1\">[</bpt>http://msdn.microsoft.com/library<ept id=\"p1\">](http://msdn.microsoft.com/library)</ept>.","pos":[617,772],"source":" For more information, see the topic \"NT-Security-Descriptor\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."}]},{"pos":[43022,43304],"content":"A <xref href=\"System.Collections.Specialized.StringCollection\"></xref> object that contains the set of properties to retrieve during the search.       The default is an empty <xref href=\"System.Collections.Specialized.StringCollection\"></xref>, which retrieves all properties.","needQuote":false,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the set of properties to retrieve during the search.","pos":[0,144],"source":"A <xref href=\"System.Collections.Specialized.StringCollection\"></xref> object that contains the set of properties to retrieve during the search."},{"content":"The default is an empty <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which retrieves all properties.","pos":[151,276],"source":"       The default is an empty <xref href=\"System.Collections.Specialized.StringCollection\"></xref>, which retrieves all properties."}]},{"pos":[43844,43969],"content":"Gets or sets a value indicating whether the search retrieves only the names of attributes to which values have been assigned.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the search retrieves only the names of attributes to which values have been assigned.","pos":[0,125]}]},{"pos":[44095,44467],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the search obtains only the names of attributes to which values have been assigned; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the search obtains the names and values for all the requested attributes. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the search obtains only the names of attributes to which values have been assigned; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the search obtains the names and values for all the requested attributes.","pos":[0,287],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the search obtains only the names of attributes to which values have been assigned; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the search obtains the names and values for all the requested attributes."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[288,372],"source":" The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[44997,45054],"content":"Gets or sets a value indicating how referrals are chased.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating how referrals are chased.","pos":[0,57]}]},{"pos":[45066,45357],"content":"If the root search is not specified in the naming context of the server or when the search results cross a naming context (for example, when you have child domains and search in the parent domain), the server sends a referral message to the client that the client can either ignore or chase.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the root search is not specified in the naming context of the server or when the search results cross a naming context (for example, when you have child domains and search in the parent domain), the server sends a referral message to the client that the client can either ignore or chase.","pos":[0,291]}]},{"pos":[45555,45725],"content":"One of the <xref href=\"System.DirectoryServices.ReferralChasingOption\"></xref> values. The default is <xref href=\"System.DirectoryServices.ReferralChasingOption\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ReferralChasingOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,86],"source":"One of the <xref href=\"System.DirectoryServices.ReferralChasingOption\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ReferralChasingOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[87,170],"source":" The default is <xref href=\"System.DirectoryServices.ReferralChasingOption\"></xref>."}]},{"pos":[45958,46061],"content":"The value is not one of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ReferralChasingOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The value is not one of the <xref href=\"System.DirectoryServices.ReferralChasingOption\"></xref> values."},{"pos":[46475,46590],"content":"Gets or sets a value indicating the node in the Active Directory Domain Services hierarchy where the search starts.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating the node in the Active Directory Domain Services hierarchy where the search starts.","pos":[0,115]}]},{"pos":[46603,47744],"content":"If SearchRoot is a null reference (`Nothing` in Visual Basic), the search root is set to the root of the domain that your server is currently using.       There are several ways to search in the global catalog:      -   Enumerate the global catalog and pick the first child.      -   Specify the server name. Use the DsGetDcName function to find the global catalog.  For more information on the DsGetDcName function, see the topic \"DsGetDcName\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).      -   Get the RootDSE  of the global catalog and ask for \"rootNamingContext\".      -   Use the global catalog, specifying a search path as if using LDAP. For example, \"GC://OU=..., DC=..., DC=...\".      -   The following C# code shows how to enumerate the global catalog and pick the first child.          ```c#       DirectoryEntry entry = new DirectoryEntry(\"GC://forestname\");       IEnumerator ie = entry.Children.GetEnumerator();       ie.MoveNext();       entry = (DirectoryEntry)ie.Current;       DirectorySearcher search = new DirectorySearcher(entry);       ```","needQuote":false,"needEscape":true,"nodes":[{"content":"If SearchRoot is a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic), the search root is set to the root of the domain that your server is currently using.","pos":[0,148],"source":"If SearchRoot is a null reference (`Nothing` in Visual Basic), the search root is set to the root of the domain that your server is currently using."},{"content":"There are several ways to search in the global catalog:      -   Enumerate the global catalog and pick the first child.","pos":[155,274]},{"content":"-   Specify the server name.","pos":[280,308]},{"content":"Use the DsGetDcName function to find the global catalog.","pos":[309,365]},{"content":"For more information on the DsGetDcName function, see the topic \"DsGetDcName\" in the MSDN Library at <bpt id=\"p1\">[</bpt>http://msdn.microsoft.com/library<ept id=\"p1\">](http://msdn.microsoft.com/library)</ept>.","pos":[367,539],"source":"  For more information on the DsGetDcName function, see the topic \"DsGetDcName\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."},{"content":"-   Get the RootDSE  of the global catalog and ask for \"rootNamingContext\".","pos":[545,620]},{"content":"-   Use the global catalog, specifying a search path as if using LDAP.","pos":[626,696]},{"content":"For example, \"GC://OU=..., DC=..., DC=...\".","pos":[697,740]},{"content":"-   The following C# code shows how to enumerate the global catalog and pick the first child.","pos":[746,839]}]},{"pos":[47924,48188],"content":"The <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object in the Active Directory Domain Services hierarchy where the search starts. The default is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object in the Active Directory Domain Services hierarchy where the search starts.","pos":[0,146],"source":"The <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object in the Active Directory Domain Services hierarchy where the search starts."},{"content":"The default is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","pos":[147,264],"source":" The default is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."}]},{"pos":[48691,48778],"content":"Gets or sets a value indicating the scope of the search that is observed by the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating the scope of the search that is observed by the server.","pos":[0,87]}]},{"pos":[48952,49102],"content":"One of the <xref href=\"System.DirectoryServices.SearchScope\"></xref> values. The default is <xref href=\"System.DirectoryServices.SearchScope\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.SearchScope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,76],"source":"One of the <xref href=\"System.DirectoryServices.SearchScope\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.SearchScope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[77,150],"source":" The default is <xref href=\"System.DirectoryServices.SearchScope\"></xref>."}]},{"pos":[49331,49434],"content":"The value is not one of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ReferralChasingOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The value is not one of the <xref href=\"System.DirectoryServices.ReferralChasingOption\"></xref> values."},{"pos":[49863,49991],"content":"Gets or sets a value indicating which security access information for the specified attributes should be returned by the search.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating which security access information for the specified attributes should be returned by the search.","pos":[0,128]}]},{"pos":[50495,50573],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.SecurityMasks\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.DirectoryServices.SecurityMasks\"></xref> values."},{"pos":[51119,51299],"content":"Gets or sets a value indicating the maximum amount of time the server should search for an individual page of results. This is not the same as the time limit for the entire search.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating the maximum amount of time the server should search for an individual page of results. This is not the same as the time limit for the entire search.","pos":[0,180],"nodes":[{"content":"Gets or sets a value indicating the maximum amount of time the server should search for an individual page of results.","pos":[0,118]},{"content":"This is not the same as the time limit for the entire search.","pos":[119,180]}]}]},{"pos":[51312,51788],"content":"The minimum resolution of this property is one second. Fractions of seconds are ignored.       When the time limit is reached, the server stops searching and returns the results that have accumulated up to that point, along with a cookie containing the information about where to resume searching.      > [!NOTE] >  This property only applies to searches where <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> is set to a value that is not the default of -1.","needQuote":false,"needEscape":true,"nodes":[{"content":"The minimum resolution of this property is one second.","pos":[0,54]},{"content":"Fractions of seconds are ignored.","pos":[55,88]},{"content":"When the time limit is reached, the server stops searching and returns the results that have accumulated up to that point, along with a cookie containing the information about where to resume searching.","pos":[95,297]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This property only applies to searches where &lt;xref:System.DirectoryServices.DirectorySearcher.PageSize%2A&gt; is set to a value that is not the default of -1.","pos":[303,471],"source":"      > [!NOTE] >  This property only applies to searches where <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> is set to a value that is not the default of -1."}]},{"pos":[51923,52107],"content":"A <xref:System.TimeSpan> that represents the amount of time the server should search for a page of results.       The default value is -1 seconds, which means to search indefinitely.","needQuote":false,"needEscape":true,"nodes":[{"content":"A <xref:System.TimeSpan> that represents the amount of time the server should search for a page of results.       The default value is -1 seconds, which means to search indefinitely.","pos":[0,182],"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that represents the amount of time the server should search for a page of results.","pos":[0,107],"source":"A <xref:System.TimeSpan> that represents the amount of time the server should search for a page of results."},{"content":"The default value is -1 seconds, which means to search indefinitely.","pos":[114,182]}]}]},{"pos":[52640,52845],"content":"The ServerTimeLimit property gets or sets a value indicating the maximum amount of time the server spends searching. If the time limit is reached, only entries that are found up to that point are returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ServerTimeLimit property gets or sets a value indicating the maximum amount of time the server spends searching. If the time limit is reached, only entries that are found up to that point are returned.","pos":[0,205],"nodes":[{"content":"The ServerTimeLimit property gets or sets a value indicating the maximum amount of time the server spends searching.","pos":[0,116]},{"content":"If the time limit is reached, only entries that are found up to that point are returned.","pos":[117,205]}]}]},{"pos":[52858,53611],"content":"The minimum resolution of this property is one second. Fractions of seconds are ignored.       Unlike the <xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A> property, the ServerTimeLimit property indicates the total amount of time that the server will spend on a search. When the time limit is reached, the server stops searching and returns the results that have accumulated up to that point.       Set ServerTimeLimit to -1 second to use the server-determined default.      > [!NOTE] >  If you set ServerTimeLimit to a value that is larger than the server-determined default of 120 seconds, the server-determined default is used. After the server time limit is reached, you cannot continue a search from where it left off.","needQuote":false,"needEscape":true,"nodes":[{"content":"The minimum resolution of this property is one second.","pos":[0,54]},{"content":"Fractions of seconds are ignored.","pos":[55,88]},{"content":"Unlike the &lt;xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A&gt; property, the ServerTimeLimit property indicates the total amount of time that the server will spend on a search.","pos":[95,292],"source":"       Unlike the <xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A> property, the ServerTimeLimit property indicates the total amount of time that the server will spend on a search."},{"content":"When the time limit is reached, the server stops searching and returns the results that have accumulated up to that point.","pos":[293,415]},{"content":"Set ServerTimeLimit to -1 second to use the server-determined default.","pos":[422,492]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If you set ServerTimeLimit to a value that is larger than the server-determined default of 120 seconds, the server-determined default is used.","pos":[498,653],"source":"      > [!NOTE] >  If you set ServerTimeLimit to a value that is larger than the server-determined default of 120 seconds, the server-determined default is used."},{"content":"After the server time limit is reached, you cannot continue a search from where it left off.","pos":[654,746]}]},{"pos":[53742,53938],"content":"A <xref:System.TimeSpan> that represents the amount of time that the server should search.       The default value is -1 seconds, which means to use the server-determined default of 120 seconds.","needQuote":false,"needEscape":true,"nodes":[{"content":"A <xref:System.TimeSpan> that represents the amount of time that the server should search.       The default value is -1 seconds, which means to use the server-determined default of 120 seconds.","pos":[0,194],"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that represents the amount of time that the server should search.","pos":[0,90],"source":"A <xref:System.TimeSpan> that represents the amount of time that the server should search."},{"content":"The default value is -1 seconds, which means to use the server-determined default of 120 seconds.","pos":[97,194]}]}]},{"pos":[54437,54535],"content":"Gets or sets a value indicating the maximum number of objects that the server returns in a search.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating the maximum number of objects that the server returns in a search.","pos":[0,98]}]},{"pos":[54548,54819],"content":"The server stops searching after the size limit is reached and returns the results accumulated up to that point.      > [!NOTE] >  If you set SizeLimit to a value that is larger than the server-determined default of 1000 entries, the server-determined default is used.","needQuote":false,"needEscape":true,"nodes":[{"content":"The server stops searching after the size limit is reached and returns the results accumulated up to that point.","pos":[0,112]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If you set SizeLimit to a value that is larger than the server-determined default of 1000 entries, the server-determined default is used.","pos":[118,268],"source":"      > [!NOTE] >  If you set SizeLimit to a value that is larger than the server-determined default of 1000 entries, the server-determined default is used."}]},{"pos":[54935,55105],"content":"The maximum number of objects that the server returns in a search. The default value is zero, which means to use the server-determined default size limit of 1000 entries.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of objects that the server returns in a search. The default value is zero, which means to use the server-determined default size limit of 1000 entries.","pos":[0,170],"nodes":[{"content":"The maximum number of objects that the server returns in a search.","pos":[0,66]},{"content":"The default value is zero, which means to use the server-determined default size limit of 1000 entries.","pos":[67,170]}]}]},{"pos":[55280,55312],"content":"The new value is less than zero.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new value is less than zero.","pos":[0,32]}]},{"pos":[55696,55773],"content":"Gets or sets a value indicating the property on which the results are sorted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating the property on which the results are sorted.","pos":[0,77]}]},{"pos":[55938,56090],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.SortOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies the property and direction that the search results should be sorted on.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.SortOption\"></xref> object that specifies the property and direction that the search results should be sorted on."},{"pos":[56268,56377],"content":"The property value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> (Nothing in Visual Basic).","needQuote":true,"needEscape":true,"source":"The property value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> (Nothing in Visual Basic)."},{"pos":[56786,56901],"content":"Gets or sets a value indicating whether the search should also return deleted objects that match the search filter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the search should also return deleted objects that match the search filter.","pos":[0,115]}]},{"pos":[57469,57741],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if deleted objects should be included in the search; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if deleted objects should be included in the search; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> otherwise.","pos":[0,187],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if deleted objects should be included in the search; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[188,272],"source":" The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[58263,58340],"content":"Gets or sets a value indicating the virtual list view options for the search.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating the virtual list view options for the search.","pos":[0,77]}]},{"pos":[58544,58840],"content":"A <xref href=\"System.DirectoryServices.DirectoryVirtualListView\"></xref> object that contains the virtual list view search information. The default value for this property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which means do not use the virtual list view search option.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryVirtualListView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the virtual list view search information.","pos":[0,135],"source":"A <xref href=\"System.DirectoryServices.DirectoryVirtualListView\"></xref> object that contains the virtual list view search information."},{"content":"The default value for this property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which means do not use the virtual list view search option.","pos":[136,296],"source":" The default value for this property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which means do not use the virtual list view search option."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.DirectorySearcher\n  id: DirectorySearcher\n  children:\n  - System.DirectoryServices.DirectorySearcher.#ctor\n  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)\n  - System.DirectoryServices.DirectorySearcher.#ctor(System.String)\n  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)\n  - System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])\n  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])\n  - System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)\n  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)\n  - System.DirectoryServices.DirectorySearcher.Asynchronous\n  - System.DirectoryServices.DirectorySearcher.AttributeScopeQuery\n  - System.DirectoryServices.DirectorySearcher.CacheResults\n  - System.DirectoryServices.DirectorySearcher.ClientTimeout\n  - System.DirectoryServices.DirectorySearcher.DerefAlias\n  - System.DirectoryServices.DirectorySearcher.DirectorySynchronization\n  - System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)\n  - System.DirectoryServices.DirectorySearcher.ExtendedDN\n  - System.DirectoryServices.DirectorySearcher.Filter\n  - System.DirectoryServices.DirectorySearcher.FindAll\n  - System.DirectoryServices.DirectorySearcher.FindOne\n  - System.DirectoryServices.DirectorySearcher.PageSize\n  - System.DirectoryServices.DirectorySearcher.PropertiesToLoad\n  - System.DirectoryServices.DirectorySearcher.PropertyNamesOnly\n  - System.DirectoryServices.DirectorySearcher.ReferralChasing\n  - System.DirectoryServices.DirectorySearcher.SearchRoot\n  - System.DirectoryServices.DirectorySearcher.SearchScope\n  - System.DirectoryServices.DirectorySearcher.SecurityMasks\n  - System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit\n  - System.DirectoryServices.DirectorySearcher.ServerTimeLimit\n  - System.DirectoryServices.DirectorySearcher.SizeLimit\n  - System.DirectoryServices.DirectorySearcher.Sort\n  - System.DirectoryServices.DirectorySearcher.Tombstone\n  - System.DirectoryServices.DirectorySearcher.VirtualListView\n  langs:\n  - csharp\n  name: DirectorySearcher\n  nameWithType: DirectorySearcher\n  fullName: System.DirectoryServices.DirectorySearcher\n  type: Class\n  summary: Performs queries against Active Directory Domain Services.\n  remarks: \"Use a DirectorySearcher object to search and perform queries against an Active Directory Domain Services hierarchy using Lightweight Directory Access Protocol (LDAP). LDAP is the only system-supplied Active Directory Service Interfaces (ADSI) provider that supports directory searching. An administrator can make, alter, and delete objects that are found in the hierarchy. For more information, see [Using System.DirectoryServices](http://msdn.microsoft.com/en-us/ffa2f003-3a9a-4e2a-815e-825c8ddd7949).  \\n  \\n When you create an instance of DirectorySearcher, you specify the root you want to retrieve, and an optional list of properties to retrieve. The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A> property enables you to set additional properties to do the following tasks:  \\n  \\n-   Cache the search results on the local computer. Set the <xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A> property to `true` to store directory information on the local computer. Updates are made to this local cache and committed to Active Directory Domain Services only when the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName> method is called.  \\n  \\n-   Specify the length of time to search, using the  <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> property.  \\n  \\n-   Retrieve attribute names only. Set the <xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A> property to `true` to retrieve only the names of attributes to which values have been assigned.  \\n  \\n-   Perform a paged search. Set the <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> property to specify the maximum number of objects that are returned in a paged search. If you do not want to perform a paged search, set the <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> property to its default of zero.  \\n  \\n-   Specify the maximum number of entries to return, using the <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> property. If you set the <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> property to its default of zero, the server-determined default is 1000 entries.  \\n  \\n> [!NOTE]\\n>  If the maximum number of returned entries and time limits exceed the limitations that are set on the server, the server settings override the component settings.  \\n  \\n For a list of initial property values for an instance of the DirectorySearcher class, see the <xref:System.DirectoryServices.DirectorySearcher.%23ctor> constructor.  \\n  \\n> [!NOTE]\\n>  It is assumed that you have a general understanding of Active Directory Domain Services before using this class. For more information, see the <xref:System.DirectoryServices?displayProperty=fullName> overview.\"\n  syntax:\n    content: >-\n      [System.DirectoryServices.DSDescription(\"DirectorySearcherDesc\")]\n\n      public class DirectorySearcher : System.ComponentModel.Component\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.#ctor\n  id: '#ctor'\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: DirectorySearcher()\n  nameWithType: DirectorySearcher.DirectorySearcher()\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher()\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> class with default values.\n  remarks: \"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object.  \\n  \\n|Property|Initial value|  \\n|--------------|-------------------|  \\n|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|A null reference (`Nothing` in Visual Basic)|  \\n|<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|\\\"(objectClass=*)\\\"|  \\n|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|An empty <xref:System.Collections.Specialized.StringCollection> object|  \\n|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|\"\n  syntax:\n    content: public DirectorySearcher ();\n    parameters: []\n  overload: System.DirectoryServices.DirectorySearcher.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)\n  id: '#ctor(System.DirectoryServices.DirectoryEntry)'\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: DirectorySearcher(DirectoryEntry)\n  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry)\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> class using the specified search root.\n  remarks: \"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object.  \\n  \\n|Property|Initial value|  \\n|--------------|-------------------|  \\n|<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|\\\"(objectClass=*)\\\"|  \\n|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|An empty <xref:System.Collections.Specialized.StringCollection> object|  \\n|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|\"\n  syntax:\n    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot);\n    parameters:\n    - id: searchRoot\n      type: System.DirectoryServices.DirectoryEntry\n      description: The node in the Active Directory Domain Services hierarchy where the search starts. The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*> property is initialized to this value.\n  overload: System.DirectoryServices.DirectorySearcher.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: DirectorySearcher(String)\n  nameWithType: DirectorySearcher.DirectorySearcher(String)\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> class with the specified search filter.\n  remarks: \"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object.  \\n  \\n|Property|Initial value|  \\n|--------------|-------------------|  \\n|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|A null reference (`Nothing` in Visual Basic)|  \\n|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|An empty <xref:System.Collections.Specialized.StringCollection> object|  \\n|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|\"\n  syntax:\n    content: public DirectorySearcher (string filter);\n    parameters:\n    - id: filter\n      type: System.String\n      description: The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.\n  overload: System.DirectoryServices.DirectorySearcher.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)\n  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String)'\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: DirectorySearcher(DirectoryEntry,String)\n  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String)\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> class with the specified search root and search filter.\n  remarks: \"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object.  \\n  \\n|Property|Initial value|  \\n|--------------|-------------------|  \\n|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|An empty <xref:System.Collections.Specialized.StringCollection> object.|  \\n|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|\"\n  syntax:\n    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter);\n    parameters:\n    - id: searchRoot\n      type: System.DirectoryServices.DirectoryEntry\n      description: The node in the Active Directory Domain Services hierarchy where the search starts. The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*> property is initialized to this value.\n    - id: filter\n      type: System.String\n      description: The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.\n  overload: System.DirectoryServices.DirectorySearcher.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])\n  id: '#ctor(System.String,System.String[])'\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: DirectorySearcher(String,String[])\n  nameWithType: DirectorySearcher.DirectorySearcher(String,String[])\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[])\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> class with the specified search filter and properties to retrieve.\n  remarks: \"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object.  \\n  \\n|Property|Initial value|  \\n|--------------|-------------------|  \\n|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|A null reference (`Nothing` in Visual Basic)|  \\n|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|\"\n  syntax:\n    content: public DirectorySearcher (string filter, string[] propertiesToLoad);\n    parameters:\n    - id: filter\n      type: System.String\n      description: The search filter string in Lightweight Directory Access Protocol (LDAP) format. The  <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.\n    - id: propertiesToLoad\n      type: System.String[]\n      description: The set of properties to retrieve during the search. The <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*> property is initialized to this value.\n  overload: System.DirectoryServices.DirectorySearcher.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])\n  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])'\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: DirectorySearcher(DirectoryEntry,String,String[])\n  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> class with the specified search root, search filter, and properties to retrieve..\n  remarks: \"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object.  \\n  \\n|Property|Initial value|  \\n|--------------|-------------------|  \\n|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|\"\n  syntax:\n    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad);\n    parameters:\n    - id: searchRoot\n      type: System.DirectoryServices.DirectoryEntry\n      description: The node in the Active Directory Domain Services hierarchy where the search starts. The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*> property is initialized to this value.\n    - id: filter\n      type: System.String\n      description: The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.\n    - id: propertiesToLoad\n      type: System.String[]\n      description: The set of properties that are retrieved during the search. The <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*> property is initialized to this value.\n  overload: System.DirectoryServices.DirectorySearcher.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)\n  id: '#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)'\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: DirectorySearcher(String,String[],SearchScope)\n  nameWithType: DirectorySearcher.DirectorySearcher(String,String[],SearchScope)\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[],SearchScope)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> class with the specified search filter, properties to retrieve, and search scope.\n  remarks: \"The following table shows the initial property values of the <xref:System.DirectoryServices.DirectorySearcher> object.  \\n  \\n|Property|Initial value|  \\n|--------------|-------------------|  \\n|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|A null reference (`Nothing` in Visual Basic)|\"\n  syntax:\n    content: public DirectorySearcher (string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);\n    parameters:\n    - id: filter\n      type: System.String\n      description: The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.\n    - id: propertiesToLoad\n      type: System.String[]\n      description: The set of properties to retrieve during the search. The <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*> property is initialized to this value.\n    - id: scope\n      type: System.DirectoryServices.SearchScope\n      description: The scope of the search that is observed by the server. The <xref href=\"System.DirectoryServices.SearchScope\"></xref> property is initialized to this value.\n  overload: System.DirectoryServices.DirectorySearcher.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)\n  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)'\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: DirectorySearcher(DirectoryEntry,String,String[],SearchScope)\n  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> class with the specified search root, search filter, properties to retrieve, and search scope.\n  syntax:\n    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);\n    parameters:\n    - id: searchRoot\n      type: System.DirectoryServices.DirectoryEntry\n      description: The node in the Active Directory Domain Services hierarchy where the search starts. The <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*> property is initialized to this value.\n    - id: filter\n      type: System.String\n      description: The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <xref:System.DirectoryServices.DirectorySearcher.Filter*> property is initialized to this value.\n    - id: propertiesToLoad\n      type: System.String[]\n      description: The set of properties to retrieve during the search. The <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*> property is initialized to this value.\n    - id: scope\n      type: System.DirectoryServices.SearchScope\n      description: The scope of the search that is observed by the server. The <xref href=\"System.DirectoryServices.SearchScope\"></xref> property is initialized to this value.\n  overload: System.DirectoryServices.DirectorySearcher.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.Asynchronous\n  id: Asynchronous\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: Asynchronous\n  nameWithType: DirectorySearcher.Asynchronous\n  fullName: System.DirectoryServices.DirectorySearcher.Asynchronous\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value that indicates if the search is performed asynchronously.\n  remarks: \"An asynchronous search can show results as they are found while simultaneously searching for additional results. This is useful for tasks such as populating list boxes.  \\n  \\n The default setting for this property is `false`.\"\n  example:\n  - \"The following C# example shows how to create an asynchronous search.  \\n  \\n```c#  \\nusing System.DirectoryServices;  \\n...  \\n// Bind to the users container.  \\nDirectoryEntry entry = new DirectoryEntry(\\\"LDAP://CN=users,DC=fabrikam,DC=com\\\");  \\n// Create a DirectorySearcher object.  \\nDirectorySearcher mySearcher = new DirectorySearcher(entry);  \\n//Set the Asynchronous property to true.  \\nsrc.Asynchronous = true;  \\n//Use the FindAll method to get search results.  \\nSearchResultCollection res = src.FindAll();  \\n  \\n```\"\n  syntax:\n    content: public bool Asynchronous { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the search is asynchronous; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise.\n  overload: System.DirectoryServices.DirectorySearcher.Asynchronous*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery\n  id: AttributeScopeQuery\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: AttributeScopeQuery\n  nameWithType: DirectorySearcher.AttributeScopeQuery\n  fullName: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets the LDAP display name of the distinguished name attribute to search in. Only one attribute can be used for this type of search.\n  remarks: \"The attribute that this property is set to must be a distinguished name attribute, such as member or managedBy. The attribute can be either single or multi-valued. For more information, see the adschema topics \\\"[Member](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_member.asp)\\\" and \\\"[Managed-By](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_managedby.asp)\\\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).  \\n  \\n The search is performed against the objects that are identified by the distinguished name that is specified in the attribute of the base object. For example, if the base object is an adschema group class and the AttributeScopeQuery is set to \\\"member,\\\" then the search will be performed against all objects that are members of the group. For more information, see the adschema \\\"Group\\\" class topic in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).  \\n  \\n When the AttributeScopeQuery property is used, the <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> property must be set to <xref:System.DirectoryServices.SearchScope>. If the <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> property is set to any other value, setting the AttributeScopeQuery property will throw an <xref:System.ArgumentException>.  \\n  \\n For more information, see the \\\"Performing an Attribute Scope Query\\\" topic in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)).\"\n  example:\n  - \"The following example shows how to use the AttributeScopeQuery property with the member attribute to get the members of a group. It then prints out the first and last names of the members and their telephone numbers.  \\n  \\n```c#  \\nusing System.DirectoryServices;  \\nDirectoryEntry group = new DirectoryEntry(\\\"LDAP://CN=MyGroup, …\\\");  \\nDirectorySearcher src = new DirectorySearcher(group \\\"(&(objectClass=user)(objectCategory=Person))\\\");  \\nsrc.AttributeScopedQuery = \\\"member\\\";  \\nsrc.PropertiesToLoad.Add(\\\"sn\\\");  \\nsrc.PropertiesToLoad.Add(\\\"givenName\\\");  \\nsrc.PropertiesToLoad.Add(\\\"telephoneNumber\\\");  \\nforeach(SearchResult res in src.FindAll())  \\n{  \\n    Console.WriteLine(\\\"…\\\");  \\n}  \\n```\"\n  syntax:\n    content: public string AttributeScopeQuery { get; set; }\n    return:\n      type: System.String\n      description: The LDAP display name of the attribute to perform the search against, or an empty string of no attribute scope query is set.\n  overload: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref:System.DirectoryServices.DirectorySearcher.SearchScope*> property is set to a value other than <xref href=\"System.DirectoryServices.SearchScope\"></xref>.\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.CacheResults\n  id: CacheResults\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: CacheResults\n  nameWithType: DirectorySearcher.CacheResults\n  fullName: System.DirectoryServices.DirectorySearcher.CacheResults\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value indicating whether the result is cached on the client computer.\n  remarks: If the search returns a large result set, the search will be more efficient if this property is set to `false` to avoid the transfer of the result set to the client computer.  If you do so, however, you will not be able to enumerate the results twice, because the <xref:System.DirectoryServices.SearchResultCollection> object creates a new enumerator object each time it is called.\n  syntax:\n    content: public bool CacheResults { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the result is cached on the client computer; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.DirectoryServices.DirectorySearcher.CacheResults*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout\n  id: ClientTimeout\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: ClientTimeout\n  nameWithType: DirectorySearcher.ClientTimeout\n  fullName: System.DirectoryServices.DirectorySearcher.ClientTimeout\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets the maximum amount of time that the client waits for the server to return results. If the server does not respond within this time, the search is aborted and no results are returned.\n  remarks: \"The minimum resolution of this property is one second. Fractions of seconds are ignored.  \\n  \\n If the <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> is reached before the client times out, the server returns its results and the client stops waiting. The maximum server time limit is 120 seconds.\"\n  syntax:\n    content: public TimeSpan ClientTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: \"A <xref:System.TimeSpan> structure that contains the maximum amount of time for the client to wait for the server to return results.  \\n  \\n The default value is -1 second, which means to wait indefinitely.\"\n  overload: System.DirectoryServices.DirectorySearcher.ClientTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.DerefAlias\n  id: DerefAlias\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: DerefAlias\n  nameWithType: DirectorySearcher.DerefAlias\n  fullName: System.DirectoryServices.DirectorySearcher.DerefAlias\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value indicating how the aliases of objects that are found during a search should be resolved.\n  remarks: ''\n  example:\n  - \"The following C# example shows how to set the DerefAlias property to <xref:System.DirectoryServices.DereferenceAlias> , so that it dereferences aliases when both searching subordinates and locating base objects.  \\n  \\n```  \\nusing System.DirectoryServices;  \\n...  \\n// Bind to the users container.  \\nDirectoryEntry entry = new DirectoryEntry(\\\"LDAP://CN=users,DC=fabrikam,DC=com\\\");  \\n// Create a DirectorySearcher object.  \\nDirectorySearcher mySearcher = new DirectorySearcher(entry);  \\n// Set DerefAlias to Always.  \\nsrc.DerefAlias = DerefenceAlias.Always;  \\n//Use the FindAll method to get search results.  \\nSearchResultCollection res = src.FindAll();  \\n  \\n```\"\n  syntax:\n    content: public System.DirectoryServices.DereferenceAlias DerefAlias { get; set; }\n    return:\n      type: System.DirectoryServices.DereferenceAlias\n      description: A <xref href=\"System.DirectoryServices.DereferenceAlias\"></xref> value that specifies the behavior in which aliases are dereferenced. The default setting for this property is <xref href=\"System.DirectoryServices.DereferenceAlias\"></xref>.\n  overload: System.DirectoryServices.DirectorySearcher.DerefAlias*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization\n  id: DirectorySynchronization\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: DirectorySynchronization\n  nameWithType: DirectorySearcher.DirectorySynchronization\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySynchronization\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets an object that represents the directory synchronization control to use with the search.\n  remarks: \"The directory synchronization control, commonly referred to as the DirSync control, is an LDAP control that is used to search for objects that have changed since a previous state.  \\n  \\n For more information, see the topic \\\"[Polling for Changes Using the DirSync Control](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ad/ad/polling_for_changes_using_the_dirsync_control.asp)\\\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).\"\n  syntax:\n    content: public System.DirectoryServices.DirectorySynchronization DirectorySynchronization { get; set; }\n    return:\n      type: System.DirectoryServices.DirectorySynchronization\n      description: The <xref href=\"System.DirectoryServices.DirectorySynchronization\"></xref> object for the search. <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the directory synchronization control should not be used.\n  overload: System.DirectoryServices.DirectorySearcher.DirectorySynchronization*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: DirectorySearcher.Dispose(Boolean)\n  fullName: System.DirectoryServices.DirectorySearcher.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Releases the managed resources that are used by the <xref href=\"System.DirectoryServices.DirectorySearcher\"></xref> object and, optionally, releases unmanaged resources.\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method releases both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it releases only unmanaged resources.\n  overload: System.DirectoryServices.DirectorySearcher.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN\n  id: ExtendedDN\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: ExtendedDN\n  nameWithType: DirectorySearcher.ExtendedDN\n  fullName: System.DirectoryServices.DirectorySearcher.ExtendedDN\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value that indicates the format of the distinguished names.\n  remarks: ''\n  example:\n  - \"The following example shows how to return a collection of distinguished names in hexadecimal format.  \\n  \\n```c#  \\nusing System.DirectoryServices;  \\n...  \\nDirectorySearcher src = new DirectorySearcher(\\\"…\\\");  \\nsrc.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  \\nsrc.ExtendedDN = ExtendedDN.HexString;  \\nSearchResultCollection res = src.FindAll();  \\n  \\n```\"\n  syntax:\n    content: public System.DirectoryServices.ExtendedDN ExtendedDN { get; set; }\n    return:\n      type: System.DirectoryServices.ExtendedDN\n      description: One of the <xref href=\"System.DirectoryServices.ExtendedDN\"></xref> values.\n  overload: System.DirectoryServices.DirectorySearcher.ExtendedDN*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.Filter\n  id: Filter\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: Filter\n  nameWithType: DirectorySearcher.Filter\n  fullName: System.DirectoryServices.DirectorySearcher.Filter\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value indicating the Lightweight Directory Access Protocol (LDAP) format filter string.\n  remarks: \"The filter uses the following guidelines:  \\n  \\n1.  The string must be enclosed in parentheses.  \\n  \\n2.  Expressions can use the relational operators: <, \\\\<=, =, >=, and >. An example is \\\"(objectClass=user)\\\". Another example is \\\"(lastName>=Davis)\\\".  \\n  \\n3.  Compound expressions are formed with the prefix operators & and &#124;. An example is \\\"(&(objectClass=user)(lastName= Davis))\\\". Another example is \\\"(&(objectClass=printer)(&#124;(building=42)(building=43)))\\\".  \\n  \\n When the filter contains an attribute of ADS_UTC_TIME type, its value must be of the yyyymmddhhmmssZ format where y, m, d, h, m, and s stand for year, month, day, hour, minute, and second, respectively. The seconds (ss) value is optional. The final letter Z means there is no time differential. In this format, \\\"10:20:00 A.M. May 13, 1999\\\" becomes \\\"19990513102000Z\\\". Note that Active Directory Domain Services stores date and time as Coordinated Universal Time (Greenwich Mean Time). If you specify a time with no time differential, you are specifying the time in GMT time.  \\n  \\n If you are not in the Coordinated Universal Time time zone, you can add a differential value to the Coordinated Universal Time (instead of specifying Z) to specify a time according to your time zone. The differential is based on the following: differential = Coordinated Universal Time- Local. To specify a differential, use the following format: yyyymmddhhmmss[+/-]hhmm. For example, \\\"8:52:58 P.M. March 23, 1999\\\" New Zealand Standard Time (the differential is 12 hours) is specified as \\\"19990323205258.0+1200\\\".  \\n  \\n For more information about the LDAP search string format, see \\\"Search Filter Syntax\\\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).\"\n  syntax:\n    content: public string Filter { get; set; }\n    return:\n      type: System.String\n      description: The search filter string in LDAP format, such as \"(objectClass=user)\". The default is \"(objectClass=*)\", which retrieves all objects.\n  overload: System.DirectoryServices.DirectorySearcher.Filter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.FindAll\n  id: FindAll\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: FindAll()\n  nameWithType: DirectorySearcher.FindAll()\n  fullName: System.DirectoryServices.DirectorySearcher.FindAll()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Executes the search and returns a collection of the entries that are found.\n  remarks: Due to implementation restrictions, the <xref:System.DirectoryServices.SearchResultCollection> class cannot release all of its unmanaged resources when it is garbage collected. To prevent a memory leak, you must call the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method when the <xref:System.DirectoryServices.SearchResultCollection> object is no longer needed.\n  syntax:\n    content: public System.DirectoryServices.SearchResultCollection FindAll ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.SearchResultCollection\n      description: A <xref href=\"System.DirectoryServices.SearchResultCollection\"></xref> object that contains the results of the search.\n  overload: System.DirectoryServices.DirectorySearcher.FindAll*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> is not a container.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Searching is not supported by the provider that is being used.\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.FindOne\n  id: FindOne\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: FindOne()\n  nameWithType: DirectorySearcher.FindOne()\n  fullName: System.DirectoryServices.DirectorySearcher.FindOne()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Executes the search and returns only the first entry that is found.\n  remarks: If more than one entry is found during the search, only the first entry is returned. If no entries are found to match the search criteria, a null reference (`Nothing` in Visual Basic) is returned.\n  syntax:\n    content: public System.DirectoryServices.SearchResult FindOne ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.SearchResult\n      description: A <xref href=\"System.DirectoryServices.SearchResult\"></xref> object that contains the first entry that is found during the search.\n  overload: System.DirectoryServices.DirectorySearcher.FindOne*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.PageSize\n  id: PageSize\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: PageSize\n  nameWithType: DirectorySearcher.PageSize\n  fullName: System.DirectoryServices.DirectorySearcher.PageSize\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value indicating the page size in a paged search.\n  remarks: After the server has found the number of objects that are specified by the PageSize property, it will stop searching and return the results to the client. When the client requests more data, the server will restart the search where it left off.\n  syntax:\n    content: public int PageSize { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of objects the server can return in a paged search. The default is zero, which means do not do a paged search.\n  overload: System.DirectoryServices.DirectorySearcher.PageSize*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The new value is less than zero.\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad\n  id: PropertiesToLoad\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: PropertiesToLoad\n  nameWithType: DirectorySearcher.PropertiesToLoad\n  fullName: System.DirectoryServices.DirectorySearcher.PropertiesToLoad\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets a value indicating the list of properties to retrieve during the search.\n  remarks: \"To retrieve specific properties, add them to this collection before you begin the search. For example, `searcher.PropertiesToLoad.Add(\\\"phone\\\");` will add the phone property to the list of properties to retrieve in the search.  \\n  \\n The property \\\"ADsPath\\\" is always retrieved during the search. On [!INCLUDE[Win2kFamily](~/add/includes/win2kfamily-md.md)] and earlier operating systems, the account that performs the search must be a member of the Administrators group to retrieve the ntSecurityDescriptor property. If this is not the case, the property value that is returned for ntSecurityDescriptor will be `null`. For more information, see the topic \\\"NT-Security-Descriptor\\\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).\"\n  syntax:\n    content: public System.Collections.Specialized.StringCollection PropertiesToLoad { get; }\n    return:\n      type: System.Collections.Specialized.StringCollection\n      description: \"A <xref href=\\\"System.Collections.Specialized.StringCollection\\\"></xref> object that contains the set of properties to retrieve during the search.  \\n  \\n The default is an empty <xref href=\\\"System.Collections.Specialized.StringCollection\\\"></xref>, which retrieves all properties.\"\n  overload: System.DirectoryServices.DirectorySearcher.PropertiesToLoad*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly\n  id: PropertyNamesOnly\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: PropertyNamesOnly\n  nameWithType: DirectorySearcher.PropertyNamesOnly\n  fullName: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value indicating whether the search retrieves only the names of attributes to which values have been assigned.\n  syntax:\n    content: public bool PropertyNamesOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the search obtains only the names of attributes to which values have been assigned; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the search obtains the names and values for all the requested attributes. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing\n  id: ReferralChasing\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: ReferralChasing\n  nameWithType: DirectorySearcher.ReferralChasing\n  fullName: System.DirectoryServices.DirectorySearcher.ReferralChasing\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value indicating how referrals are chased.\n  remarks: If the root search is not specified in the naming context of the server or when the search results cross a naming context (for example, when you have child domains and search in the parent domain), the server sends a referral message to the client that the client can either ignore or chase.\n  syntax:\n    content: public System.DirectoryServices.ReferralChasingOption ReferralChasing { get; set; }\n    return:\n      type: System.DirectoryServices.ReferralChasingOption\n      description: One of the <xref href=\"System.DirectoryServices.ReferralChasingOption\"></xref> values. The default is <xref href=\"System.DirectoryServices.ReferralChasingOption\"></xref>.\n  overload: System.DirectoryServices.DirectorySearcher.ReferralChasing*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value is not one of the <xref href=\"System.DirectoryServices.ReferralChasingOption\"></xref> values.\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.SearchRoot\n  id: SearchRoot\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: SearchRoot\n  nameWithType: DirectorySearcher.SearchRoot\n  fullName: System.DirectoryServices.DirectorySearcher.SearchRoot\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value indicating the node in the Active Directory Domain Services hierarchy where the search starts.\n  remarks: \"If SearchRoot is a null reference (`Nothing` in Visual Basic), the search root is set to the root of the domain that your server is currently using.  \\n  \\n There are several ways to search in the global catalog:  \\n  \\n-   Enumerate the global catalog and pick the first child.  \\n  \\n-   Specify the server name. Use the DsGetDcName function to find the global catalog.  For more information on the DsGetDcName function, see the topic \\\"DsGetDcName\\\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).  \\n  \\n-   Get the RootDSE  of the global catalog and ask for \\\"rootNamingContext\\\".  \\n  \\n-   Use the global catalog, specifying a search path as if using LDAP. For example, \\\"GC://OU=..., DC=..., DC=...\\\".  \\n  \\n-   The following C# code shows how to enumerate the global catalog and pick the first child.  \\n  \\n    ```c#  \\n    DirectoryEntry entry = new DirectoryEntry(\\\"GC://forestname\\\");  \\n    IEnumerator ie = entry.Children.GetEnumerator();  \\n    ie.MoveNext();  \\n    entry = (DirectoryEntry)ie.Current;  \\n    DirectorySearcher search = new DirectorySearcher(entry);  \\n    ```\"\n  syntax:\n    content: public System.DirectoryServices.DirectoryEntry SearchRoot { get; set; }\n    return:\n      type: System.DirectoryServices.DirectoryEntry\n      description: The <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object in the Active Directory Domain Services hierarchy where the search starts. The default is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  overload: System.DirectoryServices.DirectorySearcher.SearchRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.SearchScope\n  id: SearchScope\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: SearchScope\n  nameWithType: DirectorySearcher.SearchScope\n  fullName: System.DirectoryServices.DirectorySearcher.SearchScope\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value indicating the scope of the search that is observed by the server.\n  syntax:\n    content: public System.DirectoryServices.SearchScope SearchScope { get; set; }\n    return:\n      type: System.DirectoryServices.SearchScope\n      description: One of the <xref href=\"System.DirectoryServices.SearchScope\"></xref> values. The default is <xref href=\"System.DirectoryServices.SearchScope\"></xref>.\n  overload: System.DirectoryServices.DirectorySearcher.SearchScope*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value is not one of the <xref href=\"System.DirectoryServices.ReferralChasingOption\"></xref> values.\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks\n  id: SecurityMasks\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: SecurityMasks\n  nameWithType: DirectorySearcher.SecurityMasks\n  fullName: System.DirectoryServices.DirectorySearcher.SecurityMasks\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value indicating which security access information for the specified attributes should be returned by the search.\n  remarks: ''\n  example:\n  - \"```c#  \\nusing System.DirectoryServices;  \\n...  \\nDirectorySearcher src = new DirectorySearcher(\\\"…\\\");  \\nsrc.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  \\nsrc.SecurityMasks = SecurityMasks.Dacl | SecurityMasks.Owner;  \\nSearchResultCollection res = src.FindAll();  \\n  \\n```\"\n  syntax:\n    content: public System.DirectoryServices.SecurityMasks SecurityMasks { get; set; }\n    return:\n      type: System.DirectoryServices.SecurityMasks\n      description: One of the <xref href=\"System.DirectoryServices.SecurityMasks\"></xref> values.\n  overload: System.DirectoryServices.DirectorySearcher.SecurityMasks*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit\n  id: ServerPageTimeLimit\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: ServerPageTimeLimit\n  nameWithType: DirectorySearcher.ServerPageTimeLimit\n  fullName: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value indicating the maximum amount of time the server should search for an individual page of results. This is not the same as the time limit for the entire search.\n  remarks: \"The minimum resolution of this property is one second. Fractions of seconds are ignored.  \\n  \\n When the time limit is reached, the server stops searching and returns the results that have accumulated up to that point, along with a cookie containing the information about where to resume searching.  \\n  \\n> [!NOTE]\\n>  This property only applies to searches where <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> is set to a value that is not the default of -1.\"\n  syntax:\n    content: public TimeSpan ServerPageTimeLimit { get; set; }\n    return:\n      type: System.TimeSpan\n      description: \"A <xref:System.TimeSpan> that represents the amount of time the server should search for a page of results.  \\n  \\n The default value is -1 seconds, which means to search indefinitely.\"\n  overload: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit\n  id: ServerTimeLimit\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: ServerTimeLimit\n  nameWithType: DirectorySearcher.ServerTimeLimit\n  fullName: System.DirectoryServices.DirectorySearcher.ServerTimeLimit\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: The ServerTimeLimit property gets or sets a value indicating the maximum amount of time the server spends searching. If the time limit is reached, only entries that are found up to that point are returned.\n  remarks: \"The minimum resolution of this property is one second. Fractions of seconds are ignored.  \\n  \\n Unlike the <xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A> property, the ServerTimeLimit property indicates the total amount of time that the server will spend on a search. When the time limit is reached, the server stops searching and returns the results that have accumulated up to that point.  \\n  \\n Set ServerTimeLimit to -1 second to use the server-determined default.  \\n  \\n> [!NOTE]\\n>  If you set ServerTimeLimit to a value that is larger than the server-determined default of 120 seconds, the server-determined default is used. After the server time limit is reached, you cannot continue a search from where it left off.\"\n  syntax:\n    content: public TimeSpan ServerTimeLimit { get; set; }\n    return:\n      type: System.TimeSpan\n      description: \"A <xref:System.TimeSpan> that represents the amount of time that the server should search.  \\n  \\n The default value is -1 seconds, which means to use the server-determined default of 120 seconds.\"\n  overload: System.DirectoryServices.DirectorySearcher.ServerTimeLimit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.SizeLimit\n  id: SizeLimit\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: SizeLimit\n  nameWithType: DirectorySearcher.SizeLimit\n  fullName: System.DirectoryServices.DirectorySearcher.SizeLimit\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value indicating the maximum number of objects that the server returns in a search.\n  remarks: \"The server stops searching after the size limit is reached and returns the results accumulated up to that point.  \\n  \\n> [!NOTE]\\n>  If you set SizeLimit to a value that is larger than the server-determined default of 1000 entries, the server-determined default is used.\"\n  syntax:\n    content: public int SizeLimit { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of objects that the server returns in a search. The default value is zero, which means to use the server-determined default size limit of 1000 entries.\n  overload: System.DirectoryServices.DirectorySearcher.SizeLimit*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The new value is less than zero.\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.Sort\n  id: Sort\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: Sort\n  nameWithType: DirectorySearcher.Sort\n  fullName: System.DirectoryServices.DirectorySearcher.Sort\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value indicating the property on which the results are sorted.\n  syntax:\n    content: public System.DirectoryServices.SortOption Sort { get; set; }\n    return:\n      type: System.DirectoryServices.SortOption\n      description: A <xref href=\"System.DirectoryServices.SortOption\"></xref> object that specifies the property and direction that the search results should be sorted on.\n  overload: System.DirectoryServices.DirectorySearcher.Sort*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> (Nothing in Visual Basic).\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.Tombstone\n  id: Tombstone\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: Tombstone\n  nameWithType: DirectorySearcher.Tombstone\n  fullName: System.DirectoryServices.DirectorySearcher.Tombstone\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value indicating whether the search should also return deleted objects that match the search filter.\n  remarks: ''\n  example:\n  - \"The following C# example shows how to set the Tombstone property to `true`.  \\n  \\n```c#  \\nusing System.DirectoryServices;  \\n...  \\n// Create a DirectorySearcher object.  \\nDirectorySearcher src = new DirectorySearcher(\\\"(isDeleted=true)\\\");  \\n//Set the Tombstone property to true.  \\nsrc.Tombstone = true;  \\n//Use the FindAll method to get search results.  \\nSearchResultCollection res = src.FindAll();  \\n  \\n```\"\n  syntax:\n    content: public bool Tombstone { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if deleted objects should be included in the search; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.DirectoryServices.DirectorySearcher.Tombstone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectorySearcher.VirtualListView\n  id: VirtualListView\n  parent: System.DirectoryServices.DirectorySearcher\n  langs:\n  - csharp\n  name: VirtualListView\n  nameWithType: DirectorySearcher.VirtualListView\n  fullName: System.DirectoryServices.DirectorySearcher.VirtualListView\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value indicating the virtual list view options for the search.\n  syntax:\n    content: public System.DirectoryServices.DirectoryVirtualListView VirtualListView { get; set; }\n    return:\n      type: System.DirectoryServices.DirectoryVirtualListView\n      description: A <xref href=\"System.DirectoryServices.DirectoryVirtualListView\"></xref> object that contains the virtual list view search information. The default value for this property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which means do not use the virtual list view search option.\n  overload: System.DirectoryServices.DirectorySearcher.VirtualListView*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.Component\n  isExternal: false\n  name: System.ComponentModel.Component\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.DirectoryServices.DirectorySearcher.#ctor\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: DirectorySearcher()\n  nameWithType: DirectorySearcher.DirectorySearcher()\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher()\n- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: DirectorySearcher(DirectoryEntry)\n  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry)\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry)\n- uid: System.DirectoryServices.DirectoryEntry\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryEntry\n  nameWithType: DirectoryEntry\n  fullName: System.DirectoryServices.DirectoryEntry\n- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String)\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: DirectorySearcher(String)\n  nameWithType: DirectorySearcher.DirectorySearcher(String)\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: DirectorySearcher(DirectoryEntry,String)\n  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String)\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String)\n- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: DirectorySearcher(String,String[])\n  nameWithType: DirectorySearcher.DirectorySearcher(String,String[])\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[])\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: DirectorySearcher(DirectoryEntry,String,String[])\n  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])\n- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: DirectorySearcher(String,String[],SearchScope)\n  nameWithType: DirectorySearcher.DirectorySearcher(String,String[],SearchScope)\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[],SearchScope)\n- uid: System.DirectoryServices.SearchScope\n  parent: System.DirectoryServices\n  isExternal: false\n  name: SearchScope\n  nameWithType: SearchScope\n  fullName: System.DirectoryServices.SearchScope\n- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: DirectorySearcher(DirectoryEntry,String,String[],SearchScope)\n  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)\n- uid: System.DirectoryServices.DirectorySearcher.Asynchronous\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: Asynchronous\n  nameWithType: DirectorySearcher.Asynchronous\n  fullName: System.DirectoryServices.DirectorySearcher.Asynchronous\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: AttributeScopeQuery\n  nameWithType: DirectorySearcher.AttributeScopeQuery\n  fullName: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery\n- uid: System.DirectoryServices.DirectorySearcher.CacheResults\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: CacheResults\n  nameWithType: DirectorySearcher.CacheResults\n  fullName: System.DirectoryServices.DirectorySearcher.CacheResults\n- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: ClientTimeout\n  nameWithType: DirectorySearcher.ClientTimeout\n  fullName: System.DirectoryServices.DirectorySearcher.ClientTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DirectoryServices.DirectorySearcher.DerefAlias\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: DerefAlias\n  nameWithType: DirectorySearcher.DerefAlias\n  fullName: System.DirectoryServices.DirectorySearcher.DerefAlias\n- uid: System.DirectoryServices.DereferenceAlias\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DereferenceAlias\n  nameWithType: DereferenceAlias\n  fullName: System.DirectoryServices.DereferenceAlias\n- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: DirectorySynchronization\n  nameWithType: DirectorySearcher.DirectorySynchronization\n  fullName: System.DirectoryServices.DirectorySearcher.DirectorySynchronization\n- uid: System.DirectoryServices.DirectorySynchronization\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectorySynchronization\n  nameWithType: DirectorySynchronization\n  fullName: System.DirectoryServices.DirectorySynchronization\n- uid: System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DirectorySearcher.Dispose(Boolean)\n  fullName: System.DirectoryServices.DirectorySearcher.Dispose(Boolean)\n- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: ExtendedDN\n  nameWithType: DirectorySearcher.ExtendedDN\n  fullName: System.DirectoryServices.DirectorySearcher.ExtendedDN\n- uid: System.DirectoryServices.ExtendedDN\n  parent: System.DirectoryServices\n  isExternal: false\n  name: ExtendedDN\n  nameWithType: ExtendedDN\n  fullName: System.DirectoryServices.ExtendedDN\n- uid: System.DirectoryServices.DirectorySearcher.Filter\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: Filter\n  nameWithType: DirectorySearcher.Filter\n  fullName: System.DirectoryServices.DirectorySearcher.Filter\n- uid: System.DirectoryServices.DirectorySearcher.FindAll\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: FindAll()\n  nameWithType: DirectorySearcher.FindAll()\n  fullName: System.DirectoryServices.DirectorySearcher.FindAll()\n- uid: System.DirectoryServices.SearchResultCollection\n  parent: System.DirectoryServices\n  isExternal: false\n  name: SearchResultCollection\n  nameWithType: SearchResultCollection\n  fullName: System.DirectoryServices.SearchResultCollection\n- uid: System.DirectoryServices.DirectorySearcher.FindOne\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: FindOne()\n  nameWithType: DirectorySearcher.FindOne()\n  fullName: System.DirectoryServices.DirectorySearcher.FindOne()\n- uid: System.DirectoryServices.SearchResult\n  parent: System.DirectoryServices\n  isExternal: false\n  name: SearchResult\n  nameWithType: SearchResult\n  fullName: System.DirectoryServices.SearchResult\n- uid: System.DirectoryServices.DirectorySearcher.PageSize\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: PageSize\n  nameWithType: DirectorySearcher.PageSize\n  fullName: System.DirectoryServices.DirectorySearcher.PageSize\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: PropertiesToLoad\n  nameWithType: DirectorySearcher.PropertiesToLoad\n  fullName: System.DirectoryServices.DirectorySearcher.PropertiesToLoad\n- uid: System.Collections.Specialized.StringCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: StringCollection\n  nameWithType: StringCollection\n  fullName: System.Collections.Specialized.StringCollection\n- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: PropertyNamesOnly\n  nameWithType: DirectorySearcher.PropertyNamesOnly\n  fullName: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly\n- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: ReferralChasing\n  nameWithType: DirectorySearcher.ReferralChasing\n  fullName: System.DirectoryServices.DirectorySearcher.ReferralChasing\n- uid: System.DirectoryServices.ReferralChasingOption\n  parent: System.DirectoryServices\n  isExternal: false\n  name: ReferralChasingOption\n  nameWithType: ReferralChasingOption\n  fullName: System.DirectoryServices.ReferralChasingOption\n- uid: System.DirectoryServices.DirectorySearcher.SearchRoot\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: SearchRoot\n  nameWithType: DirectorySearcher.SearchRoot\n  fullName: System.DirectoryServices.DirectorySearcher.SearchRoot\n- uid: System.DirectoryServices.DirectorySearcher.SearchScope\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: SearchScope\n  nameWithType: DirectorySearcher.SearchScope\n  fullName: System.DirectoryServices.DirectorySearcher.SearchScope\n- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: SecurityMasks\n  nameWithType: DirectorySearcher.SecurityMasks\n  fullName: System.DirectoryServices.DirectorySearcher.SecurityMasks\n- uid: System.DirectoryServices.SecurityMasks\n  parent: System.DirectoryServices\n  isExternal: false\n  name: SecurityMasks\n  nameWithType: SecurityMasks\n  fullName: System.DirectoryServices.SecurityMasks\n- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: ServerPageTimeLimit\n  nameWithType: DirectorySearcher.ServerPageTimeLimit\n  fullName: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit\n- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: ServerTimeLimit\n  nameWithType: DirectorySearcher.ServerTimeLimit\n  fullName: System.DirectoryServices.DirectorySearcher.ServerTimeLimit\n- uid: System.DirectoryServices.DirectorySearcher.SizeLimit\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: SizeLimit\n  nameWithType: DirectorySearcher.SizeLimit\n  fullName: System.DirectoryServices.DirectorySearcher.SizeLimit\n- uid: System.DirectoryServices.DirectorySearcher.Sort\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: Sort\n  nameWithType: DirectorySearcher.Sort\n  fullName: System.DirectoryServices.DirectorySearcher.Sort\n- uid: System.DirectoryServices.SortOption\n  parent: System.DirectoryServices\n  isExternal: false\n  name: SortOption\n  nameWithType: SortOption\n  fullName: System.DirectoryServices.SortOption\n- uid: System.DirectoryServices.DirectorySearcher.Tombstone\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: Tombstone\n  nameWithType: DirectorySearcher.Tombstone\n  fullName: System.DirectoryServices.DirectorySearcher.Tombstone\n- uid: System.DirectoryServices.DirectorySearcher.VirtualListView\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: VirtualListView\n  nameWithType: DirectorySearcher.VirtualListView\n  fullName: System.DirectoryServices.DirectorySearcher.VirtualListView\n- uid: System.DirectoryServices.DirectoryVirtualListView\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryVirtualListView\n  nameWithType: DirectoryVirtualListView\n  fullName: System.DirectoryServices.DirectoryVirtualListView\n- uid: System.DirectoryServices.DirectorySearcher.#ctor*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: DirectorySearcher\n  nameWithType: DirectorySearcher.DirectorySearcher\n- uid: System.DirectoryServices.DirectorySearcher.Asynchronous*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: Asynchronous\n  nameWithType: DirectorySearcher.Asynchronous\n- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: AttributeScopeQuery\n  nameWithType: DirectorySearcher.AttributeScopeQuery\n- uid: System.DirectoryServices.DirectorySearcher.CacheResults*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: CacheResults\n  nameWithType: DirectorySearcher.CacheResults\n- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: ClientTimeout\n  nameWithType: DirectorySearcher.ClientTimeout\n- uid: System.DirectoryServices.DirectorySearcher.DerefAlias*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: DerefAlias\n  nameWithType: DirectorySearcher.DerefAlias\n- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: DirectorySynchronization\n  nameWithType: DirectorySearcher.DirectorySynchronization\n- uid: System.DirectoryServices.DirectorySearcher.Dispose*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: Dispose\n  nameWithType: DirectorySearcher.Dispose\n- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: ExtendedDN\n  nameWithType: DirectorySearcher.ExtendedDN\n- uid: System.DirectoryServices.DirectorySearcher.Filter*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: Filter\n  nameWithType: DirectorySearcher.Filter\n- uid: System.DirectoryServices.DirectorySearcher.FindAll*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: FindAll\n  nameWithType: DirectorySearcher.FindAll\n- uid: System.DirectoryServices.DirectorySearcher.FindOne*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: FindOne\n  nameWithType: DirectorySearcher.FindOne\n- uid: System.DirectoryServices.DirectorySearcher.PageSize*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: PageSize\n  nameWithType: DirectorySearcher.PageSize\n- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: PropertiesToLoad\n  nameWithType: DirectorySearcher.PropertiesToLoad\n- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: PropertyNamesOnly\n  nameWithType: DirectorySearcher.PropertyNamesOnly\n- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: ReferralChasing\n  nameWithType: DirectorySearcher.ReferralChasing\n- uid: System.DirectoryServices.DirectorySearcher.SearchRoot*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: SearchRoot\n  nameWithType: DirectorySearcher.SearchRoot\n- uid: System.DirectoryServices.DirectorySearcher.SearchScope*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: SearchScope\n  nameWithType: DirectorySearcher.SearchScope\n- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: SecurityMasks\n  nameWithType: DirectorySearcher.SecurityMasks\n- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: ServerPageTimeLimit\n  nameWithType: DirectorySearcher.ServerPageTimeLimit\n- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: ServerTimeLimit\n  nameWithType: DirectorySearcher.ServerTimeLimit\n- uid: System.DirectoryServices.DirectorySearcher.SizeLimit*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: SizeLimit\n  nameWithType: DirectorySearcher.SizeLimit\n- uid: System.DirectoryServices.DirectorySearcher.Sort*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: Sort\n  nameWithType: DirectorySearcher.Sort\n- uid: System.DirectoryServices.DirectorySearcher.Tombstone*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: Tombstone\n  nameWithType: DirectorySearcher.Tombstone\n- uid: System.DirectoryServices.DirectorySearcher.VirtualListView*\n  parent: System.DirectoryServices.DirectorySearcher\n  isExternal: false\n  name: VirtualListView\n  nameWithType: DirectorySearcher.VirtualListView\n"}