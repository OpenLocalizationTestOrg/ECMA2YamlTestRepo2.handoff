{"nodes":[{"pos":[1239,1458],"content":"Contains a collection of <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> controls used to provide catalogs of Web server controls that end users can add to a Web page. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains a collection of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> controls used to provide catalogs of Web server controls that end users can add to a Web page.","pos":[0,187],"source":"Contains a collection of <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> controls used to provide catalogs of Web server controls that end users can add to a Web page."},{"content":"This class cannot be inherited.","pos":[188,219]}]},{"pos":[1471,2572],"content":"The CatalogPartCollection class is a read-only collection of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, typically used by a <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone to track the set of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls contained by the zone.       When a Web Parts page enters catalog mode, the zone creates a new CatalogPartCollection object consisting of the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Each <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control in the collection can contain references to zero or more Web server controls, which are displayed in the form of a catalog of available server controls.       You can create a CatalogPartCollection collection of controls for your own programmatic use if, for example, you need to perform some mass operation on a set of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Even though the CatalogPartCollection object is read-only, you can make programmatic changes to the underlying controls referenced in the collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"The CatalogPartCollection class is a read-only collection of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, typically used by a <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone to track the set of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls contained by the zone.       When a Web Parts page enters catalog mode, the zone creates a new CatalogPartCollection object consisting of the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Each <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control in the collection can contain references to zero or more Web server controls, which are displayed in the form of a catalog of available server controls.       You can create a CatalogPartCollection collection of controls for your own programmatic use if, for example, you need to perform some mass operation on a set of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Even though the CatalogPartCollection object is read-only, you can make programmatic changes to the underlying controls referenced in the collection.","pos":[0,1097],"nodes":[{"content":"The CatalogPartCollection class is a read-only collection of &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls, typically used by a &lt;xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase&gt; zone to track the set of &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls contained by the zone.","pos":[0,313],"source":"The CatalogPartCollection class is a read-only collection of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, typically used by a <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone to track the set of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls contained by the zone."},{"content":"When a Web Parts page enters catalog mode, the zone creates a new CatalogPartCollection object consisting of the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls.","pos":[320,496],"source":"       When a Web Parts page enters catalog mode, the zone creates a new CatalogPartCollection object consisting of the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls."},{"content":"Each &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; control in the collection can contain references to zero or more Web server controls, which are displayed in the form of a catalog of available server controls.","pos":[497,716],"source":" Each <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control in the collection can contain references to zero or more Web server controls, which are displayed in the form of a catalog of available server controls."},{"content":"You can create a CatalogPartCollection collection of controls for your own programmatic use if, for example, you need to perform some mass operation on a set of &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls.","pos":[723,947],"source":"       You can create a CatalogPartCollection collection of controls for your own programmatic use if, for example, you need to perform some mass operation on a set of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls."},{"content":"Even though the CatalogPartCollection object is read-only, you can make programmatic changes to the underlying controls referenced in the collection.","pos":[948,1097]}]}]},{"pos":[8200,8325],"content":"Initializes a new, empty instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPartCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new, empty instance of the <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPartCollection\"></xref> class."},{"pos":[8338,9273],"content":"The CatalogPartCollection constructor initializes an empty instance of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class. This overload of the constructor is used internally by the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class in its <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> method to create an empty collection object. The zone then creates instances of all the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls declared in the child zone template, and uses an internal method of the collection to add them.       You cannot use this overload of the CatalogPartCollection constructor to create a new instance of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> and add <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls to it. You must use one of the other overloads for the CatalogPartCollection constructor instead.","needQuote":false,"needEscape":true,"nodes":[{"content":"The CatalogPartCollection constructor initializes an empty instance of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class. This overload of the constructor is used internally by the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class in its <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> method to create an empty collection object. The zone then creates instances of all the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls declared in the child zone template, and uses an internal method of the collection to add them.       You cannot use this overload of the CatalogPartCollection constructor to create a new instance of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> and add <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls to it. You must use one of the other overloads for the CatalogPartCollection constructor instead.","pos":[0,933],"nodes":[{"content":"The CatalogPartCollection constructor initializes an empty instance of the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection&gt; class.","pos":[0,145],"source":"The CatalogPartCollection constructor initializes an empty instance of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class."},{"content":"This overload of the constructor is used internally by the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt; class in its &lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A&gt; method to create an empty collection object.","pos":[146,392],"source":" This overload of the constructor is used internally by the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class in its <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> method to create an empty collection object."},{"content":"The zone then creates instances of all the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls declared in the child zone template, and uses an internal method of the collection to add them.","pos":[393,594],"source":" The zone then creates instances of all the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls declared in the child zone template, and uses an internal method of the collection to add them."},{"content":"You cannot use this overload of the CatalogPartCollection constructor to create a new instance of a &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection&gt; and add &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls to it.","pos":[601,842],"source":"       You cannot use this overload of the CatalogPartCollection constructor to create a new instance of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> and add <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls to it."},{"content":"You must use one of the other overloads for the CatalogPartCollection constructor instead.","pos":[843,933]}]}]},{"pos":[10029,10293],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPartCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by passing in an &lt;xref:System.Collections.ICollection&gt; collection of <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> controls.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPartCollection\"></xref> class by passing in an <xref:System.Collections.ICollection> collection of <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> controls."},{"pos":[10306,11365],"content":"The CatalogPartCollection constructor initializes an instance of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class and passes in a collection of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. This is one overload of the CatalogPartCollection constructor that you can use to create a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and add <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls to it.       Although the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> instance created by the constructor is read-only, you can still access the individual <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the collection programmatically and call their properties and methods.       One common scenario for using this constructor would be if you want to perform some batch operation on an entire set of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, such as changing the content, appearance, or position of a related group of items.","needQuote":false,"needEscape":true,"nodes":[{"content":"The CatalogPartCollection constructor initializes an instance of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class and passes in a collection of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. This is one overload of the CatalogPartCollection constructor that you can use to create a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and add <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls to it.       Although the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> instance created by the constructor is read-only, you can still access the individual <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the collection programmatically and call their properties and methods.       One common scenario for using this constructor would be if you want to perform some batch operation on an entire set of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, such as changing the content, appearance, or position of a related group of items.","pos":[0,1055],"nodes":[{"content":"The CatalogPartCollection constructor initializes an instance of the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection&gt; class and passes in a collection of &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls.","pos":[0,232],"source":"The CatalogPartCollection constructor initializes an instance of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class and passes in a collection of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls."},{"content":"This is one overload of the CatalogPartCollection constructor that you can use to create a new &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection&gt; object and add &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls to it.","pos":[233,476],"source":" This is one overload of the CatalogPartCollection constructor that you can use to create a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and add <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls to it."},{"content":"Although the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection&gt; instance created by the constructor is read-only, you can still access the individual &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls in the collection programmatically and call their properties and methods.","pos":[483,782],"source":"       Although the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> instance created by the constructor is read-only, you can still access the individual <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the collection programmatically and call their properties and methods."},{"content":"One common scenario for using this constructor would be if you want to perform some batch operation on an entire set of &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls, such as changing the content, appearance, or position of a related group of items.","pos":[789,1055],"source":"       One common scenario for using this constructor would be if you want to perform some batch operation on an entire set of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, such as changing the content, appearance, or position of a related group of items."}]}]},{"pos":[13834,13955],"content":"An &lt;xref:System.Collections.ICollection&gt; of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> controls.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.ICollection> of <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> controls."},{"pos":[14815,15144],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPartCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by passing in an &lt;xref:System.Collections.ICollection&gt; collection of the existing <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> controls in a zone, and an additional collection of controls.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPartCollection\"></xref> class by passing in an <xref:System.Collections.ICollection> collection of the existing <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> controls in a zone, and an additional collection of controls."},{"pos":[15458,15598],"content":"An &lt;xref:System.Collections.ICollection&gt; of existing <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> controls in a zone.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.ICollection> of existing <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> controls in a zone."},{"pos":[15684,15816],"content":"An &lt;xref:System.Collections.ICollection&gt; of additional <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> controls.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.ICollection> of additional <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> controls."},{"pos":[16488,16569],"content":"Returns a value indicating whether a particular control exists in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether a particular control exists in the collection.","pos":[0,81]}]},{"pos":[16581,16792],"content":"The Contains method enables you to determine whether a particular <xref:System.Web.UI.WebControls.WebParts.CatalogPart> object is part of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Contains method enables you to determine whether a particular &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; object is part of a &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection&gt; object.","pos":[0,211],"source":"The Contains method enables you to determine whether a particular <xref:System.Web.UI.WebControls.WebParts.CatalogPart> object is part of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object."}]},{"pos":[19604,19735],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is checked to determine whether it is in the collection.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> that is checked to determine whether it is in the collection."},{"pos":[19794,19875],"content":"A Boolean value that indicates whether a particular control is in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Boolean value that indicates whether a particular control is in the collection.","pos":[0,81]}]},{"pos":[20594,20707],"content":"Copies the collection to an array of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Copies the collection to an array of <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> objects."},{"pos":[20719,20981],"content":"The CopyTo method is useful when you want to assemble a custom array that can contain the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object, or a subset of those controls.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CopyTo method is useful when you want to assemble a custom array that can contain the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls in the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection&gt; object, or a subset of those controls.","pos":[0,262],"source":"The CopyTo method is useful when you want to assemble a custom array that can contain the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object, or a subset of those controls."}]},{"pos":[21205,21326],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to contain the copied collection.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> objects to contain the copied collection."},{"pos":[21387,21461],"content":"The starting point in the array at which to place the collection contents.","needQuote":true,"needEscape":true,"nodes":[{"content":"The starting point in the array at which to place the collection contents.","pos":[0,74]}]},{"pos":[21983,22048],"content":"References a static, read-only, empty instance of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"References a static, read-only, empty instance of the collection.","pos":[0,65]}]},{"pos":[22060,22383],"content":"A static, read-only, empty instance of <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> reduces memory usage in cases where you want an empty collection instance to return the proper object type from a method or to compare the instance with another object, but you do not need to add members to the instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A static, read-only, empty instance of &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection&gt; reduces memory usage in cases where you want an empty collection instance to return the proper object type from a method or to compare the instance with another object, but you do not need to add members to the instance.","pos":[0,323],"source":"A static, read-only, empty instance of <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> reduces memory usage in cases where you want an empty collection instance to return the proper object type from a method or to compare the instance with another object, but you do not need to add members to the instance."}]},{"pos":[22594,22606],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23197,23259],"content":"Returns the position of a particular member of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the position of a particular member of the collection.","pos":[0,62]}]},{"pos":[23271,23467],"content":"The IndexOf method is useful if you have multiple <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls on a Web Parts page, and you need to locate a particular control in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The IndexOf method is useful if you have multiple &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls on a Web Parts page, and you need to locate a particular control in the collection.","pos":[0,196],"source":"The IndexOf method is useful if you have multiple <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls on a Web Parts page, and you need to locate a particular control in the collection."}]},{"pos":[25460,25565],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is a member of the collection.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> that is a member of the collection."},{"pos":[25622,25794],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is a member of the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPartCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> that is a member of the <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPartCollection\"></xref>."},{"pos":[26364,26445],"content":"Gets or sets a member of the collection, based on its position in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a member of the collection, based on its position in the collection.","pos":[0,81]}]},{"pos":[26457,26708],"content":"The Item indexer allows you to access the underlying <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object by index, and change their property values or call methods.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Item indexer allows you to access the underlying &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls in a &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection&gt; object by index, and change their property values or call methods.","pos":[0,251],"source":"The Item indexer allows you to access the underlying <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object by index, and change their property values or call methods."}]},{"pos":[28332,28444],"content":"The index of a particular <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the collection.","needQuote":true,"needEscape":true,"source":"The index of a particular <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> in the collection."},{"pos":[28535,28646],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at the specified index in the collection.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> at the specified index in the collection."},{"pos":[29218,29289],"content":"Returns a member of the collection based on a unique string identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a member of the collection based on a unique string identifier.","pos":[0,71]}]},{"pos":[29301,29724],"content":"The Item indexer allows you to access the underlying <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object by use of a string identifier. Although the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object is read-only, you can change the property values or call methods on the underlying controls accessed by the indexer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Item indexer allows you to access the underlying <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object by use of a string identifier. Although the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object is read-only, you can change the property values or call methods on the underlying controls accessed by the indexer.","pos":[0,423],"nodes":[{"content":"The Item indexer allows you to access the underlying &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls in a &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection&gt; object by use of a string identifier.","pos":[0,222],"source":"The Item indexer allows you to access the underlying <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object by use of a string identifier."},{"content":"Although the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection&gt; object is read-only, you can change the property values or call methods on the underlying controls accessed by the indexer.","pos":[223,423],"source":" Although the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object is read-only, you can change the property values or call methods on the underlying controls accessed by the indexer."}]}]},{"pos":[31442,31565],"content":"The unique identifier for a particular <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in a collection.","needQuote":true,"needEscape":true,"source":"The unique identifier for a particular <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> in a collection."},{"pos":[31656,31797],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the collection whose ID equals the value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">id</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> in the collection whose ID equals the value of <code>id</code>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  id: CatalogPartCollection\n  children:\n  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor\n  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)\n  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)\n  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)\n  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)\n  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty\n  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)\n  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)\n  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)\n  langs:\n  - csharp\n  name: CatalogPartCollection\n  nameWithType: CatalogPartCollection\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  type: Class\n  summary: Contains a collection of <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> controls used to provide catalogs of Web server controls that end users can add to a Web page. This class cannot be inherited.\n  remarks: \"The CatalogPartCollection class is a read-only collection of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, typically used by a <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone to track the set of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls contained by the zone.  \\n  \\n When a Web Parts page enters catalog mode, the zone creates a new CatalogPartCollection object consisting of the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Each <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control in the collection can contain references to zero or more Web server controls, which are displayed in the form of a catalog of available server controls.  \\n  \\n You can create a CatalogPartCollection collection of controls for your own programmatic use if, for example, you need to perform some mass operation on a set of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Even though the CatalogPartCollection object is read-only, you can make programmatic changes to the underlying controls referenced in the collection.\"\n  example:\n  - \"The following code example demonstrates several uses of the CatalogPartCollection class. There are four parts to this code example:  \\n  \\n-   A user control that enables you to change display modes on a Web Parts page.  \\n  \\n-   A class for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`, which is referenced in the Web page and is contained in one of the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls.  \\n  \\n-   A Web page that references the `TextDisplayWebPart` control, contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control with two of the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls from the Web Parts control set declared in the zone, and contains event-driven code to create and manipulate a CatalogPartCollection object.  \\n  \\n-   An explanation of how the code example works when you load it in a browser.  \\n  \\n The first part of the code example is the user control. The source code for the user control comes from another topic. For this code example to work, you need to obtain the .ascx file for the user control from the [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md) topic, and place the file in the same folder as the .aspx page in this code example.  \\n  \\n The second part of the code example is the `TextDisplayWebPart` control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md). Note that the control has a property named `ContentText`; this property holds the value that the user enters in the text box.  \\n  \\n [!code-vb[WebParts_CatalogPartCollection_Overview#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_232_1.vb)]\\n [!code-cs[WebParts_CatalogPartCollection_Overview#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_232_1.cs)]  \\n  \\n The third part of the code example is the Web page. Notice that the `<asp:catalogzone>` element for the page contains declarations for two <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. These controls become part of a custom CatalogPartCollection object that is created when the `Button1_Click` method executes. The <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control contains Web server controls that have been previously closed by a user at run time. Controls in the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control can be added back to a page. The <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control contains a declaration of the custom `TextDisplayWebPart` control. When the page is in catalog mode, a user can add the `TextDisplayWebPart` control to the page so that it can be used in normal browse mode.  \\n  \\n [!code-cs[WebParts_CatalogPartCollection_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_232_2.aspx)]\\n [!code-vb[WebParts_CatalogPartCollection_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_232_2.aspx)]  \\n  \\n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. You can add the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page by selecting the check box next to it and clicking **Add**. Click **Close** to return the page to browse mode. On the control you just added, if you click the verbs menu (the down arrow that appears in the title bar) and then click **Close**, the control is removed from the page and added to the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Return the page to catalog mode, and click the **Page Catalog** link to view the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Notice that the control you closed now appears there. Clicking the **Display CatalogPart Properties** button accesses the CatalogPartCollection object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls.\"\n  syntax:\n    content: 'public sealed class CatalogPartCollection : System.Collections.ReadOnlyCollectionBase'\n  inheritance:\n  - System.Object\n  - System.Collections.ReadOnlyCollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.ReadOnlyCollectionBase.Count\n  - System.Collections.ReadOnlyCollectionBase.GetEnumerator\n  - System.Collections.ReadOnlyCollectionBase.InnerList\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  langs:\n  - csharp\n  name: CatalogPartCollection()\n  nameWithType: CatalogPartCollection.CatalogPartCollection()\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Initializes a new, empty instance of the <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPartCollection\"></xref> class.\n  remarks: \"The CatalogPartCollection constructor initializes an empty instance of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class. This overload of the constructor is used internally by the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class in its <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> method to create an empty collection object. The zone then creates instances of all the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls declared in the child zone template, and uses an internal method of the collection to add them.  \\n  \\n You cannot use this overload of the CatalogPartCollection constructor to create a new instance of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> and add <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls to it. You must use one of the other overloads for the CatalogPartCollection constructor instead.\"\n  syntax:\n    content: public CatalogPartCollection ();\n    parameters: []\n  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)\n  id: '#ctor(System.Collections.ICollection)'\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  langs:\n  - csharp\n  name: CatalogPartCollection(ICollection)\n  nameWithType: CatalogPartCollection.CatalogPartCollection(ICollection)\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(ICollection)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPartCollection\"></xref> class by passing in an <xref:System.Collections.ICollection> collection of <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> controls.\n  remarks: \"The CatalogPartCollection constructor initializes an instance of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class and passes in a collection of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. This is one overload of the CatalogPartCollection constructor that you can use to create a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and add <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls to it.  \\n  \\n Although the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> instance created by the constructor is read-only, you can still access the individual <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the collection programmatically and call their properties and methods.  \\n  \\n One common scenario for using this constructor would be if you want to perform some batch operation on an entire set of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, such as changing the content, appearance, or position of a related group of items.\"\n  example:\n  - \"The following code example demonstrates how you can create a custom <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>, and perform a batch operation to change the individual <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the collection even though it is read-only. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \\n  \\n The code in the `Button1_Click` method creates an <xref:System.Collections.ArrayList> object, adds the two <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the page to the object, and then creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using the CatalogPartCollection constructor. It also demonstrates how you can make batch changes to the underlying <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, even though the collection itself is read-only. The code loops through the collection, updating the <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> property of each control.  \\n  \\n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/49bc6c07-48e8-4d4b-abba-_1.aspx)]\\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/49bc6c07-48e8-4d4b-abba-_1.aspx)]  \\n  \\n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Also, if you position your mouse pointer over the title text within the border of the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control, you can see the new description text that was added to the control when you clicked the button (the description appears in a ToolTip). If you click the **Page Catalog** link to display the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, you will find that it also has an updated description.\"\n  syntax:\n    content: public CatalogPartCollection (System.Collections.ICollection catalogParts);\n    parameters:\n    - id: catalogParts\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> of <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> controls.\n  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)\n  id: '#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)'\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  langs:\n  - csharp\n  name: CatalogPartCollection(CatalogPartCollection,ICollection)\n  nameWithType: CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPartCollection\"></xref> class by passing in an <xref:System.Collections.ICollection> collection of the existing <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> controls in a zone, and an additional collection of controls.\n  syntax:\n    content: public CatalogPartCollection (System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, System.Collections.ICollection catalogParts);\n    parameters:\n    - id: existingCatalogParts\n      type: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n      description: An <xref:System.Collections.ICollection> of existing <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> controls in a zone.\n    - id: catalogParts\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> of additional <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> controls.\n  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)\n  id: Contains(System.Web.UI.WebControls.WebParts.CatalogPart)\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  langs:\n  - csharp\n  name: Contains(CatalogPart)\n  nameWithType: CatalogPartCollection.Contains(CatalogPart)\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(CatalogPart)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Returns a value indicating whether a particular control exists in the collection.\n  remarks: The Contains method enables you to determine whether a particular <xref:System.Web.UI.WebControls.WebParts.CatalogPart> object is part of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object.\n  example:\n  - \"The following code example demonstrates how you can determine whether a particular <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control is a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \\n  \\n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. The method uses the Contains method to determine whether the `PageCatalogPart1` control exists, and if so, retrieves the control and changes a property value.  \\n  \\n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/2369b958-e1bb-44dd-9619-_1.aspx)]\\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/2369b958-e1bb-44dd-9619-_1.aspx)]  \\n  \\n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Add the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page by selecting the check box next to it and clicking **Add**. Click **Close** to return the page to browse mode. On the control you just added, if you click the verbs menu (the down arrow that appears in the title bar) and then click **Close**, the control is removed from the page and added to the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Return the page to catalog mode, and click the **Page Catalog** link to view the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Notice that the control you closed has been added to it. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Select the check box next to the server control contained in the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, click **Add** to add it back to the page, and then click **Close** to return the page to browse mode. Click the verbs menu again on the control, and note that now the close verb is gone. It was removed by the code in the `Button1_Click` method, when it used the Contains method to check for `PageCatalogPart1`, and then set its <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> property to `false`.\"\n  syntax:\n    content: public bool Contains (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);\n    parameters:\n    - id: catalogPart\n      type: System.Web.UI.WebControls.WebParts.CatalogPart\n      description: A <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> that is checked to determine whether it is in the collection.\n    return:\n      type: System.Boolean\n      description: A Boolean value that indicates whether a particular control is in the collection.\n  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)\n  id: CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  langs:\n  - csharp\n  name: CopyTo(CatalogPart[],Int32)\n  nameWithType: CatalogPartCollection.CopyTo(CatalogPart[],Int32)\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(CatalogPart[],Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Copies the collection to an array of <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> objects.\n  remarks: The CopyTo method is useful when you want to assemble a custom array that can contain the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object, or a subset of those controls.\n  syntax:\n    content: public void CopyTo (System.Web.UI.WebControls.WebParts.CatalogPart[] array, int index);\n    parameters:\n    - id: array\n      type: System.Web.UI.WebControls.WebParts.CatalogPart[]\n      description: An array of <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> objects to contain the copied collection.\n    - id: index\n      type: System.Int32\n      description: The starting point in the array at which to place the collection contents.\n  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty\n  id: Empty\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: CatalogPartCollection.Empty\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: References a static, read-only, empty instance of the collection.\n  remarks: A static, read-only, empty instance of <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> reduces memory usage in cases where you want an empty collection instance to return the proper object type from a method or to compare the instance with another object, but you do not need to add members to the instance.\n  syntax:\n    content: public static readonly System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty;\n    return:\n      type: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)\n  id: IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  langs:\n  - csharp\n  name: IndexOf(CatalogPart)\n  nameWithType: CatalogPartCollection.IndexOf(CatalogPart)\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(CatalogPart)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Returns the position of a particular member of the collection.\n  remarks: The IndexOf method is useful if you have multiple <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls on a Web Parts page, and you need to locate a particular control in the collection.\n  example:\n  - \"The following code example demonstrates how you can determine the position of a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> collection by using its IndexOf property. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \\n  \\n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. The method uses the IndexOf property to retrieve the position of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, and then changes a property value on the control.  \\n  \\n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/5504f26f-74ee-431e-9601-_1.aspx)]\\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/5504f26f-74ee-431e-9601-_1.aspx)]  \\n  \\n After you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Click the **Page Catalog** link to display the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Note that it has only a title and no border, because its <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> property value was changed to <xref:System.Web.UI.WebControls.WebParts.PartChromeType> in the code that used the IndexOf property to retrieve the control.\"\n  syntax:\n    content: public int IndexOf (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);\n    parameters:\n    - id: catalogPart\n      type: System.Web.UI.WebControls.WebParts.CatalogPart\n      description: A <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> that is a member of the collection.\n    return:\n      type: System.Int32\n      description: A <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> that is a member of the <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPartCollection\"></xref>.\n  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: CatalogPartCollection.Item(Int32)\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Gets or sets a member of the collection, based on its position in the collection.\n  remarks: The Item indexer allows you to access the underlying <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object by index, and change their property values or call methods.\n  example:\n  - \"The following code example demonstrates how you can access a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using its index. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \\n  \\n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. Note that the method uses the Item indexer to retrieve information from the first member of the collection.  \\n  \\n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1308_1.aspx)]\\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1308_1.aspx)]  \\n  \\n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. The count of available server controls within the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control is obtained by using the Item indexer in the `Button1_Click` method.\"\n  syntax:\n    content: public System.Web.UI.WebControls.WebParts.CatalogPart this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of a particular <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> in the collection.\n    return:\n      type: System.Web.UI.WebControls.WebParts.CatalogPart\n      description: A <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> at the specified index in the collection.\n  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: CatalogPartCollection.Item(String)\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Returns a member of the collection based on a unique string identifier.\n  remarks: The Item indexer allows you to access the underlying <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object by use of a string identifier. Although the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object is read-only, you can change the property values or call methods on the underlying controls accessed by the indexer.\n  example:\n  - \"The following code example demonstrates how you can access a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using its string ID value. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \\n  \\n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. The method uses the Item indexer to retrieve information about the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control, which is the second member of the collection.  \\n  \\n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1244_1.aspx)]\\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1244_1.aspx)]  \\n  \\n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. The count of available server controls within the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control is obtained by using the Item indexer in the `Button1_Click` method.\"\n  syntax:\n    content: public System.Web.UI.WebControls.WebParts.CatalogPart this[string id] { get; }\n    parameters:\n    - id: id\n      type: System.String\n      description: The unique identifier for a particular <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> in a collection.\n    return:\n      type: System.Web.UI.WebControls.WebParts.CatalogPart\n      description: The first <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> in the collection whose ID equals the value of <code>id</code>.\n  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.ReadOnlyCollectionBase\n  isExternal: false\n  name: System.Collections.ReadOnlyCollectionBase\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  isExternal: false\n  name: CatalogPartCollection()\n  nameWithType: CatalogPartCollection.CatalogPartCollection()\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection()\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  isExternal: false\n  name: CatalogPartCollection(ICollection)\n  nameWithType: CatalogPartCollection.CatalogPartCollection(ICollection)\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(ICollection)\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: true\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  isExternal: false\n  name: CatalogPartCollection(CatalogPartCollection,ICollection)\n  nameWithType: CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  parent: System.Web.UI.WebControls.WebParts\n  isExternal: false\n  name: CatalogPartCollection\n  nameWithType: CatalogPartCollection\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  isExternal: false\n  name: Contains(CatalogPart)\n  nameWithType: CatalogPartCollection.Contains(CatalogPart)\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(CatalogPart)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.WebControls.WebParts.CatalogPart\n  parent: System.Web.UI.WebControls.WebParts\n  isExternal: false\n  name: CatalogPart\n  nameWithType: CatalogPart\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPart\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  isExternal: false\n  name: CopyTo(CatalogPart[],Int32)\n  nameWithType: CatalogPartCollection.CopyTo(CatalogPart[],Int32)\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(CatalogPart[],Int32)\n- uid: System.Web.UI.WebControls.WebParts.CatalogPart[]\n  parent: System.Web.UI.WebControls.WebParts\n  isExternal: false\n  name: CatalogPart\n  nameWithType: CatalogPart\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPart[]\n  spec.csharp:\n  - uid: System.Web.UI.WebControls.WebParts.CatalogPart\n    name: CatalogPart\n    nameWithType: CatalogPart\n    fullName: CatalogPart[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  isExternal: false\n  name: Empty\n  nameWithType: CatalogPartCollection.Empty\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  isExternal: false\n  name: IndexOf(CatalogPart)\n  nameWithType: CatalogPartCollection.IndexOf(CatalogPart)\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(CatalogPart)\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: CatalogPartCollection.Item(Int32)\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(Int32)\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: CatalogPartCollection.Item(String)\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  isExternal: false\n  name: CatalogPartCollection\n  nameWithType: CatalogPartCollection.CatalogPartCollection\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains*\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  isExternal: false\n  name: Contains\n  nameWithType: CatalogPartCollection.Contains\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo*\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: CatalogPartCollection.CopyTo\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf*\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: CatalogPartCollection.IndexOf\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item*\n  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  isExternal: false\n  name: Item\n  nameWithType: CatalogPartCollection.Item\n"}