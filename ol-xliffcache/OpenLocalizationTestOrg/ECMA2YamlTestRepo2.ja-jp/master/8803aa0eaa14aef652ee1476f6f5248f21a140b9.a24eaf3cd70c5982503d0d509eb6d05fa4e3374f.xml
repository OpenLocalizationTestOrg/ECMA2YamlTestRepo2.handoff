{"nodes":[{"pos":[1283,1381],"content":"Use &lt;xref:System.Runtime.InteropServices.ComTypes.IStream?displayProperty=fullName&gt; instead.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use <ph id=\"ph1\">&amp;lt;</ph>xref:System.Runtime.InteropServices.ComTypes.IStream?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> instead.","pos":[0,98],"source":"Use &lt;xref:System.Runtime.InteropServices.ComTypes.IStream?displayProperty=fullName&gt; instead."}]},{"pos":[1393,1532],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IStream`</ph> and <ph id=\"ph2\">`ISequentialStream`</ph> in the com subfolder of the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IStream` and `ISequentialStream` in the com subfolder of the MSDN library."},{"pos":[2459,2567],"content":"Creates a new stream object with its own seek pointer that references the same bytes as the original stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new stream object with its own seek pointer that references the same bytes as the original stream.","pos":[0,108]}]},{"pos":[2579,2680],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IStream::Clone`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IStream::Clone` in the MSDN library."},{"pos":[2884,2937],"content":"On successful return, contains the new stream object.","needQuote":true,"needEscape":true,"nodes":[{"content":"On successful return, contains the new stream object.","pos":[0,53]}]},{"pos":[3441,3550],"content":"Ensures that any changes made to a stream object open in transacted mode are reflected in the parent storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"Ensures that any changes made to a stream object open in transacted mode are reflected in the parent storage.","pos":[0,109]}]},{"pos":[3562,3664],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IStream::Commit`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IStream::Commit` in the MSDN library."},{"pos":[3814,3875],"content":"Controls how the changes for the stream object are committed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Controls how the changes for the stream object are committed.","pos":[0,61]}]},{"pos":[4600,4725],"content":"Copies a specified number of bytes from the current seek pointer in the stream to the current seek pointer in another stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies a specified number of bytes from the current seek pointer in the stream to the current seek pointer in another stream.","pos":[0,125]}]},{"pos":[4737,4839],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IStream::CopyTo`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IStream::CopyTo` in the MSDN library."},{"pos":[5082,5118],"content":"Reference to the destination stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reference to the destination stream.","pos":[0,36]}]},{"pos":[5176,5227],"content":"The number of bytes to copy from the source stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes to copy from the source stream.","pos":[0,51]}]},{"pos":[5291,5370],"content":"On successful return, contains the actual number of bytes read from the source.","needQuote":true,"needEscape":true,"nodes":[{"content":"On successful return, contains the actual number of bytes read from the source.","pos":[0,79]}]},{"pos":[5437,5522],"content":"On successful return, contains the actual number of bytes written to the destination.","needQuote":true,"needEscape":true,"nodes":[{"content":"On successful return, contains the actual number of bytes written to the destination.","pos":[0,85]}]},{"pos":[6135,6196],"content":"Restricts access to a specified range of bytes in the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Restricts access to a specified range of bytes in the stream.","pos":[0,61]}]},{"pos":[6208,6314],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IStream::LockRegion`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IStream::LockRegion` in the MSDN library."},{"pos":[6484,6531],"content":"The byte offset for the beginning of the range.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte offset for the beginning of the range.","pos":[0,47]}]},{"pos":[6589,6636],"content":"The length of the range, in bytes, to restrict.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of the range, in bytes, to restrict.","pos":[0,47]}]},{"pos":[6702,6752],"content":"The requested restrictions on accessing the range.","needQuote":true,"needEscape":true,"nodes":[{"content":"The requested restrictions on accessing the range.","pos":[0,50]}]},{"pos":[7349,7455],"content":"Reads a specified number of bytes from the stream object into memory starting at the current seek pointer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads a specified number of bytes from the stream object into memory starting at the current seek pointer.","pos":[0,106]}]},{"pos":[7467,7577],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`ISequentialStream::Read`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `ISequentialStream::Read` in the MSDN library."},{"pos":[7729,7791],"content":"On successful return, contains the data read frtom the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"On successful return, contains the data read frtom the stream.","pos":[0,62]}]},{"pos":[7849,7900],"content":"The number of bytes to read from the stream object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes to read from the stream object.","pos":[0,51]}]},{"pos":[7964,8118],"content":"Pointer to a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ULONG\" name=\"ULONG\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> variable that receives the actual number of bytes read from the stream object.","needQuote":true,"needEscape":true,"source":"Pointer to a <xref uid=\"langword_csharp_ULONG\" name=\"ULONG\" href=\"\"></xref> variable that receives the actual number of bytes read from the stream object."},{"pos":[8578,8720],"content":"Discards all changes that have been made to a transacted stream since the last <xref:System.Runtime.InteropServices.UCOMIStream.Commit*> call.","needQuote":true,"needEscape":true,"nodes":[{"content":"Discards all changes that have been made to a transacted stream since the last &lt;xref:System.Runtime.InteropServices.UCOMIStream.Commit*&gt; call.","pos":[0,142],"source":"Discards all changes that have been made to a transacted stream since the last <xref:System.Runtime.InteropServices.UCOMIStream.Commit*> call."}]},{"pos":[8732,8834],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IStream::Revert`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IStream::Revert` in the MSDN library."},{"pos":[9487,9628],"content":"Changes the seek pointer to a new location relative to the beginning of the stream, to the end of the stream, or to the current seek pointer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Changes the seek pointer to a new location relative to the beginning of the stream, to the end of the stream, or to the current seek pointer.","pos":[0,141]}]},{"pos":[9640,9740],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IStream::Seek`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IStream::Seek` in the MSDN library."},{"pos":[9915,9949],"content":"Displacement to add to <ph id=\"ph1\">`dwOrigin`</ph>.","needQuote":true,"needEscape":true,"source":"Displacement to add to `dwOrigin`."},{"pos":[10013,10141],"content":"Specifies the origin of the seek. The origin can be the beginning of the file, the current seek pointer, or the end of the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the origin of the seek. The origin can be the beginning of the file, the current seek pointer, or the end of the file.","pos":[0,128],"nodes":[{"content":"Specifies the origin of the seek.","pos":[0,33]},{"content":"The origin can be the beginning of the file, the current seek pointer, or the end of the file.","pos":[34,128]}]}]},{"pos":[10213,10308],"content":"On successful return, contains the offset of the seek pointer from the beginning of the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"On successful return, contains the offset of the seek pointer from the beginning of the stream.","pos":[0,95]}]},{"pos":[10816,10854],"content":"Changes the size of the stream object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Changes the size of the stream object.","pos":[0,38]}]},{"pos":[10866,10969],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IStream::SetSize`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IStream::SetSize` in the MSDN library."},{"pos":[11113,11171],"content":"Specifies the new size of the stream as a number of bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the new size of the stream as a number of bytes.","pos":[0,58]}]},{"pos":[11771,11871],"content":"Retrieves the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.STATSTG\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure for this stream.","needQuote":true,"needEscape":true,"source":"Retrieves the <xref href=\"System.Runtime.InteropServices.STATSTG\"></xref> structure for this stream."},{"pos":[11883,11983],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IStream::Stat`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IStream::Stat` in the MSDN library."},{"pos":[12201,12346],"content":"On successful return, contains a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_STATSTG\" name=\"STATSTG\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure which describes this stream object.","needQuote":true,"needEscape":true,"source":"On successful return, contains a <xref uid=\"langword_csharp_STATSTG\" name=\"STATSTG\" href=\"\"></xref> structure which describes this stream object."},{"pos":[12413,12607],"content":"Specifies some of the members in the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_STATSTG\" name=\"STATSTG\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that this method does not return, thus saving some memory allocation operations.","needQuote":true,"needEscape":true,"source":"Specifies some of the members in the <xref uid=\"langword_csharp_STATSTG\" name=\"STATSTG\" href=\"\"></xref> structure that this method does not return, thus saving some memory allocation operations."},{"pos":[13228,13368],"content":"Removes the access restriction on a range of bytes previously restricted with <xref:System.Runtime.InteropServices.UCOMIStream.LockRegion*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the access restriction on a range of bytes previously restricted with &lt;xref:System.Runtime.InteropServices.UCOMIStream.LockRegion*&gt;.","pos":[0,140],"source":"Removes the access restriction on a range of bytes previously restricted with <xref:System.Runtime.InteropServices.UCOMIStream.LockRegion*>."}]},{"pos":[13380,13488],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IStream::UnlockRegion`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IStream::UnlockRegion` in the MSDN library."},{"pos":[13660,13707],"content":"The byte offset for the beginning of the range.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte offset for the beginning of the range.","pos":[0,47]}]},{"pos":[13765,13812],"content":"The length, in bytes, of the range to restrict.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length, in bytes, of the range to restrict.","pos":[0,47]}]},{"pos":[13878,13933],"content":"The access restrictions previously placed on the range.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access restrictions previously placed on the range.","pos":[0,55]}]},{"pos":[14537,14632],"content":"Writes a specified number of bytes into the stream object starting at the current seek pointer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes a specified number of bytes into the stream object starting at the current seek pointer.","pos":[0,95]}]},{"pos":[14644,14755],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`ISequentialStream::Write`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `ISequentialStream::Write` in the MSDN library."},{"pos":[14911,14942],"content":"Buffer to write this stream to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Buffer to write this stream to.","pos":[0,31]}]},{"pos":[15000,15045],"content":"The number of bytes to write into the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes to write into the stream.","pos":[0,45]}]},{"pos":[15112,15375],"content":"On successful return, contains the actual number of bytes written to the stream object. The caller can set this pointer to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, in which case this method does not provide the actual number of bytes written.","needQuote":true,"needEscape":true,"nodes":[{"content":"On successful return, contains the actual number of bytes written to the stream object.","pos":[0,87]},{"content":"The caller can set this pointer to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, in which case this method does not provide the actual number of bytes written.","pos":[88,263],"source":" The caller can set this pointer to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, in which case this method does not provide the actual number of bytes written."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.UCOMIStream\n  id: UCOMIStream\n  children:\n  - System.Runtime.InteropServices.UCOMIStream.Clone(System.Runtime.InteropServices.UCOMIStream@)\n  - System.Runtime.InteropServices.UCOMIStream.Commit(System.Int32)\n  - System.Runtime.InteropServices.UCOMIStream.CopyTo(System.Runtime.InteropServices.UCOMIStream,System.Int64,System.IntPtr,System.IntPtr)\n  - System.Runtime.InteropServices.UCOMIStream.LockRegion(System.Int64,System.Int64,System.Int32)\n  - System.Runtime.InteropServices.UCOMIStream.Read(System.Byte[],System.Int32,System.IntPtr)\n  - System.Runtime.InteropServices.UCOMIStream.Revert\n  - System.Runtime.InteropServices.UCOMIStream.Seek(System.Int64,System.Int32,System.IntPtr)\n  - System.Runtime.InteropServices.UCOMIStream.SetSize(System.Int64)\n  - System.Runtime.InteropServices.UCOMIStream.Stat(System.Runtime.InteropServices.STATSTG@,System.Int32)\n  - System.Runtime.InteropServices.UCOMIStream.UnlockRegion(System.Int64,System.Int64,System.Int32)\n  - System.Runtime.InteropServices.UCOMIStream.Write(System.Byte[],System.Int32,System.IntPtr)\n  langs:\n  - csharp\n  name: UCOMIStream\n  nameWithType: UCOMIStream\n  fullName: System.Runtime.InteropServices.UCOMIStream\n  type: Interface\n  summary: Use &lt;xref:System.Runtime.InteropServices.ComTypes.IStream?displayProperty=fullName&gt; instead.\n  remarks: For more information, please see the existing documentation for `IStream` and `ISequentialStream` in the com subfolder of the MSDN library.\n  syntax:\n    content: >-\n      [System.Obsolete(\"Use System.Runtime.InteropServices.ComTypes.IStream instead. http://go.microsoft.com/fwlink/?linkid=14202\", false)]\n\n      [System.Runtime.InteropServices.Guid(\"0000000c-0000-0000-C000-000000000046\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface UCOMIStream\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIStream.Clone(System.Runtime.InteropServices.UCOMIStream@)\n  id: Clone(System.Runtime.InteropServices.UCOMIStream@)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  langs:\n  - csharp\n  name: Clone(UCOMIStream)\n  nameWithType: UCOMIStream.Clone(UCOMIStream)\n  fullName: System.Runtime.InteropServices.UCOMIStream.Clone(UCOMIStream)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Creates a new stream object with its own seek pointer that references the same bytes as the original stream.\n  remarks: For more information, please see the existing documentation for `IStream::Clone` in the MSDN library.\n  syntax:\n    content: public void Clone (out System.Runtime.InteropServices.UCOMIStream ppstm);\n    parameters:\n    - id: ppstm\n      type: System.Runtime.InteropServices.UCOMIStream\n      description: On successful return, contains the new stream object.\n  overload: System.Runtime.InteropServices.UCOMIStream.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIStream.Commit(System.Int32)\n  id: Commit(System.Int32)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  langs:\n  - csharp\n  name: Commit(Int32)\n  nameWithType: UCOMIStream.Commit(Int32)\n  fullName: System.Runtime.InteropServices.UCOMIStream.Commit(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Ensures that any changes made to a stream object open in transacted mode are reflected in the parent storage.\n  remarks: For more information, please see the existing documentation for `IStream::Commit` in the MSDN library.\n  syntax:\n    content: public void Commit (int grfCommitFlags);\n    parameters:\n    - id: grfCommitFlags\n      type: System.Int32\n      description: Controls how the changes for the stream object are committed.\n  overload: System.Runtime.InteropServices.UCOMIStream.Commit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIStream.CopyTo(System.Runtime.InteropServices.UCOMIStream,System.Int64,System.IntPtr,System.IntPtr)\n  id: CopyTo(System.Runtime.InteropServices.UCOMIStream,System.Int64,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  langs:\n  - csharp\n  name: CopyTo(UCOMIStream,Int64,IntPtr,IntPtr)\n  nameWithType: UCOMIStream.CopyTo(UCOMIStream,Int64,IntPtr,IntPtr)\n  fullName: System.Runtime.InteropServices.UCOMIStream.CopyTo(UCOMIStream,Int64,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Copies a specified number of bytes from the current seek pointer in the stream to the current seek pointer in another stream.\n  remarks: For more information, please see the existing documentation for `IStream::CopyTo` in the MSDN library.\n  syntax:\n    content: public void CopyTo (System.Runtime.InteropServices.UCOMIStream pstm, long cb, IntPtr pcbRead, IntPtr pcbWritten);\n    parameters:\n    - id: pstm\n      type: System.Runtime.InteropServices.UCOMIStream\n      description: Reference to the destination stream.\n    - id: cb\n      type: System.Int64\n      description: The number of bytes to copy from the source stream.\n    - id: pcbRead\n      type: System.IntPtr\n      description: On successful return, contains the actual number of bytes read from the source.\n    - id: pcbWritten\n      type: System.IntPtr\n      description: On successful return, contains the actual number of bytes written to the destination.\n  overload: System.Runtime.InteropServices.UCOMIStream.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIStream.LockRegion(System.Int64,System.Int64,System.Int32)\n  id: LockRegion(System.Int64,System.Int64,System.Int32)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  langs:\n  - csharp\n  name: LockRegion(Int64,Int64,Int32)\n  nameWithType: UCOMIStream.LockRegion(Int64,Int64,Int32)\n  fullName: System.Runtime.InteropServices.UCOMIStream.LockRegion(Int64,Int64,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Restricts access to a specified range of bytes in the stream.\n  remarks: For more information, please see the existing documentation for `IStream::LockRegion` in the MSDN library.\n  syntax:\n    content: public void LockRegion (long libOffset, long cb, int dwLockType);\n    parameters:\n    - id: libOffset\n      type: System.Int64\n      description: The byte offset for the beginning of the range.\n    - id: cb\n      type: System.Int64\n      description: The length of the range, in bytes, to restrict.\n    - id: dwLockType\n      type: System.Int32\n      description: The requested restrictions on accessing the range.\n  overload: System.Runtime.InteropServices.UCOMIStream.LockRegion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIStream.Read(System.Byte[],System.Int32,System.IntPtr)\n  id: Read(System.Byte[],System.Int32,System.IntPtr)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  langs:\n  - csharp\n  name: Read(Byte[],Int32,IntPtr)\n  nameWithType: UCOMIStream.Read(Byte[],Int32,IntPtr)\n  fullName: System.Runtime.InteropServices.UCOMIStream.Read(Byte[],Int32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Reads a specified number of bytes from the stream object into memory starting at the current seek pointer.\n  remarks: For more information, please see the existing documentation for `ISequentialStream::Read` in the MSDN library.\n  syntax:\n    content: public void Read (byte[] pv, int cb, IntPtr pcbRead);\n    parameters:\n    - id: pv\n      type: System.Byte[]\n      description: On successful return, contains the data read frtom the stream.\n    - id: cb\n      type: System.Int32\n      description: The number of bytes to read from the stream object.\n    - id: pcbRead\n      type: System.IntPtr\n      description: Pointer to a <xref uid=\"langword_csharp_ULONG\" name=\"ULONG\" href=\"\"></xref> variable that receives the actual number of bytes read from the stream object.\n  overload: System.Runtime.InteropServices.UCOMIStream.Read*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIStream.Revert\n  id: Revert\n  parent: System.Runtime.InteropServices.UCOMIStream\n  langs:\n  - csharp\n  name: Revert()\n  nameWithType: UCOMIStream.Revert()\n  fullName: System.Runtime.InteropServices.UCOMIStream.Revert()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Discards all changes that have been made to a transacted stream since the last <xref:System.Runtime.InteropServices.UCOMIStream.Commit*> call.\n  remarks: For more information, please see the existing documentation for `IStream::Revert` in the MSDN library.\n  syntax:\n    content: public void Revert ();\n    parameters: []\n  overload: System.Runtime.InteropServices.UCOMIStream.Revert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIStream.Seek(System.Int64,System.Int32,System.IntPtr)\n  id: Seek(System.Int64,System.Int32,System.IntPtr)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  langs:\n  - csharp\n  name: Seek(Int64,Int32,IntPtr)\n  nameWithType: UCOMIStream.Seek(Int64,Int32,IntPtr)\n  fullName: System.Runtime.InteropServices.UCOMIStream.Seek(Int64,Int32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Changes the seek pointer to a new location relative to the beginning of the stream, to the end of the stream, or to the current seek pointer.\n  remarks: For more information, please see the existing documentation for `IStream::Seek` in the MSDN library.\n  syntax:\n    content: public void Seek (long dlibMove, int dwOrigin, IntPtr plibNewPosition);\n    parameters:\n    - id: dlibMove\n      type: System.Int64\n      description: Displacement to add to `dwOrigin`.\n    - id: dwOrigin\n      type: System.Int32\n      description: Specifies the origin of the seek. The origin can be the beginning of the file, the current seek pointer, or the end of the file.\n    - id: plibNewPosition\n      type: System.IntPtr\n      description: On successful return, contains the offset of the seek pointer from the beginning of the stream.\n  overload: System.Runtime.InteropServices.UCOMIStream.Seek*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIStream.SetSize(System.Int64)\n  id: SetSize(System.Int64)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  langs:\n  - csharp\n  name: SetSize(Int64)\n  nameWithType: UCOMIStream.SetSize(Int64)\n  fullName: System.Runtime.InteropServices.UCOMIStream.SetSize(Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Changes the size of the stream object.\n  remarks: For more information, please see the existing documentation for `IStream::SetSize` in the MSDN library.\n  syntax:\n    content: public void SetSize (long libNewSize);\n    parameters:\n    - id: libNewSize\n      type: System.Int64\n      description: Specifies the new size of the stream as a number of bytes.\n  overload: System.Runtime.InteropServices.UCOMIStream.SetSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIStream.Stat(System.Runtime.InteropServices.STATSTG@,System.Int32)\n  id: Stat(System.Runtime.InteropServices.STATSTG@,System.Int32)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  langs:\n  - csharp\n  name: Stat(STATSTG,Int32)\n  nameWithType: UCOMIStream.Stat(STATSTG,Int32)\n  fullName: System.Runtime.InteropServices.UCOMIStream.Stat(STATSTG,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the <xref href=\"System.Runtime.InteropServices.STATSTG\"></xref> structure for this stream.\n  remarks: For more information, please see the existing documentation for `IStream::Stat` in the MSDN library.\n  syntax:\n    content: public void Stat (out System.Runtime.InteropServices.STATSTG pstatstg, int grfStatFlag);\n    parameters:\n    - id: pstatstg\n      type: System.Runtime.InteropServices.STATSTG\n      description: On successful return, contains a <xref uid=\"langword_csharp_STATSTG\" name=\"STATSTG\" href=\"\"></xref> structure which describes this stream object.\n    - id: grfStatFlag\n      type: System.Int32\n      description: Specifies some of the members in the <xref uid=\"langword_csharp_STATSTG\" name=\"STATSTG\" href=\"\"></xref> structure that this method does not return, thus saving some memory allocation operations.\n  overload: System.Runtime.InteropServices.UCOMIStream.Stat*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIStream.UnlockRegion(System.Int64,System.Int64,System.Int32)\n  id: UnlockRegion(System.Int64,System.Int64,System.Int32)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  langs:\n  - csharp\n  name: UnlockRegion(Int64,Int64,Int32)\n  nameWithType: UCOMIStream.UnlockRegion(Int64,Int64,Int32)\n  fullName: System.Runtime.InteropServices.UCOMIStream.UnlockRegion(Int64,Int64,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Removes the access restriction on a range of bytes previously restricted with <xref:System.Runtime.InteropServices.UCOMIStream.LockRegion*>.\n  remarks: For more information, please see the existing documentation for `IStream::UnlockRegion` in the MSDN library.\n  syntax:\n    content: public void UnlockRegion (long libOffset, long cb, int dwLockType);\n    parameters:\n    - id: libOffset\n      type: System.Int64\n      description: The byte offset for the beginning of the range.\n    - id: cb\n      type: System.Int64\n      description: The length, in bytes, of the range to restrict.\n    - id: dwLockType\n      type: System.Int32\n      description: The access restrictions previously placed on the range.\n  overload: System.Runtime.InteropServices.UCOMIStream.UnlockRegion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIStream.Write(System.Byte[],System.Int32,System.IntPtr)\n  id: Write(System.Byte[],System.Int32,System.IntPtr)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  langs:\n  - csharp\n  name: Write(Byte[],Int32,IntPtr)\n  nameWithType: UCOMIStream.Write(Byte[],Int32,IntPtr)\n  fullName: System.Runtime.InteropServices.UCOMIStream.Write(Byte[],Int32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Writes a specified number of bytes into the stream object starting at the current seek pointer.\n  remarks: For more information, please see the existing documentation for `ISequentialStream::Write` in the MSDN library.\n  syntax:\n    content: public void Write (byte[] pv, int cb, IntPtr pcbWritten);\n    parameters:\n    - id: pv\n      type: System.Byte[]\n      description: Buffer to write this stream to.\n    - id: cb\n      type: System.Int32\n      description: The number of bytes to write into the stream.\n    - id: pcbWritten\n      type: System.IntPtr\n      description: On successful return, contains the actual number of bytes written to the stream object. The caller can set this pointer to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, in which case this method does not provide the actual number of bytes written.\n  overload: System.Runtime.InteropServices.UCOMIStream.Write*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.InteropServices.UCOMIStream.Clone(System.Runtime.InteropServices.UCOMIStream@)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: Clone(UCOMIStream)\n  nameWithType: UCOMIStream.Clone(UCOMIStream)\n  fullName: System.Runtime.InteropServices.UCOMIStream.Clone(UCOMIStream)\n- uid: System.Runtime.InteropServices.UCOMIStream\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: UCOMIStream\n  nameWithType: UCOMIStream\n  fullName: System.Runtime.InteropServices.UCOMIStream\n- uid: System.Runtime.InteropServices.UCOMIStream.Commit(System.Int32)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: Commit(Int32)\n  nameWithType: UCOMIStream.Commit(Int32)\n  fullName: System.Runtime.InteropServices.UCOMIStream.Commit(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices.UCOMIStream.CopyTo(System.Runtime.InteropServices.UCOMIStream,System.Int64,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: CopyTo(UCOMIStream,Int64,IntPtr,IntPtr)\n  nameWithType: UCOMIStream.CopyTo(UCOMIStream,Int64,IntPtr,IntPtr)\n  fullName: System.Runtime.InteropServices.UCOMIStream.CopyTo(UCOMIStream,Int64,IntPtr,IntPtr)\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Runtime.InteropServices.UCOMIStream.LockRegion(System.Int64,System.Int64,System.Int32)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: LockRegion(Int64,Int64,Int32)\n  nameWithType: UCOMIStream.LockRegion(Int64,Int64,Int32)\n  fullName: System.Runtime.InteropServices.UCOMIStream.LockRegion(Int64,Int64,Int32)\n- uid: System.Runtime.InteropServices.UCOMIStream.Read(System.Byte[],System.Int32,System.IntPtr)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: Read(Byte[],Int32,IntPtr)\n  nameWithType: UCOMIStream.Read(Byte[],Int32,IntPtr)\n  fullName: System.Runtime.InteropServices.UCOMIStream.Read(Byte[],Int32,IntPtr)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices.UCOMIStream.Revert\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: Revert()\n  nameWithType: UCOMIStream.Revert()\n  fullName: System.Runtime.InteropServices.UCOMIStream.Revert()\n- uid: System.Runtime.InteropServices.UCOMIStream.Seek(System.Int64,System.Int32,System.IntPtr)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: Seek(Int64,Int32,IntPtr)\n  nameWithType: UCOMIStream.Seek(Int64,Int32,IntPtr)\n  fullName: System.Runtime.InteropServices.UCOMIStream.Seek(Int64,Int32,IntPtr)\n- uid: System.Runtime.InteropServices.UCOMIStream.SetSize(System.Int64)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: SetSize(Int64)\n  nameWithType: UCOMIStream.SetSize(Int64)\n  fullName: System.Runtime.InteropServices.UCOMIStream.SetSize(Int64)\n- uid: System.Runtime.InteropServices.UCOMIStream.Stat(System.Runtime.InteropServices.STATSTG@,System.Int32)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: Stat(STATSTG,Int32)\n  nameWithType: UCOMIStream.Stat(STATSTG,Int32)\n  fullName: System.Runtime.InteropServices.UCOMIStream.Stat(STATSTG,Int32)\n- uid: System.Runtime.InteropServices.STATSTG\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: STATSTG\n  nameWithType: STATSTG\n  fullName: System.Runtime.InteropServices.STATSTG\n- uid: System.Runtime.InteropServices.UCOMIStream.UnlockRegion(System.Int64,System.Int64,System.Int32)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: UnlockRegion(Int64,Int64,Int32)\n  nameWithType: UCOMIStream.UnlockRegion(Int64,Int64,Int32)\n  fullName: System.Runtime.InteropServices.UCOMIStream.UnlockRegion(Int64,Int64,Int32)\n- uid: System.Runtime.InteropServices.UCOMIStream.Write(System.Byte[],System.Int32,System.IntPtr)\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: Write(Byte[],Int32,IntPtr)\n  nameWithType: UCOMIStream.Write(Byte[],Int32,IntPtr)\n  fullName: System.Runtime.InteropServices.UCOMIStream.Write(Byte[],Int32,IntPtr)\n- uid: System.Runtime.InteropServices.UCOMIStream.Clone*\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: Clone\n  nameWithType: UCOMIStream.Clone\n- uid: System.Runtime.InteropServices.UCOMIStream.Commit*\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: Commit\n  nameWithType: UCOMIStream.Commit\n- uid: System.Runtime.InteropServices.UCOMIStream.CopyTo*\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: CopyTo\n  nameWithType: UCOMIStream.CopyTo\n- uid: System.Runtime.InteropServices.UCOMIStream.LockRegion*\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: LockRegion\n  nameWithType: UCOMIStream.LockRegion\n- uid: System.Runtime.InteropServices.UCOMIStream.Read*\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: Read\n  nameWithType: UCOMIStream.Read\n- uid: System.Runtime.InteropServices.UCOMIStream.Revert*\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: Revert\n  nameWithType: UCOMIStream.Revert\n- uid: System.Runtime.InteropServices.UCOMIStream.Seek*\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: Seek\n  nameWithType: UCOMIStream.Seek\n- uid: System.Runtime.InteropServices.UCOMIStream.SetSize*\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: SetSize\n  nameWithType: UCOMIStream.SetSize\n- uid: System.Runtime.InteropServices.UCOMIStream.Stat*\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: Stat\n  nameWithType: UCOMIStream.Stat\n- uid: System.Runtime.InteropServices.UCOMIStream.UnlockRegion*\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: UnlockRegion\n  nameWithType: UCOMIStream.UnlockRegion\n- uid: System.Runtime.InteropServices.UCOMIStream.Write*\n  parent: System.Runtime.InteropServices.UCOMIStream\n  isExternal: false\n  name: Write\n  nameWithType: UCOMIStream.Write\n"}