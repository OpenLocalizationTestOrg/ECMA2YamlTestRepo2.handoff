{"nodes":[{"pos":[1036,1199],"content":"The permission that is demanded by <xref href=\"System.Transactions\"></xref> when management of a transaction is escalated to MSDTC. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permission that is demanded by <bpt id=\"p1\">&lt;xref href=\"System.Transactions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when management of a transaction is escalated to MSDTC.","pos":[0,131],"source":"The permission that is demanded by <xref href=\"System.Transactions\"></xref> when management of a transaction is escalated to MSDTC."},{"content":"This class cannot be inherited.","pos":[132,163]}]},{"pos":[1211,2046],"content":"A local transaction only consumes resources from a single durable source or mutilple volatitle sources. A distributed transaction, on the other hand, has to interact with multiple durable resources, potentially across the network. When management of a transaction is escalated to MSDTC, the code that initiated the escalation is verified to have this permission. For more information on security levels, see [Security Trust Levels in Accessing Resources](http://msdn.microsoft.com/en-us/8e45acbc-0d81-4f64-9da7-8f766aebff51). For more information on transaction management escalation, see [Transaction Management Escalation](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7). The security demand affects the code that initiated the escalation, not necessarily the code that originally created the local transaction.","needQuote":true,"needEscape":true,"nodes":[{"content":"A local transaction only consumes resources from a single durable source or mutilple volatitle sources.","pos":[0,103]},{"content":"A distributed transaction, on the other hand, has to interact with multiple durable resources, potentially across the network.","pos":[104,230]},{"content":"When management of a transaction is escalated to MSDTC, the code that initiated the escalation is verified to have this permission.","pos":[231,362]},{"content":"For more information on security levels, see <bpt id=\"p1\">[</bpt>Security Trust Levels in Accessing Resources<ept id=\"p1\">](http://msdn.microsoft.com/en-us/8e45acbc-0d81-4f64-9da7-8f766aebff51)</ept>.","pos":[363,525],"source":" For more information on security levels, see [Security Trust Levels in Accessing Resources](http://msdn.microsoft.com/en-us/8e45acbc-0d81-4f64-9da7-8f766aebff51)."},{"content":"For more information on transaction management escalation, see <bpt id=\"p1\">[</bpt>Transaction Management Escalation<ept id=\"p1\">](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7)</ept>.","pos":[526,695],"source":" For more information on transaction management escalation, see [Transaction Management Escalation](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7)."},{"content":"The security demand affects the code that initiated the escalation, not necessarily the code that originally created the local transaction.","pos":[696,835]}]},{"pos":[3606,3720],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Transactions.DistributedTransactionPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Transactions.DistributedTransactionPermission\"></xref> class."},{"pos":[3944,4027],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."},{"pos":[4539,4603],"content":"Creates and returns an identical copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns an identical copy of the current permission.","pos":[0,64]}]},{"pos":[4770,4803],"content":"A copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current permission.","pos":[0,33]}]},{"pos":[5440,5510],"content":"Reconstructs a permission with a specified state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a permission with a specified state from an XML encoding.","pos":[0,70]}]},{"pos":[5719,5771],"content":"The XML encoding used to reconstruct the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoding used to reconstruct the permission.","pos":[0,52]}]},{"pos":[6401,6514],"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,113]}]},{"pos":[6722,6828],"content":"A permission to intersect with the current permission. It must be the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to intersect with the current permission. It must be the same type as the current permission.","pos":[0,106],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be the same type as the current permission.","pos":[55,106]}]}]},{"pos":[6900,7119],"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the intersection of the current permission and the specified permission.","pos":[0,105]},{"content":"This new permission is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the intersection is empty.","pos":[106,219],"source":" This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty."}]},{"pos":[7756,7858],"content":"Returns a value that indicates whether the current permission is a subset of the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the current permission is a subset of the specified permission.","pos":[0,102]}]},{"pos":[8044,8158],"content":"A permission to test for the subset relationship. This permission must be the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to test for the subset relationship. This permission must be the same type as the current permission.","pos":[0,114],"nodes":[{"content":"A permission to test for the subset relationship.","pos":[0,49]},{"content":"This permission must be the same type as the current permission.","pos":[50,114]}]}]},{"pos":[8217,8495],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current <bpt id=\"p2\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is a subset of the specified <bpt id=\"p3\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current <xref href=\"System.Security.IPermission\"></xref> is a subset of the specified <xref href=\"System.Security.IPermission\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9062,9192],"content":"Returns a value that indicates whether unrestricted access to the resource that is protected by the current permission is allowed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether unrestricted access to the resource that is protected by the current permission is allowed.","pos":[0,130]}]},{"pos":[9324,9535],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if unrestricted use of the resource protected by the permission is allowed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if unrestricted use of the resource protected by the permission is allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10061,10130],"content":"Creates an XML encoding of the security object and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML encoding of the security object and its current state.","pos":[0,69]}]},{"pos":[10306,10448],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the XML encoding of the security object, including any state information.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.SecurityElement\"></xref> that contains the XML encoding of the security object, including any state information."},{"pos":[11056,11150],"content":"Creates a permission that is the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]},{"pos":[11354,11461],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]},{"pos":[11533,11666],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.IPermission\"></xref> that represents the union of the current permission and the specified permission."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Transactions.DistributedTransactionPermission\n  id: DistributedTransactionPermission\n  children:\n  - System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Transactions.DistributedTransactionPermission.Copy\n  - System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)\n  - System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)\n  - System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Transactions.DistributedTransactionPermission.IsUnrestricted\n  - System.Transactions.DistributedTransactionPermission.ToXml\n  - System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: DistributedTransactionPermission\n  nameWithType: DistributedTransactionPermission\n  fullName: System.Transactions.DistributedTransactionPermission\n  type: Class\n  summary: The permission that is demanded by <xref href=\"System.Transactions\"></xref> when management of a transaction is escalated to MSDTC. This class cannot be inherited.\n  remarks: A local transaction only consumes resources from a single durable source or mutilple volatitle sources. A distributed transaction, on the other hand, has to interact with multiple durable resources, potentially across the network. When management of a transaction is escalated to MSDTC, the code that initiated the escalation is verified to have this permission. For more information on security levels, see [Security Trust Levels in Accessing Resources](http://msdn.microsoft.com/en-us/8e45acbc-0d81-4f64-9da7-8f766aebff51). For more information on transaction management escalation, see [Transaction Management Escalation](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7). The security demand affects the code that initiated the escalation, not necessarily the code that originally created the local transaction.\n  syntax:\n    content: 'public sealed class DistributedTransactionPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Transactions.DistributedTransactionPermission\n  langs:\n  - csharp\n  name: DistributedTransactionPermission(PermissionState)\n  nameWithType: DistributedTransactionPermission.DistributedTransactionPermission(PermissionState)\n  fullName: System.Transactions.DistributedTransactionPermission.DistributedTransactionPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Initializes a new instance of the <xref href=\"System.Transactions.DistributedTransactionPermission\"></xref> class.\n  syntax:\n    content: public DistributedTransactionPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Transactions.DistributedTransactionPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.DistributedTransactionPermission.Copy\n  id: Copy\n  parent: System.Transactions.DistributedTransactionPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: DistributedTransactionPermission.Copy()\n  fullName: System.Transactions.DistributedTransactionPermission.Copy()\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Creates and returns an identical copy of the current permission.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission.\n  overload: System.Transactions.DistributedTransactionPermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Transactions.DistributedTransactionPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: DistributedTransactionPermission.FromXml(SecurityElement)\n  fullName: System.Transactions.DistributedTransactionPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Reconstructs a permission with a specified state from an XML encoding.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: The XML encoding used to reconstruct the permission.\n  overload: System.Transactions.DistributedTransactionPermission.FromXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Transactions.DistributedTransactionPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: DistributedTransactionPermission.Intersect(IPermission)\n  fullName: System.Transactions.DistributedTransactionPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.\n  overload: System.Transactions.DistributedTransactionPermission.Intersect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Transactions.DistributedTransactionPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: DistributedTransactionPermission.IsSubsetOf(IPermission)\n  fullName: System.Transactions.DistributedTransactionPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Returns a value that indicates whether the current permission is a subset of the specified permission.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to test for the subset relationship. This permission must be the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current <xref href=\"System.Security.IPermission\"></xref> is a subset of the specified <xref href=\"System.Security.IPermission\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Transactions.DistributedTransactionPermission.IsSubsetOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.DistributedTransactionPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Transactions.DistributedTransactionPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: DistributedTransactionPermission.IsUnrestricted()\n  fullName: System.Transactions.DistributedTransactionPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Returns a value that indicates whether unrestricted access to the resource that is protected by the current permission is allowed.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if unrestricted use of the resource protected by the permission is allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Transactions.DistributedTransactionPermission.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.DistributedTransactionPermission.ToXml\n  id: ToXml\n  parent: System.Transactions.DistributedTransactionPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: DistributedTransactionPermission.ToXml()\n  fullName: System.Transactions.DistributedTransactionPermission.ToXml()\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Creates an XML encoding of the security object and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: A <xref href=\"System.Security.SecurityElement\"></xref> that contains the XML encoding of the security object, including any state information.\n  overload: System.Transactions.DistributedTransactionPermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Transactions.DistributedTransactionPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: DistributedTransactionPermission.Union(IPermission)\n  fullName: System.Transactions.DistributedTransactionPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: An <xref href=\"System.Security.IPermission\"></xref> that represents the union of the current permission and the specified permission.\n  overload: System.Transactions.DistributedTransactionPermission.Union*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Transactions.DistributedTransactionPermission\n  isExternal: false\n  name: DistributedTransactionPermission(PermissionState)\n  nameWithType: DistributedTransactionPermission.DistributedTransactionPermission(PermissionState)\n  fullName: System.Transactions.DistributedTransactionPermission.DistributedTransactionPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Transactions.DistributedTransactionPermission.Copy\n  parent: System.Transactions.DistributedTransactionPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: DistributedTransactionPermission.Copy()\n  fullName: System.Transactions.DistributedTransactionPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Transactions.DistributedTransactionPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: DistributedTransactionPermission.FromXml(SecurityElement)\n  fullName: System.Transactions.DistributedTransactionPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)\n  parent: System.Transactions.DistributedTransactionPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: DistributedTransactionPermission.Intersect(IPermission)\n  fullName: System.Transactions.DistributedTransactionPermission.Intersect(IPermission)\n- uid: System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Transactions.DistributedTransactionPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: DistributedTransactionPermission.IsSubsetOf(IPermission)\n  fullName: System.Transactions.DistributedTransactionPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Transactions.DistributedTransactionPermission.IsUnrestricted\n  parent: System.Transactions.DistributedTransactionPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: DistributedTransactionPermission.IsUnrestricted()\n  fullName: System.Transactions.DistributedTransactionPermission.IsUnrestricted()\n- uid: System.Transactions.DistributedTransactionPermission.ToXml\n  parent: System.Transactions.DistributedTransactionPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: DistributedTransactionPermission.ToXml()\n  fullName: System.Transactions.DistributedTransactionPermission.ToXml()\n- uid: System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)\n  parent: System.Transactions.DistributedTransactionPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: DistributedTransactionPermission.Union(IPermission)\n  fullName: System.Transactions.DistributedTransactionPermission.Union(IPermission)\n- uid: System.Transactions.DistributedTransactionPermission.#ctor*\n  parent: System.Transactions.DistributedTransactionPermission\n  isExternal: false\n  name: DistributedTransactionPermission\n  nameWithType: DistributedTransactionPermission.DistributedTransactionPermission\n- uid: System.Transactions.DistributedTransactionPermission.Copy*\n  parent: System.Transactions.DistributedTransactionPermission\n  isExternal: false\n  name: Copy\n  nameWithType: DistributedTransactionPermission.Copy\n- uid: System.Transactions.DistributedTransactionPermission.FromXml*\n  parent: System.Transactions.DistributedTransactionPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: DistributedTransactionPermission.FromXml\n- uid: System.Transactions.DistributedTransactionPermission.Intersect*\n  parent: System.Transactions.DistributedTransactionPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: DistributedTransactionPermission.Intersect\n- uid: System.Transactions.DistributedTransactionPermission.IsSubsetOf*\n  parent: System.Transactions.DistributedTransactionPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: DistributedTransactionPermission.IsSubsetOf\n- uid: System.Transactions.DistributedTransactionPermission.IsUnrestricted*\n  parent: System.Transactions.DistributedTransactionPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: DistributedTransactionPermission.IsUnrestricted\n- uid: System.Transactions.DistributedTransactionPermission.ToXml*\n  parent: System.Transactions.DistributedTransactionPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: DistributedTransactionPermission.ToXml\n- uid: System.Transactions.DistributedTransactionPermission.Union*\n  parent: System.Transactions.DistributedTransactionPermission\n  isExternal: false\n  name: Union\n  nameWithType: DistributedTransactionPermission.Union\n"}