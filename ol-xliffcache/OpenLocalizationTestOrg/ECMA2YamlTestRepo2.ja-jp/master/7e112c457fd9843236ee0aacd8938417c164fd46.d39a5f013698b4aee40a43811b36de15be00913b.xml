{"nodes":[{"pos":[1776,1858],"content":"Provides a Cryptography Next Generation (CNG) implementation of the RSA algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a Cryptography Next Generation (CNG) implementation of the RSA algorithm.","pos":[0,82]}]},{"pos":[1871,2794],"content":"The RSACng class is derived from the <xref:System.Security.Cryptography.RSA> class. Therefore, it is not a drop-in replacement for existing uses of <xref:System.Security.Cryptography.RSACryptoServiceProvider>.       RSACng uses a programming model that is similar to the <xref:System.Security.Cryptography.ECDsaCng> class rather than the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class. For example:      -   The key used by RSACng is managed by a separate <xref:System.Security.Cryptography.CngKey> object. In contrast, <xref:System.Security.Cryptography.RSACryptoServiceProvider> has a key that is directly tied to the operations of the type itself.      -   RSACng performs such operations as signing and verifying signatures by using properties of the RSACng object, just as <xref:System.Security.Cryptography.ECDsaCng> uses its object properties to control signing and verification operations.","needQuote":false,"needEscape":true,"nodes":[{"content":"The RSACng class is derived from the <xref:System.Security.Cryptography.RSA> class. Therefore, it is not a drop-in replacement for existing uses of <xref:System.Security.Cryptography.RSACryptoServiceProvider>.       RSACng uses a programming model that is similar to the <xref:System.Security.Cryptography.ECDsaCng> class rather than the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class. For example:      -   The key used by RSACng is managed by a separate <xref:System.Security.Cryptography.CngKey> object. In contrast, <xref:System.Security.Cryptography.RSACryptoServiceProvider> has a key that is directly tied to the operations of the type itself.      -   RSACng performs such operations as signing and verifying signatures by using properties of the RSACng object, just as <xref:System.Security.Cryptography.ECDsaCng> uses its object properties to control signing and verification operations.","pos":[0,917],"nodes":[{"content":"The RSACng class is derived from the &lt;xref:System.Security.Cryptography.RSA&gt; class.","pos":[0,83],"source":"The RSACng class is derived from the <xref:System.Security.Cryptography.RSA> class."},{"content":"Therefore, it is not a drop-in replacement for existing uses of &lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;.","pos":[84,209],"source":" Therefore, it is not a drop-in replacement for existing uses of <xref:System.Security.Cryptography.RSACryptoServiceProvider>."},{"content":"RSACng uses a programming model that is similar to the &lt;xref:System.Security.Cryptography.ECDsaCng&gt; class rather than the &lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt; class.","pos":[216,405],"source":"       RSACng uses a programming model that is similar to the <xref:System.Security.Cryptography.ECDsaCng> class rather than the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class."},{"content":"For example:      -   The key used by RSACng is managed by a separate &lt;xref:System.Security.Cryptography.CngKey&gt; object.","pos":[406,526],"source":" For example:      -   The key used by RSACng is managed by a separate <xref:System.Security.Cryptography.CngKey> object."},{"content":"In contrast, &lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt; has a key that is directly tied to the operations of the type itself.","pos":[527,670],"source":" In contrast, <xref:System.Security.Cryptography.RSACryptoServiceProvider> has a key that is directly tied to the operations of the type itself."},{"content":"-   RSACng performs such operations as signing and verifying signatures by using properties of the RSACng object, just as &lt;xref:System.Security.Cryptography.ECDsaCng&gt; uses its object properties to control signing and verification operations.","pos":[676,917],"source":"      -   RSACng performs such operations as signing and verifying signatures by using properties of the RSACng object, just as <xref:System.Security.Cryptography.ECDsaCng> uses its object properties to control signing and verification operations."}]}]},{"pos":[5072,5202],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RSACng\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a random 2,048-bit key pair.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSACng\"></xref> class with a random 2,048-bit key pair."},{"pos":[5739,5888],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RSACng\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a randomly generated key of the specified size.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSACng\"></xref> class with a randomly generated key of the specified size."},{"pos":[5900,6035],"content":"Valid key sizes range from 384 to 16,384 bits, in increments of 8. We recommend that a minimum size of 2,048 bits be used for all keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"Valid key sizes range from 384 to 16,384 bits, in increments of 8. We recommend that a minimum size of 2,048 bits be used for all keys.","pos":[0,135],"nodes":[{"content":"Valid key sizes range from 384 to 16,384 bits, in increments of 8.","pos":[0,66]},{"content":"We recommend that a minimum size of 2,048 bits be used for all keys.","pos":[67,135]}]}]},{"pos":[6166,6206],"content":"The size of the key to generate in bits.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the key to generate in bits.","pos":[0,40]}]},{"pos":[6424,6458],"content":"<ph id=\"ph1\">&lt;code&gt;keySize&lt;/code&gt;</ph> is not valid.","needQuote":true,"needEscape":true,"source":"<code>keySize</code> is not valid."},{"pos":[6912,7032],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RSACng\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified key.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSACng\"></xref> class with the specified key."},{"pos":[7045,7367],"content":"The <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=fullName> of `key` must be <xref:System.Security.Cryptography.CngAlgorithmGroup.Rsa%2A?displayProperty=fullName>.       This constructor creates a copy of the key. Even if `key` is disposed, the copy of this key object in RSA remains alive.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=fullName&gt; of <ph id=\"ph1\">`key`</ph> must be &lt;xref:System.Security.Cryptography.CngAlgorithmGroup.Rsa%2A?displayProperty=fullName&gt;.","pos":[0,193],"source":"The <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=fullName> of `key` must be <xref:System.Security.Cryptography.CngAlgorithmGroup.Rsa%2A?displayProperty=fullName>."},{"content":"This constructor creates a copy of the key.","pos":[200,243]},{"content":"Even if <ph id=\"ph1\">`key`</ph> is disposed, the copy of this key object in RSA remains alive.","pos":[244,320],"source":" Even if `key` is disposed, the copy of this key object in RSA remains alive."}]},{"pos":[7546,7580],"content":"The key to use for RSA operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key to use for RSA operations.","pos":[0,34]}]},{"pos":[7744,7784],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is not a valid RSA key.","needQuote":true,"needEscape":true,"source":"<code>key</code> is not a valid RSA key."},{"pos":[7887,7968],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8541,8594],"content":"Decrypts input data using the specified padding mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"Decrypts input data using the specified padding mode.","pos":[0,53]}]},{"pos":[8799,8819],"content":"The data to decrypt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data to decrypt.","pos":[0,20]}]},{"pos":[8919,8936],"content":"The padding mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"The padding mode.","pos":[0,17]}]},{"pos":[8994,9013],"content":"The decrypted data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The decrypted data.","pos":[0,19]}]},{"pos":[9188,9389],"content":"<code>data</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>padding</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;data&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,82],"source":"<code>data</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[89,185],"source":"       -or-       <code>padding</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[9539,9862],"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> does not equal <ph id=\"ph2\">&amp;lt;</ph>xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph>, or else the <ph id=\"ph4\">&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.Mode*&gt;</ph> of <ph id=\"ph5\">&lt;code&gt;padding&lt;/code&gt;</ph> does not equal <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RSAEncryptionPaddingMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>padding</code> does not equal &lt;xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=fullName&gt;, or else the <xref:System.Security.Cryptography.RSAEncryptionPadding.Mode*> of <code>padding</code> does not equal <xref href=\"System.Security.Cryptography.RSAEncryptionPaddingMode\"></xref>."},{"pos":[10297,10343],"content":"Decrypts the input data using the private key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Decrypts the input data using the private key.","pos":[0,46]}]},{"pos":[10492,10524],"content":"The cipher text to be decrypted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cipher text to be decrypted.","pos":[0,32]}]},{"pos":[10582,10655],"content":"The resulting decryption of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgb</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter in plain text.","needQuote":true,"needEscape":true,"source":"The resulting decryption of the <code>rgb</code> parameter in plain text."},{"pos":[10834,10868],"content":"This method call is not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method call is not supported.","pos":[0,34]}]},{"pos":[11427,11439],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12086,12138],"content":"Encrypts the input data using the specified padding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Encrypts the input data using the specified padding.","pos":[0,52]}]},{"pos":[12343,12363],"content":"The data to encrypt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data to encrypt.","pos":[0,20]}]},{"pos":[12463,12480],"content":"The padding mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"The padding mode.","pos":[0,17]}]},{"pos":[12538,12566],"content":"Returns <xref:System.Byte> .","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.Byte&gt; .","pos":[0,28],"source":"Returns <xref:System.Byte> ."}]},{"pos":[12741,12942],"content":"<code>data</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>padding</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;data&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,82],"source":"<code>data</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[89,185],"source":"       -or-       <code>padding</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[13092,13321],"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> does not equal <ph id=\"ph2\">&amp;lt;</ph>xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph> or <ph id=\"ph4\">&amp;lt;</ph>xref:System.Security.Cryptography.RSASignaturePadding.Pss%2A?displayProperty=fullName<ph id=\"ph5\">&amp;gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>padding</code> does not equal &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt; or &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pss%2A?displayProperty=fullName&gt;."},{"pos":[13756,13801],"content":"Encrypts the input data using the public key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Encrypts the input data using the public key.","pos":[0,45]}]},{"pos":[13950,13981],"content":"The plain text to be encrypted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The plain text to be encrypted.","pos":[0,31]}]},{"pos":[14039,14113],"content":"The resulting encryption of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgb</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter as cipher text.","needQuote":true,"needEscape":true,"source":"The resulting encryption of the <code>rgb</code> parameter as cipher text."},{"pos":[14292,14326],"content":"This method call is not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method call is not supported.","pos":[0,34]}]},{"pos":[14786,14903],"content":"Exports the key used by the RSA object into a <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RSAParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Exports the key used by the RSA object into a <xref href=\"System.Security.Cryptography.RSAParameters\"></xref> object."},{"pos":[15133,15299],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to include private parameters; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include private parameters; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15386,15417],"content":"The key used by the RSA object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key used by the RSA object.","pos":[0,31]}]},{"pos":[16282,16294],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16397,16409],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16467,16479],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17428,17440],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17502,17514],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17575,17587],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17690,17702],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17760,17772],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18381,18553],"content":"Replaces the existing key that the current instance is working with by creating a new <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the parameters structure.","needQuote":true,"needEscape":true,"source":"Replaces the existing key that the current instance is working with by creating a new <xref href=\"System.Security.Cryptography.CngKey\"></xref> for the parameters structure."},{"pos":[18565,18725],"content":"If `parameters` contains only an exponent and modulus, only a public key is imported. If `parameters` also contains P and Q values, a full key pair is imported.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <ph id=\"ph1\">`parameters`</ph> contains only an exponent and modulus, only a public key is imported.","pos":[0,85],"source":"If `parameters` contains only an exponent and modulus, only a public key is imported."},{"content":"If <ph id=\"ph1\">`parameters`</ph> also contains P and Q values, a full key pair is imported.","pos":[86,160],"source":" If `parameters` also contains P and Q values, a full key pair is imported."}]},{"pos":[18955,18974],"content":"The RSA parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The RSA parameters.","pos":[0,19]}]},{"pos":[19149,19216],"content":"<ph id=\"ph1\">&lt;code&gt;parameters&lt;/code&gt;</ph> contains neither an exponent nor a modulus.","needQuote":true,"needEscape":true,"source":"<code>parameters</code> contains neither an exponent nor a modulus."},{"pos":[19366,19506],"content":"<code>parameters</code> is not a valid RSA key.       -or-       <code>parameters</code> is a full key pair and the default KSP is used.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;parameters&lt;/code&gt;</ph> is not a valid RSA key.","pos":[0,47],"source":"<code>parameters</code> is not a valid RSA key."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;parameters&lt;/code&gt;</ph> is a full key pair and the default KSP is used.","pos":[54,136],"source":"       -or-       <code>parameters</code> is a full key pair and the default KSP is used."}]},{"pos":[19845,19996],"content":"Gets the key that will be used by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RSACng\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for any cryptographic operation that it performs.","needQuote":true,"needEscape":true,"source":"Gets the key that will be used by the <xref href=\"System.Security.Cryptography.RSACng\"></xref> object for any cryptographic operation that it performs."},{"pos":[20009,20793],"content":"The returned <xref:System.Security.Cryptography.CngKey> object is disposed if the key is reset, for instance by changing the <xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName> property, by using the <xref:System.Security.Cryptography.RSA.ImportParameters%2A?displayProperty=fullName> to create a new key, or by disposing of the parent <xref:System.Security.Cryptography.RSA> object. Therefore, you should ensure that the key object is no longer used in these cases.       This <xref:System.Security.Cryptography.CngKey> object is not the same as the <xref:System.Security.Cryptography.CngKey> object passed to the <xref:System.Security.Cryptography.RSACng.%23ctor%2A> constructor, if that constructor was used. However, it will point to the same CNG key.","needQuote":false,"needEscape":true,"nodes":[{"content":"The returned <xref:System.Security.Cryptography.CngKey> object is disposed if the key is reset, for instance by changing the <xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName> property, by using the <xref:System.Security.Cryptography.RSA.ImportParameters%2A?displayProperty=fullName> to create a new key, or by disposing of the parent <xref:System.Security.Cryptography.RSA> object. Therefore, you should ensure that the key object is no longer used in these cases.       This <xref:System.Security.Cryptography.CngKey> object is not the same as the <xref:System.Security.Cryptography.CngKey> object passed to the <xref:System.Security.Cryptography.RSACng.%23ctor%2A> constructor, if that constructor was used. However, it will point to the same CNG key.","pos":[0,782],"nodes":[{"content":"The returned &lt;xref:System.Security.Cryptography.CngKey&gt; object is disposed if the key is reset, for instance by changing the &lt;xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName&gt; property, by using the &lt;xref:System.Security.Cryptography.RSA.ImportParameters%2A?displayProperty=fullName&gt; to create a new key, or by disposing of the parent &lt;xref:System.Security.Cryptography.RSA&gt; object.","pos":[0,410],"source":"The returned <xref:System.Security.Cryptography.CngKey> object is disposed if the key is reset, for instance by changing the <xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName> property, by using the <xref:System.Security.Cryptography.RSA.ImportParameters%2A?displayProperty=fullName> to create a new key, or by disposing of the parent <xref:System.Security.Cryptography.RSA> object."},{"content":"Therefore, you should ensure that the key object is no longer used in these cases.","pos":[411,493]},{"content":"This &lt;xref:System.Security.Cryptography.CngKey&gt; object is not the same as the &lt;xref:System.Security.Cryptography.CngKey&gt; object passed to the &lt;xref:System.Security.Cryptography.RSACng.%23ctor%2A&gt; constructor, if that constructor was used.","pos":[500,738],"source":"       This <xref:System.Security.Cryptography.CngKey> object is not the same as the <xref:System.Security.Cryptography.CngKey> object passed to the <xref:System.Security.Cryptography.RSACng.%23ctor%2A> constructor, if that constructor was used."},{"content":"However, it will point to the same CNG key.","pos":[739,782]}]}]},{"pos":[20953,21037],"content":"The key used by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RSACng\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The key used by the <xref href=\"System.Security.Cryptography.RSACng\"></xref> object."},{"pos":[21530,21616],"content":"Gets the name of the key exchange algorithm available with this implementation of RSA.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the key exchange algorithm available with this implementation of RSA.","pos":[0,86]}]},{"pos":[21750,21764],"content":"Returns \"RSA\".","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns \"RSA\".","pos":[0,14]}]},{"pos":[22264,22347],"content":"Gets the name of the signature algorithm available with this implementation of RSA.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the signature algorithm available with this implementation of RSA.","pos":[0,83]}]},{"pos":[22479,22493],"content":"Returns \"RSA\".","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns \"RSA\".","pos":[0,14]}]},{"pos":[23299,23384],"content":"Signs data that was hashed by using the specified hashing algorithm and padding mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"Signs data that was hashed by using the specified hashing algorithm and padding mode.","pos":[0,85]}]},{"pos":[23651,23668],"content":"The hash to sign.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash to sign.","pos":[0,17]}]},{"pos":[23771,23795],"content":"The hash algorithm name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash algorithm name.","pos":[0,24]}]},{"pos":[23894,23911],"content":"The padding mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"The padding mode.","pos":[0,17]}]},{"pos":[23969,23985],"content":"The signed data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The signed data.","pos":[0,16]}]},{"pos":[24161,24362],"content":"<code>hash</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>padding</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;hash&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,82],"source":"<code>hash</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[89,185],"source":"       -or-       <code>padding</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[24458,24732],"content":"The value of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.Cryptography.HashAlgorithmName.Name%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">hashAlgorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or <ph id=\"ph4\">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id=\"ph5\">&amp;gt;</ph>.","needQuote":true,"needEscape":true,"source":"The value of the &lt;xref:System.Security.Cryptography.HashAlgorithmName.Name%2A?displayProperty=fullName&gt; property of <code>hashAlgorithm</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or &lt;xref:System.String.Empty?displayProperty=fullName&gt;."},{"pos":[24881,25110],"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> does not equal <ph id=\"ph2\">&amp;lt;</ph>xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph> or <ph id=\"ph4\">&amp;lt;</ph>xref:System.Security.Cryptography.RSASignaturePadding.Pss%2A?displayProperty=fullName<ph id=\"ph5\">&amp;gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>padding</code> does not equal &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt; or &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pss%2A?displayProperty=fullName&gt;."},{"pos":[25890,25985],"content":"Verifies data that was signed and already hashed with the specified algorithm and padding mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"Verifies data that was signed and already hashed with the specified algorithm and padding mode.","pos":[0,95]}]},{"pos":[26270,26289],"content":"The hash to verify.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash to verify.","pos":[0,19]}]},{"pos":[26355,26381],"content":"The signature of the data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The signature of the data.","pos":[0,26]}]},{"pos":[26484,26508],"content":"The hash algorithm name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash algorithm name.","pos":[0,24]}]},{"pos":[26607,26624],"content":"The padding mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"The padding mode.","pos":[0,17]}]},{"pos":[26683,26858],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the signature verifies for the hash; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the signature verifies for the hash; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[27036,27352],"content":"<code>hash</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>signature</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>padding</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;hash&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,82],"source":"<code>hash</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;signature&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[89,187],"source":"       -or-       <code>signature</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[194,290],"source":"       -or-       <code>padding</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[27448,27722],"content":"The value of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.Cryptography.HashAlgorithmName.Name%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">hashAlgorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or <ph id=\"ph4\">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id=\"ph5\">&amp;gt;</ph>.","needQuote":true,"needEscape":true,"source":"The value of the &lt;xref:System.Security.Cryptography.HashAlgorithmName.Name%2A?displayProperty=fullName&gt; property of <code>hashAlgorithm</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or &lt;xref:System.String.Empty?displayProperty=fullName&gt;."},{"pos":[27872,28424],"content":"<code>padding</code> does not equal &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt; or &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pss%2A?displayProperty=fullName&gt;.       -or-       The signature is badly formatted. (In the [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)] and 4.6.1 only; starting with the [!INCLUDE[net_v462](~/add/includes/net-v462-md.md)], the method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if a signature is badly formatted.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> does not equal <ph id=\"ph2\">&amp;lt;</ph>xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph> or <ph id=\"ph4\">&amp;lt;</ph>xref:System.Security.Cryptography.RSASignaturePadding.Pss%2A?displayProperty=fullName<ph id=\"ph5\">&amp;gt;</ph>.","pos":[0,229],"source":"<code>padding</code> does not equal &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt; or &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pss%2A?displayProperty=fullName&gt;."},{"content":"-or-       The signature is badly formatted.","pos":[236,280]},{"content":"(In the <ph id=\"ph1\">[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]</ph> and 4.6.1 only; starting with the <ph id=\"ph2\">[!INCLUDE[net_v462](~/add/includes/net-v462-md.md)]</ph>, the method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a signature is badly formatted.","pos":[281,542],"source":" (In the [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)] and 4.6.1 only; starting with the [!INCLUDE[net_v462](~/add/includes/net-v462-md.md)], the method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if a signature is badly formatted."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.RSACng\n  id: RSACng\n  children:\n  - System.Security.Cryptography.RSACng.#ctor\n  - System.Security.Cryptography.RSACng.#ctor(System.Int32)\n  - System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)\n  - System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  - System.Security.Cryptography.RSACng.DecryptValue(System.Byte[])\n  - System.Security.Cryptography.RSACng.Dispose(System.Boolean)\n  - System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  - System.Security.Cryptography.RSACng.EncryptValue(System.Byte[])\n  - System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)\n  - System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)\n  - System.Security.Cryptography.RSACng.Key\n  - System.Security.Cryptography.RSACng.KeyExchangeAlgorithm\n  - System.Security.Cryptography.RSACng.SignatureAlgorithm\n  - System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  langs:\n  - csharp\n  name: RSACng\n  nameWithType: RSACng\n  fullName: System.Security.Cryptography.RSACng\n  type: Class\n  summary: Provides a Cryptography Next Generation (CNG) implementation of the RSA algorithm.\n  remarks: \"The RSACng class is derived from the <xref:System.Security.Cryptography.RSA> class. Therefore, it is not a drop-in replacement for existing uses of <xref:System.Security.Cryptography.RSACryptoServiceProvider>.  \\n  \\n RSACng uses a programming model that is similar to the <xref:System.Security.Cryptography.ECDsaCng> class rather than the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class. For example:  \\n  \\n-   The key used by RSACng is managed by a separate <xref:System.Security.Cryptography.CngKey> object. In contrast, <xref:System.Security.Cryptography.RSACryptoServiceProvider> has a key that is directly tied to the operations of the type itself.  \\n  \\n-   RSACng performs such operations as signing and verifying signatures by using properties of the RSACng object, just as <xref:System.Security.Cryptography.ECDsaCng> uses its object properties to control signing and verification operations.\"\n  syntax:\n    content: 'public sealed class RSACng : System.Security.Cryptography.RSA'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsymmetricAlgorithm\n  - System.Security.Cryptography.RSA\n  implements: []\n  inheritedMembers:\n  - System.Security.Cryptography.AsymmetricAlgorithm.Clear\n  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.RSA.Create\n  - System.Security.Cryptography.RSA.Create(System.String)\n  - System.Security.Cryptography.RSA.FromXmlString(System.String)\n  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.ToXmlString(System.Boolean)\n  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RSACng.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: RSACng()\n  nameWithType: RSACng.RSACng()\n  fullName: System.Security.Cryptography.RSACng.RSACng()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSACng\"></xref> class with a random 2,048-bit key pair.\n  syntax:\n    content: public RSACng ();\n    parameters: []\n  overload: System.Security.Cryptography.RSACng.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RSACng.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: RSACng(Int32)\n  nameWithType: RSACng.RSACng(Int32)\n  fullName: System.Security.Cryptography.RSACng.RSACng(Int32)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSACng\"></xref> class with a randomly generated key of the specified size.\n  remarks: Valid key sizes range from 384 to 16,384 bits, in increments of 8. We recommend that a minimum size of 2,048 bits be used for all keys.\n  syntax:\n    content: public RSACng (int keySize);\n    parameters:\n    - id: keySize\n      type: System.Int32\n      description: The size of the key to generate in bits.\n  overload: System.Security.Cryptography.RSACng.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: <code>keySize</code> is not valid.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)\n  id: '#ctor(System.Security.Cryptography.CngKey)'\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: RSACng(CngKey)\n  nameWithType: RSACng.RSACng(CngKey)\n  fullName: System.Security.Cryptography.RSACng.RSACng(CngKey)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSACng\"></xref> class with the specified key.\n  remarks: \"The <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=fullName> of `key` must be <xref:System.Security.Cryptography.CngAlgorithmGroup.Rsa%2A?displayProperty=fullName>.  \\n  \\n This constructor creates a copy of the key. Even if `key` is disposed, the copy of this key object in RSA remains alive.\"\n  syntax:\n    content: public RSACng (System.Security.Cryptography.CngKey key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.CngKey\n      description: The key to use for RSA operations.\n  overload: System.Security.Cryptography.RSACng.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>key</code> is not a valid RSA key.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  id: Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: Decrypt(Byte[],RSAEncryptionPadding)\n  nameWithType: RSACng.Decrypt(Byte[],RSAEncryptionPadding)\n  fullName: System.Security.Cryptography.RSACng.Decrypt(Byte[],RSAEncryptionPadding)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Decrypts input data using the specified padding mode.\n  syntax:\n    content: public override byte[] Decrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: The data to decrypt.\n    - id: padding\n      type: System.Security.Cryptography.RSAEncryptionPadding\n      description: The padding mode.\n    return:\n      type: System.Byte[]\n      description: The decrypted data.\n  overload: System.Security.Cryptography.RSACng.Decrypt*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>data</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>padding</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: <code>padding</code> does not equal &lt;xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=fullName&gt;, or else the <xref:System.Security.Cryptography.RSAEncryptionPadding.Mode*> of <code>padding</code> does not equal <xref href=\"System.Security.Cryptography.RSAEncryptionPaddingMode\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RSACng.DecryptValue(System.Byte[])\n  id: DecryptValue(System.Byte[])\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: DecryptValue(Byte[])\n  nameWithType: RSACng.DecryptValue(Byte[])\n  fullName: System.Security.Cryptography.RSACng.DecryptValue(Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Decrypts the input data using the private key.\n  syntax:\n    content: public override byte[] DecryptValue (byte[] rgb);\n    parameters:\n    - id: rgb\n      type: System.Byte[]\n      description: The cipher text to be decrypted.\n    return:\n      type: System.Byte[]\n      description: The resulting decryption of the <code>rgb</code> parameter in plain text.\n  overload: System.Security.Cryptography.RSACng.DecryptValue*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method call is not supported.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RSACng.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: RSACng.Dispose(Boolean)\n  fullName: System.Security.Cryptography.RSACng.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: To be added.\n  overload: System.Security.Cryptography.RSACng.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  id: Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: Encrypt(Byte[],RSAEncryptionPadding)\n  nameWithType: RSACng.Encrypt(Byte[],RSAEncryptionPadding)\n  fullName: System.Security.Cryptography.RSACng.Encrypt(Byte[],RSAEncryptionPadding)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Encrypts the input data using the specified padding.\n  syntax:\n    content: public override byte[] Encrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: The data to encrypt.\n    - id: padding\n      type: System.Security.Cryptography.RSAEncryptionPadding\n      description: The padding mode.\n    return:\n      type: System.Byte[]\n      description: Returns <xref:System.Byte> .\n  overload: System.Security.Cryptography.RSACng.Encrypt*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>data</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>padding</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: <code>padding</code> does not equal &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt; or &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pss%2A?displayProperty=fullName&gt;.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RSACng.EncryptValue(System.Byte[])\n  id: EncryptValue(System.Byte[])\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: EncryptValue(Byte[])\n  nameWithType: RSACng.EncryptValue(Byte[])\n  fullName: System.Security.Cryptography.RSACng.EncryptValue(Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Encrypts the input data using the public key.\n  syntax:\n    content: public override byte[] EncryptValue (byte[] rgb);\n    parameters:\n    - id: rgb\n      type: System.Byte[]\n      description: The plain text to be encrypted.\n    return:\n      type: System.Byte[]\n      description: The resulting encryption of the <code>rgb</code> parameter as cipher text.\n  overload: System.Security.Cryptography.RSACng.EncryptValue*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method call is not supported.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)\n  id: ExportParameters(System.Boolean)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: ExportParameters(Boolean)\n  nameWithType: RSACng.ExportParameters(Boolean)\n  fullName: System.Security.Cryptography.RSACng.ExportParameters(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Exports the key used by the RSA object into a <xref href=\"System.Security.Cryptography.RSAParameters\"></xref> object.\n  syntax:\n    content: public override System.Security.Cryptography.RSAParameters ExportParameters (bool includePrivateParameters);\n    parameters:\n    - id: includePrivateParameters\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include private parameters; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Security.Cryptography.RSAParameters\n      description: The key used by the RSA object.\n  overload: System.Security.Cryptography.RSACng.ExportParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: HashData(Stream,HashAlgorithmName)\n  nameWithType: RSACng.HashData(Stream,HashAlgorithmName)\n  fullName: System.Security.Cryptography.RSACng.HashData(Stream,HashAlgorithmName)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);\n    parameters:\n    - id: data\n      type: System.IO.Stream\n      description: To be added.\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: To be added.\n    return:\n      type: System.Byte[]\n      description: To be added.\n  overload: System.Security.Cryptography.RSACng.HashData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  nameWithType: RSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  fullName: System.Security.Cryptography.RSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: To be added.\n    - id: offset\n      type: System.Int32\n      description: To be added.\n    - id: count\n      type: System.Int32\n      description: To be added.\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: To be added.\n    return:\n      type: System.Byte[]\n      description: To be added.\n  overload: System.Security.Cryptography.RSACng.HashData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)\n  id: ImportParameters(System.Security.Cryptography.RSAParameters)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: ImportParameters(RSAParameters)\n  nameWithType: RSACng.ImportParameters(RSAParameters)\n  fullName: System.Security.Cryptography.RSACng.ImportParameters(RSAParameters)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Replaces the existing key that the current instance is working with by creating a new <xref href=\"System.Security.Cryptography.CngKey\"></xref> for the parameters structure.\n  remarks: If `parameters` contains only an exponent and modulus, only a public key is imported. If `parameters` also contains P and Q values, a full key pair is imported.\n  syntax:\n    content: public override void ImportParameters (System.Security.Cryptography.RSAParameters parameters);\n    parameters:\n    - id: parameters\n      type: System.Security.Cryptography.RSAParameters\n      description: The RSA parameters.\n  overload: System.Security.Cryptography.RSACng.ImportParameters*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>parameters</code> contains neither an exponent nor a modulus.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"<code>parameters</code> is not a valid RSA key.  \\n  \\n -or-  \\n  \\n <code>parameters</code> is a full key pair and the default KSP is used.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RSACng.Key\n  id: Key\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: Key\n  nameWithType: RSACng.Key\n  fullName: System.Security.Cryptography.RSACng.Key\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets the key that will be used by the <xref href=\"System.Security.Cryptography.RSACng\"></xref> object for any cryptographic operation that it performs.\n  remarks: \"The returned <xref:System.Security.Cryptography.CngKey> object is disposed if the key is reset, for instance by changing the <xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName> property, by using the <xref:System.Security.Cryptography.RSA.ImportParameters%2A?displayProperty=fullName> to create a new key, or by disposing of the parent <xref:System.Security.Cryptography.RSA> object. Therefore, you should ensure that the key object is no longer used in these cases.  \\n  \\n This <xref:System.Security.Cryptography.CngKey> object is not the same as the <xref:System.Security.Cryptography.CngKey> object passed to the <xref:System.Security.Cryptography.RSACng.%23ctor%2A> constructor, if that constructor was used. However, it will point to the same CNG key.\"\n  syntax:\n    content: public System.Security.Cryptography.CngKey Key { get; }\n    return:\n      type: System.Security.Cryptography.CngKey\n      description: The key used by the <xref href=\"System.Security.Cryptography.RSACng\"></xref> object.\n  overload: System.Security.Cryptography.RSACng.Key*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm\n  id: KeyExchangeAlgorithm\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: KeyExchangeAlgorithm\n  nameWithType: RSACng.KeyExchangeAlgorithm\n  fullName: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets the name of the key exchange algorithm available with this implementation of RSA.\n  syntax:\n    content: public override string KeyExchangeAlgorithm { get; }\n    return:\n      type: System.String\n      description: Returns \"RSA\".\n  overload: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RSACng.SignatureAlgorithm\n  id: SignatureAlgorithm\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: SignatureAlgorithm\n  nameWithType: RSACng.SignatureAlgorithm\n  fullName: System.Security.Cryptography.RSACng.SignatureAlgorithm\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets the name of the signature algorithm available with this implementation of RSA.\n  syntax:\n    content: public override string SignatureAlgorithm { get; }\n    return:\n      type: System.String\n      description: Returns \"RSA\".\n  overload: System.Security.Cryptography.RSACng.SignatureAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  id: SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)\n  nameWithType: RSACng.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)\n  fullName: System.Security.Cryptography.RSACng.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Signs data that was hashed by using the specified hashing algorithm and padding mode.\n  syntax:\n    content: public override byte[] SignHash (byte[] hash, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);\n    parameters:\n    - id: hash\n      type: System.Byte[]\n      description: The hash to sign.\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The hash algorithm name.\n    - id: padding\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: The padding mode.\n    return:\n      type: System.Byte[]\n      description: The signed data.\n  overload: System.Security.Cryptography.RSACng.SignHash*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>hash</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>padding</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value of the &lt;xref:System.Security.Cryptography.HashAlgorithmName.Name%2A?displayProperty=fullName&gt; property of <code>hashAlgorithm</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or &lt;xref:System.String.Empty?displayProperty=fullName&gt;.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: <code>padding</code> does not equal &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt; or &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pss%2A?displayProperty=fullName&gt;.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  id: VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)\n  nameWithType: RSACng.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)\n  fullName: System.Security.Cryptography.RSACng.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Verifies data that was signed and already hashed with the specified algorithm and padding mode.\n  syntax:\n    content: public override bool VerifyHash (byte[] hash, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);\n    parameters:\n    - id: hash\n      type: System.Byte[]\n      description: The hash to verify.\n    - id: signature\n      type: System.Byte[]\n      description: The signature of the data.\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The hash algorithm name.\n    - id: padding\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: The padding mode.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the signature verifies for the hash; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.RSACng.VerifyHash*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>hash</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>signature</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>padding</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value of the &lt;xref:System.Security.Cryptography.HashAlgorithmName.Name%2A?displayProperty=fullName&gt; property of <code>hashAlgorithm</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or &lt;xref:System.String.Empty?displayProperty=fullName&gt;.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"<code>padding</code> does not equal &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt; or &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pss%2A?displayProperty=fullName&gt;.  \\n  \\n -or-  \\n  \\n The signature is badly formatted. (In the [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)] and 4.6.1 only; starting with the [!INCLUDE[net_v462](~/add/includes/net-v462-md.md)], the method returns <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref> if a signature is badly formatted.\"\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.RSA\n  isExternal: false\n  name: System.Security.Cryptography.RSA\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.Security.Cryptography.RSACng.#ctor\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: RSACng()\n  nameWithType: RSACng.RSACng()\n  fullName: System.Security.Cryptography.RSACng.RSACng()\n- uid: System.Security.Cryptography.RSACng.#ctor(System.Int32)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: RSACng(Int32)\n  nameWithType: RSACng.RSACng(Int32)\n  fullName: System.Security.Cryptography.RSACng.RSACng(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: RSACng(CngKey)\n  nameWithType: RSACng.RSACng(CngKey)\n  fullName: System.Security.Cryptography.RSACng.RSACng(CngKey)\n- uid: System.Security.Cryptography.CngKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKey\n  nameWithType: CngKey\n  fullName: System.Security.Cryptography.CngKey\n- uid: System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: Decrypt(Byte[],RSAEncryptionPadding)\n  nameWithType: RSACng.Decrypt(Byte[],RSAEncryptionPadding)\n  fullName: System.Security.Cryptography.RSACng.Decrypt(Byte[],RSAEncryptionPadding)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.RSAEncryptionPadding\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSAEncryptionPadding\n  nameWithType: RSAEncryptionPadding\n  fullName: System.Security.Cryptography.RSAEncryptionPadding\n- uid: System.Security.Cryptography.RSACng.DecryptValue(System.Byte[])\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: DecryptValue(Byte[])\n  nameWithType: RSACng.DecryptValue(Byte[])\n  fullName: System.Security.Cryptography.RSACng.DecryptValue(Byte[])\n- uid: System.Security.Cryptography.RSACng.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: RSACng.Dispose(Boolean)\n  fullName: System.Security.Cryptography.RSACng.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: Encrypt(Byte[],RSAEncryptionPadding)\n  nameWithType: RSACng.Encrypt(Byte[],RSAEncryptionPadding)\n  fullName: System.Security.Cryptography.RSACng.Encrypt(Byte[],RSAEncryptionPadding)\n- uid: System.Security.Cryptography.RSACng.EncryptValue(System.Byte[])\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: EncryptValue(Byte[])\n  nameWithType: RSACng.EncryptValue(Byte[])\n  fullName: System.Security.Cryptography.RSACng.EncryptValue(Byte[])\n- uid: System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: ExportParameters(Boolean)\n  nameWithType: RSACng.ExportParameters(Boolean)\n  fullName: System.Security.Cryptography.RSACng.ExportParameters(Boolean)\n- uid: System.Security.Cryptography.RSAParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSAParameters\n  nameWithType: RSAParameters\n  fullName: System.Security.Cryptography.RSAParameters\n- uid: System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: HashData(Stream,HashAlgorithmName)\n  nameWithType: RSACng.HashData(Stream,HashAlgorithmName)\n  fullName: System.Security.Cryptography.RSACng.HashData(Stream,HashAlgorithmName)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  nameWithType: RSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  fullName: System.Security.Cryptography.RSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)\n- uid: System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: ImportParameters(RSAParameters)\n  nameWithType: RSACng.ImportParameters(RSAParameters)\n  fullName: System.Security.Cryptography.RSACng.ImportParameters(RSAParameters)\n- uid: System.Security.Cryptography.RSACng.Key\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: Key\n  nameWithType: RSACng.Key\n  fullName: System.Security.Cryptography.RSACng.Key\n- uid: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: KeyExchangeAlgorithm\n  nameWithType: RSACng.KeyExchangeAlgorithm\n  fullName: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.RSACng.SignatureAlgorithm\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: SignatureAlgorithm\n  nameWithType: RSACng.SignatureAlgorithm\n  fullName: System.Security.Cryptography.RSACng.SignatureAlgorithm\n- uid: System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)\n  nameWithType: RSACng.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)\n  fullName: System.Security.Cryptography.RSACng.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)\n- uid: System.Security.Cryptography.RSASignaturePadding\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSASignaturePadding\n  nameWithType: RSASignaturePadding\n  fullName: System.Security.Cryptography.RSASignaturePadding\n- uid: System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)\n  nameWithType: RSACng.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)\n  fullName: System.Security.Cryptography.RSACng.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)\n- uid: System.Security.Cryptography.RSACng.#ctor*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: RSACng\n  nameWithType: RSACng.RSACng\n- uid: System.Security.Cryptography.RSACng.Decrypt*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: Decrypt\n  nameWithType: RSACng.Decrypt\n- uid: System.Security.Cryptography.RSACng.DecryptValue*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: DecryptValue\n  nameWithType: RSACng.DecryptValue\n- uid: System.Security.Cryptography.RSACng.Dispose*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: Dispose\n  nameWithType: RSACng.Dispose\n- uid: System.Security.Cryptography.RSACng.Encrypt*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: Encrypt\n  nameWithType: RSACng.Encrypt\n- uid: System.Security.Cryptography.RSACng.EncryptValue*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: EncryptValue\n  nameWithType: RSACng.EncryptValue\n- uid: System.Security.Cryptography.RSACng.ExportParameters*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: ExportParameters\n  nameWithType: RSACng.ExportParameters\n- uid: System.Security.Cryptography.RSACng.HashData*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: HashData\n  nameWithType: RSACng.HashData\n- uid: System.Security.Cryptography.RSACng.ImportParameters*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: ImportParameters\n  nameWithType: RSACng.ImportParameters\n- uid: System.Security.Cryptography.RSACng.Key*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: Key\n  nameWithType: RSACng.Key\n- uid: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: KeyExchangeAlgorithm\n  nameWithType: RSACng.KeyExchangeAlgorithm\n- uid: System.Security.Cryptography.RSACng.SignatureAlgorithm*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: SignatureAlgorithm\n  nameWithType: RSACng.SignatureAlgorithm\n- uid: System.Security.Cryptography.RSACng.SignHash*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: SignHash\n  nameWithType: RSACng.SignHash\n- uid: System.Security.Cryptography.RSACng.VerifyHash*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: VerifyHash\n  nameWithType: RSACng.VerifyHash\n"}