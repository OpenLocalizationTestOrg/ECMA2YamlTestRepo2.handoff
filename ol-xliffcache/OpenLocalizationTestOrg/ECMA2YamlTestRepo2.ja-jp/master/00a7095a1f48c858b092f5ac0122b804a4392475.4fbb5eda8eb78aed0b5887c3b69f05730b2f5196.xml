{"nodes":[{"pos":[1008,1237],"content":"Facilitates interaction between <xref href=\"System.Transactions\"></xref> and components that were previously written to interact with MSDTC, COM+, or <xref href=\"System.EnterpriseServices\"></xref>. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Facilitates interaction between <bpt id=\"p1\">&lt;xref href=\"System.Transactions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and components that were previously written to interact with MSDTC, COM+, or <bpt id=\"p2\">&lt;xref href=\"System.EnterpriseServices\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,197],"source":"Facilitates interaction between <xref href=\"System.Transactions\"></xref> and components that were previously written to interact with MSDTC, COM+, or <xref href=\"System.EnterpriseServices\"></xref>."},{"content":"This class cannot be inherited.","pos":[198,229]}]},{"pos":[1250,4616],"content":"This class provides methods for transaction propagation. For more information on how this process works, see [Transaction Propagation](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp).       Using the methods provided by this class, you can engage in two types of transaction propagations, Export/Import (push model) and Transmitter/Receiver (pull model).       The Export/Import (push model) propagation involves these steps,      1.  On the remote machine, obtain the \"whereabouts\" of the transaction manager of that machine by calling the <xref:System.Transactions.TransactionInterop.GetWhereabouts%2A> method. You can then cache this piece of information on the client machine for future usage.      2.  Send the data containing the whereabouts to the client machine using any preferred method      3.  On the client machine, use the whereabouts to \"export\" the transaction to the remote machine and generate a transaction \"cookie\".  This is done by calling <xref:System.Transactions.TransactionInterop.GetExportCookie%2A> and passing in the remote machine's whereabouts.      4.  Send the data containing the transaction \"cookie\" to the remote machine using any preferred method      5.  On the remote machine, use the transaction \"cookie\" to obtain a clone of the client transaction by calling the <xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A> method.      6.  On the remote machine, use the clone transaction to enlist the resource manager using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> or <xref:System.Transactions.Transaction.EnlistDurable%2A> methods of the <xref:System.Transactions.Transaction> class.       The Transmitter/Receiver (pull model) propagation involves these steps,      -   On the client machine, using the transaction generates a corresponding \"propagation token\" by calling <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>      -   Send the data containing the \"propagation token\" of the transaction to the remote machine using any preferred method      -   On the remote machine, use the \"propagation token\" to obtain a clone of the client transaction by calling <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A>       The Transmitter/Receiver model provides better performance in scenarios where the transaction token is sent to a remote machine, but the remote machine may not use it to obtain the transaction.  This is because the transaction is not propagated until <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A> is called. Another advantage is that the propagation token can be sent to any remote machine, while the export cookie can be used only on the machine that provided the whereabouts.       However, you should also note that the whereabouts of remote transaction managers are encapsulated in all the propagation tokens, making them bigger than the corresponding transaction cookies from the Export/Import model.       **Note** This type uses <xref:System.Security.Permissions.SecurityAction> to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the `FullTrust` permission set.","needQuote":false,"needEscape":true,"nodes":[{"content":"This class provides methods for transaction propagation.","pos":[0,56]},{"content":"For more information on how this process works, see <bpt id=\"p1\">[</bpt>Transaction Propagation<ept id=\"p1\">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp)</ept>.","pos":[57,248],"source":" For more information on how this process works, see [Transaction Propagation](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp)."},{"content":"Using the methods provided by this class, you can engage in two types of transaction propagations, Export/Import (push model) and Transmitter/Receiver (pull model).","pos":[255,419]},{"content":"The Export/Import (push model) propagation involves these steps,      1.","pos":[426,498]},{"content":"On the remote machine, obtain the \"whereabouts\" of the transaction manager of that machine by calling the &lt;xref:System.Transactions.TransactionInterop.GetWhereabouts%2A&gt; method.","pos":[500,677],"source":"  On the remote machine, obtain the \"whereabouts\" of the transaction manager of that machine by calling the <xref:System.Transactions.TransactionInterop.GetWhereabouts%2A> method."},{"content":"You can then cache this piece of information on the client machine for future usage.","pos":[678,762]},{"content":"2.","pos":[768,770]},{"content":"Send the data containing the whereabouts to the client machine using any preferred method      3.","pos":[772,869]},{"content":"On the client machine, use the whereabouts to \"export\" the transaction to the remote machine and generate a transaction \"cookie\".","pos":[871,1000]},{"content":"This is done by calling &lt;xref:System.Transactions.TransactionInterop.GetExportCookie%2A&gt; and passing in the remote machine's whereabouts.","pos":[1002,1139],"source":"  This is done by calling <xref:System.Transactions.TransactionInterop.GetExportCookie%2A> and passing in the remote machine's whereabouts."},{"content":"4.","pos":[1145,1147]},{"content":"Send the data containing the transaction \"cookie\" to the remote machine using any preferred method      5.","pos":[1149,1255]},{"content":"On the remote machine, use the transaction \"cookie\" to obtain a clone of the client transaction by calling the &lt;xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A&gt; method.","pos":[1257,1455],"source":"  On the remote machine, use the transaction \"cookie\" to obtain a clone of the client transaction by calling the <xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A> method."},{"content":"6.","pos":[1461,1463]},{"content":"On the remote machine, use the clone transaction to enlist the resource manager using the &lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt; or &lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt; methods of the &lt;xref:System.Transactions.Transaction&gt; class.","pos":[1465,1731],"source":"  On the remote machine, use the clone transaction to enlist the resource manager using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> or <xref:System.Transactions.Transaction.EnlistDurable%2A> methods of the <xref:System.Transactions.Transaction> class."},{"content":"The Transmitter/Receiver (pull model) propagation involves these steps,      -   On the client machine, using the transaction generates a corresponding \"propagation token\" by calling &lt;xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A&gt;      -   Send the data containing the \"propagation token\" of the transaction to the remote machine using any preferred method      -   On the remote machine, use the \"propagation token\" to obtain a clone of the client transaction by calling &lt;xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A&gt;       The Transmitter/Receiver model provides better performance in scenarios where the transaction token is sent to a remote machine, but the remote machine may not use it to obtain the transaction.","pos":[1738,2536],"source":"       The Transmitter/Receiver (pull model) propagation involves these steps,      -   On the client machine, using the transaction generates a corresponding \"propagation token\" by calling <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>      -   Send the data containing the \"propagation token\" of the transaction to the remote machine using any preferred method      -   On the remote machine, use the \"propagation token\" to obtain a clone of the client transaction by calling <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A>       The Transmitter/Receiver model provides better performance in scenarios where the transaction token is sent to a remote machine, but the remote machine may not use it to obtain the transaction."},{"content":"This is because the transaction is not propagated until &lt;xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A&gt; is called.","pos":[2538,2699],"source":"  This is because the transaction is not propagated until <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A> is called."},{"content":"Another advantage is that the propagation token can be sent to any remote machine, while the export cookie can be used only on the machine that provided the whereabouts.","pos":[2700,2869]},{"content":"However, you should also note that the whereabouts of remote transaction managers are encapsulated in all the propagation tokens, making them bigger than the corresponding transaction cookies from the Export/Import model.","pos":[2876,3097]},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> This type uses &lt;xref:System.Security.Permissions.SecurityAction&gt; to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the <ph id=\"ph1\">`FullTrust`</ph> permission set.","pos":[3104,3320],"source":"**Note** This type uses <xref:System.Security.Permissions.SecurityAction> to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the `FullTrust` permission set."}]},{"pos":[5283,5428],"content":"Gets an <bpt id=\"p1\">&lt;xref href=\"System.Transactions.IDtcTransaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that represents a <bpt id=\"p2\">&lt;xref href=\"System.Transactions.Transaction\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets an <xref href=\"System.Transactions.IDtcTransaction\"></xref> instance that represents a <xref href=\"System.Transactions.Transaction\"></xref>."},{"pos":[5668,5748],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Transactions.Transaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to be marshaled.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Transactions.Transaction\"></xref> instance to be marshaled."},{"pos":[5828,6367],"content":"An <xref href=\"System.Transactions.IDtcTransaction\"></xref> instance that represents a <xref href=\"System.Transactions.Transaction\"></xref>.  The <xref href=\"System.Transactions.IDtcTransaction\"></xref> instance is compatible with the unmanaged form of [ITransaction](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) used by MSDTC and with the Managed form of <xref href=\"System.EnterpriseServices.ITransaction\"></xref> used by <xref href=\"System.EnterpriseServices\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Transactions.IDtcTransaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that represents a <bpt id=\"p2\">&lt;xref href=\"System.Transactions.Transaction\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,140],"source":"An <xref href=\"System.Transactions.IDtcTransaction\"></xref> instance that represents a <xref href=\"System.Transactions.Transaction\"></xref>."},{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Transactions.IDtcTransaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance is compatible with the unmanaged form of <bpt id=\"p2\">[</bpt>ITransaction<ept id=\"p2\">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp)</ept> used by MSDTC and with the Managed form of <bpt id=\"p3\">&lt;xref href=\"System.EnterpriseServices.ITransaction\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> used by <bpt id=\"p4\">&lt;xref href=\"System.EnterpriseServices\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[142,539],"source":"  The <xref href=\"System.Transactions.IDtcTransaction\"></xref> instance is compatible with the unmanaged form of [ITransaction](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) used by MSDTC and with the Managed form of <xref href=\"System.EnterpriseServices.ITransaction\"></xref> used by <xref href=\"System.EnterpriseServices\"></xref>."}]},{"pos":[7024,7090],"content":"Transforms a transaction object into an export transaction cookie.","needQuote":true,"needEscape":true,"nodes":[{"content":"Transforms a transaction object into an export transaction cookie.","pos":[0,66]}]},{"pos":[7103,7740],"content":"Call this method if you want to export a transaction. The `transaction` that is passed along is marshaled into a transaction cookie. You can then send the transaction cookie to the destination process. This is referred to as propagating the transaction between processes or systems. The propagation is considered to be a push model where the local transaction is pushed to the destination.  Therefore, information contained in `whereabouts` must describe the destination transaction manager.       For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Call this method if you want to export a transaction.","pos":[0,53]},{"content":"The <ph id=\"ph1\">`transaction`</ph> that is passed along is marshaled into a transaction cookie.","pos":[54,132],"source":" The `transaction` that is passed along is marshaled into a transaction cookie."},{"content":"You can then send the transaction cookie to the destination process.","pos":[133,201]},{"content":"This is referred to as propagating the transaction between processes or systems.","pos":[202,282]},{"content":"The propagation is considered to be a push model where the local transaction is pushed to the destination.","pos":[283,389]},{"content":"Therefore, information contained in <ph id=\"ph1\">`whereabouts`</ph> must describe the destination transaction manager.","pos":[391,491],"source":"  Therefore, information contained in `whereabouts` must describe the destination transaction manager."},{"content":"For more information on different propagation models, see the Remarks section of the &lt;xref:System.Transactions.TransactionInterop&gt; class.","pos":[498,635],"source":"       For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class."}]},{"pos":[7970,8050],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Transactions.Transaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to be marshaled.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Transactions.Transaction\"></xref> object to be marshaled."},{"pos":[8118,8332],"content":"An address that describes the location of the destination transaction manager. This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other.","needQuote":true,"needEscape":true,"nodes":[{"content":"An address that describes the location of the destination transaction manager. This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other.","pos":[0,214],"nodes":[{"content":"An address that describes the location of the destination transaction manager.","pos":[0,78]},{"content":"This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other.","pos":[79,214]}]}]},{"pos":[8390,8506],"content":"An export transaction cookie representing the specified <bpt id=\"p1\">&lt;xref href=\"System.Transactions.Transaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An export transaction cookie representing the specified <xref href=\"System.Transactions.Transaction\"></xref> object."},{"pos":[9217,9356],"content":"Generates a <bpt id=\"p1\">&lt;xref href=\"System.Transactions.Transaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from a specified <bpt id=\"p2\">&lt;xref href=\"System.Transactions.IDtcTransaction\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Generates a <xref href=\"System.Transactions.Transaction\"></xref> from a specified <xref href=\"System.Transactions.IDtcTransaction\"></xref>."},{"pos":[9368,9691],"content":"The <ph id=\"ph1\">`transactionNative`</ph> is compatible with the unmanaged form of <bpt id=\"p1\">[</bpt>ITransaction<ept id=\"p1\">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp)</ept> used by MSDTC and with the Managed form of &lt;xref:System.EnterpriseServices.ITransaction&gt; used by &lt;xref:System.EnterpriseServices&gt;.","needQuote":true,"needEscape":true,"source":"The `transactionNative` is compatible with the unmanaged form of [ITransaction](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) used by MSDTC and with the Managed form of <xref:System.EnterpriseServices.ITransaction> used by <xref:System.EnterpriseServices>."},{"pos":[9962,10046],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Transactions.IDtcTransaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to be marshaled.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Transactions.IDtcTransaction\"></xref> object to be marshaled."},{"pos":[10122,10269],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Transactions.Transaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that represents the given <bpt id=\"p2\">&lt;xref href=\"System.Transactions.IDtcTransaction\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Transactions.Transaction\"></xref> instance that represents the given <xref href=\"System.Transactions.IDtcTransaction\"></xref>."},{"pos":[10916,11017],"content":"Generates a <bpt id=\"p1\">&lt;xref href=\"System.Transactions.Transaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the specified an export cookie.","needQuote":true,"needEscape":true,"source":"Generates a <xref href=\"System.Transactions.Transaction\"></xref> from the specified an export cookie."},{"pos":[11029,11166],"content":"For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"For more information on different propagation models, see the Remarks section of the &lt;xref:System.Transactions.TransactionInterop&gt; class.","pos":[0,137],"source":"For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class."}]},{"pos":[11362,11405],"content":"A marshaled form of the transaction object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A marshaled form of the transaction object.","pos":[0,43]}]},{"pos":[11481,11569],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Transactions.Transaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the specified export cookie.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Transactions.Transaction\"></xref> from the specified export cookie."},{"pos":[12289,12412],"content":"Generates a <bpt id=\"p1\">&lt;xref href=\"System.Transactions.Transaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance from the specified transmitter propagation token.","needQuote":true,"needEscape":true,"source":"Generates a <xref href=\"System.Transactions.Transaction\"></xref> instance from the specified transmitter propagation token."},{"pos":[12425,12857],"content":"This method, together with the <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A> method, provide functionality for \"pull\" propagation, in which the transaction is \"pulled\" from the remote machine when this method is called to unmarshal the transaction.       For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method, together with the <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A> method, provide functionality for \"pull\" propagation, in which the transaction is \"pulled\" from the remote machine when this method is called to unmarshal the transaction.       For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class.","pos":[0,426],"nodes":[{"content":"This method, together with the &lt;xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A&gt; method, provide functionality for \"pull\" propagation, in which the transaction is \"pulled\" from the remote machine when this method is called to unmarshal the transaction.","pos":[0,282],"source":"This method, together with the <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A> method, provide functionality for \"pull\" propagation, in which the transaction is \"pulled\" from the remote machine when this method is called to unmarshal the transaction."},{"content":"For more information on different propagation models, see the Remarks section of the &lt;xref:System.Transactions.TransactionInterop&gt; class.","pos":[289,426],"source":"       For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class."}]}]},{"pos":[13089,13136],"content":"A propagation token representing a transaction.","needQuote":true,"needEscape":true,"nodes":[{"content":"A propagation token representing a transaction.","pos":[0,47]}]},{"pos":[13212,13316],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Transactions.Transaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the specified transmitter propagation token.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Transactions.Transaction\"></xref> from the specified transmitter propagation token."},{"pos":[13595,13751],"content":"The deserialization of a transaction fails because the transaction manager cannot be contacted. This may be caused by network firewall or security settings.","needQuote":true,"needEscape":true,"nodes":[{"content":"The deserialization of a transaction fails because the transaction manager cannot be contacted. This may be caused by network firewall or security settings.","pos":[0,156],"nodes":[{"content":"The deserialization of a transaction fails because the transaction manager cannot be contacted.","pos":[0,95]},{"content":"This may be caused by network firewall or security settings.","pos":[96,156]}]}]},{"pos":[14347,14448],"content":"Generates a propagation token for the specified <bpt id=\"p1\">&lt;xref href=\"System.Transactions.Transaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Generates a propagation token for the specified <xref href=\"System.Transactions.Transaction\"></xref>."},{"pos":[14672,14727],"content":"A transaction to be marshaled into a propagation token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A transaction to be marshaled into a propagation token.","pos":[0,55]}]},{"pos":[14786,15258],"content":"This method, together with the <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*> method, provide functionality for Transmitter/Receiver propagation, in which the transaction is \"pulled\" from the remote machine when the latter is called to unmarshal the transaction.       For more information on different propagation models, see the Remarks section of the <xref href=\"System.Transactions.TransactionInterop\"></xref> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method, together with the &lt;xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*&gt; method, provide functionality for Transmitter/Receiver propagation, in which the transaction is \"pulled\" from the remote machine when the latter is called to unmarshal the transaction.","pos":[0,308],"source":"This method, together with the <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*> method, provide functionality for Transmitter/Receiver propagation, in which the transaction is \"pulled\" from the remote machine when the latter is called to unmarshal the transaction."},{"content":"For more information on different propagation models, see the Remarks section of the <bpt id=\"p1\">&lt;xref href=\"System.Transactions.TransactionInterop\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[315,466],"source":"       For more information on different propagation models, see the Remarks section of the <xref href=\"System.Transactions.TransactionInterop\"></xref> class."}]},{"pos":[15776,15887],"content":"Gets the Whereabouts of the distributed transaction manager that <bpt id=\"p1\">&lt;xref href=\"System.Transactions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> uses.","needQuote":true,"needEscape":true,"source":"Gets the Whereabouts of the distributed transaction manager that <xref href=\"System.Transactions\"></xref> uses."},{"pos":[15900,16476],"content":"The Whereabouts contains an address that describes the location of a transaction manager. This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other. The information returned by this method can be used to provide location information for push model transaction propagation with the <xref:System.Transactions.TransactionInterop.GetExportCookie%2A> method.       For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Whereabouts contains an address that describes the location of a transaction manager. This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other. The information returned by this method can be used to provide location information for push model transaction propagation with the <xref:System.Transactions.TransactionInterop.GetExportCookie%2A> method.       For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class.","pos":[0,574],"nodes":[{"content":"The Whereabouts contains an address that describes the location of a transaction manager.","pos":[0,89]},{"content":"This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other.","pos":[90,225]},{"content":"The information returned by this method can be used to provide location information for push model transaction propagation with the &lt;xref:System.Transactions.TransactionInterop.GetExportCookie%2A&gt; method.","pos":[226,430],"source":" The information returned by this method can be used to provide location information for push model transaction propagation with the <xref:System.Transactions.TransactionInterop.GetExportCookie%2A> method."},{"content":"For more information on different propagation models, see the Remarks section of the &lt;xref:System.Transactions.TransactionInterop&gt; class.","pos":[437,574],"source":"       For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class."}]}]},{"pos":[16617,16723],"content":"The Whereabouts of the distributed transaction manager that <bpt id=\"p1\">&lt;xref href=\"System.Transactions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> uses.","needQuote":true,"needEscape":true,"source":"The Whereabouts of the distributed transaction manager that <xref href=\"System.Transactions\"></xref> uses."},{"pos":[17222,17272],"content":"The type of the distributed transaction processor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the distributed transaction processor.","pos":[0,50]}]},{"pos":[17284,17519],"content":"This value is used for the <ph id=\"ph1\">`Transaction.PromoterType`</ph> property if the transaction is or will be promoted to MSDTC and the <ph id=\"ph2\">`Transaction.GetPromotedToken`</ph> method will return an MSDTC transaction propagation token for the <ph id=\"ph3\">`byte[]`</ph> result.","needQuote":true,"needEscape":true,"source":"This value is used for the `Transaction.PromoterType` property if the transaction is or will be promoted to MSDTC and the `Transaction.GetPromotedToken` method will return an MSDTC transaction propagation token for the `byte[]` result."},{"pos":[17643,17655],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Transactions.TransactionInterop\n  id: TransactionInterop\n  children:\n  - System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)\n  - System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])\n  - System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)\n  - System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])\n  - System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])\n  - System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)\n  - System.Transactions.TransactionInterop.GetWhereabouts\n  - System.Transactions.TransactionInterop.PromoterTypeDtc\n  langs:\n  - csharp\n  name: TransactionInterop\n  nameWithType: TransactionInterop\n  fullName: System.Transactions.TransactionInterop\n  type: Class\n  summary: Facilitates interaction between <xref href=\"System.Transactions\"></xref> and components that were previously written to interact with MSDTC, COM+, or <xref href=\"System.EnterpriseServices\"></xref>. This class cannot be inherited.\n  remarks: \"This class provides methods for transaction propagation. For more information on how this process works, see [Transaction Propagation](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp).  \\n  \\n Using the methods provided by this class, you can engage in two types of transaction propagations, Export/Import (push model) and Transmitter/Receiver (pull model).  \\n  \\n The Export/Import (push model) propagation involves these steps,  \\n  \\n1.  On the remote machine, obtain the \\\"whereabouts\\\" of the transaction manager of that machine by calling the <xref:System.Transactions.TransactionInterop.GetWhereabouts%2A> method. You can then cache this piece of information on the client machine for future usage.  \\n  \\n2.  Send the data containing the whereabouts to the client machine using any preferred method  \\n  \\n3.  On the client machine, use the whereabouts to \\\"export\\\" the transaction to the remote machine and generate a transaction \\\"cookie\\\".  This is done by calling <xref:System.Transactions.TransactionInterop.GetExportCookie%2A> and passing in the remote machine's whereabouts.  \\n  \\n4.  Send the data containing the transaction \\\"cookie\\\" to the remote machine using any preferred method  \\n  \\n5.  On the remote machine, use the transaction \\\"cookie\\\" to obtain a clone of the client transaction by calling the <xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A> method.  \\n  \\n6.  On the remote machine, use the clone transaction to enlist the resource manager using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> or <xref:System.Transactions.Transaction.EnlistDurable%2A> methods of the <xref:System.Transactions.Transaction> class.  \\n  \\n The Transmitter/Receiver (pull model) propagation involves these steps,  \\n  \\n-   On the client machine, using the transaction generates a corresponding \\\"propagation token\\\" by calling <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>  \\n  \\n-   Send the data containing the \\\"propagation token\\\" of the transaction to the remote machine using any preferred method  \\n  \\n-   On the remote machine, use the \\\"propagation token\\\" to obtain a clone of the client transaction by calling <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A>  \\n  \\n The Transmitter/Receiver model provides better performance in scenarios where the transaction token is sent to a remote machine, but the remote machine may not use it to obtain the transaction.  This is because the transaction is not propagated until <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A> is called. Another advantage is that the propagation token can be sent to any remote machine, while the export cookie can be used only on the machine that provided the whereabouts.  \\n  \\n However, you should also note that the whereabouts of remote transaction managers are encapsulated in all the propagation tokens, making them bigger than the corresponding transaction cookies from the Export/Import model.  \\n  \\n **Note** This type uses <xref:System.Security.Permissions.SecurityAction> to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the `FullTrust` permission set.\"\n  syntax:\n    content: public static class TransactionInterop\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)\n  id: GetDtcTransaction(System.Transactions.Transaction)\n  parent: System.Transactions.TransactionInterop\n  langs:\n  - csharp\n  name: GetDtcTransaction(Transaction)\n  nameWithType: TransactionInterop.GetDtcTransaction(Transaction)\n  fullName: System.Transactions.TransactionInterop.GetDtcTransaction(Transaction)\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Gets an <xref href=\"System.Transactions.IDtcTransaction\"></xref> instance that represents a <xref href=\"System.Transactions.Transaction\"></xref>.\n  syntax:\n    content: public static System.Transactions.IDtcTransaction GetDtcTransaction (System.Transactions.Transaction transaction);\n    parameters:\n    - id: transaction\n      type: System.Transactions.Transaction\n      description: A <xref href=\"System.Transactions.Transaction\"></xref> instance to be marshaled.\n    return:\n      type: System.Transactions.IDtcTransaction\n      description: An <xref href=\"System.Transactions.IDtcTransaction\"></xref> instance that represents a <xref href=\"System.Transactions.Transaction\"></xref>.  The <xref href=\"System.Transactions.IDtcTransaction\"></xref> instance is compatible with the unmanaged form of [ITransaction](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) used by MSDTC and with the Managed form of <xref href=\"System.EnterpriseServices.ITransaction\"></xref> used by <xref href=\"System.EnterpriseServices\"></xref>.\n  overload: System.Transactions.TransactionInterop.GetDtcTransaction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])\n  id: GetExportCookie(System.Transactions.Transaction,System.Byte[])\n  parent: System.Transactions.TransactionInterop\n  langs:\n  - csharp\n  name: GetExportCookie(Transaction,Byte[])\n  nameWithType: TransactionInterop.GetExportCookie(Transaction,Byte[])\n  fullName: System.Transactions.TransactionInterop.GetExportCookie(Transaction,Byte[])\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Transforms a transaction object into an export transaction cookie.\n  remarks: \"Call this method if you want to export a transaction. The `transaction` that is passed along is marshaled into a transaction cookie. You can then send the transaction cookie to the destination process. This is referred to as propagating the transaction between processes or systems. The propagation is considered to be a push model where the local transaction is pushed to the destination.  Therefore, information contained in `whereabouts` must describe the destination transaction manager.  \\n  \\n For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class.\"\n  syntax:\n    content: public static byte[] GetExportCookie (System.Transactions.Transaction transaction, byte[] whereabouts);\n    parameters:\n    - id: transaction\n      type: System.Transactions.Transaction\n      description: The <xref href=\"System.Transactions.Transaction\"></xref> object to be marshaled.\n    - id: whereabouts\n      type: System.Byte[]\n      description: An address that describes the location of the destination transaction manager. This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other.\n    return:\n      type: System.Byte[]\n      description: An export transaction cookie representing the specified <xref href=\"System.Transactions.Transaction\"></xref> object.\n  overload: System.Transactions.TransactionInterop.GetExportCookie*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)\n  id: GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)\n  parent: System.Transactions.TransactionInterop\n  langs:\n  - csharp\n  name: GetTransactionFromDtcTransaction(IDtcTransaction)\n  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)\n  fullName: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Generates a <xref href=\"System.Transactions.Transaction\"></xref> from a specified <xref href=\"System.Transactions.IDtcTransaction\"></xref>.\n  remarks: The `transactionNative` is compatible with the unmanaged form of [ITransaction](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) used by MSDTC and with the Managed form of <xref:System.EnterpriseServices.ITransaction> used by <xref:System.EnterpriseServices>.\n  syntax:\n    content: public static System.Transactions.Transaction GetTransactionFromDtcTransaction (System.Transactions.IDtcTransaction transactionNative);\n    parameters:\n    - id: transactionNative\n      type: System.Transactions.IDtcTransaction\n      description: The <xref href=\"System.Transactions.IDtcTransaction\"></xref> object to be marshaled.\n    return:\n      type: System.Transactions.Transaction\n      description: A <xref href=\"System.Transactions.Transaction\"></xref> instance that represents the given <xref href=\"System.Transactions.IDtcTransaction\"></xref>.\n  overload: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])\n  id: GetTransactionFromExportCookie(System.Byte[])\n  parent: System.Transactions.TransactionInterop\n  langs:\n  - csharp\n  name: GetTransactionFromExportCookie(Byte[])\n  nameWithType: TransactionInterop.GetTransactionFromExportCookie(Byte[])\n  fullName: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(Byte[])\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Generates a <xref href=\"System.Transactions.Transaction\"></xref> from the specified an export cookie.\n  remarks: For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class.\n  syntax:\n    content: public static System.Transactions.Transaction GetTransactionFromExportCookie (byte[] cookie);\n    parameters:\n    - id: cookie\n      type: System.Byte[]\n      description: A marshaled form of the transaction object.\n    return:\n      type: System.Transactions.Transaction\n      description: A <xref href=\"System.Transactions.Transaction\"></xref> from the specified export cookie.\n  overload: System.Transactions.TransactionInterop.GetTransactionFromExportCookie*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])\n  id: GetTransactionFromTransmitterPropagationToken(System.Byte[])\n  parent: System.Transactions.TransactionInterop\n  langs:\n  - csharp\n  name: GetTransactionFromTransmitterPropagationToken(Byte[])\n  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])\n  fullName: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Generates a <xref href=\"System.Transactions.Transaction\"></xref> instance from the specified transmitter propagation token.\n  remarks: \"This method, together with the <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A> method, provide functionality for \\\"pull\\\" propagation, in which the transaction is \\\"pulled\\\" from the remote machine when this method is called to unmarshal the transaction.  \\n  \\n For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class.\"\n  syntax:\n    content: public static System.Transactions.Transaction GetTransactionFromTransmitterPropagationToken (byte[] propagationToken);\n    parameters:\n    - id: propagationToken\n      type: System.Byte[]\n      description: A propagation token representing a transaction.\n    return:\n      type: System.Transactions.Transaction\n      description: A <xref href=\"System.Transactions.Transaction\"></xref> from the specified transmitter propagation token.\n  overload: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*\n  exceptions:\n  - type: System.Transactions.TransactionManagerCommunicationException\n    commentId: T:System.Transactions.TransactionManagerCommunicationException\n    description: The deserialization of a transaction fails because the transaction manager cannot be contacted. This may be caused by network firewall or security settings.\n  platform:\n  - net462\n- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)\n  id: GetTransmitterPropagationToken(System.Transactions.Transaction)\n  parent: System.Transactions.TransactionInterop\n  langs:\n  - csharp\n  name: GetTransmitterPropagationToken(Transaction)\n  nameWithType: TransactionInterop.GetTransmitterPropagationToken(Transaction)\n  fullName: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(Transaction)\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Generates a propagation token for the specified <xref href=\"System.Transactions.Transaction\"></xref>.\n  syntax:\n    content: public static byte[] GetTransmitterPropagationToken (System.Transactions.Transaction transaction);\n    parameters:\n    - id: transaction\n      type: System.Transactions.Transaction\n      description: A transaction to be marshaled into a propagation token.\n    return:\n      type: System.Byte[]\n      description: \"This method, together with the <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*> method, provide functionality for Transmitter/Receiver propagation, in which the transaction is \\\"pulled\\\" from the remote machine when the latter is called to unmarshal the transaction.  \\n  \\n For more information on different propagation models, see the Remarks section of the <xref href=\\\"System.Transactions.TransactionInterop\\\"></xref> class.\"\n  overload: System.Transactions.TransactionInterop.GetTransmitterPropagationToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.TransactionInterop.GetWhereabouts\n  id: GetWhereabouts\n  parent: System.Transactions.TransactionInterop\n  langs:\n  - csharp\n  name: GetWhereabouts()\n  nameWithType: TransactionInterop.GetWhereabouts()\n  fullName: System.Transactions.TransactionInterop.GetWhereabouts()\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Gets the Whereabouts of the distributed transaction manager that <xref href=\"System.Transactions\"></xref> uses.\n  remarks: \"The Whereabouts contains an address that describes the location of a transaction manager. This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other. The information returned by this method can be used to provide location information for push model transaction propagation with the <xref:System.Transactions.TransactionInterop.GetExportCookie%2A> method.  \\n  \\n For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class.\"\n  syntax:\n    content: public static byte[] GetWhereabouts ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: The Whereabouts of the distributed transaction manager that <xref href=\"System.Transactions\"></xref> uses.\n  overload: System.Transactions.TransactionInterop.GetWhereabouts*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.TransactionInterop.PromoterTypeDtc\n  id: PromoterTypeDtc\n  parent: System.Transactions.TransactionInterop\n  langs:\n  - csharp\n  name: PromoterTypeDtc\n  nameWithType: TransactionInterop.PromoterTypeDtc\n  fullName: System.Transactions.TransactionInterop.PromoterTypeDtc\n  type: Field\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: The type of the distributed transaction processor.\n  remarks: This value is used for the `Transaction.PromoterType` property if the transaction is or will be promoted to MSDTC and the `Transaction.GetPromotedToken` method will return an MSDTC transaction propagation token for the `byte[]` result.\n  syntax:\n    content: public static readonly Guid PromoterTypeDtc;\n    return:\n      type: System.Guid\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Transactions.TransactionManagerCommunicationException\n  parent: System.Transactions\n  isExternal: false\n  name: TransactionManagerCommunicationException\n  nameWithType: TransactionManagerCommunicationException\n  fullName: System.Transactions.TransactionManagerCommunicationException\n- uid: System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)\n  parent: System.Transactions.TransactionInterop\n  isExternal: false\n  name: GetDtcTransaction(Transaction)\n  nameWithType: TransactionInterop.GetDtcTransaction(Transaction)\n  fullName: System.Transactions.TransactionInterop.GetDtcTransaction(Transaction)\n- uid: System.Transactions.IDtcTransaction\n  parent: System.Transactions\n  isExternal: false\n  name: IDtcTransaction\n  nameWithType: IDtcTransaction\n  fullName: System.Transactions.IDtcTransaction\n- uid: System.Transactions.Transaction\n  parent: System.Transactions\n  isExternal: false\n  name: Transaction\n  nameWithType: Transaction\n  fullName: System.Transactions.Transaction\n- uid: System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])\n  parent: System.Transactions.TransactionInterop\n  isExternal: false\n  name: GetExportCookie(Transaction,Byte[])\n  nameWithType: TransactionInterop.GetExportCookie(Transaction,Byte[])\n  fullName: System.Transactions.TransactionInterop.GetExportCookie(Transaction,Byte[])\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)\n  parent: System.Transactions.TransactionInterop\n  isExternal: false\n  name: GetTransactionFromDtcTransaction(IDtcTransaction)\n  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)\n  fullName: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)\n- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])\n  parent: System.Transactions.TransactionInterop\n  isExternal: false\n  name: GetTransactionFromExportCookie(Byte[])\n  nameWithType: TransactionInterop.GetTransactionFromExportCookie(Byte[])\n  fullName: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(Byte[])\n- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])\n  parent: System.Transactions.TransactionInterop\n  isExternal: false\n  name: GetTransactionFromTransmitterPropagationToken(Byte[])\n  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])\n  fullName: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])\n- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)\n  parent: System.Transactions.TransactionInterop\n  isExternal: false\n  name: GetTransmitterPropagationToken(Transaction)\n  nameWithType: TransactionInterop.GetTransmitterPropagationToken(Transaction)\n  fullName: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(Transaction)\n- uid: System.Transactions.TransactionInterop.GetWhereabouts\n  parent: System.Transactions.TransactionInterop\n  isExternal: false\n  name: GetWhereabouts()\n  nameWithType: TransactionInterop.GetWhereabouts()\n  fullName: System.Transactions.TransactionInterop.GetWhereabouts()\n- uid: System.Transactions.TransactionInterop.PromoterTypeDtc\n  parent: System.Transactions.TransactionInterop\n  isExternal: false\n  name: PromoterTypeDtc\n  nameWithType: TransactionInterop.PromoterTypeDtc\n  fullName: System.Transactions.TransactionInterop.PromoterTypeDtc\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Transactions.TransactionInterop.GetDtcTransaction*\n  parent: System.Transactions.TransactionInterop\n  isExternal: false\n  name: GetDtcTransaction\n  nameWithType: TransactionInterop.GetDtcTransaction\n- uid: System.Transactions.TransactionInterop.GetExportCookie*\n  parent: System.Transactions.TransactionInterop\n  isExternal: false\n  name: GetExportCookie\n  nameWithType: TransactionInterop.GetExportCookie\n- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction*\n  parent: System.Transactions.TransactionInterop\n  isExternal: false\n  name: GetTransactionFromDtcTransaction\n  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction\n- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie*\n  parent: System.Transactions.TransactionInterop\n  isExternal: false\n  name: GetTransactionFromExportCookie\n  nameWithType: TransactionInterop.GetTransactionFromExportCookie\n- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*\n  parent: System.Transactions.TransactionInterop\n  isExternal: false\n  name: GetTransactionFromTransmitterPropagationToken\n  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken\n- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken*\n  parent: System.Transactions.TransactionInterop\n  isExternal: false\n  name: GetTransmitterPropagationToken\n  nameWithType: TransactionInterop.GetTransmitterPropagationToken\n- uid: System.Transactions.TransactionInterop.GetWhereabouts*\n  parent: System.Transactions.TransactionInterop\n  isExternal: false\n  name: GetWhereabouts\n  nameWithType: TransactionInterop.GetWhereabouts\n"}