{"nodes":[{"pos":[925,1028],"content":"Provides a container for building an assembly from one or more virtual paths within an ASP.NET project.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a container for building an assembly from one or more virtual paths within an ASP.NET project.","pos":[0,103]}]},{"pos":[1041,3100],"content":"Instances of the AssemblyBuilder class are used with <xref:System.Web.Compilation.BuildProvider> class methods to build one or more files into a compiled assembly.       The <xref:System.Web.Compilation.BuildProvider> class defines build functionality for individual files, and the AssemblyBuilder class combines the source code contributed by each <xref:System.Web.Compilation.BuildProvider> instance into a single assembly. The ASP.NET build environment passes an AssemblyBuilder object to the <xref:System.Web.Compilation.BuildProvider> methods when building an assembly from one or more files, so that each <xref:System.Web.Compilation.BuildProvider> instance can contribute source code for its file to the overall assembly.       The ASP.NET build environment determines the language and compiler required by files within the project, based on the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName> property. The build environment groups files based on their compiler settings and builds an assembly from files that require the same compiler.       The <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> property indicates the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each <xref:System.Web.Compilation.BuildProvider> implementation.       A <xref:System.Web.Compilation.BuildProvider> object contributes source code in the form of a CodeDOM graph using the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method. A <xref:System.Web.Compilation.BuildProvider> object contributes source code stored in a physical file using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.       After each <xref:System.Web.Compilation.BuildProvider> object contributes source code using the appropriate AssemblyBuilder methods, the ASP.NET build environment uses the AssemblyBuilder class to compile the collected source code into an assembly.","needQuote":false,"needEscape":true,"nodes":[{"content":"Instances of the AssemblyBuilder class are used with <xref:System.Web.Compilation.BuildProvider> class methods to build one or more files into a compiled assembly.       The <xref:System.Web.Compilation.BuildProvider> class defines build functionality for individual files, and the AssemblyBuilder class combines the source code contributed by each <xref:System.Web.Compilation.BuildProvider> instance into a single assembly. The ASP.NET build environment passes an AssemblyBuilder object to the <xref:System.Web.Compilation.BuildProvider> methods when building an assembly from one or more files, so that each <xref:System.Web.Compilation.BuildProvider> instance can contribute source code for its file to the overall assembly.       The ASP.NET build environment determines the language and compiler required by files within the project, based on the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName> property. The build environment groups files based on their compiler settings and builds an assembly from files that require the same compiler.       The <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> property indicates the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each <xref:System.Web.Compilation.BuildProvider> implementation.       A <xref:System.Web.Compilation.BuildProvider> object contributes source code in the form of a CodeDOM graph using the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method. A <xref:System.Web.Compilation.BuildProvider> object contributes source code stored in a physical file using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.       After each <xref:System.Web.Compilation.BuildProvider> object contributes source code using the appropriate AssemblyBuilder methods, the ASP.NET build environment uses the AssemblyBuilder class to compile the collected source code into an assembly.","pos":[0,2049],"nodes":[{"content":"Instances of the AssemblyBuilder class are used with &lt;xref:System.Web.Compilation.BuildProvider&gt; class methods to build one or more files into a compiled assembly.","pos":[0,163],"source":"Instances of the AssemblyBuilder class are used with <xref:System.Web.Compilation.BuildProvider> class methods to build one or more files into a compiled assembly."},{"content":"The &lt;xref:System.Web.Compilation.BuildProvider&gt; class defines build functionality for individual files, and the AssemblyBuilder class combines the source code contributed by each &lt;xref:System.Web.Compilation.BuildProvider&gt; instance into a single assembly.","pos":[170,425],"source":"       The <xref:System.Web.Compilation.BuildProvider> class defines build functionality for individual files, and the AssemblyBuilder class combines the source code contributed by each <xref:System.Web.Compilation.BuildProvider> instance into a single assembly."},{"content":"The ASP.NET build environment passes an AssemblyBuilder object to the &lt;xref:System.Web.Compilation.BuildProvider&gt; methods when building an assembly from one or more files, so that each &lt;xref:System.Web.Compilation.BuildProvider&gt; instance can contribute source code for its file to the overall assembly.","pos":[426,728],"source":" The ASP.NET build environment passes an AssemblyBuilder object to the <xref:System.Web.Compilation.BuildProvider> methods when building an assembly from one or more files, so that each <xref:System.Web.Compilation.BuildProvider> instance can contribute source code for its file to the overall assembly."},{"content":"The ASP.NET build environment determines the language and compiler required by files within the project, based on the &lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName&gt; property.","pos":[735,951],"source":"       The ASP.NET build environment determines the language and compiler required by files within the project, based on the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName> property."},{"content":"The build environment groups files based on their compiler settings and builds an assembly from files that require the same compiler.","pos":[952,1085]},{"content":"The &lt;xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A&gt; property indicates the &lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt; implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each &lt;xref:System.Web.Compilation.BuildProvider&gt; implementation.","pos":[1092,1409],"source":"       The <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> property indicates the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each <xref:System.Web.Compilation.BuildProvider> implementation."},{"content":"A &lt;xref:System.Web.Compilation.BuildProvider&gt; object contributes source code in the form of a CodeDOM graph using the &lt;xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A&gt; method.","pos":[1416,1609],"source":"       A <xref:System.Web.Compilation.BuildProvider> object contributes source code in the form of a CodeDOM graph using the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method."},{"content":"A &lt;xref:System.Web.Compilation.BuildProvider&gt; object contributes source code stored in a physical file using the &lt;xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A&gt; method.","pos":[1610,1794],"source":" A <xref:System.Web.Compilation.BuildProvider> object contributes source code stored in a physical file using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method."},{"content":"After each &lt;xref:System.Web.Compilation.BuildProvider&gt; object contributes source code using the appropriate AssemblyBuilder methods, the ASP.NET build environment uses the AssemblyBuilder class to compile the collected source code into an assembly.","pos":[1801,2049],"source":"       After each <xref:System.Web.Compilation.BuildProvider> object contributes source code using the appropriate AssemblyBuilder methods, the ASP.NET build environment uses the AssemblyBuilder class to compile the collected source code into an assembly."}]}]},{"pos":[4828,4900],"content":"Adds an assembly that is referenced by source code generated for a file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an assembly that is referenced by source code generated for a file.","pos":[0,72]}]},{"pos":[4913,6528],"content":"A <xref:System.Web.Compilation.BuildProvider> implementation uses the AddAssemblyReference method when generating source code that references types within the input assembly.       The ASP.NET build environment initializes the default collection of assemblies available for reference through the build provider in the <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=fullName> property. If the build provider generates source code that references additional assemblies, the build provider adds the additional assemblies using the AddAssemblyReference method. The ASP.NET build environment resolves external types during assembly compilation using both the referenced assemblies added by build providers and the default collection of assemblies available for reference.       Typically, a <xref:System.Web.Compilation.BuildProvider> object adds source code to the <xref:System.Web.Compilation.AssemblyBuilder> object in the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method. If a build provider generates source code that uses an external type, the build provider adds the type's assembly using the AddAssemblyReference method.       Use the AddAssemblyReference method to add a referenced assembly required in source code generated by a <xref:System.Web.Compilation.BuildProvider> instance for a specific file type. Use the [assemblies Element for compilation (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/3811c448-af1c-498d-be2b-6ed2634c51e9) configuration element to configure an assembly for reference across multiple file types in a project.","needQuote":false,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Compilation.BuildProvider&gt; implementation uses the AddAssemblyReference method when generating source code that references types within the input assembly.","pos":[0,174],"source":"A <xref:System.Web.Compilation.BuildProvider> implementation uses the AddAssemblyReference method when generating source code that references types within the input assembly."},{"content":"The ASP.NET build environment initializes the default collection of assemblies available for reference through the build provider in the &lt;xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=fullName&gt; property.","pos":[181,420],"source":"       The ASP.NET build environment initializes the default collection of assemblies available for reference through the build provider in the <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=fullName> property."},{"content":"If the build provider generates source code that references additional assemblies, the build provider adds the additional assemblies using the AddAssemblyReference method.","pos":[421,592]},{"content":"The ASP.NET build environment resolves external types during assembly compilation using both the referenced assemblies added by build providers and the default collection of assemblies available for reference.","pos":[593,802]},{"content":"Typically, a &lt;xref:System.Web.Compilation.BuildProvider&gt; object adds source code to the &lt;xref:System.Web.Compilation.AssemblyBuilder&gt; object in the &lt;xref:System.Web.Compilation.BuildProvider.GenerateCode%2A&gt; method.","pos":[809,1024],"source":"       Typically, a <xref:System.Web.Compilation.BuildProvider> object adds source code to the <xref:System.Web.Compilation.AssemblyBuilder> object in the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method."},{"content":"If a build provider generates source code that uses an external type, the build provider adds the type's assembly using the AddAssemblyReference method.","pos":[1025,1177]},{"content":"Use the AddAssemblyReference method to add a referenced assembly required in source code generated by a &lt;xref:System.Web.Compilation.BuildProvider&gt; instance for a specific file type.","pos":[1184,1366],"source":"       Use the AddAssemblyReference method to add a referenced assembly required in source code generated by a <xref:System.Web.Compilation.BuildProvider> instance for a specific file type."},{"content":"Use the <bpt id=\"p1\">[</bpt>assemblies Element for compilation (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/3811c448-af1c-498d-be2b-6ed2634c51e9)</ept> configuration element to configure an assembly for reference across multiple file types in a project.","pos":[1367,1609],"source":" Use the [assemblies Element for compilation (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/3811c448-af1c-498d-be2b-6ed2634c51e9) configuration element to configure an assembly for reference across multiple file types in a project."}]},{"pos":[6704,6802],"content":"An assembly referenced by a code compile unit or source file included in the assembly compilation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An assembly referenced by a code compile unit or source file included in the assembly compilation.","pos":[0,98]}]},{"pos":[7545,7610],"content":"Adds source code for the assembly in the form of a CodeDOM graph.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds source code for the assembly in the form of a CodeDOM graph.","pos":[0,65]}]},{"pos":[7623,8464],"content":"A <xref:System.Web.Compilation.BuildProvider> implementation calls the AddCodeCompileUnit method when generating a CodeDOM graph for a virtual path. Source code added with AddCodeCompileUnit is included in the assembly compilation.       Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and then adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object. The build provider uses the AddCodeCompileUnit method to add source code as a CodeDOM graph to the assembly. Alternately, the build provider can use the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method to add source code as a physical file to the assembly.","needQuote":false,"needEscape":true,"nodes":[{"content":"A <xref:System.Web.Compilation.BuildProvider> implementation calls the AddCodeCompileUnit method when generating a CodeDOM graph for a virtual path. Source code added with AddCodeCompileUnit is included in the assembly compilation.       Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and then adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object. The build provider uses the AddCodeCompileUnit method to add source code as a CodeDOM graph to the assembly. Alternately, the build provider can use the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method to add source code as a physical file to the assembly.","pos":[0,839],"nodes":[{"content":"A &lt;xref:System.Web.Compilation.BuildProvider&gt; implementation calls the AddCodeCompileUnit method when generating a CodeDOM graph for a virtual path.","pos":[0,148],"source":"A <xref:System.Web.Compilation.BuildProvider> implementation calls the AddCodeCompileUnit method when generating a CodeDOM graph for a virtual path."},{"content":"Source code added with AddCodeCompileUnit is included in the assembly compilation.","pos":[149,231]},{"content":"Typically, a build provider's &lt;xref:System.Web.Compilation.BuildProvider.GenerateCode%2A&gt; method implementation reads the &lt;xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt; property, parses the contents, and then adds the generated source code to the specified &lt;xref:System.Web.Compilation.AssemblyBuilder&gt; object.","pos":[238,560],"source":"       Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and then adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object."},{"content":"The build provider uses the AddCodeCompileUnit method to add source code as a CodeDOM graph to the assembly.","pos":[561,669]},{"content":"Alternately, the build provider can use the &lt;xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A&gt; method to add source code as a physical file to the assembly.","pos":[670,839],"source":" Alternately, the build provider can use the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method to add source code as a physical file to the assembly."}]}]},{"pos":[8726,8770],"content":"The build provider generating <ph id=\"ph1\">`compileUnit`</ph>.","needQuote":true,"needEscape":true,"source":"The build provider generating `compileUnit`."},{"pos":[8855,8916],"content":"The code compile unit to include in the assembly compilation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The code compile unit to include in the assembly compilation.","pos":[0,61]}]},{"pos":[9413,9474],"content":"Gets the compiler used to build source code into an assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the compiler used to build source code into an assembly.","pos":[0,61]}]},{"pos":[9487,10139],"content":"The CodeDomProvider property indicates the <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=fullName> implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each <xref:System.Web.Compilation.BuildProvider> implementation.       The ASP.NET build environment determines the language and compiler required by files within the project, based on the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName> property. The build environment groups files based on their compiler settings and builds an assembly from files that require the same compiler.","needQuote":false,"needEscape":true,"nodes":[{"content":"The CodeDomProvider property indicates the <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=fullName> implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each <xref:System.Web.Compilation.BuildProvider> implementation.       The ASP.NET build environment determines the language and compiler required by files within the project, based on the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName> property. The build environment groups files based on their compiler settings and builds an assembly from files that require the same compiler.","pos":[0,650],"nodes":[{"content":"The CodeDomProvider property indicates the &lt;xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=fullName&gt; implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each &lt;xref:System.Web.Compilation.BuildProvider&gt; implementation.","pos":[0,293],"source":"The CodeDomProvider property indicates the <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=fullName> implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each <xref:System.Web.Compilation.BuildProvider> implementation."},{"content":"The ASP.NET build environment determines the language and compiler required by files within the project, based on the &lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName&gt; property.","pos":[300,516],"source":"       The ASP.NET build environment determines the language and compiler required by files within the project, based on the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName> property."},{"content":"The build environment groups files based on their compiler settings and builds an assembly from files that require the same compiler.","pos":[517,650]}]}]},{"pos":[10319,10490],"content":"A read-only <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.CodeDomProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation used for compiling source code contributed by each build provider into an assembly.","needQuote":true,"needEscape":true,"source":"A read-only <xref href=\"System.CodeDom.Compiler.CodeDomProvider\"></xref> implementation used for compiling source code contributed by each build provider into an assembly."},{"pos":[11098,11213],"content":"Allows a build provider to create a temporary source file, and include the source file in the assembly compilation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows a build provider to create a temporary source file, and include the source file in the assembly compilation.","pos":[0,115]}]},{"pos":[11226,12428],"content":"A <xref:System.Web.Compilation.BuildProvider> implementation calls the CreateCodeFile method when generating a source file for a virtual path. Source code added with CreateCodeFile is included in the assembly compilation.       Typically, a build provider <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and then adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object. The build provider uses the CreateCodeFile method to add source code as a physical file to the assembly. Alternately, the build provider can use the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method to add source code as a CodeDOM graph to the assembly.       After calling CreateCodeFile, the build provider writes the source file contents using the returned <xref:System.IO.TextWriter> object. After writing the source file, the <xref:System.Web.Compilation.BuildProvider> object must use the <xref:System.IO.TextWriter.Close%2A> method to close the <xref:System.IO.TextWriter> object and free associated system resources.","needQuote":false,"needEscape":true,"nodes":[{"content":"A <xref:System.Web.Compilation.BuildProvider> implementation calls the CreateCodeFile method when generating a source file for a virtual path. Source code added with CreateCodeFile is included in the assembly compilation.       Typically, a build provider <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and then adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object. The build provider uses the CreateCodeFile method to add source code as a physical file to the assembly. Alternately, the build provider can use the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method to add source code as a CodeDOM graph to the assembly.       After calling CreateCodeFile, the build provider writes the source file contents using the returned <xref:System.IO.TextWriter> object. After writing the source file, the <xref:System.Web.Compilation.BuildProvider> object must use the <xref:System.IO.TextWriter.Close%2A> method to close the <xref:System.IO.TextWriter> object and free associated system resources.","pos":[0,1198],"nodes":[{"content":"A &lt;xref:System.Web.Compilation.BuildProvider&gt; implementation calls the CreateCodeFile method when generating a source file for a virtual path.","pos":[0,142],"source":"A <xref:System.Web.Compilation.BuildProvider> implementation calls the CreateCodeFile method when generating a source file for a virtual path."},{"content":"Source code added with CreateCodeFile is included in the assembly compilation.","pos":[143,221]},{"content":"Typically, a build provider &lt;xref:System.Web.Compilation.BuildProvider.GenerateCode%2A&gt; method implementation reads the &lt;xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt; property, parses the contents, and then adds the generated source code to the specified &lt;xref:System.Web.Compilation.AssemblyBuilder&gt; object.","pos":[228,548],"source":"       Typically, a build provider <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and then adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object."},{"content":"The build provider uses the CreateCodeFile method to add source code as a physical file to the assembly.","pos":[549,653]},{"content":"Alternately, the build provider can use the &lt;xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A&gt; method to add source code as a CodeDOM graph to the assembly.","pos":[654,827],"source":" Alternately, the build provider can use the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method to add source code as a CodeDOM graph to the assembly."},{"content":"After calling CreateCodeFile, the build provider writes the source file contents using the returned &lt;xref:System.IO.TextWriter&gt; object.","pos":[834,969],"source":"       After calling CreateCodeFile, the build provider writes the source file contents using the returned <xref:System.IO.TextWriter> object."},{"content":"After writing the source file, the &lt;xref:System.Web.Compilation.BuildProvider&gt; object must use the &lt;xref:System.IO.TextWriter.Close%2A&gt; method to close the &lt;xref:System.IO.TextWriter&gt; object and free associated system resources.","pos":[970,1198],"source":" After writing the source file, the <xref:System.Web.Compilation.BuildProvider> object must use the <xref:System.IO.TextWriter.Close%2A> method to close the <xref:System.IO.TextWriter> object and free associated system resources."}]}]},{"pos":[13687,13738],"content":"The build provider generating the code source file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The build provider generating the code source file.","pos":[0,51]}]},{"pos":[13803,13897],"content":"An open <xref:System.IO.TextWriter> that can be used to write source code to a temporary file.","needQuote":true,"needEscape":true,"nodes":[{"content":"An open &lt;xref:System.IO.TextWriter&gt; that can be used to write source code to a temporary file.","pos":[0,94],"source":"An open <xref:System.IO.TextWriter> that can be used to write source code to a temporary file."}]},{"pos":[14593,14682],"content":"Allows a build provider to create a resource file to include in the assembly compilation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows a build provider to create a resource file to include in the assembly compilation.","pos":[0,89]}]},{"pos":[14694,15178],"content":"After calling the CreateEmbeddedResource method, a <xref:System.Web.Compilation.BuildProvider> object writes the resource file contents using the returned <xref:System.IO.Stream> object. For example, the build provider can write the resources using a <xref:System.Resources.ResourceWriter> object. After writing the resource file, the build provider must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.","needQuote":true,"needEscape":true,"nodes":[{"content":"After calling the CreateEmbeddedResource method, a <xref:System.Web.Compilation.BuildProvider> object writes the resource file contents using the returned <xref:System.IO.Stream> object. For example, the build provider can write the resources using a <xref:System.Resources.ResourceWriter> object. After writing the resource file, the build provider must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.","pos":[0,484],"nodes":[{"content":"After calling the CreateEmbeddedResource method, a &lt;xref:System.Web.Compilation.BuildProvider&gt; object writes the resource file contents using the returned &lt;xref:System.IO.Stream&gt; object.","pos":[0,186],"source":"After calling the CreateEmbeddedResource method, a <xref:System.Web.Compilation.BuildProvider> object writes the resource file contents using the returned <xref:System.IO.Stream> object."},{"content":"For example, the build provider can write the resources using a &lt;xref:System.Resources.ResourceWriter&gt; object.","pos":[187,297],"source":" For example, the build provider can write the resources using a <xref:System.Resources.ResourceWriter> object."},{"content":"After writing the resource file, the build provider must use the &lt;xref:System.IO.Stream.Close%2A&gt; method to close the &lt;xref:System.IO.Stream&gt; object and free associated system resources.","pos":[298,484],"source":" After writing the resource file, the build provider must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources."}]}]},{"pos":[15424,15467],"content":"The build provider generating the resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"The build provider generating the resource.","pos":[0,43]}]},{"pos":[15528,15572],"content":"The name of the resource file to be created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the resource file to be created.","pos":[0,44]}]},{"pos":[15633,15749],"content":"An open <xref:System.IO.Stream> that can be used to write resources, which are included in the assembly compilation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An open &lt;xref:System.IO.Stream&gt; that can be used to write resources, which are included in the assembly compilation.","pos":[0,116],"source":"An open <xref:System.IO.Stream> that can be used to write resources, which are included in the assembly compilation."}]},{"pos":[15933,15976],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is not a valid file name.","needQuote":true,"needEscape":true,"source":"<code>name</code> is not a valid file name."},{"pos":[16457,16534],"content":"Inserts a fast object factory template for a type into the compiled assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inserts a fast object factory template for a type into the compiled assembly.","pos":[0,77]}]},{"pos":[16546,16709],"content":"A <xref:System.Web.Compilation.BuildProvider> implementation calls the GenerateTypeFactory method to optimize performance for frequent creations of type instances.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Compilation.BuildProvider&gt; implementation calls the GenerateTypeFactory method to optimize performance for frequent creations of type instances.","pos":[0,163],"source":"A <xref:System.Web.Compilation.BuildProvider> implementation calls the GenerateTypeFactory method to optimize performance for frequent creations of type instances."}]},{"pos":[16864,16897],"content":"The name of the type to generate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type to generate.","pos":[0,33]}]},{"pos":[17487,17519],"content":"Generates a temporary file path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates a temporary file path.","pos":[0,32]}]},{"pos":[17532,17837],"content":"A <xref:System.Web.Compilation.BuildProvider> implementation calls the GetTempFilePhysicalPath method to get a temporary file path that is deleted automatically after the assembly is compiled.       The GetTempFilePhysicalPath method generates a unique temporary file path, but does not create the file.","needQuote":false,"needEscape":true,"nodes":[{"content":"A <xref:System.Web.Compilation.BuildProvider> implementation calls the GetTempFilePhysicalPath method to get a temporary file path that is deleted automatically after the assembly is compiled.       The GetTempFilePhysicalPath method generates a unique temporary file path, but does not create the file.","pos":[0,303],"nodes":[{"content":"A &lt;xref:System.Web.Compilation.BuildProvider&gt; implementation calls the GetTempFilePhysicalPath method to get a temporary file path that is deleted automatically after the assembly is compiled.","pos":[0,192],"source":"A <xref:System.Web.Compilation.BuildProvider> implementation calls the GetTempFilePhysicalPath method to get a temporary file path that is deleted automatically after the assembly is compiled."},{"content":"The GetTempFilePhysicalPath method generates a unique temporary file path, but does not create the file.","pos":[199,303]}]}]},{"pos":[18001,18050],"content":"The file extension to use for the temporary file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file extension to use for the temporary file.","pos":[0,49]}]},{"pos":[18108,18170],"content":"A path to a temporary file, with the specified file extension.","needQuote":true,"needEscape":true,"nodes":[{"content":"A path to a temporary file, with the specified file extension.","pos":[0,62]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Compilation.AssemblyBuilder\n  id: AssemblyBuilder\n  children:\n  - System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)\n  - System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)\n  - System.Web.Compilation.AssemblyBuilder.CodeDomProvider\n  - System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)\n  - System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)\n  - System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)\n  - System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)\n  langs:\n  - csharp\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Web.Compilation.AssemblyBuilder\n  type: Class\n  summary: Provides a container for building an assembly from one or more virtual paths within an ASP.NET project.\n  remarks: \"Instances of the AssemblyBuilder class are used with <xref:System.Web.Compilation.BuildProvider> class methods to build one or more files into a compiled assembly.  \\n  \\n The <xref:System.Web.Compilation.BuildProvider> class defines build functionality for individual files, and the AssemblyBuilder class combines the source code contributed by each <xref:System.Web.Compilation.BuildProvider> instance into a single assembly. The ASP.NET build environment passes an AssemblyBuilder object to the <xref:System.Web.Compilation.BuildProvider> methods when building an assembly from one or more files, so that each <xref:System.Web.Compilation.BuildProvider> instance can contribute source code for its file to the overall assembly.  \\n  \\n The ASP.NET build environment determines the language and compiler required by files within the project, based on the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName> property. The build environment groups files based on their compiler settings and builds an assembly from files that require the same compiler.  \\n  \\n The <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> property indicates the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each <xref:System.Web.Compilation.BuildProvider> implementation.  \\n  \\n A <xref:System.Web.Compilation.BuildProvider> object contributes source code in the form of a CodeDOM graph using the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method. A <xref:System.Web.Compilation.BuildProvider> object contributes source code stored in a physical file using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.  \\n  \\n After each <xref:System.Web.Compilation.BuildProvider> object contributes source code using the appropriate AssemblyBuilder methods, the ASP.NET build environment uses the AssemblyBuilder class to compile the collected source code into an assembly.\"\n  example:\n  - \"The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.  \\n  \\n In the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation, the build provider adds the generated code for the assembly compilation using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method. The example does not include the implementation of the `SampleClassGenerator` class. For more information, see <xref:System.CodeDom.CodeCompileUnit>.  \\n  \\n [!code-cs[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/csharp/t-system.web.compilation_10_1.cs)]\\n [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/visualbasic/t-system.web.compilation_10_1.vb)]\"\n  syntax:\n    content: public class AssemblyBuilder\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)\n  id: AddAssemblyReference(System.Reflection.Assembly)\n  parent: System.Web.Compilation.AssemblyBuilder\n  langs:\n  - csharp\n  name: AddAssemblyReference(Assembly)\n  nameWithType: AssemblyBuilder.AddAssemblyReference(Assembly)\n  fullName: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(Assembly)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Adds an assembly that is referenced by source code generated for a file.\n  remarks: \"A <xref:System.Web.Compilation.BuildProvider> implementation uses the AddAssemblyReference method when generating source code that references types within the input assembly.  \\n  \\n The ASP.NET build environment initializes the default collection of assemblies available for reference through the build provider in the <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=fullName> property. If the build provider generates source code that references additional assemblies, the build provider adds the additional assemblies using the AddAssemblyReference method. The ASP.NET build environment resolves external types during assembly compilation using both the referenced assemblies added by build providers and the default collection of assemblies available for reference.  \\n  \\n Typically, a <xref:System.Web.Compilation.BuildProvider> object adds source code to the <xref:System.Web.Compilation.AssemblyBuilder> object in the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method. If a build provider generates source code that uses an external type, the build provider adds the type's assembly using the AddAssemblyReference method.  \\n  \\n Use the AddAssemblyReference method to add a referenced assembly required in source code generated by a <xref:System.Web.Compilation.BuildProvider> instance for a specific file type. Use the [assemblies Element for compilation (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/3811c448-af1c-498d-be2b-6ed2634c51e9) configuration element to configure an assembly for reference across multiple file types in a project.\"\n  syntax:\n    content: public void AddAssemblyReference (System.Reflection.Assembly a);\n    parameters:\n    - id: a\n      type: System.Reflection.Assembly\n      description: An assembly referenced by a code compile unit or source file included in the assembly compilation.\n  overload: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)\n  id: AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)\n  parent: System.Web.Compilation.AssemblyBuilder\n  langs:\n  - csharp\n  name: AddCodeCompileUnit(BuildProvider,CodeCompileUnit)\n  nameWithType: AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)\n  fullName: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Adds source code for the assembly in the form of a CodeDOM graph.\n  remarks: \"A <xref:System.Web.Compilation.BuildProvider> implementation calls the AddCodeCompileUnit method when generating a CodeDOM graph for a virtual path. Source code added with AddCodeCompileUnit is included in the assembly compilation.  \\n  \\n Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and then adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object. The build provider uses the AddCodeCompileUnit method to add source code as a CodeDOM graph to the assembly. Alternately, the build provider can use the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method to add source code as a physical file to the assembly.\"\n  syntax:\n    content: public void AddCodeCompileUnit (System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit);\n    parameters:\n    - id: buildProvider\n      type: System.Web.Compilation.BuildProvider\n      description: The build provider generating `compileUnit`.\n    - id: compileUnit\n      type: System.CodeDom.CodeCompileUnit\n      description: The code compile unit to include in the assembly compilation.\n  overload: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.AssemblyBuilder.CodeDomProvider\n  id: CodeDomProvider\n  parent: System.Web.Compilation.AssemblyBuilder\n  langs:\n  - csharp\n  name: CodeDomProvider\n  nameWithType: AssemblyBuilder.CodeDomProvider\n  fullName: System.Web.Compilation.AssemblyBuilder.CodeDomProvider\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Gets the compiler used to build source code into an assembly.\n  remarks: \"The CodeDomProvider property indicates the <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=fullName> implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each <xref:System.Web.Compilation.BuildProvider> implementation.  \\n  \\n The ASP.NET build environment determines the language and compiler required by files within the project, based on the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName> property. The build environment groups files based on their compiler settings and builds an assembly from files that require the same compiler.\"\n  syntax:\n    content: public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }\n    return:\n      type: System.CodeDom.Compiler.CodeDomProvider\n      description: A read-only <xref href=\"System.CodeDom.Compiler.CodeDomProvider\"></xref> implementation used for compiling source code contributed by each build provider into an assembly.\n  overload: System.Web.Compilation.AssemblyBuilder.CodeDomProvider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)\n  id: CreateCodeFile(System.Web.Compilation.BuildProvider)\n  parent: System.Web.Compilation.AssemblyBuilder\n  langs:\n  - csharp\n  name: CreateCodeFile(BuildProvider)\n  nameWithType: AssemblyBuilder.CreateCodeFile(BuildProvider)\n  fullName: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(BuildProvider)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Allows a build provider to create a temporary source file, and include the source file in the assembly compilation.\n  remarks: \"A <xref:System.Web.Compilation.BuildProvider> implementation calls the CreateCodeFile method when generating a source file for a virtual path. Source code added with CreateCodeFile is included in the assembly compilation.  \\n  \\n Typically, a build provider <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and then adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object. The build provider uses the CreateCodeFile method to add source code as a physical file to the assembly. Alternately, the build provider can use the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method to add source code as a CodeDOM graph to the assembly.  \\n  \\n After calling CreateCodeFile, the build provider writes the source file contents using the returned <xref:System.IO.TextWriter> object. After writing the source file, the <xref:System.Web.Compilation.BuildProvider> object must use the <xref:System.IO.TextWriter.Close%2A> method to close the <xref:System.IO.TextWriter> object and free associated system resources.\"\n  example:\n  - \"The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.  \\n  \\n In the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation, the build provider adds the generated code for the assembly compilation using the CreateCodeFile method. The example does not include the implementation of the `SampleClassGenerator` class. For more information, see <xref:System.CodeDom.CodeCompileUnit>.  \\n  \\n [!code-cs[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/csharp/3ed51741-a65c-4f55-993c-_1.cs)]\\n [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/visualbasic/3ed51741-a65c-4f55-993c-_1.vb)]\"\n  syntax:\n    content: public System.IO.TextWriter CreateCodeFile (System.Web.Compilation.BuildProvider buildProvider);\n    parameters:\n    - id: buildProvider\n      type: System.Web.Compilation.BuildProvider\n      description: The build provider generating the code source file.\n    return:\n      type: System.IO.TextWriter\n      description: An open <xref:System.IO.TextWriter> that can be used to write source code to a temporary file.\n  overload: System.Web.Compilation.AssemblyBuilder.CreateCodeFile*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)\n  id: CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)\n  parent: System.Web.Compilation.AssemblyBuilder\n  langs:\n  - csharp\n  name: CreateEmbeddedResource(BuildProvider,String)\n  nameWithType: AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)\n  fullName: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Allows a build provider to create a resource file to include in the assembly compilation.\n  remarks: After calling the CreateEmbeddedResource method, a <xref:System.Web.Compilation.BuildProvider> object writes the resource file contents using the returned <xref:System.IO.Stream> object. For example, the build provider can write the resources using a <xref:System.Resources.ResourceWriter> object. After writing the resource file, the build provider must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.\n  syntax:\n    content: public System.IO.Stream CreateEmbeddedResource (System.Web.Compilation.BuildProvider buildProvider, string name);\n    parameters:\n    - id: buildProvider\n      type: System.Web.Compilation.BuildProvider\n      description: The build provider generating the resource.\n    - id: name\n      type: System.String\n      description: The name of the resource file to be created.\n    return:\n      type: System.IO.Stream\n      description: An open <xref:System.IO.Stream> that can be used to write resources, which are included in the assembly compilation.\n  overload: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>name</code> is not a valid file name.\n  platform:\n  - net462\n- uid: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)\n  id: GenerateTypeFactory(System.String)\n  parent: System.Web.Compilation.AssemblyBuilder\n  langs:\n  - csharp\n  name: GenerateTypeFactory(String)\n  nameWithType: AssemblyBuilder.GenerateTypeFactory(String)\n  fullName: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Inserts a fast object factory template for a type into the compiled assembly.\n  remarks: A <xref:System.Web.Compilation.BuildProvider> implementation calls the GenerateTypeFactory method to optimize performance for frequent creations of type instances.\n  syntax:\n    content: public void GenerateTypeFactory (string typeName);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The name of the type to generate.\n  overload: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)\n  id: GetTempFilePhysicalPath(System.String)\n  parent: System.Web.Compilation.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetTempFilePhysicalPath(String)\n  nameWithType: AssemblyBuilder.GetTempFilePhysicalPath(String)\n  fullName: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Generates a temporary file path.\n  remarks: \"A <xref:System.Web.Compilation.BuildProvider> implementation calls the GetTempFilePhysicalPath method to get a temporary file path that is deleted automatically after the assembly is compiled.  \\n  \\n The GetTempFilePhysicalPath method generates a unique temporary file path, but does not create the file.\"\n  syntax:\n    content: public string GetTempFilePhysicalPath (string extension);\n    parameters:\n    - id: extension\n      type: System.String\n      description: The file extension to use for the temporary file.\n    return:\n      type: System.String\n      description: A path to a temporary file, with the specified file extension.\n  overload: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)\n  parent: System.Web.Compilation.AssemblyBuilder\n  isExternal: false\n  name: AddAssemblyReference(Assembly)\n  nameWithType: AssemblyBuilder.AddAssemblyReference(Assembly)\n  fullName: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(Assembly)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: true\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)\n  parent: System.Web.Compilation.AssemblyBuilder\n  isExternal: false\n  name: AddCodeCompileUnit(BuildProvider,CodeCompileUnit)\n  nameWithType: AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)\n  fullName: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)\n- uid: System.Web.Compilation.BuildProvider\n  parent: System.Web.Compilation\n  isExternal: false\n  name: BuildProvider\n  nameWithType: BuildProvider\n  fullName: System.Web.Compilation.BuildProvider\n- uid: System.CodeDom.CodeCompileUnit\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeCompileUnit\n  nameWithType: CodeCompileUnit\n  fullName: System.CodeDom.CodeCompileUnit\n- uid: System.Web.Compilation.AssemblyBuilder.CodeDomProvider\n  parent: System.Web.Compilation.AssemblyBuilder\n  isExternal: false\n  name: CodeDomProvider\n  nameWithType: AssemblyBuilder.CodeDomProvider\n  fullName: System.Web.Compilation.AssemblyBuilder.CodeDomProvider\n- uid: System.CodeDom.Compiler.CodeDomProvider\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: CodeDomProvider\n  nameWithType: CodeDomProvider\n  fullName: System.CodeDom.Compiler.CodeDomProvider\n- uid: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)\n  parent: System.Web.Compilation.AssemblyBuilder\n  isExternal: false\n  name: CreateCodeFile(BuildProvider)\n  nameWithType: AssemblyBuilder.CreateCodeFile(BuildProvider)\n  fullName: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(BuildProvider)\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: true\n  name: TextWriter\n  nameWithType: TextWriter\n  fullName: System.IO.TextWriter\n- uid: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)\n  parent: System.Web.Compilation.AssemblyBuilder\n  isExternal: false\n  name: CreateEmbeddedResource(BuildProvider,String)\n  nameWithType: AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)\n  fullName: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)\n  parent: System.Web.Compilation.AssemblyBuilder\n  isExternal: false\n  name: GenerateTypeFactory(String)\n  nameWithType: AssemblyBuilder.GenerateTypeFactory(String)\n  fullName: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(String)\n- uid: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)\n  parent: System.Web.Compilation.AssemblyBuilder\n  isExternal: false\n  name: GetTempFilePhysicalPath(String)\n  nameWithType: AssemblyBuilder.GetTempFilePhysicalPath(String)\n  fullName: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(String)\n- uid: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference*\n  parent: System.Web.Compilation.AssemblyBuilder\n  isExternal: false\n  name: AddAssemblyReference\n  nameWithType: AssemblyBuilder.AddAssemblyReference\n- uid: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit*\n  parent: System.Web.Compilation.AssemblyBuilder\n  isExternal: false\n  name: AddCodeCompileUnit\n  nameWithType: AssemblyBuilder.AddCodeCompileUnit\n- uid: System.Web.Compilation.AssemblyBuilder.CodeDomProvider*\n  parent: System.Web.Compilation.AssemblyBuilder\n  isExternal: false\n  name: CodeDomProvider\n  nameWithType: AssemblyBuilder.CodeDomProvider\n- uid: System.Web.Compilation.AssemblyBuilder.CreateCodeFile*\n  parent: System.Web.Compilation.AssemblyBuilder\n  isExternal: false\n  name: CreateCodeFile\n  nameWithType: AssemblyBuilder.CreateCodeFile\n- uid: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource*\n  parent: System.Web.Compilation.AssemblyBuilder\n  isExternal: false\n  name: CreateEmbeddedResource\n  nameWithType: AssemblyBuilder.CreateEmbeddedResource\n- uid: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory*\n  parent: System.Web.Compilation.AssemblyBuilder\n  isExternal: false\n  name: GenerateTypeFactory\n  nameWithType: AssemblyBuilder.GenerateTypeFactory\n- uid: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath*\n  parent: System.Web.Compilation.AssemblyBuilder\n  isExternal: false\n  name: GetTempFilePhysicalPath\n  nameWithType: AssemblyBuilder.GetTempFilePhysicalPath\n"}