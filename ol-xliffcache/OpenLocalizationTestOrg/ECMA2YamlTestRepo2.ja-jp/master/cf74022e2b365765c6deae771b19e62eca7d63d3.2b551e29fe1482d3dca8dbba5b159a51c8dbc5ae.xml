{"nodes":[{"pos":[1276,1489],"content":"Provides services to the Visual Basic compiler for compiling <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_For...Next\" name=\"For...Next\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> loops.","needQuote":true,"needEscape":true,"source":"Provides services to the Visual Basic compiler for compiling <xref uid=\"langword_csharp_For...Next\" name=\"For...Next\" href=\"\"></xref> and <xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"></xref> loops."},{"pos":[1501,1602],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[2416,2472],"content":"Checks for a synchronization lock on the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Checks for a synchronization lock on the specified type.","pos":[0,56]}]},{"pos":[2484,2585],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[2745,2803],"content":"The data type for which to check for synchronization lock.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data type for which to check for synchronization lock.","pos":[0,58]}]},{"pos":[3412,3544],"content":"Gets the enumerator for an array being iterated over in a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> loop.","needQuote":true,"needEscape":true,"source":"Gets the enumerator for an array being iterated over in a <xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"></xref> loop."},{"pos":[3556,3657],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[3826,3934],"content":"An array being iterated over in a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> loop.","needQuote":true,"needEscape":true,"source":"An array being iterated over in a <xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"></xref> loop."},{"pos":[4009,4045],"content":"The enumerator for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">ary</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The enumerator for <code>ary</code>."},{"pos":[4644,4777],"content":"Gets the enumerator for an object being iterated over in a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> loop.","needQuote":true,"needEscape":true,"source":"Gets the enumerator for an object being iterated over in a <xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"></xref> loop."},{"pos":[4789,4890],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[5061,5170],"content":"An object being iterated over in a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> loop.","needQuote":true,"needEscape":true,"source":"An object being iterated over in a <xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"></xref> loop."},{"pos":[5245,5281],"content":"The enumerator for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The enumerator for <code>obj</code>."},{"pos":[5990,6105],"content":"Sets a reference to the next object in a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> loop.","needQuote":true,"needEscape":true,"source":"Sets a reference to the next object in a <xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"></xref> loop."},{"pos":[6117,6218],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[6412,6512],"content":"The range variable of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> loop.","needQuote":true,"needEscape":true,"source":"The range variable of the <xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"></xref> loop."},{"pos":[6596,6753],"content":"The &lt;xref:System.Collections.IEnumerator&gt; of the object being iterated over in the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> loop.","needQuote":true,"needEscape":true,"source":"The <xref:System.Collections.IEnumerator> of the object being iterated over in the <xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"></xref> loop."},{"pos":[6812,7103],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> refers to the next object; <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if there are no more objects and <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p4\">&lt;/code&gt;</ept> is <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if <code>obj</code> refers to the next object; <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref> if there are no more objects and <code>obj</code> is <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>."},{"pos":[7963,8055],"content":"Initializes a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_For...Next\" name=\"For...Next\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> loop.","needQuote":true,"needEscape":true,"source":"Initializes a <xref uid=\"langword_csharp_For...Next\" name=\"For...Next\" href=\"\"></xref> loop."},{"pos":[8067,8168],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[8421,8447],"content":"The loop counter variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The loop counter variable.","pos":[0,26]}]},{"pos":[8509,8547],"content":"The initial value of the loop counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The initial value of the loop counter.","pos":[0,38]}]},{"pos":[8609,8690],"content":"The value of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> option.","needQuote":true,"needEscape":true,"source":"The value of the <xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"></xref> option."},{"pos":[8756,8841],"content":"The value of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> option.","needQuote":true,"needEscape":true,"source":"The value of the <xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"></xref> option."},{"pos":[8911,8967],"content":"An object that contains verified values for loop values.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains verified values for loop values.","pos":[0,56]}]},{"pos":[9037,9083],"content":"The counter value for the next loop iteration.","needQuote":true,"needEscape":true,"nodes":[{"content":"The counter value for the next loop iteration.","pos":[0,46]}]},{"pos":[9142,9305],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the loop has terminated; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref> if the loop has terminated; otherwise, <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>."},{"pos":[10034,10210],"content":"Checks for valid values for the loop counter, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, and <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"Checks for valid values for the loop counter, <xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"></xref>, and <xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"></xref> values."},{"pos":[10222,10323],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[10511,10667],"content":"Required. A <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> value that represents the initial value passed for the loop counter variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the initial value passed for the loop counter variable.","pos":[10,156],"source":" A <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> value that represents the initial value passed for the loop counter variable."}]},{"pos":[10730,10926],"content":"Required. A <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"></xref> keyword.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the value passed by using the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> keyword.","pos":[10,196],"source":" A <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"></xref> keyword."}]},{"pos":[10993,11193],"content":"Required. A <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"></xref> keyword.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the value passed by using the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> keyword.","pos":[10,200],"source":" A <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"></xref> keyword."}]},{"pos":[11252,11632],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">StepValue</ph><ept id=\"p2\">&lt;/code&gt;</ept> is greater than zero and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p3\">&lt;/code&gt;</ept> is less than or equal to <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph3\">limit</ph><ept id=\"p4\">&lt;/code&gt;</ept>, or if <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph4\">StepValue</ph><ept id=\"p5\">&lt;/code&gt;</ept> is less than or equal to zero and <bpt id=\"p6\">&lt;code&gt;</bpt><ph id=\"ph5\">count</ph><ept id=\"p6\">&lt;/code&gt;</ept> is greater than or equal to <bpt id=\"p7\">&lt;code&gt;</bpt><ph id=\"ph6\">limit</ph><ept id=\"p7\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p8\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p8\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if <code>StepValue</code> is greater than zero and <code>count</code> is less than or equal to <code>limit</code>, or if <code>StepValue</code> is less than or equal to zero and <code>count</code> is greater than or equal to <code>limit</code>; otherwise, <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>."},{"pos":[12349,12440],"content":"Increments a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_For...Next\" name=\"For...Next\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> loop.","needQuote":true,"needEscape":true,"source":"Increments a <xref uid=\"langword_csharp_For...Next\" name=\"For...Next\" href=\"\"></xref> loop."},{"pos":[12452,12553],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[12751,12777],"content":"The loop counter variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The loop counter variable.","pos":[0,26]}]},{"pos":[12841,12897],"content":"An object that contains verified values for loop values.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains verified values for loop values.","pos":[0,56]}]},{"pos":[12967,13013],"content":"The counter value for the next loop iteration.","needQuote":true,"needEscape":true,"nodes":[{"content":"The counter value for the next loop iteration.","pos":[0,46]}]},{"pos":[13072,13235],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the loop has terminated; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref> if the loop has terminated; otherwise, <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>."},{"pos":[13945,14121],"content":"Checks for valid values for the loop counter, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, and <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"Checks for valid values for the loop counter, <xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"></xref>, and <xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"></xref> values."},{"pos":[14133,14234],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[14414,14568],"content":"Required. A <xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"></xref> value that represents the initial value passed for the loop counter variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the initial value passed for the loop counter variable.","pos":[10,154],"source":" A <xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"></xref> value that represents the initial value passed for the loop counter variable."}]},{"pos":[14630,14824],"content":"Required. A <xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"></xref> keyword.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the value passed by using the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> keyword.","pos":[10,194],"source":" A <xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"></xref> keyword."}]},{"pos":[14890,15088],"content":"Required. A <xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"></xref> keyword.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the value passed by using the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> keyword.","pos":[10,198],"source":" A <xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"></xref> keyword."}]},{"pos":[15147,15527],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">StepValue</ph><ept id=\"p2\">&lt;/code&gt;</ept> is greater than zero and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p3\">&lt;/code&gt;</ept> is less than or equal to <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph3\">limit</ph><ept id=\"p4\">&lt;/code&gt;</ept>, or if <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph4\">StepValue</ph><ept id=\"p5\">&lt;/code&gt;</ept> is less than or equal to zero and <bpt id=\"p6\">&lt;code&gt;</bpt><ph id=\"ph5\">count</ph><ept id=\"p6\">&lt;/code&gt;</ept> is greater than or equal to <bpt id=\"p7\">&lt;code&gt;</bpt><ph id=\"ph6\">limit</ph><ept id=\"p7\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p8\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p8\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if <code>StepValue</code> is greater than zero and <code>count</code> is less than or equal to <code>limit</code>, or if <code>StepValue</code> is less than or equal to zero and <code>count</code> is greater than or equal to <code>limit</code>; otherwise, <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>."},{"pos":[16236,16412],"content":"Checks for valid values for the loop counter, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, and <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"Checks for valid values for the loop counter, <xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"></xref>, and <xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"></xref> values."},{"pos":[16424,16525],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[16708,16862],"content":"Required. A <xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref> value that represents the initial value passed for the loop counter variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the initial value passed for the loop counter variable.","pos":[10,154],"source":" A <xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref> value that represents the initial value passed for the loop counter variable."}]},{"pos":[16924,17118],"content":"Required. A <xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"></xref> keyword.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the value passed by using the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> keyword.","pos":[10,194],"source":" A <xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"></xref> keyword."}]},{"pos":[17184,17382],"content":"Required. A <xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"></xref> keyword.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the value passed by using the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> keyword.","pos":[10,198],"source":" A <xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"></xref> keyword."}]},{"pos":[17441,17821],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">StepValue</ph><ept id=\"p2\">&lt;/code&gt;</ept> is greater than zero and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p3\">&lt;/code&gt;</ept> is less than or equal to <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph3\">limit</ph><ept id=\"p4\">&lt;/code&gt;</ept>, or if <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph4\">StepValue</ph><ept id=\"p5\">&lt;/code&gt;</ept> is less than or equal to zero and <bpt id=\"p6\">&lt;code&gt;</bpt><ph id=\"ph5\">count</ph><ept id=\"p6\">&lt;/code&gt;</ept> is greater than or equal to <bpt id=\"p7\">&lt;code&gt;</bpt><ph id=\"ph6\">limit</ph><ept id=\"p7\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p8\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p8\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if <code>StepValue</code> is greater than zero and <code>count</code> is less than or equal to <code>limit</code>, or if <code>StepValue</code> is less than or equal to zero and <code>count</code> is greater than or equal to <code>limit</code>; otherwise, <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl\n  id: FlowControl\n  children:\n  - Microsoft.VisualBasic.CompilerServices.FlowControl.CheckForSyncLockOnValueType(System.Object)\n  - Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInArr(System.Array)\n  - Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInObj(System.Object)\n  - Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachNextObj(System.Object@,System.Collections.IEnumerator)\n  - Microsoft.VisualBasic.CompilerServices.FlowControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)\n  - Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)\n  - Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckObj(System.Object,System.Object,System.Object@)\n  - Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR4(System.Single,System.Single,System.Single)\n  - Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR8(System.Double,System.Double,System.Double)\n  langs:\n  - csharp\n  name: FlowControl\n  nameWithType: FlowControl\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl\n  type: Class\n  summary: Provides services to the Visual Basic compiler for compiling <xref uid=\"langword_csharp_For...Next\" name=\"For...Next\" href=\"\"></xref> and <xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"></xref> loops.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: >-\n      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]\n\n      public sealed class FlowControl\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.CheckForSyncLockOnValueType(System.Object)\n  id: CheckForSyncLockOnValueType(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  langs:\n  - csharp\n  name: CheckForSyncLockOnValueType(Object)\n  nameWithType: FlowControl.CheckForSyncLockOnValueType(Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.CheckForSyncLockOnValueType(Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Checks for a synchronization lock on the specified type.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static void CheckForSyncLockOnValueType (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The data type for which to check for synchronization lock.\n  overload: Microsoft.VisualBasic.CompilerServices.FlowControl.CheckForSyncLockOnValueType*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInArr(System.Array)\n  id: ForEachInArr(System.Array)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  langs:\n  - csharp\n  name: ForEachInArr(Array)\n  nameWithType: FlowControl.ForEachInArr(Array)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInArr(Array)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Gets the enumerator for an array being iterated over in a <xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"></xref> loop.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static System.Collections.IEnumerator ForEachInArr (Array ary);\n    parameters:\n    - id: ary\n      type: System.Array\n      description: An array being iterated over in a <xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"></xref> loop.\n    return:\n      type: System.Collections.IEnumerator\n      description: The enumerator for <code>ary</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInArr*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInObj(System.Object)\n  id: ForEachInObj(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  langs:\n  - csharp\n  name: ForEachInObj(Object)\n  nameWithType: FlowControl.ForEachInObj(Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInObj(Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Gets the enumerator for an object being iterated over in a <xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"></xref> loop.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static System.Collections.IEnumerator ForEachInObj (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object being iterated over in a <xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"></xref> loop.\n    return:\n      type: System.Collections.IEnumerator\n      description: The enumerator for <code>obj</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInObj*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachNextObj(System.Object@,System.Collections.IEnumerator)\n  id: ForEachNextObj(System.Object@,System.Collections.IEnumerator)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  langs:\n  - csharp\n  name: ForEachNextObj(Object,IEnumerator)\n  nameWithType: FlowControl.ForEachNextObj(Object,IEnumerator)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachNextObj(Object,IEnumerator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Sets a reference to the next object in a <xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"></xref> loop.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static bool ForEachNextObj (ref object obj, System.Collections.IEnumerator enumerator);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The range variable of the <xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"></xref> loop.\n    - id: enumerator\n      type: System.Collections.IEnumerator\n      description: The <xref:System.Collections.IEnumerator> of the object being iterated over in the <xref uid=\"langword_csharp_For Each\" name=\"For Each\" href=\"\"></xref> loop.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if <code>obj</code> refers to the next object; <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref> if there are no more objects and <code>obj</code> is <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>.\n  overload: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachNextObj*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)\n  id: ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  langs:\n  - csharp\n  name: ForLoopInitObj(Object,Object,Object,Object,Object,Object)\n  nameWithType: FlowControl.ForLoopInitObj(Object,Object,Object,Object,Object,Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.ForLoopInitObj(Object,Object,Object,Object,Object,Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Initializes a <xref uid=\"langword_csharp_For...Next\" name=\"For...Next\" href=\"\"></xref> loop.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static bool ForLoopInitObj (object Counter, object Start, object Limit, object StepValue, ref object LoopForResult, ref object CounterResult);\n    parameters:\n    - id: Counter\n      type: System.Object\n      description: The loop counter variable.\n    - id: Start\n      type: System.Object\n      description: The initial value of the loop counter.\n    - id: Limit\n      type: System.Object\n      description: The value of the <xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"></xref> option.\n    - id: StepValue\n      type: System.Object\n      description: The value of the <xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"></xref> option.\n    - id: LoopForResult\n      type: System.Object\n      description: An object that contains verified values for loop values.\n    - id: CounterResult\n      type: System.Object\n      description: The counter value for the next loop iteration.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref> if the loop has terminated; otherwise, <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>.\n  overload: Microsoft.VisualBasic.CompilerServices.FlowControl.ForLoopInitObj*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)\n  id: ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  langs:\n  - csharp\n  name: ForNextCheckDec(Decimal,Decimal,Decimal)\n  nameWithType: FlowControl.ForNextCheckDec(Decimal,Decimal,Decimal)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckDec(Decimal,Decimal,Decimal)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Checks for valid values for the loop counter, <xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"></xref>, and <xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"></xref> values.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static bool ForNextCheckDec (decimal count, decimal limit, decimal StepValue);\n    parameters:\n    - id: count\n      type: System.Decimal\n      description: Required. A <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> value that represents the initial value passed for the loop counter variable.\n    - id: limit\n      type: System.Decimal\n      description: Required. A <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"></xref> keyword.\n    - id: StepValue\n      type: System.Decimal\n      description: Required. A <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"></xref> keyword.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if <code>StepValue</code> is greater than zero and <code>count</code> is less than or equal to <code>limit</code>, or if <code>StepValue</code> is less than or equal to zero and <code>count</code> is greater than or equal to <code>limit</code>; otherwise, <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>.\n  overload: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckDec*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckObj(System.Object,System.Object,System.Object@)\n  id: ForNextCheckObj(System.Object,System.Object,System.Object@)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  langs:\n  - csharp\n  name: ForNextCheckObj(Object,Object,Object)\n  nameWithType: FlowControl.ForNextCheckObj(Object,Object,Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckObj(Object,Object,Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Increments a <xref uid=\"langword_csharp_For...Next\" name=\"For...Next\" href=\"\"></xref> loop.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static bool ForNextCheckObj (object Counter, object LoopObj, ref object CounterResult);\n    parameters:\n    - id: Counter\n      type: System.Object\n      description: The loop counter variable.\n    - id: LoopObj\n      type: System.Object\n      description: An object that contains verified values for loop values.\n    - id: CounterResult\n      type: System.Object\n      description: The counter value for the next loop iteration.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref> if the loop has terminated; otherwise, <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>.\n  overload: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckObj*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR4(System.Single,System.Single,System.Single)\n  id: ForNextCheckR4(System.Single,System.Single,System.Single)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  langs:\n  - csharp\n  name: ForNextCheckR4(Single,Single,Single)\n  nameWithType: FlowControl.ForNextCheckR4(Single,Single,Single)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR4(Single,Single,Single)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Checks for valid values for the loop counter, <xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"></xref>, and <xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"></xref> values.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static bool ForNextCheckR4 (float count, float limit, float StepValue);\n    parameters:\n    - id: count\n      type: System.Single\n      description: Required. A <xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"></xref> value that represents the initial value passed for the loop counter variable.\n    - id: limit\n      type: System.Single\n      description: Required. A <xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"></xref> keyword.\n    - id: StepValue\n      type: System.Single\n      description: Required. A <xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"></xref> keyword.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if <code>StepValue</code> is greater than zero and <code>count</code> is less than or equal to <code>limit</code>, or if <code>StepValue</code> is less than or equal to zero and <code>count</code> is greater than or equal to <code>limit</code>; otherwise, <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>.\n  overload: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR4*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR8(System.Double,System.Double,System.Double)\n  id: ForNextCheckR8(System.Double,System.Double,System.Double)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  langs:\n  - csharp\n  name: ForNextCheckR8(Double,Double,Double)\n  nameWithType: FlowControl.ForNextCheckR8(Double,Double,Double)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR8(Double,Double,Double)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Checks for valid values for the loop counter, <xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"></xref>, and <xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"></xref> values.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static bool ForNextCheckR8 (double count, double limit, double StepValue);\n    parameters:\n    - id: count\n      type: System.Double\n      description: Required. A <xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref> value that represents the initial value passed for the loop counter variable.\n    - id: limit\n      type: System.Double\n      description: Required. A <xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_To\" name=\"To\" href=\"\"></xref> keyword.\n    - id: StepValue\n      type: System.Double\n      description: Required. A <xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref> value that represents the value passed by using the <xref uid=\"langword_csharp_Step\" name=\"Step\" href=\"\"></xref> keyword.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if <code>StepValue</code> is greater than zero and <code>count</code> is less than or equal to <code>limit</code>, or if <code>StepValue</code> is less than or equal to zero and <code>count</code> is greater than or equal to <code>limit</code>; otherwise, <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>.\n  overload: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR8*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.CheckForSyncLockOnValueType(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: CheckForSyncLockOnValueType(Object)\n  nameWithType: FlowControl.CheckForSyncLockOnValueType(Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.CheckForSyncLockOnValueType(Object)\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInArr(System.Array)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: ForEachInArr(Array)\n  nameWithType: FlowControl.ForEachInArr(Array)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInArr(Array)\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInObj(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: ForEachInObj(Object)\n  nameWithType: FlowControl.ForEachInObj(Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInObj(Object)\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachNextObj(System.Object@,System.Collections.IEnumerator)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: ForEachNextObj(Object,IEnumerator)\n  nameWithType: FlowControl.ForEachNextObj(Object,IEnumerator)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachNextObj(Object,IEnumerator)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: ForLoopInitObj(Object,Object,Object,Object,Object,Object)\n  nameWithType: FlowControl.ForLoopInitObj(Object,Object,Object,Object,Object,Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.ForLoopInitObj(Object,Object,Object,Object,Object,Object)\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: ForNextCheckDec(Decimal,Decimal,Decimal)\n  nameWithType: FlowControl.ForNextCheckDec(Decimal,Decimal,Decimal)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckDec(Decimal,Decimal,Decimal)\n- uid: System.Decimal\n  parent: System\n  isExternal: true\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckObj(System.Object,System.Object,System.Object@)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: ForNextCheckObj(Object,Object,Object)\n  nameWithType: FlowControl.ForNextCheckObj(Object,Object,Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckObj(Object,Object,Object)\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR4(System.Single,System.Single,System.Single)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: ForNextCheckR4(Single,Single,Single)\n  nameWithType: FlowControl.ForNextCheckR4(Single,Single,Single)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR4(Single,Single,Single)\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR8(System.Double,System.Double,System.Double)\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: ForNextCheckR8(Double,Double,Double)\n  nameWithType: FlowControl.ForNextCheckR8(Double,Double,Double)\n  fullName: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR8(Double,Double,Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.CheckForSyncLockOnValueType*\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: CheckForSyncLockOnValueType\n  nameWithType: FlowControl.CheckForSyncLockOnValueType\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInArr*\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: ForEachInArr\n  nameWithType: FlowControl.ForEachInArr\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInObj*\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: ForEachInObj\n  nameWithType: FlowControl.ForEachInObj\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachNextObj*\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: ForEachNextObj\n  nameWithType: FlowControl.ForEachNextObj\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForLoopInitObj*\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: ForLoopInitObj\n  nameWithType: FlowControl.ForLoopInitObj\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckDec*\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: ForNextCheckDec\n  nameWithType: FlowControl.ForNextCheckDec\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckObj*\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: ForNextCheckObj\n  nameWithType: FlowControl.ForNextCheckObj\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR4*\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: ForNextCheckR4\n  nameWithType: FlowControl.ForNextCheckR4\n- uid: Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR8*\n  parent: Microsoft.VisualBasic.CompilerServices.FlowControl\n  isExternal: false\n  name: ForNextCheckR8\n  nameWithType: FlowControl.ForNextCheckR8\n"}