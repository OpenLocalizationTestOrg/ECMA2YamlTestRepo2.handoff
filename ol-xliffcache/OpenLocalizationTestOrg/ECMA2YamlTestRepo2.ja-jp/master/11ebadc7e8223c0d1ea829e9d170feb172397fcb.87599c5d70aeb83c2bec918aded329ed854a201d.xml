{"nodes":[{"pos":[859,931],"content":"Provides methods for writing to a document referenced by a symbol store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides methods for writing to a document referenced by a symbol store.","pos":[0,72]}]},{"pos":[943,1066],"content":"A document is defined by a URL and a document type GUID. Optionally, the document source can be stored in the symbol store.","needQuote":true,"needEscape":true,"nodes":[{"content":"A document is defined by a URL and a document type GUID. Optionally, the document source can be stored in the symbol store.","pos":[0,123],"nodes":[{"content":"A document is defined by a URL and a document type GUID.","pos":[0,56]},{"content":"Optionally, the document source can be stored in the symbol store.","pos":[57,123]}]}]},{"pos":[2510,2522],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3021,3156],"content":"Releases the resources used by the current instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymDocumentWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Releases the resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymDocumentWriter\"></xref> class."},{"pos":[3792,4100],"content":"Called by the &lt;xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize<ept id=\"p1\">*</ept>&gt; methods to release the managed and unmanaged resources used by the current instance of the <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymBinder\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Called by the <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose*> and <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize*> methods to release the managed and unmanaged resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymBinder\"></xref> class."},{"pos":[4112,4334],"content":"This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize%2A> methods; do not call this method directly.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is called only by the public &lt;xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose%2A&gt; and &lt;xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize%2A&gt; methods; do not call this method directly.","pos":[0,222],"source":"This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize%2A> methods; do not call this method directly."}]},{"pos":[4477,4681],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources."},{"pos":[5187,5370],"content":"Releases unmanaged resources and performs other cleanup operations before the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymDocumentWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is reclaimed by garbage collection.","needQuote":true,"needEscape":true,"source":"Releases unmanaged resources and performs other cleanup operations before the <xref href=\"System.Diagnostics.SymbolStore.SymDocumentWriter\"></xref> is reclaimed by garbage collection."},{"pos":[5382,5690],"content":"This method overrides <xref:System.Object.Finalize%2A>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method overrides &lt;xref:System.Object.Finalize%2A&gt;.","pos":[0,55],"source":"This method overrides <xref:System.Object.Finalize%2A>."},{"content":"Application code should not call this method; an object's <ph id=\"ph1\">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the &lt;xref:System.GC.SuppressFinalize%2A&gt; method.","pos":[56,308],"source":" Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method."}]},{"pos":[6516,6528],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7141,7201],"content":"Throws a <xref:System.NotImplementedException> in all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"Throws a &lt;xref:System.NotImplementedException&gt; in all cases.","pos":[0,60],"source":"Throws a <xref:System.NotImplementedException> in all cases."}]},{"pos":[7373,7400],"content":"This parameter is not used.","needQuote":true,"needEscape":true,"nodes":[{"content":"This parameter is not used.","pos":[0,27]}]},{"pos":[7463,7490],"content":"This parameter is not used.","needQuote":true,"needEscape":true,"nodes":[{"content":"This parameter is not used.","pos":[0,27]}]},{"pos":[7685,7698],"content":"In all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"In all cases.","pos":[0,13]}]},{"pos":[8170,8228],"content":"Throws a <xref:System.NotSupportedException> in all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"Throws a &lt;xref:System.NotSupportedException&gt; in all cases.","pos":[0,58],"source":"Throws a <xref:System.NotSupportedException> in all cases."}]},{"pos":[8377,8404],"content":"This parameter is not used.","needQuote":true,"needEscape":true,"nodes":[{"content":"This parameter is not used.","pos":[0,27]}]},{"pos":[8593,8606],"content":"In all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"In all cases.","pos":[0,13]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter\n  id: SymDocumentWriter\n  children:\n  - System.Diagnostics.SymbolStore.SymDocumentWriter.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter*)\n  - System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose\n  - System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose(System.Boolean)\n  - System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize\n  - System.Diagnostics.SymbolStore.SymDocumentWriter.GetUnmanaged\n  - System.Diagnostics.SymbolStore.SymDocumentWriter.SetCheckSum(System.Guid,System.Byte[])\n  - System.Diagnostics.SymbolStore.SymDocumentWriter.SetSource(System.Byte[])\n  langs:\n  - csharp\n  name: SymDocumentWriter\n  nameWithType: SymDocumentWriter\n  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter\n  type: Class\n  summary: Provides methods for writing to a document referenced by a symbol store.\n  remarks: A document is defined by a URL and a document type GUID. Optionally, the document source can be stored in the symbol store.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class SymDocumentWriter : System.Diagnostics.SymbolStore.SymDocumentWriterBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  inheritance:\n  - System.Object\n  - System.Diagnostics.SymbolStore.SymDocumentWriterBase\n  implements:\n  - System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  - System.IDisposable\n  inheritedMembers:\n  - System.Diagnostics.SymbolStore.SymDocumentWriterBase.{dtor}\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter*)\n  id: '#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter*)'\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  langs:\n  - csharp\n  name: SymDocumentWriter(ISymUnmanagedDocumentWriter*)\n  nameWithType: SymDocumentWriter.SymDocumentWriter(ISymUnmanagedDocumentWriter*)\n  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.SymDocumentWriter(ISymUnmanagedDocumentWriter*)\n  type: Constructor\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public SymDocumentWriter (System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter* pDocumentWriter);\n    parameters:\n    - id: pDocumentWriter\n      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter*\n      description: To be added.\n  overload: System.Diagnostics.SymbolStore.SymDocumentWriter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose\n  id: Dispose\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: SymDocumentWriter.Dispose()\n  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Releases the resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymDocumentWriter\"></xref> class.\n  syntax:\n    content: public override sealed void Dispose ();\n    parameters: []\n  overload: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SymDocumentWriter.Dispose(Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Called by the <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose*> and <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize*> methods to release the managed and unmanaged resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymBinder\"></xref> class.\n  remarks: This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize%2A> methods; do not call this method directly.\n  syntax:\n    content: protected virtual void Dispose (bool A_0);\n    parameters:\n    - id: A_0\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources.\n  overload: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize\n  id: Finalize\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: SymDocumentWriter.Finalize()\n  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Releases unmanaged resources and performs other cleanup operations before the <xref href=\"System.Diagnostics.SymbolStore.SymDocumentWriter\"></xref> is reclaimed by garbage collection.\n  remarks: This method overrides <xref:System.Object.Finalize%2A>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.\n  syntax:\n    content: ~SymDocumentWriter ();\n    parameters: []\n  overload: System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.GetUnmanaged\n  id: GetUnmanaged\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  langs:\n  - csharp\n  name: GetUnmanaged()\n  nameWithType: SymDocumentWriter.GetUnmanaged()\n  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.GetUnmanaged()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter* GetUnmanaged ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter*\n      description: To be added.\n  overload: System.Diagnostics.SymbolStore.SymDocumentWriter.GetUnmanaged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.SetCheckSum(System.Guid,System.Byte[])\n  id: SetCheckSum(System.Guid,System.Byte[])\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  langs:\n  - csharp\n  name: SetCheckSum(Guid,Byte[])\n  nameWithType: SymDocumentWriter.SetCheckSum(Guid,Byte[])\n  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.SetCheckSum(Guid,Byte[])\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Throws a <xref:System.NotImplementedException> in all cases.\n  syntax:\n    content: public virtual void SetCheckSum (Guid algorithmId, byte[] source);\n    parameters:\n    - id: algorithmId\n      type: System.Guid\n      description: This parameter is not used.\n    - id: source\n      type: System.Byte[]\n      description: This parameter is not used.\n  overload: System.Diagnostics.SymbolStore.SymDocumentWriter.SetCheckSum*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: In all cases.\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.SetSource(System.Byte[])\n  id: SetSource(System.Byte[])\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  langs:\n  - csharp\n  name: SetSource(Byte[])\n  nameWithType: SymDocumentWriter.SetSource(Byte[])\n  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.SetSource(Byte[])\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Throws a <xref:System.NotSupportedException> in all cases.\n  syntax:\n    content: public virtual void SetSource (byte[] source);\n    parameters:\n    - id: source\n      type: System.Byte[]\n      description: This parameter is not used.\n  overload: System.Diagnostics.SymbolStore.SymDocumentWriter.SetSource*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: In all cases.\n  platform:\n  - net462\nreferences:\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriterBase\n  isExternal: false\n  name: System.Diagnostics.SymbolStore.SymDocumentWriterBase\n- uid: System.NotImplementedException\n  isExternal: true\n  name: System.NotImplementedException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter*)\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  isExternal: false\n  name: SymDocumentWriter(ISymUnmanagedDocumentWriter*)\n  nameWithType: SymDocumentWriter.SymDocumentWriter(ISymUnmanagedDocumentWriter*)\n  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.SymDocumentWriter(ISymUnmanagedDocumentWriter*)\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  isExternal: false\n  name: Dispose()\n  nameWithType: SymDocumentWriter.Dispose()\n  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose()\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SymDocumentWriter.Dispose(Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  isExternal: false\n  name: Finalize()\n  nameWithType: SymDocumentWriter.Finalize()\n  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize()\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.GetUnmanaged\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  isExternal: false\n  name: GetUnmanaged()\n  nameWithType: SymDocumentWriter.GetUnmanaged()\n  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.GetUnmanaged()\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.SetCheckSum(System.Guid,System.Byte[])\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  isExternal: false\n  name: SetCheckSum(Guid,Byte[])\n  nameWithType: SymDocumentWriter.SetCheckSum(Guid,Byte[])\n  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.SetCheckSum(Guid,Byte[])\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.SetSource(System.Byte[])\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  isExternal: false\n  name: SetSource(Byte[])\n  nameWithType: SymDocumentWriter.SetSource(Byte[])\n  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.SetSource(Byte[])\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.#ctor*\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  isExternal: false\n  name: SymDocumentWriter\n  nameWithType: SymDocumentWriter.SymDocumentWriter\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose*\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  isExternal: false\n  name: Dispose\n  nameWithType: SymDocumentWriter.Dispose\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize*\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  isExternal: false\n  name: Finalize\n  nameWithType: SymDocumentWriter.Finalize\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.GetUnmanaged*\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  isExternal: false\n  name: GetUnmanaged\n  nameWithType: SymDocumentWriter.GetUnmanaged\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.SetCheckSum*\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  isExternal: false\n  name: SetCheckSum\n  nameWithType: SymDocumentWriter.SetCheckSum\n- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.SetSource*\n  parent: System.Diagnostics.SymbolStore.SymDocumentWriter\n  isExternal: false\n  name: SetSource\n  nameWithType: SymDocumentWriter.SetSource\n"}