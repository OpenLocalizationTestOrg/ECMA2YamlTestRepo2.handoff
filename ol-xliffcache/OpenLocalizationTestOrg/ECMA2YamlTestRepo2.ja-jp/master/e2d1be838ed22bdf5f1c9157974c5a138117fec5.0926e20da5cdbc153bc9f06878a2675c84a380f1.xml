{"nodes":[{"pos":[2743,2827],"content":"Provides utility methods that perform common tasks involving nodes in a visual tree.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides utility methods that perform common tasks involving nodes in a visual tree.","pos":[0,84]}]},{"pos":[2840,4137],"content":"Nodes in the visual tree can be either <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D> objects. Methods that are specific to a type of visual object are typed as either <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D>. However, some methods in the VisualTreeHelper class can accept a <xref:System.Windows.DependencyObject> value that represents either type of visual object.       [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] supports programmatic access to several different tree structures of objects. Primarily, this is exposed as a visual tree and a logical tree. In some cases, the logical tree is a more useful representation of the elements in a [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] application, but conceptually the logical tree is implemented at a level beyond the <xref:System.Windows.Media.Visual> class. Unlike the visual tree, the logical tree can represent nonvisual data objects, such as <xref:System.Windows.Documents.ListItem>. For more information on the logical tree, see [Trees in WPF](~/add/includes/ajax-current-ext-md.md). The logical tree also is supported by a similar utility method class, <xref:System.Windows.LogicalTreeHelper>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Nodes in the visual tree can be either &lt;xref:System.Windows.Media.Visual&gt; or &lt;xref:System.Windows.Media.Media3D.Visual3D&gt; objects.","pos":[0,130],"source":"Nodes in the visual tree can be either <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D> objects."},{"content":"Methods that are specific to a type of visual object are typed as either &lt;xref:System.Windows.Media.Visual&gt; or &lt;xref:System.Windows.Media.Media3D.Visual3D&gt;.","pos":[131,287],"source":" Methods that are specific to a type of visual object are typed as either <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D>."},{"content":"However, some methods in the VisualTreeHelper class can accept a &lt;xref:System.Windows.DependencyObject&gt; value that represents either type of visual object.","pos":[288,443],"source":" However, some methods in the VisualTreeHelper class can accept a <xref:System.Windows.DependencyObject> value that represents either type of visual object."},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> supports programmatic access to several different tree structures of objects.","pos":[450,603],"source":"[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] supports programmatic access to several different tree structures of objects."},{"content":"Primarily, this is exposed as a visual tree and a logical tree.","pos":[604,667]},{"content":"In some cases, the logical tree is a more useful representation of the elements in a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> application, but conceptually the logical tree is implemented at a level beyond the &lt;xref:System.Windows.Media.Visual&gt; class.","pos":[668,954],"source":" In some cases, the logical tree is a more useful representation of the elements in a [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] application, but conceptually the logical tree is implemented at a level beyond the <xref:System.Windows.Media.Visual> class."},{"content":"Unlike the visual tree, the logical tree can represent nonvisual data objects, such as &lt;xref:System.Windows.Documents.ListItem&gt;.","pos":[955,1083],"source":" Unlike the visual tree, the logical tree can represent nonvisual data objects, such as <xref:System.Windows.Documents.ListItem>."},{"content":"For more information on the logical tree, see <bpt id=\"p1\">[</bpt>Trees in WPF<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1084,1184],"source":" For more information on the logical tree, see [Trees in WPF](~/add/includes/ajax-current-ext-md.md)."},{"content":"The logical tree also is supported by a similar utility method class, &lt;xref:System.Windows.LogicalTreeHelper&gt;.","pos":[1185,1295],"source":" The logical tree also is supported by a similar utility method class, <xref:System.Windows.LogicalTreeHelper>."}]},{"pos":[5208,5356],"content":"Returns the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Effects.BitmapEffect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value for the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the <xref href=\"System.Windows.Media.Effects.BitmapEffect\"></xref> value for the specified <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[5588,5673],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the bitmap effect.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> that contains the bitmap effect."},{"pos":[5759,5884],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Effects.BitmapEffect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Effects.BitmapEffect\"></xref> for this <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[6484,6637],"content":"Returns the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Effects.BitmapEffectInput\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value for the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the <xref href=\"System.Windows.Media.Effects.BitmapEffectInput\"></xref> value for the specified <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[6879,6976],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the bitmap effect input value.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> that contains the bitmap effect input value."},{"pos":[7067,7197],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Effects.BitmapEffectInput\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Effects.BitmapEffectInput\"></xref> for this <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[7762,7864],"content":"Retrieves the cached representation of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Retrieves the cached representation of the specified <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[8082,8202],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to get the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.CacheMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> for.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> to get the <xref href=\"System.Windows.Media.CacheMode\"></xref> for."},{"pos":[8277,8360],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.CacheMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">reference</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.CacheMode\"></xref> for <code>reference</code>."},{"pos":[8979,9073],"content":"Returns the child visual object from the specified collection index within a specified parent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the child visual object from the specified collection index within a specified parent.","pos":[0,94]}]},{"pos":[9086,9488],"content":"Call the <xref:System.Windows.Media.VisualTreeHelper.GetChildrenCount%2A> method to determine the total number of child elements of a parent visual.       The value of `reference` can represent either a <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D> object, which is why the common base type <xref:System.Windows.DependencyObject> is used here as a parameter type.","needQuote":false,"needEscape":true,"nodes":[{"content":"Call the &lt;xref:System.Windows.Media.VisualTreeHelper.GetChildrenCount%2A&gt; method to determine the total number of child elements of a parent visual.","pos":[0,148],"source":"Call the <xref:System.Windows.Media.VisualTreeHelper.GetChildrenCount%2A> method to determine the total number of child elements of a parent visual."},{"content":"The value of <ph id=\"ph1\">`reference`</ph> can represent either a &lt;xref:System.Windows.Media.Visual&gt; or &lt;xref:System.Windows.Media.Media3D.Visual3D&gt; object, which is why the common base type &lt;xref:System.Windows.DependencyObject&gt; is used here as a parameter type.","pos":[155,400],"source":"       The value of `reference` can represent either a <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D> object, which is why the common base type <xref:System.Windows.DependencyObject> is used here as a parameter type."}]},{"pos":[10216,10304],"content":"The parent visual, referenced as a <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The parent visual, referenced as a <xref href=\"System.Windows.DependencyObject\"></xref>."},{"pos":[10370,10446],"content":"The index that represents the child visual that is contained by <ph id=\"ph1\">`reference`</ph>.","needQuote":true,"needEscape":true,"source":"The index that represents the child visual that is contained by `reference`."},{"pos":[10522,10565],"content":"The index value of the child visual object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index value of the child visual object.","pos":[0,43]}]},{"pos":[11176,11249],"content":"Returns the number of children that the specified visual object contains.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the number of children that the specified visual object contains.","pos":[0,73]}]},{"pos":[11262,11637],"content":"Use the <xref:System.Windows.Media.VisualTreeHelper.GetChild%2A> method to retrieve a specified child of a parent visual.       The value of `reference` can represent either a <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D> object, which is why the common base type <xref:System.Windows.DependencyObject> is used here as a parameter type.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the &lt;xref:System.Windows.Media.VisualTreeHelper.GetChild%2A&gt; method to retrieve a specified child of a parent visual.","pos":[0,121],"source":"Use the <xref:System.Windows.Media.VisualTreeHelper.GetChild%2A> method to retrieve a specified child of a parent visual."},{"content":"The value of <ph id=\"ph1\">`reference`</ph> can represent either a &lt;xref:System.Windows.Media.Visual&gt; or &lt;xref:System.Windows.Media.Media3D.Visual3D&gt; object, which is why the common base type &lt;xref:System.Windows.DependencyObject&gt; is used here as a parameter type.","pos":[128,373],"source":"       The value of `reference` can represent either a <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D> object, which is why the common base type <xref:System.Windows.DependencyObject> is used here as a parameter type."}]},{"pos":[12329,12424],"content":"The parent visual that is referenced as a <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The parent visual that is referenced as a <xref href=\"System.Windows.DependencyObject\"></xref>."},{"pos":[12481,12541],"content":"The number of child visuals that the parent visual contains.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of child visuals that the parent visual contains.","pos":[0,60]}]},{"pos":[13077,13228],"content":"Return the clip region of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> as a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Geometry\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"Return the clip region of the specified <xref href=\"System.Windows.Media.Visual\"></xref> as a <xref href=\"System.Windows.Media.Geometry\"></xref> value."},{"pos":[13440,13529],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose clip region value is returned.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> whose clip region value is returned."},{"pos":[13603,13751],"content":"The clip region value of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> returned as a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Geometry\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> type.","needQuote":true,"needEscape":true,"source":"The clip region value of the <xref href=\"System.Windows.Media.Visual\"></xref> returned as a <xref href=\"System.Windows.Media.Geometry\"></xref> type."},{"pos":[14349,14468],"content":"Returns the cached bounding box rectangle for the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Visual3D\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the cached bounding box rectangle for the specified <xref href=\"System.Windows.Media.Media3D.Visual3D\"></xref>."},{"pos":[14480,14735],"content":"Use the <xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A> method to return the union of all the content bounding boxes for all the descendants of a 3D visual object, which includes the <xref:System.Windows.Media.Media3D.Visual3D> itself.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the &lt;xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A&gt; method to return the union of all the content bounding boxes for all the descendants of a 3D visual object, which includes the &lt;xref:System.Windows.Media.Media3D.Visual3D&gt; itself.","pos":[0,255],"source":"Use the <xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A> method to return the union of all the content bounding boxes for all the descendants of a 3D visual object, which includes the <xref:System.Windows.Media.Media3D.Visual3D> itself."}]},{"pos":[14982,15033],"content":"The 3D visual whose bounding box value is computed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The 3D visual whose bounding box value is computed.","pos":[0,51]}]},{"pos":[15113,15210],"content":"The bounding box 3D rectangle for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Visual3D\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The bounding box 3D rectangle for the <xref href=\"System.Windows.Media.Media3D.Visual3D\"></xref>."},{"pos":[15791,15900],"content":"Returns the cached bounding box rectangle for the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the cached bounding box rectangle for the specified <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[15912,16155],"content":"Call the <xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A> method to return the union of all the content bounding boxes for all the descendants of a visual object, which includes the <xref:System.Windows.Media.Visual> itself.","needQuote":true,"needEscape":true,"nodes":[{"content":"Call the &lt;xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A&gt; method to return the union of all the content bounding boxes for all the descendants of a visual object, which includes the &lt;xref:System.Windows.Media.Visual&gt; itself.","pos":[0,243],"source":"Call the <xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A> method to return the union of all the content bounding boxes for all the descendants of a visual object, which includes the <xref:System.Windows.Media.Visual> itself."}]},{"pos":[16701,16791],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose bounding box value is computed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> whose bounding box value is computed."},{"pos":[16855,16939],"content":"The bounding box rectangle for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The bounding box rectangle for the <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[17561,17820],"content":"Returns the union of all the content bounding boxes for all the descendants of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Visual3D\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which includes the content bounding box of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Media3D.Visual3D\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the union of all the content bounding boxes for all the descendants of the specified <xref href=\"System.Windows.Media.Media3D.Visual3D\"></xref>, which includes the content bounding box of the <xref href=\"System.Windows.Media.Media3D.Visual3D\"></xref>."},{"pos":[17832,17980],"content":"Call the <xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A> method to return the cached bounding box rectangle for a 3D visual object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Call the &lt;xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A&gt; method to return the cached bounding box rectangle for a 3D visual object.","pos":[0,148],"source":"Call the <xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A> method to return the cached bounding box rectangle for a 3D visual object."}]},{"pos":[18230,18301],"content":"The 3D visual whose bounding box value for all descendants is computed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The 3D visual whose bounding box value for all descendants is computed.","pos":[0,71]}]},{"pos":[18381,18437],"content":"Returns the bounding box 3D rectangle for the 3D visual.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the bounding box 3D rectangle for the 3D visual.","pos":[0,56]}]},{"pos":[19036,19265],"content":"Returns the union of all the content bounding boxes for all the descendants of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which includes the content bounding box of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the union of all the content bounding boxes for all the descendants of the <xref href=\"System.Windows.Media.Visual\"></xref>, which includes the content bounding box of the <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[19277,19443],"content":"Call the <xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A> method to return the cached bounding box rectangle for a <xref:System.Windows.Media.Visual>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Call the &lt;xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A&gt; method to return the cached bounding box rectangle for a &lt;xref:System.Windows.Media.Visual&gt;.","pos":[0,166],"source":"Call the <xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A> method to return the cached bounding box rectangle for a <xref:System.Windows.Media.Visual>."}]},{"pos":[20015,20125],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose bounding box value for all descendants is computed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> whose bounding box value for all descendants is computed."},{"pos":[20189,20283],"content":"The bounding box rectangle for the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The bounding box rectangle for the specified <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[20817,20888],"content":"Gets the DPI information at which this Visual is measured and rendered.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the DPI information at which this Visual is measured and rendered.","pos":[0,71]}]},{"pos":[21087,21112],"content":"The Visual target object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Visual target object.","pos":[0,25]}]},{"pos":[21180,21197],"content":"A DPIScale value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A DPIScale value.","pos":[0,17]}]},{"pos":[21738,21832],"content":"Returns the drawing content of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the drawing content of the specified <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[22653,22740],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose drawing content is returned.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> whose drawing content is returned."},{"pos":[22818,22968],"content":"The drawing content of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> returned as a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.DrawingGroup\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> type.","needQuote":true,"needEscape":true,"source":"The drawing content of the <xref href=\"System.Windows.Media.Visual\"></xref> returned as a <xref href=\"System.Windows.Media.DrawingGroup\"></xref> type."},{"pos":[23518,23669],"content":"Returns the edge mode of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> as an <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.EdgeMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"Returns the edge mode of the specified <xref href=\"System.Windows.Media.Visual\"></xref> as an <xref href=\"System.Windows.Media.EdgeMode\"></xref> value."},{"pos":[23682,24086],"content":"The edge mode value determines how the edges of non-text primitives are rendered.      |Edge mode value|Description|   |---------------------|-----------------|   |<xref:System.Windows.Media.EdgeMode>|Render edges of non-text primitives as aliased edges.|   |<xref:System.Windows.Media.EdgeMode>|No edge mode is specified. Do not change the current edge mode that is applied to non-text primitives.|","needQuote":false,"needEscape":true,"nodes":[{"content":"The edge mode value determines how the edges of non-text primitives are rendered.      |Edge mode value|Description|   |---------------------|-----------------|   |<xref:System.Windows.Media.EdgeMode>|Render edges of non-text primitives as aliased edges.|   |<xref:System.Windows.Media.EdgeMode>|No edge mode is specified. Do not change the current edge mode that is applied to non-text primitives.|","pos":[0,399],"nodes":[{"content":"The edge mode value determines how the edges of non-text primitives are rendered.","pos":[0,81]},{"content":"|Edge mode value|Description|   |---------------------|-----------------|   |&lt;xref:System.Windows.Media.EdgeMode&gt;|Render edges of non-text primitives as aliased edges.|   |&lt;xref:System.Windows.Media.EdgeMode&gt;|No edge mode is specified.","pos":[87,322],"source":"      |Edge mode value|Description|   |---------------------|-----------------|   |<xref:System.Windows.Media.EdgeMode>|Render edges of non-text primitives as aliased edges.|   |<xref:System.Windows.Media.EdgeMode>|No edge mode is specified."},{"content":"Do not change the current edge mode that is applied to non-text primitives.|","pos":[323,399]}]}]},{"pos":[24303,24390],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose edge mode value is returned.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> whose edge mode value is returned."},{"pos":[24464,24581],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.EdgeMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.EdgeMode\"></xref> value of the <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[25122,25212],"content":"Gets the bitmap effect for the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the bitmap effect for the specified <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[25432,25514],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to get the bitmap effect for.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> to get the bitmap effect for."},{"pos":[25594,25689],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> applied to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">reference</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Effects.Effect\"></xref> applied to <code>reference</code>."},{"pos":[26228,26303],"content":"Returns the offset of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the offset of the <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[26315,26597],"content":"The returned offset value is relative to the parent of the <xref:System.Windows.Media.Visual>. If you want to return an offset value that is not relative to the parent of a <xref:System.Windows.Media.Visual>, use the <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The returned offset value is relative to the parent of the <xref:System.Windows.Media.Visual>. If you want to return an offset value that is not relative to the parent of a <xref:System.Windows.Media.Visual>, use the <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method.","pos":[0,282],"nodes":[{"content":"The returned offset value is relative to the parent of the &lt;xref:System.Windows.Media.Visual&gt;.","pos":[0,94],"source":"The returned offset value is relative to the parent of the <xref:System.Windows.Media.Visual>."},{"content":"If you want to return an offset value that is not relative to the parent of a &lt;xref:System.Windows.Media.Visual&gt;, use the &lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt; method.","pos":[95,282],"source":" If you want to return an offset value that is not relative to the parent of a <xref:System.Windows.Media.Visual>, use the <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method."}]}]},{"pos":[27770,27848],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose offset is returned.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> whose offset is returned."},{"pos":[27914,28048],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Vector\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the offset value of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Vector\"></xref> that represents the offset value of the <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[28592,28668],"content":"Returns the opacity of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the opacity of the <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[28680,29025],"content":"The value of the opacity is expressed as a value between 0 and 1. A value of 0 indicates that the element is completely transparent, while a value of 1 indicates that the element is completely opaque. A value of 0.5 indicates that the element is 50 percent opaque. Values less than 0 are treated as 0, and values greater than 1 are treated as 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the opacity is expressed as a value between 0 and 1. A value of 0 indicates that the element is completely transparent, while a value of 1 indicates that the element is completely opaque. A value of 0.5 indicates that the element is 50 percent opaque. Values less than 0 are treated as 0, and values greater than 1 are treated as 1.","pos":[0,345],"nodes":[{"content":"The value of the opacity is expressed as a value between 0 and 1.","pos":[0,65]},{"content":"A value of 0 indicates that the element is completely transparent, while a value of 1 indicates that the element is completely opaque.","pos":[66,200]},{"content":"A value of 0.5 indicates that the element is 50 percent opaque.","pos":[201,264]},{"content":"Values less than 0 are treated as 0, and values greater than 1 are treated as 1.","pos":[265,345]}]}]},{"pos":[29217,29302],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose opacity value is returned.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> whose opacity value is returned."},{"pos":[29360,29487],"content":"A value of type &lt;xref:System.Double&gt; that represents the opacity value of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A value of type <xref:System.Double> that represents the opacity value of the <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[30052,30205],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Brush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the opacity mask of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Windows.Media.Brush\"></xref> value that represents the opacity mask of the <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[30217,30386],"content":"The opacity mask is a <xref:System.Windows.Media.Brush> that is applied to any alpha-channel masking for the rendered content of this <xref:System.Windows.Media.Visual>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The opacity mask is a &lt;xref:System.Windows.Media.Brush&gt; that is applied to any alpha-channel masking for the rendered content of this &lt;xref:System.Windows.Media.Visual&gt;.","pos":[0,169],"source":"The opacity mask is a <xref:System.Windows.Media.Brush> that is applied to any alpha-channel masking for the rendered content of this <xref:System.Windows.Media.Visual>."}]},{"pos":[30602,30692],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose opacity mask value is returned.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> whose opacity mask value is returned."},{"pos":[30763,30922],"content":"A value of type <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Brush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the opacity mask value of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A value of type <xref href=\"System.Windows.Media.Brush\"></xref> that represents the opacity mask value of the <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[31504,31621],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the parent of the visual object.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Windows.DependencyObject\"></xref> value that represents the parent of the visual object."},{"pos":[31633,31771],"content":"The value of <ph id=\"ph1\">`reference`</ph> can represent either a &lt;xref:System.Windows.Media.Visual&gt; or &lt;xref:System.Windows.Media.Media3D.Visual3D&gt; object.","needQuote":true,"needEscape":true,"source":"The value of `reference` can represent either a <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D> object."},{"pos":[31995,32031],"content":"The visual whose parent is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The visual whose parent is returned.","pos":[0,36]}]},{"pos":[32107,32132],"content":"The parent of the visual.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parent of the visual.","pos":[0,25]}]},{"pos":[32686,32811],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Transform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value for the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Windows.Media.Transform\"></xref> value for the <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[32824,33404],"content":"Alternatively, you can use the <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method to return a transform value for the ancestor of a <xref:System.Windows.Media.Visual>. This method always returns a valid transform. The following code example shows how to use <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method.       [!code-vb[VisualSnippets#VisualSnippet3](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet3)]  [!code-cs[VisualSnippets#VisualSnippet3](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet3)]","needQuote":false,"needEscape":true,"nodes":[{"content":"Alternatively, you can use the &lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt; method to return a transform value for the ancestor of a &lt;xref:System.Windows.Media.Visual&gt;.","pos":[0,181],"source":"Alternatively, you can use the <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method to return a transform value for the ancestor of a <xref:System.Windows.Media.Visual>."},{"content":"This method always returns a valid transform.","pos":[182,227]},{"content":"The following code example shows how to use &lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt; method.","pos":[228,337],"source":" The following code example shows how to use <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method."},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VisualSnippets#VisualSnippet3<ept id=\"p2\">](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet3)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-cs</bpt><bpt id=\"p4\">[</bpt>VisualSnippets#VisualSnippet3<ept id=\"p4\">](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet3)</ept><ept id=\"p3\">]</ept>","pos":[344,577],"source":"[!code-vb[VisualSnippets#VisualSnippet3](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet3)]  [!code-cs[VisualSnippets#VisualSnippet3](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet3)]"}]},{"pos":[34292,34379],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose transform value is returned.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> whose transform value is returned."},{"pos":[34454,34655],"content":"The transform value of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">reference</ph><ept id=\"p3\">&lt;/code&gt;</ept> does not have a transform defined.","needQuote":true,"needEscape":true,"source":"The transform value of the <xref href=\"System.Windows.Media.Visual\"></xref>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>reference</code> does not have a transform defined."},{"pos":[35262,35318],"content":"Returns an X-coordinate (vertical) guideline collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an X-coordinate (vertical) guideline collection.","pos":[0,56]}]},{"pos":[35331,36668],"content":"Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels. The [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] graphics system uses device-independent units to enable resolution and device independence. Each device independent pixel automatically scales with the system's [!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)] setting. This provides [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] applications proper scaling for different [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)] settings and makes the application automatically [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]-aware.       However, this [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)] independence can create irregular edge rendering due to anti-aliasing. These artifacts, commonly seen as blurry, or \"soft\" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels. To address this issue, [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] provides a way for object edges in a visual tree to \"snap\" to device pixels through pixel snapping, eliminating the soft edges produced by anti-aliasing.","needQuote":false,"needEscape":true,"nodes":[{"content":"Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.","pos":[0,123]},{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> graphics system uses device-independent units to enable resolution and device independence.","pos":[124,295],"source":" The [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] graphics system uses device-independent units to enable resolution and device independence."},{"content":"Each device independent pixel automatically scales with the system's <ph id=\"ph1\">[!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)]</ph> setting.","pos":[296,436],"source":" Each device independent pixel automatically scales with the system's [!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)] setting."},{"content":"This provides <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> applications proper scaling for different <ph id=\"ph2\">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph> settings and makes the application automatically <ph id=\"ph3\">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph>-aware.","pos":[437,752],"source":" This provides [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] applications proper scaling for different [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)] settings and makes the application automatically [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]-aware."},{"content":"However, this <ph id=\"ph1\">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph> independence can create irregular edge rendering due to anti-aliasing.","pos":[759,907],"source":"       However, this [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)] independence can create irregular edge rendering due to anti-aliasing."},{"content":"These artifacts, commonly seen as blurry, or \"soft\" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.","pos":[908,1078]},{"content":"To address this issue, <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> provides a way for object edges in a visual tree to \"snap\" to device pixels through pixel snapping, eliminating the soft edges produced by anti-aliasing.","pos":[1079,1331],"source":" To address this issue, [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] provides a way for object edges in a visual tree to \"snap\" to device pixels through pixel snapping, eliminating the soft edges produced by anti-aliasing."}]},{"pos":[36904,37009],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose X-coordinate guideline collection is returned.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> whose X-coordinate guideline collection is returned."},{"pos":[37091,37185],"content":"The X-coordinate guideline collection of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The X-coordinate guideline collection of the <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[37802,37859],"content":"Returns a Y-coordinate (horizontal) guideline collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a Y-coordinate (horizontal) guideline collection.","pos":[0,57]}]},{"pos":[37872,39209],"content":"Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels. The [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] graphics system uses device-independent units to enable resolution and device independence. Each device independent pixel automatically scales with the system's [!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)] setting. This provides [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] applications proper scaling for different [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)] settings and makes the application automatically [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]-aware.       However, this [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)] independence can create irregular edge rendering due to anti-aliasing. These artifacts, commonly seen as blurry, or \"soft\" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels. To address this issue, [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] provides a way for object edges in a visual tree to \"snap\" to device pixels through pixel snapping, eliminating the soft edges produced by anti-aliasing.","needQuote":false,"needEscape":true,"nodes":[{"content":"Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.","pos":[0,123]},{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> graphics system uses device-independent units to enable resolution and device independence.","pos":[124,295],"source":" The [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] graphics system uses device-independent units to enable resolution and device independence."},{"content":"Each device independent pixel automatically scales with the system's <ph id=\"ph1\">[!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)]</ph> setting.","pos":[296,436],"source":" Each device independent pixel automatically scales with the system's [!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)] setting."},{"content":"This provides <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> applications proper scaling for different <ph id=\"ph2\">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph> settings and makes the application automatically <ph id=\"ph3\">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph>-aware.","pos":[437,752],"source":" This provides [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] applications proper scaling for different [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)] settings and makes the application automatically [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]-aware."},{"content":"However, this <ph id=\"ph1\">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph> independence can create irregular edge rendering due to anti-aliasing.","pos":[759,907],"source":"       However, this [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)] independence can create irregular edge rendering due to anti-aliasing."},{"content":"These artifacts, commonly seen as blurry, or \"soft\" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.","pos":[908,1078]},{"content":"To address this issue, <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> provides a way for object edges in a visual tree to \"snap\" to device pixels through pixel snapping, eliminating the soft edges produced by anti-aliasing.","pos":[1079,1331],"source":" To address this issue, [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] provides a way for object edges in a visual tree to \"snap\" to device pixels through pixel snapping, eliminating the soft edges produced by anti-aliasing."}]},{"pos":[39445,39550],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose Y-coordinate guideline collection is returned.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> whose Y-coordinate guideline collection is returned."},{"pos":[39632,39726],"content":"The Y-coordinate guideline collection of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The Y-coordinate guideline collection of the <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[40328,40476],"content":"Returns the topmost <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object of a hit test by specifying a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the topmost <xref href=\"System.Windows.Media.Visual\"></xref> object of a hit test by specifying a <xref href=\"System.Windows.Point\"></xref>."},{"pos":[40489,40928],"content":"The <xref:System.Windows.Media.HitTestResult.VisualHit%2A> property of the return value represents the <xref:System.Windows.Media.Visual> object that was hit.      > [!NOTE] >  It is possible for a hit test that starts in a 2D visual tree to return <xref:System.Windows.Media.Media3D.RayHitTestResult>, which is a 3D hit test result object. Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Media.HitTestResult.VisualHit%2A&gt; property of the return value represents the &lt;xref:System.Windows.Media.Visual&gt; object that was hit.","pos":[0,158],"source":"The <xref:System.Windows.Media.HitTestResult.VisualHit%2A> property of the return value represents the <xref:System.Windows.Media.Visual> object that was hit."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  It is possible for a hit test that starts in a 2D visual tree to return &lt;xref:System.Windows.Media.Media3D.RayHitTestResult&gt;, which is a 3D hit test result object.","pos":[164,340],"source":"      > [!NOTE] >  It is possible for a hit test that starts in a 2D visual tree to return <xref:System.Windows.Media.Media3D.RayHitTestResult>, which is a 3D hit test result object."},{"content":"Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.","pos":[341,436]}]},{"pos":[41536,41601],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to hit test.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> to hit test."},{"pos":[41670,41706],"content":"The point value to hit test against.","needQuote":true,"needEscape":true,"nodes":[{"content":"The point value to hit test against.","pos":[0,36]}]},{"pos":[41785,41937],"content":"The hit test result of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, returned as a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.HitTestResult\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> type.","needQuote":true,"needEscape":true,"source":"The hit test result of the <xref href=\"System.Windows.Media.Visual\"></xref>, returned as a <xref href=\"System.Windows.Media.HitTestResult\"></xref> type."},{"pos":[42952,43210],"content":"Initiates a hit test on the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Visual3D\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, with caller-defined <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.HitTestFilterCallback\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and <bpt id=\"p3\">&lt;xref href=\"System.Windows.Media.HitTestResultCallback\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> methods.","needQuote":true,"needEscape":true,"source":"Initiates a hit test on the specified <xref href=\"System.Windows.Media.Media3D.Visual3D\"></xref>, with caller-defined <xref href=\"System.Windows.Media.HitTestFilterCallback\"></xref> and <xref href=\"System.Windows.Media.HitTestResultCallback\"></xref> methods."},{"pos":[43223,43689],"content":"The `filterCallback` parameter can be `null`, in which case, it is ignored. If `filterCallback` is not `null`, it is invoked before `resultCallback`.  `resultCallback` cannot be `null`.      > [!NOTE] >  It is possible for a hit test that starts in a 2D visual tree to return <xref:System.Windows.Media.Media3D.RayHitTestResult>, which is a 3D hit test result object. Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`filterCallback`</ph> parameter can be <ph id=\"ph2\">`null`</ph>, in which case, it is ignored.","pos":[0,75],"source":"The `filterCallback` parameter can be `null`, in which case, it is ignored."},{"content":"If <ph id=\"ph1\">`filterCallback`</ph> is not <ph id=\"ph2\">`null`</ph>, it is invoked before <ph id=\"ph3\">`resultCallback`</ph>.","pos":[76,149],"source":" If `filterCallback` is not `null`, it is invoked before `resultCallback`."},{"content":"<ph id=\"ph1\">`resultCallback`</ph> cannot be <ph id=\"ph2\">`null`</ph>.","pos":[151,185],"source":"`resultCallback` cannot be `null`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  It is possible for a hit test that starts in a 2D visual tree to return &lt;xref:System.Windows.Media.Media3D.RayHitTestResult&gt;, which is a 3D hit test result object.","pos":[191,367],"source":"      > [!NOTE] >  It is possible for a hit test that starts in a 2D visual tree to return <xref:System.Windows.Media.Media3D.RayHitTestResult>, which is a 3D hit test result object."},{"content":"Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.","pos":[368,463]}]},{"pos":[44083,44158],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Visual3D\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to hit test.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Media3D.Visual3D\"></xref> to hit test."},{"pos":[44258,44320],"content":"The method that represents the hit test filter callback value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method that represents the hit test filter callback value.","pos":[0,62]}]},{"pos":[44420,44482],"content":"The method that represents the hit test result callback value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method that represents the hit test result callback value.","pos":[0,62]}]},{"pos":[44591,44634],"content":"The 3D parameter value to hit test against.","needQuote":true,"needEscape":true,"nodes":[{"content":"The 3D parameter value to hit test against.","pos":[0,43]}]},{"pos":[45597,45845],"content":"Initiates a hit test on the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, with caller-defined <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.HitTestFilterCallback\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and <bpt id=\"p3\">&lt;xref href=\"System.Windows.Media.HitTestResultCallback\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> methods.","needQuote":true,"needEscape":true,"source":"Initiates a hit test on the specified <xref href=\"System.Windows.Media.Visual\"></xref>, with caller-defined <xref href=\"System.Windows.Media.HitTestFilterCallback\"></xref> and <xref href=\"System.Windows.Media.HitTestResultCallback\"></xref> methods."},{"pos":[45858,46322],"content":"The `filterCallback` parameter can be `null`, in which case it is ignored. If `filterCallback` is not `null`, it is invoked before `resultCallback`. `resultCallback` cannot be `null`.      > [!NOTE] >  It is possible for a hit test that starts in a 2D visual tree to return <xref:System.Windows.Media.Media3D.RayHitTestResult>, which is a 3D hit test result object. Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`filterCallback`</ph> parameter can be <ph id=\"ph2\">`null`</ph>, in which case it is ignored.","pos":[0,74],"source":"The `filterCallback` parameter can be `null`, in which case it is ignored."},{"content":"If <ph id=\"ph1\">`filterCallback`</ph> is not <ph id=\"ph2\">`null`</ph>, it is invoked before <ph id=\"ph3\">`resultCallback`</ph>.","pos":[75,148],"source":" If `filterCallback` is not `null`, it is invoked before `resultCallback`."},{"content":"<ph id=\"ph1\">`resultCallback`</ph> cannot be <ph id=\"ph2\">`null`</ph>.","pos":[149,183],"source":"`resultCallback` cannot be `null`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  It is possible for a hit test that starts in a 2D visual tree to return &lt;xref:System.Windows.Media.Media3D.RayHitTestResult&gt;, which is a 3D hit test result object.","pos":[189,365],"source":"      > [!NOTE] >  It is possible for a hit test that starts in a 2D visual tree to return <xref:System.Windows.Media.Media3D.RayHitTestResult>, which is a 3D hit test result object."},{"content":"Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.","pos":[366,461]}]},{"pos":[47257,47322],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to hit test.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> to hit test."},{"pos":[47422,47484],"content":"The method that represents the hit test filter callback value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method that represents the hit test filter callback value.","pos":[0,62]}]},{"pos":[47584,47646],"content":"The method that represents the hit test result callback value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method that represents the hit test result callback value.","pos":[0,62]}]},{"pos":[47745,47785],"content":"The parameter value to hit test against.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameter value to hit test against.","pos":[0,40]}]},{"pos":[48402,48494],"content":"Updates the DPI information of a Visual. It can only be called on a Visual without a parent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates the DPI information of a Visual. It can only be called on a Visual without a parent.","pos":[0,92],"nodes":[{"content":"Updates the DPI information of a Visual.","pos":[0,40]},{"content":"It can only be called on a Visual without a parent.","pos":[41,92]}]}]},{"pos":[48711,48734],"content":"A Visual object target.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Visual object target.","pos":[0,23]}]},{"pos":[48808,48846],"content":"DPI information for the target Visual.","needQuote":true,"needEscape":true,"nodes":[{"content":"DPI information for the target Visual.","pos":[0,38]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.VisualTreeHelper\n  id: VisualTreeHelper\n  children:\n  - System.Windows.Media.VisualTreeHelper.GetBitmapEffect(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualTreeHelper.GetCacheMode(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)\n  - System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)\n  - System.Windows.Media.VisualTreeHelper.GetClip(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualTreeHelper.GetDpi(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualTreeHelper.GetDrawing(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualTreeHelper.GetEffect(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualTreeHelper.GetOpacityMask(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)\n  - System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)\n  - System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)\n  - System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)\n  - System.Windows.Media.VisualTreeHelper.SetRootDpi(System.Windows.Media.Visual,System.Windows.DpiScale)\n  langs:\n  - csharp\n  name: VisualTreeHelper\n  nameWithType: VisualTreeHelper\n  fullName: System.Windows.Media.VisualTreeHelper\n  type: Class\n  summary: Provides utility methods that perform common tasks involving nodes in a visual tree.\n  remarks: \"Nodes in the visual tree can be either <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D> objects. Methods that are specific to a type of visual object are typed as either <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D>. However, some methods in the VisualTreeHelper class can accept a <xref:System.Windows.DependencyObject> value that represents either type of visual object.  \\n  \\n [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] supports programmatic access to several different tree structures of objects. Primarily, this is exposed as a visual tree and a logical tree. In some cases, the logical tree is a more useful representation of the elements in a [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] application, but conceptually the logical tree is implemented at a level beyond the <xref:System.Windows.Media.Visual> class. Unlike the visual tree, the logical tree can represent nonvisual data objects, such as <xref:System.Windows.Documents.ListItem>. For more information on the logical tree, see [Trees in WPF](~/add/includes/ajax-current-ext-md.md). The logical tree also is supported by a similar utility method class, <xref:System.Windows.LogicalTreeHelper>.\"\n  example:\n  - \"The following example shows how to enumerate all the descendants of a visual object, which is a technique you might want to use if you were interested in serializing all the rendering information of a visual object hierarchy.  \\n  \\n [!code-vb[VisualsOverview#101](~/add/codesnippet/visualbasic/visualsoverview/window1.xaml.vb#101)]\\n [!code-cs[VisualsOverview#101](~/add/codesnippet/csharp/VisualsOverview/Window1.xaml.cs#101)]\"\n  syntax:\n    content: public static class VisualTreeHelper\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetBitmapEffect(System.Windows.Media.Visual)\n  id: GetBitmapEffect(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetBitmapEffect(Visual)\n  nameWithType: VisualTreeHelper.GetBitmapEffect(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetBitmapEffect(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns the <xref href=\"System.Windows.Media.Effects.BitmapEffect\"></xref> value for the specified <xref href=\"System.Windows.Media.Visual\"></xref>.\n  syntax:\n    content: public static System.Windows.Media.Effects.BitmapEffect GetBitmapEffect (System.Windows.Media.Visual reference);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> that contains the bitmap effect.\n    return:\n      type: System.Windows.Media.Effects.BitmapEffect\n      description: The <xref href=\"System.Windows.Media.Effects.BitmapEffect\"></xref> for this <xref href=\"System.Windows.Media.Visual\"></xref>.\n  overload: System.Windows.Media.VisualTreeHelper.GetBitmapEffect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput(System.Windows.Media.Visual)\n  id: GetBitmapEffectInput(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetBitmapEffectInput(Visual)\n  nameWithType: VisualTreeHelper.GetBitmapEffectInput(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns the <xref href=\"System.Windows.Media.Effects.BitmapEffectInput\"></xref> value for the specified <xref href=\"System.Windows.Media.Visual\"></xref>.\n  syntax:\n    content: public static System.Windows.Media.Effects.BitmapEffectInput GetBitmapEffectInput (System.Windows.Media.Visual reference);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> that contains the bitmap effect input value.\n    return:\n      type: System.Windows.Media.Effects.BitmapEffectInput\n      description: The <xref href=\"System.Windows.Media.Effects.BitmapEffectInput\"></xref> for this <xref href=\"System.Windows.Media.Visual\"></xref>.\n  overload: System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetCacheMode(System.Windows.Media.Visual)\n  id: GetCacheMode(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetCacheMode(Visual)\n  nameWithType: VisualTreeHelper.GetCacheMode(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetCacheMode(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Retrieves the cached representation of the specified <xref href=\"System.Windows.Media.Visual\"></xref>.\n  syntax:\n    content: public static System.Windows.Media.CacheMode GetCacheMode (System.Windows.Media.Visual reference);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> to get the <xref href=\"System.Windows.Media.CacheMode\"></xref> for.\n    return:\n      type: System.Windows.Media.CacheMode\n      description: The <xref href=\"System.Windows.Media.CacheMode\"></xref> for <code>reference</code>.\n  overload: System.Windows.Media.VisualTreeHelper.GetCacheMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)\n  id: GetChild(System.Windows.DependencyObject,System.Int32)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetChild(DependencyObject,Int32)\n  nameWithType: VisualTreeHelper.GetChild(DependencyObject,Int32)\n  fullName: System.Windows.Media.VisualTreeHelper.GetChild(DependencyObject,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns the child visual object from the specified collection index within a specified parent.\n  remarks: \"Call the <xref:System.Windows.Media.VisualTreeHelper.GetChildrenCount%2A> method to determine the total number of child elements of a parent visual.  \\n  \\n The value of `reference` can represent either a <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D> object, which is why the common base type <xref:System.Windows.DependencyObject> is used here as a parameter type.\"\n  example:\n  - \"The following example shows how to enumerate all the descendants of a visual object. This is a technique you might use if you are interested in serializing all the rendering information of a visual object hierarchy or are performing analysis or alternative rendering.  \\n  \\n [!code-vb[VisualsOverview#101](~/add/codesnippet/visualbasic/visualsoverview/window1.xaml.vb#101)]\\n [!code-cs[VisualsOverview#101](~/add/codesnippet/csharp/VisualsOverview/Window1.xaml.cs#101)]\"\n  syntax:\n    content: public static System.Windows.DependencyObject GetChild (System.Windows.DependencyObject reference, int childIndex);\n    parameters:\n    - id: reference\n      type: System.Windows.DependencyObject\n      description: The parent visual, referenced as a <xref href=\"System.Windows.DependencyObject\"></xref>.\n    - id: childIndex\n      type: System.Int32\n      description: The index that represents the child visual that is contained by `reference`.\n    return:\n      type: System.Windows.DependencyObject\n      description: The index value of the child visual object.\n  overload: System.Windows.Media.VisualTreeHelper.GetChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)\n  id: GetChildrenCount(System.Windows.DependencyObject)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetChildrenCount(DependencyObject)\n  nameWithType: VisualTreeHelper.GetChildrenCount(DependencyObject)\n  fullName: System.Windows.Media.VisualTreeHelper.GetChildrenCount(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns the number of children that the specified visual object contains.\n  remarks: \"Use the <xref:System.Windows.Media.VisualTreeHelper.GetChild%2A> method to retrieve a specified child of a parent visual.  \\n  \\n The value of `reference` can represent either a <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D> object, which is why the common base type <xref:System.Windows.DependencyObject> is used here as a parameter type.\"\n  example:\n  - \"The following example shows how to enumerate all the descendants of a visual object. This is a technique you might use if you are interested in serializing all the rendering information of a visual object hierarchy or are performing analysis or alternative rendering.  \\n  \\n [!code-vb[VisualsOverview#101](~/add/codesnippet/visualbasic/visualsoverview/window1.xaml.vb#101)]\\n [!code-cs[VisualsOverview#101](~/add/codesnippet/csharp/VisualsOverview/Window1.xaml.cs#101)]\"\n  syntax:\n    content: public static int GetChildrenCount (System.Windows.DependencyObject reference);\n    parameters:\n    - id: reference\n      type: System.Windows.DependencyObject\n      description: The parent visual that is referenced as a <xref href=\"System.Windows.DependencyObject\"></xref>.\n    return:\n      type: System.Int32\n      description: The number of child visuals that the parent visual contains.\n  overload: System.Windows.Media.VisualTreeHelper.GetChildrenCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetClip(System.Windows.Media.Visual)\n  id: GetClip(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetClip(Visual)\n  nameWithType: VisualTreeHelper.GetClip(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetClip(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Return the clip region of the specified <xref href=\"System.Windows.Media.Visual\"></xref> as a <xref href=\"System.Windows.Media.Geometry\"></xref> value.\n  syntax:\n    content: public static System.Windows.Media.Geometry GetClip (System.Windows.Media.Visual reference);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> whose clip region value is returned.\n    return:\n      type: System.Windows.Media.Geometry\n      description: The clip region value of the <xref href=\"System.Windows.Media.Visual\"></xref> returned as a <xref href=\"System.Windows.Media.Geometry\"></xref> type.\n  overload: System.Windows.Media.VisualTreeHelper.GetClip*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Media3D.Visual3D)\n  id: GetContentBounds(System.Windows.Media.Media3D.Visual3D)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetContentBounds(Visual3D)\n  nameWithType: VisualTreeHelper.GetContentBounds(Visual3D)\n  fullName: System.Windows.Media.VisualTreeHelper.GetContentBounds(Visual3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns the cached bounding box rectangle for the specified <xref href=\"System.Windows.Media.Media3D.Visual3D\"></xref>.\n  remarks: Use the <xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A> method to return the union of all the content bounding boxes for all the descendants of a 3D visual object, which includes the <xref:System.Windows.Media.Media3D.Visual3D> itself.\n  syntax:\n    content: public static System.Windows.Media.Media3D.Rect3D GetContentBounds (System.Windows.Media.Media3D.Visual3D reference);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Media3D.Visual3D\n      description: The 3D visual whose bounding box value is computed.\n    return:\n      type: System.Windows.Media.Media3D.Rect3D\n      description: The bounding box 3D rectangle for the <xref href=\"System.Windows.Media.Media3D.Visual3D\"></xref>.\n  overload: System.Windows.Media.VisualTreeHelper.GetContentBounds*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)\n  id: GetContentBounds(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetContentBounds(Visual)\n  nameWithType: VisualTreeHelper.GetContentBounds(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetContentBounds(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns the cached bounding box rectangle for the specified <xref href=\"System.Windows.Media.Visual\"></xref>.\n  remarks: Call the <xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A> method to return the union of all the content bounding boxes for all the descendants of a visual object, which includes the <xref:System.Windows.Media.Visual> itself.\n  example:\n  - \"The following example shows how to retrieve the bounding rectangle of a <xref:System.Windows.Media.Visual> object.  \\n  \\n [!code-vb[VisualsOverview#102](~/add/codesnippet/visualbasic/visualsoverview/window1.xaml.vb#102)]\\n [!code-cs[VisualsOverview#102](~/add/codesnippet/csharp/VisualsOverview/Window1.xaml.cs#102)]\"\n  syntax:\n    content: public static System.Windows.Rect GetContentBounds (System.Windows.Media.Visual reference);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> whose bounding box value is computed.\n    return:\n      type: System.Windows.Rect\n      description: The bounding box rectangle for the <xref href=\"System.Windows.Media.Visual\"></xref>.\n  overload: System.Windows.Media.VisualTreeHelper.GetContentBounds*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Media3D.Visual3D)\n  id: GetDescendantBounds(System.Windows.Media.Media3D.Visual3D)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetDescendantBounds(Visual3D)\n  nameWithType: VisualTreeHelper.GetDescendantBounds(Visual3D)\n  fullName: System.Windows.Media.VisualTreeHelper.GetDescendantBounds(Visual3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns the union of all the content bounding boxes for all the descendants of the specified <xref href=\"System.Windows.Media.Media3D.Visual3D\"></xref>, which includes the content bounding box of the <xref href=\"System.Windows.Media.Media3D.Visual3D\"></xref>.\n  remarks: Call the <xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A> method to return the cached bounding box rectangle for a 3D visual object.\n  syntax:\n    content: public static System.Windows.Media.Media3D.Rect3D GetDescendantBounds (System.Windows.Media.Media3D.Visual3D reference);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Media3D.Visual3D\n      description: The 3D visual whose bounding box value for all descendants is computed.\n    return:\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Returns the bounding box 3D rectangle for the 3D visual.\n  overload: System.Windows.Media.VisualTreeHelper.GetDescendantBounds*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Visual)\n  id: GetDescendantBounds(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetDescendantBounds(Visual)\n  nameWithType: VisualTreeHelper.GetDescendantBounds(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetDescendantBounds(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns the union of all the content bounding boxes for all the descendants of the <xref href=\"System.Windows.Media.Visual\"></xref>, which includes the content bounding box of the <xref href=\"System.Windows.Media.Visual\"></xref>.\n  remarks: Call the <xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A> method to return the cached bounding box rectangle for a <xref:System.Windows.Media.Visual>.\n  example:\n  - \"The following example shows how to retrieve the union of bounding rectangles for the descendants of a <xref:System.Windows.Media.Visual>.  \\n  \\n [!code-vb[VisualsOverview#102](~/add/codesnippet/visualbasic/visualsoverview/window1.xaml.vb#102)]\\n [!code-cs[VisualsOverview#102](~/add/codesnippet/csharp/VisualsOverview/Window1.xaml.cs#102)]\"\n  syntax:\n    content: public static System.Windows.Rect GetDescendantBounds (System.Windows.Media.Visual reference);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> whose bounding box value for all descendants is computed.\n    return:\n      type: System.Windows.Rect\n      description: The bounding box rectangle for the specified <xref href=\"System.Windows.Media.Visual\"></xref>.\n  overload: System.Windows.Media.VisualTreeHelper.GetDescendantBounds*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetDpi(System.Windows.Media.Visual)\n  id: GetDpi(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetDpi(Visual)\n  nameWithType: VisualTreeHelper.GetDpi(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetDpi(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets the DPI information at which this Visual is measured and rendered.\n  syntax:\n    content: public static System.Windows.DpiScale GetDpi (System.Windows.Media.Visual visual);\n    parameters:\n    - id: visual\n      type: System.Windows.Media.Visual\n      description: The Visual target object.\n    return:\n      type: System.Windows.DpiScale\n      description: A DPIScale value.\n  overload: System.Windows.Media.VisualTreeHelper.GetDpi*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetDrawing(System.Windows.Media.Visual)\n  id: GetDrawing(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetDrawing(Visual)\n  nameWithType: VisualTreeHelper.GetDrawing(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetDrawing(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns the drawing content of the specified <xref href=\"System.Windows.Media.Visual\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows how to retrieve the <xref:System.Windows.Media.DrawingGroup> from a visual object by using the GetDrawing method. A hit test is then performed on the geometry of each drawing in the <xref:System.Windows.Media.DrawingGroup> to determine which geometry was hit.  \\n  \\n [!code-vb[VisualsOverview#VisualsOverviewSnippet4](~/add/codesnippet/visualbasic/visualsoverview/window1.xaml.vb#visualsoverviewsnippet4)]\\n [!code-cs[VisualsOverview#VisualsOverviewSnippet4](~/add/codesnippet/csharp/VisualsOverview/Window1.xaml.cs#visualsoverviewsnippet4)]\"\n  syntax:\n    content: public static System.Windows.Media.DrawingGroup GetDrawing (System.Windows.Media.Visual reference);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> whose drawing content is returned.\n    return:\n      type: System.Windows.Media.DrawingGroup\n      description: The drawing content of the <xref href=\"System.Windows.Media.Visual\"></xref> returned as a <xref href=\"System.Windows.Media.DrawingGroup\"></xref> type.\n  overload: System.Windows.Media.VisualTreeHelper.GetDrawing*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)\n  id: GetEdgeMode(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetEdgeMode(Visual)\n  nameWithType: VisualTreeHelper.GetEdgeMode(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetEdgeMode(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns the edge mode of the specified <xref href=\"System.Windows.Media.Visual\"></xref> as an <xref href=\"System.Windows.Media.EdgeMode\"></xref> value.\n  remarks: \"The edge mode value determines how the edges of non-text primitives are rendered.  \\n  \\n|Edge mode value|Description|  \\n|---------------------|-----------------|  \\n|<xref:System.Windows.Media.EdgeMode>|Render edges of non-text primitives as aliased edges.|  \\n|<xref:System.Windows.Media.EdgeMode>|No edge mode is specified. Do not change the current edge mode that is applied to non-text primitives.|\"\n  syntax:\n    content: public static System.Windows.Media.EdgeMode GetEdgeMode (System.Windows.Media.Visual reference);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> whose edge mode value is returned.\n    return:\n      type: System.Windows.Media.EdgeMode\n      description: The <xref href=\"System.Windows.Media.EdgeMode\"></xref> value of the <xref href=\"System.Windows.Media.Visual\"></xref>.\n  overload: System.Windows.Media.VisualTreeHelper.GetEdgeMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetEffect(System.Windows.Media.Visual)\n  id: GetEffect(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetEffect(Visual)\n  nameWithType: VisualTreeHelper.GetEffect(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetEffect(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets the bitmap effect for the specified <xref href=\"System.Windows.Media.Visual\"></xref>.\n  syntax:\n    content: public static System.Windows.Media.Effects.Effect GetEffect (System.Windows.Media.Visual reference);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> to get the bitmap effect for.\n    return:\n      type: System.Windows.Media.Effects.Effect\n      description: The <xref href=\"System.Windows.Media.Effects.Effect\"></xref> applied to <code>reference</code>.\n  overload: System.Windows.Media.VisualTreeHelper.GetEffect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)\n  id: GetOffset(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetOffset(Visual)\n  nameWithType: VisualTreeHelper.GetOffset(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetOffset(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns the offset of the <xref href=\"System.Windows.Media.Visual\"></xref>.\n  remarks: The returned offset value is relative to the parent of the <xref:System.Windows.Media.Visual>. If you want to return an offset value that is not relative to the parent of a <xref:System.Windows.Media.Visual>, use the <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method.\n  example:\n  - \"The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is defined with <xref:System.Windows.FrameworkElement.Margin%2A> value of 4.  \\n  \\n [!code-xml[VisualSnippets#VisualSnippet1](~/add/codesnippet/xaml/VisualSnippets/Window1.xaml#visualsnippet1)]  \\n  \\n The following code example shows how to use the GetOffset method to retrieve the offset of the <xref:System.Windows.Controls.TextBlock>. The offset values are contained within the returned <xref:System.Windows.Vector> value.  \\n  \\n [!code-vb[VisualSnippets#VisualSnippet2](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet2)]\\n [!code-cs[VisualSnippets#VisualSnippet2](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet2)]  \\n  \\n The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> value. In this case, <xref:System.Windows.Vector.X%2A> is 4, and <xref:System.Windows.Vector.Y%2A> is 4.\"\n  syntax:\n    content: public static System.Windows.Vector GetOffset (System.Windows.Media.Visual reference);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> whose offset is returned.\n    return:\n      type: System.Windows.Vector\n      description: A <xref href=\"System.Windows.Vector\"></xref> that represents the offset value of the <xref href=\"System.Windows.Media.Visual\"></xref>.\n  overload: System.Windows.Media.VisualTreeHelper.GetOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)\n  id: GetOpacity(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetOpacity(Visual)\n  nameWithType: VisualTreeHelper.GetOpacity(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetOpacity(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns the opacity of the <xref href=\"System.Windows.Media.Visual\"></xref>.\n  remarks: The value of the opacity is expressed as a value between 0 and 1. A value of 0 indicates that the element is completely transparent, while a value of 1 indicates that the element is completely opaque. A value of 0.5 indicates that the element is 50 percent opaque. Values less than 0 are treated as 0, and values greater than 1 are treated as 1.\n  syntax:\n    content: public static double GetOpacity (System.Windows.Media.Visual reference);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> whose opacity value is returned.\n    return:\n      type: System.Double\n      description: A value of type <xref:System.Double> that represents the opacity value of the <xref href=\"System.Windows.Media.Visual\"></xref>.\n  overload: System.Windows.Media.VisualTreeHelper.GetOpacity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetOpacityMask(System.Windows.Media.Visual)\n  id: GetOpacityMask(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetOpacityMask(Visual)\n  nameWithType: VisualTreeHelper.GetOpacityMask(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetOpacityMask(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns a <xref href=\"System.Windows.Media.Brush\"></xref> value that represents the opacity mask of the <xref href=\"System.Windows.Media.Visual\"></xref>.\n  remarks: The opacity mask is a <xref:System.Windows.Media.Brush> that is applied to any alpha-channel masking for the rendered content of this <xref:System.Windows.Media.Visual>.\n  syntax:\n    content: public static System.Windows.Media.Brush GetOpacityMask (System.Windows.Media.Visual reference);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> whose opacity mask value is returned.\n    return:\n      type: System.Windows.Media.Brush\n      description: A value of type <xref href=\"System.Windows.Media.Brush\"></xref> that represents the opacity mask value of the <xref href=\"System.Windows.Media.Visual\"></xref>.\n  overload: System.Windows.Media.VisualTreeHelper.GetOpacityMask*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)\n  id: GetParent(System.Windows.DependencyObject)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetParent(DependencyObject)\n  nameWithType: VisualTreeHelper.GetParent(DependencyObject)\n  fullName: System.Windows.Media.VisualTreeHelper.GetParent(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns a <xref href=\"System.Windows.DependencyObject\"></xref> value that represents the parent of the visual object.\n  remarks: The value of `reference` can represent either a <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D> object.\n  syntax:\n    content: public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject reference);\n    parameters:\n    - id: reference\n      type: System.Windows.DependencyObject\n      description: The visual whose parent is returned.\n    return:\n      type: System.Windows.DependencyObject\n      description: The parent of the visual.\n  overload: System.Windows.Media.VisualTreeHelper.GetParent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)\n  id: GetTransform(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetTransform(Visual)\n  nameWithType: VisualTreeHelper.GetTransform(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetTransform(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns a <xref href=\"System.Windows.Media.Transform\"></xref> value for the <xref href=\"System.Windows.Media.Visual\"></xref>.\n  remarks: \"Alternatively, you can use the <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method to return a transform value for the ancestor of a <xref:System.Windows.Media.Visual>. This method always returns a valid transform. The following code example shows how to use <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method.  \\n  \\n [!code-vb[VisualSnippets#VisualSnippet3](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet3)]\\n [!code-cs[VisualSnippets#VisualSnippet3](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet3)]\"\n  example:\n  - \"The following code example shows how to use the GetTransform method to retrieve the transform for the specified visual object.  \\n  \\n [!code-vb[VisualSnippets#VisualSnippet6](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet6)]\\n [!code-cs[VisualSnippets#VisualSnippet6](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet6)]  \\n  \\n Your code should test for `null` before using the returned value. To return the offset of the returned transform, use the <xref:System.Windows.Media.GeneralTransform.Transform%2A> method. The offset value is relative to the parent of the <xref:System.Windows.Media.Visual>.\"\n  syntax:\n    content: public static System.Windows.Media.Transform GetTransform (System.Windows.Media.Visual reference);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> whose transform value is returned.\n    return:\n      type: System.Windows.Media.Transform\n      description: The transform value of the <xref href=\"System.Windows.Media.Visual\"></xref>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>reference</code> does not have a transform defined.\n  overload: System.Windows.Media.VisualTreeHelper.GetTransform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)\n  id: GetXSnappingGuidelines(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetXSnappingGuidelines(Visual)\n  nameWithType: VisualTreeHelper.GetXSnappingGuidelines(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns an X-coordinate (vertical) guideline collection.\n  remarks: \"Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels. The [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] graphics system uses device-independent units to enable resolution and device independence. Each device independent pixel automatically scales with the system's [!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)] setting. This provides [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] applications proper scaling for different [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)] settings and makes the application automatically [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]-aware.  \\n  \\n However, this [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)] independence can create irregular edge rendering due to anti-aliasing. These artifacts, commonly seen as blurry, or \\\"soft\\\" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels. To address this issue, [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] provides a way for object edges in a visual tree to \\\"snap\\\" to device pixels through pixel snapping, eliminating the soft edges produced by anti-aliasing.\"\n  syntax:\n    content: public static System.Windows.Media.DoubleCollection GetXSnappingGuidelines (System.Windows.Media.Visual reference);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> whose X-coordinate guideline collection is returned.\n    return:\n      type: System.Windows.Media.DoubleCollection\n      description: The X-coordinate guideline collection of the <xref href=\"System.Windows.Media.Visual\"></xref>.\n  overload: System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)\n  id: GetYSnappingGuidelines(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: GetYSnappingGuidelines(Visual)\n  nameWithType: VisualTreeHelper.GetYSnappingGuidelines(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns a Y-coordinate (horizontal) guideline collection.\n  remarks: \"Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels. The [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] graphics system uses device-independent units to enable resolution and device independence. Each device independent pixel automatically scales with the system's [!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)] setting. This provides [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] applications proper scaling for different [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)] settings and makes the application automatically [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]-aware.  \\n  \\n However, this [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)] independence can create irregular edge rendering due to anti-aliasing. These artifacts, commonly seen as blurry, or \\\"soft\\\" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels. To address this issue, [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] provides a way for object edges in a visual tree to \\\"snap\\\" to device pixels through pixel snapping, eliminating the soft edges produced by anti-aliasing.\"\n  syntax:\n    content: public static System.Windows.Media.DoubleCollection GetYSnappingGuidelines (System.Windows.Media.Visual reference);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> whose Y-coordinate guideline collection is returned.\n    return:\n      type: System.Windows.Media.DoubleCollection\n      description: The Y-coordinate guideline collection of the <xref href=\"System.Windows.Media.Visual\"></xref>.\n  overload: System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)\n  id: HitTest(System.Windows.Media.Visual,System.Windows.Point)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: HitTest(Visual,Point)\n  nameWithType: VisualTreeHelper.HitTest(Visual,Point)\n  fullName: System.Windows.Media.VisualTreeHelper.HitTest(Visual,Point)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns the topmost <xref href=\"System.Windows.Media.Visual\"></xref> object of a hit test by specifying a <xref href=\"System.Windows.Point\"></xref>.\n  remarks: \"The <xref:System.Windows.Media.HitTestResult.VisualHit%2A> property of the return value represents the <xref:System.Windows.Media.Visual> object that was hit.  \\n  \\n> [!NOTE]\\n>  It is possible for a hit test that starts in a 2D visual tree to return <xref:System.Windows.Media.Media3D.RayHitTestResult>, which is a 3D hit test result object. Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.\"\n  example:\n  - \"The following example shows how to use the HitTest method to hit test the objects within a <xref:System.Windows.Controls.Canvas>.  \\n  \\n [!code-cs[HitTestingOverview#100](~/add/codesnippet/csharp/HitTestingOverview/Window1.xaml.cs#100)]\\n [!code-vb[HitTestingOverview#100](~/add/codesnippet/visualbasic/hittestingoverview/window1.xaml.vb#100)]\"\n  syntax:\n    content: public static System.Windows.Media.HitTestResult HitTest (System.Windows.Media.Visual reference, System.Windows.Point point);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> to hit test.\n    - id: point\n      type: System.Windows.Point\n      description: The point value to hit test against.\n    return:\n      type: System.Windows.Media.HitTestResult\n      description: The hit test result of the <xref href=\"System.Windows.Media.Visual\"></xref>, returned as a <xref href=\"System.Windows.Media.HitTestResult\"></xref> type.\n  overload: System.Windows.Media.VisualTreeHelper.HitTest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)\n  id: HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: HitTest(Visual3D,HitTestFilterCallback,HitTestResultCallback,HitTestParameters3D)\n  nameWithType: VisualTreeHelper.HitTest(Visual3D,HitTestFilterCallback,HitTestResultCallback,HitTestParameters3D)\n  fullName: System.Windows.Media.VisualTreeHelper.HitTest(Visual3D,HitTestFilterCallback,HitTestResultCallback,HitTestParameters3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Initiates a hit test on the specified <xref href=\"System.Windows.Media.Media3D.Visual3D\"></xref>, with caller-defined <xref href=\"System.Windows.Media.HitTestFilterCallback\"></xref> and <xref href=\"System.Windows.Media.HitTestResultCallback\"></xref> methods.\n  remarks: \"The `filterCallback` parameter can be `null`, in which case, it is ignored. If `filterCallback` is not `null`, it is invoked before `resultCallback`.  `resultCallback` cannot be `null`.  \\n  \\n> [!NOTE]\\n>  It is possible for a hit test that starts in a 2D visual tree to return <xref:System.Windows.Media.Media3D.RayHitTestResult>, which is a 3D hit test result object. Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.\"\n  syntax:\n    content: public static void HitTest (System.Windows.Media.Media3D.Visual3D reference, System.Windows.Media.HitTestFilterCallback filterCallback, System.Windows.Media.HitTestResultCallback resultCallback, System.Windows.Media.Media3D.HitTestParameters3D hitTestParameters);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Media3D.Visual3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Visual3D\"></xref> to hit test.\n    - id: filterCallback\n      type: System.Windows.Media.HitTestFilterCallback\n      description: The method that represents the hit test filter callback value.\n    - id: resultCallback\n      type: System.Windows.Media.HitTestResultCallback\n      description: The method that represents the hit test result callback value.\n    - id: hitTestParameters\n      type: System.Windows.Media.Media3D.HitTestParameters3D\n      description: The 3D parameter value to hit test against.\n  overload: System.Windows.Media.VisualTreeHelper.HitTest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)\n  id: HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: HitTest(Visual,HitTestFilterCallback,HitTestResultCallback,HitTestParameters)\n  nameWithType: VisualTreeHelper.HitTest(Visual,HitTestFilterCallback,HitTestResultCallback,HitTestParameters)\n  fullName: System.Windows.Media.VisualTreeHelper.HitTest(Visual,HitTestFilterCallback,HitTestResultCallback,HitTestParameters)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Initiates a hit test on the specified <xref href=\"System.Windows.Media.Visual\"></xref>, with caller-defined <xref href=\"System.Windows.Media.HitTestFilterCallback\"></xref> and <xref href=\"System.Windows.Media.HitTestResultCallback\"></xref> methods.\n  remarks: \"The `filterCallback` parameter can be `null`, in which case it is ignored. If `filterCallback` is not `null`, it is invoked before `resultCallback`. `resultCallback` cannot be `null`.  \\n  \\n> [!NOTE]\\n>  It is possible for a hit test that starts in a 2D visual tree to return <xref:System.Windows.Media.Media3D.RayHitTestResult>, which is a 3D hit test result object. Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.\"\n  example:\n  - \"The following example shows how to use the HitTest method to hit test the objects within a <xref:System.Windows.Controls.Canvas>.  \\n  \\n [!code-cs[HitTestingOverview#101](~/add/codesnippet/csharp/HitTestingOverview/Window1.xaml.cs#101)]\\n [!code-vb[HitTestingOverview#101](~/add/codesnippet/visualbasic/hittestingoverview/window1.xaml.vb#101)]  \\n[!code-cs[HitTestingOverview#102](~/add/codesnippet/csharp/HitTestingOverview/Window1.xaml.cs#102)]\\n[!code-vb[HitTestingOverview#102](~/add/codesnippet/visualbasic/hittestingoverview/window1.xaml.vb#102)]\"\n  syntax:\n    content: public static void HitTest (System.Windows.Media.Visual reference, System.Windows.Media.HitTestFilterCallback filterCallback, System.Windows.Media.HitTestResultCallback resultCallback, System.Windows.Media.HitTestParameters hitTestParameters);\n    parameters:\n    - id: reference\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> to hit test.\n    - id: filterCallback\n      type: System.Windows.Media.HitTestFilterCallback\n      description: The method that represents the hit test filter callback value.\n    - id: resultCallback\n      type: System.Windows.Media.HitTestResultCallback\n      description: The method that represents the hit test result callback value.\n    - id: hitTestParameters\n      type: System.Windows.Media.HitTestParameters\n      description: The parameter value to hit test against.\n  overload: System.Windows.Media.VisualTreeHelper.HitTest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.VisualTreeHelper.SetRootDpi(System.Windows.Media.Visual,System.Windows.DpiScale)\n  id: SetRootDpi(System.Windows.Media.Visual,System.Windows.DpiScale)\n  parent: System.Windows.Media.VisualTreeHelper\n  langs:\n  - csharp\n  name: SetRootDpi(Visual,DpiScale)\n  nameWithType: VisualTreeHelper.SetRootDpi(Visual,DpiScale)\n  fullName: System.Windows.Media.VisualTreeHelper.SetRootDpi(Visual,DpiScale)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Updates the DPI information of a Visual. It can only be called on a Visual without a parent.\n  syntax:\n    content: public static void SetRootDpi (System.Windows.Media.Visual visual, System.Windows.DpiScale dpiInfo);\n    parameters:\n    - id: visual\n      type: System.Windows.Media.Visual\n      description: A Visual object target.\n    - id: dpiInfo\n      type: System.Windows.DpiScale\n      description: DPI information for the target Visual.\n  overload: System.Windows.Media.VisualTreeHelper.SetRootDpi*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Media.VisualTreeHelper.GetBitmapEffect(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetBitmapEffect(Visual)\n  nameWithType: VisualTreeHelper.GetBitmapEffect(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetBitmapEffect(Visual)\n- uid: System.Windows.Media.Effects.BitmapEffect\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: BitmapEffect\n  nameWithType: BitmapEffect\n  fullName: System.Windows.Media.Effects.BitmapEffect\n- uid: System.Windows.Media.Visual\n  parent: System.Windows.Media\n  isExternal: false\n  name: Visual\n  nameWithType: Visual\n  fullName: System.Windows.Media.Visual\n- uid: System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetBitmapEffectInput(Visual)\n  nameWithType: VisualTreeHelper.GetBitmapEffectInput(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput(Visual)\n- uid: System.Windows.Media.Effects.BitmapEffectInput\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: BitmapEffectInput\n  nameWithType: BitmapEffectInput\n  fullName: System.Windows.Media.Effects.BitmapEffectInput\n- uid: System.Windows.Media.VisualTreeHelper.GetCacheMode(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetCacheMode(Visual)\n  nameWithType: VisualTreeHelper.GetCacheMode(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetCacheMode(Visual)\n- uid: System.Windows.Media.CacheMode\n  parent: System.Windows.Media\n  isExternal: false\n  name: CacheMode\n  nameWithType: CacheMode\n  fullName: System.Windows.Media.CacheMode\n- uid: System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetChild(DependencyObject,Int32)\n  nameWithType: VisualTreeHelper.GetChild(DependencyObject,Int32)\n  fullName: System.Windows.Media.VisualTreeHelper.GetChild(DependencyObject,Int32)\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetChildrenCount(DependencyObject)\n  nameWithType: VisualTreeHelper.GetChildrenCount(DependencyObject)\n  fullName: System.Windows.Media.VisualTreeHelper.GetChildrenCount(DependencyObject)\n- uid: System.Windows.Media.VisualTreeHelper.GetClip(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetClip(Visual)\n  nameWithType: VisualTreeHelper.GetClip(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetClip(Visual)\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Media3D.Visual3D)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetContentBounds(Visual3D)\n  nameWithType: VisualTreeHelper.GetContentBounds(Visual3D)\n  fullName: System.Windows.Media.VisualTreeHelper.GetContentBounds(Visual3D)\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Visual3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Visual3D\n  nameWithType: Visual3D\n  fullName: System.Windows.Media.Media3D.Visual3D\n- uid: System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetContentBounds(Visual)\n  nameWithType: VisualTreeHelper.GetContentBounds(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetContentBounds(Visual)\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: false\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Media3D.Visual3D)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetDescendantBounds(Visual3D)\n  nameWithType: VisualTreeHelper.GetDescendantBounds(Visual3D)\n  fullName: System.Windows.Media.VisualTreeHelper.GetDescendantBounds(Visual3D)\n- uid: System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetDescendantBounds(Visual)\n  nameWithType: VisualTreeHelper.GetDescendantBounds(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetDescendantBounds(Visual)\n- uid: System.Windows.Media.VisualTreeHelper.GetDpi(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetDpi(Visual)\n  nameWithType: VisualTreeHelper.GetDpi(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetDpi(Visual)\n- uid: System.Windows.DpiScale\n  parent: System.Windows\n  isExternal: false\n  name: DpiScale\n  nameWithType: DpiScale\n  fullName: System.Windows.DpiScale\n- uid: System.Windows.Media.VisualTreeHelper.GetDrawing(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetDrawing(Visual)\n  nameWithType: VisualTreeHelper.GetDrawing(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetDrawing(Visual)\n- uid: System.Windows.Media.DrawingGroup\n  parent: System.Windows.Media\n  isExternal: false\n  name: DrawingGroup\n  nameWithType: DrawingGroup\n  fullName: System.Windows.Media.DrawingGroup\n- uid: System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetEdgeMode(Visual)\n  nameWithType: VisualTreeHelper.GetEdgeMode(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetEdgeMode(Visual)\n- uid: System.Windows.Media.EdgeMode\n  parent: System.Windows.Media\n  isExternal: false\n  name: EdgeMode\n  nameWithType: EdgeMode\n  fullName: System.Windows.Media.EdgeMode\n- uid: System.Windows.Media.VisualTreeHelper.GetEffect(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetEffect(Visual)\n  nameWithType: VisualTreeHelper.GetEffect(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetEffect(Visual)\n- uid: System.Windows.Media.Effects.Effect\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: Effect\n  nameWithType: Effect\n  fullName: System.Windows.Media.Effects.Effect\n- uid: System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetOffset(Visual)\n  nameWithType: VisualTreeHelper.GetOffset(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetOffset(Visual)\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: false\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector\n- uid: System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetOpacity(Visual)\n  nameWithType: VisualTreeHelper.GetOpacity(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetOpacity(Visual)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.VisualTreeHelper.GetOpacityMask(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetOpacityMask(Visual)\n  nameWithType: VisualTreeHelper.GetOpacityMask(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetOpacityMask(Visual)\n- uid: System.Windows.Media.Brush\n  parent: System.Windows.Media\n  isExternal: false\n  name: Brush\n  nameWithType: Brush\n  fullName: System.Windows.Media.Brush\n- uid: System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetParent(DependencyObject)\n  nameWithType: VisualTreeHelper.GetParent(DependencyObject)\n  fullName: System.Windows.Media.VisualTreeHelper.GetParent(DependencyObject)\n- uid: System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetTransform(Visual)\n  nameWithType: VisualTreeHelper.GetTransform(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetTransform(Visual)\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n- uid: System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetXSnappingGuidelines(Visual)\n  nameWithType: VisualTreeHelper.GetXSnappingGuidelines(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(Visual)\n- uid: System.Windows.Media.DoubleCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: DoubleCollection\n  nameWithType: DoubleCollection\n  fullName: System.Windows.Media.DoubleCollection\n- uid: System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetYSnappingGuidelines(Visual)\n  nameWithType: VisualTreeHelper.GetYSnappingGuidelines(Visual)\n  fullName: System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(Visual)\n- uid: System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: HitTest(Visual,Point)\n  nameWithType: VisualTreeHelper.HitTest(Visual,Point)\n  fullName: System.Windows.Media.VisualTreeHelper.HitTest(Visual,Point)\n- uid: System.Windows.Media.HitTestResult\n  parent: System.Windows.Media\n  isExternal: false\n  name: HitTestResult\n  nameWithType: HitTestResult\n  fullName: System.Windows.Media.HitTestResult\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: HitTest(Visual3D,HitTestFilterCallback,HitTestResultCallback,HitTestParameters3D)\n  nameWithType: VisualTreeHelper.HitTest(Visual3D,HitTestFilterCallback,HitTestResultCallback,HitTestParameters3D)\n  fullName: System.Windows.Media.VisualTreeHelper.HitTest(Visual3D,HitTestFilterCallback,HitTestResultCallback,HitTestParameters3D)\n- uid: System.Windows.Media.HitTestFilterCallback\n  parent: System.Windows.Media\n  isExternal: false\n  name: HitTestFilterCallback\n  nameWithType: HitTestFilterCallback\n  fullName: System.Windows.Media.HitTestFilterCallback\n- uid: System.Windows.Media.HitTestResultCallback\n  parent: System.Windows.Media\n  isExternal: false\n  name: HitTestResultCallback\n  nameWithType: HitTestResultCallback\n  fullName: System.Windows.Media.HitTestResultCallback\n- uid: System.Windows.Media.Media3D.HitTestParameters3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: HitTestParameters3D\n  nameWithType: HitTestParameters3D\n  fullName: System.Windows.Media.Media3D.HitTestParameters3D\n- uid: System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: HitTest(Visual,HitTestFilterCallback,HitTestResultCallback,HitTestParameters)\n  nameWithType: VisualTreeHelper.HitTest(Visual,HitTestFilterCallback,HitTestResultCallback,HitTestParameters)\n  fullName: System.Windows.Media.VisualTreeHelper.HitTest(Visual,HitTestFilterCallback,HitTestResultCallback,HitTestParameters)\n- uid: System.Windows.Media.HitTestParameters\n  parent: System.Windows.Media\n  isExternal: false\n  name: HitTestParameters\n  nameWithType: HitTestParameters\n  fullName: System.Windows.Media.HitTestParameters\n- uid: System.Windows.Media.VisualTreeHelper.SetRootDpi(System.Windows.Media.Visual,System.Windows.DpiScale)\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: SetRootDpi(Visual,DpiScale)\n  nameWithType: VisualTreeHelper.SetRootDpi(Visual,DpiScale)\n  fullName: System.Windows.Media.VisualTreeHelper.SetRootDpi(Visual,DpiScale)\n- uid: System.Windows.Media.VisualTreeHelper.GetBitmapEffect*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetBitmapEffect\n  nameWithType: VisualTreeHelper.GetBitmapEffect\n- uid: System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetBitmapEffectInput\n  nameWithType: VisualTreeHelper.GetBitmapEffectInput\n- uid: System.Windows.Media.VisualTreeHelper.GetCacheMode*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetCacheMode\n  nameWithType: VisualTreeHelper.GetCacheMode\n- uid: System.Windows.Media.VisualTreeHelper.GetChild*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetChild\n  nameWithType: VisualTreeHelper.GetChild\n- uid: System.Windows.Media.VisualTreeHelper.GetChildrenCount*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetChildrenCount\n  nameWithType: VisualTreeHelper.GetChildrenCount\n- uid: System.Windows.Media.VisualTreeHelper.GetClip*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetClip\n  nameWithType: VisualTreeHelper.GetClip\n- uid: System.Windows.Media.VisualTreeHelper.GetContentBounds*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetContentBounds\n  nameWithType: VisualTreeHelper.GetContentBounds\n- uid: System.Windows.Media.VisualTreeHelper.GetDescendantBounds*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetDescendantBounds\n  nameWithType: VisualTreeHelper.GetDescendantBounds\n- uid: System.Windows.Media.VisualTreeHelper.GetDpi*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetDpi\n  nameWithType: VisualTreeHelper.GetDpi\n- uid: System.Windows.Media.VisualTreeHelper.GetDrawing*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetDrawing\n  nameWithType: VisualTreeHelper.GetDrawing\n- uid: System.Windows.Media.VisualTreeHelper.GetEdgeMode*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetEdgeMode\n  nameWithType: VisualTreeHelper.GetEdgeMode\n- uid: System.Windows.Media.VisualTreeHelper.GetEffect*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetEffect\n  nameWithType: VisualTreeHelper.GetEffect\n- uid: System.Windows.Media.VisualTreeHelper.GetOffset*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetOffset\n  nameWithType: VisualTreeHelper.GetOffset\n- uid: System.Windows.Media.VisualTreeHelper.GetOpacity*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetOpacity\n  nameWithType: VisualTreeHelper.GetOpacity\n- uid: System.Windows.Media.VisualTreeHelper.GetOpacityMask*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetOpacityMask\n  nameWithType: VisualTreeHelper.GetOpacityMask\n- uid: System.Windows.Media.VisualTreeHelper.GetParent*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetParent\n  nameWithType: VisualTreeHelper.GetParent\n- uid: System.Windows.Media.VisualTreeHelper.GetTransform*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetTransform\n  nameWithType: VisualTreeHelper.GetTransform\n- uid: System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetXSnappingGuidelines\n  nameWithType: VisualTreeHelper.GetXSnappingGuidelines\n- uid: System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: GetYSnappingGuidelines\n  nameWithType: VisualTreeHelper.GetYSnappingGuidelines\n- uid: System.Windows.Media.VisualTreeHelper.HitTest*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: HitTest\n  nameWithType: VisualTreeHelper.HitTest\n- uid: System.Windows.Media.VisualTreeHelper.SetRootDpi*\n  parent: System.Windows.Media.VisualTreeHelper\n  isExternal: false\n  name: SetRootDpi\n  nameWithType: VisualTreeHelper.SetRootDpi\n"}