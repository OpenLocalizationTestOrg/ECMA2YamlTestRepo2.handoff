{"nodes":[{"pos":[564,674],"content":"Provides information for the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ICollectionView.CurrentChanging\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Provides information for the <xref href=\"System.ComponentModel.ICollectionView.CurrentChanging\"></xref> event."},{"pos":[687,1181],"content":"A collection that supports <xref:System.ComponentModel.ICollectionView> raises this event when the <xref:System.ComponentModel.ICollectionView.CurrentItem%2A> is changing or when the content of the collection has been reset.       By default, the event is cancelable when the cause is a move-current operation (such as the <xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A> and similar methods) and uncancelable when the cause is an irreversible change operation on the collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"A collection that supports <xref:System.ComponentModel.ICollectionView> raises this event when the <xref:System.ComponentModel.ICollectionView.CurrentItem%2A> is changing or when the content of the collection has been reset.       By default, the event is cancelable when the cause is a move-current operation (such as the <xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A> and similar methods) and uncancelable when the cause is an irreversible change operation on the collection.","pos":[0,492],"nodes":[{"content":"A collection that supports &lt;xref:System.ComponentModel.ICollectionView&gt; raises this event when the &lt;xref:System.ComponentModel.ICollectionView.CurrentItem%2A&gt; is changing or when the content of the collection has been reset.","pos":[0,224],"source":"A collection that supports <xref:System.ComponentModel.ICollectionView> raises this event when the <xref:System.ComponentModel.ICollectionView.CurrentItem%2A> is changing or when the content of the collection has been reset."},{"content":"By default, the event is cancelable when the cause is a move-current operation (such as the &lt;xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A&gt; and similar methods) and uncancelable when the cause is an irreversible change operation on the collection.","pos":[231,492],"source":"       By default, the event is cancelable when the cause is a move-current operation (such as the <xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A> and similar methods) and uncancelable when the cause is an irreversible change operation on the collection."}]}]},{"pos":[1793,1901],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.CurrentChangingEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.CurrentChangingEventArgs\"></xref> class."},{"pos":[1913,2027],"content":"The default value of the &lt;xref:System.ComponentModel.CurrentChangingEventArgs.IsCancelable%2A&gt; property is <ph id=\"ph1\">`true`</ph>.","needQuote":true,"needEscape":true,"source":"The default value of the <xref:System.ComponentModel.CurrentChangingEventArgs.IsCancelable%2A> property is `true`."},{"pos":[2701,2860],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.CurrentChangingEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">isCancelable</ph><ept id=\"p2\">&lt;/code&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.CurrentChangingEventArgs\"></xref> class with the specified <code>isCancelable</code> value."},{"pos":[3022,3077],"content":"A value that indicates whether the event is cancelable.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that indicates whether the event is cancelable.","pos":[0,55]}]},{"pos":[3557,3621],"content":"Gets or sets a value that indicates whether to cancel the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether to cancel the event.","pos":[0,64]}]},{"pos":[3736,3988],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the event is to be canceled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the event is to be canceled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,167],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the event is to be canceled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[168,252],"source":" The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[4180,4330],"content":"If the value of &lt;xref:System.ComponentModel.CurrentChangingEventArgs.IsCancelable*&gt; is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"If the value of <xref:System.ComponentModel.CurrentChangingEventArgs.IsCancelable*> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4757,4817],"content":"Gets a value that indicates whether the event is cancelable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the event is cancelable.","pos":[0,60]}]},{"pos":[4829,5090],"content":"By default, the event is cancelable when the cause is a move-current operation (such as the <xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A> and similar methods) and uncancelable when the cause is an irreversible change operation on the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"By default, the event is cancelable when the cause is a move-current operation (such as the &lt;xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A&gt; and similar methods) and uncancelable when the cause is an irreversible change operation on the collection.","pos":[0,261],"source":"By default, the event is cancelable when the cause is a move-current operation (such as the <xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A> and similar methods) and uncancelable when the cause is an irreversible change operation on the collection."}]},{"pos":[5206,5452],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the event is cancelable, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the event is cancelable, otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,163],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the event is cancelable, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[164,246],"source":" The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.CurrentChangingEventArgs\n  id: CurrentChangingEventArgs\n  children:\n  - System.ComponentModel.CurrentChangingEventArgs.#ctor\n  - System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)\n  - System.ComponentModel.CurrentChangingEventArgs.Cancel\n  - System.ComponentModel.CurrentChangingEventArgs.IsCancelable\n  langs:\n  - csharp\n  name: CurrentChangingEventArgs\n  nameWithType: CurrentChangingEventArgs\n  fullName: System.ComponentModel.CurrentChangingEventArgs\n  type: Class\n  summary: Provides information for the <xref href=\"System.ComponentModel.ICollectionView.CurrentChanging\"></xref> event.\n  remarks: \"A collection that supports <xref:System.ComponentModel.ICollectionView> raises this event when the <xref:System.ComponentModel.ICollectionView.CurrentItem%2A> is changing or when the content of the collection has been reset.  \\n  \\n By default, the event is cancelable when the cause is a move-current operation (such as the <xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A> and similar methods) and uncancelable when the cause is an irreversible change operation on the collection.\"\n  syntax:\n    content: 'public class CurrentChangingEventArgs : EventArgs'\n  inheritance:\n  - System.EventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.CurrentChangingEventArgs.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  langs:\n  - csharp\n  name: CurrentChangingEventArgs()\n  nameWithType: CurrentChangingEventArgs.CurrentChangingEventArgs()\n  fullName: System.ComponentModel.CurrentChangingEventArgs.CurrentChangingEventArgs()\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.CurrentChangingEventArgs\"></xref> class.\n  remarks: The default value of the <xref:System.ComponentModel.CurrentChangingEventArgs.IsCancelable%2A> property is `true`.\n  syntax:\n    content: public CurrentChangingEventArgs ();\n    parameters: []\n  overload: System.ComponentModel.CurrentChangingEventArgs.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  langs:\n  - csharp\n  name: CurrentChangingEventArgs(Boolean)\n  nameWithType: CurrentChangingEventArgs.CurrentChangingEventArgs(Boolean)\n  fullName: System.ComponentModel.CurrentChangingEventArgs.CurrentChangingEventArgs(Boolean)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.CurrentChangingEventArgs\"></xref> class with the specified <code>isCancelable</code> value.\n  syntax:\n    content: public CurrentChangingEventArgs (bool isCancelable);\n    parameters:\n    - id: isCancelable\n      type: System.Boolean\n      description: A value that indicates whether the event is cancelable.\n  overload: System.ComponentModel.CurrentChangingEventArgs.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.CurrentChangingEventArgs.Cancel\n  id: Cancel\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  langs:\n  - csharp\n  name: Cancel\n  nameWithType: CurrentChangingEventArgs.Cancel\n  fullName: System.ComponentModel.CurrentChangingEventArgs.Cancel\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets or sets a value that indicates whether to cancel the event.\n  syntax:\n    content: public bool Cancel { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the event is to be canceled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.CurrentChangingEventArgs.Cancel*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: If the value of <xref:System.ComponentModel.CurrentChangingEventArgs.IsCancelable*> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.CurrentChangingEventArgs.IsCancelable\n  id: IsCancelable\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  langs:\n  - csharp\n  name: IsCancelable\n  nameWithType: CurrentChangingEventArgs.IsCancelable\n  fullName: System.ComponentModel.CurrentChangingEventArgs.IsCancelable\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets a value that indicates whether the event is cancelable.\n  remarks: By default, the event is cancelable when the cause is a move-current operation (such as the <xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A> and similar methods) and uncancelable when the cause is an irreversible change operation on the collection.\n  syntax:\n    content: public bool IsCancelable { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the event is cancelable, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.ComponentModel.CurrentChangingEventArgs.IsCancelable*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.EventArgs\n  isExternal: false\n  name: System.EventArgs\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ComponentModel.CurrentChangingEventArgs.#ctor\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  isExternal: false\n  name: CurrentChangingEventArgs()\n  nameWithType: CurrentChangingEventArgs.CurrentChangingEventArgs()\n  fullName: System.ComponentModel.CurrentChangingEventArgs.CurrentChangingEventArgs()\n- uid: System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  isExternal: false\n  name: CurrentChangingEventArgs(Boolean)\n  nameWithType: CurrentChangingEventArgs.CurrentChangingEventArgs(Boolean)\n  fullName: System.ComponentModel.CurrentChangingEventArgs.CurrentChangingEventArgs(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.CurrentChangingEventArgs.Cancel\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  isExternal: false\n  name: Cancel\n  nameWithType: CurrentChangingEventArgs.Cancel\n  fullName: System.ComponentModel.CurrentChangingEventArgs.Cancel\n- uid: System.ComponentModel.CurrentChangingEventArgs.IsCancelable\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  isExternal: false\n  name: IsCancelable\n  nameWithType: CurrentChangingEventArgs.IsCancelable\n  fullName: System.ComponentModel.CurrentChangingEventArgs.IsCancelable\n- uid: System.ComponentModel.CurrentChangingEventArgs.#ctor*\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  isExternal: false\n  name: CurrentChangingEventArgs\n  nameWithType: CurrentChangingEventArgs.CurrentChangingEventArgs\n- uid: System.ComponentModel.CurrentChangingEventArgs.Cancel*\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  isExternal: false\n  name: Cancel\n  nameWithType: CurrentChangingEventArgs.Cancel\n- uid: System.ComponentModel.CurrentChangingEventArgs.IsCancelable*\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  isExternal: false\n  name: IsCancelable\n  nameWithType: CurrentChangingEventArgs.IsCancelable\n"}