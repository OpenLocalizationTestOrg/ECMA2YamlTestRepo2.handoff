{"nodes":[{"pos":[855,984],"content":"Defines the mapping between arguments and expression model items and provides the functionality to convert between these objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the mapping between arguments and expression model items and provides the functionality to convert between these objects.","pos":[0,129]}]},{"pos":[996,1255],"content":"This converter can be used to bind data to an <xref:System.Activities.Presentation.View.ExpressionTextBox> or other WPF control. For more information, see [Using an ExpressionTextBox in a custom property editor](http://go.microsoft.com/fwlink/?LinkID=224791).","needQuote":true,"needEscape":true,"nodes":[{"content":"This converter can be used to bind data to an &lt;xref:System.Activities.Presentation.View.ExpressionTextBox&gt; or other WPF control.","pos":[0,128],"source":"This converter can be used to bind data to an <xref:System.Activities.Presentation.View.ExpressionTextBox> or other WPF control."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using an ExpressionTextBox in a custom property editor<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=224791)</ept>.","pos":[129,259],"source":" For more information, see [Using an ExpressionTextBox in a custom property editor](http://go.microsoft.com/fwlink/?LinkID=224791)."}]},{"pos":[2281,2423],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\"></xref> class."},{"pos":[3441,3501],"content":"Converts the specified argument to an expression model item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified argument to an expression model item.","pos":[0,60]}]},{"pos":[3723,3735],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3800,3832],"content":"Not used in this implementation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not used in this implementation.","pos":[0,32]}]},{"pos":[3898,3930],"content":"Not used in this implementation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not used in this implementation.","pos":[0,32]}]},{"pos":[4013,4045],"content":"Not used in this implementation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not used in this implementation.","pos":[0,32]}]},{"pos":[4103,4174],"content":"Returns a <xref:System.Object> that contains the expression model item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a &lt;xref:System.Object&gt; that contains the expression model item.","pos":[0,71],"source":"Returns a <xref:System.Object> that contains the expression model item."}]},{"pos":[5122,5182],"content":"Converts the specified expression model item to an argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified expression model item to an argument.","pos":[0,60]}]},{"pos":[5407,5433],"content":"The model item to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The model item to convert.","pos":[0,26]}]},{"pos":[5501,5533],"content":"Not used in this implementation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not used in this implementation.","pos":[0,32]}]},{"pos":[5599,5631],"content":"Not used in this implementation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not used in this implementation.","pos":[0,32]}]},{"pos":[5714,5746],"content":"Not used in this implementation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not used in this implementation.","pos":[0,32]}]},{"pos":[5806,5864],"content":"Returns a <xref:System.Object> that contains the argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a &lt;xref:System.Object&gt; that contains the argument.","pos":[0,58],"source":"Returns a <xref:System.Object> that contains the argument."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  id: ArgumentToExpressionModelItemConverter\n  children:\n  - System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.#ctor\n  - System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)\n  - System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)\n  langs:\n  - csharp\n  name: ArgumentToExpressionModelItemConverter\n  nameWithType: ArgumentToExpressionModelItemConverter\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  type: Class\n  summary: Defines the mapping between arguments and expression model items and provides the functionality to convert between these objects.\n  remarks: This converter can be used to bind data to an <xref:System.Activities.Presentation.View.ExpressionTextBox> or other WPF control. For more information, see [Using an ExpressionTextBox in a custom property editor](http://go.microsoft.com/fwlink/?LinkID=224791).\n  example:\n  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'\n  syntax:\n    content: 'public class ArgumentToExpressionModelItemConverter : System.Windows.Data.IMultiValueConverter'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Windows.Data.IMultiValueConverter\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.#ctor\n  id: '#ctor'\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  langs:\n  - csharp\n  name: ArgumentToExpressionModelItemConverter()\n  nameWithType: ArgumentToExpressionModelItemConverter.ArgumentToExpressionModelItemConverter()\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ArgumentToExpressionModelItemConverter()\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Converters\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\"></xref> class.\n  syntax:\n    content: public ArgumentToExpressionModelItemConverter ();\n    parameters: []\n  overload: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)\n  id: Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  langs:\n  - csharp\n  name: Convert(Object[],Type,Object,CultureInfo)\n  nameWithType: ArgumentToExpressionModelItemConverter.Convert(Object[],Type,Object,CultureInfo)\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert(Object[],Type,Object,CultureInfo)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Converters\n  summary: Converts the specified argument to an expression model item.\n  syntax:\n    content: public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: values\n      type: System.Object[]\n      description: To be added.\n    - id: targetType\n      type: System.Type\n      description: Not used in this implementation.\n    - id: parameter\n      type: System.Object\n      description: Not used in this implementation.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Not used in this implementation.\n    return:\n      type: System.Object\n      description: Returns a <xref:System.Object> that contains the expression model item.\n  overload: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)\n  id: ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  langs:\n  - csharp\n  name: ConvertBack(Object,Type[],Object,CultureInfo)\n  nameWithType: ArgumentToExpressionModelItemConverter.ConvertBack(Object,Type[],Object,CultureInfo)\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack(Object,Type[],Object,CultureInfo)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Converters\n  summary: Converts the specified expression model item to an argument.\n  syntax:\n    content: public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The model item to convert.\n    - id: targetTypes\n      type: System.Type[]\n      description: Not used in this implementation.\n    - id: parameter\n      type: System.Object\n      description: Not used in this implementation.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Not used in this implementation.\n    return:\n      type: System.Object[]\n      description: Returns a <xref:System.Object> that contains the argument.\n  overload: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.#ctor\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  isExternal: false\n  name: ArgumentToExpressionModelItemConverter()\n  nameWithType: ArgumentToExpressionModelItemConverter.ArgumentToExpressionModelItemConverter()\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ArgumentToExpressionModelItemConverter()\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  isExternal: false\n  name: Convert(Object[],Type,Object,CultureInfo)\n  nameWithType: ArgumentToExpressionModelItemConverter.Convert(Object[],Type,Object,CultureInfo)\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert(Object[],Type,Object,CultureInfo)\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  isExternal: false\n  name: ConvertBack(Object,Type[],Object,CultureInfo)\n  nameWithType: ArgumentToExpressionModelItemConverter.ConvertBack(Object,Type[],Object,CultureInfo)\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack(Object,Type[],Object,CultureInfo)\n- uid: System.Type[]\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.#ctor*\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  isExternal: false\n  name: ArgumentToExpressionModelItemConverter\n  nameWithType: ArgumentToExpressionModelItemConverter.ArgumentToExpressionModelItemConverter\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert*\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  isExternal: false\n  name: Convert\n  nameWithType: ArgumentToExpressionModelItemConverter.Convert\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack*\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  isExternal: false\n  name: ConvertBack\n  nameWithType: ArgumentToExpressionModelItemConverter.ConvertBack\n"}