{"nodes":[{"pos":[446,575],"content":"Provides a common base implementation for readers of request parameters for Web services implemented using HTTP but without SOAP.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a common base implementation for readers of request parameters for Web services implemented using HTTP but without SOAP.","pos":[0,129]}]},{"pos":[588,1473],"content":"MimeParameterReader and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations. Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams. Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.       The MimeParameterReader class establishes a common <xref:System.Web.Services.Protocols.MimeParameterReader.Read%2A> format for all service-side readers of HTTP request streams into Web method parameters.       You will typically not need to use MimeParameterReader or its descendant classes directly. The appropriate types are used according to settings in an ASP.NET configuration file (Web.config).","needQuote":false,"needEscape":true,"nodes":[{"content":"MimeParameterReader and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations. Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams. Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.       The MimeParameterReader class establishes a common <xref:System.Web.Services.Protocols.MimeParameterReader.Read%2A> format for all service-side readers of HTTP request streams into Web method parameters.       You will typically not need to use MimeParameterReader or its descendant classes directly. The appropriate types are used according to settings in an ASP.NET configuration file (Web.config).","pos":[0,881],"nodes":[{"content":"MimeParameterReader and other classes in the &lt;xref:System.Web.Services.Protocols&gt; namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.","pos":[0,195],"source":"MimeParameterReader and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations."},{"content":"Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams.","pos":[196,366]},{"content":"Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.","pos":[367,474]},{"content":"The MimeParameterReader class establishes a common &lt;xref:System.Web.Services.Protocols.MimeParameterReader.Read%2A&gt; format for all service-side readers of HTTP request streams into Web method parameters.","pos":[481,684],"source":"       The MimeParameterReader class establishes a common <xref:System.Web.Services.Protocols.MimeParameterReader.Read%2A> format for all service-side readers of HTTP request streams into Web method parameters."},{"content":"You will typically not need to use MimeParameterReader or its descendant classes directly.","pos":[691,781]},{"content":"The appropriate types are used according to settings in an ASP.NET configuration file (Web.config).","pos":[782,881]}]}]},{"pos":[2812,2923],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.MimeParameterReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.MimeParameterReader\"></xref> class."},{"pos":[3577,3687],"content":"When overridden in a derived class, deserializes an HTTP request into an array of Web method parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, deserializes an HTTP request into an array of Web method parameter values.","pos":[0,110]}]},{"pos":[3863,3963],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object containing the input message for an operation.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.HttpRequest\"></xref> object containing the input message for an operation."},{"pos":[4023,4108],"content":"An array of <xref:System.Object> objects that contains the deserialized HTTP request.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Object&gt; objects that contains the deserialized HTTP request.","pos":[0,85],"source":"An array of <xref:System.Object> objects that contains the deserialized HTTP request."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Services.Protocols.MimeParameterReader\n  id: MimeParameterReader\n  children:\n  - System.Web.Services.Protocols.MimeParameterReader.#ctor\n  - System.Web.Services.Protocols.MimeParameterReader.Read(System.Web.HttpRequest)\n  langs:\n  - csharp\n  name: MimeParameterReader\n  nameWithType: MimeParameterReader\n  fullName: System.Web.Services.Protocols.MimeParameterReader\n  type: Class\n  summary: Provides a common base implementation for readers of request parameters for Web services implemented using HTTP but without SOAP.\n  remarks: \"MimeParameterReader and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations. Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams. Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.  \\n  \\n The MimeParameterReader class establishes a common <xref:System.Web.Services.Protocols.MimeParameterReader.Read%2A> format for all service-side readers of HTTP request streams into Web method parameters.  \\n  \\n You will typically not need to use MimeParameterReader or its descendant classes directly. The appropriate types are used according to settings in an ASP.NET configuration file (Web.config).\"\n  syntax:\n    content: 'public abstract class MimeParameterReader : System.Web.Services.Protocols.MimeFormatter'\n  inheritance:\n  - System.Object\n  - System.Web.Services.Protocols.MimeFormatter\n  implements: []\n  inheritedMembers:\n  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)\n  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)\n  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)\n  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])\n  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])\n  - System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.MimeParameterReader.#ctor\n  id: '#ctor'\n  parent: System.Web.Services.Protocols.MimeParameterReader\n  langs:\n  - csharp\n  name: MimeParameterReader()\n  nameWithType: MimeParameterReader.MimeParameterReader()\n  fullName: System.Web.Services.Protocols.MimeParameterReader.MimeParameterReader()\n  type: Constructor\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.MimeParameterReader\"></xref> class.\n  syntax:\n    content: protected MimeParameterReader ();\n    parameters: []\n  overload: System.Web.Services.Protocols.MimeParameterReader.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.MimeParameterReader.Read(System.Web.HttpRequest)\n  id: Read(System.Web.HttpRequest)\n  parent: System.Web.Services.Protocols.MimeParameterReader\n  langs:\n  - csharp\n  name: Read(HttpRequest)\n  nameWithType: MimeParameterReader.Read(HttpRequest)\n  fullName: System.Web.Services.Protocols.MimeParameterReader.Read(HttpRequest)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: When overridden in a derived class, deserializes an HTTP request into an array of Web method parameter values.\n  syntax:\n    content: public abstract object[] Read (System.Web.HttpRequest request);\n    parameters:\n    - id: request\n      type: System.Web.HttpRequest\n      description: An <xref href=\"System.Web.HttpRequest\"></xref> object containing the input message for an operation.\n    return:\n      type: System.Object[]\n      description: An array of <xref:System.Object> objects that contains the deserialized HTTP request.\n  overload: System.Web.Services.Protocols.MimeParameterReader.Read*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.Services.Protocols.MimeFormatter\n  isExternal: false\n  name: System.Web.Services.Protocols.MimeFormatter\n- uid: System.Web.Services.Protocols.MimeParameterReader.#ctor\n  parent: System.Web.Services.Protocols.MimeParameterReader\n  isExternal: false\n  name: MimeParameterReader()\n  nameWithType: MimeParameterReader.MimeParameterReader()\n  fullName: System.Web.Services.Protocols.MimeParameterReader.MimeParameterReader()\n- uid: System.Web.Services.Protocols.MimeParameterReader.Read(System.Web.HttpRequest)\n  parent: System.Web.Services.Protocols.MimeParameterReader\n  isExternal: false\n  name: Read(HttpRequest)\n  nameWithType: MimeParameterReader.Read(HttpRequest)\n  fullName: System.Web.Services.Protocols.MimeParameterReader.Read(HttpRequest)\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.HttpRequest\n  parent: System.Web\n  isExternal: false\n  name: HttpRequest\n  nameWithType: HttpRequest\n  fullName: System.Web.HttpRequest\n- uid: System.Web.Services.Protocols.MimeParameterReader.#ctor*\n  parent: System.Web.Services.Protocols.MimeParameterReader\n  isExternal: false\n  name: MimeParameterReader\n  nameWithType: MimeParameterReader.MimeParameterReader\n- uid: System.Web.Services.Protocols.MimeParameterReader.Read*\n  parent: System.Web.Services.Protocols.MimeParameterReader\n  isExternal: false\n  name: Read\n  nameWithType: MimeParameterReader.Read\n"}