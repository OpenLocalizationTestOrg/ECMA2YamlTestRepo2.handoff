{"nodes":[{"pos":[2468,2597],"content":"The LdapConnection class creates a TCP/IP or UDP LDAP connection to Microsoft Active Directory Domain Services or an LDAP server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The LdapConnection class creates a TCP/IP or UDP LDAP connection to Microsoft Active Directory Domain Services or an LDAP server.","pos":[0,129]}]},{"pos":[2609,3064],"content":"If the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> property on the LdapConnection object and <xref:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate%2A> property on the <xref:System.DirectoryServices.Protocols.LdapSessionOptions> object are both set, the certificate specified in the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> property is ignored.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the &lt;xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A&gt; property on the LdapConnection object and &lt;xref:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate%2A&gt; property on the &lt;xref:System.DirectoryServices.Protocols.LdapSessionOptions&gt; object are both set, the certificate specified in the &lt;xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A&gt; property is ignored.","pos":[0,455],"source":"If the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> property on the LdapConnection object and <xref:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate%2A> property on the <xref:System.DirectoryServices.Protocols.LdapSessionOptions> object are both set, the certificate specified in the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> property is ignored."}]},{"pos":[4137,4408],"content":"The LdapConnection constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> class using the specified directory identifier. The logon credentials and the Negotiate Authentication are used to connect to the LDAP server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The LdapConnection constructor creates an instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified directory identifier.","pos":[0,176],"source":"The LdapConnection constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> class using the specified directory identifier."},{"content":"The logon credentials and the Negotiate Authentication are used to connect to the LDAP server.","pos":[177,271]}]},{"pos":[4654,4770],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies the server.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> object that specifies the server."},{"pos":[4996,5084],"content":"Thrown if it fails to create a connection block or fails to open a connection to server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Thrown if it fails to create a connection block or fails to open a connection to server.","pos":[0,88]}]},{"pos":[5597,5759],"content":"The LdapConnection constructor creates an instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified server.","needQuote":true,"needEscape":true,"source":"The LdapConnection constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> class using the specified server."},{"pos":[5900,6160],"content":"A string specifying the server  which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the right end of the string by a colon (:).","needQuote":true,"needEscape":true,"nodes":[{"content":"A string specifying the server  which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the right end of the string by a colon (:).","pos":[0,260],"nodes":[{"content":"A string specifying the server  which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server.","pos":[0,142]},{"content":"Optionally, this parameter may also include a port number, separated from the right end of the string by a colon (:).","pos":[143,260]}]}]},{"pos":[6386,6474],"content":"Thrown if it fails to create a connection block or fails to open a connection to server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Thrown if it fails to create a connection block or fails to open a connection to server.","pos":[0,88]}]},{"pos":[7240,7474],"content":"The LdapConnection constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> class using the specified directory identifier and network credentials. Negotiate Authentication is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The LdapConnection constructor creates an instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified directory identifier and network credentials.","pos":[0,200],"source":"The LdapConnection constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> class using the specified directory identifier and network credentials."},{"content":"Negotiate Authentication is used.","pos":[201,234]}]},{"pos":[7761,7877],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies the server.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> object that specifies the server."},{"pos":[7959,8042],"content":"A <xref:System.Net.NetworkCredential> object that specifies the credentials to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Net.NetworkCredential&gt; object that specifies the credentials to use.","pos":[0,83],"source":"A <xref:System.Net.NetworkCredential> object that specifies the credentials to use."}]},{"pos":[8268,8356],"content":"Thrown if it fails to create a connection block or fails to open a connection to server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Thrown if it fails to create a connection block or fails to open a connection to server.","pos":[0,88]}]},{"pos":[9237,9459],"content":"The LdapConnection constructor creates an instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified directory identifier, network credentials, and authentication type.","needQuote":true,"needEscape":true,"source":"The LdapConnection constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> class using the specified directory identifier, network credentials, and authentication type."},{"pos":[9800,9916],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies the server.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> object that specifies the server."},{"pos":[9998,10081],"content":"A <xref:System.Net.NetworkCredential> object that specifies the credentials to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Net.NetworkCredential&gt; object that specifies the credentials to use.","pos":[0,83],"source":"A <xref:System.Net.NetworkCredential> object that specifies the credentials to use."}]},{"pos":[10176,10299],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.AuthType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the type of authentication to use.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.Protocols.AuthType\"></xref> values that specifies the type of authentication to use."},{"pos":[10525,10613],"content":"Thrown if it fails to create a connection block or fails to open a connection to server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Thrown if it fails to create a connection block or fails to open a connection to server.","pos":[0,88]}]},{"pos":[10760,10810],"content":"Thrown when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">authType</ph><ept id=\"p1\">&lt;/code&gt;</ept> is out of range.","needQuote":true,"needEscape":true,"source":"Thrown when <code>authType</code> is out of range."},{"pos":[10905,11015],"content":"Thrown when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">authType</ph><ept id=\"p1\">&lt;/code&gt;</ept> is specified as Anonymous but <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">credential</ph><ept id=\"p2\">&lt;/code&gt;</ept> specified credentials.","needQuote":true,"needEscape":true,"source":"Thrown when <code>authType</code> is specified as Anonymous but <code>credential</code> specified credentials."},{"pos":[11524,11574],"content":"The Abort method cancels the asynchronous request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Abort method cancels the asynchronous request.","pos":[0,50]}]},{"pos":[11733,11810],"content":"A <xref:System.IAsyncResult> object that references the asynchronous request.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.IAsyncResult&gt; object that references the asynchronous request.","pos":[0,77],"source":"A <xref:System.IAsyncResult> object that references the asynchronous request."}]},{"pos":[12000,12031],"content":"The object handle is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object handle is not valid.","pos":[0,31]}]},{"pos":[12134,12252],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is null (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>asyncResult</code> is null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[12347,12502],"content":"Thrown if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncResult</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not returned by the corresponding call to &lt;xref:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*&gt;","needQuote":true,"needEscape":true,"source":"Thrown if <code>asyncResult</code> was not returned by the corresponding call to <xref:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*>"},{"pos":[12944,13010],"content":"The AuthType property contains the supported authentication types.","needQuote":true,"needEscape":true,"nodes":[{"content":"The AuthType property contains the supported authentication types.","pos":[0,66]}]},{"pos":[13195,13227],"content":"A supported authentication type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A supported authentication type.","pos":[0,32]}]},{"pos":[13460,13510],"content":"Thrown when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">authType</ph><ept id=\"p1\">&lt;/code&gt;</ept> is out of range.","needQuote":true,"needEscape":true,"source":"Thrown when <code>authType</code> is out of range."},{"pos":[13952,14021],"content":"The AutoBind property specifies whether an automatic bind is allowed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The AutoBind property specifies whether an automatic bind is allowed.","pos":[0,69]}]},{"pos":[14138,14307],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the automatic bind is allowed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the automatic bind is allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15359,15427],"content":"The BeginSendRequest method sends data asynchronously to the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The BeginSendRequest method sends data asynchronously to the server.","pos":[0,68]}]},{"pos":[15778,15860],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"></xref> object."},{"pos":[15973,16131],"content":"A value from <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.PartialResultProcessing\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration that specifies the level of partial result to return.","needQuote":true,"needEscape":true,"source":"A value from <xref href=\"System.DirectoryServices.Protocols.PartialResultProcessing\"></xref> enumeration that specifies the level of partial result to return."},{"pos":[16203,16244],"content":"The <xref:System.AsyncCallback> function.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.AsyncCallback&gt; function.","pos":[0,41],"source":"The <xref:System.AsyncCallback> function."}]},{"pos":[16306,16376],"content":"An <xref:System.Object> that contains the state data for this request.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that contains the state data for this request.","pos":[0,70],"source":"An <xref:System.Object> that contains the state data for this request."}]},{"pos":[16440,16514],"content":"A <xref:System.IAsyncResult> object that references the asynchronous send.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.IAsyncResult&gt; object that references the asynchronous send.","pos":[0,74],"source":"A <xref:System.IAsyncResult> object that references the asynchronous send."}]},{"pos":[16715,16746],"content":"The object handle is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object handle is not valid.","pos":[0,31]}]},{"pos":[16849,17019],"content":"<ph id=\"ph1\">&lt;code&gt;request&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> (<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>request</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[17122,17156],"content":"Partial results are not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Partial results are not supported.","pos":[0,34]}]},{"pos":[17251,17409],"content":"A callback function must be specified if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">partialMode</ph><ept id=\"p1\">&lt;/code&gt;</ept> is equal to <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.Protocols.PartialResultProcessing\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A callback function must be specified if <code>partialMode</code> is equal to <xref href=\"System.DirectoryServices.Protocols.PartialResultProcessing\"></xref>."},{"pos":[18431,18499],"content":"The BeginSendRequest method sends data asynchronously to the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The BeginSendRequest method sends data asynchronously to the server.","pos":[0,68]}]},{"pos":[18875,18957],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"></xref> object."},{"pos":[19030,19080],"content":"The time, in seconds, until the request times out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time, in seconds, until the request times out.","pos":[0,50]}]},{"pos":[19193,19351],"content":"A value from <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.PartialResultProcessing\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration that specifies the level of partial result to return.","needQuote":true,"needEscape":true,"source":"A value from <xref href=\"System.DirectoryServices.Protocols.PartialResultProcessing\"></xref> enumeration that specifies the level of partial result to return."},{"pos":[19423,19464],"content":"The <xref:System.AsyncCallback> function.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.AsyncCallback&gt; function.","pos":[0,41],"source":"The <xref:System.AsyncCallback> function."}]},{"pos":[19526,19596],"content":"An <xref:System.Object> that contains the state data for this request.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that contains the state data for this request.","pos":[0,70],"source":"An <xref:System.Object> that contains the state data for this request."}]},{"pos":[19660,19734],"content":"A <xref:System.IAsyncResult> object that references the asynchronous send.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.IAsyncResult&gt; object that references the asynchronous send.","pos":[0,74],"source":"A <xref:System.IAsyncResult> object that references the asynchronous send."}]},{"pos":[19935,19966],"content":"The object handle is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object handle is not valid.","pos":[0,31]}]},{"pos":[20069,20183],"content":"<ph id=\"ph1\">&lt;code&gt;request&lt;/code&gt;</ph> is null (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>request</code> is null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[20286,20320],"content":"Partial results are not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Partial results are not supported.","pos":[0,34]}]},{"pos":[20415,20573],"content":"A callback function must be specified if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">partialMode</ph><ept id=\"p1\">&lt;/code&gt;</ept> is equal to <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.Protocols.PartialResultProcessing\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A callback function must be specified if <code>partialMode</code> is equal to <xref href=\"System.DirectoryServices.Protocols.PartialResultProcessing\"></xref>."},{"pos":[20999,21064],"content":"The Bind method sends an LDAP bind using the current credentials.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Bind method sends an LDAP bind using the current credentials.","pos":[0,65]}]},{"pos":[21316,21347],"content":"The object handle is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object handle is not valid.","pos":[0,31]}]},{"pos":[21490,21640],"content":"The error code returned by LDAP does not map to one of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.ResultCode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration error codes.","needQuote":true,"needEscape":true,"source":"The error code returned by LDAP does not map to one of the <xref href=\"System.DirectoryServices.Protocols.ResultCode\"></xref> enumeration error codes."},{"pos":[21751,22061],"content":"Either the &lt;xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates<bpt id=\"p1\">*</bpt>&gt; property specifies more than one client certificate to send for authentication, or the &lt;xref:System.DirectoryServices.Protocols.LdapConnection.AuthType<ept id=\"p1\">*</ept>&gt; property is Anonymous and one or more credentials are supplied.","needQuote":true,"needEscape":true,"source":"Either the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates*> property specifies more than one client certificate to send for authentication, or the <xref:System.DirectoryServices.Protocols.LdapConnection.AuthType*> property is Anonymous and one or more credentials are supplied."},{"pos":[22598,22689],"content":"The Bind method sends an LDAP bind using the specified <xref:System.Net.NetworkCredential>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Bind method sends an LDAP bind using the specified &lt;xref:System.Net.NetworkCredential&gt;.","pos":[0,91],"source":"The Bind method sends an LDAP bind using the specified <xref:System.Net.NetworkCredential>."}]},{"pos":[22876,22959],"content":"A <xref:System.Net.NetworkCredential> object that specifies the credentials to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Net.NetworkCredential&gt; object that specifies the credentials to use.","pos":[0,83],"source":"A <xref:System.Net.NetworkCredential> object that specifies the credentials to use."}]},{"pos":[23148,23179],"content":"The object handle is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object handle is not valid.","pos":[0,31]}]},{"pos":[23322,23462],"content":"The error code returned by LDAP does not map to a <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.ResultCode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration error code.","needQuote":true,"needEscape":true,"source":"The error code returned by LDAP does not map to a <xref href=\"System.DirectoryServices.Protocols.ResultCode\"></xref> enumeration error code."},{"pos":[23573,23883],"content":"Either the &lt;xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates<bpt id=\"p1\">*</bpt>&gt; property specifies more than one client certificate to send for authentication, or the &lt;xref:System.DirectoryServices.Protocols.LdapConnection.AuthType<ept id=\"p1\">*</ept>&gt; property is Anonymous and one or more credentials are supplied.","needQuote":true,"needEscape":true,"source":"Either the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates*> property specifies more than one client certificate to send for authentication, or the <xref:System.DirectoryServices.Protocols.LdapConnection.AuthType*> property is Anonymous and one or more credentials are supplied."},{"pos":[24335,24407],"content":"The Credential property contains the network credentials for the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Credential property contains the network credentials for the object.","pos":[0,72]}]},{"pos":[24568,24607],"content":"The network credentials for the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The network credentials for the object.","pos":[0,39]}]},{"pos":[25139,25194],"content":"The Dispose method closes and releases the LDAP handle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Dispose method closes and releases the LDAP handle.","pos":[0,55]}]},{"pos":[25842,25923],"content":"The Dispose method closes the connection and optionally releases the LDAP handle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Dispose method closes the connection and optionally releases the LDAP handle.","pos":[0,81]}]},{"pos":[26078,26318],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the handle is released when the connection is closed or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the connection is closed without releasing the handle.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handle is released when the connection is closed or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the connection is closed without releasing the handle."},{"pos":[26960,27020],"content":"The EndSendRequest method completes an asynchronous request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The EndSendRequest method completes an asynchronous request.","pos":[0,60]}]},{"pos":[27236,27315],"content":"An <xref:System.IAsyncResult> object that contains state data for this request.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IAsyncResult&gt; object that contains state data for this request.","pos":[0,79],"source":"An <xref:System.IAsyncResult> object that contains state data for this request."}]},{"pos":[27412,27536],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the results of the request.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"></xref> object that contains the results of the request."},{"pos":[27735,27809],"content":"Thrown if the object is already disposed.  The object handle is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Thrown if the object is already disposed.  The object handle is not valid.","pos":[0,74],"nodes":[{"content":"Thrown if the object is already disposed.","pos":[0,41]},{"content":"The object handle is not valid.","pos":[43,74]}]}]},{"pos":[27912,28030],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is null (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>asyncResult</code> is null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[28125,28290],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> does not match the <ph id=\"ph2\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> returned in the <ph id=\"ph3\">&lt;xref:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*&gt;</ph> call.","needQuote":true,"needEscape":true,"source":"<code>asyncResult</code> does not match the <code>asyncResult</code> returned in the <xref:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*> call."},{"pos":[28433,28574],"content":"The error code returned by LDAP does not map to a  <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.ResultCode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration error code.","needQuote":true,"needEscape":true,"source":"The error code returned by LDAP does not map to a  <xref href=\"System.DirectoryServices.Protocols.ResultCode\"></xref> enumeration error code."},{"pos":[28745,28872],"content":"Thrown if the server returned a <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with an error.","needQuote":true,"needEscape":true,"source":"Thrown if the server returned a <xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"></xref> object with an error."},{"pos":[29318,29616],"content":"The Finalize method allows an <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to attempt to free resources and perform other cleanup operations before the <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapConnection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is reclaimed by garbage collection.","needQuote":true,"needEscape":true,"source":"The Finalize method allows an <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> object to attempt to free resources and perform other cleanup operations before the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> object is reclaimed by garbage collection."},{"pos":[30336,30420],"content":"The GetPartialResults method retrieves partial results of an asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The GetPartialResults method retrieves partial results of an asynchronous operation.","pos":[0,84]}]},{"pos":[30646,30725],"content":"An <xref:System.IAsyncResult> object that contains state data for this request.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IAsyncResult&gt; object that contains state data for this request.","pos":[0,79],"source":"An <xref:System.IAsyncResult> object that contains state data for this request."}]},{"pos":[30829,30953],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.PartialResultsCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the partial results.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.Protocols.PartialResultsCollection\"></xref> object that contains the partial results."},{"pos":[31155,31218],"content":"The object is already disposed. The object handle is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object is already disposed. The object handle is not valid.","pos":[0,63],"nodes":[{"content":"The object is already disposed.","pos":[0,31]},{"content":"The object handle is not valid.","pos":[32,63]}]}]},{"pos":[31321,31439],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is null (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>asyncResult</code> is null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[31534,31699],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> does not match the <ph id=\"ph2\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> returned in the <ph id=\"ph3\">&lt;xref:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*&gt;</ph> call.","needQuote":true,"needEscape":true,"source":"<code>asyncResult</code> does not match the <code>asyncResult</code> returned in the <xref:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*> call."},{"pos":[31842,31983],"content":"The error code returned by LDAP does not map to a  <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.ResultCode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration error code.","needQuote":true,"needEscape":true,"source":"The error code returned by LDAP does not map to a  <xref href=\"System.DirectoryServices.Protocols.ResultCode\"></xref> enumeration error code."},{"pos":[32154,32281],"content":"Thrown if the server returned a <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with an error.","needQuote":true,"needEscape":true,"source":"Thrown if the server returned a <xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"></xref> object with an error."},{"pos":[32896,33031],"content":"The SendRequest method sends a single <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> as an LDAP v3 operation.","needQuote":true,"needEscape":true,"source":"The SendRequest method sends a single <xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"></xref> as an LDAP v3 operation."},{"pos":[33316,33424],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the request.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"></xref> object that contains the request."},{"pos":[33521,33647],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the response from the server.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"></xref> object that contains the response from the server."},{"pos":[33843,33906],"content":"The object is already disposed. The object handle is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object is already disposed. The object handle is not valid.","pos":[0,63],"nodes":[{"content":"The object is already disposed.","pos":[0,31]},{"content":"The object handle is not valid.","pos":[32,63]}]}]},{"pos":[34009,34127],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is null (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>asyncResult</code> is null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[34230,34265],"content":"Request is of type DsmlAuthRequest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Request is of type DsmlAuthRequest.","pos":[0,35]}]},{"pos":[34408,34548],"content":"The error code returned by LDAP does not map to a <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.ResultCode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration error code.","needQuote":true,"needEscape":true,"source":"The error code returned by LDAP does not map to a <xref href=\"System.DirectoryServices.Protocols.ResultCode\"></xref> enumeration error code."},{"pos":[34719,34846],"content":"Thrown if the server returned a <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with an error.","needQuote":true,"needEscape":true,"source":"Thrown if the server returned a <xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"></xref> object with an error."},{"pos":[35520,35655],"content":"The SendRequest method sends a single <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> as an LDAP v3 operation.","needQuote":true,"needEscape":true,"source":"The SendRequest method sends a single <xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"></xref> as an LDAP v3 operation."},{"pos":[35956,36064],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the request.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"></xref> object that contains the request."},{"pos":[36137,36197],"content":"The length of time, in seconds, until the request times out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of time, in seconds, until the request times out.","pos":[0,60]}]},{"pos":[36294,36420],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the response from the server.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"></xref> object that contains the response from the server."},{"pos":[36616,36679],"content":"The object is already disposed. The object handle is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object is already disposed. The object handle is not valid.","pos":[0,63],"nodes":[{"content":"The object is already disposed.","pos":[0,31]},{"content":"The object handle is not valid.","pos":[32,63]}]}]},{"pos":[36782,36900],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is null (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>asyncResult</code> is null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[37003,37038],"content":"Request is of type DsmlAuthRequest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Request is of type DsmlAuthRequest.","pos":[0,35]}]},{"pos":[37181,37326],"content":"The error code returned by LDAP does not map to a  the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.ResultCode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration error code.","needQuote":true,"needEscape":true,"source":"The error code returned by LDAP does not map to a  the <xref href=\"System.DirectoryServices.Protocols.ResultCode\"></xref> enumeration error code."},{"pos":[37497,37624],"content":"Thrown if the server returned a <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with an error.","needQuote":true,"needEscape":true,"source":"Thrown if the server returned a <xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"></xref> object with an error."},{"pos":[38096,38253],"content":"The SessionOptions property contains an <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapSessionOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies the session options.","needQuote":true,"needEscape":true,"source":"The SessionOptions property contains an <xref href=\"System.DirectoryServices.Protocols.LdapSessionOptions\"></xref> object that specifies the session options."},{"pos":[38265,38762],"content":"If the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> property on the <xref:System.DirectoryServices.Protocols.LdapConnection> object and <xref:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate%2A> property on the <xref:System.DirectoryServices.Protocols.LdapSessionOptions> object are both set, the certificate specified in the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> property is ignored.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the &lt;xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A&gt; property on the &lt;xref:System.DirectoryServices.Protocols.LdapConnection&gt; object and &lt;xref:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate%2A&gt; property on the &lt;xref:System.DirectoryServices.Protocols.LdapSessionOptions&gt; object are both set, the certificate specified in the &lt;xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A&gt; property is ignored.","pos":[0,497],"source":"If the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> property on the <xref:System.DirectoryServices.Protocols.LdapConnection> object and <xref:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate%2A> property on the <xref:System.DirectoryServices.Protocols.LdapSessionOptions> object are both set, the certificate specified in the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> property is ignored."}]},{"pos":[38968,39088],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapSessionOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies the session options.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.DirectoryServices.Protocols.LdapSessionOptions\"></xref> object that specifies the session options."},{"pos":[39620,39774],"content":"The Timeout property contains the length of time, in seconds, before the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> times out.","needQuote":true,"needEscape":true,"source":"The Timeout property contains the length of time, in seconds, before the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> times out."},{"pos":[39904,40028],"content":"The length of time, in seconds, before the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> times out.","needQuote":true,"needEscape":true,"source":"The length of time, in seconds, before the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> times out."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.Protocols.LdapConnection\n  id: LdapConnection\n  children:\n  - System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)\n  - System.DirectoryServices.Protocols.LdapConnection.#ctor(System.String)\n  - System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)\n  - System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)\n  - System.DirectoryServices.Protocols.LdapConnection.Abort(System.IAsyncResult)\n  - System.DirectoryServices.Protocols.LdapConnection.AuthType\n  - System.DirectoryServices.Protocols.LdapConnection.AutoBind\n  - System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)\n  - System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)\n  - System.DirectoryServices.Protocols.LdapConnection.Bind\n  - System.DirectoryServices.Protocols.LdapConnection.Bind(System.Net.NetworkCredential)\n  - System.DirectoryServices.Protocols.LdapConnection.Credential\n  - System.DirectoryServices.Protocols.LdapConnection.Dispose\n  - System.DirectoryServices.Protocols.LdapConnection.Dispose(System.Boolean)\n  - System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(System.IAsyncResult)\n  - System.DirectoryServices.Protocols.LdapConnection.Finalize\n  - System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(System.IAsyncResult)\n  - System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)\n  - System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)\n  - System.DirectoryServices.Protocols.LdapConnection.SessionOptions\n  - System.DirectoryServices.Protocols.LdapConnection.Timeout\n  langs:\n  - csharp\n  name: LdapConnection\n  nameWithType: LdapConnection\n  fullName: System.DirectoryServices.Protocols.LdapConnection\n  type: Class\n  summary: The LdapConnection class creates a TCP/IP or UDP LDAP connection to Microsoft Active Directory Domain Services or an LDAP server.\n  remarks: If the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> property on the LdapConnection object and <xref:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate%2A> property on the <xref:System.DirectoryServices.Protocols.LdapSessionOptions> object are both set, the certificate specified in the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> property is ignored.\n  syntax:\n    content: 'public class LdapConnection : System.DirectoryServices.Protocols.DirectoryConnection, IDisposable'\n  inheritance:\n  - System.Object\n  - System.DirectoryServices.Protocols.DirectoryConnection\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates\n  - System.DirectoryServices.Protocols.DirectoryConnection.Directory\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)\n  id: '#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)'\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: LdapConnection(LdapDirectoryIdentifier)\n  nameWithType: LdapConnection.LdapConnection(LdapDirectoryIdentifier)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.LdapConnection(LdapDirectoryIdentifier)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The LdapConnection constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> class using the specified directory identifier. The logon credentials and the Negotiate Authentication are used to connect to the LDAP server.\n  syntax:\n    content: public LdapConnection (System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier);\n    parameters:\n    - id: identifier\n      type: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n      description: An <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> object that specifies the server.\n  overload: System.DirectoryServices.Protocols.LdapConnection.#ctor*\n  exceptions:\n  - type: System.DirectoryServices.Protocols.LdapException\n    commentId: T:System.DirectoryServices.Protocols.LdapException\n    description: Thrown if it fails to create a connection block or fails to open a connection to server.\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: LdapConnection(String)\n  nameWithType: LdapConnection.LdapConnection(String)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.LdapConnection(String)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The LdapConnection constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> class using the specified server.\n  syntax:\n    content: public LdapConnection (string server);\n    parameters:\n    - id: server\n      type: System.String\n      description: A string specifying the server  which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the right end of the string by a colon (:).\n  overload: System.DirectoryServices.Protocols.LdapConnection.#ctor*\n  exceptions:\n  - type: System.DirectoryServices.Protocols.LdapException\n    commentId: T:System.DirectoryServices.Protocols.LdapException\n    description: Thrown if it fails to create a connection block or fails to open a connection to server.\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)\n  id: '#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)'\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: LdapConnection(LdapDirectoryIdentifier,NetworkCredential)\n  nameWithType: LdapConnection.LdapConnection(LdapDirectoryIdentifier,NetworkCredential)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.LdapConnection(LdapDirectoryIdentifier,NetworkCredential)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The LdapConnection constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> class using the specified directory identifier and network credentials. Negotiate Authentication is used.\n  syntax:\n    content: public LdapConnection (System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier, System.Net.NetworkCredential credential);\n    parameters:\n    - id: identifier\n      type: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n      description: An <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> object that specifies the server.\n    - id: credential\n      type: System.Net.NetworkCredential\n      description: A <xref:System.Net.NetworkCredential> object that specifies the credentials to use.\n  overload: System.DirectoryServices.Protocols.LdapConnection.#ctor*\n  exceptions:\n  - type: System.DirectoryServices.Protocols.LdapException\n    commentId: T:System.DirectoryServices.Protocols.LdapException\n    description: Thrown if it fails to create a connection block or fails to open a connection to server.\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)\n  id: '#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)'\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: LdapConnection(LdapDirectoryIdentifier,NetworkCredential,AuthType)\n  nameWithType: LdapConnection.LdapConnection(LdapDirectoryIdentifier,NetworkCredential,AuthType)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.LdapConnection(LdapDirectoryIdentifier,NetworkCredential,AuthType)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The LdapConnection constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> class using the specified directory identifier, network credentials, and authentication type.\n  syntax:\n    content: public LdapConnection (System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier, System.Net.NetworkCredential credential, System.DirectoryServices.Protocols.AuthType authType);\n    parameters:\n    - id: identifier\n      type: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n      description: An <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> object that specifies the server.\n    - id: credential\n      type: System.Net.NetworkCredential\n      description: A <xref:System.Net.NetworkCredential> object that specifies the credentials to use.\n    - id: authType\n      type: System.DirectoryServices.Protocols.AuthType\n      description: A <xref href=\"System.DirectoryServices.Protocols.AuthType\"></xref> values that specifies the type of authentication to use.\n  overload: System.DirectoryServices.Protocols.LdapConnection.#ctor*\n  exceptions:\n  - type: System.DirectoryServices.Protocols.LdapException\n    commentId: T:System.DirectoryServices.Protocols.LdapException\n    description: Thrown if it fails to create a connection block or fails to open a connection to server.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: Thrown when <code>authType</code> is out of range.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Thrown when <code>authType</code> is specified as Anonymous but <code>credential</code> specified credentials.\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.Abort(System.IAsyncResult)\n  id: Abort(System.IAsyncResult)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: Abort(IAsyncResult)\n  nameWithType: LdapConnection.Abort(IAsyncResult)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.Abort(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The Abort method cancels the asynchronous request.\n  syntax:\n    content: public void Abort (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: A <xref:System.IAsyncResult> object that references the asynchronous request.\n  overload: System.DirectoryServices.Protocols.LdapConnection.Abort*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object handle is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>asyncResult</code> is null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Thrown if <code>asyncResult</code> was not returned by the corresponding call to <xref:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*>\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.AuthType\n  id: AuthType\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: AuthType\n  nameWithType: LdapConnection.AuthType\n  fullName: System.DirectoryServices.Protocols.LdapConnection.AuthType\n  type: Property\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The AuthType property contains the supported authentication types.\n  syntax:\n    content: public System.DirectoryServices.Protocols.AuthType AuthType { get; set; }\n    return:\n      type: System.DirectoryServices.Protocols.AuthType\n      description: A supported authentication type.\n  overload: System.DirectoryServices.Protocols.LdapConnection.AuthType*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: Thrown when <code>authType</code> is out of range.\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.AutoBind\n  id: AutoBind\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: AutoBind\n  nameWithType: LdapConnection.AutoBind\n  fullName: System.DirectoryServices.Protocols.LdapConnection.AutoBind\n  type: Property\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The AutoBind property specifies whether an automatic bind is allowed.\n  syntax:\n    content: public bool AutoBind { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the automatic bind is allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.DirectoryServices.Protocols.LdapConnection.AutoBind*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)\n  id: BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: BeginSendRequest(DirectoryRequest,PartialResultProcessing,AsyncCallback,Object)\n  nameWithType: LdapConnection.BeginSendRequest(DirectoryRequest,PartialResultProcessing,AsyncCallback,Object)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(DirectoryRequest,PartialResultProcessing,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The BeginSendRequest method sends data asynchronously to the server.\n  syntax:\n    content: public IAsyncResult BeginSendRequest (System.DirectoryServices.Protocols.DirectoryRequest request, System.DirectoryServices.Protocols.PartialResultProcessing partialMode, AsyncCallback callback, object state);\n    parameters:\n    - id: request\n      type: System.DirectoryServices.Protocols.DirectoryRequest\n      description: A <xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"></xref> object.\n    - id: partialMode\n      type: System.DirectoryServices.Protocols.PartialResultProcessing\n      description: A value from <xref href=\"System.DirectoryServices.Protocols.PartialResultProcessing\"></xref> enumeration that specifies the level of partial result to return.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref:System.AsyncCallback> function.\n    - id: state\n      type: System.Object\n      description: An <xref:System.Object> that contains the state data for this request.\n    return:\n      type: System.IAsyncResult\n      description: A <xref:System.IAsyncResult> object that references the asynchronous send.\n  overload: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object handle is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>request</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Partial results are not supported.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A callback function must be specified if <code>partialMode</code> is equal to <xref href=\"System.DirectoryServices.Protocols.PartialResultProcessing\"></xref>.\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)\n  id: BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: BeginSendRequest(DirectoryRequest,TimeSpan,PartialResultProcessing,AsyncCallback,Object)\n  nameWithType: LdapConnection.BeginSendRequest(DirectoryRequest,TimeSpan,PartialResultProcessing,AsyncCallback,Object)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(DirectoryRequest,TimeSpan,PartialResultProcessing,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The BeginSendRequest method sends data asynchronously to the server.\n  syntax:\n    content: public IAsyncResult BeginSendRequest (System.DirectoryServices.Protocols.DirectoryRequest request, TimeSpan requestTimeout, System.DirectoryServices.Protocols.PartialResultProcessing partialMode, AsyncCallback callback, object state);\n    parameters:\n    - id: request\n      type: System.DirectoryServices.Protocols.DirectoryRequest\n      description: A <xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"></xref> object.\n    - id: requestTimeout\n      type: System.TimeSpan\n      description: The time, in seconds, until the request times out.\n    - id: partialMode\n      type: System.DirectoryServices.Protocols.PartialResultProcessing\n      description: A value from <xref href=\"System.DirectoryServices.Protocols.PartialResultProcessing\"></xref> enumeration that specifies the level of partial result to return.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref:System.AsyncCallback> function.\n    - id: state\n      type: System.Object\n      description: An <xref:System.Object> that contains the state data for this request.\n    return:\n      type: System.IAsyncResult\n      description: A <xref:System.IAsyncResult> object that references the asynchronous send.\n  overload: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object handle is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>request</code> is null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Partial results are not supported.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A callback function must be specified if <code>partialMode</code> is equal to <xref href=\"System.DirectoryServices.Protocols.PartialResultProcessing\"></xref>.\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.Bind\n  id: Bind\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: Bind()\n  nameWithType: LdapConnection.Bind()\n  fullName: System.DirectoryServices.Protocols.LdapConnection.Bind()\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The Bind method sends an LDAP bind using the current credentials.\n  syntax:\n    content: public void Bind ();\n    parameters: []\n  overload: System.DirectoryServices.Protocols.LdapConnection.Bind*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object handle is not valid.\n  - type: System.DirectoryServices.Protocols.LdapException\n    commentId: T:System.DirectoryServices.Protocols.LdapException\n    description: The error code returned by LDAP does not map to one of the <xref href=\"System.DirectoryServices.Protocols.ResultCode\"></xref> enumeration error codes.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Either the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates*> property specifies more than one client certificate to send for authentication, or the <xref:System.DirectoryServices.Protocols.LdapConnection.AuthType*> property is Anonymous and one or more credentials are supplied.\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.Bind(System.Net.NetworkCredential)\n  id: Bind(System.Net.NetworkCredential)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: Bind(NetworkCredential)\n  nameWithType: LdapConnection.Bind(NetworkCredential)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.Bind(NetworkCredential)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The Bind method sends an LDAP bind using the specified <xref:System.Net.NetworkCredential>.\n  syntax:\n    content: public void Bind (System.Net.NetworkCredential newCredential);\n    parameters:\n    - id: newCredential\n      type: System.Net.NetworkCredential\n      description: A <xref:System.Net.NetworkCredential> object that specifies the credentials to use.\n  overload: System.DirectoryServices.Protocols.LdapConnection.Bind*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object handle is not valid.\n  - type: System.DirectoryServices.Protocols.LdapException\n    commentId: T:System.DirectoryServices.Protocols.LdapException\n    description: The error code returned by LDAP does not map to a <xref href=\"System.DirectoryServices.Protocols.ResultCode\"></xref> enumeration error code.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Either the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates*> property specifies more than one client certificate to send for authentication, or the <xref:System.DirectoryServices.Protocols.LdapConnection.AuthType*> property is Anonymous and one or more credentials are supplied.\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.Credential\n  id: Credential\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: Credential\n  nameWithType: LdapConnection.Credential\n  fullName: System.DirectoryServices.Protocols.LdapConnection.Credential\n  type: Property\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The Credential property contains the network credentials for the object.\n  syntax:\n    content: public override System.Net.NetworkCredential Credential { set; }\n    return:\n      type: System.Net.NetworkCredential\n      description: The network credentials for the object.\n  overload: System.DirectoryServices.Protocols.LdapConnection.Credential*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.Dispose\n  id: Dispose\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: LdapConnection.Dispose()\n  fullName: System.DirectoryServices.Protocols.LdapConnection.Dispose()\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The Dispose method closes and releases the LDAP handle.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.DirectoryServices.Protocols.LdapConnection.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: LdapConnection.Dispose(Boolean)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The Dispose method closes the connection and optionally releases the LDAP handle.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handle is released when the connection is closed or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the connection is closed without releasing the handle.\n  overload: System.DirectoryServices.Protocols.LdapConnection.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(System.IAsyncResult)\n  id: EndSendRequest(System.IAsyncResult)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: EndSendRequest(IAsyncResult)\n  nameWithType: LdapConnection.EndSendRequest(IAsyncResult)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The EndSendRequest method completes an asynchronous request.\n  syntax:\n    content: public System.DirectoryServices.Protocols.DirectoryResponse EndSendRequest (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: An <xref:System.IAsyncResult> object that contains state data for this request.\n    return:\n      type: System.DirectoryServices.Protocols.DirectoryResponse\n      description: A <xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"></xref> object that contains the results of the request.\n  overload: System.DirectoryServices.Protocols.LdapConnection.EndSendRequest*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: Thrown if the object is already disposed.  The object handle is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>asyncResult</code> is null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>asyncResult</code> does not match the <code>asyncResult</code> returned in the <xref:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*> call.\n  - type: System.DirectoryServices.Protocols.LdapException\n    commentId: T:System.DirectoryServices.Protocols.LdapException\n    description: The error code returned by LDAP does not map to a  <xref href=\"System.DirectoryServices.Protocols.ResultCode\"></xref> enumeration error code.\n  - type: System.DirectoryServices.Protocols.DirectoryOperationException\n    commentId: T:System.DirectoryServices.Protocols.DirectoryOperationException\n    description: Thrown if the server returned a <xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"></xref> object with an error.\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.Finalize\n  id: Finalize\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: LdapConnection.Finalize()\n  fullName: System.DirectoryServices.Protocols.LdapConnection.Finalize()\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The Finalize method allows an <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> object to attempt to free resources and perform other cleanup operations before the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> object is reclaimed by garbage collection.\n  syntax:\n    content: ~LdapConnection ();\n    parameters: []\n  overload: System.DirectoryServices.Protocols.LdapConnection.Finalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(System.IAsyncResult)\n  id: GetPartialResults(System.IAsyncResult)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: GetPartialResults(IAsyncResult)\n  nameWithType: LdapConnection.GetPartialResults(IAsyncResult)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The GetPartialResults method retrieves partial results of an asynchronous operation.\n  syntax:\n    content: public System.DirectoryServices.Protocols.PartialResultsCollection GetPartialResults (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: An <xref:System.IAsyncResult> object that contains state data for this request.\n    return:\n      type: System.DirectoryServices.Protocols.PartialResultsCollection\n      description: A <xref href=\"System.DirectoryServices.Protocols.PartialResultsCollection\"></xref> object that contains the partial results.\n  overload: System.DirectoryServices.Protocols.LdapConnection.GetPartialResults*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object is already disposed. The object handle is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>asyncResult</code> is null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>asyncResult</code> does not match the <code>asyncResult</code> returned in the <xref:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*> call.\n  - type: System.DirectoryServices.Protocols.LdapException\n    commentId: T:System.DirectoryServices.Protocols.LdapException\n    description: The error code returned by LDAP does not map to a  <xref href=\"System.DirectoryServices.Protocols.ResultCode\"></xref> enumeration error code.\n  - type: System.DirectoryServices.Protocols.DirectoryOperationException\n    commentId: T:System.DirectoryServices.Protocols.DirectoryOperationException\n    description: Thrown if the server returned a <xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"></xref> object with an error.\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)\n  id: SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: SendRequest(DirectoryRequest)\n  nameWithType: LdapConnection.SendRequest(DirectoryRequest)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.SendRequest(DirectoryRequest)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The SendRequest method sends a single <xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"></xref> as an LDAP v3 operation.\n  syntax:\n    content: public override System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request);\n    parameters:\n    - id: request\n      type: System.DirectoryServices.Protocols.DirectoryRequest\n      description: A <xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"></xref> object that contains the request.\n    return:\n      type: System.DirectoryServices.Protocols.DirectoryResponse\n      description: A <xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"></xref> object that contains the response from the server.\n  overload: System.DirectoryServices.Protocols.LdapConnection.SendRequest*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object is already disposed. The object handle is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>asyncResult</code> is null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Request is of type DsmlAuthRequest.\n  - type: System.DirectoryServices.Protocols.LdapException\n    commentId: T:System.DirectoryServices.Protocols.LdapException\n    description: The error code returned by LDAP does not map to a <xref href=\"System.DirectoryServices.Protocols.ResultCode\"></xref> enumeration error code.\n  - type: System.DirectoryServices.Protocols.DirectoryOperationException\n    commentId: T:System.DirectoryServices.Protocols.DirectoryOperationException\n    description: Thrown if the server returned a <xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"></xref> object with an error.\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)\n  id: SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: SendRequest(DirectoryRequest,TimeSpan)\n  nameWithType: LdapConnection.SendRequest(DirectoryRequest,TimeSpan)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.SendRequest(DirectoryRequest,TimeSpan)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The SendRequest method sends a single <xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"></xref> as an LDAP v3 operation.\n  syntax:\n    content: public System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request, TimeSpan requestTimeout);\n    parameters:\n    - id: request\n      type: System.DirectoryServices.Protocols.DirectoryRequest\n      description: A <xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"></xref> object that contains the request.\n    - id: requestTimeout\n      type: System.TimeSpan\n      description: The length of time, in seconds, until the request times out.\n    return:\n      type: System.DirectoryServices.Protocols.DirectoryResponse\n      description: A <xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"></xref> object that contains the response from the server.\n  overload: System.DirectoryServices.Protocols.LdapConnection.SendRequest*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object is already disposed. The object handle is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>asyncResult</code> is null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Request is of type DsmlAuthRequest.\n  - type: System.DirectoryServices.Protocols.LdapException\n    commentId: T:System.DirectoryServices.Protocols.LdapException\n    description: The error code returned by LDAP does not map to a  the <xref href=\"System.DirectoryServices.Protocols.ResultCode\"></xref> enumeration error code.\n  - type: System.DirectoryServices.Protocols.DirectoryOperationException\n    commentId: T:System.DirectoryServices.Protocols.DirectoryOperationException\n    description: Thrown if the server returned a <xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"></xref> object with an error.\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.SessionOptions\n  id: SessionOptions\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: SessionOptions\n  nameWithType: LdapConnection.SessionOptions\n  fullName: System.DirectoryServices.Protocols.LdapConnection.SessionOptions\n  type: Property\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The SessionOptions property contains an <xref href=\"System.DirectoryServices.Protocols.LdapSessionOptions\"></xref> object that specifies the session options.\n  remarks: If the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> property on the <xref:System.DirectoryServices.Protocols.LdapConnection> object and <xref:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate%2A> property on the <xref:System.DirectoryServices.Protocols.LdapSessionOptions> object are both set, the certificate specified in the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> property is ignored.\n  syntax:\n    content: public System.DirectoryServices.Protocols.LdapSessionOptions SessionOptions { get; }\n    return:\n      type: System.DirectoryServices.Protocols.LdapSessionOptions\n      description: An <xref href=\"System.DirectoryServices.Protocols.LdapSessionOptions\"></xref> object that specifies the session options.\n  overload: System.DirectoryServices.Protocols.LdapConnection.SessionOptions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.LdapConnection.Timeout\n  id: Timeout\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  langs:\n  - csharp\n  name: Timeout\n  nameWithType: LdapConnection.Timeout\n  fullName: System.DirectoryServices.Protocols.LdapConnection.Timeout\n  type: Property\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The Timeout property contains the length of time, in seconds, before the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> times out.\n  syntax:\n    content: public override TimeSpan Timeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The length of time, in seconds, before the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> times out.\n  overload: System.DirectoryServices.Protocols.LdapConnection.Timeout*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.DirectoryServices.Protocols.DirectoryConnection\n  isExternal: false\n  name: System.DirectoryServices.Protocols.DirectoryConnection\n- uid: System.DirectoryServices.Protocols.LdapException\n  parent: System.DirectoryServices.Protocols\n  isExternal: false\n  name: LdapException\n  nameWithType: LdapException\n  fullName: System.DirectoryServices.Protocols.LdapException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.DirectoryServices.Protocols.DirectoryOperationException\n  parent: System.DirectoryServices.Protocols\n  isExternal: false\n  name: DirectoryOperationException\n  nameWithType: DirectoryOperationException\n  fullName: System.DirectoryServices.Protocols.DirectoryOperationException\n- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: LdapConnection(LdapDirectoryIdentifier)\n  nameWithType: LdapConnection.LdapConnection(LdapDirectoryIdentifier)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.LdapConnection(LdapDirectoryIdentifier)\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  parent: System.DirectoryServices.Protocols\n  isExternal: false\n  name: LdapDirectoryIdentifier\n  nameWithType: LdapDirectoryIdentifier\n  fullName: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor(System.String)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: LdapConnection(String)\n  nameWithType: LdapConnection.LdapConnection(String)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.LdapConnection(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: LdapConnection(LdapDirectoryIdentifier,NetworkCredential)\n  nameWithType: LdapConnection.LdapConnection(LdapDirectoryIdentifier,NetworkCredential)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.LdapConnection(LdapDirectoryIdentifier,NetworkCredential)\n- uid: System.Net.NetworkCredential\n  parent: System.Net\n  isExternal: true\n  name: NetworkCredential\n  nameWithType: NetworkCredential\n  fullName: System.Net.NetworkCredential\n- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: LdapConnection(LdapDirectoryIdentifier,NetworkCredential,AuthType)\n  nameWithType: LdapConnection.LdapConnection(LdapDirectoryIdentifier,NetworkCredential,AuthType)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.LdapConnection(LdapDirectoryIdentifier,NetworkCredential,AuthType)\n- uid: System.DirectoryServices.Protocols.AuthType\n  parent: System.DirectoryServices.Protocols\n  isExternal: false\n  name: AuthType\n  nameWithType: AuthType\n  fullName: System.DirectoryServices.Protocols.AuthType\n- uid: System.DirectoryServices.Protocols.LdapConnection.Abort(System.IAsyncResult)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: Abort(IAsyncResult)\n  nameWithType: LdapConnection.Abort(IAsyncResult)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.Abort(IAsyncResult)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.DirectoryServices.Protocols.LdapConnection.AuthType\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: AuthType\n  nameWithType: LdapConnection.AuthType\n  fullName: System.DirectoryServices.Protocols.LdapConnection.AuthType\n- uid: System.DirectoryServices.Protocols.LdapConnection.AutoBind\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: AutoBind\n  nameWithType: LdapConnection.AutoBind\n  fullName: System.DirectoryServices.Protocols.LdapConnection.AutoBind\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: BeginSendRequest(DirectoryRequest,PartialResultProcessing,AsyncCallback,Object)\n  nameWithType: LdapConnection.BeginSendRequest(DirectoryRequest,PartialResultProcessing,AsyncCallback,Object)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(DirectoryRequest,PartialResultProcessing,AsyncCallback,Object)\n- uid: System.DirectoryServices.Protocols.DirectoryRequest\n  parent: System.DirectoryServices.Protocols\n  isExternal: false\n  name: DirectoryRequest\n  nameWithType: DirectoryRequest\n  fullName: System.DirectoryServices.Protocols.DirectoryRequest\n- uid: System.DirectoryServices.Protocols.PartialResultProcessing\n  parent: System.DirectoryServices.Protocols\n  isExternal: false\n  name: PartialResultProcessing\n  nameWithType: PartialResultProcessing\n  fullName: System.DirectoryServices.Protocols.PartialResultProcessing\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: BeginSendRequest(DirectoryRequest,TimeSpan,PartialResultProcessing,AsyncCallback,Object)\n  nameWithType: LdapConnection.BeginSendRequest(DirectoryRequest,TimeSpan,PartialResultProcessing,AsyncCallback,Object)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(DirectoryRequest,TimeSpan,PartialResultProcessing,AsyncCallback,Object)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DirectoryServices.Protocols.LdapConnection.Bind\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: Bind()\n  nameWithType: LdapConnection.Bind()\n  fullName: System.DirectoryServices.Protocols.LdapConnection.Bind()\n- uid: System.DirectoryServices.Protocols.LdapConnection.Bind(System.Net.NetworkCredential)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: Bind(NetworkCredential)\n  nameWithType: LdapConnection.Bind(NetworkCredential)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.Bind(NetworkCredential)\n- uid: System.DirectoryServices.Protocols.LdapConnection.Credential\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: Credential\n  nameWithType: LdapConnection.Credential\n  fullName: System.DirectoryServices.Protocols.LdapConnection.Credential\n- uid: System.DirectoryServices.Protocols.LdapConnection.Dispose\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: Dispose()\n  nameWithType: LdapConnection.Dispose()\n  fullName: System.DirectoryServices.Protocols.LdapConnection.Dispose()\n- uid: System.DirectoryServices.Protocols.LdapConnection.Dispose(System.Boolean)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: LdapConnection.Dispose(Boolean)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.Dispose(Boolean)\n- uid: System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(System.IAsyncResult)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: EndSendRequest(IAsyncResult)\n  nameWithType: LdapConnection.EndSendRequest(IAsyncResult)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(IAsyncResult)\n- uid: System.DirectoryServices.Protocols.DirectoryResponse\n  parent: System.DirectoryServices.Protocols\n  isExternal: false\n  name: DirectoryResponse\n  nameWithType: DirectoryResponse\n  fullName: System.DirectoryServices.Protocols.DirectoryResponse\n- uid: System.DirectoryServices.Protocols.LdapConnection.Finalize\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: Finalize()\n  nameWithType: LdapConnection.Finalize()\n  fullName: System.DirectoryServices.Protocols.LdapConnection.Finalize()\n- uid: System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(System.IAsyncResult)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: GetPartialResults(IAsyncResult)\n  nameWithType: LdapConnection.GetPartialResults(IAsyncResult)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(IAsyncResult)\n- uid: System.DirectoryServices.Protocols.PartialResultsCollection\n  parent: System.DirectoryServices.Protocols\n  isExternal: false\n  name: PartialResultsCollection\n  nameWithType: PartialResultsCollection\n  fullName: System.DirectoryServices.Protocols.PartialResultsCollection\n- uid: System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: SendRequest(DirectoryRequest)\n  nameWithType: LdapConnection.SendRequest(DirectoryRequest)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.SendRequest(DirectoryRequest)\n- uid: System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: SendRequest(DirectoryRequest,TimeSpan)\n  nameWithType: LdapConnection.SendRequest(DirectoryRequest,TimeSpan)\n  fullName: System.DirectoryServices.Protocols.LdapConnection.SendRequest(DirectoryRequest,TimeSpan)\n- uid: System.DirectoryServices.Protocols.LdapConnection.SessionOptions\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: SessionOptions\n  nameWithType: LdapConnection.SessionOptions\n  fullName: System.DirectoryServices.Protocols.LdapConnection.SessionOptions\n- uid: System.DirectoryServices.Protocols.LdapSessionOptions\n  parent: System.DirectoryServices.Protocols\n  isExternal: false\n  name: LdapSessionOptions\n  nameWithType: LdapSessionOptions\n  fullName: System.DirectoryServices.Protocols.LdapSessionOptions\n- uid: System.DirectoryServices.Protocols.LdapConnection.Timeout\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: Timeout\n  nameWithType: LdapConnection.Timeout\n  fullName: System.DirectoryServices.Protocols.LdapConnection.Timeout\n- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor*\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: LdapConnection\n  nameWithType: LdapConnection.LdapConnection\n- uid: System.DirectoryServices.Protocols.LdapConnection.Abort*\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: Abort\n  nameWithType: LdapConnection.Abort\n- uid: System.DirectoryServices.Protocols.LdapConnection.AuthType*\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: AuthType\n  nameWithType: LdapConnection.AuthType\n- uid: System.DirectoryServices.Protocols.LdapConnection.AutoBind*\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: AutoBind\n  nameWithType: LdapConnection.AutoBind\n- uid: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: BeginSendRequest\n  nameWithType: LdapConnection.BeginSendRequest\n- uid: System.DirectoryServices.Protocols.LdapConnection.Bind*\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: Bind\n  nameWithType: LdapConnection.Bind\n- uid: System.DirectoryServices.Protocols.LdapConnection.Credential*\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: Credential\n  nameWithType: LdapConnection.Credential\n- uid: System.DirectoryServices.Protocols.LdapConnection.Dispose*\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: Dispose\n  nameWithType: LdapConnection.Dispose\n- uid: System.DirectoryServices.Protocols.LdapConnection.EndSendRequest*\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: EndSendRequest\n  nameWithType: LdapConnection.EndSendRequest\n- uid: System.DirectoryServices.Protocols.LdapConnection.Finalize*\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: Finalize\n  nameWithType: LdapConnection.Finalize\n- uid: System.DirectoryServices.Protocols.LdapConnection.GetPartialResults*\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: GetPartialResults\n  nameWithType: LdapConnection.GetPartialResults\n- uid: System.DirectoryServices.Protocols.LdapConnection.SendRequest*\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: SendRequest\n  nameWithType: LdapConnection.SendRequest\n- uid: System.DirectoryServices.Protocols.LdapConnection.SessionOptions*\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: SessionOptions\n  nameWithType: LdapConnection.SessionOptions\n- uid: System.DirectoryServices.Protocols.LdapConnection.Timeout*\n  parent: System.DirectoryServices.Protocols.LdapConnection\n  isExternal: false\n  name: Timeout\n  nameWithType: LdapConnection.Timeout\n"}