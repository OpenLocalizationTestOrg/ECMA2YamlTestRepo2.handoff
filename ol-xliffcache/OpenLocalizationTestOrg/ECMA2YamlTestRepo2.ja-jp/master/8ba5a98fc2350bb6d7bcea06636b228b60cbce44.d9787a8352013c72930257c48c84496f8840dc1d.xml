{"nodes":[{"pos":[396,450],"content":"Specifies how the operating system should open a file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies how the operating system should open a file.","pos":[0,54]}]},{"pos":[463,1415],"content":"For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/add/includes/ajax-current-ext-md.md). For an example of reading text from a file, see [How to: Read Text from a File](~/add/includes/ajax-current-ext-md.md). For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/add/includes/ajax-current-ext-md.md).       A `FileMode` parameter is specified in many of the constructors for <xref:System.IO.FileStream>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>, and in the `Open` methods of <xref:System.IO.File> and <xref:System.IO.FileInfo> to control how a file is opened.       `FileMode` parameters control whether a file is overwritten, created, opened, or some combination thereof. Use `Open` to open an existing file. To append to a file, use `Append`. To truncate a file or create a file if it doesn't exist, use `Create`.","needQuote":false,"needEscape":true,"nodes":[{"content":"For an example of creating a file and writing text to a file, see <bpt id=\"p1\">[</bpt>How to: Write Text to a File<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[0,136],"source":"For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/add/includes/ajax-current-ext-md.md)."},{"content":"For an example of reading text from a file, see <bpt id=\"p1\">[</bpt>How to: Read Text from a File<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[137,256],"source":" For an example of reading text from a file, see [How to: Read Text from a File](~/add/includes/ajax-current-ext-md.md)."},{"content":"For an example of reading from and writing to a binary file, see <bpt id=\"p1\">[</bpt>How to: Read and Write to a Newly Created Data File<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[257,415],"source":" For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/add/includes/ajax-current-ext-md.md)."},{"content":"A <ph id=\"ph1\">`FileMode`</ph> parameter is specified in many of the constructors for &lt;xref:System.IO.FileStream&gt;, &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;, and in the <ph id=\"ph2\">`Open`</ph> methods of &lt;xref:System.IO.File&gt; and &lt;xref:System.IO.FileInfo&gt; to control how a file is opened.","pos":[422,692],"source":"       A `FileMode` parameter is specified in many of the constructors for <xref:System.IO.FileStream>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>, and in the `Open` methods of <xref:System.IO.File> and <xref:System.IO.FileInfo> to control how a file is opened."},{"content":"<ph id=\"ph1\">`FileMode`</ph> parameters control whether a file is overwritten, created, opened, or some combination thereof.","pos":[699,805],"source":"`FileMode` parameters control whether a file is overwritten, created, opened, or some combination thereof."},{"content":"Use <ph id=\"ph1\">`Open`</ph> to open an existing file.","pos":[806,842],"source":" Use `Open` to open an existing file."},{"content":"To append to a file, use <ph id=\"ph1\">`Append`</ph>.","pos":[843,877],"source":" To append to a file, use `Append`."},{"content":"To truncate a file or create a file if it doesn't exist, use <ph id=\"ph1\">`Create`</ph>.","pos":[878,948],"source":" To truncate a file or create a file if it doesn't exist, use `Create`."}]},{"pos":[2229,2837],"content":"Opens the file if it exists and seeks to the end of the file, or creates a new file. This requires &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Append?displayProperty=fullName&gt; permission. <xref uid=\"langword_csharp_FileMode.Append\" name=\"FileMode.Append\" href=\"\"></xref> can be used only in conjunction with <xref uid=\"langword_csharp_FileAccess.Write\" name=\"FileAccess.Write\" href=\"\"></xref>. Trying to seek to a position before the end of the file throws an <xref:System.IO.IOException> exception, and any attempt to read fails and throws a <xref:System.NotSupportedException> exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Opens the file if it exists and seeks to the end of the file, or creates a new file.","pos":[0,84]},{"content":"This requires <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.Permissions.FileIOPermissionAccess.Append?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> permission.","pos":[85,206],"source":" This requires &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Append?displayProperty=fullName&gt; permission."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_FileMode.Append\" name=\"FileMode.Append\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can be used only in conjunction with <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_FileAccess.Write\" name=\"FileAccess.Write\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[207,412],"source":"<xref uid=\"langword_csharp_FileMode.Append\" name=\"FileMode.Append\" href=\"\"></xref> can be used only in conjunction with <xref uid=\"langword_csharp_FileAccess.Write\" name=\"FileAccess.Write\" href=\"\"></xref>."},{"content":"Trying to seek to a position before the end of the file throws an &lt;xref:System.IO.IOException&gt; exception, and any attempt to read fails and throws a &lt;xref:System.NotSupportedException&gt; exception.","pos":[413,608],"source":" Trying to seek to a position before the end of the file throws an <xref:System.IO.IOException> exception, and any attempt to read fails and throws a <xref:System.NotSupportedException> exception."}]},{"pos":[2930,2942],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3238,3771],"content":"Specifies that the operating system should create a new file. If the file already exists, it will be overwritten. This requires &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permission. <xref uid=\"langword_csharp_FileMode.Create\" name=\"FileMode.Create\" href=\"\"></xref> is equivalent to requesting that if the file does not exist, use CreateNew; otherwise, use Truncate. If the file already exists but is a hidden file, an <xref:System.UnauthorizedAccessException> exception is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the operating system should create a new file.","pos":[0,61]},{"content":"If the file already exists, it will be overwritten.","pos":[62,113]},{"content":"This requires <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> permission.","pos":[114,234],"source":" This requires &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permission."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_FileMode.Create\" name=\"FileMode.Create\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is equivalent to requesting that if the file does not exist, use CreateNew; otherwise, use Truncate.","pos":[235,418],"source":"<xref uid=\"langword_csharp_FileMode.Create\" name=\"FileMode.Create\" href=\"\"></xref> is equivalent to requesting that if the file does not exist, use CreateNew; otherwise, use Truncate."},{"content":"If the file already exists but is a hidden file, an &lt;xref:System.UnauthorizedAccessException&gt; exception is thrown.","pos":[419,533],"source":" If the file already exists but is a hidden file, an <xref:System.UnauthorizedAccessException> exception is thrown."}]},{"pos":[3864,3876],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4187,4450],"content":"Specifies that the operating system should create a new file. This requires &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permission. If the file already exists, an <xref:System.IO.IOException> exception is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the operating system should create a new file. This requires &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permission. If the file already exists, an <xref:System.IO.IOException> exception is thrown.","pos":[0,263],"nodes":[{"content":"Specifies that the operating system should create a new file.","pos":[0,61]},{"content":"This requires <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> permission.","pos":[62,182],"source":" This requires &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permission."},{"content":"If the file already exists, an &lt;xref:System.IO.IOException&gt; exception is thrown.","pos":[183,263],"source":" If the file already exists, an <xref:System.IO.IOException> exception is thrown."}]}]},{"pos":[4546,4558],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4844,5156],"content":"Specifies that the operating system should open an existing file. The ability to open the file is dependent on the value specified by the <xref href=\"System.IO.FileAccess\"></xref> enumeration. A &lt;xref:System.IO.FileNotFoundException?displayProperty=fullName&gt; exception is thrown if the file does not exist.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the operating system should open an existing file.","pos":[0,65]},{"content":"The ability to open the file is dependent on the value specified by the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration.","pos":[66,192],"source":" The ability to open the file is dependent on the value specified by the <xref href=\"System.IO.FileAccess\"></xref> enumeration."},{"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.IO.FileNotFoundException?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> exception is thrown if the file does not exist.","pos":[193,312],"source":" A &lt;xref:System.IO.FileNotFoundException?displayProperty=fullName&gt; exception is thrown if the file does not exist."}]},{"pos":[5247,5259],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5585,6495],"content":"Specifies that the operating system should open a file if it exists; otherwise, a new file should be created. If the file is opened with <xref uid=\"langword_csharp_FileAccess.Read\" name=\"FileAccess.Read\" href=\"\"></xref>, &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt; permission is required. If the file access is <xref uid=\"langword_csharp_FileAccess.Write\" name=\"FileAccess.Write\" href=\"\"></xref>, &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permission is required. If the file is opened with <xref uid=\"langword_csharp_FileAccess.ReadWrite\" name=\"FileAccess.ReadWrite\" href=\"\"></xref>, both &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt; and &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permissions are required.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the operating system should open a file if it exists; otherwise, a new file should be created.","pos":[0,109]},{"content":"If the file is opened with <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_FileAccess.Read\" name=\"FileAccess.Read\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> permission is required.","pos":[110,338],"source":" If the file is opened with <xref uid=\"langword_csharp_FileAccess.Read\" name=\"FileAccess.Read\" href=\"\"></xref>, &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt; permission is required."},{"content":"If the file access is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_FileAccess.Write\" name=\"FileAccess.Write\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> permission is required.","pos":[339,565],"source":" If the file access is <xref uid=\"langword_csharp_FileAccess.Write\" name=\"FileAccess.Write\" href=\"\"></xref>, &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permission is required."},{"content":"If the file is opened with <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_FileAccess.ReadWrite\" name=\"FileAccess.ReadWrite\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, both <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> and <ph id=\"ph3\">&amp;lt;</ph>xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName<ph id=\"ph4\">&amp;gt;</ph> permissions are required.","pos":[566,910],"source":" If the file is opened with <xref uid=\"langword_csharp_FileAccess.ReadWrite\" name=\"FileAccess.ReadWrite\" href=\"\"></xref>, both &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt; and &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permissions are required."}]},{"pos":[6594,6606],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6912,7358],"content":"Specifies that the operating system should open an existing file. When the file is opened, it should be truncated so that its size is zero bytes. This requires &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permission. Attempts to read from a file opened with <xref uid=\"langword_csharp_FileMode.Truncate\" name=\"FileMode.Truncate\" href=\"\"></xref> cause an <xref:System.ArgumentException> exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the operating system should open an existing file.","pos":[0,65]},{"content":"When the file is opened, it should be truncated so that its size is zero bytes.","pos":[66,145]},{"content":"This requires <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> permission.","pos":[146,266],"source":" This requires &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permission."},{"content":"Attempts to read from a file opened with <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_FileMode.Truncate\" name=\"FileMode.Truncate\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> cause an &lt;xref:System.ArgumentException&gt; exception.","pos":[267,446],"source":" Attempts to read from a file opened with <xref uid=\"langword_csharp_FileMode.Truncate\" name=\"FileMode.Truncate\" href=\"\"></xref> cause an <xref:System.ArgumentException> exception."}]},{"pos":[7453,7465],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.FileMode\n  id: FileMode\n  children:\n  - System.IO.FileMode.Append\n  - System.IO.FileMode.Create\n  - System.IO.FileMode.CreateNew\n  - System.IO.FileMode.Open\n  - System.IO.FileMode.OpenOrCreate\n  - System.IO.FileMode.Truncate\n  langs:\n  - csharp\n  name: FileMode\n  nameWithType: FileMode\n  fullName: System.IO.FileMode\n  type: Enum\n  summary: Specifies how the operating system should open a file.\n  remarks: \"For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/add/includes/ajax-current-ext-md.md). For an example of reading text from a file, see [How to: Read Text from a File](~/add/includes/ajax-current-ext-md.md). For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/add/includes/ajax-current-ext-md.md).  \\n  \\n A `FileMode` parameter is specified in many of the constructors for <xref:System.IO.FileStream>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>, and in the `Open` methods of <xref:System.IO.File> and <xref:System.IO.FileInfo> to control how a file is opened.  \\n  \\n `FileMode` parameters control whether a file is overwritten, created, opened, or some combination thereof. Use `Open` to open an existing file. To append to a file, use `Append`. To truncate a file or create a file if it doesn't exist, use `Create`.\"\n  example:\n  - \"The following `FileStream` constructor opens an existing file (`FileMode.Open`).  \\n  \\n [!code-vb[Classic FileAccess Example#1](~/add/codesnippet/visualbasic/t-system.io.filemode_1.vb)]\\n [!code-cpp[Classic FileAccess Example#1](~/add/codesnippet/cpp/t-system.io.filemode_1.cpp)]\\n [!code-cs[Classic FileAccess Example#1](~/add/codesnippet/csharp/t-system.io.filemode_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum FileMode\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.IO.FileMode.Append\n  id: Append\n  parent: System.IO.FileMode\n  langs:\n  - csharp\n  name: Append\n  nameWithType: FileMode.Append\n  fullName: System.IO.FileMode.Append\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Opens the file if it exists and seeks to the end of the file, or creates a new file. This requires &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Append?displayProperty=fullName&gt; permission. <xref uid=\"langword_csharp_FileMode.Append\" name=\"FileMode.Append\" href=\"\"></xref> can be used only in conjunction with <xref uid=\"langword_csharp_FileAccess.Write\" name=\"FileAccess.Write\" href=\"\"></xref>. Trying to seek to a position before the end of the file throws an <xref:System.IO.IOException> exception, and any attempt to read fails and throws a <xref:System.NotSupportedException> exception.\n  syntax:\n    content: Append\n    return:\n      type: System.IO.FileMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.FileMode.Create\n  id: Create\n  parent: System.IO.FileMode\n  langs:\n  - csharp\n  name: Create\n  nameWithType: FileMode.Create\n  fullName: System.IO.FileMode.Create\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Specifies that the operating system should create a new file. If the file already exists, it will be overwritten. This requires &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permission. <xref uid=\"langword_csharp_FileMode.Create\" name=\"FileMode.Create\" href=\"\"></xref> is equivalent to requesting that if the file does not exist, use CreateNew; otherwise, use Truncate. If the file already exists but is a hidden file, an <xref:System.UnauthorizedAccessException> exception is thrown.\n  syntax:\n    content: Create\n    return:\n      type: System.IO.FileMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.FileMode.CreateNew\n  id: CreateNew\n  parent: System.IO.FileMode\n  langs:\n  - csharp\n  name: CreateNew\n  nameWithType: FileMode.CreateNew\n  fullName: System.IO.FileMode.CreateNew\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Specifies that the operating system should create a new file. This requires &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permission. If the file already exists, an <xref:System.IO.IOException> exception is thrown.\n  syntax:\n    content: CreateNew\n    return:\n      type: System.IO.FileMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.FileMode.Open\n  id: Open\n  parent: System.IO.FileMode\n  langs:\n  - csharp\n  name: Open\n  nameWithType: FileMode.Open\n  fullName: System.IO.FileMode.Open\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Specifies that the operating system should open an existing file. The ability to open the file is dependent on the value specified by the <xref href=\"System.IO.FileAccess\"></xref> enumeration. A &lt;xref:System.IO.FileNotFoundException?displayProperty=fullName&gt; exception is thrown if the file does not exist.\n  syntax:\n    content: Open\n    return:\n      type: System.IO.FileMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.FileMode.OpenOrCreate\n  id: OpenOrCreate\n  parent: System.IO.FileMode\n  langs:\n  - csharp\n  name: OpenOrCreate\n  nameWithType: FileMode.OpenOrCreate\n  fullName: System.IO.FileMode.OpenOrCreate\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Specifies that the operating system should open a file if it exists; otherwise, a new file should be created. If the file is opened with <xref uid=\"langword_csharp_FileAccess.Read\" name=\"FileAccess.Read\" href=\"\"></xref>, &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt; permission is required. If the file access is <xref uid=\"langword_csharp_FileAccess.Write\" name=\"FileAccess.Write\" href=\"\"></xref>, &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permission is required. If the file is opened with <xref uid=\"langword_csharp_FileAccess.ReadWrite\" name=\"FileAccess.ReadWrite\" href=\"\"></xref>, both &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt; and &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permissions are required.\n  syntax:\n    content: OpenOrCreate\n    return:\n      type: System.IO.FileMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.FileMode.Truncate\n  id: Truncate\n  parent: System.IO.FileMode\n  langs:\n  - csharp\n  name: Truncate\n  nameWithType: FileMode.Truncate\n  fullName: System.IO.FileMode.Truncate\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Specifies that the operating system should open an existing file. When the file is opened, it should be truncated so that its size is zero bytes. This requires &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permission. Attempts to read from a file opened with <xref uid=\"langword_csharp_FileMode.Truncate\" name=\"FileMode.Truncate\" href=\"\"></xref> cause an <xref:System.ArgumentException> exception.\n  syntax:\n    content: Truncate\n    return:\n      type: System.IO.FileMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.IO.FileMode.Append\n  parent: System.IO.FileMode\n  isExternal: false\n  name: Append\n  nameWithType: FileMode.Append\n  fullName: System.IO.FileMode.Append\n- uid: System.IO.FileMode\n  parent: System.IO\n  isExternal: false\n  name: FileMode\n  nameWithType: FileMode\n  fullName: System.IO.FileMode\n- uid: System.IO.FileMode.Create\n  parent: System.IO.FileMode\n  isExternal: false\n  name: Create\n  nameWithType: FileMode.Create\n  fullName: System.IO.FileMode.Create\n- uid: System.IO.FileMode.CreateNew\n  parent: System.IO.FileMode\n  isExternal: false\n  name: CreateNew\n  nameWithType: FileMode.CreateNew\n  fullName: System.IO.FileMode.CreateNew\n- uid: System.IO.FileMode.Open\n  parent: System.IO.FileMode\n  isExternal: false\n  name: Open\n  nameWithType: FileMode.Open\n  fullName: System.IO.FileMode.Open\n- uid: System.IO.FileMode.OpenOrCreate\n  parent: System.IO.FileMode\n  isExternal: false\n  name: OpenOrCreate\n  nameWithType: FileMode.OpenOrCreate\n  fullName: System.IO.FileMode.OpenOrCreate\n- uid: System.IO.FileMode.Truncate\n  parent: System.IO.FileMode\n  isExternal: false\n  name: Truncate\n  nameWithType: FileMode.Truncate\n  fullName: System.IO.FileMode.Truncate\n"}