{"nodes":[{"pos":[835,952],"content":"Interface that is used by the host infrastructure for property editing to handle sorting and filtering functionality.","needQuote":true,"needEscape":true,"nodes":[{"content":"Interface that is used by the host infrastructure for property editing to handle sorting and filtering functionality.","pos":[0,117]}]},{"pos":[964,1039],"content":"It is used to determine whether a particular object should be filtered out.","needQuote":true,"needEscape":true,"nodes":[{"content":"It is used to determine whether a particular object should be filtered out.","pos":[0,75]}]},{"pos":[1819,2017],"content":"Used to set a new <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the <bpt id=\"p2\">&lt;xref href=\"System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Used to set a new <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"></xref> on the <xref href=\"System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\"></xref>."},{"pos":[2263,2363],"content":"The new <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"The new <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"></xref> instance."},{"pos":[3010,3250],"content":"Declaration of the event raised when a <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is changed through a call to &lt;xref:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter*&gt;.","needQuote":true,"needEscape":true,"source":"Declaration of the event raised when a <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"></xref> is changed through a call to <xref:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter*>."},{"pos":[3536,3548],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4104,4313],"content":"Read-only property that returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is a match for the object.","needQuote":true,"needEscape":true,"source":"Read-only property that returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"></xref> is a match for the object."},{"pos":[4430,4624],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the property filter matches the property filter target; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property filter matches the property filter target; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5508,5749],"content":"Used to determine whether this <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is a match for a particular <bpt id=\"p2\">&lt;xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Used to determine whether this <xref href=\"System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\"></xref> is a match for a particular <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate\"></xref>."},{"pos":[6024,6137],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to match against.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate\"></xref> to match against."},{"pos":[6196,6420],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if it there is a match between a property filter target and a property filter predicate; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if it there is a match between a property filter target and a property filter predicate; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\n  id: IPropertyFilterTarget\n  children:\n  - System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)\n  - System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied\n  - System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter\n  - System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)\n  langs:\n  - csharp\n  name: IPropertyFilterTarget\n  nameWithType: IPropertyFilterTarget\n  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\n  type: Interface\n  summary: Interface that is used by the host infrastructure for property editing to handle sorting and filtering functionality.\n  remarks: It is used to determine whether a particular object should be filtered out.\n  syntax:\n    content: public interface IPropertyFilterTarget\n  implements: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)\n  id: ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)\n  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\n  langs:\n  - csharp\n  name: ApplyFilter(PropertyFilter)\n  nameWithType: IPropertyFilterTarget.ApplyFilter(PropertyFilter)\n  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(PropertyFilter)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.PropertyEditing\n  summary: Used to set a new <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"></xref> on the <xref href=\"System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\"></xref>.\n  syntax:\n    content: public void ApplyFilter (System.Activities.Presentation.PropertyEditing.PropertyFilter filter);\n    parameters:\n    - id: filter\n      type: System.Activities.Presentation.PropertyEditing.PropertyFilter\n      description: The new <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"></xref> instance.\n  overload: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied\n  id: FilterApplied\n  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\n  langs:\n  - csharp\n  name: FilterApplied\n  nameWithType: IPropertyFilterTarget.FilterApplied\n  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied\n  type: Event\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.PropertyEditing\n  summary: Declaration of the event raised when a <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"></xref> is changed through a call to <xref:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter*>.\n  syntax:\n    content: public event EventHandler<System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs> FilterApplied;\n    return:\n      type: System.EventHandler{System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter\n  id: MatchesFilter\n  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\n  langs:\n  - csharp\n  name: MatchesFilter\n  nameWithType: IPropertyFilterTarget.MatchesFilter\n  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.PropertyEditing\n  summary: Read-only property that returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"></xref> is a match for the object.\n  syntax:\n    content: public bool MatchesFilter { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property filter matches the property filter target; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)\n  id: MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)\n  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\n  langs:\n  - csharp\n  name: MatchesPredicate(PropertyFilterPredicate)\n  nameWithType: IPropertyFilterTarget.MatchesPredicate(PropertyFilterPredicate)\n  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(PropertyFilterPredicate)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.PropertyEditing\n  summary: Used to determine whether this <xref href=\"System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\"></xref> is a match for a particular <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate\"></xref>.\n  syntax:\n    content: public bool MatchesPredicate (System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate predicate);\n    parameters:\n    - id: predicate\n      type: System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate\n      description: The <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate\"></xref> to match against.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if it there is a match between a property filter target and a property filter predicate; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)\n  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\n  isExternal: false\n  name: ApplyFilter(PropertyFilter)\n  nameWithType: IPropertyFilterTarget.ApplyFilter(PropertyFilter)\n  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(PropertyFilter)\n- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter\n  parent: System.Activities.Presentation.PropertyEditing\n  isExternal: false\n  name: PropertyFilter\n  nameWithType: PropertyFilter\n  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter\n- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied\n  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\n  isExternal: false\n  name: FilterApplied\n  nameWithType: IPropertyFilterTarget.FilterApplied\n  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied\n- uid: System.EventHandler{System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<PropertyFilterAppliedEventArgs>\n  nameWithType: EventHandler<PropertyFilterAppliedEventArgs>\n  fullName: System.EventHandler<System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs\n    name: PropertyFilterAppliedEventArgs\n    nameWithType: PropertyFilterAppliedEventArgs\n    fullName: PropertyFilterAppliedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter\n  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\n  isExternal: false\n  name: MatchesFilter\n  nameWithType: IPropertyFilterTarget.MatchesFilter\n  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)\n  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\n  isExternal: false\n  name: MatchesPredicate(PropertyFilterPredicate)\n  nameWithType: IPropertyFilterTarget.MatchesPredicate(PropertyFilterPredicate)\n  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(PropertyFilterPredicate)\n- uid: System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate\n  parent: System.Activities.Presentation.PropertyEditing\n  isExternal: false\n  name: PropertyFilterPredicate\n  nameWithType: PropertyFilterPredicate\n  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate\n- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter*\n  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\n  isExternal: false\n  name: ApplyFilter\n  nameWithType: IPropertyFilterTarget.ApplyFilter\n- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter*\n  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\n  isExternal: false\n  name: MatchesFilter\n  nameWithType: IPropertyFilterTarget.MatchesFilter\n- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate*\n  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\n  isExternal: false\n  name: MatchesPredicate\n  nameWithType: IPropertyFilterTarget.MatchesPredicate\n"}