{"nodes":[{"pos":[1773,1930],"content":"Defines a compensatable version of the <xref href=\"System.Workflow.ComponentModel.TransactionScopeActivity\"></xref> activity. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines a compensatable version of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.TransactionScopeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> activity.","pos":[0,125],"source":"Defines a compensatable version of the <xref href=\"System.Workflow.ComponentModel.TransactionScopeActivity\"></xref> activity."},{"content":"This class cannot be inherited.","pos":[126,157]}]},{"pos":[1943,2158],"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       CompensatableTransactionScopeActivity implements the &lt;xref:System.Workflow.ComponentModel.ICompensatableActivity&gt; interface.","needQuote":false,"needEscape":true,"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       CompensatableTransactionScopeActivity implements the <xref:System.Workflow.ComponentModel.ICompensatableActivity> interface."},{"pos":[11033,11163],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\"></xref> class."},{"pos":[12013,12174],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the name of the activity.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\"></xref> class using the name of the activity."},{"pos":[12847,12885],"content":"The user-defined name of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user-defined name of the activity.","pos":[0,38]}]},{"pos":[13983,13995],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14094,14106],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15211,15223],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15322,15334],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16644,16656],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16754,16766],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17951,17963],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19574,19586],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19701,19713],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20944,21319],"content":"Called by the workflow runtime to compensate an activity that is in the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> state. The activity must have a value of <xref href=\"System.Workflow.ComponentModel.ActivityExecutionResult\"></xref> for its <xref:System.Workflow.ComponentModel.Activity.ExecutionResult*> property in order to be compensatable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called by the workflow runtime to compensate an activity that is in the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> state.","pos":[0,154],"source":"Called by the workflow runtime to compensate an activity that is in the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> state."},{"content":"The activity must have a value of <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for its &lt;xref:System.Workflow.ComponentModel.Activity.ExecutionResult*&gt; property in order to be compensatable.","pos":[155,375],"source":" The activity must have a value of <xref href=\"System.Workflow.ComponentModel.ActivityExecutionResult\"></xref> for its <xref:System.Workflow.ComponentModel.Activity.ExecutionResult*> property in order to be compensatable."}]},{"pos":[21638,21737],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the operation.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for the operation."},{"pos":[21836,21947],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> after operation has been tried.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> after operation has been tried."},{"pos":[22675,22793],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.WorkflowTransactionOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with this instance.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Workflow.ComponentModel.WorkflowTransactionOptions\"></xref> associated with this instance."},{"pos":[23477,23590],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.WorkflowTransactionOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with this instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.WorkflowTransactionOptions\"></xref> associated with this instance."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  id: CompensatableTransactionScopeActivity\n  children:\n  - System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor\n  - System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor(System.String)\n  - System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  - System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.TransactionOptions\n  langs:\n  - csharp\n  name: CompensatableTransactionScopeActivity\n  nameWithType: CompensatableTransactionScopeActivity\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  type: Class\n  summary: Defines a compensatable version of the <xref href=\"System.Workflow.ComponentModel.TransactionScopeActivity\"></xref> activity. This class cannot be inherited.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n CompensatableTransactionScopeActivity implements the <xref:System.Workflow.ComponentModel.ICompensatableActivity> interface.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.CompensatableTransactionScopeActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]\n\n      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]\n\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.ComponentModel.CompensatableTransactionScopeActivity), \"Resources.Sequence.png\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.PersistOnClose]\n\n      public sealed class CompensatableTransactionScopeActivity : System.Workflow.ComponentModel.CompositeActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>, System.Workflow.ComponentModel.ICompensatableActivity\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  - System.Workflow.ComponentModel.CompositeActivity\n  implements:\n  - System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>\n  - System.Workflow.ComponentModel.ICompensatableActivity\n  inheritedMembers:\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.CompositeActivity.Activities\n  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  langs:\n  - csharp\n  name: CompensatableTransactionScopeActivity()\n  nameWithType: CompensatableTransactionScopeActivity.CompensatableTransactionScopeActivity()\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.CompensatableTransactionScopeActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\"></xref> class.\n  syntax:\n    content: public CompensatableTransactionScopeActivity ();\n    parameters: []\n  overload: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  langs:\n  - csharp\n  name: CompensatableTransactionScopeActivity(String)\n  nameWithType: CompensatableTransactionScopeActivity.CompensatableTransactionScopeActivity(String)\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.CompensatableTransactionScopeActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\"></xref> class using the name of the activity.\n  remarks: ''\n  example:\n  - \"The following example demonstrates creating a <xref:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity> object.  This example is from the Compensation SDK sample.  For more information, see [Compensation Sample](http://msdn.microsoft.com/en-us/c847a694-9978-46af-aa80-5bd1833f813b).  \\n  \\n [!code-cs[WF_Samples#148](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#148)]\\n [!code-vb[WF_Samples#148](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#148)]\"\n  syntax:\n    content: public CompensatableTransactionScopeActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-defined name of the activity.\n  overload: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  langs:\n  - csharp\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: CompensatableTransactionScopeActivity.Cancel(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.Cancel(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: To be added.\n  overload: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  langs:\n  - csharp\n  name: Execute(ActivityExecutionContext)\n  nameWithType: CompensatableTransactionScopeActivity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.Execute(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: To be added.\n  overload: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  id: OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  langs:\n  - csharp\n  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  nameWithType: CompensatableTransactionScopeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  syntax:\n    content: protected override void OnActivityChangeRemove (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity removedActivity);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    - id: removedActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: To be added.\n  overload: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.OnActivityChangeRemove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  langs:\n  - csharp\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: CompensatableTransactionScopeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  syntax:\n    content: protected override void OnWorkflowChangesCompleted (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n  overload: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.OnWorkflowChangesCompleted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  isEii: true\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  langs:\n  - csharp\n  name: System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  nameWithType: CompensatableTransactionScopeActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  syntax:\n    content: void IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs e);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: To be added.\n    - id: e\n      type: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n      description: To be added.\n  overload: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)\n  isEii: true\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  langs:\n  - csharp\n  name: System.Workflow.ComponentModel.ICompensatableActivity.Compensate(ActivityExecutionContext)\n  nameWithType: CompensatableTransactionScopeActivity.System.Workflow.ComponentModel.ICompensatableActivity.Compensate(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System.Workflow.ComponentModel.ICompensatableActivity.Compensate(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called by the workflow runtime to compensate an activity that is in the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> state. The activity must have a value of <xref href=\"System.Workflow.ComponentModel.ActivityExecutionResult\"></xref> for its <xref:System.Workflow.ComponentModel.Activity.ExecutionResult*> property in order to be compensatable.\n  syntax:\n    content: System.Workflow.ComponentModel.ActivityExecutionStatus ICompensatableActivity.Compensate (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for the operation.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> after operation has been tried.\n  overload: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.TransactionOptions\n  id: TransactionOptions\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  langs:\n  - csharp\n  name: TransactionOptions\n  nameWithType: CompensatableTransactionScopeActivity.TransactionOptions\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.TransactionOptions\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the <xref href=\"System.Workflow.ComponentModel.WorkflowTransactionOptions\"></xref> associated with this instance.\n  remarks: ''\n  example:\n  - \"The following example demonstrates accessing the TransactionOptions property.  This example is from the Compensation SDK sample.  For more information, see [Compensation Sample](http://msdn.microsoft.com/en-us/c847a694-9978-46af-aa80-5bd1833f813b).  \\n  \\n [!code-cs[WF_Samples#154](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#154)]\\n [!code-vb[WF_Samples#154](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#154)]\"\n  syntax:\n    content: public System.Workflow.ComponentModel.WorkflowTransactionOptions TransactionOptions { get; set; }\n    return:\n      type: System.Workflow.ComponentModel.WorkflowTransactionOptions\n      description: The <xref href=\"System.Workflow.ComponentModel.WorkflowTransactionOptions\"></xref> associated with this instance.\n  overload: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.TransactionOptions*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.CompositeActivity\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  isExternal: false\n  name: CompensatableTransactionScopeActivity()\n  nameWithType: CompensatableTransactionScopeActivity.CompensatableTransactionScopeActivity()\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.CompensatableTransactionScopeActivity()\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor(System.String)\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  isExternal: false\n  name: CompensatableTransactionScopeActivity(String)\n  nameWithType: CompensatableTransactionScopeActivity.CompensatableTransactionScopeActivity(String)\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.CompensatableTransactionScopeActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  isExternal: false\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: CompensatableTransactionScopeActivity.Cancel(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.Cancel(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: CompensatableTransactionScopeActivity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.Execute(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  isExternal: false\n  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  nameWithType: CompensatableTransactionScopeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n- uid: System.Workflow.ComponentModel.Activity\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Workflow.ComponentModel.Activity\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  isExternal: false\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: CompensatableTransactionScopeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  nameWithType: CompensatableTransactionScopeActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatusChangedEventArgs\n  nameWithType: ActivityExecutionStatusChangedEventArgs\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.ICompensatableActivity.Compensate(ActivityExecutionContext)\n  nameWithType: CompensatableTransactionScopeActivity.System.Workflow.ComponentModel.ICompensatableActivity.Compensate(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System.Workflow.ComponentModel.ICompensatableActivity.Compensate(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.TransactionOptions\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  isExternal: false\n  name: TransactionOptions\n  nameWithType: CompensatableTransactionScopeActivity.TransactionOptions\n  fullName: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.TransactionOptions\n- uid: System.Workflow.ComponentModel.WorkflowTransactionOptions\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: WorkflowTransactionOptions\n  nameWithType: WorkflowTransactionOptions\n  fullName: System.Workflow.ComponentModel.WorkflowTransactionOptions\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor*\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  isExternal: false\n  name: CompensatableTransactionScopeActivity\n  nameWithType: CompensatableTransactionScopeActivity.CompensatableTransactionScopeActivity\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.Cancel*\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  isExternal: false\n  name: Cancel\n  nameWithType: CompensatableTransactionScopeActivity.Cancel\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.Execute*\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  isExternal: false\n  name: Execute\n  nameWithType: CompensatableTransactionScopeActivity.Execute\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.OnActivityChangeRemove*\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  isExternal: false\n  name: OnActivityChangeRemove\n  nameWithType: CompensatableTransactionScopeActivity.OnActivityChangeRemove\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.OnWorkflowChangesCompleted*\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  isExternal: false\n  name: OnWorkflowChangesCompleted\n  nameWithType: CompensatableTransactionScopeActivity.OnWorkflowChangesCompleted\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent*\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent\n  nameWithType: CompensatableTransactionScopeActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate*\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.ICompensatableActivity.Compensate\n  nameWithType: CompensatableTransactionScopeActivity.System.Workflow.ComponentModel.ICompensatableActivity.Compensate\n- uid: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.TransactionOptions*\n  parent: System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  isExternal: false\n  name: TransactionOptions\n  nameWithType: CompensatableTransactionScopeActivity.TransactionOptions\n"}