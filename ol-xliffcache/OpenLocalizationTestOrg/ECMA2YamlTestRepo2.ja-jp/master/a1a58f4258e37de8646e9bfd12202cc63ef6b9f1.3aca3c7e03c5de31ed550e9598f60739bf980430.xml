{"nodes":[{"pos":[812,1512],"content":"Represents a multiplexing logger. The purpose of this logger is to register and unregister multiple loggers during the build. Supports the [!INCLUDE[vs_current_short](~/add/includes/ajax-current-ext-md.md)] IDE scenario in which loggers are registered and unregistered for each project system’s build request. One physical build can have multiple logical builds, each with its own set of loggers.       The <xref uid=\"langword_csharp_MuxLogger\" name=\"MuxLogger\" href=\"\"></xref>registers itself with the build manager as a regular central /l style logger. It receives messages from the build manager and routes them to the correct logger, based on the logical build that the message came from.","needQuote":false,"needEscape":true,"nodes":[{"content":"Represents a multiplexing logger.","pos":[0,33]},{"content":"The purpose of this logger is to register and unregister multiple loggers during the build.","pos":[34,125]},{"content":"Supports the <ph id=\"ph1\">[!INCLUDE[vs_current_short](~/add/includes/ajax-current-ext-md.md)]</ph> IDE scenario in which loggers are registered and unregistered for each project system’s build request.","pos":[126,309],"source":" Supports the [!INCLUDE[vs_current_short](~/add/includes/ajax-current-ext-md.md)] IDE scenario in which loggers are registered and unregistered for each project system’s build request."},{"content":"One physical build can have multiple logical builds, each with its own set of loggers.","pos":[310,396]},{"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_MuxLogger\" name=\"MuxLogger\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>registers itself with the build manager as a regular central /l style logger.","pos":[403,554],"source":"       The <xref uid=\"langword_csharp_MuxLogger\" name=\"MuxLogger\" href=\"\"></xref>registers itself with the build manager as a regular central /l style logger."},{"content":"It receives messages from the build manager and routes them to the correct logger, based on the logical build that the message came from.","pos":[555,692]}]},{"pos":[1526,3675],"content":"The `MuxLogger`generally functions as follows:      -   The `MuxLogger` is registered at the beginning of the build manager’s Begin build.           Any loggers registered before the build manager starts the build get the build-started event at the same time as the `MuxLogger`.           Any loggers registered after the build manager starts the build get a synthesized build-started event. The event cannot be cached because the timestamp of the build-started event is determined when the event is created, and caching the event would give incorrect build times in the loggers registered to the `MuxLogger`.      -   The `MuxLogger` is initialized by the build manager           The `MuxLogger` listens to all events on the event source from the build manager and routes events correctly to the registered loggers.      -   The `MuxLogger` is shutdown when the build is finished in end build. At this time, it unregisters any loggers attached to it.      -   The `MuxLogger` logs the build-finished event when the project-finished event for the first project-started event is seen for each logger.       The `MuxLogger` registers loggers in the following way:      1.  The logger is passed to the `MuxLogger.RegisterLogger` method with a submission ID that is used to route a message to that logger.      2.  The `MuxLogger` registers the logger to the `MuxLogger` event source.      3.  If the build-started event has already been logged, the `MuxLogger` creates a new build-started event and sends it to the logger’s event source.       The `MuxLogger` unregisters loggers in the following way:      1.  When a build submission is completed, the `MuxLogger.UnregisterLogger` method is called with the submission ID for the logger.      2.  The `MuxLogger` looks up the success state of the project-finished event for the submission ID and logs a build-finished event to the logger.      3.  The `MuxLogger`cleans up the event source.           Note that the unregister comes from a thread other than the logging thread and a synchronization issue could occur if unregister is called while events are being logged.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`MuxLogger`</ph>generally functions as follows:      -   The <ph id=\"ph2\">`MuxLogger`</ph> is registered at the beginning of the build manager’s Begin build.","pos":[0,138],"source":"The `MuxLogger`generally functions as follows:      -   The `MuxLogger` is registered at the beginning of the build manager’s Begin build."},{"content":"Any loggers registered before the build manager starts the build get the build-started event at the same time as the <ph id=\"ph1\">`MuxLogger`</ph>.","pos":[149,278],"source":"           Any loggers registered before the build manager starts the build get the build-started event at the same time as the `MuxLogger`."},{"content":"Any loggers registered after the build manager starts the build get a synthesized build-started event.","pos":[289,391]},{"content":"The event cannot be cached because the timestamp of the build-started event is determined when the event is created, and caching the event would give incorrect build times in the loggers registered to the <ph id=\"ph1\">`MuxLogger`</ph>.","pos":[392,609],"source":" The event cannot be cached because the timestamp of the build-started event is determined when the event is created, and caching the event would give incorrect build times in the loggers registered to the `MuxLogger`."},{"content":"-   The <ph id=\"ph1\">`MuxLogger`</ph> is initialized by the build manager           The <ph id=\"ph2\">`MuxLogger`</ph> listens to all events on the event source from the build manager and routes events correctly to the registered loggers.","pos":[615,816],"source":"      -   The `MuxLogger` is initialized by the build manager           The `MuxLogger` listens to all events on the event source from the build manager and routes events correctly to the registered loggers."},{"content":"-   The <ph id=\"ph1\">`MuxLogger`</ph> is shutdown when the build is finished in end build.","pos":[822,894],"source":"      -   The `MuxLogger` is shutdown when the build is finished in end build."},{"content":"At this time, it unregisters any loggers attached to it.","pos":[895,951]},{"content":"-   The <ph id=\"ph1\">`MuxLogger`</ph> logs the build-finished event when the project-finished event for the first project-started event is seen for each logger.","pos":[957,1099],"source":"      -   The `MuxLogger` logs the build-finished event when the project-finished event for the first project-started event is seen for each logger."},{"content":"The <ph id=\"ph1\">`MuxLogger`</ph> registers loggers in the following way:      1.","pos":[1106,1169],"source":"       The `MuxLogger` registers loggers in the following way:      1."},{"content":"The logger is passed to the <ph id=\"ph1\">`MuxLogger.RegisterLogger`</ph> method with a submission ID that is used to route a message to that logger.","pos":[1171,1301],"source":"  The logger is passed to the `MuxLogger.RegisterLogger` method with a submission ID that is used to route a message to that logger."},{"content":"2.","pos":[1307,1309]},{"content":"The <ph id=\"ph1\">`MuxLogger`</ph> registers the logger to the <ph id=\"ph2\">`MuxLogger`</ph> event source.","pos":[1311,1380],"source":"  The `MuxLogger` registers the logger to the `MuxLogger` event source."},{"content":"3.","pos":[1386,1388]},{"content":"If the build-started event has already been logged, the <ph id=\"ph1\">`MuxLogger`</ph> creates a new build-started event and sends it to the logger’s event source.","pos":[1390,1534],"source":"  If the build-started event has already been logged, the `MuxLogger` creates a new build-started event and sends it to the logger’s event source."},{"content":"The <ph id=\"ph1\">`MuxLogger`</ph> unregisters loggers in the following way:      1.","pos":[1541,1606],"source":"       The `MuxLogger` unregisters loggers in the following way:      1."},{"content":"When a build submission is completed, the <ph id=\"ph1\">`MuxLogger.UnregisterLogger`</ph> method is called with the submission ID for the logger.","pos":[1608,1734],"source":"  When a build submission is completed, the `MuxLogger.UnregisterLogger` method is called with the submission ID for the logger."},{"content":"2.","pos":[1740,1742]},{"content":"The <ph id=\"ph1\">`MuxLogger`</ph> looks up the success state of the project-finished event for the submission ID and logs a build-finished event to the logger.","pos":[1744,1885],"source":"  The `MuxLogger` looks up the success state of the project-finished event for the submission ID and logs a build-finished event to the logger."},{"content":"3.","pos":[1891,1893]},{"content":"The <ph id=\"ph1\">`MuxLogger`</ph>cleans up the event source.","pos":[1895,1937],"source":"  The `MuxLogger`cleans up the event source."},{"content":"Note that the unregister comes from a thread other than the logging thread and a synchronization issue could occur if unregister is called while events are being logged.","pos":[1948,2117]}]},{"pos":[4266,4316],"content":"Creates a new instance of the multiplexing logger.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new instance of the multiplexing logger.","pos":[0,50]}]},{"pos":[4963,5090],"content":"Initialize the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_MuxLogger\" name=\"MuxLogger\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance with the specified event source.","needQuote":true,"needEscape":true,"source":"Initialize the <xref uid=\"langword_csharp_MuxLogger\" name=\"MuxLogger\" href=\"\"></xref> instance with the specified event source."},{"pos":[5299,5316],"content":"The event source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event source.","pos":[0,17]}]},{"pos":[5949,6114],"content":"Initialize the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_MuxLogger\" name=\"MuxLogger\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance with the specified event source and specified maximum number of nodes.","needQuote":true,"needEscape":true,"source":"Initialize the <xref uid=\"langword_csharp_MuxLogger\" name=\"MuxLogger\" href=\"\"></xref> instance with the specified event source and specified maximum number of nodes."},{"pos":[6341,6358],"content":"The event source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event source.","pos":[0,17]}]},{"pos":[6426,6454],"content":"The maximum number of nodes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of nodes.","pos":[0,28]}]},{"pos":[6923,7056],"content":"Gets and sets the Parameters attribute, required by the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ILogger\" name=\"ILogger\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"Gets and sets the Parameters attribute, required by the <xref uid=\"langword_csharp_ILogger\" name=\"ILogger\" href=\"\"></xref> interface."},{"pos":[7176,7209],"content":"Returns the Parameters attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the Parameters attribute.","pos":[0,33]}]},{"pos":[7837,8018],"content":"Registers a logger on the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_MuxLogger\" name=\"MuxLogger\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and raises a build-started event if the build-started event has already been logged.","needQuote":true,"needEscape":true,"source":"Registers a logger on the <xref uid=\"langword_csharp_MuxLogger\" name=\"MuxLogger\" href=\"\"></xref> and raises a build-started event if the build-started event has already been logged."},{"pos":[8214,8263],"content":"The submission ID of the logger being registered.","needQuote":true,"needEscape":true,"nodes":[{"content":"The submission ID of the logger being registered.","pos":[0,49]}]},{"pos":[8346,8369],"content":"The logger to register.","needQuote":true,"needEscape":true,"nodes":[{"content":"The logger to register.","pos":[0,23]}]},{"pos":[8836,8947],"content":"Shuts down the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_MuxLogger\" name=\"MuxLogger\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and clears out any state.","needQuote":true,"needEscape":true,"source":"Shuts down the <xref uid=\"langword_csharp_MuxLogger\" name=\"MuxLogger\" href=\"\"></xref> and clears out any state."},{"pos":[9563,9611],"content":"Removes the specified logger from the MuxLogger.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified logger from the MuxLogger.","pos":[0,48]}]},{"pos":[9768,9814],"content":"The submission ID of the logger to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The submission ID of the logger to be removed.","pos":[0,46]}]},{"pos":[9873,10076],"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the method is successful in removing the logger, otherwise, returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method is successful in removing the logger, otherwise, returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10547,10679],"content":"Gets and sets the Verbosity attribute, required by the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ILogger\" name=\"ILogger\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"Gets and sets the Verbosity attribute, required by the <xref uid=\"langword_csharp_ILogger\" name=\"ILogger\" href=\"\"></xref> interface."},{"pos":[10861,10893],"content":"Returns the Verbosity attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the Verbosity attribute.","pos":[0,32]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Utilities.MuxLogger\n  id: MuxLogger\n  children:\n  - Microsoft.Build.Utilities.MuxLogger.#ctor\n  - Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource)\n  - Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)\n  - Microsoft.Build.Utilities.MuxLogger.Parameters\n  - Microsoft.Build.Utilities.MuxLogger.RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)\n  - Microsoft.Build.Utilities.MuxLogger.Shutdown\n  - Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(System.Int32)\n  - Microsoft.Build.Utilities.MuxLogger.Verbosity\n  langs:\n  - csharp\n  name: MuxLogger\n  nameWithType: MuxLogger\n  fullName: Microsoft.Build.Utilities.MuxLogger\n  type: Class\n  summary: \"Represents a multiplexing logger. The purpose of this logger is to register and unregister multiple loggers during the build. Supports the [!INCLUDE[vs_current_short](~/add/includes/ajax-current-ext-md.md)] IDE scenario in which loggers are registered and unregistered for each project system’s build request. One physical build can have multiple logical builds, each with its own set of loggers.  \\n  \\n The <xref uid=\\\"langword_csharp_MuxLogger\\\" name=\\\"MuxLogger\\\" href=\\\"\\\"></xref>registers itself with the build manager as a regular central /l style logger. It receives messages from the build manager and routes them to the correct logger, based on the logical build that the message came from.\"\n  remarks: \"The `MuxLogger`generally functions as follows:  \\n  \\n-   The `MuxLogger` is registered at the beginning of the build manager’s Begin build.  \\n  \\n     Any loggers registered before the build manager starts the build get the build-started event at the same time as the `MuxLogger`.  \\n  \\n     Any loggers registered after the build manager starts the build get a synthesized build-started event. The event cannot be cached because the timestamp of the build-started event is determined when the event is created, and caching the event would give incorrect build times in the loggers registered to the `MuxLogger`.  \\n  \\n-   The `MuxLogger` is initialized by the build manager  \\n  \\n     The `MuxLogger` listens to all events on the event source from the build manager and routes events correctly to the registered loggers.  \\n  \\n-   The `MuxLogger` is shutdown when the build is finished in end build. At this time, it unregisters any loggers attached to it.  \\n  \\n-   The `MuxLogger` logs the build-finished event when the project-finished event for the first project-started event is seen for each logger.  \\n  \\n The `MuxLogger` registers loggers in the following way:  \\n  \\n1.  The logger is passed to the `MuxLogger.RegisterLogger` method with a submission ID that is used to route a message to that logger.  \\n  \\n2.  The `MuxLogger` registers the logger to the `MuxLogger` event source.  \\n  \\n3.  If the build-started event has already been logged, the `MuxLogger` creates a new build-started event and sends it to the logger’s event source.  \\n  \\n The `MuxLogger` unregisters loggers in the following way:  \\n  \\n1.  When a build submission is completed, the `MuxLogger.UnregisterLogger` method is called with the submission ID for the logger.  \\n  \\n2.  The `MuxLogger` looks up the success state of the project-finished event for the submission ID and logs a build-finished event to the logger.  \\n  \\n3.  The `MuxLogger`cleans up the event source.  \\n  \\n     Note that the unregister comes from a thread other than the logging thread and a synchronization issue could occur if unregister is called while events are being logged.\"\n  syntax:\n    content: 'public class MuxLogger : Microsoft.Build.Framework.INodeLogger'\n  inheritance:\n  - System.Object\n  implements:\n  - Microsoft.Build.Framework.INodeLogger\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.MuxLogger.#ctor\n  id: '#ctor'\n  parent: Microsoft.Build.Utilities.MuxLogger\n  langs:\n  - csharp\n  name: MuxLogger()\n  nameWithType: MuxLogger.MuxLogger()\n  fullName: Microsoft.Build.Utilities.MuxLogger.MuxLogger()\n  type: Constructor\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Creates a new instance of the multiplexing logger.\n  syntax:\n    content: public MuxLogger ();\n    parameters: []\n  overload: Microsoft.Build.Utilities.MuxLogger.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource)\n  id: Initialize(Microsoft.Build.Framework.IEventSource)\n  parent: Microsoft.Build.Utilities.MuxLogger\n  langs:\n  - csharp\n  name: Initialize(IEventSource)\n  nameWithType: MuxLogger.Initialize(IEventSource)\n  fullName: Microsoft.Build.Utilities.MuxLogger.Initialize(IEventSource)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Initialize the <xref uid=\"langword_csharp_MuxLogger\" name=\"MuxLogger\" href=\"\"></xref> instance with the specified event source.\n  syntax:\n    content: public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);\n    parameters:\n    - id: eventSource\n      type: Microsoft.Build.Framework.IEventSource\n      description: The event source.\n  overload: Microsoft.Build.Utilities.MuxLogger.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)\n  id: Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)\n  parent: Microsoft.Build.Utilities.MuxLogger\n  langs:\n  - csharp\n  name: Initialize(IEventSource,Int32)\n  nameWithType: MuxLogger.Initialize(IEventSource,Int32)\n  fullName: Microsoft.Build.Utilities.MuxLogger.Initialize(IEventSource,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Initialize the <xref uid=\"langword_csharp_MuxLogger\" name=\"MuxLogger\" href=\"\"></xref> instance with the specified event source and specified maximum number of nodes.\n  syntax:\n    content: public void Initialize (Microsoft.Build.Framework.IEventSource eventSource, int maxNodeCount);\n    parameters:\n    - id: eventSource\n      type: Microsoft.Build.Framework.IEventSource\n      description: The event source.\n    - id: maxNodeCount\n      type: System.Int32\n      description: The maximum number of nodes.\n  overload: Microsoft.Build.Utilities.MuxLogger.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.MuxLogger.Parameters\n  id: Parameters\n  parent: Microsoft.Build.Utilities.MuxLogger\n  langs:\n  - csharp\n  name: Parameters\n  nameWithType: MuxLogger.Parameters\n  fullName: Microsoft.Build.Utilities.MuxLogger.Parameters\n  type: Property\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Gets and sets the Parameters attribute, required by the <xref uid=\"langword_csharp_ILogger\" name=\"ILogger\" href=\"\"></xref> interface.\n  syntax:\n    content: public string Parameters { get; set; }\n    return:\n      type: System.String\n      description: Returns the Parameters attribute.\n  overload: Microsoft.Build.Utilities.MuxLogger.Parameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.MuxLogger.RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)\n  id: RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)\n  parent: Microsoft.Build.Utilities.MuxLogger\n  langs:\n  - csharp\n  name: RegisterLogger(Int32,ILogger)\n  nameWithType: MuxLogger.RegisterLogger(Int32,ILogger)\n  fullName: Microsoft.Build.Utilities.MuxLogger.RegisterLogger(Int32,ILogger)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Registers a logger on the <xref uid=\"langword_csharp_MuxLogger\" name=\"MuxLogger\" href=\"\"></xref> and raises a build-started event if the build-started event has already been logged.\n  syntax:\n    content: public void RegisterLogger (int submissionId, Microsoft.Build.Framework.ILogger logger);\n    parameters:\n    - id: submissionId\n      type: System.Int32\n      description: The submission ID of the logger being registered.\n    - id: logger\n      type: Microsoft.Build.Framework.ILogger\n      description: The logger to register.\n  overload: Microsoft.Build.Utilities.MuxLogger.RegisterLogger*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.MuxLogger.Shutdown\n  id: Shutdown\n  parent: Microsoft.Build.Utilities.MuxLogger\n  langs:\n  - csharp\n  name: Shutdown()\n  nameWithType: MuxLogger.Shutdown()\n  fullName: Microsoft.Build.Utilities.MuxLogger.Shutdown()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Shuts down the <xref uid=\"langword_csharp_MuxLogger\" name=\"MuxLogger\" href=\"\"></xref> and clears out any state.\n  syntax:\n    content: public void Shutdown ();\n    parameters: []\n  overload: Microsoft.Build.Utilities.MuxLogger.Shutdown*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(System.Int32)\n  id: UnregisterLoggers(System.Int32)\n  parent: Microsoft.Build.Utilities.MuxLogger\n  langs:\n  - csharp\n  name: UnregisterLoggers(Int32)\n  nameWithType: MuxLogger.UnregisterLoggers(Int32)\n  fullName: Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Removes the specified logger from the MuxLogger.\n  syntax:\n    content: public bool UnregisterLoggers (int submissionId);\n    parameters:\n    - id: submissionId\n      type: System.Int32\n      description: The submission ID of the logger to be removed.\n    return:\n      type: System.Boolean\n      description: Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method is successful in removing the logger, otherwise, returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.MuxLogger.Verbosity\n  id: Verbosity\n  parent: Microsoft.Build.Utilities.MuxLogger\n  langs:\n  - csharp\n  name: Verbosity\n  nameWithType: MuxLogger.Verbosity\n  fullName: Microsoft.Build.Utilities.MuxLogger.Verbosity\n  type: Property\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Gets and sets the Verbosity attribute, required by the <xref uid=\"langword_csharp_ILogger\" name=\"ILogger\" href=\"\"></xref> interface.\n  syntax:\n    content: public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }\n    return:\n      type: Microsoft.Build.Framework.LoggerVerbosity\n      description: Returns the Verbosity attribute.\n  overload: Microsoft.Build.Utilities.MuxLogger.Verbosity*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.Build.Utilities.MuxLogger.#ctor\n  parent: Microsoft.Build.Utilities.MuxLogger\n  isExternal: false\n  name: MuxLogger()\n  nameWithType: MuxLogger.MuxLogger()\n  fullName: Microsoft.Build.Utilities.MuxLogger.MuxLogger()\n- uid: Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource)\n  parent: Microsoft.Build.Utilities.MuxLogger\n  isExternal: false\n  name: Initialize(IEventSource)\n  nameWithType: MuxLogger.Initialize(IEventSource)\n  fullName: Microsoft.Build.Utilities.MuxLogger.Initialize(IEventSource)\n- uid: Microsoft.Build.Framework.IEventSource\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: IEventSource\n  nameWithType: IEventSource\n  fullName: Microsoft.Build.Framework.IEventSource\n- uid: Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)\n  parent: Microsoft.Build.Utilities.MuxLogger\n  isExternal: false\n  name: Initialize(IEventSource,Int32)\n  nameWithType: MuxLogger.Initialize(IEventSource,Int32)\n  fullName: Microsoft.Build.Utilities.MuxLogger.Initialize(IEventSource,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.Build.Utilities.MuxLogger.Parameters\n  parent: Microsoft.Build.Utilities.MuxLogger\n  isExternal: false\n  name: Parameters\n  nameWithType: MuxLogger.Parameters\n  fullName: Microsoft.Build.Utilities.MuxLogger.Parameters\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Utilities.MuxLogger.RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)\n  parent: Microsoft.Build.Utilities.MuxLogger\n  isExternal: false\n  name: RegisterLogger(Int32,ILogger)\n  nameWithType: MuxLogger.RegisterLogger(Int32,ILogger)\n  fullName: Microsoft.Build.Utilities.MuxLogger.RegisterLogger(Int32,ILogger)\n- uid: Microsoft.Build.Framework.ILogger\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ILogger\n  nameWithType: ILogger\n  fullName: Microsoft.Build.Framework.ILogger\n- uid: Microsoft.Build.Utilities.MuxLogger.Shutdown\n  parent: Microsoft.Build.Utilities.MuxLogger\n  isExternal: false\n  name: Shutdown()\n  nameWithType: MuxLogger.Shutdown()\n  fullName: Microsoft.Build.Utilities.MuxLogger.Shutdown()\n- uid: Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(System.Int32)\n  parent: Microsoft.Build.Utilities.MuxLogger\n  isExternal: false\n  name: UnregisterLoggers(Int32)\n  nameWithType: MuxLogger.UnregisterLoggers(Int32)\n  fullName: Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Build.Utilities.MuxLogger.Verbosity\n  parent: Microsoft.Build.Utilities.MuxLogger\n  isExternal: false\n  name: Verbosity\n  nameWithType: MuxLogger.Verbosity\n  fullName: Microsoft.Build.Utilities.MuxLogger.Verbosity\n- uid: Microsoft.Build.Framework.LoggerVerbosity\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: LoggerVerbosity\n  nameWithType: LoggerVerbosity\n  fullName: Microsoft.Build.Framework.LoggerVerbosity\n- uid: Microsoft.Build.Utilities.MuxLogger.#ctor*\n  parent: Microsoft.Build.Utilities.MuxLogger\n  isExternal: false\n  name: MuxLogger\n  nameWithType: MuxLogger.MuxLogger\n- uid: Microsoft.Build.Utilities.MuxLogger.Initialize*\n  parent: Microsoft.Build.Utilities.MuxLogger\n  isExternal: false\n  name: Initialize\n  nameWithType: MuxLogger.Initialize\n- uid: Microsoft.Build.Utilities.MuxLogger.Parameters*\n  parent: Microsoft.Build.Utilities.MuxLogger\n  isExternal: false\n  name: Parameters\n  nameWithType: MuxLogger.Parameters\n- uid: Microsoft.Build.Utilities.MuxLogger.RegisterLogger*\n  parent: Microsoft.Build.Utilities.MuxLogger\n  isExternal: false\n  name: RegisterLogger\n  nameWithType: MuxLogger.RegisterLogger\n- uid: Microsoft.Build.Utilities.MuxLogger.Shutdown*\n  parent: Microsoft.Build.Utilities.MuxLogger\n  isExternal: false\n  name: Shutdown\n  nameWithType: MuxLogger.Shutdown\n- uid: Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers*\n  parent: Microsoft.Build.Utilities.MuxLogger\n  isExternal: false\n  name: UnregisterLoggers\n  nameWithType: MuxLogger.UnregisterLoggers\n- uid: Microsoft.Build.Utilities.MuxLogger.Verbosity*\n  parent: Microsoft.Build.Utilities.MuxLogger\n  isExternal: false\n  name: Verbosity\n  nameWithType: MuxLogger.Verbosity\n"}