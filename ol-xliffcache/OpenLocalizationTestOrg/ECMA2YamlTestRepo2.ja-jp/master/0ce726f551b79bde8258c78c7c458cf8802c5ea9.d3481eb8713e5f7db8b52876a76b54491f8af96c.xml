{"nodes":[{"pos":[5286,5478],"content":"Supports the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control and provides an interface for data-bound controls to perform SQL data operations against relational databases.","needQuote":true,"needEscape":true,"source":"Supports the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control and provides an interface for data-bound controls to perform SQL data operations against relational databases."},{"pos":[5491,13846],"content":"The SqlDataSourceView class is intended primarily to be used by data-bound controls, and not as a programmable object in page code.       ASP.NET data source controls contain one or more lists of data, represented by data source view objects. The SqlDataSourceView class extends the <xref:System.Web.UI.DataSourceView> class, defines the capabilities of the <xref:System.Web.UI.WebControls.SqlDataSource> control with which it is associated, and implements the basic data functionality for the data source control. The SqlDataSourceView class implements the data functionality for the <xref:System.Web.UI.WebControls.SqlDataSource> control, including the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operations, sorting, filtering, and managing settings that are kept in view state.       Although the SqlDataSourceView object is not directly exposed to page developers by the <xref:System.Web.UI.WebControls.SqlDataSource> control, many of its properties are. The most basic operation that a data source view performs is data retrieval from the underlying database using the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method, which retrieves an <xref:System.Collections.IEnumerable> collection of data items. The SqlDataSourceView class implements data retrieval from relational databases using SQL queries. The SQL queries can be parameterized for greater flexibility and security. The following data retrieval methods, properties, and events are implemented by the SqlDataSourceView and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:      -   The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property      -   The <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property      -   The <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> event      -   The <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event       The SqlDataSourceView object supports updating data in a relational database using SQL commands. The SQL commands can be parameterized for greater flexibility and security. Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform updates automatically using the SqlDataSourceView, while other controls cannot. The following update methods, properties, and events are implemented by the SqlDataSourceView and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:      -   The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property      -   The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> property      -   The <xref:System.Web.UI.WebControls.SqlDataSource.Updating> event      -   The <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event       The SqlDataSourceView supports inserting new rows of data into a relational database. The SQL commands that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property can be parameterized for greater flexibility and security. Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform inserts automatically using the SqlDataSourceView, while other controls cannot. The following insert methods, properties, and events are implemented by the SqlDataSourceView and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:      -   The <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property      -   The <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> property      -   The <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event      -   The <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event       The SqlDataSourceView object also supports deleting data from a relational database. As with other commands, the SQL commands that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property can be parameterized for greater flexibility and security. Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform deletes automatically using the SqlDataSourceView, while other controls cannot. The following delete methods, properties, and events are implemented by the SqlDataSourceView and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:      -   The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> property      -   The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property      -   The <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event      -   The <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> event       Data retrieval is more powerful when the clause that is used to filter the data during data retrieval is dynamic. In other words, an SQL query with a static WHERE clause is not as flexible and powerful as an SQL query where the values in the WHERE clause are bound to values that can change, such as values that are displayed in controls on a Web Forms page. Instead of rebuilding an SQL query and setting the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property on every page load, you can use the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> properties to apply dynamic filtering to data retrieval. These properties are implemented by the SqlDataSourceView and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to data-bound controls and other callers.       You can sort the data that you retrieve with the <xref:System.Web.UI.WebControls.SqlDataSource> control by adding an ORDER BY clause, which causes the database to perform the ordering for you when you retrieve data or by ordering the data in memory after it is retrieved. You can supply a sorting expression to the SqlDataSourceView by setting the <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> property of the <xref:System.Web.UI.DataSourceSelectArguments> object that is passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method. The syntax for the <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> property is the same as the syntax for a <xref:System.Data.DataView.Sort%2A?displayProperty=fullName> property. If you use a stored procedure to retrieve data, you can also use the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property to specify a parameter that is used specifically for sorting the results of a stored procedure call.       When more than one user can change the database concurrently, there is the potential for concurrency conflict. The <xref:System.Web.UI.WebControls.SqlDataSource> control has controls concurrency through the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=fullName> property. The functionality is implemented in the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=fullName> property.       Like many other Web server controls, the SqlDataSourceView implements the <xref:System.Web.UI.IStateManager> interface and uses view state to track its state across page requests. Implementations of the <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> and property and the <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> methods are provided to enable view state tracking for the control. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The SqlDataSourceView class is intended primarily to be used by data-bound controls, and not as a programmable object in page code.","pos":[0,131]},{"content":"ASP.NET data source controls contain one or more lists of data, represented by data source view objects.","pos":[138,242]},{"content":"The SqlDataSourceView class extends the &lt;xref:System.Web.UI.DataSourceView&gt; class, defines the capabilities of the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control with which it is associated, and implements the basic data functionality for the data source control.","pos":[243,514],"source":" The SqlDataSourceView class extends the <xref:System.Web.UI.DataSourceView> class, defines the capabilities of the <xref:System.Web.UI.WebControls.SqlDataSource> control with which it is associated, and implements the basic data functionality for the data source control."},{"content":"The SqlDataSourceView class implements the data functionality for the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control, including the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;, &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A&gt;, &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A&gt;, and &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A&gt; operations, sorting, filtering, and managing settings that are kept in view state.","pos":[515,988],"source":" The SqlDataSourceView class implements the data functionality for the <xref:System.Web.UI.WebControls.SqlDataSource> control, including the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operations, sorting, filtering, and managing settings that are kept in view state."},{"content":"Although the SqlDataSourceView object is not directly exposed to page developers by the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control, many of its properties are.","pos":[995,1166],"source":"       Although the SqlDataSourceView object is not directly exposed to page developers by the <xref:System.Web.UI.WebControls.SqlDataSource> control, many of its properties are."},{"content":"The most basic operation that a data source view performs is data retrieval from the underlying database using the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt; method, which retrieves an &lt;xref:System.Collections.IEnumerable&gt; collection of data items.","pos":[1167,1433],"source":" The most basic operation that a data source view performs is data retrieval from the underlying database using the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method, which retrieves an <xref:System.Collections.IEnumerable> collection of data items."},{"content":"The SqlDataSourceView class implements data retrieval from relational databases using SQL queries.","pos":[1434,1532]},{"content":"The SQL queries can be parameterized for greater flexibility and security.","pos":[1533,1607]},{"content":"The following data retrieval methods, properties, and events are implemented by the SqlDataSourceView and exposed directly by its &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control to page developers and other callers:      -   The &lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt; property      -   The &lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt; property      -   The &lt;xref:System.Web.UI.WebControls.SqlDataSource.Selecting&gt; event      -   The &lt;xref:System.Web.UI.WebControls.SqlDataSource.Selected&gt; event       The SqlDataSourceView object supports updating data in a relational database using SQL commands.","pos":[1608,2259],"source":" The following data retrieval methods, properties, and events are implemented by the SqlDataSourceView and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:      -   The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property      -   The <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property      -   The <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> event      -   The <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event       The SqlDataSourceView object supports updating data in a relational database using SQL commands."},{"content":"The SQL commands can be parameterized for greater flexibility and security.","pos":[2260,2335]},{"content":"Data-bound controls, such as the &lt;xref:System.Web.UI.WebControls.GridView&gt; and &lt;xref:System.Web.UI.WebControls.DetailsView&gt;, can be configured to perform updates automatically using the SqlDataSourceView, while other controls cannot.","pos":[2336,2569],"source":" Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform updates automatically using the SqlDataSourceView, while other controls cannot."},{"content":"The following update methods, properties, and events are implemented by the SqlDataSourceView and exposed directly by its &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control to page developers and other callers:      -   The &lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt; property      -   The &lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt; property      -   The &lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt; event      -   The &lt;xref:System.Web.UI.WebControls.SqlDataSource.Updated&gt; event       The SqlDataSourceView supports inserting new rows of data into a relational database.","pos":[2570,3200],"source":" The following update methods, properties, and events are implemented by the SqlDataSourceView and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:      -   The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property      -   The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> property      -   The <xref:System.Web.UI.WebControls.SqlDataSource.Updating> event      -   The <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event       The SqlDataSourceView supports inserting new rows of data into a relational database."},{"content":"The SQL commands that are specified in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt; property can be parameterized for greater flexibility and security.","pos":[3201,3379],"source":" The SQL commands that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property can be parameterized for greater flexibility and security."},{"content":"Data-bound controls, such as the &lt;xref:System.Web.UI.WebControls.GridView&gt; and &lt;xref:System.Web.UI.WebControls.DetailsView&gt;, can be configured to perform inserts automatically using the SqlDataSourceView, while other controls cannot.","pos":[3380,3613],"source":" Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform inserts automatically using the SqlDataSourceView, while other controls cannot."},{"content":"The following insert methods, properties, and events are implemented by the SqlDataSourceView and exposed directly by its &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control to page developers and other callers:      -   The &lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt; property      -   The &lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt; property      -   The &lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt; event      -   The &lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt; event       The SqlDataSourceView object also supports deleting data from a relational database.","pos":[3614,4245],"source":" The following insert methods, properties, and events are implemented by the SqlDataSourceView and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:      -   The <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property      -   The <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> property      -   The <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event      -   The <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event       The SqlDataSourceView object also supports deleting data from a relational database."},{"content":"As with other commands, the SQL commands that are specified in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt; property can be parameterized for greater flexibility and security.","pos":[4246,4448],"source":" As with other commands, the SQL commands that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property can be parameterized for greater flexibility and security."},{"content":"Data-bound controls, such as the &lt;xref:System.Web.UI.WebControls.GridView&gt; and &lt;xref:System.Web.UI.WebControls.DetailsView&gt;, can be configured to perform deletes automatically using the SqlDataSourceView, while other controls cannot.","pos":[4449,4682],"source":" Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform deletes automatically using the SqlDataSourceView, while other controls cannot."},{"content":"The following delete methods, properties, and events are implemented by the SqlDataSourceView and exposed directly by its &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control to page developers and other callers:      -   The &lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt; property      -   The &lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt; property      -   The &lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt; event      -   The &lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleted&gt; event       Data retrieval is more powerful when the clause that is used to filter the data during data retrieval is dynamic.","pos":[4683,5341],"source":" The following delete methods, properties, and events are implemented by the SqlDataSourceView and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:      -   The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> property      -   The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property      -   The <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event      -   The <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> event       Data retrieval is more powerful when the clause that is used to filter the data during data retrieval is dynamic."},{"content":"In other words, an SQL query with a static WHERE clause is not as flexible and powerful as an SQL query where the values in the WHERE clause are bound to values that can change, such as values that are displayed in controls on a Web Forms page.","pos":[5342,5586]},{"content":"Instead of rebuilding an SQL query and setting the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt; property on every page load, you can use the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt; and &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt; properties to apply dynamic filtering to data retrieval.","pos":[5587,5953],"source":" Instead of rebuilding an SQL query and setting the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property on every page load, you can use the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> properties to apply dynamic filtering to data retrieval."},{"content":"These properties are implemented by the SqlDataSourceView and exposed directly by its &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control to data-bound controls and other callers.","pos":[5954,6136],"source":" These properties are implemented by the SqlDataSourceView and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to data-bound controls and other callers."},{"content":"You can sort the data that you retrieve with the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control by adding an ORDER BY clause, which causes the database to perform the ordering for you when you retrieve data or by ordering the data in memory after it is retrieved.","pos":[6143,6414],"source":"       You can sort the data that you retrieve with the <xref:System.Web.UI.WebControls.SqlDataSource> control by adding an ORDER BY clause, which causes the database to perform the ordering for you when you retrieve data or by ordering the data in memory after it is retrieved."},{"content":"You can supply a sorting expression to the SqlDataSourceView by setting the &lt;xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A&gt; property of the &lt;xref:System.Web.UI.DataSourceSelectArguments&gt; object that is passed to the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt; method.","pos":[6415,6716],"source":" You can supply a sorting expression to the SqlDataSourceView by setting the <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> property of the <xref:System.Web.UI.DataSourceSelectArguments> object that is passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method."},{"content":"The syntax for the &lt;xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A&gt; property is the same as the syntax for a &lt;xref:System.Data.DataView.Sort%2A?displayProperty=fullName&gt; property.","pos":[6717,6912],"source":" The syntax for the <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> property is the same as the syntax for a <xref:System.Data.DataView.Sort%2A?displayProperty=fullName> property."},{"content":"If you use a stored procedure to retrieve data, you can also use the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt; property to specify a parameter that is used specifically for sorting the results of a stored procedure call.","pos":[6913,7163],"source":" If you use a stored procedure to retrieve data, you can also use the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property to specify a parameter that is used specifically for sorting the results of a stored procedure call."},{"content":"When more than one user can change the database concurrently, there is the potential for concurrency conflict.","pos":[7170,7280]},{"content":"The &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control has controls concurrency through the &lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=fullName&gt; property.","pos":[7281,7476],"source":" The <xref:System.Web.UI.WebControls.SqlDataSource> control has controls concurrency through the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=fullName> property."},{"content":"The functionality is implemented in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=fullName&gt; property.","pos":[7477,7620],"source":" The functionality is implemented in the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=fullName> property."},{"content":"Like many other Web server controls, the SqlDataSourceView implements the &lt;xref:System.Web.UI.IStateManager&gt; interface and uses view state to track its state across page requests.","pos":[7627,7806],"source":"       Like many other Web server controls, the SqlDataSourceView implements the <xref:System.Web.UI.IStateManager> interface and uses view state to track its state across page requests."},{"content":"Implementations of the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A&gt; and property and the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A&gt;, &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A&gt;, and &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A&gt; methods are provided to enable view state tracking for the control.","pos":[7807,8203],"source":" Implementations of the <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> and property and the <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> methods are provided to enable view state tracking for the control."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET State Management Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[8204,8305],"source":" For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[15907,16136],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class setting the specified <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control as the owner of the current view.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> class setting the specified <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control as the owner of the current view."},{"pos":[16149,17173],"content":"The SqlDataSourceView constructor is called by the <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> method to return a new instance of a data source view with the specified `name` parameter. The <xref:System.Web.UI.WebControls.SqlDataSource> control is associated with only one <xref:System.Web.UI.WebControls.SqlDataSourceView> object at any one time, and always names the view `Table`, although this naming restriction is imposed by the <xref:System.Web.UI.WebControls.SqlDataSource> control, not the <xref:System.Web.UI.WebControls.SqlDataSourceView>. You can override the <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> method to support views with a different naming convention.       The <xref:System.Web.HttpContext> object that is passed by the `context` parameter is used by the data source view to access parameter objects, such as the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> and <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> properties.","needQuote":false,"needEscape":true,"nodes":[{"content":"The SqlDataSourceView constructor is called by the &lt;xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A&gt; method to return a new instance of a data source view with the specified <ph id=\"ph1\">`name`</ph> parameter.","pos":[0,199],"source":"The SqlDataSourceView constructor is called by the <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> method to return a new instance of a data source view with the specified `name` parameter."},{"content":"The &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control is associated with only one &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; object at any one time, and always names the view <ph id=\"ph1\">`Table`</ph>, although this naming restriction is imposed by the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control, not the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;.","pos":[200,563],"source":" The <xref:System.Web.UI.WebControls.SqlDataSource> control is associated with only one <xref:System.Web.UI.WebControls.SqlDataSourceView> object at any one time, and always names the view `Table`, although this naming restriction is imposed by the <xref:System.Web.UI.WebControls.SqlDataSource> control, not the <xref:System.Web.UI.WebControls.SqlDataSourceView>."},{"content":"You can override the &lt;xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A&gt; method to support views with a different naming convention.","pos":[564,702],"source":" You can override the <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> method to support views with a different naming convention."},{"content":"The &lt;xref:System.Web.HttpContext&gt; object that is passed by the <ph id=\"ph1\">`context`</ph> parameter is used by the data source view to access parameter objects, such as the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt; and &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A&gt; properties.","pos":[709,1022],"source":"       The <xref:System.Web.HttpContext> object that is passed by the `context` parameter is used by the data source view to access parameter objects, such as the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> and <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> properties."}]},{"pos":[17420,17538],"content":"The data source control with which the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is associated.","needQuote":true,"needEscape":true,"source":"The data source control with which the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> is associated."},{"pos":[17599,17696],"content":"A unique name for the data source view, within the scope of the data source control that owns it.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique name for the data source view, within the scope of the data source control that owns it.","pos":[0,97]}]},{"pos":[17769,17825],"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The current <xref href=\"System.Web.HttpContext\"></xref>."},{"pos":[18394,18671],"content":"Gets or sets a value indicating whether a data retrieval operation is canceled when any parameter that is contained in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*&gt; collection evaluates to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether a data retrieval operation is canceled when any parameter that is contained in the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*> collection evaluates to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[18683,18811],"content":"The value of the <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> property is stored in view state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the &lt;xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A&gt; property is stored in view state.","pos":[0,128],"source":"The value of the <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> property is stored in view state."}]},{"pos":[18947,19391],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if a data retrieval operation is canceled when a parameter contained in the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*> collection evaluated to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if a data retrieval operation is canceled when a parameter contained in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*&gt; collection evaluated to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,367],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if a data retrieval operation is canceled when a parameter contained in the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*> collection evaluated to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[368,444],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[19892,20135],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control supports the delete operation.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object that is associated with the current <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control supports the delete operation."},{"pos":[20147,20377],"content":"The CanDelete property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property is set. A delete operation could still fail if all the data properties are not set or are not set correctly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CanDelete property returns <ph id=\"ph1\">`true`</ph> if the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt; property is set.","pos":[0,129],"source":"The CanDelete property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property is set."},{"content":"A delete operation could still fail if all the data properties are not set or are not set correctly.","pos":[130,230]}]},{"pos":[20499,20666],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the operation is supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21149,21392],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control supports the insert operation.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object that is associated with the current <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control supports the insert operation."},{"pos":[21404,21635],"content":"The CanInsert property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property is set. An insert operation could still fail if all the data properties are not set or are not set correctly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CanInsert property returns <ph id=\"ph1\">`true`</ph> if the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt; property is set.","pos":[0,129],"source":"The CanInsert property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property is set."},{"content":"An insert operation could still fail if all the data properties are not set or are not set correctly.","pos":[130,231]}]},{"pos":[21757,21924],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the operation is supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22397,22648],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control supports the paging of retrieved data.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object that is associated with the current <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control supports the paging of retrieved data."},{"pos":[22660,22746],"content":"The <xref:System.Web.UI.WebControls.SqlDataSourceView> object does not support paging.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; object does not support paging.","pos":[0,86],"source":"The <xref:System.Web.UI.WebControls.SqlDataSourceView> object does not support paging."}]},{"pos":[22866,22942],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in all cases.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases."},{"pos":[23498,23793],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control supports retrieving the total number of data rows, in addition to the set of data.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object that is associated with the current <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control supports retrieving the total number of data rows, in addition to the set of data."},{"pos":[23805,23906],"content":"The <xref:System.Web.UI.WebControls.SqlDataSourceView> object does not support retrieving row counts.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; object does not support retrieving row counts.","pos":[0,101],"source":"The <xref:System.Web.UI.WebControls.SqlDataSourceView> object does not support retrieving row counts."}]},{"pos":[24043,24119],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in all cases.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases."},{"pos":[24607,24865],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control supports a sorted view on the retrieved data.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object that is associated with the current <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control supports a sorted view on the retrieved data."},{"pos":[24877,25170],"content":"The CanSort property returns <ph id=\"ph1\">`true`</ph>, if the current &lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt; property is set to the &lt;xref:System.Web.UI.WebControls.SqlDataSourceMode&gt; value and the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt; property is set.","needQuote":true,"needEscape":true,"source":"The CanSort property returns `true`, if the current <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode> value and the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is set."},{"pos":[25290,25451],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if sorting is supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if sorting is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25932,26175],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control supports the update operation.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object that is associated with the current <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control supports the update operation."},{"pos":[26187,26417],"content":"The CanUpdate property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property is set. A delete operation could still fail if all the data properties are not set or are not set correctly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CanUpdate property returns <ph id=\"ph1\">`true`</ph> if the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt; property is set.","pos":[0,129],"source":"The CanUpdate property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property is set."},{"content":"A delete operation could still fail if all the data properties are not set or are not set correctly.","pos":[130,230]}]},{"pos":[26539,26706],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the operation is supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[27229,27456],"content":"Gets or sets the value indicating how the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control performs updates and deletes when data in a row in the underlying database changes during the time of the operation.","needQuote":true,"needEscape":true,"source":"Gets or sets the value indicating how the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control performs updates and deletes when data in a row in the underlying database changes during the time of the operation."},{"pos":[27469,29356],"content":"The ConflictDetection property determines whether parameters for old and new values are applied to the `Update` method. For example, if the command that is specified by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property returns a <xref:System.Data.DataSet> object with the columns `Name` and `Number`, and the ConflictDetection property is set to the <xref:System.Web.UI.ConflictOptions> value, parameters are created for `Name` and `Number` for the update operation. If the ConflictDetection property is set to the <xref:System.Web.UI.ConflictOptions> value, parameters are created for `Name`, `Number`, `original_Name`, and `original_Number`. (The exact name of the parameters for the original values depends on the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.) Then, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object determines if the method that is specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property has parameters that match.       Concurrency control is a technique data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data. For example, one client reads data and presents it to a user, while another client reads the same data, and presents it to a different user. If both users update the data and submit it to the data storage, some unexpected result might occur, because both clients might update different values for the same data. This is considered a conflict. By setting the ConflictDetection property to the <xref:System.Web.UI.ConflictOptions> value, the update operation can then compare the old and new values to the original data source to detect conflicts and handle them as required.       The value of the ConflictDetection property is stored in view state.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ConflictDetection property determines whether parameters for old and new values are applied to the <ph id=\"ph1\">`Update`</ph> method.","pos":[0,119],"source":"The ConflictDetection property determines whether parameters for old and new values are applied to the `Update` method."},{"content":"For example, if the command that is specified by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt; property returns a &lt;xref:System.Data.DataSet&gt; object with the columns <ph id=\"ph1\">`Name`</ph> and <ph id=\"ph2\">`Number`</ph>, and the ConflictDetection property is set to the &lt;xref:System.Web.UI.ConflictOptions&gt; value, parameters are created for <ph id=\"ph3\">`Name`</ph> and <ph id=\"ph4\">`Number`</ph> for the update operation.","pos":[120,497],"source":" For example, if the command that is specified by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property returns a <xref:System.Data.DataSet> object with the columns `Name` and `Number`, and the ConflictDetection property is set to the <xref:System.Web.UI.ConflictOptions> value, parameters are created for `Name` and `Number` for the update operation."},{"content":"If the ConflictDetection property is set to the &lt;xref:System.Web.UI.ConflictOptions&gt; value, parameters are created for <ph id=\"ph1\">`Name`</ph>, <ph id=\"ph2\">`Number`</ph>, <ph id=\"ph3\">`original_Name`</ph>, and <ph id=\"ph4\">`original_Number`</ph>.","pos":[498,674],"source":" If the ConflictDetection property is set to the <xref:System.Web.UI.ConflictOptions> value, parameters are created for `Name`, `Number`, `original_Name`, and `original_Number`."},{"content":"(The exact name of the parameters for the original values depends on the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A&gt;.) Then, the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; object determines if the method that is specified in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt; property has parameters that match.","pos":[675,1056],"source":" (The exact name of the parameters for the original values depends on the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.) Then, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object determines if the method that is specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property has parameters that match."},{"content":"Concurrency control is a technique data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data.","pos":[1063,1234]},{"content":"For example, one client reads data and presents it to a user, while another client reads the same data, and presents it to a different user.","pos":[1235,1375]},{"content":"If both users update the data and submit it to the data storage, some unexpected result might occur, because both clients might update different values for the same data.","pos":[1376,1546]},{"content":"This is considered a conflict.","pos":[1547,1577]},{"content":"By setting the ConflictDetection property to the &lt;xref:System.Web.UI.ConflictOptions&gt; value, the update operation can then compare the old and new values to the original data source to detect conflicts and handle them as required.","pos":[1578,1808],"source":" By setting the ConflictDetection property to the <xref:System.Web.UI.ConflictOptions> value, the update operation can then compare the old and new values to the original data source to detect conflicts and handle them as required."},{"content":"The value of the ConflictDetection property is stored in view state.","pos":[1815,1883]}]},{"pos":[29523,29669],"content":"One of the <xref href=\"System.Web.UI.ConflictOptions\"></xref> values. The default is the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ConflictOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,69],"source":"One of the <xref href=\"System.Web.UI.ConflictOptions\"></xref> values."},{"content":"The default is the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ConflictOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","pos":[70,146],"source":" The default is the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value."}]},{"pos":[29873,29968],"content":"The selected value is not one of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ConflictOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The selected value is not one of the <xref href=\"System.Web.UI.ConflictOptions\"></xref> values."},{"pos":[30551,30887],"content":"Performs a delete operation using the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand<bpt id=\"p1\">*</bpt>&gt; SQL string, any parameters that are specified in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters<ept id=\"p1\">*</ept>&gt; collection, and the values that are in the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">keys</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">oldValues</ph><ept id=\"p3\">&lt;/code&gt;</ept> collections.","needQuote":true,"needEscape":true,"source":"Performs a delete operation using the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*> SQL string, any parameters that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*> collection, and the values that are in the specified <code>keys</code> and <code>oldValues</code> collections."},{"pos":[30899,31049],"content":"The Delete method calls the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A&gt; method, passing the <ph id=\"ph1\">`keys`</ph> and <ph id=\"ph2\">`oldValues`</ph> parameters.","needQuote":true,"needEscape":true,"source":"The Delete method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> method, passing the `keys` and `oldValues` parameters."},{"pos":[31265,31428],"content":"An <xref:System.Collections.IDictionary> of object or row key values for the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*> operation to delete.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; of object or row key values for the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*&gt; operation to delete.","pos":[0,163],"source":"An <xref:System.Collections.IDictionary> of object or row key values for the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*> operation to delete."}]},{"pos":[31511,31758],"content":"An &lt;xref:System.Collections.IDictionary&gt; that contains row values that are evaluated only if the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*&gt; property is set to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ConflictOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IDictionary> that contains row values that are evaluated only if the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value."},{"pos":[31815,31895],"content":"A value that represents the number of rows deleted from the underlying database.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that represents the number of rows deleted from the underlying database.","pos":[0,80]}]},{"pos":[32552,32693],"content":"The &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[33112,33263],"content":"Gets or sets the SQL string that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> uses to delete data from the underlying database.","needQuote":true,"needEscape":true,"source":"Gets or sets the SQL string that the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> uses to delete data from the underlying database."},{"pos":[33276,34462],"content":"Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.       If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used. For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=fullName>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`. However, if the provider is set to the  <xref:System.Data.Odbc?displayProperty=fullName> or <xref:System.Data.OleDb?displayProperty=fullName>, the placeholder of the parameter is `'?'`. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md).       The DeleteCommand can be an SQL string or the name of a stored procedure, if the underlying database supports stored procedures.       The value of the DeleteCommand property is stored in view state.","needQuote":false,"needEscape":true,"nodes":[{"content":"Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the &lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt; property.","pos":[0,248],"source":"Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property."},{"content":"If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.","pos":[255,391]},{"content":"For example, if the provider is the &lt;xref:System.Data.SqlClient?displayProperty=fullName&gt;, which is the default provider for the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; class, the placeholder of the parameter is <ph id=\"ph1\">`'@parameterName'`</ph>.","pos":[392,630],"source":" For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=fullName>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`."},{"content":"However, if the provider is set to the  &lt;xref:System.Data.Odbc?displayProperty=fullName&gt; or &lt;xref:System.Data.OleDb?displayProperty=fullName&gt;, the placeholder of the parameter is <ph id=\"ph1\">`'?'`</ph>.","pos":[631,816],"source":" However, if the provider is set to the  <xref:System.Data.Odbc?displayProperty=fullName> or <xref:System.Data.OleDb?displayProperty=fullName>, the placeholder of the parameter is `'?'`."},{"content":"For more information on parameterized SQL queries and commands, see <bpt id=\"p1\">[</bpt>Using Parameters with the SqlDataSource Control<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[817,974],"source":" For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md)."},{"content":"The DeleteCommand can be an SQL string or the name of a stored procedure, if the underlying database supports stored procedures.","pos":[981,1109]},{"content":"The value of the DeleteCommand property is stored in view state.","pos":[1116,1180]}]},{"pos":[35736,35844],"content":"An SQL string that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> uses to delete data.","needQuote":true,"needEscape":true,"source":"An SQL string that the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> uses to delete data."},{"pos":[36371,36555],"content":"Gets or sets a value indicating whether the text in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*> property is a SQL statement or the name of a stored procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the text in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*&gt; property is a SQL statement or the name of a stored procedure.","pos":[0,184],"source":"Gets or sets a value indicating whether the text in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*> property is a SQL statement or the name of a stored procedure."}]},{"pos":[36567,36635],"content":"The value of the DeleteCommandType property is stored in view state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the DeleteCommandType property is stored in view state.","pos":[0,68]}]},{"pos":[36843,37031],"content":"One of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values. The default is the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,90],"source":"One of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values."},{"content":"The default is the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","pos":[91,188],"source":" The default is the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> value."}]},{"pos":[37235,37351],"content":"The selected value is not one of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The selected value is not one of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values."},{"pos":[37737,37782],"content":"Occurs when a delete operation has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a delete operation has completed.","pos":[0,45]}]},{"pos":[37795,38202],"content":"Handle the Deleted event to examine the values of output parameters after a delete operation has completed. The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"nodes":[{"content":"Handle the Deleted event to examine the values of output parameters after a delete operation has completed.","pos":[0,107]},{"content":"The output parameters are available from the &lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt; object that is associated with the event.","pos":[108,256],"source":" The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[263,405],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[38408,38420],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38871,39024],"content":"Gets the parameters collection containing the parameters that are used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the parameters collection containing the parameters that are used by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*&gt; property.","pos":[0,153],"source":"Gets the parameters collection containing the parameters that are used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*> property."}]},{"pos":[39037,40772],"content":"If the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property contains a parameterized SQL query, the DeleteParameters collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.       Parameter names might be affected by the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property; specifically, if the name identifies a primary key, such as a key that is specified using the `DataKeyNames` property of a data-bound control, or in delete and update scenarios in which the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions> value and a set of `oldValues` is passed to the corresponding data method. In this case, the format string is applied to each parameter name in the `oldValues` collection.       Depending on the ADO.NET provider, the order of the parameters in the DeleteParameters collection might be important. The <xref:System.Data.OleDb?displayProperty=fullName> and <xref:System.Data.Odbc?displayProperty=fullName> providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query. The <xref:System.Data.SqlClient?displayProperty=fullName> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with the placeholder in the SQL query. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"If the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt; property contains a parameterized SQL query, the DeleteParameters collection contains any &lt;xref:System.Web.UI.WebControls.Parameter&gt; objects that correspond to the parameter placeholders in the SQL string.","pos":[0,280],"source":"If the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property contains a parameterized SQL query, the DeleteParameters collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string."},{"content":"Parameter names might be affected by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A&gt; property; specifically, if the name identifies a primary key, such as a key that is specified using the <ph id=\"ph1\">`DataKeyNames`</ph> property of a data-bound control, or in delete and update scenarios in which the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt; property is set to the &lt;xref:System.Web.UI.ConflictOptions&gt; value and a set of <ph id=\"ph2\">`oldValues`</ph> is passed to the corresponding data method.","pos":[287,819],"source":"       Parameter names might be affected by the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property; specifically, if the name identifies a primary key, such as a key that is specified using the `DataKeyNames` property of a data-bound control, or in delete and update scenarios in which the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions> value and a set of `oldValues` is passed to the corresponding data method."},{"content":"In this case, the format string is applied to each parameter name in the <ph id=\"ph1\">`oldValues`</ph> collection.","pos":[820,916],"source":" In this case, the format string is applied to each parameter name in the `oldValues` collection."},{"content":"Depending on the ADO.NET provider, the order of the parameters in the DeleteParameters collection might be important.","pos":[923,1040]},{"content":"The &lt;xref:System.Data.OleDb?displayProperty=fullName&gt; and &lt;xref:System.Data.Odbc?displayProperty=fullName&gt; providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query.","pos":[1041,1282],"source":" The <xref:System.Data.OleDb?displayProperty=fullName> and <xref:System.Data.Odbc?displayProperty=fullName> providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query."},{"content":"The &lt;xref:System.Data.SqlClient?displayProperty=fullName&gt; provider, which is the default ADO.NET provider for the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control, associates the parameters in the collection by matching the name of the parameter with the placeholder in the SQL query.","pos":[1283,1573],"source":" The <xref:System.Data.SqlClient?displayProperty=fullName> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with the placeholder in the SQL query."},{"content":"For more information on parameterized SQL queries and commands, see <bpt id=\"p1\">[</bpt>Using Parameters with the SqlDataSource Control<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1574,1731],"source":" For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[42428,42613],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ParameterCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the parameters used by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*&gt; property.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.ParameterCollection\"></xref> that contains the parameters used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*> property."},{"pos":[43095,43128],"content":"Occurs before a delete operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs before a delete operation.","pos":[0,33]}]},{"pos":[43141,44209],"content":"Handle the Deleting event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the delete operation.       The connection to the underlying data source is not yet open when the event handler delegate is called. Therefore, you cannot cancel the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object. You can, however, cancel the operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"nodes":[{"content":"Handle the Deleting event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control performs the delete operation.","pos":[0,281],"source":"Handle the Deleting event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the delete operation."},{"content":"The connection to the underlying data source is not yet open when the event handler delegate is called.","pos":[288,391]},{"content":"Therefore, you cannot cancel the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A&gt; operation directly by calling the &lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt; method on the &lt;xref:System.Data.Common.DbCommand&gt; object that is exposed by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt; object.","pos":[392,716],"source":" Therefore, you cannot cancel the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object."},{"content":"You can, however, cancel the operation by setting the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt; to <ph id=\"ph1\">`true`</ph>.","pos":[717,915],"source":" You can, however, cancel the operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[922,1064],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[45094,45106],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45741,46077],"content":"Performs a delete operation using the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand<bpt id=\"p1\">*</bpt>&gt; SQL string, any parameters that are specified in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters<ept id=\"p1\">*</ept>&gt; collection, and the values that are in the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">keys</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">oldValues</ph><ept id=\"p3\">&lt;/code&gt;</ept> collections.","needQuote":true,"needEscape":true,"source":"Performs a delete operation using the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*> SQL string, any parameters that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*> collection, and the values that are in the specified <code>keys</code> and <code>oldValues</code> collections."},{"pos":[46090,48094],"content":"The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method to delete data from a database. Page developers and data-bound control authors do not call the ExecuteDelete method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method.       The values that are contained in the `keys` collection are evaluated and merged with any values that are contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection. If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions> value, the values that are contained in the `oldValues` collection are formatted with the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property and are also merged.       Before the delete operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> event. You can handle this event to examine the values of the parameters and to perform any preprocessing before a delete.       To perform a delete operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database. After the delete operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> event. You can handle this event to examine any return values and error codes and to perform any post-processing.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; class implements the inherited &lt;xref:System.Web.UI.DataSourceView.ExecuteDelete%2A&gt; method to delete data from a database.","pos":[0,177],"source":"The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method to delete data from a database."},{"content":"Page developers and data-bound control authors do not call the ExecuteDelete method directly; instead, use the publicly exposed &lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt; method.","pos":[178,370],"source":" Page developers and data-bound control authors do not call the ExecuteDelete method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method."},{"content":"The values that are contained in the <ph id=\"ph1\">`keys`</ph> collection are evaluated and merged with any values that are contained by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A&gt; collection.","pos":[377,581],"source":"       The values that are contained in the `keys` collection are evaluated and merged with any values that are contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection."},{"content":"If the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt; property is set to the &lt;xref:System.Web.UI.ConflictOptions&gt; value, the values that are contained in the <ph id=\"ph1\">`oldValues`</ph> collection are formatted with the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A&gt; property and are also merged.","pos":[582,925],"source":" If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions> value, the values that are contained in the `oldValues` collection are formatted with the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property and are also merged."},{"content":"Before the delete operation is performed, the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A&gt; method is called to raise the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting&gt; event.","pos":[932,1139],"source":"       Before the delete operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> event."},{"content":"You can handle this event to examine the values of the parameters and to perform any preprocessing before a delete.","pos":[1140,1255]},{"content":"To perform a delete operation, the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; object builds a &lt;xref:System.Data.Common.DbCommand&gt; object using the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt; text and any associated &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A&gt; properties, and then executes the &lt;xref:System.Data.Common.DbCommand&gt; object against the underlying database.","pos":[1262,1689],"source":"       To perform a delete operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database."},{"content":"After the delete operation completes, the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A&gt; method is called to raise the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted&gt; event.","pos":[1690,1891],"source":" After the delete operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> event."},{"content":"You can handle this event to examine any return values and error codes and to perform any post-processing.","pos":[1892,1998]}]},{"pos":[48330,48441],"content":"An <xref:System.Collections.IDictionary> of object or row key values for the ExecuteDelete operation to delete.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; of object or row key values for the ExecuteDelete operation to delete.","pos":[0,111],"source":"An <xref:System.Collections.IDictionary> of object or row key values for the ExecuteDelete operation to delete."}]},{"pos":[48524,48771],"content":"An &lt;xref:System.Collections.IDictionary&gt; that contains row values that are evaluated only if the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*&gt; property is set to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ConflictOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IDictionary> that contains row values that are evaluated only if the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value."},{"pos":[48828,48908],"content":"A value that represents the number of rows deleted from the underlying database.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that represents the number of rows deleted from the underlying database.","pos":[0,80]}]},{"pos":[50874,51185],"content":"Performs an insert operation using the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand<bpt id=\"p1\">*</bpt>&gt; SQL string, any parameters that are specified in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters<ept id=\"p1\">*</ept>&gt; collection, and the values that are in the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">values</ph><ept id=\"p2\">&lt;/code&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Performs an insert operation using the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> SQL string, any parameters that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*> collection, and the values that are in the specified <code>values</code> collection."},{"pos":[51198,52641],"content":"The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method to insert data into a database. Page developers and data-bound control authors do not call the ExecuteInsert method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.       Before the insert operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> event. You can handle this event to examine the values of the parameters and to perform any preprocessing before an insert.       To perform an insert operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database. After the insert completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> event. You can handle this event to examine any return values and error codes and to perform any post-processing.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method to insert data into a database. Page developers and data-bound control authors do not call the ExecuteInsert method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.       Before the insert operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> event. You can handle this event to examine the values of the parameters and to perform any preprocessing before an insert.       To perform an insert operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database. After the insert completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> event. You can handle this event to examine any return values and error codes and to perform any post-processing.","pos":[0,1439],"nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; class implements the inherited &lt;xref:System.Web.UI.DataSourceView.ExecuteInsert%2A&gt; method to insert data into a database.","pos":[0,177],"source":"The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method to insert data into a database."},{"content":"Page developers and data-bound control authors do not call the ExecuteInsert method directly; instead, use the publicly exposed &lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt; method.","pos":[178,370],"source":" Page developers and data-bound control authors do not call the ExecuteInsert method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method."},{"content":"Before the insert operation is performed, the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt; method is called to raise the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting&gt; event.","pos":[377,586],"source":"       Before the insert operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> event."},{"content":"You can handle this event to examine the values of the parameters and to perform any preprocessing before an insert.","pos":[587,703]},{"content":"To perform an insert operation, the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; object builds a &lt;xref:System.Data.Common.DbCommand&gt; object using the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt; text and any associated &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A&gt; properties, and then executes the &lt;xref:System.Data.Common.DbCommand&gt; object against the underlying database.","pos":[710,1138],"source":"       To perform an insert operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database."},{"content":"After the insert completes, the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt; method is called to raise the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted&gt; event.","pos":[1139,1332],"source":" After the insert completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> event."},{"content":"You can handle this event to examine any return values and error codes and to perform any post-processing.","pos":[1333,1439]}]}]},{"pos":[52839,53259],"content":"An &lt;xref:System.Collections.IDictionary&gt; of values used with the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand<bpt id=\"p1\">*</bpt>&gt; property to perform the insert database operation. If there are no parameters associated with the query or if the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand<ept id=\"p1\">*</ept>&gt; property is not a parameterized SQL query, pass <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IDictionary> of values used with the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> property to perform the insert database operation. If there are no parameters associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> property is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[53316,53397],"content":"A value that represents the number of rows inserted into the underlying database.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that represents the number of rows inserted into the underlying database.","pos":[0,81]}]},{"pos":[53593,53720],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> cannot establish a connection with the underlying data source.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source."},{"pos":[53815,53901],"content":"The current user does not have the correct permissions to gain access to the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current user does not have the correct permissions to gain access to the database.","pos":[0,86]}]},{"pos":[54004,54145],"content":"The &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[54725,54971],"content":"Retrieves data from the underlying database using the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand<bpt id=\"p1\">*</bpt>&gt; SQL string and any parameters that are in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters<ept id=\"p1\">*</ept>&gt; collection.","needQuote":true,"needEscape":true,"source":"Retrieves data from the underlying database using the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*> SQL string and any parameters that are in the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*> collection."},{"pos":[54984,58300],"content":"The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited ExecuteSelect method to retrieve data from a database. Page developers and data-bound control authors do not call the ExecuteSelect method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method.       Before the data retrieval is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> event. You can handle this event to examine the values of the parameters and to perform any preprocessing before data is retrieved.       To perform the operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>, and executes it against the underlying database. After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event. You can handle this event to examine any return values, error codes, and perform any post-processing.       The ExecuteSelect method returns a <xref:System.Data.DataView> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode>, or a <xref:System.Data.IDataReader> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode>. Close the <xref:System.Data.IDataReader> object when you have finished reading the data.       If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode> and caching is enabled, the <xref:System.Web.UI.WebControls.SqlDataSourceView> retrieves data from and saves data to the cache during the data operation. The cache is created, discarded, or refreshed based on the caching behavior specified by the combination of the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> properties.      > [!IMPORTANT] >  When you are using client impersonation under Windows authentication, the data is cached when the first user accesses the data. If another user requests the same data, the data is retrieved from the cache. The data is not retrieved by making another call to the database to verify the user's access to the data. If you expect multiple users to access the data, and you want each retrieval to the data to be verified by the database's security configurations, do not use caching.       If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode> and a <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> has been specified, it is evaluated along with any supplied <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> and the resulting filter is applied to the list of data during the data retrieval operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; class implements the inherited ExecuteSelect method to retrieve data from a database.","pos":[0,140],"source":"The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited ExecuteSelect method to retrieve data from a database."},{"content":"Page developers and data-bound control authors do not call the ExecuteSelect method directly; instead, use the publicly exposed &lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt; method.","pos":[141,333],"source":" Page developers and data-bound control authors do not call the ExecuteSelect method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method."},{"content":"Before the data retrieval is performed, the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A&gt; method is called to raise the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting&gt; event.","pos":[340,547],"source":"       Before the data retrieval is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> event."},{"content":"You can handle this event to examine the values of the parameters and to perform any preprocessing before data is retrieved.","pos":[548,672]},{"content":"To perform the operation, the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; object builds a &lt;xref:System.Data.Common.DbCommand&gt; object using the &lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt; text and any associated &lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;, and executes it against the underlying database.","pos":[679,1033],"source":"       To perform the operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>, and executes it against the underlying database."},{"content":"After the operation completes, the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A&gt; method is called to raise the &lt;xref:System.Web.UI.WebControls.SqlDataSource.Selected&gt; event.","pos":[1034,1226],"source":" After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event."},{"content":"You can handle this event to examine any return values, error codes, and perform any post-processing.","pos":[1227,1328]},{"content":"The ExecuteSelect method returns a &lt;xref:System.Data.DataView&gt; object if the &lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt; is set to &lt;xref:System.Web.UI.WebControls.SqlDataSourceMode&gt;, or a &lt;xref:System.Data.IDataReader&gt; object if the &lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt; is set to &lt;xref:System.Web.UI.WebControls.SqlDataSourceMode&gt;.","pos":[1335,1715],"source":"       The ExecuteSelect method returns a <xref:System.Data.DataView> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode>, or a <xref:System.Data.IDataReader> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode>."},{"content":"Close the &lt;xref:System.Data.IDataReader&gt; object when you have finished reading the data.","pos":[1716,1804],"source":" Close the <xref:System.Data.IDataReader> object when you have finished reading the data."},{"content":"If the &lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt; is set to &lt;xref:System.Web.UI.WebControls.SqlDataSourceMode&gt; and caching is enabled, the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; retrieves data from and saves data to the cache during the data operation.","pos":[1811,2097],"source":"       If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode> and caching is enabled, the <xref:System.Web.UI.WebControls.SqlDataSourceView> retrieves data from and saves data to the cache during the data operation."},{"content":"The cache is created, discarded, or refreshed based on the caching behavior specified by the combination of the &lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt; and &lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt; properties.","pos":[2098,2361],"source":" The cache is created, discarded, or refreshed based on the caching behavior specified by the combination of the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> properties."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  When you are using client impersonation under Windows authentication, the data is cached when the first user accesses the data.","pos":[2367,2512],"source":"      > [!IMPORTANT] >  When you are using client impersonation under Windows authentication, the data is cached when the first user accesses the data."},{"content":"If another user requests the same data, the data is retrieved from the cache.","pos":[2513,2590]},{"content":"The data is not retrieved by making another call to the database to verify the user's access to the data.","pos":[2591,2696]},{"content":"If you expect multiple users to access the data, and you want each retrieval to the data to be verified by the database's security configurations, do not use caching.","pos":[2697,2863]},{"content":"If the &lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt; is set to &lt;xref:System.Web.UI.WebControls.SqlDataSourceMode&gt; and a &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt; has been specified, it is evaluated along with any supplied &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt; and the resulting filter is applied to the list of data during the data retrieval operation.","pos":[2870,3303],"source":"       If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode> and a <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> has been specified, it is evaluated along with any supplied <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> and the resulting filter is applied to the list of data during the data retrieval operation."}]},{"pos":[58549,58686],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceSelectArguments\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object used to request operations on the data beyond basic data retrieval.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.DataSourceSelectArguments\"></xref> object used to request operations on the data beyond basic data retrieval."},{"pos":[58761,58820],"content":"An <xref:System.Collections.IEnumerable> list of data rows.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerable&gt; list of data rows.","pos":[0,59],"source":"An <xref:System.Collections.IEnumerable> list of data rows."}]},{"pos":[60724,61073],"content":"Performs an update operation using the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand<bpt id=\"p1\">*</bpt>&gt; SQL string, any parameters that are in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters<ept id=\"p1\">*</ept>&gt; collection, and the values that are in the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">keys</ph><ept id=\"p2\">&lt;/code&gt;</ept>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">values</ph><ept id=\"p3\">&lt;/code&gt;</ept>, and <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph3\">oldValues</ph><ept id=\"p4\">&lt;/code&gt;</ept> collections.","needQuote":true,"needEscape":true,"source":"Performs an update operation using the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> SQL string, any parameters that are in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*> collection, and the values that are in the specified <code>keys</code>, <code>values</code>, and <code>oldValues</code> collections."},{"pos":[61086,62993],"content":"The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited ExecuteUpdate method to update data in a database. Page developers and data-bound control authors do not call the ExecuteUpdate method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method.       The values contained in the `keys` and `values` collections are evaluated and merged with any values contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection. If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to  <xref:System.Web.UI.ConflictOptions>, the values contained in the `oldValues` collection are formatted with the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> and also merged.       Before the update operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> event. You can handle this event to examine the values of the parameters and perform any preprocessing before an update.       To perform the operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database. After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> event. You can handle this event to examine any return values and error codes and to perform any post-processing.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; class implements the inherited ExecuteUpdate method to update data in a database.","pos":[0,136],"source":"The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited ExecuteUpdate method to update data in a database."},{"content":"Page developers and data-bound control authors do not call the ExecuteUpdate method directly; instead, use the publicly exposed &lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt; method.","pos":[137,329],"source":" Page developers and data-bound control authors do not call the ExecuteUpdate method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method."},{"content":"The values contained in the <ph id=\"ph1\">`keys`</ph> and <ph id=\"ph2\">`values`</ph> collections are evaluated and merged with any values contained by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A&gt; collection.","pos":[336,536],"source":"       The values contained in the `keys` and `values` collections are evaluated and merged with any values contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection."},{"content":"If the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt; property is set to  &lt;xref:System.Web.UI.ConflictOptions&gt;, the values contained in the <ph id=\"ph1\">`oldValues`</ph> collection are formatted with the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A&gt; and also merged.","pos":[537,849],"source":" If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to  <xref:System.Web.UI.ConflictOptions>, the values contained in the `oldValues` collection are formatted with the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> and also merged."},{"content":"Before the update operation is performed, the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A&gt; method is called to raise the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Updating&gt; event.","pos":[856,1063],"source":"       Before the update operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> event."},{"content":"You can handle this event to examine the values of the parameters and perform any preprocessing before an update.","pos":[1064,1177]},{"content":"To perform the operation, the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; builds a &lt;xref:System.Data.Common.DbCommand&gt; object using the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt; text and any associated &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A&gt; properties, and then executes the &lt;xref:System.Data.Common.DbCommand&gt; object against the underlying database.","pos":[1184,1599],"source":"       To perform the operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database."},{"content":"After the operation completes, the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A&gt; method is called to raise the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Updated&gt; event.","pos":[1600,1794],"source":" After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> event."},{"content":"You can handle this event to examine any return values and error codes and to perform any post-processing.","pos":[1795,1901]}]},{"pos":[63268,63690],"content":"An &lt;xref:System.Collections.IDictionary&gt; of primary keys to use with the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand<bpt id=\"p1\">*</bpt>&gt; property to perform the update database operation. If there are no keys associated with the query or if the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand<ept id=\"p1\">*</ept>&gt; property is not a parameterized SQL query, pass <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IDictionary> of primary keys to use with the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property to perform the update database operation. If there are no keys associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[63770,64183],"content":"An &lt;xref:System.Collections.IDictionary&gt; of values to use with the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand<bpt id=\"p1\">*</bpt>&gt; property to perform the update database operation. If there are no parameters associated with the query or if the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand<ept id=\"p1\">*</ept>&gt; is not a parameterized SQL query, pass <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IDictionary> of values to use with the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property to perform the update database operation. If there are no parameters associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[64266,64598],"content":"An <xref:System.Collections.IDictionary> that represents the original values in the database. If there are no parameters associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; that represents the original values in the database.","pos":[0,93],"source":"An <xref:System.Collections.IDictionary> that represents the original values in the database."},{"content":"If there are no parameters associated with the query or if the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*&gt; property is not a parameterized SQL query, pass <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[94,332],"source":" If there are no parameters associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[64655,64733],"content":"A value that represents the number of rows updated in the underlying database.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that represents the number of rows updated in the underlying database.","pos":[0,78]}]},{"pos":[65389,65475],"content":"The current user does not have the correct permissions to gain access to the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current user does not have the correct permissions to gain access to the database.","pos":[0,86]}]},{"pos":[65578,65719],"content":"The &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[66153,66290],"content":"Gets or sets a filtering expression that is applied when the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select*> method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a filtering expression that is applied when the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select*&gt; method is called.","pos":[0,137],"source":"Gets or sets a filtering expression that is applied when the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select*> method is called."}]},{"pos":[66303,67651],"content":"The syntax that is used for the FilterExpression property is a format string–style syntax. You can include parameters in the FilterExpression property. If the type of the parameter is string or character, enclose the parameter in single quotation marks. Quotation marks are not required, if the parameter is a numeric type.       The <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection contains the parameters that are evaluated for the placeholders that are found in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property.       The <xref:System.Web.UI.WebControls.SqlDataSource> control supports filtering data only when in `DataSet` mode.       The value of the FilterExpression property is stored in view state.      > [!IMPORTANT] >  You should validate any filter parameter value that you receive from the client. The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method. If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.","needQuote":false,"needEscape":true,"nodes":[{"content":"The syntax that is used for the FilterExpression property is a format string–style syntax.","pos":[0,90]},{"content":"You can include parameters in the FilterExpression property.","pos":[91,151]},{"content":"If the type of the parameter is string or character, enclose the parameter in single quotation marks.","pos":[152,253]},{"content":"Quotation marks are not required, if the parameter is a numeric type.","pos":[254,323]},{"content":"The &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt; collection contains the parameters that are evaluated for the placeholders that are found in the &lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt; property.","pos":[330,578],"source":"       The <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection contains the parameters that are evaluated for the placeholders that are found in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property."},{"content":"The &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control supports filtering data only when in <ph id=\"ph1\">`DataSet`</ph> mode.","pos":[585,696],"source":"       The <xref:System.Web.UI.WebControls.SqlDataSource> control supports filtering data only when in `DataSet` mode."},{"content":"The value of the FilterExpression property is stored in view state.","pos":[703,770]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  You should validate any filter parameter value that you receive from the client.","pos":[776,874],"source":"      > [!IMPORTANT] >  You should validate any filter parameter value that you receive from the client."},{"content":"The runtime simply substitutes the parameter value into the filter expression and applies it to the &lt;xref:System.Data.DataView&gt; object that is returned by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method.","pos":[875,1101],"source":" The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method."},{"content":"If you are using the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt; property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.","pos":[1102,1339],"source":" If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs."}]},{"pos":[69469,69620],"content":"A string that represents a filtering expression applied when data is retrieved using the <xref:System.Web.UI.WebControls.SqlDataSource.Select*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents a filtering expression applied when data is retrieved using the &lt;xref:System.Web.UI.WebControls.SqlDataSource.Select*&gt; method.","pos":[0,151],"source":"A string that represents a filtering expression applied when data is retrieved using the <xref:System.Web.UI.WebControls.SqlDataSource.Select*> method."}]},{"pos":[69811,69999],"content":"The FilterExpression property was set when the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is in the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> mode.","needQuote":true,"needEscape":true,"source":"The FilterExpression property was set when the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> is in the <xref href=\"System.Web.UI.WebControls.SqlDataSourceMode\"></xref> mode."},{"pos":[70395,70428],"content":"Occurs before a filter operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs before a filter operation.","pos":[0,33]}]},{"pos":[70441,71724],"content":"Handle the Filtering event to perform validation operations on filter parameter values before the <xref:System.Web.UI.WebControls.SqlDataSourceView> object performs a filter operation. You can cancel the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> object to `true`. The event is raised only if the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property is set.      > [!IMPORTANT] >  You should validate any filter parameter value that you receive from the client. The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method. If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"nodes":[{"content":"Handle the Filtering event to perform validation operations on filter parameter values before the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; object performs a filter operation.","pos":[0,184],"source":"Handle the Filtering event to perform validation operations on filter parameter values before the <xref:System.Web.UI.WebControls.SqlDataSourceView> object performs a filter operation."},{"content":"You can cancel the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt; method by setting the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs&gt; object to <ph id=\"ph1\">`true`</ph>.","pos":[185,440],"source":" You can cancel the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> object to `true`."},{"content":"The event is raised only if the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt; property is set.","pos":[441,560],"source":" The event is raised only if the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property is set."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  You should validate any filter parameter value that you receive from the client.","pos":[566,664],"source":"      > [!IMPORTANT] >  You should validate any filter parameter value that you receive from the client."},{"content":"The runtime simply substitutes the parameter value into the filter expression and applies it to the &lt;xref:System.Data.DataView&gt; object that is returned by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method.","pos":[665,891],"source":" The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method."},{"content":"If you are using the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt; property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.","pos":[892,1129],"source":" If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[1136,1278],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[71938,71950],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[72401,72568],"content":"Gets a collection of parameters that are associated with any parameter placeholders in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*> string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of parameters that are associated with any parameter placeholders in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*&gt; string.","pos":[0,167],"source":"Gets a collection of parameters that are associated with any parameter placeholders in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*> string."}]},{"pos":[72581,73647],"content":"The parameters in the FilterParameters collection are associated with any parameters that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property. The parameter placeholders that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> are evaluated by order and matched to parameter objects in the FilterParameters collection when the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method is called.      > [!IMPORTANT] >  You should validate any filter parameter value that you receive from the client. The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method. If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.","needQuote":false,"needEscape":true,"nodes":[{"content":"The parameters in the FilterParameters collection are associated with any parameters that are specified in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt; property.","pos":[0,191],"source":"The parameters in the FilterParameters collection are associated with any parameters that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property."},{"content":"The parameter placeholders that are specified in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt; are evaluated by order and matched to parameter objects in the FilterParameters collection when the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt; method is called.","pos":[192,494],"source":" The parameter placeholders that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> are evaluated by order and matched to parameter objects in the FilterParameters collection when the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method is called."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  You should validate any filter parameter value that you receive from the client.","pos":[500,598],"source":"      > [!IMPORTANT] >  You should validate any filter parameter value that you receive from the client."},{"content":"The runtime simply substitutes the parameter value into the filter expression and applies it to the &lt;xref:System.Data.DataView&gt; object that is returned by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method.","pos":[599,825],"source":" The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method."},{"content":"If you are using the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt; property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.","pos":[826,1063],"source":" If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs."}]},{"pos":[75542,75779],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ParameterCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains a set of parameters associated with any parameter placeholders found in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*&gt; property.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.ParameterCollection\"></xref> that contains a set of parameters associated with any parameter placeholders found in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*> property."},{"pos":[76355,76666],"content":"Performs an insert operation using the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand<bpt id=\"p1\">*</bpt>&gt; SQL string, any parameters that are specified in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters<ept id=\"p1\">*</ept>&gt; collection, and the values that are in the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">values</ph><ept id=\"p2\">&lt;/code&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Performs an insert operation using the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> SQL string, any parameters that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*> collection, and the values that are in the specified <code>values</code> collection."},{"pos":[76678,76813],"content":"The Insert method calls the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A&gt; method, passing the <ph id=\"ph1\">`values`</ph> parameter.","needQuote":true,"needEscape":true,"source":"The Insert method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> method, passing the `values` parameter."},{"pos":[76991,77407],"content":"An &lt;xref:System.Collections.IDictionary&gt; of parameters for the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand<bpt id=\"p1\">*</bpt>&gt; property to use to perform the insert database operation. If there are no parameters associated with the query or if the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand<ept id=\"p1\">*</ept>&gt; is not a parameterized SQL query, pass <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IDictionary> of parameters for the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> property to use to perform the insert database operation. If there are no parameters associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[77464,77545],"content":"A value that represents the number of rows inserted into the underlying database.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that represents the number of rows inserted into the underlying database.","pos":[0,81]}]},{"pos":[77734,77861],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> cannot establish a connection with the underlying data source.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source."},{"pos":[77964,78105],"content":"The &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[78524,78682],"content":"Gets or sets the SQL string that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object uses to insert data into the underlying database.","needQuote":true,"needEscape":true,"source":"Gets or sets the SQL string that the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object uses to insert data into the underlying database."},{"pos":[78695,79873],"content":"Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property. If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used. For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=fullName>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`. However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=fullName> or <xref:System.Data.OleDb?displayProperty=fullName>, the placeholder of the parameter is `'?'`. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md).       The InsertCommand property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.       The value of the InsertCommand property is stored in view state.","needQuote":false,"needEscape":true,"nodes":[{"content":"Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the &lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt; property.","pos":[0,248],"source":"Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property."},{"content":"If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.","pos":[249,385]},{"content":"For example, if the provider is the &lt;xref:System.Data.SqlClient?displayProperty=fullName&gt;, which is the default provider for the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; class, the placeholder of the parameter is <ph id=\"ph1\">`'@parameterName'`</ph>.","pos":[386,624],"source":" For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=fullName>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`."},{"content":"However, if the provider is set to the &lt;xref:System.Data.Odbc?displayProperty=fullName&gt; or &lt;xref:System.Data.OleDb?displayProperty=fullName&gt;, the placeholder of the parameter is <ph id=\"ph1\">`'?'`</ph>.","pos":[625,809],"source":" However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=fullName> or <xref:System.Data.OleDb?displayProperty=fullName>, the placeholder of the parameter is `'?'`."},{"content":"For more information on parameterized SQL queries and commands, see <bpt id=\"p1\">[</bpt>Using Parameters with the SqlDataSource Control<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[810,967],"source":" For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md)."},{"content":"The InsertCommand property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.","pos":[974,1103]},{"content":"The value of the InsertCommand property is stored in view state.","pos":[1110,1174]}]},{"pos":[84318,84426],"content":"An SQL string that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> uses to insert data.","needQuote":true,"needEscape":true,"source":"An SQL string that the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> uses to insert data."},{"pos":[84953,85137],"content":"Gets or sets a value indicating whether the text in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> property is a SQL statement or the name of a stored procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the text in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*&gt; property is a SQL statement or the name of a stored procedure.","pos":[0,184],"source":"Gets or sets a value indicating whether the text in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> property is a SQL statement or the name of a stored procedure."}]},{"pos":[85149,85217],"content":"The value of the InsertCommandType property is stored in view state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the InsertCommandType property is stored in view state.","pos":[0,68]}]},{"pos":[87420,87606],"content":"One of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values. The value is the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,90],"source":"One of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values."},{"content":"The value is the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","pos":[91,186],"source":" The value is the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> value."}]},{"pos":[87810,87926],"content":"The selected value is not one of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The selected value is not one of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values."},{"pos":[88317,88363],"content":"Occurs when an insert operation has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when an insert operation has completed.","pos":[0,46]}]},{"pos":[88376,88785],"content":"Handle the Inserted event to examine the values of output parameters after an insert operation has completed. The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"nodes":[{"content":"Handle the Inserted event to examine the values of output parameters after an insert operation has completed.","pos":[0,109]},{"content":"The output parameters are available from the &lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt; object that is associated with the event.","pos":[110,258],"source":" The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[265,407],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[91997,92009],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[92422,92456],"content":"Occurs before an insert operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs before an insert operation.","pos":[0,34]}]},{"pos":[92469,93495],"content":"Handle the Inserting event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the insert operation.       The connection to the underlying data source is not yet open when the event handler delegate is called. Therefore, you cannot cancel the database operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object. You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"nodes":[{"content":"Handle the Inserting event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control performs the insert operation.","pos":[0,282],"source":"Handle the Inserting event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the insert operation."},{"content":"The connection to the underlying data source is not yet open when the event handler delegate is called.","pos":[289,392]},{"content":"Therefore, you cannot cancel the database operation directly by calling the &lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt; method on the &lt;xref:System.Data.Common.DbCommand&gt; object that is exposed by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt; object.","pos":[393,665],"source":" Therefore, you cannot cancel the database operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object."},{"content":"You can, however, cancel the database operation by setting the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt; to <ph id=\"ph1\">`true`</ph>.","pos":[666,873],"source":" You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[880,1022],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[96720,96732],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[97183,97336],"content":"Gets the parameters collection containing the parameters that are used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the parameters collection containing the parameters that are used by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*&gt; property.","pos":[0,153],"source":"Gets the parameters collection containing the parameters that are used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> property."}]},{"pos":[97349,98454],"content":"If the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property contains a parameterized SQL query, the InsertParameters collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.       Depending on the ADO.NET provider, the order of the parameters in the InsertParameters collection might be important. The <xref:System.Data.OleDb?displayProperty=fullName> and <xref:System.Data.Odbc?displayProperty=fullName> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query. The <xref:System.Data.SqlClient?displayProperty=fullName> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"If the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt; property contains a parameterized SQL query, the InsertParameters collection contains any &lt;xref:System.Web.UI.WebControls.Parameter&gt; objects that correspond to the parameter placeholders in the SQL string.","pos":[0,280],"source":"If the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property contains a parameterized SQL query, the InsertParameters collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string."},{"content":"Depending on the ADO.NET provider, the order of the parameters in the InsertParameters collection might be important.","pos":[287,404]},{"content":"The &lt;xref:System.Data.OleDb?displayProperty=fullName&gt; and &lt;xref:System.Data.Odbc?displayProperty=fullName&gt; providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.","pos":[405,650],"source":" The <xref:System.Data.OleDb?displayProperty=fullName> and <xref:System.Data.Odbc?displayProperty=fullName> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query."},{"content":"The &lt;xref:System.Data.SqlClient?displayProperty=fullName&gt; provider, which is the default ADO.NET provider for the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.","pos":[651,945],"source":" The <xref:System.Data.SqlClient?displayProperty=fullName> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query."},{"content":"For more information on parameterized SQL queries and commands, see <bpt id=\"p1\">[</bpt>Using Parameters with the SqlDataSource Control<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[946,1103],"source":" For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[99498,99683],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ParameterCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the parameters used by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*&gt; property.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.ParameterCollection\"></xref> that contains the parameters used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> property."},{"pos":[100223,100367],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is saving changes to its view state.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object is saving changes to its view state."},{"pos":[100493,100682],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the data source view is marked to save its state; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the data source view is marked to save its state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[101247,101313],"content":"Restores the previously saved view state for the data source view.","needQuote":true,"needEscape":true,"nodes":[{"content":"Restores the previously saved view state for the data source view.","pos":[0,66]}]},{"pos":[101326,101969],"content":"This method is primarily used by the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] infrastructure and is not intended to be used directly from your code.  However, control developers can override this method to specify how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).       The LoadViewState method restores view-state information for the <xref:System.Web.UI.WebControls.SqlDataSourceView> object from a previous page request that was saved by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is primarily used by the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","pos":[0,165],"source":"This method is primarily used by the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] infrastructure and is not intended to be used directly from your code."},{"content":"However, control developers can override this method to specify how a custom server control restores its view state.","pos":[167,283]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET State Management Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[284,385],"source":" For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"The LoadViewState method restores view-state information for the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; object from a previous page request that was saved by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A&gt; method.","pos":[392,641],"source":"       The LoadViewState method restores view-state information for the <xref:System.Web.UI.WebControls.SqlDataSourceView> object from a previous page request that was saved by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> method."}]},{"pos":[102134,102246],"content":"An object that represents the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> state to restore.","needQuote":true,"needEscape":true,"source":"An object that represents the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> state to restore."},{"pos":[102838,103058],"content":"Gets or sets a format string to apply to the names of any parameters that are passed to the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete<bpt id=\"p1\">*</bpt>&gt; or &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Update<ept id=\"p1\">*</ept>&gt; method.","needQuote":true,"needEscape":true,"source":"Gets or sets a format string to apply to the names of any parameters that are passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete*> or <xref:System.Web.UI.WebControls.SqlDataSourceView.Update*> method."},{"pos":[103071,103811],"content":"The OldValuesParameterFormatString format string is applied to primary keys only, such as those that are identified by the `DataKeyNames` property of the data-bound control or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions> value and a set of `oldValues` is passed to the corresponding data method. In this case, the format string is applied to each parameter name in the `oldValues` collection. For more information, see <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=fullName>.       The value of the OldValuesParameterFormatString property is stored in view state.","needQuote":false,"needEscape":true,"nodes":[{"content":"The OldValuesParameterFormatString format string is applied to primary keys only, such as those that are identified by the <ph id=\"ph1\">`DataKeyNames`</ph> property of the data-bound control or in delete and update scenarios where the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt; property is set to the &lt;xref:System.Web.UI.ConflictOptions&gt; value and a set of <ph id=\"ph2\">`oldValues`</ph> is passed to the corresponding data method.","pos":[0,423],"source":"The OldValuesParameterFormatString format string is applied to primary keys only, such as those that are identified by the `DataKeyNames` property of the data-bound control or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions> value and a set of `oldValues` is passed to the corresponding data method."},{"content":"In this case, the format string is applied to each parameter name in the <ph id=\"ph1\">`oldValues`</ph> collection.","pos":[424,520],"source":" In this case, the format string is applied to each parameter name in the `oldValues` collection."},{"content":"For more information, see &lt;xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=fullName&gt;.","pos":[521,650],"source":" For more information, see <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=fullName>."},{"content":"The value of the OldValuesParameterFormatString property is stored in view state.","pos":[657,738]}]},{"pos":[103952,104220],"content":"A string that represents a format string applied to the names of any <code>oldValues</code> parameters passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete*> or <xref:System.Web.UI.WebControls.SqlDataSourceView.Update*> methods. The default is \"{0}\".","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents a format string applied to the names of any <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">oldValues</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameters passed to the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete<bpt id=\"p2\">*</bpt>&gt; or &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Update<ept id=\"p2\">*</ept>&gt; methods.","pos":[0,246],"source":"A string that represents a format string applied to the names of any <code>oldValues</code> parameters passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete*> or <xref:System.Web.UI.WebControls.SqlDataSourceView.Update*> methods."},{"content":"The default is \"{0}\".","pos":[247,268]}]},{"pos":[104924,105126],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Deleted\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event after the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control has completed a delete operation.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Deleted\"></xref> event after the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control has completed a delete operation."},{"pos":[105139,105504],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       The OnDeleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"content":"The OnDeleted method also allows derived classes to handle the event without attaching a delegate.","pos":[190,288]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[289,363]}]},{"pos":[105736,105843],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\"></xref> that contains the event data."},{"pos":[106536,106735],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Deleting\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event before the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control attempts a delete operation.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Deleting\"></xref> event before the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control attempts a delete operation."},{"pos":[106748,107114],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       The OnDeleting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"content":"The OnDeleting method also allows derived classes to handle the event without attaching a delegate.","pos":[190,289]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[290,364]}]},{"pos":[108011,108119],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\"></xref> that contains the event data."},{"pos":[108828,109042],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Filtering\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event before the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control filters the results of a select operation.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Filtering\"></xref> event before the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control filters the results of a select operation."},{"pos":[109055,109422],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       The OnFiltering method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"content":"The OnFiltering method also allows derived classes to handle the event without attaching a delegate.","pos":[190,290]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[291,365]}]},{"pos":[109662,109772],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs\"></xref> that contains the event data."},{"pos":[110462,110666],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Inserted\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event after the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control has completed an insert operation.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Inserted\"></xref> event after the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control has completed an insert operation."},{"pos":[110679,111045],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       The OnInserted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"content":"The OnInserted method also allows derived classes to handle the event without attaching a delegate.","pos":[190,289]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[290,364]}]},{"pos":[114209,114316],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\"></xref> that contains the event data."},{"pos":[115015,115216],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Inserting\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event before the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control attempts an insert operation.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Inserting\"></xref> event before the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control attempts an insert operation."},{"pos":[115229,115596],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       The OnInserting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"content":"The OnInserting method also allows derived classes to handle the event without attaching a delegate.","pos":[190,290]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[291,365]}]},{"pos":[118763,118871],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\"></xref> that contains the event data."},{"pos":[119561,119772],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Selected\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event after the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control has completed a data retrieval operation.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Selected\"></xref> event after the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control has completed a data retrieval operation."},{"pos":[119785,120151],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       The OnSelected method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"content":"The OnSelected method also allows derived classes to handle the event without attaching a delegate.","pos":[190,289]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[290,364]}]},{"pos":[120384,120491],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\"></xref> that contains the event data."},{"pos":[121200,121408],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Selecting\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event before the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control attempts a data retrieval operation.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Selecting\"></xref> event before the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control attempts a data retrieval operation."},{"pos":[121421,121788],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       The OnSelecting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"content":"The OnSelecting method also allows derived classes to handle the event without attaching a delegate.","pos":[190,290]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[291,365]}]},{"pos":[122028,122138],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs\"></xref> that contains the event data."},{"pos":[122823,123026],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Updated\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event after the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control has completed an update operation.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Updated\"></xref> event after the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control has completed an update operation."},{"pos":[123039,123404],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       The OnUpdated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"content":"The OnUpdated method also allows derived classes to handle the event without attaching a delegate.","pos":[190,288]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[289,363]}]},{"pos":[124279,124386],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\"></xref> that contains the event data."},{"pos":[125079,125279],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Updating\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event before the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control attempts an update operation.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Updating\"></xref> event before the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control attempts an update operation."},{"pos":[125292,125658],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       The OnUpdating method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"content":"The OnUpdating method also allows derived classes to handle the event without attaching a delegate.","pos":[190,289]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[290,364]}]},{"pos":[126609,126717],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\"></xref> that contains the event data."},{"pos":[127231,127323],"content":"Gets the string that is used to prefix a parameter placeholder in a parameterized SQL query.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the string that is used to prefix a parameter placeholder in a parameterized SQL query.","pos":[0,92]}]},{"pos":[127336,128836],"content":"SQL queries and commands can be parameterized, in that they contain placeholders for values that are bound to the query at run time. Depending on the ADO.NET provider that is set for the <xref:System.Web.UI.WebControls.SqlDataSource> control, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property, the parameters are evaluated by alias or by their ordering in the <xref:System.Web.UI.WebControls.ParameterCollection> object.       If the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> is not set or is set to the <xref:System.Data.SqlClient?displayProperty=fullName>, parameters are evaluated by alias and the ParameterPrefix property is used to add a parameter prefix to the <xref:System.Web.UI.WebControls.Parameter.Name%2A> property of each <xref:System.Web.UI.WebControls.Parameter> object in a <xref:System.Web.UI.WebControls.ParameterCollection> during a data retrieval or data manipulation operation. If the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the <xref:System.Data.OleDb?displayProperty=fullName> or <xref:System.Data.Odbc?displayProperty=fullName>, the parameters are evaluated by order and the ParameterPrefix and <xref:System.Web.UI.WebControls.Parameter.Name%2A> properties are ignored.       If you extend the <xref:System.Web.UI.WebControls.SqlDataSourceView> class, you can override the ParameterPrefix property to supply a prefix other than the `\"@\"` string, if required.","needQuote":false,"needEscape":true,"nodes":[{"content":"SQL queries and commands can be parameterized, in that they contain placeholders for values that are bound to the query at run time.","pos":[0,132]},{"content":"Depending on the ADO.NET provider that is set for the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control, which is identified by the &lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt; property, the parameters are evaluated by alias or by their ordering in the &lt;xref:System.Web.UI.WebControls.ParameterCollection&gt; object.","pos":[133,469],"source":" Depending on the ADO.NET provider that is set for the <xref:System.Web.UI.WebControls.SqlDataSource> control, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property, the parameters are evaluated by alias or by their ordering in the <xref:System.Web.UI.WebControls.ParameterCollection> object."},{"content":"If the &lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt; is not set or is set to the &lt;xref:System.Data.SqlClient?displayProperty=fullName&gt;, parameters are evaluated by alias and the ParameterPrefix property is used to add a parameter prefix to the &lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt; property of each &lt;xref:System.Web.UI.WebControls.Parameter&gt; object in a &lt;xref:System.Web.UI.WebControls.ParameterCollection&gt; during a data retrieval or data manipulation operation.","pos":[476,968],"source":"       If the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> is not set or is set to the <xref:System.Data.SqlClient?displayProperty=fullName>, parameters are evaluated by alias and the ParameterPrefix property is used to add a parameter prefix to the <xref:System.Web.UI.WebControls.Parameter.Name%2A> property of each <xref:System.Web.UI.WebControls.Parameter> object in a <xref:System.Web.UI.WebControls.ParameterCollection> during a data retrieval or data manipulation operation."},{"content":"If the &lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt; property is set to the &lt;xref:System.Data.OleDb?displayProperty=fullName&gt; or &lt;xref:System.Data.Odbc?displayProperty=fullName&gt;, the parameters are evaluated by order and the ParameterPrefix and &lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt; properties are ignored.","pos":[969,1305],"source":" If the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the <xref:System.Data.OleDb?displayProperty=fullName> or <xref:System.Data.Odbc?displayProperty=fullName>, the parameters are evaluated by order and the ParameterPrefix and <xref:System.Web.UI.WebControls.Parameter.Name%2A> properties are ignored."},{"content":"If you extend the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; class, you can override the ParameterPrefix property to supply a prefix other than the <ph id=\"ph1\">`\"@\"`</ph> string, if required.","pos":[1312,1494],"source":"       If you extend the <xref:System.Web.UI.WebControls.SqlDataSourceView> class, you can override the ParameterPrefix property to supply a prefix other than the `\"@\"` string, if required."}]},{"pos":[128968,128983],"content":"The \"@\" string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The \"@\" string.","pos":[0,15]}]},{"pos":[129728,130003],"content":"Compares the capabilities that are requested for an &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect<bpt id=\"p1\">*</bpt>&gt; operation against those that the view supports and is called by the &lt;xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError<ept id=\"p1\">*</ept>&gt; method.","needQuote":true,"needEscape":true,"source":"Compares the capabilities that are requested for an <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*> operation against those that the view supports and is called by the <xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError*> method."},{"pos":[130015,130649],"content":"The RaiseUnsupportedCapabilityError method is used by the data source view to examine each of the capabilities that are requested by a data-bound control, which is represented by the <xref:System.Web.UI.DataSourceSelectArguments> object that is passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method, and to compare those capabilities to the capabilities that are supported by the data source view. For the capabilities that are represented by the <xref:System.Web.UI.DataSourceSelectArguments> object and are not supported by the data source view, a <xref:System.NotSupportedException> exception is raised.","needQuote":true,"needEscape":true,"nodes":[{"content":"The RaiseUnsupportedCapabilityError method is used by the data source view to examine each of the capabilities that are requested by a data-bound control, which is represented by the <xref:System.Web.UI.DataSourceSelectArguments> object that is passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method, and to compare those capabilities to the capabilities that are supported by the data source view. For the capabilities that are represented by the <xref:System.Web.UI.DataSourceSelectArguments> object and are not supported by the data source view, a <xref:System.NotSupportedException> exception is raised.","pos":[0,634],"nodes":[{"content":"The RaiseUnsupportedCapabilityError method is used by the data source view to examine each of the capabilities that are requested by a data-bound control, which is represented by the &lt;xref:System.Web.UI.DataSourceSelectArguments&gt; object that is passed to the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt; method, and to compare those capabilities to the capabilities that are supported by the data source view.","pos":[0,425],"source":"The RaiseUnsupportedCapabilityError method is used by the data source view to examine each of the capabilities that are requested by a data-bound control, which is represented by the <xref:System.Web.UI.DataSourceSelectArguments> object that is passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method, and to compare those capabilities to the capabilities that are supported by the data source view."},{"content":"For the capabilities that are represented by the &lt;xref:System.Web.UI.DataSourceSelectArguments&gt; object and are not supported by the data source view, a &lt;xref:System.NotSupportedException&gt; exception is raised.","pos":[426,634],"source":" For the capabilities that are represented by the <xref:System.Web.UI.DataSourceSelectArguments> object and are not supported by the data source view, a <xref:System.NotSupportedException> exception is raised."}]}]},{"pos":[130885,131026],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceCapabilities\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that is compared against the capabilities that the view supports.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.DataSourceCapabilities\"></xref> values that is compared against the capabilities that the view supports."},{"pos":[131232,131307],"content":"The data source does not have the selected <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">capability</ph><ept id=\"p1\">&lt;/code&gt;</ept> enabled.","needQuote":true,"needEscape":true,"source":"The data source does not have the selected <code>capability</code> enabled."},{"pos":[131730,131907],"content":"Saves the changes to the view state for the  <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control since the time that the page was posted back to the server.","needQuote":true,"needEscape":true,"source":"Saves the changes to the view state for the  <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> control since the time that the page was posted back to the server."},{"pos":[131920,132923],"content":"The SaveViewState method is primarily used by control developers.       View state is the accumulation of the values of the properties for a server control. These values are automatically placed in the <xref:System.Web.UI.Control.ViewState%2A> property for the server control, which is an instance of the <xref:System.Web.UI.StateBag> class. The <xref:System.Web.UI.Control.ViewState%2A> value for the server control is then persisted to a string object after the save state stage of the server control life cycle.       When view state is saved, the string object that was persisted after the save state stage of the server control life cycle is returned to the client as a variable that is stored in an HTML `Hidden` element. When you author custom server controls, you can improve efficiency by overriding the SaveViewState method and modifying the `ViewState` property for your server control. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The SaveViewState method is primarily used by control developers.","pos":[0,65]},{"content":"View state is the accumulation of the values of the properties for a server control.","pos":[72,156]},{"content":"These values are automatically placed in the &lt;xref:System.Web.UI.Control.ViewState%2A&gt; property for the server control, which is an instance of the &lt;xref:System.Web.UI.StateBag&gt; class.","pos":[157,341],"source":" These values are automatically placed in the <xref:System.Web.UI.Control.ViewState%2A> property for the server control, which is an instance of the <xref:System.Web.UI.StateBag> class."},{"content":"The &lt;xref:System.Web.UI.Control.ViewState%2A&gt; value for the server control is then persisted to a string object after the save state stage of the server control life cycle.","pos":[342,514],"source":" The <xref:System.Web.UI.Control.ViewState%2A> value for the server control is then persisted to a string object after the save state stage of the server control life cycle."},{"content":"When view state is saved, the string object that was persisted after the save state stage of the server control life cycle is returned to the client as a variable that is stored in an HTML <ph id=\"ph1\">`Hidden`</ph> element.","pos":[521,727],"source":"       When view state is saved, the string object that was persisted after the save state stage of the server control life cycle is returned to the client as a variable that is stored in an HTML `Hidden` element."},{"content":"When you author custom server controls, you can improve efficiency by overriding the SaveViewState method and modifying the <ph id=\"ph1\">`ViewState`</ph> property for your server control.","pos":[728,897],"source":" When you author custom server controls, you can improve efficiency by overriding the SaveViewState method and modifying the `ViewState` property for your server control."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET State Management Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[898,999],"source":" For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[133067,133314],"content":"The object that contains the changes to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> view state; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if there is no view state associated with the object.","needQuote":true,"needEscape":true,"source":"The object that contains the changes to the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> view state; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if there is no view state associated with the object."},{"pos":[133947,134193],"content":"Retrieves data from the underlying database using the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand<bpt id=\"p1\">*</bpt>&gt; SQL string and any parameters that are in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters<ept id=\"p1\">*</ept>&gt; collection.","needQuote":true,"needEscape":true,"source":"Retrieves data from the underlying database using the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*> SQL string and any parameters that are in the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*> collection."},{"pos":[134206,134927],"content":"The Select method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method, passing the `selectArgs` parameter.       The <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method returns a <xref:System.Data.DataView> object, if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode> value or it returns a <xref:System.Data.IDataReader> object, if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode> value. Close the <xref:System.Data.IDataReader> object when you have finished reading the data.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Select method calls the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A&gt; method, passing the <ph id=\"ph1\">`selectArgs`</ph> parameter.","pos":[0,139],"source":"The Select method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method, passing the `selectArgs` parameter."},{"content":"The &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A&gt; method returns a &lt;xref:System.Data.DataView&gt; object, if the &lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt; property is set to the &lt;xref:System.Web.UI.WebControls.SqlDataSourceMode&gt; value or it returns a &lt;xref:System.Data.IDataReader&gt; object, if the &lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt; property is set to the &lt;xref:System.Web.UI.WebControls.SqlDataSourceMode&gt; value.","pos":[146,630],"source":"       The <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method returns a <xref:System.Data.DataView> object, if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode> value or it returns a <xref:System.Data.IDataReader> object, if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode> value."},{"content":"Close the &lt;xref:System.Data.IDataReader&gt; object when you have finished reading the data.","pos":[631,719],"source":" Close the <xref:System.Data.IDataReader> object when you have finished reading the data."}]},{"pos":[135157,135287],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceSelectArguments\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to request operations on the data beyond basic data retrieval.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.DataSourceSelectArguments\"></xref> used to request operations on the data beyond basic data retrieval."},{"pos":[135362,135421],"content":"An <xref:System.Collections.IEnumerable> list of data rows.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerable&gt; list of data rows.","pos":[0,59],"source":"An <xref:System.Collections.IEnumerable> list of data rows."}]},{"pos":[135602,135871],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">selectArgs</ph><ept id=\"p1\">&lt;/code&gt;</ept> passed to the Select method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.","needQuote":true,"needEscape":true,"source":"The <code>selectArgs</code> passed to the Select method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability."},{"pos":[135982,136109],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> cannot establish a connection with the underlying data source.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source."},{"pos":[136528,136688],"content":"Gets or sets the SQL string that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object uses to retrieve data from the underlying database.","needQuote":true,"needEscape":true,"source":"Gets or sets the SQL string that the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object uses to retrieve data from the underlying database."},{"pos":[136701,138002],"content":"Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property. If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used. For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=fullName>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`. However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=fullName> or <xref:System.Data.OleDb?displayProperty=fullName>, the placeholder of the parameter is `'?'`. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md).       The SelectCommand property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.      > [!IMPORTANT] >  It is more secure to use a stored procedure than a SQL statement for the SelectCommand property.       The value of the SelectCommand property is stored in view state.","needQuote":false,"needEscape":true,"nodes":[{"content":"Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the &lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt; property.","pos":[0,248],"source":"Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property."},{"content":"If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.","pos":[249,385]},{"content":"For example, if the provider is the &lt;xref:System.Data.SqlClient?displayProperty=fullName&gt;, which is the default provider for the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; class, the placeholder of the parameter is <ph id=\"ph1\">`'@parameterName'`</ph>.","pos":[386,624],"source":" For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=fullName>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`."},{"content":"However, if the provider is set to the &lt;xref:System.Data.Odbc?displayProperty=fullName&gt; or &lt;xref:System.Data.OleDb?displayProperty=fullName&gt;, the placeholder of the parameter is <ph id=\"ph1\">`'?'`</ph>.","pos":[625,809],"source":" However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=fullName> or <xref:System.Data.OleDb?displayProperty=fullName>, the placeholder of the parameter is `'?'`."},{"content":"For more information on parameterized SQL queries and commands, see <bpt id=\"p1\">[</bpt>Using Parameters with the SqlDataSource Control<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[810,967],"source":" For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md)."},{"content":"The SelectCommand property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.","pos":[974,1103]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  It is more secure to use a stored procedure than a SQL statement for the SelectCommand property.","pos":[1109,1223],"source":"      > [!IMPORTANT] >  It is more secure to use a stored procedure than a SQL statement for the SelectCommand property."},{"content":"The value of the SelectCommand property is stored in view state.","pos":[1230,1294]}]},{"pos":[140203,140313],"content":"An SQL string that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> uses to retrieve data.","needQuote":true,"needEscape":true,"source":"An SQL string that the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> uses to retrieve data."},{"pos":[140840,141020],"content":"Gets or sets a value indicating whether the text in the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*> property is a SQL query or the name of a stored procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the text in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*&gt; property is a SQL query or the name of a stored procedure.","pos":[0,180],"source":"Gets or sets a value indicating whether the text in the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*> property is a SQL query or the name of a stored procedure."}]},{"pos":[141032,141100],"content":"The value of the SelectCommandType property is stored in view state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the SelectCommandType property is stored in view state.","pos":[0,68]}]},{"pos":[142019,142207],"content":"One of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values. The default is the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,90],"source":"One of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values."},{"content":"The default is the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","pos":[91,188],"source":" The default is the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> value."}]},{"pos":[142411,142527],"content":"The selected value is not one of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The selected value is not one of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values."},{"pos":[142918,142971],"content":"Occurs when a data retrieval operation has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a data retrieval operation has completed.","pos":[0,53]}]},{"pos":[142984,143400],"content":"Handle the Selected event to examine the values of output parameters after a data retrieval operation has completed. The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"nodes":[{"content":"Handle the Selected event to examine the values of output parameters after a data retrieval operation has completed.","pos":[0,116]},{"content":"The output parameters are available from the &lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt; object that is associated with the event.","pos":[117,265],"source":" The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[272,414],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[143607,143619],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[144032,144073],"content":"Occurs before a data retrieval operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs before a data retrieval operation.","pos":[0,41]}]},{"pos":[144086,144527],"content":"Handle the Selecting event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the data retrieval operation.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"nodes":[{"content":"Handle the Selecting event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control performs the data retrieval operation.","pos":[0,290],"source":"Handle the Selecting event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the data retrieval operation."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[297,439],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[144741,144753],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[145204,145357],"content":"Gets the parameters collection containing the parameters that are used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the parameters collection containing the parameters that are used by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*&gt; property.","pos":[0,153],"source":"Gets the parameters collection containing the parameters that are used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*> property."}]},{"pos":[145370,146475],"content":"If the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property contains a parameterized SQL query, the SelectParameters collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.       Depending on the ADO.NET provider, the order of the parameters in the SelectParameters collection might be important. The <xref:System.Data.OleDb?displayProperty=fullName> and <xref:System.Data.Odbc?displayProperty=fullName> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query. The <xref:System.Data.SqlClient?displayProperty=fullName> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"If the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt; property contains a parameterized SQL query, the SelectParameters collection contains any &lt;xref:System.Web.UI.WebControls.Parameter&gt; objects that correspond to the parameter placeholders in the SQL string.","pos":[0,280],"source":"If the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property contains a parameterized SQL query, the SelectParameters collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string."},{"content":"Depending on the ADO.NET provider, the order of the parameters in the SelectParameters collection might be important.","pos":[287,404]},{"content":"The &lt;xref:System.Data.OleDb?displayProperty=fullName&gt; and &lt;xref:System.Data.Odbc?displayProperty=fullName&gt; providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.","pos":[405,650],"source":" The <xref:System.Data.OleDb?displayProperty=fullName> and <xref:System.Data.Odbc?displayProperty=fullName> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query."},{"content":"The &lt;xref:System.Data.SqlClient?displayProperty=fullName&gt; provider, which is the default ADO.NET provider for the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.","pos":[651,945],"source":" The <xref:System.Data.SqlClient?displayProperty=fullName> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query."},{"content":"For more information on parameterized SQL queries and commands, see <bpt id=\"p1\">[</bpt>Using Parameters with the SqlDataSource Control<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[946,1103],"source":" For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[148084,148269],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ParameterCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the parameters used by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*&gt; property.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.ParameterCollection\"></xref> that contains the parameters used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*> property."},{"pos":[148799,148947],"content":"Gets or sets the name of a stored procedure parameter that is used to sort retrieved data when data retrieval is performed using a stored procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of a stored procedure parameter that is used to sort retrieved data when data retrieval is performed using a stored procedure.","pos":[0,148]}]},{"pos":[148960,149547],"content":"The SortParameterName property is evaluated only when the SQL command that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property is the name of a stored procedure. In this case, if the SortParameterName property is set, it contains the name of a parameter that is used to sort the results of the stored procedure.       If the  <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property is set, it is prepended to the SortParameterName property.       The value of the SortParameterName property is stored in view state.","needQuote":false,"needEscape":true,"nodes":[{"content":"The SortParameterName property is evaluated only when the SQL command that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property is the name of a stored procedure. In this case, if the SortParameterName property is set, it contains the name of a parameter that is used to sort the results of the stored procedure.       If the  <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property is set, it is prepended to the SortParameterName property.       The value of the SortParameterName property is stored in view state.","pos":[0,583],"nodes":[{"content":"The SortParameterName property is evaluated only when the SQL command that is contained by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt; property is the name of a stored procedure.","pos":[0,206],"source":"The SortParameterName property is evaluated only when the SQL command that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property is the name of a stored procedure."},{"content":"In this case, if the SortParameterName property is set, it contains the name of a parameter that is used to sort the results of the stored procedure.","pos":[207,356]},{"content":"If the  &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A&gt; property is set, it is prepended to the SortParameterName property.","pos":[363,508],"source":"       If the  <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property is set, it is prepended to the SortParameterName property."},{"content":"The value of the SortParameterName property is stored in view state.","pos":[515,583]}]}]},{"pos":[149675,149802],"content":"The name of a stored procedure parameter used to sort retrieved data when data retrieval is performed using a stored procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of a stored procedure parameter used to sort retrieved data when data retrieval is performed using a stored procedure.","pos":[0,127]}]},{"pos":[150497,150591],"content":"For a description of this member, see <xref:System.Web.UI.IStateManager.IsTrackingViewState*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"For a description of this member, see &lt;xref:System.Web.UI.IStateManager.IsTrackingViewState*&gt;.","pos":[0,94],"source":"For a description of this member, see <xref:System.Web.UI.IStateManager.IsTrackingViewState*>."}]},{"pos":[150603,150812],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.","pos":[0,209],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; instance is cast to the &lt;xref:System.Web.UI.IStateManager&gt; interface.","pos":[60,209],"source":" It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface."}]}]},{"pos":[150956,151145],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the data source view is marked to save its state; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the data source view is marked to save its state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[151892,152029],"content":"For a description of this member, see &lt;xref:System.Web.UI.IStateManager.LoadViewState%28System.Object%29?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.IStateManager.LoadViewState%28System.Object%29?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,137],"source":"For a description of this member, see &lt;xref:System.Web.UI.IStateManager.LoadViewState%28System.Object%29?displayProperty=fullName&gt;."}]},{"pos":[152041,152250],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.","pos":[0,209],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; instance is cast to the &lt;xref:System.Web.UI.IStateManager&gt; interface.","pos":[60,209],"source":" It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface."}]}]},{"pos":[152410,152522],"content":"An object that represents the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> state to restore.","needQuote":true,"needEscape":true,"source":"An object that represents the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> state to restore."},{"pos":[153215,153316],"content":"For a description of this member, see <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IStateManager.SaveViewState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"For a description of this member, see <xref href=\"System.Web.UI.IStateManager.SaveViewState\"></xref>."},{"pos":[153328,153537],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.","pos":[0,209],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; instance is cast to the &lt;xref:System.Web.UI.IStateManager&gt; interface.","pos":[60,209],"source":" It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface."}]}]},{"pos":[153676,153923],"content":"The object that contains the changes to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> view state; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if there is no view state associated with the object.","needQuote":true,"needEscape":true,"source":"The object that contains the changes to the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> view state; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if there is no view state associated with the object."},{"pos":[154621,154710],"content":"For a description of this member, see <xref:System.Web.UI.IStateManager.TrackViewState*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"For a description of this member, see &lt;xref:System.Web.UI.IStateManager.TrackViewState*&gt;.","pos":[0,89],"source":"For a description of this member, see <xref:System.Web.UI.IStateManager.TrackViewState*>."}]},{"pos":[154722,154931],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.","pos":[0,209],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt; instance is cast to the &lt;xref:System.Web.UI.IStateManager&gt; interface.","pos":[60,209],"source":" It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface."}]}]},{"pos":[155556,155830],"content":"Causes the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to track changes to its view state so that the changes can be stored in the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.StateBag\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object for the control and persisted across requests for the same page.","needQuote":true,"needEscape":true,"source":"Causes the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object to track changes to its view state so that the changes can be stored in the <xref href=\"System.Web.UI.StateBag\"></xref> object for the control and persisted across requests for the same page."},{"pos":[156684,157033],"content":"Performs an update operation using the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand<bpt id=\"p1\">*</bpt>&gt; SQL string, any parameters that are in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters<ept id=\"p1\">*</ept>&gt; collection, and the values that are in the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">keys</ph><ept id=\"p2\">&lt;/code&gt;</ept>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">values</ph><ept id=\"p3\">&lt;/code&gt;</ept>, and <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph3\">oldValues</ph><ept id=\"p4\">&lt;/code&gt;</ept> collections.","needQuote":true,"needEscape":true,"source":"Performs an update operation using the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> SQL string, any parameters that are in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*> collection, and the values that are in the specified <code>keys</code>, <code>values</code>, and <code>oldValues</code> collections."},{"pos":[157045,157319],"content":"The Update method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> method, passing the `keys`, `values`, and `oldValues` parameters. For more information, see <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Update method calls the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A&gt; method, passing the <ph id=\"ph1\">`keys`</ph>, <ph id=\"ph2\">`values`</ph>, and <ph id=\"ph3\">`oldValues`</ph> parameters.","pos":[0,161],"source":"The Update method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> method, passing the `keys`, `values`, and `oldValues` parameters."},{"content":"For more information, see &lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=fullName&gt;.","pos":[162,274],"source":" For more information, see <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=fullName>."}]},{"pos":[158511,158924],"content":"An &lt;xref:System.Collections.IDictionary&gt; of primary keys to use with the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand<bpt id=\"p1\">*</bpt>&gt; property to perform the update database operation. If there are no keys associated with the query or if the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand<ept id=\"p1\">*</ept>&gt; is not a parameterized SQL query, pass <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IDictionary> of primary keys to use with the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property to perform the update database operation. If there are no keys associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[159004,159417],"content":"An &lt;xref:System.Collections.IDictionary&gt; of values to use with the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand<bpt id=\"p1\">*</bpt>&gt; property to perform the update database operation. If there are no parameters associated with the query or if the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand<ept id=\"p1\">*</ept>&gt; is not a parameterized SQL query, pass <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IDictionary> of values to use with the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property to perform the update database operation. If there are no parameters associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[159500,159823],"content":"An <xref:System.Collections.IDictionary> that represents the original values in the database. If there are no parameters associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; that represents the original values in the database.","pos":[0,93],"source":"An <xref:System.Collections.IDictionary> that represents the original values in the database."},{"content":"If there are no parameters associated with the query or if the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*&gt; is not a parameterized SQL query, pass <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[94,323],"source":" If there are no parameters associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[159880,159958],"content":"A value that represents the number of rows updated in the underlying database.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that represents the number of rows updated in the underlying database.","pos":[0,78]}]},{"pos":[160147,160274],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> cannot establish a connection with the underlying data source.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source."},{"pos":[160377,160518],"content":"The &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[160937,161093],"content":"Gets or sets the SQL string that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object uses to update data in the underlying database.","needQuote":true,"needEscape":true,"source":"Gets or sets the SQL string that the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object uses to update data in the underlying database."},{"pos":[161106,162284],"content":"Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property. If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used. For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=fullName>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`. However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=fullName> or <xref:System.Data.OleDb?displayProperty=fullName>, the placeholder of the parameter is `'?'`. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md).       The UpdateCommand property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.       The value of the UpdateCommand property is stored in view state.","needQuote":false,"needEscape":true,"nodes":[{"content":"Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the &lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt; property.","pos":[0,248],"source":"Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property."},{"content":"If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.","pos":[249,385]},{"content":"For example, if the provider is the &lt;xref:System.Data.SqlClient?displayProperty=fullName&gt;, which is the default provider for the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; class, the placeholder of the parameter is <ph id=\"ph1\">`'@parameterName'`</ph>.","pos":[386,624],"source":" For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=fullName>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`."},{"content":"However, if the provider is set to the &lt;xref:System.Data.Odbc?displayProperty=fullName&gt; or &lt;xref:System.Data.OleDb?displayProperty=fullName&gt;, the placeholder of the parameter is <ph id=\"ph1\">`'?'`</ph>.","pos":[625,809],"source":" However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=fullName> or <xref:System.Data.OleDb?displayProperty=fullName>, the placeholder of the parameter is `'?'`."},{"content":"For more information on parameterized SQL queries and commands, see <bpt id=\"p1\">[</bpt>Using Parameters with the SqlDataSource Control<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[810,967],"source":" For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md)."},{"content":"The UpdateCommand property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.","pos":[974,1103]},{"content":"The value of the UpdateCommand property is stored in view state.","pos":[1110,1174]}]},{"pos":[164791,164898],"content":"A SQL string that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> uses to update data.","needQuote":true,"needEscape":true,"source":"A SQL string that the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> uses to update data."},{"pos":[165425,165609],"content":"Gets or sets a value indicating whether the text in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property is a SQL statement or the name of a stored procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the text in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*&gt; property is a SQL statement or the name of a stored procedure.","pos":[0,184],"source":"Gets or sets a value indicating whether the text in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property is a SQL statement or the name of a stored procedure."}]},{"pos":[165621,165689],"content":"The value of the UpdateCommandType property is stored in view state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the UpdateCommandType property is stored in view state.","pos":[0,68]}]},{"pos":[165897,166085],"content":"One of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values. The default is the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,90],"source":"One of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values."},{"content":"The default is the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","pos":[91,188],"source":" The default is the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> value."}]},{"pos":[166289,166405],"content":"The selected value is not one of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The selected value is not one of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values."},{"pos":[166791,166837],"content":"Occurs when an update operation has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when an update operation has completed.","pos":[0,46]}]},{"pos":[166850,167258],"content":"Handle the Updated event to examine the values of output parameters after an update operation has completed. The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"nodes":[{"content":"Handle the Updated event to examine the values of output parameters after an update operation has completed.","pos":[0,108]},{"content":"The output parameters are available from the &lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt; object that is associated with the event.","pos":[109,257],"source":" The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[264,406],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[168123,168135],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[168586,168739],"content":"Gets the parameters collection containing the parameters that are used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the parameters collection containing the parameters that are used by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*&gt; property.","pos":[0,153],"source":"Gets the parameters collection containing the parameters that are used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property."}]},{"pos":[168752,170471],"content":"If the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property contains a parameterized SQL query, the UpdateParameters collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders that are in the SQL string.       Parameter names might be affected by the <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> property; specifically, if the name identifies a primary key, such as a key that is specified using the `DataKeyNames` property, or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions> value, and a set of `oldValues` are passed to the corresponding data method. In this case, the format string is applied to each parameter name in the `oldValues` collection.       Depending on the ADO.NET provider, the order of the parameters in the UpdateParameters collection might be important. The <xref:System.Data.OleDb?displayProperty=fullName> and <xref:System.Data.Odbc?displayProperty=fullName> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query. The <xref:System.Data.SqlClient?displayProperty=fullName> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"If the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt; property contains a parameterized SQL query, the UpdateParameters collection contains any &lt;xref:System.Web.UI.WebControls.Parameter&gt; objects that correspond to the parameter placeholders that are in the SQL string.","pos":[0,289],"source":"If the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property contains a parameterized SQL query, the UpdateParameters collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders that are in the SQL string."},{"content":"Parameter names might be affected by the &lt;xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A&gt; property; specifically, if the name identifies a primary key, such as a key that is specified using the <ph id=\"ph1\">`DataKeyNames`</ph> property, or in delete and update scenarios where the &lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt; property is set to the &lt;xref:System.Web.UI.ConflictOptions&gt; value, and a set of <ph id=\"ph2\">`oldValues`</ph> are passed to the corresponding data method.","pos":[296,795],"source":"       Parameter names might be affected by the <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> property; specifically, if the name identifies a primary key, such as a key that is specified using the `DataKeyNames` property, or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions> value, and a set of `oldValues` are passed to the corresponding data method."},{"content":"In this case, the format string is applied to each parameter name in the <ph id=\"ph1\">`oldValues`</ph> collection.","pos":[796,892],"source":" In this case, the format string is applied to each parameter name in the `oldValues` collection."},{"content":"Depending on the ADO.NET provider, the order of the parameters in the UpdateParameters collection might be important.","pos":[899,1016]},{"content":"The &lt;xref:System.Data.OleDb?displayProperty=fullName&gt; and &lt;xref:System.Data.Odbc?displayProperty=fullName&gt; providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.","pos":[1017,1262],"source":" The <xref:System.Data.OleDb?displayProperty=fullName> and <xref:System.Data.Odbc?displayProperty=fullName> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query."},{"content":"The &lt;xref:System.Data.SqlClient?displayProperty=fullName&gt; provider, which is the default ADO.NET provider for the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.","pos":[1263,1557],"source":" The <xref:System.Data.SqlClient?displayProperty=fullName> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query."},{"content":"For more information on parameterized SQL queries and commands, see <bpt id=\"p1\">[</bpt>Using Parameters with the SqlDataSource Control<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1558,1715],"source":" For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[171662,171847],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ParameterCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the parameters used by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*&gt; property.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.ParameterCollection\"></xref> that contains the parameters used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property."},{"pos":[172329,172363],"content":"Occurs before an update operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs before an update operation.","pos":[0,34]}]},{"pos":[172376,173392],"content":"Handle the Updating event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the update operation.       The connection to the underlying data source is not yet open when the event handler delegate is called. Therefore, you cannot cancel the operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object. You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"nodes":[{"content":"Handle the Updating event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control performs the update operation.","pos":[0,281],"source":"Handle the Updating event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the update operation."},{"content":"The connection to the underlying data source is not yet open when the event handler delegate is called.","pos":[288,391]},{"content":"Therefore, you cannot cancel the operation directly by calling the &lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt; method on the &lt;xref:System.Data.Common.DbCommand&gt; object that is exposed by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt; object.","pos":[392,655],"source":" Therefore, you cannot cancel the operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object."},{"content":"You can, however, cancel the database operation by setting the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt; to <ph id=\"ph1\">`true`</ph>.","pos":[656,863],"source":" You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[870,1012],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[174323,174335],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.SqlDataSourceView\n  id: SqlDataSourceView\n  children:\n  - System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)\n  - System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter\n  - System.Web.UI.WebControls.SqlDataSourceView.CanDelete\n  - System.Web.UI.WebControls.SqlDataSourceView.CanInsert\n  - System.Web.UI.WebControls.SqlDataSourceView.CanPage\n  - System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount\n  - System.Web.UI.WebControls.SqlDataSourceView.CanSort\n  - System.Web.UI.WebControls.SqlDataSourceView.CanUpdate\n  - System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection\n  - System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)\n  - System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand\n  - System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType\n  - System.Web.UI.WebControls.SqlDataSourceView.Deleted\n  - System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters\n  - System.Web.UI.WebControls.SqlDataSourceView.Deleting\n  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)\n  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)\n  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)\n  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)\n  - System.Web.UI.WebControls.SqlDataSourceView.FilterExpression\n  - System.Web.UI.WebControls.SqlDataSourceView.Filtering\n  - System.Web.UI.WebControls.SqlDataSourceView.FilterParameters\n  - System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)\n  - System.Web.UI.WebControls.SqlDataSourceView.InsertCommand\n  - System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType\n  - System.Web.UI.WebControls.SqlDataSourceView.Inserted\n  - System.Web.UI.WebControls.SqlDataSourceView.Inserting\n  - System.Web.UI.WebControls.SqlDataSourceView.InsertParameters\n  - System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState\n  - System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)\n  - System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString\n  - System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)\n  - System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)\n  - System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)\n  - System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)\n  - System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)\n  - System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)\n  - System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)\n  - System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)\n  - System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)\n  - System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix\n  - System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)\n  - System.Web.UI.WebControls.SqlDataSourceView.SaveViewState\n  - System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)\n  - System.Web.UI.WebControls.SqlDataSourceView.SelectCommand\n  - System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType\n  - System.Web.UI.WebControls.SqlDataSourceView.Selected\n  - System.Web.UI.WebControls.SqlDataSourceView.Selecting\n  - System.Web.UI.WebControls.SqlDataSourceView.SelectParameters\n  - System.Web.UI.WebControls.SqlDataSourceView.SortParameterName\n  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState\n  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState\n  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState\n  - System.Web.UI.WebControls.SqlDataSourceView.TrackViewState\n  - System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)\n  - System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand\n  - System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType\n  - System.Web.UI.WebControls.SqlDataSourceView.Updated\n  - System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters\n  - System.Web.UI.WebControls.SqlDataSourceView.Updating\n  langs:\n  - csharp\n  name: SqlDataSourceView\n  nameWithType: SqlDataSourceView\n  fullName: System.Web.UI.WebControls.SqlDataSourceView\n  type: Class\n  summary: Supports the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control and provides an interface for data-bound controls to perform SQL data operations against relational databases.\n  remarks: \"The SqlDataSourceView class is intended primarily to be used by data-bound controls, and not as a programmable object in page code.  \\n  \\n ASP.NET data source controls contain one or more lists of data, represented by data source view objects. The SqlDataSourceView class extends the <xref:System.Web.UI.DataSourceView> class, defines the capabilities of the <xref:System.Web.UI.WebControls.SqlDataSource> control with which it is associated, and implements the basic data functionality for the data source control. The SqlDataSourceView class implements the data functionality for the <xref:System.Web.UI.WebControls.SqlDataSource> control, including the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operations, sorting, filtering, and managing settings that are kept in view state.  \\n  \\n Although the SqlDataSourceView object is not directly exposed to page developers by the <xref:System.Web.UI.WebControls.SqlDataSource> control, many of its properties are. The most basic operation that a data source view performs is data retrieval from the underlying database using the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method, which retrieves an <xref:System.Collections.IEnumerable> collection of data items. The SqlDataSourceView class implements data retrieval from relational databases using SQL queries. The SQL queries can be parameterized for greater flexibility and security. The following data retrieval methods, properties, and events are implemented by the SqlDataSourceView and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:  \\n  \\n-   The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property  \\n  \\n-   The <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property  \\n  \\n-   The <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> event  \\n  \\n-   The <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event  \\n  \\n The SqlDataSourceView object supports updating data in a relational database using SQL commands. The SQL commands can be parameterized for greater flexibility and security. Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform updates automatically using the SqlDataSourceView, while other controls cannot. The following update methods, properties, and events are implemented by the SqlDataSourceView and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:  \\n  \\n-   The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property  \\n  \\n-   The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> property  \\n  \\n-   The <xref:System.Web.UI.WebControls.SqlDataSource.Updating> event  \\n  \\n-   The <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event  \\n  \\n The SqlDataSourceView supports inserting new rows of data into a relational database. The SQL commands that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property can be parameterized for greater flexibility and security. Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform inserts automatically using the SqlDataSourceView, while other controls cannot. The following insert methods, properties, and events are implemented by the SqlDataSourceView and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:  \\n  \\n-   The <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property  \\n  \\n-   The <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> property  \\n  \\n-   The <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event  \\n  \\n-   The <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event  \\n  \\n The SqlDataSourceView object also supports deleting data from a relational database. As with other commands, the SQL commands that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property can be parameterized for greater flexibility and security. Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform deletes automatically using the SqlDataSourceView, while other controls cannot. The following delete methods, properties, and events are implemented by the SqlDataSourceView and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:  \\n  \\n-   The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> property  \\n  \\n-   The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property  \\n  \\n-   The <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event  \\n  \\n-   The <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> event  \\n  \\n Data retrieval is more powerful when the clause that is used to filter the data during data retrieval is dynamic. In other words, an SQL query with a static WHERE clause is not as flexible and powerful as an SQL query where the values in the WHERE clause are bound to values that can change, such as values that are displayed in controls on a Web Forms page. Instead of rebuilding an SQL query and setting the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property on every page load, you can use the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> properties to apply dynamic filtering to data retrieval. These properties are implemented by the SqlDataSourceView and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to data-bound controls and other callers.  \\n  \\n You can sort the data that you retrieve with the <xref:System.Web.UI.WebControls.SqlDataSource> control by adding an ORDER BY clause, which causes the database to perform the ordering for you when you retrieve data or by ordering the data in memory after it is retrieved. You can supply a sorting expression to the SqlDataSourceView by setting the <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> property of the <xref:System.Web.UI.DataSourceSelectArguments> object that is passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method. The syntax for the <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> property is the same as the syntax for a <xref:System.Data.DataView.Sort%2A?displayProperty=fullName> property. If you use a stored procedure to retrieve data, you can also use the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property to specify a parameter that is used specifically for sorting the results of a stored procedure call.  \\n  \\n When more than one user can change the database concurrently, there is the potential for concurrency conflict. The <xref:System.Web.UI.WebControls.SqlDataSource> control has controls concurrency through the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=fullName> property. The functionality is implemented in the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=fullName> property.  \\n  \\n Like many other Web server controls, the SqlDataSourceView implements the <xref:System.Web.UI.IStateManager> interface and uses view state to track its state across page requests. Implementations of the <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> and property and the <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> methods are provided to enable view state tracking for the control. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: 'public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager'\n  inheritance:\n  - System.Object\n  - System.Web.UI.DataSourceView\n  implements:\n  - System.Web.UI.IStateManager\n  inheritedMembers:\n  - System.Web.UI.DataSourceView.CanExecute(System.String)\n  - System.Web.UI.DataSourceView.DataSourceViewChanged\n  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  - System.Web.UI.DataSourceView.Events\n  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)\n  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  - System.Web.UI.DataSourceView.Name\n  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)\n  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)\n  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)\n  id: '#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)'\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: SqlDataSourceView(SqlDataSource,String,HttpContext)\n  nameWithType: SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> class setting the specified <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control as the owner of the current view.\n  remarks: \"The SqlDataSourceView constructor is called by the <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> method to return a new instance of a data source view with the specified `name` parameter. The <xref:System.Web.UI.WebControls.SqlDataSource> control is associated with only one <xref:System.Web.UI.WebControls.SqlDataSourceView> object at any one time, and always names the view `Table`, although this naming restriction is imposed by the <xref:System.Web.UI.WebControls.SqlDataSource> control, not the <xref:System.Web.UI.WebControls.SqlDataSourceView>. You can override the <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> method to support views with a different naming convention.  \\n  \\n The <xref:System.Web.HttpContext> object that is passed by the `context` parameter is used by the data source view to access parameter objects, such as the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> and <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> properties.\"\n  syntax:\n    content: public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);\n    parameters:\n    - id: owner\n      type: System.Web.UI.WebControls.SqlDataSource\n      description: The data source control with which the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> is associated.\n    - id: name\n      type: System.String\n      description: A unique name for the data source view, within the scope of the data source control that owns it.\n    - id: context\n      type: System.Web.HttpContext\n      description: The current <xref href=\"System.Web.HttpContext\"></xref>.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter\n  id: CancelSelectOnNullParameter\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: CancelSelectOnNullParameter\n  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether a data retrieval operation is canceled when any parameter that is contained in the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*> collection evaluates to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  remarks: The value of the <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> property is stored in view state.\n  syntax:\n    content: public bool CancelSelectOnNullParameter { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if a data retrieval operation is canceled when a parameter contained in the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*> collection evaluated to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete\n  id: CanDelete\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: CanDelete\n  nameWithType: SqlDataSourceView.CanDelete\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanDelete\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object that is associated with the current <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control supports the delete operation.\n  remarks: The CanDelete property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property is set. A delete operation could still fail if all the data properties are not set or are not set correctly.\n  syntax:\n    content: public override bool CanDelete { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.CanDelete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert\n  id: CanInsert\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: CanInsert\n  nameWithType: SqlDataSourceView.CanInsert\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanInsert\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object that is associated with the current <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control supports the insert operation.\n  remarks: The CanInsert property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property is set. An insert operation could still fail if all the data properties are not set or are not set correctly.\n  syntax:\n    content: public override bool CanInsert { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.CanInsert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage\n  id: CanPage\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: CanPage\n  nameWithType: SqlDataSourceView.CanPage\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanPage\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object that is associated with the current <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control supports the paging of retrieved data.\n  remarks: The <xref:System.Web.UI.WebControls.SqlDataSourceView> object does not support paging.\n  syntax:\n    content: public override bool CanPage { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.CanPage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount\n  id: CanRetrieveTotalRowCount\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: CanRetrieveTotalRowCount\n  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object that is associated with the current <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control supports retrieving the total number of data rows, in addition to the set of data.\n  remarks: The <xref:System.Web.UI.WebControls.SqlDataSourceView> object does not support retrieving row counts.\n  syntax:\n    content: public override bool CanRetrieveTotalRowCount { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort\n  id: CanSort\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: CanSort\n  nameWithType: SqlDataSourceView.CanSort\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanSort\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object that is associated with the current <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control supports a sorted view on the retrieved data.\n  remarks: The CanSort property returns `true`, if the current <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode> value and the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is set.\n  syntax:\n    content: public override bool CanSort { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if sorting is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.CanSort*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate\n  id: CanUpdate\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: CanUpdate\n  nameWithType: SqlDataSourceView.CanUpdate\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object that is associated with the current <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control supports the update operation.\n  remarks: The CanUpdate property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property is set. A delete operation could still fail if all the data properties are not set or are not set correctly.\n  syntax:\n    content: public override bool CanUpdate { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection\n  id: ConflictDetection\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: ConflictDetection\n  nameWithType: SqlDataSourceView.ConflictDetection\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the value indicating how the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control performs updates and deletes when data in a row in the underlying database changes during the time of the operation.\n  remarks: \"The ConflictDetection property determines whether parameters for old and new values are applied to the `Update` method. For example, if the command that is specified by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property returns a <xref:System.Data.DataSet> object with the columns `Name` and `Number`, and the ConflictDetection property is set to the <xref:System.Web.UI.ConflictOptions> value, parameters are created for `Name` and `Number` for the update operation. If the ConflictDetection property is set to the <xref:System.Web.UI.ConflictOptions> value, parameters are created for `Name`, `Number`, `original_Name`, and `original_Number`. (The exact name of the parameters for the original values depends on the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.) Then, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object determines if the method that is specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property has parameters that match.  \\n  \\n Concurrency control is a technique data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data. For example, one client reads data and presents it to a user, while another client reads the same data, and presents it to a different user. If both users update the data and submit it to the data storage, some unexpected result might occur, because both clients might update different values for the same data. This is considered a conflict. By setting the ConflictDetection property to the <xref:System.Web.UI.ConflictOptions> value, the update operation can then compare the old and new values to the original data source to detect conflicts and handle them as required.  \\n  \\n The value of the ConflictDetection property is stored in view state.\"\n  syntax:\n    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }\n    return:\n      type: System.Web.UI.ConflictOptions\n      description: One of the <xref href=\"System.Web.UI.ConflictOptions\"></xref> values. The default is the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The selected value is not one of the <xref href=\"System.Web.UI.ConflictOptions\"></xref> values.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)\n  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: Delete(IDictionary,IDictionary)\n  nameWithType: SqlDataSourceView.Delete(IDictionary,IDictionary)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Delete(IDictionary,IDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Performs a delete operation using the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*> SQL string, any parameters that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*> collection, and the values that are in the specified <code>keys</code> and <code>oldValues</code> collections.\n  remarks: The Delete method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> method, passing the `keys` and `oldValues` parameters.\n  syntax:\n    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);\n    parameters:\n    - id: keys\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of object or row key values for the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*> operation to delete.\n    - id: oldValues\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> that contains row values that are evaluated only if the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value.\n    return:\n      type: System.Int32\n      description: A value that represents the number of rows deleted from the underlying database.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.Delete*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref href=\\\"System.Web.UI.WebControls.SqlDataSource\\\"></xref> cannot establish a connection with the underlying data source.  \\n  \\n \\\\- or -  \\n  \\n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\\\"System.Web.UI.ConflictOptions\\\"></xref> value and no <code>oldValues</code> parameters are passed.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand\n  id: DeleteCommand\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: DeleteCommand\n  nameWithType: SqlDataSourceView.DeleteCommand\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the SQL string that the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> uses to delete data from the underlying database.\n  remarks: \"Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.  \\n  \\n If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used. For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=fullName>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`. However, if the provider is set to the  <xref:System.Data.Odbc?displayProperty=fullName> or <xref:System.Data.OleDb?displayProperty=fullName>, the placeholder of the parameter is `'?'`. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The DeleteCommand can be an SQL string or the name of a stored procedure, if the underlying database supports stored procedures.  \\n  \\n The value of the DeleteCommand property is stored in view state.\"\n  example:\n  - \"The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database Orders table. Data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> renders a **Delete** button automatically when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true` and automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when the **Delete** button is clicked. Finally, because this example deletes data, an event handler is added to attempt to back up the database to disk before the delete operation is performed.  \\n  \\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_947_1.aspx)]\\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_947_1.aspx)]\"\n  syntax:\n    content: public string DeleteCommand { get; set; }\n    return:\n      type: System.String\n      description: An SQL string that the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> uses to delete data.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType\n  id: DeleteCommandType\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: DeleteCommandType\n  nameWithType: SqlDataSourceView.DeleteCommandType\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether the text in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*> property is a SQL statement or the name of a stored procedure.\n  remarks: The value of the DeleteCommandType property is stored in view state.\n  syntax:\n    content: public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }\n    return:\n      type: System.Web.UI.WebControls.SqlDataSourceCommandType\n      description: One of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values. The default is the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> value.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The selected value is not one of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleted\n  id: Deleted\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: Deleted\n  nameWithType: SqlDataSourceView.Deleted\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleted\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when a delete operation has completed.\n  remarks: \"Handle the Deleted event to examine the values of output parameters after a delete operation has completed. The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;\n    return:\n      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters\n  id: DeleteParameters\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: DeleteParameters\n  nameWithType: SqlDataSourceView.DeleteParameters\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the parameters collection containing the parameters that are used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*> property.\n  remarks: \"If the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property contains a parameterized SQL query, the DeleteParameters collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.  \\n  \\n Parameter names might be affected by the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property; specifically, if the name identifies a primary key, such as a key that is specified using the `DataKeyNames` property of a data-bound control, or in delete and update scenarios in which the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions> value and a set of `oldValues` is passed to the corresponding data method. In this case, the format string is applied to each parameter name in the `oldValues` collection.  \\n  \\n Depending on the ADO.NET provider, the order of the parameters in the DeleteParameters collection might be important. The <xref:System.Data.OleDb?displayProperty=fullName> and <xref:System.Data.Odbc?displayProperty=fullName> providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query. The <xref:System.Data.SqlClient?displayProperty=fullName> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with the placeholder in the SQL query. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database. Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control. You must explicitly declare the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property and call the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when using data-bound controls, such as the <xref:System.Web.UI.WebControls.DropDownList> (unlike controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method on a data source control). In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> event handler, which explicitly calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1005_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1005_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }\n    return:\n      type: System.Web.UI.WebControls.ParameterCollection\n      description: A <xref href=\"System.Web.UI.WebControls.ParameterCollection\"></xref> that contains the parameters used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*> property.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleting\n  id: Deleting\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: Deleting\n  nameWithType: SqlDataSourceView.Deleting\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleting\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs before a delete operation.\n  remarks: \"Handle the Deleting event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the delete operation.  \\n  \\n The connection to the underlying data source is not yet open when the event handler delegate is called. Therefore, you cannot cancel the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object. You can, however, cancel the operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event that is raised before a delete operation occurs. Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the delete operation is performed.  \\n  \\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_97_1.aspx)]\\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_97_1.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;\n    return:\n      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)\n  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: ExecuteDelete(IDictionary,IDictionary)\n  nameWithType: SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Performs a delete operation using the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*> SQL string, any parameters that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*> collection, and the values that are in the specified <code>keys</code> and <code>oldValues</code> collections.\n  remarks: \"The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method to delete data from a database. Page developers and data-bound control authors do not call the ExecuteDelete method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method.  \\n  \\n The values that are contained in the `keys` collection are evaluated and merged with any values that are contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection. If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions> value, the values that are contained in the `oldValues` collection are formatted with the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property and are also merged.  \\n  \\n Before the delete operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> event. You can handle this event to examine the values of the parameters and to perform any preprocessing before a delete.  \\n  \\n To perform a delete operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database. After the delete operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> event. You can handle this event to examine any return values and error codes and to perform any post-processing.\"\n  syntax:\n    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);\n    parameters:\n    - id: keys\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of object or row key values for the ExecuteDelete operation to delete.\n    - id: oldValues\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> that contains row values that are evaluated only if the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value.\n    return:\n      type: System.Int32\n      description: A value that represents the number of rows deleted from the underlying database.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref href=\\\"System.Web.UI.WebControls.SqlDataSource\\\"></xref> cannot establish a connection with the underlying data source.  \\n  \\n \\\\- or -  \\n  \\n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\\\"System.Web.UI.ConflictOptions\\\"></xref> value and no <code>oldValues</code> parameters are passed.\"\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: \"The current user does not have the correct permissions to access to the database.  \\n  \\n \\\\- or -  \\n  \\n The instance of the control is an <xref href=\\\"System.Web.UI.WebControls.AccessDataSource\\\"></xref> control and access is denied to the path specified for the <xref:System.Web.UI.WebControls.AccessDataSource.DataFile*> property.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*> property is <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n A design-time relative path was not mapped correctly by the designer before using an instance of the <xref href=\\\"System.Web.UI.WebControls.AccessDataSource\\\"></xref> control.\"\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)\n  id: ExecuteInsert(System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: ExecuteInsert(IDictionary)\n  nameWithType: SqlDataSourceView.ExecuteInsert(IDictionary)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(IDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Performs an insert operation using the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> SQL string, any parameters that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*> collection, and the values that are in the specified <code>values</code> collection.\n  remarks: \"The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method to insert data into a database. Page developers and data-bound control authors do not call the ExecuteInsert method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.  \\n  \\n Before the insert operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> event. You can handle this event to examine the values of the parameters and to perform any preprocessing before an insert.  \\n  \\n To perform an insert operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database. After the insert completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> event. You can handle this event to examine any return values and error codes and to perform any post-processing.\"\n  syntax:\n    content: protected override int ExecuteInsert (System.Collections.IDictionary values);\n    parameters:\n    - id: values\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of values used with the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> property to perform the insert database operation. If there are no parameters associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> property is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Int32\n      description: A value that represents the number of rows inserted into the underlying database.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The current user does not have the correct permissions to gain access to the database.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)\n  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: ExecuteSelect(DataSourceSelectArguments)\n  nameWithType: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Retrieves data from the underlying database using the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*> SQL string and any parameters that are in the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*> collection.\n  remarks: \"The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited ExecuteSelect method to retrieve data from a database. Page developers and data-bound control authors do not call the ExecuteSelect method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method.  \\n  \\n Before the data retrieval is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> event. You can handle this event to examine the values of the parameters and to perform any preprocessing before data is retrieved.  \\n  \\n To perform the operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>, and executes it against the underlying database. After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event. You can handle this event to examine any return values, error codes, and perform any post-processing.  \\n  \\n The ExecuteSelect method returns a <xref:System.Data.DataView> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode>, or a <xref:System.Data.IDataReader> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode>. Close the <xref:System.Data.IDataReader> object when you have finished reading the data.  \\n  \\n If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode> and caching is enabled, the <xref:System.Web.UI.WebControls.SqlDataSourceView> retrieves data from and saves data to the cache during the data operation. The cache is created, discarded, or refreshed based on the caching behavior specified by the combination of the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> properties.  \\n  \\n> [!IMPORTANT]\\n>  When you are using client impersonation under Windows authentication, the data is cached when the first user accesses the data. If another user requests the same data, the data is retrieved from the cache. The data is not retrieved by making another call to the database to verify the user's access to the data. If you expect multiple users to access the data, and you want each retrieval to the data to be verified by the database's security configurations, do not use caching.  \\n  \\n If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode> and a <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> has been specified, it is evaluated along with any supplied <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> and the resulting filter is applied to the list of data during the data retrieval operation.\"\n  syntax:\n    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);\n    parameters:\n    - id: arguments\n      type: System.Web.UI.DataSourceSelectArguments\n      description: A <xref href=\"System.Web.UI.DataSourceSelectArguments\"></xref> object used to request operations on the data beyond basic data retrieval.\n    return:\n      type: System.Collections.IEnumerable\n      description: An <xref:System.Collections.IEnumerable> list of data rows.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The <code>arguments</code> passed to the ExecuteSelect method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \\n  \\n \\\\- or -  \\n  \\n Caching is enabled but the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode*> property of the data source is not set to <xref href=\\\"System.Web.UI.WebControls.SqlDataSourceMode\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n The <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*> property is set but <xref:System.Data.SqlClient.SqlCommand.CommandType*> is not set to <xref href=\\\"System.Data.CommandType\\\"></xref>.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The data source cannot create a database connection.  \\n  \\n \\\\- or -  \\n  \\n Caching is enabled but the internal cache and command types do not match.\"\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)\n  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)\n  nameWithType: SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Performs an update operation using the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> SQL string, any parameters that are in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*> collection, and the values that are in the specified <code>keys</code>, <code>values</code>, and <code>oldValues</code> collections.\n  remarks: \"The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited ExecuteUpdate method to update data in a database. Page developers and data-bound control authors do not call the ExecuteUpdate method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method.  \\n  \\n The values contained in the `keys` and `values` collections are evaluated and merged with any values contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection. If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to  <xref:System.Web.UI.ConflictOptions>, the values contained in the `oldValues` collection are formatted with the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> and also merged.  \\n  \\n Before the update operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> event. You can handle this event to examine the values of the parameters and perform any preprocessing before an update.  \\n  \\n To perform the operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database. After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> event. You can handle this event to examine any return values and error codes and to perform any post-processing.\"\n  syntax:\n    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);\n    parameters:\n    - id: keys\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of primary keys to use with the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property to perform the update database operation. If there are no keys associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: values\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of values to use with the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property to perform the update database operation. If there are no parameters associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: oldValues\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> that represents the original values in the database. If there are no parameters associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Int32\n      description: A value that represents the number of rows updated in the underlying database.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref href=\\\"System.Web.UI.WebControls.SqlDataSource\\\"></xref> cannot establish a connection with the underlying data source.  \\n  \\n \\\\- or -  \\n  \\n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\\\"System.Web.UI.ConflictOptions\\\"></xref> value and no <code>oldValues</code> parameters are passed.\"\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The current user does not have the correct permissions to gain access to the database.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression\n  id: FilterExpression\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: FilterExpression\n  nameWithType: SqlDataSourceView.FilterExpression\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a filtering expression that is applied when the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select*> method is called.\n  remarks: \"The syntax that is used for the FilterExpression property is a format string–style syntax. You can include parameters in the FilterExpression property. If the type of the parameter is string or character, enclose the parameter in single quotation marks. Quotation marks are not required, if the parameter is a numeric type.  \\n  \\n The <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection contains the parameters that are evaluated for the placeholders that are found in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property.  \\n  \\n The <xref:System.Web.UI.WebControls.SqlDataSource> control supports filtering data only when in `DataSet` mode.  \\n  \\n The value of the FilterExpression property is stored in view state.  \\n  \\n> [!IMPORTANT]\\n>  You should validate any filter parameter value that you receive from the client. The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method. If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.\"\n  example:\n  - \"The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In this example, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1180_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1180_1.aspx)]\"\n  syntax:\n    content: public string FilterExpression { get; set; }\n    return:\n      type: System.String\n      description: A string that represents a filtering expression applied when data is retrieved using the <xref:System.Web.UI.WebControls.SqlDataSource.Select*> method.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The FilterExpression property was set when the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> is in the <xref href=\"System.Web.UI.WebControls.SqlDataSourceMode\"></xref> mode.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Filtering\n  id: Filtering\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: Filtering\n  nameWithType: SqlDataSourceView.Filtering\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Filtering\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs before a filter operation.\n  remarks: \"Handle the Filtering event to perform validation operations on filter parameter values before the <xref:System.Web.UI.WebControls.SqlDataSourceView> object performs a filter operation. You can cancel the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> object to `true`. The event is raised only if the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property is set.  \\n  \\n> [!IMPORTANT]\\n>  You should validate any filter parameter value that you receive from the client. The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method. If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;\n    return:\n      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters\n  id: FilterParameters\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: FilterParameters\n  nameWithType: SqlDataSourceView.FilterParameters\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a collection of parameters that are associated with any parameter placeholders in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*> string.\n  remarks: \"The parameters in the FilterParameters collection are associated with any parameters that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property. The parameter placeholders that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> are evaluated by order and matched to parameter objects in the FilterParameters collection when the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method is called.  \\n  \\n> [!IMPORTANT]\\n>  You should validate any filter parameter value that you receive from the client. The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method. If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.\"\n  example:\n  - \"The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_165_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_165_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }\n    return:\n      type: System.Web.UI.WebControls.ParameterCollection\n      description: A <xref href=\"System.Web.UI.WebControls.ParameterCollection\"></xref> that contains a set of parameters associated with any parameter placeholders found in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*> property.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)\n  id: Insert(System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: Insert(IDictionary)\n  nameWithType: SqlDataSourceView.Insert(IDictionary)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Insert(IDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Performs an insert operation using the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> SQL string, any parameters that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*> collection, and the values that are in the specified <code>values</code> collection.\n  remarks: The Insert method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> method, passing the `values` parameter.\n  syntax:\n    content: public int Insert (System.Collections.IDictionary values);\n    parameters:\n    - id: values\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of parameters for the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> property to use to perform the insert database operation. If there are no parameters associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Int32\n      description: A value that represents the number of rows inserted into the underlying database.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.Insert*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand\n  id: InsertCommand\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: InsertCommand\n  nameWithType: SqlDataSourceView.InsertCommand\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the SQL string that the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object uses to insert data into the underlying database.\n  remarks: \"Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property. If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used. For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=fullName>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`. However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=fullName> or <xref:System.Data.OleDb?displayProperty=fullName>, the placeholder of the parameter is `'?'`. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The InsertCommand property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.  \\n  \\n The value of the InsertCommand property is stored in view state.\"\n  example:\n  - \"This section contains two code examples. The first code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control. The second code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \\n  \\n The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control. The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \\n  \\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1299_1.aspx)]\\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1299_1.aspx)]  \\n  \\n The following code example demonstrates how to retrieve data from SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \\n  \\n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \\n  \\n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \\n  \\n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1299_2.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1299_2.aspx)]\"\n  syntax:\n    content: public string InsertCommand { get; set; }\n    return:\n      type: System.String\n      description: An SQL string that the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> uses to insert data.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType\n  id: InsertCommandType\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: InsertCommandType\n  nameWithType: SqlDataSourceView.InsertCommandType\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether the text in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> property is a SQL statement or the name of a stored procedure.\n  remarks: The value of the InsertCommandType property is stored in view state.\n  example:\n  - \"The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \\n  \\n The <xref:System.Web.UI.WebControls.GridView> control displays a set of data and the <xref:System.Web.UI.WebControls.DetailsView> control displays the details for a particular row. If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. The stored procedure name is set in the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property and is identified as a stored procedure by setting the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value.  \\n  \\n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_733_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_733_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }\n    return:\n      type: System.Web.UI.WebControls.SqlDataSourceCommandType\n      description: One of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values. The value is the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> value.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The selected value is not one of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserted\n  id: Inserted\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: Inserted\n  nameWithType: SqlDataSourceView.Inserted\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserted\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when an insert operation has completed.\n  remarks: \"Handle the Inserted event to examine the values of output parameters after an insert operation has completed. The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control. The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.  \\n  \\n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView>. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \\n  \\n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface that is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \\n  \\n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_39_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_39_1.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;\n    return:\n      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserting\n  id: Inserting\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: Inserting\n  nameWithType: SqlDataSourceView.Inserting\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserting\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs before an insert operation.\n  remarks: \"Handle the Inserting event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the insert operation.  \\n  \\n The connection to the underlying data source is not yet open when the event handler delegate is called. Therefore, you cannot cancel the database operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object. You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control. The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.  \\n  \\n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \\n  \\n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object, and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \\n  \\n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_104_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_104_1.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;\n    return:\n      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters\n  id: InsertParameters\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: InsertParameters\n  nameWithType: SqlDataSourceView.InsertParameters\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the parameters collection containing the parameters that are used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> property.\n  remarks: \"If the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property contains a parameterized SQL query, the InsertParameters collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.  \\n  \\n Depending on the ADO.NET provider, the order of the parameters in the InsertParameters collection might be important. The <xref:System.Data.OleDb?displayProperty=fullName> and <xref:System.Data.Odbc?displayProperty=fullName> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query. The <xref:System.Data.SqlClient?displayProperty=fullName> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page. The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \\n  \\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_530_1.aspx)]\\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_530_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }\n    return:\n      type: System.Web.UI.WebControls.ParameterCollection\n      description: A <xref href=\"System.Web.UI.WebControls.ParameterCollection\"></xref> that contains the parameters used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*> property.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState\n  id: IsTrackingViewState\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: IsTrackingViewState\n  nameWithType: SqlDataSourceView.IsTrackingViewState\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object is saving changes to its view state.\n  syntax:\n    content: protected bool IsTrackingViewState { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the data source view is marked to save its state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)\n  id: LoadViewState(System.Object)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: LoadViewState(Object)\n  nameWithType: SqlDataSourceView.LoadViewState(Object)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Restores the previously saved view state for the data source view.\n  remarks: \"This method is primarily used by the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] infrastructure and is not intended to be used directly from your code.  However, control developers can override this method to specify how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The LoadViewState method restores view-state information for the <xref:System.Web.UI.WebControls.SqlDataSourceView> object from a previous page request that was saved by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> method.\"\n  syntax:\n    content: protected virtual void LoadViewState (object savedState);\n    parameters:\n    - id: savedState\n      type: System.Object\n      description: An object that represents the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> state to restore.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString\n  id: OldValuesParameterFormatString\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: OldValuesParameterFormatString\n  nameWithType: SqlDataSourceView.OldValuesParameterFormatString\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a format string to apply to the names of any parameters that are passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete*> or <xref:System.Web.UI.WebControls.SqlDataSourceView.Update*> method.\n  remarks: \"The OldValuesParameterFormatString format string is applied to primary keys only, such as those that are identified by the `DataKeyNames` property of the data-bound control or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions> value and a set of `oldValues` is passed to the corresponding data method. In this case, the format string is applied to each parameter name in the `oldValues` collection. For more information, see <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=fullName>.  \\n  \\n The value of the OldValuesParameterFormatString property is stored in view state.\"\n  syntax:\n    content: public string OldValuesParameterFormatString { get; set; }\n    return:\n      type: System.String\n      description: A string that represents a format string applied to the names of any <code>oldValues</code> parameters passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete*> or <xref:System.Web.UI.WebControls.SqlDataSourceView.Update*> methods. The default is \"{0}\".\n  overload: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)\n  id: OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: OnDeleted(SqlDataSourceStatusEventArgs)\n  nameWithType: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Deleted\"></xref> event after the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control has completed a delete operation.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \\n  \\n The OnDeleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\"></xref> that contains the event data.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)\n  id: OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: OnDeleting(SqlDataSourceCommandEventArgs)\n  nameWithType: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Deleting\"></xref> event before the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control attempts a delete operation.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \\n  \\n The OnDeleting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event, which is raised before a <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation occurs. Because this example deletes data from the Northwind database, an OnDeleting handler is added to attempt to back up the database to disk before the delete is performed.  \\n  \\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/359c75a9-ee0e-4d55-bdc1-_1.aspx)]\\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/359c75a9-ee0e-4d55-bdc1-_1.aspx)]\"\n  syntax:\n    content: protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\"></xref> that contains the event data.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)\n  id: OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: OnFiltering(SqlDataSourceFilteringEventArgs)\n  nameWithType: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Filtering\"></xref> event before the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control filters the results of a select operation.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \\n  \\n The OnFiltering method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs\"></xref> that contains the event data.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)\n  id: OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: OnInserted(SqlDataSourceStatusEventArgs)\n  nameWithType: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Inserted\"></xref> event after the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control has completed an insert operation.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \\n  \\n The OnInserted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \\n  \\n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \\n  \\n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \\n  \\n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the OnInserted event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/81209d4c-52a2-4147-b8d8-_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/81209d4c-52a2-4147-b8d8-_1.aspx)]\"\n  syntax:\n    content: protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\"></xref> that contains the event data.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.OnInserted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)\n  id: OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: OnInserting(SqlDataSourceCommandEventArgs)\n  nameWithType: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Inserting\"></xref> event before the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control attempts an insert operation.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \\n  \\n The OnInserting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \\n  \\n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \\n  \\n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the OnInserting event handler to handle the primary key that is returned by the stored procedure.  \\n  \\n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/ff2f58f9-1a94-4cce-ae83-_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/ff2f58f9-1a94-4cce-ae83-_1.aspx)]\"\n  syntax:\n    content: protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\"></xref> that contains the event data.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.OnInserting*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)\n  id: OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: OnSelected(SqlDataSourceStatusEventArgs)\n  nameWithType: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Selected\"></xref> event after the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control has completed a data retrieval operation.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \\n  \\n The OnSelected method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\"></xref> that contains the event data.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.OnSelected*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)\n  id: OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: OnSelecting(SqlDataSourceSelectingEventArgs)\n  nameWithType: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Selecting\"></xref> event before the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control attempts a data retrieval operation.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \\n  \\n The OnSelecting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs\"></xref> that contains the event data.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)\n  id: OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: OnUpdated(SqlDataSourceStatusEventArgs)\n  nameWithType: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Updated\"></xref> event after the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control has completed an update operation.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \\n  \\n The OnUpdated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example demonstrates how to display and update data retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an e-mail message notification is sent.  \\n  \\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/9236d411-d01f-4dc8-b1eb-_1.aspx)]\\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/9236d411-d01f-4dc8-b1eb-_1.aspx)]\"\n  syntax:\n    content: protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\"></xref> that contains the event data.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)\n  id: OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: OnUpdating(SqlDataSourceCommandEventArgs)\n  nameWithType: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.Updating\"></xref> event before the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control attempts an update operation.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \\n  \\n The OnUpdating method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \\n  \\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/29c8c16e-94d1-48d3-be46-_1.aspx)]\\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/29c8c16e-94d1-48d3-be46-_1.aspx)]\"\n  syntax:\n    content: protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\"></xref> that contains the event data.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix\n  id: ParameterPrefix\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: ParameterPrefix\n  nameWithType: SqlDataSourceView.ParameterPrefix\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the string that is used to prefix a parameter placeholder in a parameterized SQL query.\n  remarks: \"SQL queries and commands can be parameterized, in that they contain placeholders for values that are bound to the query at run time. Depending on the ADO.NET provider that is set for the <xref:System.Web.UI.WebControls.SqlDataSource> control, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property, the parameters are evaluated by alias or by their ordering in the <xref:System.Web.UI.WebControls.ParameterCollection> object.  \\n  \\n If the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> is not set or is set to the <xref:System.Data.SqlClient?displayProperty=fullName>, parameters are evaluated by alias and the ParameterPrefix property is used to add a parameter prefix to the <xref:System.Web.UI.WebControls.Parameter.Name%2A> property of each <xref:System.Web.UI.WebControls.Parameter> object in a <xref:System.Web.UI.WebControls.ParameterCollection> during a data retrieval or data manipulation operation. If the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the <xref:System.Data.OleDb?displayProperty=fullName> or <xref:System.Data.Odbc?displayProperty=fullName>, the parameters are evaluated by order and the ParameterPrefix and <xref:System.Web.UI.WebControls.Parameter.Name%2A> properties are ignored.  \\n  \\n If you extend the <xref:System.Web.UI.WebControls.SqlDataSourceView> class, you can override the ParameterPrefix property to supply a prefix other than the `\\\"@\\\"` string, if required.\"\n  syntax:\n    content: protected virtual string ParameterPrefix { get; }\n    return:\n      type: System.String\n      description: The \"@\" string.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)\n  id: RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)\n  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Compares the capabilities that are requested for an <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*> operation against those that the view supports and is called by the <xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError*> method.\n  remarks: The RaiseUnsupportedCapabilityError method is used by the data source view to examine each of the capabilities that are requested by a data-bound control, which is represented by the <xref:System.Web.UI.DataSourceSelectArguments> object that is passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method, and to compare those capabilities to the capabilities that are supported by the data source view. For the capabilities that are represented by the <xref:System.Web.UI.DataSourceSelectArguments> object and are not supported by the data source view, a <xref:System.NotSupportedException> exception is raised.\n  syntax:\n    content: protected override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);\n    parameters:\n    - id: capability\n      type: System.Web.UI.DataSourceCapabilities\n      description: One of the <xref href=\"System.Web.UI.DataSourceCapabilities\"></xref> values that is compared against the capabilities that the view supports.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The data source does not have the selected <code>capability</code> enabled.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState\n  id: SaveViewState\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: SaveViewState()\n  nameWithType: SqlDataSourceView.SaveViewState()\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Saves the changes to the view state for the  <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> control since the time that the page was posted back to the server.\n  remarks: \"The SaveViewState method is primarily used by control developers.  \\n  \\n View state is the accumulation of the values of the properties for a server control. These values are automatically placed in the <xref:System.Web.UI.Control.ViewState%2A> property for the server control, which is an instance of the <xref:System.Web.UI.StateBag> class. The <xref:System.Web.UI.Control.ViewState%2A> value for the server control is then persisted to a string object after the save state stage of the server control life cycle.  \\n  \\n When view state is saved, the string object that was persisted after the save state stage of the server control life cycle is returned to the client as a variable that is stored in an HTML `Hidden` element. When you author custom server controls, you can improve efficiency by overriding the SaveViewState method and modifying the `ViewState` property for your server control. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual object SaveViewState ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The object that contains the changes to the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> view state; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if there is no view state associated with the object.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)\n  id: Select(System.Web.UI.DataSourceSelectArguments)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: Select(DataSourceSelectArguments)\n  nameWithType: SqlDataSourceView.Select(DataSourceSelectArguments)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Select(DataSourceSelectArguments)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Retrieves data from the underlying database using the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*> SQL string and any parameters that are in the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*> collection.\n  remarks: \"The Select method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method, passing the `selectArgs` parameter.  \\n  \\n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method returns a <xref:System.Data.DataView> object, if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode> value or it returns a <xref:System.Data.IDataReader> object, if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode> value. Close the <xref:System.Data.IDataReader> object when you have finished reading the data.\"\n  syntax:\n    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);\n    parameters:\n    - id: arguments\n      type: System.Web.UI.DataSourceSelectArguments\n      description: A <xref href=\"System.Web.UI.DataSourceSelectArguments\"></xref> used to request operations on the data beyond basic data retrieval.\n    return:\n      type: System.Collections.IEnumerable\n      description: An <xref:System.Collections.IEnumerable> list of data rows.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.Select*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <code>selectArgs</code> passed to the Select method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand\n  id: SelectCommand\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: SelectCommand\n  nameWithType: SqlDataSourceView.SelectCommand\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the SQL string that the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object uses to retrieve data from the underlying database.\n  remarks: \"Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property. If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used. For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=fullName>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`. However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=fullName> or <xref:System.Data.OleDb?displayProperty=fullName>, the placeholder of the parameter is `'?'`. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The SelectCommand property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.  \\n  \\n> [!IMPORTANT]\\n>  It is more secure to use a stored procedure than a SQL statement for the SelectCommand property.  \\n  \\n The value of the SelectCommand property is stored in view state.\"\n  example:\n  - \"This section contains two code examples. The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The second code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.  \\n  \\n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.Button> and <xref:System.Web.UI.WebControls.TextBox> controls are provided as a simple interface to update the address for the selected user in the <xref:System.Web.UI.WebControls.DropDownList>.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_519_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_519_1.aspx)]  \\n  \\n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property can be an SQL query or the name of a stored procedure, if the data source supports stored procedures.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_519_2.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_519_2.aspx)]\"\n  syntax:\n    content: public string SelectCommand { get; set; }\n    return:\n      type: System.String\n      description: An SQL string that the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> uses to retrieve data.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType\n  id: SelectCommandType\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: SelectCommandType\n  nameWithType: SqlDataSourceView.SelectCommandType\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether the text in the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*> property is a SQL query or the name of a stored procedure.\n  remarks: The value of the SelectCommandType property is stored in view state.\n  example:\n  - \"The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_934_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_934_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }\n    return:\n      type: System.Web.UI.WebControls.SqlDataSourceCommandType\n      description: One of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values. The default is the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> value.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The selected value is not one of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Selected\n  id: Selected\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: Selected\n  nameWithType: SqlDataSourceView.Selected\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selected\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when a data retrieval operation has completed.\n  remarks: \"Handle the Selected event to examine the values of output parameters after a data retrieval operation has completed. The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;\n    return:\n      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Selecting\n  id: Selecting\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: Selecting\n  nameWithType: SqlDataSourceView.Selecting\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selecting\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs before a data retrieval operation.\n  remarks: \"Handle the Selecting event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the data retrieval operation.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;\n    return:\n      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters\n  id: SelectParameters\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: SelectParameters\n  nameWithType: SqlDataSourceView.SelectParameters\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the parameters collection containing the parameters that are used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*> property.\n  remarks: \"If the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property contains a parameterized SQL query, the SelectParameters collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.  \\n  \\n Depending on the ADO.NET provider, the order of the parameters in the SelectParameters collection might be important. The <xref:System.Data.OleDb?displayProperty=fullName> and <xref:System.Data.Odbc?displayProperty=fullName> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query. The <xref:System.Data.SqlClient?displayProperty=fullName> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server by setting the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to an SQL query. The SQL query is parameterized and the placeholder in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property is matched to the <xref:System.Web.UI.WebControls.ControlParameter> object that is added to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection. In this way, the <xref:System.Web.UI.WebControls.DropDownList> control, to which the <xref:System.Web.UI.WebControls.ControlParameter> is bound, acts as a filter for what is displayed in the <xref:System.Web.UI.WebControls.ListBox> control.  \\n  \\n> [!NOTE]\\n>  Because the parameter is used in a WHERE clause, the use of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property in this code example is functionally equivalent to using both the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_723_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_723_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }\n    return:\n      type: System.Web.UI.WebControls.ParameterCollection\n      description: A <xref href=\"System.Web.UI.WebControls.ParameterCollection\"></xref> that contains the parameters used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*> property.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName\n  id: SortParameterName\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: SortParameterName\n  nameWithType: SqlDataSourceView.SortParameterName\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the name of a stored procedure parameter that is used to sort retrieved data when data retrieval is performed using a stored procedure.\n  remarks: \"The SortParameterName property is evaluated only when the SQL command that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property is the name of a stored procedure. In this case, if the SortParameterName property is set, it contains the name of a parameter that is used to sort the results of the stored procedure.  \\n  \\n If the  <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property is set, it is prepended to the SortParameterName property.  \\n  \\n The value of the SortParameterName property is stored in view state.\"\n  syntax:\n    content: public string SortParameterName { get; set; }\n    return:\n      type: System.String\n      description: The name of a stored procedure parameter used to sort retrieved data when data retrieval is performed using a stored procedure.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState\n  id: System#Web#UI#IStateManager#IsTrackingViewState\n  isEii: true\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: System.Web.UI.IStateManager.IsTrackingViewState\n  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: For a description of this member, see <xref:System.Web.UI.IStateManager.IsTrackingViewState*>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.\n  syntax:\n    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the data source view is marked to save its state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  id: System#Web#UI#IStateManager#LoadViewState(System.Object)\n  isEii: true\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: System.Web.UI.IStateManager.LoadViewState(Object)\n  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: For a description of this member, see &lt;xref:System.Web.UI.IStateManager.LoadViewState%28System.Object%29?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.\n  syntax:\n    content: void IStateManager.LoadViewState (object savedState);\n    parameters:\n    - id: savedState\n      type: System.Object\n      description: An object that represents the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> state to restore.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState\n  id: System#Web#UI#IStateManager#SaveViewState\n  isEii: true\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: System.Web.UI.IStateManager.SaveViewState()\n  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: For a description of this member, see <xref href=\"System.Web.UI.IStateManager.SaveViewState\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.\n  syntax:\n    content: object IStateManager.SaveViewState ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The object that contains the changes to the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> view state; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if there is no view state associated with the object.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState\n  id: System#Web#UI#IStateManager#TrackViewState\n  isEii: true\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: System.Web.UI.IStateManager.TrackViewState()\n  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: For a description of this member, see <xref:System.Web.UI.IStateManager.TrackViewState*>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.\n  syntax:\n    content: void IStateManager.TrackViewState ();\n    parameters: []\n  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState\n  id: TrackViewState\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: TrackViewState()\n  nameWithType: SqlDataSourceView.TrackViewState()\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Causes the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object to track changes to its view state so that the changes can be stored in the <xref href=\"System.Web.UI.StateBag\"></xref> object for the control and persisted across requests for the same page.\n  syntax:\n    content: protected virtual void TrackViewState ();\n    parameters: []\n  overload: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)\n  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: Update(IDictionary,IDictionary,IDictionary)\n  nameWithType: SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Performs an update operation using the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> SQL string, any parameters that are in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*> collection, and the values that are in the specified <code>keys</code>, <code>values</code>, and <code>oldValues</code> collections.\n  remarks: The Update method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> method, passing the `keys`, `values`, and `oldValues` parameters. For more information, see <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=fullName>.\n  example:\n  - \"The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the Update method explicitly.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/0d500e90-6fd2-4112-8e56-_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/0d500e90-6fd2-4112-8e56-_1.aspx)]\"\n  syntax:\n    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);\n    parameters:\n    - id: keys\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of primary keys to use with the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property to perform the update database operation. If there are no keys associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: values\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of values to use with the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property to perform the update database operation. If there are no parameters associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: oldValues\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> that represents the original values in the database. If there are no parameters associated with the query or if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> is not a parameterized SQL query, pass <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Int32\n      description: A value that represents the number of rows updated in the underlying database.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.Update*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand\n  id: UpdateCommand\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: UpdateCommand\n  nameWithType: SqlDataSourceView.UpdateCommand\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the SQL string that the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> object uses to update data in the underlying database.\n  remarks: \"Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property. If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used. For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=fullName>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`. However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=fullName> or <xref:System.Data.OleDb?displayProperty=fullName>, the placeholder of the parameter is `'?'`. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The UpdateCommand property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.  \\n  \\n The value of the UpdateCommand property is stored in view state.\"\n  example:\n  - \"This section contains two code examples. The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a Microsoft SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The second code example demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> control automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection, inferring the parameters from the <xref:System.Web.UI.WebControls.BoundField> objects, and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method when the **Update** link on the editable <xref:System.Web.UI.WebControls.GridView> control is selected. This example also includes some post-processing—after a record is updated, an e-mail message notification is sent.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1335_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1335_1.aspx)]  \\n  \\n The following code example, which is functionally identical to the preceding code example, demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the ADO.NET provider for ODBC, the <xref:System.Data.Odbc?displayProperty=fullName>, and the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN).  \\n  \\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1335_2.aspx)]\\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1335_2.aspx)]\"\n  syntax:\n    content: public string UpdateCommand { get; set; }\n    return:\n      type: System.String\n      description: A SQL string that the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView\"></xref> uses to update data.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType\n  id: UpdateCommandType\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: UpdateCommandType\n  nameWithType: SqlDataSourceView.UpdateCommandType\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether the text in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property is a SQL statement or the name of a stored procedure.\n  remarks: The value of the UpdateCommandType property is stored in view state.\n  syntax:\n    content: public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }\n    return:\n      type: System.Web.UI.WebControls.SqlDataSourceCommandType\n      description: One of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values. The default is the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> value.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The selected value is not one of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandType\"></xref> values.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Updated\n  id: Updated\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: Updated\n  nameWithType: SqlDataSourceView.Updated\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updated\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when an update operation has completed.\n  remarks: \"Handle the Updated event to examine the values of output parameters after an update operation has completed. The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following code example demonstrates how to display and update data that is retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an e-mail message notification is sent.  \\n  \\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_139_1.aspx)]\\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_139_1.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;\n    return:\n      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters\n  id: UpdateParameters\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: UpdateParameters\n  nameWithType: SqlDataSourceView.UpdateParameters\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the parameters collection containing the parameters that are used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property.\n  remarks: \"If the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property contains a parameterized SQL query, the UpdateParameters collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders that are in the SQL string.  \\n  \\n Parameter names might be affected by the <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> property; specifically, if the name identifies a primary key, such as a key that is specified using the `DataKeyNames` property, or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions> value, and a set of `oldValues` are passed to the corresponding data method. In this case, the format string is applied to each parameter name in the `oldValues` collection.  \\n  \\n Depending on the ADO.NET provider, the order of the parameters in the UpdateParameters collection might be important. The <xref:System.Data.OleDb?displayProperty=fullName> and <xref:System.Data.Odbc?displayProperty=fullName> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query. The <xref:System.Data.SqlClient?displayProperty=fullName> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement, and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method explicitly.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1249_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1249_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }\n    return:\n      type: System.Web.UI.WebControls.ParameterCollection\n      description: A <xref href=\"System.Web.UI.WebControls.ParameterCollection\"></xref> that contains the parameters used by the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> property.\n  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Updating\n  id: Updating\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  langs:\n  - csharp\n  name: Updating\n  nameWithType: SqlDataSourceView.Updating\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updating\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs before an update operation.\n  remarks: \"Handle the Updating event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the update operation.  \\n  \\n The connection to the underlying data source is not yet open when the event handler delegate is called. Therefore, you cannot cancel the operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object. You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \\n  \\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_45_1.aspx)]\\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_45_1.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;\n    return:\n      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.DataSourceView\n  isExternal: false\n  name: System.Web.UI.DataSourceView\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.Web.HttpException\n  parent: System.Web\n  isExternal: false\n  name: HttpException\n  nameWithType: HttpException\n  fullName: System.Web.HttpException\n- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: SqlDataSourceView(SqlDataSource,String,HttpContext)\n  nameWithType: SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)\n- uid: System.Web.UI.WebControls.SqlDataSource\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: SqlDataSource\n  nameWithType: SqlDataSource\n  fullName: System.Web.UI.WebControls.SqlDataSource\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.HttpContext\n  parent: System.Web\n  isExternal: false\n  name: HttpContext\n  nameWithType: HttpContext\n  fullName: System.Web.HttpContext\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: CancelSelectOnNullParameter\n  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: CanDelete\n  nameWithType: SqlDataSourceView.CanDelete\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanDelete\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: CanInsert\n  nameWithType: SqlDataSourceView.CanInsert\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanInsert\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: CanPage\n  nameWithType: SqlDataSourceView.CanPage\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanPage\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: CanRetrieveTotalRowCount\n  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: CanSort\n  nameWithType: SqlDataSourceView.CanSort\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanSort\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: CanUpdate\n  nameWithType: SqlDataSourceView.CanUpdate\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: ConflictDetection\n  nameWithType: SqlDataSourceView.ConflictDetection\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection\n- uid: System.Web.UI.ConflictOptions\n  parent: System.Web.UI\n  isExternal: false\n  name: ConflictOptions\n  nameWithType: ConflictOptions\n  fullName: System.Web.UI.ConflictOptions\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: Delete(IDictionary,IDictionary)\n  nameWithType: SqlDataSourceView.Delete(IDictionary,IDictionary)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Delete(IDictionary,IDictionary)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: true\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: DeleteCommand\n  nameWithType: SqlDataSourceView.DeleteCommand\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand\n- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: DeleteCommandType\n  nameWithType: SqlDataSourceView.DeleteCommandType\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType\n- uid: System.Web.UI.WebControls.SqlDataSourceCommandType\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: SqlDataSourceCommandType\n  nameWithType: SqlDataSourceCommandType\n  fullName: System.Web.UI.WebControls.SqlDataSourceCommandType\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleted\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: Deleted\n  nameWithType: SqlDataSourceView.Deleted\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleted\n- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: SqlDataSourceStatusEventHandler\n  nameWithType: SqlDataSourceStatusEventHandler\n  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler\n- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: DeleteParameters\n  nameWithType: SqlDataSourceView.DeleteParameters\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters\n- uid: System.Web.UI.WebControls.ParameterCollection\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: ParameterCollection\n  nameWithType: ParameterCollection\n  fullName: System.Web.UI.WebControls.ParameterCollection\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleting\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: Deleting\n  nameWithType: SqlDataSourceView.Deleting\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleting\n- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: SqlDataSourceCommandEventHandler\n  nameWithType: SqlDataSourceCommandEventHandler\n  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: ExecuteDelete(IDictionary,IDictionary)\n  nameWithType: SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: ExecuteInsert(IDictionary)\n  nameWithType: SqlDataSourceView.ExecuteInsert(IDictionary)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(IDictionary)\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: ExecuteSelect(DataSourceSelectArguments)\n  nameWithType: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.Web.UI.DataSourceSelectArguments\n  parent: System.Web.UI\n  isExternal: false\n  name: DataSourceSelectArguments\n  nameWithType: DataSourceSelectArguments\n  fullName: System.Web.UI.DataSourceSelectArguments\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)\n  nameWithType: SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)\n- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: FilterExpression\n  nameWithType: SqlDataSourceView.FilterExpression\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Filtering\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: Filtering\n  nameWithType: SqlDataSourceView.Filtering\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Filtering\n- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: SqlDataSourceFilteringEventHandler\n  nameWithType: SqlDataSourceFilteringEventHandler\n  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler\n- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: FilterParameters\n  nameWithType: SqlDataSourceView.FilterParameters\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: Insert(IDictionary)\n  nameWithType: SqlDataSourceView.Insert(IDictionary)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Insert(IDictionary)\n- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: InsertCommand\n  nameWithType: SqlDataSourceView.InsertCommand\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand\n- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: InsertCommandType\n  nameWithType: SqlDataSourceView.InsertCommandType\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserted\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: Inserted\n  nameWithType: SqlDataSourceView.Inserted\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserted\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserting\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: Inserting\n  nameWithType: SqlDataSourceView.Inserting\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserting\n- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: InsertParameters\n  nameWithType: SqlDataSourceView.InsertParameters\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters\n- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: IsTrackingViewState\n  nameWithType: SqlDataSourceView.IsTrackingViewState\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState\n- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: LoadViewState(Object)\n  nameWithType: SqlDataSourceView.LoadViewState(Object)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OldValuesParameterFormatString\n  nameWithType: SqlDataSourceView.OldValuesParameterFormatString\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnDeleted(SqlDataSourceStatusEventArgs)\n  nameWithType: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)\n- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: SqlDataSourceStatusEventArgs\n  nameWithType: SqlDataSourceStatusEventArgs\n  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnDeleting(SqlDataSourceCommandEventArgs)\n  nameWithType: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)\n- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: SqlDataSourceCommandEventArgs\n  nameWithType: SqlDataSourceCommandEventArgs\n  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnFiltering(SqlDataSourceFilteringEventArgs)\n  nameWithType: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)\n- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: SqlDataSourceFilteringEventArgs\n  nameWithType: SqlDataSourceFilteringEventArgs\n  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnInserted(SqlDataSourceStatusEventArgs)\n  nameWithType: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnInserting(SqlDataSourceCommandEventArgs)\n  nameWithType: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnSelected(SqlDataSourceStatusEventArgs)\n  nameWithType: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnSelecting(SqlDataSourceSelectingEventArgs)\n  nameWithType: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)\n- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: SqlDataSourceSelectingEventArgs\n  nameWithType: SqlDataSourceSelectingEventArgs\n  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnUpdated(SqlDataSourceStatusEventArgs)\n  nameWithType: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnUpdating(SqlDataSourceCommandEventArgs)\n  nameWithType: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: ParameterPrefix\n  nameWithType: SqlDataSourceView.ParameterPrefix\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix\n- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)\n  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)\n- uid: System.Web.UI.DataSourceCapabilities\n  parent: System.Web.UI\n  isExternal: false\n  name: DataSourceCapabilities\n  nameWithType: DataSourceCapabilities\n  fullName: System.Web.UI.DataSourceCapabilities\n- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: SaveViewState()\n  nameWithType: SqlDataSourceView.SaveViewState()\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState()\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: Select(DataSourceSelectArguments)\n  nameWithType: SqlDataSourceView.Select(DataSourceSelectArguments)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Select(DataSourceSelectArguments)\n- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: SelectCommand\n  nameWithType: SqlDataSourceView.SelectCommand\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand\n- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: SelectCommandType\n  nameWithType: SqlDataSourceView.SelectCommandType\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Selected\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: Selected\n  nameWithType: SqlDataSourceView.Selected\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selected\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Selecting\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: Selecting\n  nameWithType: SqlDataSourceView.Selecting\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selecting\n- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: SqlDataSourceSelectingEventHandler\n  nameWithType: SqlDataSourceSelectingEventHandler\n  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler\n- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: SelectParameters\n  nameWithType: SqlDataSourceView.SelectParameters\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters\n- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: SortParameterName\n  nameWithType: SqlDataSourceView.SortParameterName\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName\n- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: System.Web.UI.IStateManager.IsTrackingViewState\n  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState\n- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: System.Web.UI.IStateManager.LoadViewState(Object)\n  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)\n- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: System.Web.UI.IStateManager.SaveViewState()\n  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()\n- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: System.Web.UI.IStateManager.TrackViewState()\n  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()\n- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: TrackViewState()\n  nameWithType: SqlDataSourceView.TrackViewState()\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState()\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: Update(IDictionary,IDictionary,IDictionary)\n  nameWithType: SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)\n- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: UpdateCommand\n  nameWithType: SqlDataSourceView.UpdateCommand\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand\n- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: UpdateCommandType\n  nameWithType: SqlDataSourceView.UpdateCommandType\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Updated\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: Updated\n  nameWithType: SqlDataSourceView.Updated\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updated\n- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: UpdateParameters\n  nameWithType: SqlDataSourceView.UpdateParameters\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Updating\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: Updating\n  nameWithType: SqlDataSourceView.Updating\n  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updating\n- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: SqlDataSourceView\n  nameWithType: SqlDataSourceView.SqlDataSourceView\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: CancelSelectOnNullParameter\n  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: CanDelete\n  nameWithType: SqlDataSourceView.CanDelete\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: CanInsert\n  nameWithType: SqlDataSourceView.CanInsert\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: CanPage\n  nameWithType: SqlDataSourceView.CanPage\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: CanRetrieveTotalRowCount\n  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: CanSort\n  nameWithType: SqlDataSourceView.CanSort\n- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: CanUpdate\n  nameWithType: SqlDataSourceView.CanUpdate\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: ConflictDetection\n  nameWithType: SqlDataSourceView.ConflictDetection\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: Delete\n  nameWithType: SqlDataSourceView.Delete\n- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: DeleteCommand\n  nameWithType: SqlDataSourceView.DeleteCommand\n- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: DeleteCommandType\n  nameWithType: SqlDataSourceView.DeleteCommandType\n- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: DeleteParameters\n  nameWithType: SqlDataSourceView.DeleteParameters\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: ExecuteDelete\n  nameWithType: SqlDataSourceView.ExecuteDelete\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: ExecuteInsert\n  nameWithType: SqlDataSourceView.ExecuteInsert\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: ExecuteSelect\n  nameWithType: SqlDataSourceView.ExecuteSelect\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: ExecuteUpdate\n  nameWithType: SqlDataSourceView.ExecuteUpdate\n- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: FilterExpression\n  nameWithType: SqlDataSourceView.FilterExpression\n- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: FilterParameters\n  nameWithType: SqlDataSourceView.FilterParameters\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: Insert\n  nameWithType: SqlDataSourceView.Insert\n- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: InsertCommand\n  nameWithType: SqlDataSourceView.InsertCommand\n- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: InsertCommandType\n  nameWithType: SqlDataSourceView.InsertCommandType\n- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: InsertParameters\n  nameWithType: SqlDataSourceView.InsertParameters\n- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: IsTrackingViewState\n  nameWithType: SqlDataSourceView.IsTrackingViewState\n- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: LoadViewState\n  nameWithType: SqlDataSourceView.LoadViewState\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OldValuesParameterFormatString\n  nameWithType: SqlDataSourceView.OldValuesParameterFormatString\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnDeleted\n  nameWithType: SqlDataSourceView.OnDeleted\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnDeleting\n  nameWithType: SqlDataSourceView.OnDeleting\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnFiltering\n  nameWithType: SqlDataSourceView.OnFiltering\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnInserted\n  nameWithType: SqlDataSourceView.OnInserted\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnInserting\n  nameWithType: SqlDataSourceView.OnInserting\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnSelected\n  nameWithType: SqlDataSourceView.OnSelected\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnSelecting\n  nameWithType: SqlDataSourceView.OnSelecting\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnUpdated\n  nameWithType: SqlDataSourceView.OnUpdated\n- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: OnUpdating\n  nameWithType: SqlDataSourceView.OnUpdating\n- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: ParameterPrefix\n  nameWithType: SqlDataSourceView.ParameterPrefix\n- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: RaiseUnsupportedCapabilityError\n  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError\n- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: SaveViewState\n  nameWithType: SqlDataSourceView.SaveViewState\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Select*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: Select\n  nameWithType: SqlDataSourceView.Select\n- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: SelectCommand\n  nameWithType: SqlDataSourceView.SelectCommand\n- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: SelectCommandType\n  nameWithType: SqlDataSourceView.SelectCommandType\n- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: SelectParameters\n  nameWithType: SqlDataSourceView.SelectParameters\n- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: SortParameterName\n  nameWithType: SqlDataSourceView.SortParameterName\n- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: System.Web.UI.IStateManager.IsTrackingViewState\n  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState\n- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: System.Web.UI.IStateManager.LoadViewState\n  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState\n- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: System.Web.UI.IStateManager.SaveViewState\n  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState\n- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: System.Web.UI.IStateManager.TrackViewState\n  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState\n- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: TrackViewState\n  nameWithType: SqlDataSourceView.TrackViewState\n- uid: System.Web.UI.WebControls.SqlDataSourceView.Update*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: Update\n  nameWithType: SqlDataSourceView.Update\n- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: UpdateCommand\n  nameWithType: SqlDataSourceView.UpdateCommand\n- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: UpdateCommandType\n  nameWithType: SqlDataSourceView.UpdateCommandType\n- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*\n  parent: System.Web.UI.WebControls.SqlDataSourceView\n  isExternal: false\n  name: UpdateParameters\n  nameWithType: SqlDataSourceView.UpdateParameters\n"}