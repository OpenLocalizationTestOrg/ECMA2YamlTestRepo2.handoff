{"nodes":[{"pos":[1423,1529],"content":"Provides a type converter to convert <xref:System.Enum> objects to and from various other representations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a type converter to convert &lt;xref:System.Enum&gt; objects to and from various other representations.","pos":[0,106],"source":"Provides a type converter to convert <xref:System.Enum> objects to and from various other representations."}]},{"pos":[1542,2431],"content":"This converter can only convert an enumeration object to and from a string. The EnumConverter class provides the <xref:System.ComponentModel.EnumConverter.Comparer%2A> property to get an <xref:System.Collections.IComparer> interface that can be used to sort the values of the enumeration. By default, the enumeration values are sorted in the order they appear in the file.       For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  You should never create an instance of an EnumConverter. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.","needQuote":false,"needEscape":true,"nodes":[{"content":"This converter can only convert an enumeration object to and from a string.","pos":[0,75]},{"content":"The EnumConverter class provides the &lt;xref:System.ComponentModel.EnumConverter.Comparer%2A&gt; property to get an &lt;xref:System.Collections.IComparer&gt; interface that can be used to sort the values of the enumeration.","pos":[76,288],"source":" The EnumConverter class provides the <xref:System.ComponentModel.EnumConverter.Comparer%2A> property to get an <xref:System.Collections.IComparer> interface that can be used to sort the values of the enumeration."},{"content":"By default, the enumeration values are sorted in the order they appear in the file.","pos":[289,372]},{"content":"For more information about type converters, see the &lt;xref:System.ComponentModel.TypeConverter&gt; base class and <bpt id=\"p1\">[</bpt>How to: Implement a Type Converter<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[379,565],"source":"       For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You should never create an instance of an EnumConverter.","pos":[571,640],"source":"      > [!NOTE] >  You should never create an instance of an EnumConverter."},{"content":"Instead, call the &lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt; method of the &lt;xref:System.ComponentModel.TypeDescriptor&gt; class.","pos":[641,783],"source":" Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class."},{"content":"For more information, see the examples in the &lt;xref:System.ComponentModel.TypeConverter&gt; base class.","pos":[784,884],"source":" For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class."}]},{"pos":[6421,6537],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EnumConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for the given type.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.EnumConverter\"></xref> class for the given type."},{"pos":[6669,6775],"content":"A <xref:System.Type> that represents the type of enumeration to associate with this enumeration converter.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type of enumeration to associate with this enumeration converter.","pos":[0,106],"source":"A <xref:System.Type> that represents the type of enumeration to associate with this enumeration converter."}]},{"pos":[7436,7583],"content":"Gets a value indicating whether this converter can convert an object in the given source type to an enumeration object using the specified context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this converter can convert an object in the given source type to an enumeration object using the specified context.","pos":[0,147]}]},{"pos":[7596,7904],"content":"This converter can only convert an enumeration object to and from a string.       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":false,"needEscape":true,"nodes":[{"content":"This converter can only convert an enumeration object to and from a string.","pos":[0,75]},{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[82,211],"source":"       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[212,248],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[249,306],"source":" Also, properties on the context object can return `null`."}]},{"pos":[8148,8248],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[8313,8384],"content":"A <xref:System.Type> that represents the type you wish to convert from.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type you wish to convert from.","pos":[0,71],"source":"A <xref:System.Type> that represents the type you wish to convert from."}]},{"pos":[8443,8624],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this converter can perform the conversion; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9284,9401],"content":"Gets a value indicating whether this converter can convert an object to the given destination type using the context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this converter can convert an object to the given destination type using the context.","pos":[0,117]}]},{"pos":[9413,9637],"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,129],"source":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[130,166],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[167,224],"source":" Also, properties on the context object can return `null`."}]},{"pos":[9883,9983],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[10053,10122],"content":"A <xref:System.Type> that represents the type you wish to convert to.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type you wish to convert to.","pos":[0,69],"source":"A <xref:System.Type> that represents the type you wish to convert to."}]},{"pos":[10181,10362],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this converter can perform the conversion; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10799,10898],"content":"Gets an <xref:System.Collections.IComparer> that can be used to sort the values of the enumeration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an &lt;xref:System.Collections.IComparer&gt; that can be used to sort the values of the enumeration.","pos":[0,99],"source":"Gets an <xref:System.Collections.IComparer> that can be used to sort the values of the enumeration."}]},{"pos":[10910,10993],"content":"By default, the enumeration values are sorted in the order they appear in the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"By default, the enumeration values are sorted in the order they appear in the file.","pos":[0,83]}]},{"pos":[11154,11228],"content":"An <xref:System.Collections.IComparer> for sorting the enumeration values.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IComparer&gt; for sorting the enumeration values.","pos":[0,74],"source":"An <xref:System.Collections.IComparer> for sorting the enumeration values."}]},{"pos":[11989,12050],"content":"Converts the specified value object to an enumeration object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified value object to an enumeration object.","pos":[0,61]}]},{"pos":[12063,12371],"content":"This converter can only convert an enumeration object to and from a string.       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":false,"needEscape":true,"nodes":[{"content":"This converter can only convert an enumeration object to and from a string.","pos":[0,75]},{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[82,211],"source":"       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[212,248],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[249,306],"source":" Also, properties on the context object can return `null`."}]},{"pos":[12653,12753],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[12836,12937],"content":"An optional <xref:System.Globalization.CultureInfo>. If not supplied, the current culture is assumed.","needQuote":true,"needEscape":true,"nodes":[{"content":"An optional <xref:System.Globalization.CultureInfo>. If not supplied, the current culture is assumed.","pos":[0,101],"nodes":[{"content":"An optional &lt;xref:System.Globalization.CultureInfo&gt;.","pos":[0,52],"source":"An optional <xref:System.Globalization.CultureInfo>."},{"content":"If not supplied, the current culture is assumed.","pos":[53,101]}]}]},{"pos":[12999,13035],"content":"The <xref:System.Object> to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to convert.","pos":[0,36],"source":"The <xref:System.Object> to convert."}]},{"pos":[13093,13166],"content":"An &lt;xref:System.Object&gt; that represents the converted <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object> that represents the converted <code>value</code>."},{"pos":[13332,13392],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not a valid value for the target type.","needQuote":true,"needEscape":true,"source":"<code>value</code> is not a valid value for the target type."},{"pos":[13495,13530],"content":"The conversion cannot be performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]},{"pos":[14245,14311],"content":"Converts the given value object to the specified destination type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the given value object to the specified destination type.","pos":[0,66]}]},{"pos":[14324,14809],"content":"This converter can only convert an enumeration object to and from a string.       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.      > [!NOTE] >  The behavior of the <xref:System.ComponentModel.EnumConverter.ConvertTo%2A> method is undefined if the enumeration has multiple fields with the same value.","needQuote":false,"needEscape":true,"nodes":[{"content":"This converter can only convert an enumeration object to and from a string.","pos":[0,75]},{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[82,211],"source":"       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[212,248],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[249,306],"source":" Also, properties on the context object can return `null`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The behavior of the &lt;xref:System.ComponentModel.EnumConverter.ConvertTo%2A&gt; method is undefined if the enumeration has multiple fields with the same value.","pos":[312,480],"source":"      > [!NOTE] >  The behavior of the <xref:System.ComponentModel.EnumConverter.ConvertTo%2A> method is undefined if the enumeration has multiple fields with the same value."}]},{"pos":[15111,15211],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[15294,15395],"content":"An optional <xref:System.Globalization.CultureInfo>. If not supplied, the current culture is assumed.","needQuote":true,"needEscape":true,"nodes":[{"content":"An optional <xref:System.Globalization.CultureInfo>. If not supplied, the current culture is assumed.","pos":[0,101],"nodes":[{"content":"An optional &lt;xref:System.Globalization.CultureInfo&gt;.","pos":[0,52],"source":"An optional <xref:System.Globalization.CultureInfo>."},{"content":"If not supplied, the current culture is assumed.","pos":[53,101]}]}]},{"pos":[15457,15493],"content":"The <xref:System.Object> to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to convert.","pos":[0,36],"source":"The <xref:System.Object> to convert."}]},{"pos":[15563,15610],"content":"The <xref:System.Type> to convert the value to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; to convert the value to.","pos":[0,47],"source":"The <xref:System.Type> to convert the value to."}]},{"pos":[15668,15741],"content":"An &lt;xref:System.Object&gt; that represents the converted <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object> that represents the converted <code>value</code>."},{"pos":[15917,16010],"content":"<ph id=\"ph1\">&lt;code&gt;destinationType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>destinationType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16105,16165],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not a valid value for the enumeration.","needQuote":true,"needEscape":true,"source":"<code>value</code> is not a valid value for the enumeration."},{"pos":[16268,16303],"content":"The conversion cannot be performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]},{"pos":[16661,16732],"content":"Specifies the type of the enumerator this converter is associated with.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the type of the enumerator this converter is associated with.","pos":[0,71]}]},{"pos":[16844,16905],"content":"The type of the enumerator this converter is associated with.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the enumerator this converter is associated with.","pos":[0,61]}]},{"pos":[17545,17631],"content":"Gets a collection of standard values for the data type this validator is designed for.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of standard values for the data type this validator is designed for.","pos":[0,86]}]},{"pos":[17644,18025],"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.      > [!NOTE] >  Any fields of the enumeration that are marked with <xref:System.ComponentModel.BrowsableAttribute> set to `false` will not be returned.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,129],"source":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[130,166],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[167,224],"source":" Also, properties on the context object can return `null`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Any fields of the enumeration that are marked with &lt;xref:System.ComponentModel.BrowsableAttribute&gt; set to <ph id=\"ph2\">`false`</ph> will not be returned.","pos":[230,378],"source":"      > [!NOTE] >  Any fields of the enumeration that are marked with <xref:System.ComponentModel.BrowsableAttribute> set to `false` will not be returned."}]},{"pos":[18311,18411],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[18516,18752],"content":"A &lt;xref:System.ComponentModel.TypeConverter.StandardValuesCollection&gt; that holds a standard set of valid values, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data type does not support a standard set of values.","needQuote":true,"needEscape":true,"source":"A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that holds a standard set of valid values, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the data type does not support a standard set of values."},{"pos":[19446,19631],"content":"Gets a value indicating whether the list of standard values returned from <xref:System.ComponentModel.TypeConverter.GetStandardValues*> is an exclusive list using the specified context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the list of standard values returned from &lt;xref:System.ComponentModel.TypeConverter.GetStandardValues*&gt; is an exclusive list using the specified context.","pos":[0,185],"source":"Gets a value indicating whether the list of standard values returned from <xref:System.ComponentModel.TypeConverter.GetStandardValues*> is an exclusive list using the specified context."}]},{"pos":[19643,19867],"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,129],"source":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[130,166],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[167,224],"source":" Also, properties on the context object can return `null`."}]},{"pos":[20105,20205],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[20264,20610],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.ComponentModel.TypeConverter.StandardValuesCollection&gt; returned from &lt;xref:System.ComponentModel.TypeConverter.GetStandardValues*&gt; is an exhaustive list of possible values; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if other values are possible.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned from <xref:System.ComponentModel.TypeConverter.GetStandardValues*> is an exhaustive list of possible values; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if other values are possible."},{"pos":[21313,21450],"content":"Gets a value indicating whether this object supports a standard set of values that can be picked from a list using the specified context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this object supports a standard set of values that can be picked from a list using the specified context.","pos":[0,137]}]},{"pos":[21462,21686],"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,129],"source":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[130,166],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[167,224],"source":" Also, properties on the context object can return `null`."}]},{"pos":[21924,22024],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[22083,22372],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> because <xref:System.ComponentModel.TypeConverter.GetStandardValues*> should be called to find a common set of values the object supports. This method never returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> because &lt;xref:System.ComponentModel.TypeConverter.GetStandardValues*&gt; should be called to find a common set of values the object supports.","pos":[0,199],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> because <xref:System.ComponentModel.TypeConverter.GetStandardValues*> should be called to find a common set of values the object supports."},{"content":"This method never returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[200,289],"source":" This method never returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[23029,23107],"content":"Gets a value indicating whether the given object value is valid for this type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the given object value is valid for this type.","pos":[0,78]}]},{"pos":[23119,23343],"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,129],"source":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[130,166],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[167,224],"source":" Also, properties on the context object can return `null`."}]},{"pos":[23576,23676],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[23738,23771],"content":"The <xref:System.Object> to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to test.","pos":[0,33],"source":"The <xref:System.Object> to test."}]},{"pos":[23830,24014],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified value is valid for this object; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified value is valid for this object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24436,24574],"content":"Gets or sets a <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that specifies the possible values for the enumeration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a &lt;xref:System.ComponentModel.TypeConverter.StandardValuesCollection&gt; that specifies the possible values for the enumeration.","pos":[0,138],"source":"Gets or sets a <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that specifies the possible values for the enumeration."}]},{"pos":[24794,24919],"content":"A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that specifies the possible values for the enumeration.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.ComponentModel.TypeConverter.StandardValuesCollection&gt; that specifies the possible values for the enumeration.","pos":[0,125],"source":"A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that specifies the possible values for the enumeration."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.EnumConverter\n  id: EnumConverter\n  children:\n  - System.ComponentModel.EnumConverter.#ctor(System.Type)\n  - System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.EnumConverter.Comparer\n  - System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.ComponentModel.EnumConverter.EnumType\n  - System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.EnumConverter.Values\n  langs:\n  - csharp\n  name: EnumConverter\n  nameWithType: EnumConverter\n  fullName: System.ComponentModel.EnumConverter\n  type: Class\n  summary: Provides a type converter to convert <xref:System.Enum> objects to and from various other representations.\n  remarks: \"This converter can only convert an enumeration object to and from a string. The EnumConverter class provides the <xref:System.ComponentModel.EnumConverter.Comparer%2A> property to get an <xref:System.Collections.IComparer> interface that can be used to sort the values of the enumeration. By default, the enumeration values are sorted in the order they appear in the file.  \\n  \\n For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  You should never create an instance of an EnumConverter. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.\"\n  example:\n  - \"The following code example converts a variable of type <xref:System.Enum> to a string, and vice versa. The example requires that you have declared an <xref:System.Enum> called `Servers` and that it has the following members:  \\n  \\n```  \\nWindows=1, Exchange=2, BizTalk=3  \\n```  \\n  \\n [!code-cs[Converters#12](~/add/codesnippet/csharp/t-system.componentmodel._114_1.cs)]\\n [!code-vb[Converters#12](~/add/codesnippet/visualbasic/t-system.componentmodel._114_1.vb)]\\n [!code-cpp[Converters#12](~/add/codesnippet/cpp/t-system.componentmodel._114_1.cpp)]\"\n  syntax:\n    content: 'public class EnumConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.ComponentModel.EnumConverter.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.ComponentModel.EnumConverter\n  langs:\n  - csharp\n  name: EnumConverter(Type)\n  nameWithType: EnumConverter.EnumConverter(Type)\n  fullName: System.ComponentModel.EnumConverter.EnumConverter(Type)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.EnumConverter\"></xref> class for the given type.\n  syntax:\n    content: public EnumConverter (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: A <xref:System.Type> that represents the type of enumeration to associate with this enumeration converter.\n  overload: System.ComponentModel.EnumConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.EnumConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: EnumConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.ComponentModel.EnumConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this converter can convert an object in the given source type to an enumeration object using the specified context.\n  remarks: \"This converter can only convert an enumeration object to and from a string.  \\n  \\n The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\"\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: sourceType\n      type: System.Type\n      description: A <xref:System.Type> that represents the type you wish to convert from.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.EnumConverter.CanConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.EnumConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: EnumConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.ComponentModel.EnumConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this converter can convert an object to the given destination type using the context.\n  remarks: The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: destinationType\n      type: System.Type\n      description: A <xref:System.Type> that represents the type you wish to convert to.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.EnumConverter.CanConvertTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EnumConverter.Comparer\n  id: Comparer\n  parent: System.ComponentModel.EnumConverter\n  langs:\n  - csharp\n  name: Comparer\n  nameWithType: EnumConverter.Comparer\n  fullName: System.ComponentModel.EnumConverter.Comparer\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets an <xref:System.Collections.IComparer> that can be used to sort the values of the enumeration.\n  remarks: By default, the enumeration values are sorted in the order they appear in the file.\n  syntax:\n    content: protected virtual System.Collections.IComparer Comparer { get; }\n    return:\n      type: System.Collections.IComparer\n      description: An <xref:System.Collections.IComparer> for sorting the enumeration values.\n  overload: System.ComponentModel.EnumConverter.Comparer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.EnumConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: EnumConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.ComponentModel.EnumConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Converts the specified value object to an enumeration object.\n  remarks: \"This converter can only convert an enumeration object to and from a string.  \\n  \\n The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\"\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: An optional <xref:System.Globalization.CultureInfo>. If not supplied, the current culture is assumed.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to convert.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that represents the converted <code>value</code>.\n  overload: System.ComponentModel.EnumConverter.ConvertFrom*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>value</code> is not a valid value for the target type.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  platform:\n  - net462\n- uid: System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.EnumConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: EnumConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.ComponentModel.EnumConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Converts the given value object to the specified destination type.\n  remarks: \"This converter can only convert an enumeration object to and from a string.  \\n  \\n The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.  \\n  \\n> [!NOTE]\\n>  The behavior of the <xref:System.ComponentModel.EnumConverter.ConvertTo%2A> method is undefined if the enumeration has multiple fields with the same value.\"\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: An optional <xref:System.Globalization.CultureInfo>. If not supplied, the current culture is assumed.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to convert.\n    - id: destinationType\n      type: System.Type\n      description: The <xref:System.Type> to convert the value to.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that represents the converted <code>value</code>.\n  overload: System.ComponentModel.EnumConverter.ConvertTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>destinationType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>value</code> is not a valid value for the enumeration.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  platform:\n  - net462\n- uid: System.ComponentModel.EnumConverter.EnumType\n  id: EnumType\n  parent: System.ComponentModel.EnumConverter\n  langs:\n  - csharp\n  name: EnumType\n  nameWithType: EnumConverter.EnumType\n  fullName: System.ComponentModel.EnumConverter.EnumType\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Specifies the type of the enumerator this converter is associated with.\n  syntax:\n    content: protected Type EnumType { get; }\n    return:\n      type: System.Type\n      description: The type of the enumerator this converter is associated with.\n  overload: System.ComponentModel.EnumConverter.EnumType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.EnumConverter\n  langs:\n  - csharp\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: EnumConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: System.ComponentModel.EnumConverter.GetStandardValues(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a collection of standard values for the data type this validator is designed for.\n  remarks: \"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.  \\n  \\n> [!NOTE]\\n>  Any fields of the enumeration that are marked with <xref:System.ComponentModel.BrowsableAttribute> set to `false` will not be returned.\"\n  syntax:\n    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    return:\n      type: System.ComponentModel.TypeConverter.StandardValuesCollection\n      description: A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that holds a standard set of valid values, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the data type does not support a standard set of values.\n  overload: System.ComponentModel.EnumConverter.GetStandardValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.EnumConverter\n  langs:\n  - csharp\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: EnumConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: System.ComponentModel.EnumConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether the list of standard values returned from <xref:System.ComponentModel.TypeConverter.GetStandardValues*> is an exclusive list using the specified context.\n  remarks: The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\n  syntax:\n    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned from <xref:System.ComponentModel.TypeConverter.GetStandardValues*> is an exhaustive list of possible values; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if other values are possible.\n  overload: System.ComponentModel.EnumConverter.GetStandardValuesExclusive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.EnumConverter\n  langs:\n  - csharp\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: EnumConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.ComponentModel.EnumConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this object supports a standard set of values that can be picked from a list using the specified context.\n  remarks: The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\n  syntax:\n    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> because <xref:System.ComponentModel.TypeConverter.GetStandardValues*> should be called to find a common set of values the object supports. This method never returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.EnumConverter.GetStandardValuesSupported*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  id: IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.EnumConverter\n  langs:\n  - csharp\n  name: IsValid(ITypeDescriptorContext,Object)\n  nameWithType: EnumConverter.IsValid(ITypeDescriptorContext,Object)\n  fullName: System.ComponentModel.EnumConverter.IsValid(ITypeDescriptorContext,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether the given object value is valid for this type.\n  remarks: The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\n  syntax:\n    content: public override bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to test.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified value is valid for this object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.EnumConverter.IsValid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EnumConverter.Values\n  id: Values\n  parent: System.ComponentModel.EnumConverter\n  langs:\n  - csharp\n  name: Values\n  nameWithType: EnumConverter.Values\n  fullName: System.ComponentModel.EnumConverter.Values\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets or sets a <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that specifies the possible values for the enumeration.\n  syntax:\n    content: protected System.ComponentModel.TypeConverter.StandardValuesCollection Values { get; set; }\n    return:\n      type: System.ComponentModel.TypeConverter.StandardValuesCollection\n      description: A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that specifies the possible values for the enumeration.\n  overload: System.ComponentModel.EnumConverter.Values*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.FormatException\n  isExternal: true\n  name: System.FormatException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ComponentModel.EnumConverter.#ctor(System.Type)\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: EnumConverter(Type)\n  nameWithType: EnumConverter.EnumConverter(Type)\n  fullName: System.ComponentModel.EnumConverter.EnumConverter(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: EnumConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.ComponentModel.EnumConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: EnumConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.ComponentModel.EnumConverter.CanConvertTo(ITypeDescriptorContext,Type)\n- uid: System.ComponentModel.EnumConverter.Comparer\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: Comparer\n  nameWithType: EnumConverter.Comparer\n  fullName: System.ComponentModel.EnumConverter.Comparer\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: true\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: EnumConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.ComponentModel.EnumConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: EnumConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.ComponentModel.EnumConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n- uid: System.ComponentModel.EnumConverter.EnumType\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: EnumType\n  nameWithType: EnumConverter.EnumType\n  fullName: System.ComponentModel.EnumConverter.EnumType\n- uid: System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: EnumConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: System.ComponentModel.EnumConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.StandardValuesCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter+StandardValuesCollection\n  nameWithType: TypeConverter+StandardValuesCollection\n  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection\n- uid: System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: EnumConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: System.ComponentModel.EnumConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: EnumConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.ComponentModel.EnumConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext,Object)\n  nameWithType: EnumConverter.IsValid(ITypeDescriptorContext,Object)\n  fullName: System.ComponentModel.EnumConverter.IsValid(ITypeDescriptorContext,Object)\n- uid: System.ComponentModel.EnumConverter.Values\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: Values\n  nameWithType: EnumConverter.Values\n  fullName: System.ComponentModel.EnumConverter.Values\n- uid: System.ComponentModel.EnumConverter.#ctor*\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: EnumConverter\n  nameWithType: EnumConverter.EnumConverter\n- uid: System.ComponentModel.EnumConverter.CanConvertFrom*\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: EnumConverter.CanConvertFrom\n- uid: System.ComponentModel.EnumConverter.CanConvertTo*\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: EnumConverter.CanConvertTo\n- uid: System.ComponentModel.EnumConverter.Comparer*\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: Comparer\n  nameWithType: EnumConverter.Comparer\n- uid: System.ComponentModel.EnumConverter.ConvertFrom*\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: EnumConverter.ConvertFrom\n- uid: System.ComponentModel.EnumConverter.ConvertTo*\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: EnumConverter.ConvertTo\n- uid: System.ComponentModel.EnumConverter.EnumType*\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: EnumType\n  nameWithType: EnumConverter.EnumType\n- uid: System.ComponentModel.EnumConverter.GetStandardValues*\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: GetStandardValues\n  nameWithType: EnumConverter.GetStandardValues\n- uid: System.ComponentModel.EnumConverter.GetStandardValuesExclusive*\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: GetStandardValuesExclusive\n  nameWithType: EnumConverter.GetStandardValuesExclusive\n- uid: System.ComponentModel.EnumConverter.GetStandardValuesSupported*\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: GetStandardValuesSupported\n  nameWithType: EnumConverter.GetStandardValuesSupported\n- uid: System.ComponentModel.EnumConverter.IsValid*\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: IsValid\n  nameWithType: EnumConverter.IsValid\n- uid: System.ComponentModel.EnumConverter.Values*\n  parent: System.ComponentModel.EnumConverter\n  isExternal: false\n  name: Values\n  nameWithType: EnumConverter.Values\n"}