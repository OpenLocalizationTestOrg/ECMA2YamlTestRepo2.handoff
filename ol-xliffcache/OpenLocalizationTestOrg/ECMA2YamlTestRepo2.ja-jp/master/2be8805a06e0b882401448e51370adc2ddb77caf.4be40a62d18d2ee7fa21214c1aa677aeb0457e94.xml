{"nodes":[{"pos":[888,958],"content":"Generates common language runtime (CLR) metadata for a COM+ component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates common language runtime (CLR) metadata for a COM+ component.","pos":[0,70]}]},{"pos":[971,1213],"content":"If necessary, the GenerateMetadata class generates an assembly that contains CLR metadata for a specified type library.       GenerateMetadata is used internally by the .NET Framework. You do not need to use the class directly in your code.","needQuote":false,"needEscape":true,"nodes":[{"content":"If necessary, the GenerateMetadata class generates an assembly that contains CLR metadata for a specified type library.       GenerateMetadata is used internally by the .NET Framework. You do not need to use the class directly in your code.","pos":[0,240],"nodes":[{"content":"If necessary, the GenerateMetadata class generates an assembly that contains CLR metadata for a specified type library.","pos":[0,119]},{"content":"GenerateMetadata is used internally by the .NET Framework.","pos":[126,184]},{"content":"You do not need to use the class directly in your code.","pos":[185,240]}]}]},{"pos":[2011,2124],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.Internal.GenerateMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.EnterpriseServices.Internal.GenerateMetadata\"></xref> class."},{"pos":[2824,2975],"content":"Generates, or locates, an assembly that contains common language runtime (CLR) metadata for a COM+ component represented by the specified type library.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates, or locates, an assembly that contains common language runtime (CLR) metadata for a COM+ component represented by the specified type library.","pos":[0,151]}]},{"pos":[2988,3295],"content":"If necessary, the Generate method generates an assembly that contains CLR metadata for a specified type library. To do this processing, it calls the <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> method.       These methods do not need to be called directly from your code.","needQuote":false,"needEscape":true,"nodes":[{"content":"If necessary, the Generate method generates an assembly that contains CLR metadata for a specified type library. To do this processing, it calls the <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> method.       These methods do not need to be called directly from your code.","pos":[0,305],"nodes":[{"content":"If necessary, the Generate method generates an assembly that contains CLR metadata for a specified type library.","pos":[0,112]},{"content":"To do this processing, it calls the &lt;xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A&gt; method.","pos":[113,235],"source":" To do this processing, it calls the <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> method."},{"content":"These methods do not need to be called directly from your code.","pos":[242,305]}]}]},{"pos":[3468,3531],"content":"The name of the type library for which to generate an assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type library for which to generate an assembly.","pos":[0,63]}]},{"pos":[3595,3681],"content":"The folder in which to generate an assembly or to locate an already existing assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The folder in which to generate an assembly or to locate an already existing assembly.","pos":[0,86]}]},{"pos":[3739,3821],"content":"The generated assembly name; otherwise, an empty string if the inputs are invalid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The generated assembly name; otherwise, an empty string if the inputs are invalid.","pos":[0,82]}]},{"pos":[4669,4915],"content":"Generates, or locates, an assembly that contains common language runtime (CLR) metadata for a COM+ component represented by the specified type library, signs the assembly with a strong-named key pair, and installs it in the global assembly cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates, or locates, an assembly that contains common language runtime (CLR) metadata for a COM+ component represented by the specified type library, signs the assembly with a strong-named key pair, and installs it in the global assembly cache.","pos":[0,246]}]},{"pos":[4928,5650],"content":"If necessary, the GenerateMetaData method generates an assembly that contains CLR metadata for a specified type library. It does not generate an assembly if an assembly of the generated name already exists in the string `outPath` folder.       GenerateMetaData does not need to be called directly from your code. It is called by both the <xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A> and <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A> methods.       If called by <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>, GenerateMetaData also generates a strong-named key pair, signs the assembly, and installs it in the global assembly cache.","needQuote":false,"needEscape":true,"nodes":[{"content":"If necessary, the GenerateMetaData method generates an assembly that contains CLR metadata for a specified type library.","pos":[0,120]},{"content":"It does not generate an assembly if an assembly of the generated name already exists in the string <ph id=\"ph1\">`outPath`</ph> folder.","pos":[121,237],"source":" It does not generate an assembly if an assembly of the generated name already exists in the string `outPath` folder."},{"content":"GenerateMetaData does not need to be called directly from your code.","pos":[244,312]},{"content":"It is called by both the &lt;xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A&gt; and &lt;xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A&gt; methods.","pos":[313,498],"source":" It is called by both the <xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A> and <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A> methods."},{"content":"If called by &lt;xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A&gt;, GenerateMetaData also generates a strong-named key pair, signs the assembly, and installs it in the global assembly cache.","pos":[505,718],"source":"       If called by <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>, GenerateMetaData also generates a strong-named key pair, signs the assembly, and installs it in the global assembly cache."}]},{"pos":[5894,5957],"content":"The name of the type library for which to generate an assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type library for which to generate an assembly.","pos":[0,63]}]},{"pos":[6021,6107],"content":"The folder in which to generate an assembly or to locate an already existing assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The folder in which to generate an assembly or to locate an already existing assembly.","pos":[0,86]}]},{"pos":[6173,6243],"content":"A public key used to import type library information into an assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"A public key used to import type library information into an assembly.","pos":[0,70]}]},{"pos":[6329,6389],"content":"A strong-named key pair used to sign the generated assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"A strong-named key pair used to sign the generated assembly.","pos":[0,60]}]},{"pos":[6447,6529],"content":"The generated assembly name; otherwise, an empty string if the inputs are invalid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The generated assembly name; otherwise, an empty string if the inputs are invalid.","pos":[0,82]}]},{"pos":[7305,7551],"content":"Generates, or locates, an assembly that contains common language runtime (CLR) metadata for a COM+ component represented by the specified type library, signs the assembly with a strong-named key pair, and installs it in the global assembly cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates, or locates, an assembly that contains common language runtime (CLR) metadata for a COM+ component represented by the specified type library, signs the assembly with a strong-named key pair, and installs it in the global assembly cache.","pos":[0,246]}]},{"pos":[7564,8178],"content":"If necessary, the GenerateSigned method generates an assembly that contains CLR metadata for a specified type library. It also generates a strong-named key pair and signs the assembly.       To do this processing, it calls the <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> method. These methods do not need to be called directly from your code.       The `InstallGac` parameter indicates whether to install the assembly in the global assembly cache. However, the implementation ignores this value and always attempts to install the signed assembly in the global assembly cache.","needQuote":false,"needEscape":true,"nodes":[{"content":"If necessary, the GenerateSigned method generates an assembly that contains CLR metadata for a specified type library.","pos":[0,118]},{"content":"It also generates a strong-named key pair and signs the assembly.","pos":[119,184]},{"content":"To do this processing, it calls the &lt;xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A&gt; method.","pos":[191,313],"source":"       To do this processing, it calls the <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> method."},{"content":"These methods do not need to be called directly from your code.","pos":[314,377]},{"content":"The <ph id=\"ph1\">`InstallGac`</ph> parameter indicates whether to install the assembly in the global assembly cache.","pos":[384,482],"source":"       The `InstallGac` parameter indicates whether to install the assembly in the global assembly cache."},{"content":"However, the implementation ignores this value and always attempts to install the signed assembly in the global assembly cache.","pos":[483,610]}]},{"pos":[8392,8455],"content":"The name of the type library for which to generate an assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type library for which to generate an assembly.","pos":[0,63]}]},{"pos":[8519,8605],"content":"The folder in which to generate an assembly or to locate an already existing assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The folder in which to generate an assembly or to locate an already existing assembly.","pos":[0,86]}]},{"pos":[8673,8681],"content":"Ignored.","needQuote":true,"needEscape":true,"nodes":[{"content":"Ignored.","pos":[0,8]}]},{"pos":[8743,8793],"content":"A string to which an error message can be written.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string to which an error message can be written.","pos":[0,50]}]},{"pos":[8851,8933],"content":"The generated assembly name; otherwise, an empty string if the inputs are invalid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The generated assembly name; otherwise, an empty string if the inputs are invalid.","pos":[0,82]}]},{"pos":[9778,9828],"content":"Searches for a specified file in a specified path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Searches for a specified file in a specified path.","pos":[0,50]}]},{"pos":[9840,10092],"content":"For more information, see the Platform SDK documentation about SearchPath at <bpt id=\"p1\">[</bpt>http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp<ept id=\"p1\">](http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp)</ept>.","needQuote":true,"needEscape":true,"source":"For more information, see the Platform SDK documentation about SearchPath at [http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp](http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp)."},{"pos":[10322,10359],"content":"The path to be searched for the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to be searched for the file.","pos":[0,37]}]},{"pos":[10424,10465],"content":"The name of the file for which to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the file for which to search.","pos":[0,41]}]},{"pos":[10531,10601],"content":"An extension to be added to the file name when searching for the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"An extension to be added to the file name when searching for the file.","pos":[0,70]}]},{"pos":[10671,10737],"content":"The size of the buffer that receives the valid path and file name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the buffer that receives the valid path and file name.","pos":[0,66]}]},{"pos":[10800,10866],"content":"The buffer that receives the path and file name of the file found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The buffer that receives the path and file name of the file found.","pos":[0,66]}]},{"pos":[10932,11025],"content":"The variable that receives the address of the last component of the valid path and file name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The variable that receives the address of the last component of the valid path and file name.","pos":[0,93]}]},{"pos":[11082,11225],"content":"If the search succeeds, the return value is the length of the string copied to <code>buffer</code>. If the search fails, the return value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the search succeeds, the return value is the length of the string copied to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,99],"source":"If the search succeeds, the return value is the length of the string copied to <code>buffer</code>."},{"content":"If the search fails, the return value is 0.","pos":[100,143]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.EnterpriseServices.Internal.GenerateMetadata\n  id: GenerateMetadata\n  children:\n  - System.EnterpriseServices.Internal.GenerateMetadata.#ctor\n  - System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)\n  - System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)\n  - System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)\n  - System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])\n  langs:\n  - csharp\n  name: GenerateMetadata\n  nameWithType: GenerateMetadata\n  fullName: System.EnterpriseServices.Internal.GenerateMetadata\n  type: Class\n  summary: Generates common language runtime (CLR) metadata for a COM+ component.\n  remarks: \"If necessary, the GenerateMetadata class generates an assembly that contains CLR metadata for a specified type library.  \\n  \\n GenerateMetadata is used internally by the .NET Framework. You do not need to use the class directly in your code.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.Guid(\"d8013ff1-730b-45e2-ba24-874b7242c425\")]\n\n      public class GenerateMetadata : System.EnterpriseServices.Internal.IComSoapMetadata\n  inheritance:\n  - System.Object\n  implements:\n  - System.EnterpriseServices.Internal.IComSoapMetadata\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor\n  id: '#ctor'\n  parent: System.EnterpriseServices.Internal.GenerateMetadata\n  langs:\n  - csharp\n  name: GenerateMetadata()\n  nameWithType: GenerateMetadata.GenerateMetadata()\n  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetadata()\n  type: Constructor\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Initializes a new instance of the <xref href=\"System.EnterpriseServices.Internal.GenerateMetadata\"></xref> class.\n  syntax:\n    content: public GenerateMetadata ();\n    parameters: []\n  overload: System.EnterpriseServices.Internal.GenerateMetadata.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)\n  id: Generate(System.String,System.String)\n  parent: System.EnterpriseServices.Internal.GenerateMetadata\n  langs:\n  - csharp\n  name: Generate(String,String)\n  nameWithType: GenerateMetadata.Generate(String,String)\n  fullName: System.EnterpriseServices.Internal.GenerateMetadata.Generate(String,String)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Generates, or locates, an assembly that contains common language runtime (CLR) metadata for a COM+ component represented by the specified type library.\n  remarks: \"If necessary, the Generate method generates an assembly that contains CLR metadata for a specified type library. To do this processing, it calls the <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> method.  \\n  \\n These methods do not need to be called directly from your code.\"\n  syntax:\n    content: public string Generate (string strSrcTypeLib, string outPath);\n    parameters:\n    - id: strSrcTypeLib\n      type: System.String\n      description: The name of the type library for which to generate an assembly.\n    - id: outPath\n      type: System.String\n      description: The folder in which to generate an assembly or to locate an already existing assembly.\n    return:\n      type: System.String\n      description: The generated assembly name; otherwise, an empty string if the inputs are invalid.\n  overload: System.EnterpriseServices.Internal.GenerateMetadata.Generate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)\n  id: GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)\n  parent: System.EnterpriseServices.Internal.GenerateMetadata\n  langs:\n  - csharp\n  name: GenerateMetaData(String,String,Byte[],StrongNameKeyPair)\n  nameWithType: GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)\n  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Generates, or locates, an assembly that contains common language runtime (CLR) metadata for a COM+ component represented by the specified type library, signs the assembly with a strong-named key pair, and installs it in the global assembly cache.\n  remarks: \"If necessary, the GenerateMetaData method generates an assembly that contains CLR metadata for a specified type library. It does not generate an assembly if an assembly of the generated name already exists in the string `outPath` folder.  \\n  \\n GenerateMetaData does not need to be called directly from your code. It is called by both the <xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A> and <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A> methods.  \\n  \\n If called by <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>, GenerateMetaData also generates a strong-named key pair, signs the assembly, and installs it in the global assembly cache.\"\n  syntax:\n    content: public string GenerateMetaData (string strSrcTypeLib, string outPath, byte[] PublicKey, System.Reflection.StrongNameKeyPair KeyPair);\n    parameters:\n    - id: strSrcTypeLib\n      type: System.String\n      description: The name of the type library for which to generate an assembly.\n    - id: outPath\n      type: System.String\n      description: The folder in which to generate an assembly or to locate an already existing assembly.\n    - id: PublicKey\n      type: System.Byte[]\n      description: A public key used to import type library information into an assembly.\n    - id: KeyPair\n      type: System.Reflection.StrongNameKeyPair\n      description: A strong-named key pair used to sign the generated assembly.\n    return:\n      type: System.String\n      description: The generated assembly name; otherwise, an empty string if the inputs are invalid.\n  overload: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)\n  id: GenerateSigned(System.String,System.String,System.Boolean,System.String@)\n  parent: System.EnterpriseServices.Internal.GenerateMetadata\n  langs:\n  - csharp\n  name: GenerateSigned(String,String,Boolean,String)\n  nameWithType: GenerateMetadata.GenerateSigned(String,String,Boolean,String)\n  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(String,String,Boolean,String)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Generates, or locates, an assembly that contains common language runtime (CLR) metadata for a COM+ component represented by the specified type library, signs the assembly with a strong-named key pair, and installs it in the global assembly cache.\n  remarks: \"If necessary, the GenerateSigned method generates an assembly that contains CLR metadata for a specified type library. It also generates a strong-named key pair and signs the assembly.  \\n  \\n To do this processing, it calls the <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> method. These methods do not need to be called directly from your code.  \\n  \\n The `InstallGac` parameter indicates whether to install the assembly in the global assembly cache. However, the implementation ignores this value and always attempts to install the signed assembly in the global assembly cache.\"\n  syntax:\n    content: public string GenerateSigned (string strSrcTypeLib, string outPath, bool InstallGac, out string Error);\n    parameters:\n    - id: strSrcTypeLib\n      type: System.String\n      description: The name of the type library for which to generate an assembly.\n    - id: outPath\n      type: System.String\n      description: The folder in which to generate an assembly or to locate an already existing assembly.\n    - id: InstallGac\n      type: System.Boolean\n      description: Ignored.\n    - id: Error\n      type: System.String\n      description: A string to which an error message can be written.\n    return:\n      type: System.String\n      description: The generated assembly name; otherwise, an empty string if the inputs are invalid.\n  overload: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])\n  id: SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])\n  parent: System.EnterpriseServices.Internal.GenerateMetadata\n  langs:\n  - csharp\n  name: SearchPath(String,String,String,Int32,String,Int32[])\n  nameWithType: GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])\n  fullName: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Searches for a specified file in a specified path.\n  remarks: For more information, see the Platform SDK documentation about SearchPath at [http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp](http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp).\n  syntax:\n    content: public static int SearchPath (string path, string fileName, string extension, int numBufferChars, string buffer, int[] filePart);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path to be searched for the file.\n    - id: fileName\n      type: System.String\n      description: The name of the file for which to search.\n    - id: extension\n      type: System.String\n      description: An extension to be added to the file name when searching for the file.\n    - id: numBufferChars\n      type: System.Int32\n      description: The size of the buffer that receives the valid path and file name.\n    - id: buffer\n      type: System.String\n      description: The buffer that receives the path and file name of the file found.\n    - id: filePart\n      type: System.Int32[]\n      description: The variable that receives the address of the last component of the valid path and file name.\n    return:\n      type: System.Int32\n      description: If the search succeeds, the return value is the length of the string copied to <code>buffer</code>. If the search fails, the return value is 0.\n  overload: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor\n  parent: System.EnterpriseServices.Internal.GenerateMetadata\n  isExternal: false\n  name: GenerateMetadata()\n  nameWithType: GenerateMetadata.GenerateMetadata()\n  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetadata()\n- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)\n  parent: System.EnterpriseServices.Internal.GenerateMetadata\n  isExternal: false\n  name: Generate(String,String)\n  nameWithType: GenerateMetadata.Generate(String,String)\n  fullName: System.EnterpriseServices.Internal.GenerateMetadata.Generate(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)\n  parent: System.EnterpriseServices.Internal.GenerateMetadata\n  isExternal: false\n  name: GenerateMetaData(String,String,Byte[],StrongNameKeyPair)\n  nameWithType: GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)\n  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.StrongNameKeyPair\n  parent: System.Reflection\n  isExternal: false\n  name: StrongNameKeyPair\n  nameWithType: StrongNameKeyPair\n  fullName: System.Reflection.StrongNameKeyPair\n- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)\n  parent: System.EnterpriseServices.Internal.GenerateMetadata\n  isExternal: false\n  name: GenerateSigned(String,String,Boolean,String)\n  nameWithType: GenerateMetadata.GenerateSigned(String,String,Boolean,String)\n  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(String,String,Boolean,String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])\n  parent: System.EnterpriseServices.Internal.GenerateMetadata\n  isExternal: false\n  name: SearchPath(String,String,String,Int32,String,Int32[])\n  nameWithType: GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])\n  fullName: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32[]\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n  spec.csharp:\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: Int32[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor*\n  parent: System.EnterpriseServices.Internal.GenerateMetadata\n  isExternal: false\n  name: GenerateMetadata\n  nameWithType: GenerateMetadata.GenerateMetadata\n- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate*\n  parent: System.EnterpriseServices.Internal.GenerateMetadata\n  isExternal: false\n  name: Generate\n  nameWithType: GenerateMetadata.Generate\n- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData*\n  parent: System.EnterpriseServices.Internal.GenerateMetadata\n  isExternal: false\n  name: GenerateMetaData\n  nameWithType: GenerateMetadata.GenerateMetaData\n- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned*\n  parent: System.EnterpriseServices.Internal.GenerateMetadata\n  isExternal: false\n  name: GenerateSigned\n  nameWithType: GenerateMetadata.GenerateSigned\n- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath*\n  parent: System.EnterpriseServices.Internal.GenerateMetadata\n  isExternal: false\n  name: SearchPath\n  nameWithType: GenerateMetadata.SearchPath\n"}