{"nodes":[{"pos":[855,1001],"content":"Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller. This class cannot be inherited.","pos":[0,146],"nodes":[{"content":"Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller.","pos":[0,114]},{"content":"This class cannot be inherited.","pos":[115,146]}]}]},{"pos":[1013,1218],"content":"An instance of this class is made available to managed stored procedures through the <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> property of the <xref:Microsoft.SqlServer.Server.SqlContext> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of this class is made available to managed stored procedures through the &lt;xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A&gt; property of the &lt;xref:Microsoft.SqlServer.Server.SqlContext&gt; class.","pos":[0,205],"source":"An instance of this class is made available to managed stored procedures through the <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> property of the <xref:Microsoft.SqlServer.Server.SqlContext> class."}]},{"pos":[2314,2393],"content":"Executes the command passed as a parameter and sends the results to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes the command passed as a parameter and sends the results to the client.","pos":[0,79]}]},{"pos":[2406,3317],"content":"In addition to any actual results, other messages and errors are also sent directly to the client.       Output parameters and return values are not sent to the client; these are available to the caller, through the parameters collection of the command object.       If the command is not bound to an in-process connection, an <xref:System.InvalidOperationException> is thrown. This method is not supported on commands bound to out-of-process connections.       If there are errors in the <xref:System.Data.SqlClient.SqlCommand> object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code. If the calling code doesn't catch the exception, it will propagate up the stack to the Transact-SQL code and appear in the output twice. If the calling code does catch the exception, the pipe consumer will still see the error, but there will not be a duplicate error.","needQuote":false,"needEscape":true,"nodes":[{"content":"In addition to any actual results, other messages and errors are also sent directly to the client.       Output parameters and return values are not sent to the client; these are available to the caller, through the parameters collection of the command object.       If the command is not bound to an in-process connection, an <xref:System.InvalidOperationException> is thrown. This method is not supported on commands bound to out-of-process connections.       If there are errors in the <xref:System.Data.SqlClient.SqlCommand> object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code. If the calling code doesn't catch the exception, it will propagate up the stack to the Transact-SQL code and appear in the output twice. If the calling code does catch the exception, the pipe consumer will still see the error, but there will not be a duplicate error.","pos":[0,905],"nodes":[{"content":"In addition to any actual results, other messages and errors are also sent directly to the client.","pos":[0,98]},{"content":"Output parameters and return values are not sent to the client; these are available to the caller, through the parameters collection of the command object.","pos":[105,260]},{"content":"If the command is not bound to an in-process connection, an &lt;xref:System.InvalidOperationException&gt; is thrown.","pos":[267,377],"source":"       If the command is not bound to an in-process connection, an <xref:System.InvalidOperationException> is thrown."},{"content":"This method is not supported on commands bound to out-of-process connections.","pos":[378,455]},{"content":"If there are errors in the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code.","pos":[462,637],"source":"       If there are errors in the <xref:System.Data.SqlClient.SqlCommand> object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code."},{"content":"If the calling code doesn't catch the exception, it will propagate up the stack to the Transact-SQL code and appear in the output twice.","pos":[638,774]},{"content":"If the calling code does catch the exception, the pipe consumer will still see the error, but there will not be a duplicate error.","pos":[775,905]}]}]},{"pos":[4050,4130],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to be executed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object to be executed."},{"pos":[4310,4399],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">command</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>command</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4510,4587],"content":"This method is not supported on commands bound to out-of-process connections.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is not supported on commands bound to out-of-process connections.","pos":[0,77]}]},{"pos":[4986,5174],"content":"Gets a value that indicates whether the <xref href=\"Microsoft.SqlServer.Server.SqlPipe\"></xref> is in the mode of sending single result sets back to the client. This property is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"Microsoft.SqlServer.Server.SqlPipe\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is in the mode of sending single result sets back to the client.","pos":[0,160],"source":"Gets a value that indicates whether the <xref href=\"Microsoft.SqlServer.Server.SqlPipe\"></xref> is in the mode of sending single result sets back to the client."},{"content":"This property is read-only.","pos":[161,188]}]},{"pos":[5294,5647],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*&gt; method has been called and the <bpt id=\"p2\">&lt;xref href=\"Microsoft.SqlServer.Server.SqlPipe\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is in the mode of sending single result sets back to the client; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*> method has been called and the <xref href=\"Microsoft.SqlServer.Server.SqlPipe\"></xref> is in the mode of sending single result sets back to the client; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6195,6275],"content":"Sends a single-row result set directly to the client or current output consumer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sends a single-row result set directly to the client or current output consumer.","pos":[0,80]}]},{"pos":[6473,6590],"content":"The single-row result set sent to the client: a <bpt id=\"p1\">&lt;xref href=\"Microsoft.SqlServer.Server.SqlDataRecord\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":false,"needEscape":true,"source":"The single-row result set sent to the client: a <xref href=\"Microsoft.SqlServer.Server.SqlDataRecord\"></xref> object."},{"pos":[6761,6849],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">record</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>record</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7305,7383],"content":"Sends a multirow result set directly to the client or current output consumer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sends a multirow result set directly to the client or current output consumer.","pos":[0,78]}]},{"pos":[7395,7567],"content":"If the <xref:System.Data.SqlClient.SqlDataReader> object passed in as a parameter has hidden columns, those columns are not propagated to the result set sent to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the &lt;xref:System.Data.SqlClient.SqlDataReader&gt; object passed in as a parameter has hidden columns, those columns are not propagated to the result set sent to the client.","pos":[0,172],"source":"If the <xref:System.Data.SqlClient.SqlDataReader> object passed in as a parameter has hidden columns, those columns are not propagated to the result set sent to the client."}]},{"pos":[7755,7871],"content":"The multirow result set to be sent to the client: a <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":false,"needEscape":true,"source":"The multirow result set to be sent to the client: a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> object."},{"pos":[8042,8130],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">reader</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8521,8594],"content":"Sends a string message directly to the client or current output consumer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sends a string message directly to the client or current output consumer.","pos":[0,73]}]},{"pos":[8606,8973],"content":"The message string is sent as an informational message to the client. Client applications can listen to messages through different mechanisms, depending on the data access application programming interface (API) that they use. For example, if the client is using ADO.NET, the messages transmit through the <xref:System.Data.SqlClient.SqlConnection.InfoMessage> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message string is sent as an informational message to the client. Client applications can listen to messages through different mechanisms, depending on the data access application programming interface (API) that they use. For example, if the client is using ADO.NET, the messages transmit through the <xref:System.Data.SqlClient.SqlConnection.InfoMessage> event.","pos":[0,367],"nodes":[{"content":"The message string is sent as an informational message to the client.","pos":[0,69]},{"content":"Client applications can listen to messages through different mechanisms, depending on the data access application programming interface (API) that they use.","pos":[70,226]},{"content":"For example, if the client is using ADO.NET, the messages transmit through the &lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt; event.","pos":[227,367],"source":" For example, if the client is using ADO.NET, the messages transmit through the <xref:System.Data.SqlClient.SqlConnection.InfoMessage> event."}]}]},{"pos":[9425,9469],"content":"The message string to be sent to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message string to be sent to the client.","pos":[0,44]}]},{"pos":[9631,9689],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than 4,000 characters.","needQuote":true,"needEscape":true,"source":"The <code>message</code> is greater than 4,000 characters."},{"pos":[9792,9881],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>message</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10274,10412],"content":"Marks the end of a result set, and returns the <bpt id=\"p1\">&lt;xref href=\"Microsoft.SqlServer.Server.SqlPipe\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance back to the initial state.","needQuote":true,"needEscape":true,"source":"Marks the end of a result set, and returns the <xref href=\"Microsoft.SqlServer.Server.SqlPipe\"></xref> instance back to the initial state."},{"pos":[10424,10770],"content":"Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>. This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, allow stored procedures to send custom result sets to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>. This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, allow stored procedures to send custom result sets to the client.","pos":[0,346],"nodes":[{"content":"Managed stored procedures can send result sets to clients that are not implementing a &lt;xref:System.Data.SqlClient.SqlDataReader&gt;.","pos":[0,129],"source":"Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>."},{"content":"This method, along with &lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A&gt; and &lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A&gt;, allow stored procedures to send custom result sets to the client.","pos":[130,346],"source":" This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, allow stored procedures to send custom result sets to the client."}]}]},{"pos":[11742,11839],"content":"The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*> method was not previously called.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*&gt; method was not previously called.","pos":[0,97],"source":"The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*> method was not previously called."}]},{"pos":[12355,12401],"content":"Sends a single row of data back to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sends a single row of data back to the client.","pos":[0,46]}]},{"pos":[12414,13114],"content":"Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>. This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allows stored procedures to send custom result sets to the client.       The SendResultsRow method sends a single row of data back to the client. Rows can subsequently be returned to the caller by calling SendResultsRow, one time for each row being sent. After all the rows have been sent, a call to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method is required to mark the end of the result set.","needQuote":false,"needEscape":true,"nodes":[{"content":"Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>. This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allows stored procedures to send custom result sets to the client.       The SendResultsRow method sends a single row of data back to the client. Rows can subsequently be returned to the caller by calling SendResultsRow, one time for each row being sent. After all the rows have been sent, a call to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method is required to mark the end of the result set.","pos":[0,698],"nodes":[{"content":"Managed stored procedures can send result sets to clients that are not implementing a &lt;xref:System.Data.SqlClient.SqlDataReader&gt;.","pos":[0,129],"source":"Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>."},{"content":"This method, along with &lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A&gt; and &lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A&gt;, allows stored procedures to send custom result sets to the client.","pos":[130,347],"source":" This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allows stored procedures to send custom result sets to the client."},{"content":"The SendResultsRow method sends a single row of data back to the client.","pos":[354,426]},{"content":"Rows can subsequently be returned to the caller by calling SendResultsRow, one time for each row being sent.","pos":[427,535]},{"content":"After all the rows have been sent, a call to the &lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A&gt; method is required to mark the end of the result set.","pos":[536,698],"source":" After all the rows have been sent, a call to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method is required to mark the end of the result set."}]}]},{"pos":[14029,14385],"content":"A <xref href=\"Microsoft.SqlServer.Server.SqlDataRecord\"></xref> object with the column values for the row to be sent to the client. The schema for the record must match the schema described by the metadata of the <xref href=\"Microsoft.SqlServer.Server.SqlDataRecord\"></xref> passed to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"Microsoft.SqlServer.Server.SqlDataRecord\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the column values for the row to be sent to the client.","pos":[0,131],"source":"A <xref href=\"Microsoft.SqlServer.Server.SqlDataRecord\"></xref> object with the column values for the row to be sent to the client."},{"content":"The schema for the record must match the schema described by the metadata of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.SqlServer.Server.SqlDataRecord\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> passed to the &lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*&gt; method.","pos":[132,356],"source":" The schema for the record must match the schema described by the metadata of the <xref href=\"Microsoft.SqlServer.Server.SqlDataRecord\"></xref> passed to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*> method."}]},{"pos":[14565,14653],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">record</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>record</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14764,14861],"content":"The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*> method was not previously called.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*&gt; method was not previously called.","pos":[0,97],"source":"The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*> method was not previously called."}]},{"pos":[15387,15540],"content":"Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.","needQuote":true,"needEscape":true,"nodes":[{"content":"Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.","pos":[0,153]}]},{"pos":[15553,17035],"content":"Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>. This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allow stored procedures to send custom result sets to the client.       The SendResultsStart method marks the beginning of a result set, and uses the record parameter to construct the metadata that describes the result set. All the subsequent rows, sent using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, must match that metadata definition.       Note that after calling SendResultsStart, only <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> can be called. Any other method in the same instance of <xref:Microsoft.SqlServer.Server.SqlPipe> throws an <xref:System.InvalidOperationException>. <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> sets <xref:Microsoft.SqlServer.Server.SqlPipe> back to the initial state where other methods can be called.       After control returns to Transact-SQL from CLR execution, do not attempt to use a static or local variable initialized to CLR memory. For example, do not store an instance of an in process class, for example `SQLDataRecord`, which will be used after control returns from CLR. One exception is the `SQLMetaData` in process class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Managed stored procedures can send result sets to clients that are not implementing a &lt;xref:System.Data.SqlClient.SqlDataReader&gt;.","pos":[0,129],"source":"Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>."},{"content":"This method, along with &lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A&gt; and &lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A&gt;, allow stored procedures to send custom result sets to the client.","pos":[130,344],"source":" This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allow stored procedures to send custom result sets to the client."},{"content":"The SendResultsStart method marks the beginning of a result set, and uses the record parameter to construct the metadata that describes the result set.","pos":[351,502]},{"content":"All the subsequent rows, sent using the &lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A&gt; method, must match that metadata definition.","pos":[503,647],"source":" All the subsequent rows, sent using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, must match that metadata definition."},{"content":"Note that after calling SendResultsStart, only &lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A&gt; and &lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A&gt; can be called.","pos":[654,839],"source":"       Note that after calling SendResultsStart, only <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> can be called."},{"content":"Any other method in the same instance of &lt;xref:Microsoft.SqlServer.Server.SqlPipe&gt; throws an &lt;xref:System.InvalidOperationException&gt;.","pos":[840,973],"source":" Any other method in the same instance of <xref:Microsoft.SqlServer.Server.SqlPipe> throws an <xref:System.InvalidOperationException>."},{"content":"&lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A&gt; sets &lt;xref:Microsoft.SqlServer.Server.SqlPipe&gt; back to the initial state where other methods can be called.","pos":[974,1141],"source":" <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> sets <xref:Microsoft.SqlServer.Server.SqlPipe> back to the initial state where other methods can be called."},{"content":"After control returns to Transact-SQL from CLR execution, do not attempt to use a static or local variable initialized to CLR memory.","pos":[1148,1281]},{"content":"For example, do not store an instance of an in process class, for example <ph id=\"ph1\">`SQLDataRecord`</ph>, which will be used after control returns from CLR.","pos":[1282,1423],"source":" For example, do not store an instance of an in process class, for example `SQLDataRecord`, which will be used after control returns from CLR."},{"content":"One exception is the <ph id=\"ph1\">`SQLMetaData`</ph> in process class.","pos":[1424,1476],"source":" One exception is the `SQLMetaData` in process class."}]},{"pos":[17956,18096],"content":"A <bpt id=\"p1\">&lt;xref href=\"Microsoft.SqlServer.Server.SqlDataRecord\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from which metadata is extracted and used to describe the result set.","needQuote":true,"needEscape":true,"source":"A <xref href=\"Microsoft.SqlServer.Server.SqlDataRecord\"></xref> object from which metadata is extracted and used to describe the result set."},{"pos":[18278,18366],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">record</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>record</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[18461,18528],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">record</ph><ept id=\"p1\">&lt;/code&gt;</ept> has no columns or has not been initialized.","needQuote":true,"needEscape":true,"source":"The <code>record</code> has no columns or has not been initialized."},{"pos":[18639,18823],"content":"A method other than &lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow<bpt id=\"p1\">*</bpt>&gt; or &lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd<ept id=\"p1\">*</ept>&gt; was called after the SendResultsStart method.","needQuote":true,"needEscape":true,"source":"A method other than <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow*> or <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd*> was called after the SendResultsStart method."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.SqlServer.Server.SqlPipe\n  id: SqlPipe\n  children:\n  - Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)\n  - Microsoft.SqlServer.Server.SqlPipe.IsSendingResults\n  - Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)\n  - Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)\n  - Microsoft.SqlServer.Server.SqlPipe.Send(System.String)\n  - Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd\n  - Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)\n  - Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)\n  langs:\n  - csharp\n  name: SqlPipe\n  nameWithType: SqlPipe\n  fullName: Microsoft.SqlServer.Server.SqlPipe\n  type: Class\n  summary: Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller. This class cannot be inherited.\n  remarks: An instance of this class is made available to managed stored procedures through the <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> property of the <xref:Microsoft.SqlServer.Server.SqlContext> class.\n  example:\n  - \"The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure. The example then uses a SqlPipe to execute the command and send the results back to the client.  \\n  \\n [!code-cs[DataWorks SqlPipe#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_10_1.cs)]\\n [!code-vb[DataWorks SqlPipe#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_10_1.vb)]\"\n  syntax:\n    content: public sealed class SqlPipe\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)\n  id: ExecuteAndSend(System.Data.SqlClient.SqlCommand)\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  langs:\n  - csharp\n  name: ExecuteAndSend(SqlCommand)\n  nameWithType: SqlPipe.ExecuteAndSend(SqlCommand)\n  fullName: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(SqlCommand)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Executes the command passed as a parameter and sends the results to the client.\n  remarks: \"In addition to any actual results, other messages and errors are also sent directly to the client.  \\n  \\n Output parameters and return values are not sent to the client; these are available to the caller, through the parameters collection of the command object.  \\n  \\n If the command is not bound to an in-process connection, an <xref:System.InvalidOperationException> is thrown. This method is not supported on commands bound to out-of-process connections.  \\n  \\n If there are errors in the <xref:System.Data.SqlClient.SqlCommand> object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code. If the calling code doesn't catch the exception, it will propagate up the stack to the Transact-SQL code and appear in the output twice. If the calling code does catch the exception, the pipe consumer will still see the error, but there will not be a duplicate error.\"\n  example:\n  - \"The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure. The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.  \\n  \\n [!code-cs[DataWorks SqlPipe.ExecuteAndSend#1](~/add/codesnippet/csharp/8520fc47-4500-47d0-87b3-_1.cs)]\\n [!code-vb[DataWorks SqlPipe.ExecuteAndSend#1](~/add/codesnippet/visualbasic/8520fc47-4500-47d0-87b3-_1.vb)]\"\n  syntax:\n    content: public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);\n    parameters:\n    - id: command\n      type: System.Data.SqlClient.SqlCommand\n      description: The <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object to be executed.\n  overload: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>command</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method is not supported on commands bound to out-of-process connections.\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults\n  id: IsSendingResults\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  langs:\n  - csharp\n  name: IsSendingResults\n  nameWithType: SqlPipe.IsSendingResults\n  fullName: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Gets a value that indicates whether the <xref href=\"Microsoft.SqlServer.Server.SqlPipe\"></xref> is in the mode of sending single result sets back to the client. This property is read-only.\n  syntax:\n    content: public bool IsSendingResults { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*> method has been called and the <xref href=\"Microsoft.SqlServer.Server.SqlPipe\"></xref> is in the mode of sending single result sets back to the client; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)\n  id: Send(Microsoft.SqlServer.Server.SqlDataRecord)\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  langs:\n  - csharp\n  name: Send(SqlDataRecord)\n  nameWithType: SqlPipe.Send(SqlDataRecord)\n  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataRecord)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Sends a single-row result set directly to the client or current output consumer.\n  syntax:\n    content: public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);\n    parameters:\n    - id: record\n      type: Microsoft.SqlServer.Server.SqlDataRecord\n      description: 'The single-row result set sent to the client: a <xref href=\"Microsoft.SqlServer.Server.SqlDataRecord\"></xref> object.'\n  overload: Microsoft.SqlServer.Server.SqlPipe.Send*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>record</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)\n  id: Send(System.Data.SqlClient.SqlDataReader)\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  langs:\n  - csharp\n  name: Send(SqlDataReader)\n  nameWithType: SqlPipe.Send(SqlDataReader)\n  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataReader)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Sends a multirow result set directly to the client or current output consumer.\n  remarks: If the <xref:System.Data.SqlClient.SqlDataReader> object passed in as a parameter has hidden columns, those columns are not propagated to the result set sent to the client.\n  syntax:\n    content: public void Send (System.Data.SqlClient.SqlDataReader reader);\n    parameters:\n    - id: reader\n      type: System.Data.SqlClient.SqlDataReader\n      description: 'The multirow result set to be sent to the client: a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> object.'\n  overload: Microsoft.SqlServer.Server.SqlPipe.Send*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.String)\n  id: Send(System.String)\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  langs:\n  - csharp\n  name: Send(String)\n  nameWithType: SqlPipe.Send(String)\n  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Sends a string message directly to the client or current output consumer.\n  remarks: The message string is sent as an informational message to the client. Client applications can listen to messages through different mechanisms, depending on the data access application programming interface (API) that they use. For example, if the client is using ADO.NET, the messages transmit through the <xref:System.Data.SqlClient.SqlConnection.InfoMessage> event.\n  example:\n  - \"The following example uses the Send method to send a message string directly to the client.  \\n  \\n [!code-vb[DataWorks SqlPipe.Send#1](~/add/codesnippet/visualbasic/m-microsoft.sqlserver.se_4_1.vb)]\\n [!code-cs[DataWorks SqlPipe.Send#1](~/add/codesnippet/csharp/m-microsoft.sqlserver.se_4_1.cs)]\"\n  syntax:\n    content: public void Send (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message string to be sent to the client.\n  overload: Microsoft.SqlServer.Server.SqlPipe.Send*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>message</code> is greater than 4,000 characters.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>message</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd\n  id: SendResultsEnd\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  langs:\n  - csharp\n  name: SendResultsEnd()\n  nameWithType: SqlPipe.SendResultsEnd()\n  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Marks the end of a result set, and returns the <xref href=\"Microsoft.SqlServer.Server.SqlPipe\"></xref> instance back to the initial state.\n  remarks: Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>. This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, allow stored procedures to send custom result sets to the client.\n  example:\n  - \"The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the SendResultsEnd method.  \\n  \\n [!code-vb[DataWorks SqlPipe.SendResultsEnd#1](~/add/codesnippet/visualbasic/m-microsoft.sqlserver.se_3_1.vb)]\\n [!code-cs[DataWorks SqlPipe.SendResultsEnd#1](~/add/codesnippet/csharp/m-microsoft.sqlserver.se_3_1.cs)]\"\n  syntax:\n    content: public void SendResultsEnd ();\n    parameters: []\n  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*> method was not previously called.\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)\n  id: SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  langs:\n  - csharp\n  name: SendResultsRow(SqlDataRecord)\n  nameWithType: SqlPipe.SendResultsRow(SqlDataRecord)\n  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(SqlDataRecord)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Sends a single row of data back to the client.\n  remarks: \"Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>. This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allows stored procedures to send custom result sets to the client.  \\n  \\n The SendResultsRow method sends a single row of data back to the client. Rows can subsequently be returned to the caller by calling SendResultsRow, one time for each row being sent. After all the rows have been sent, a call to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method is required to mark the end of the result set.\"\n  example:\n  - \"The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the SendResultsRow method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.  \\n  \\n [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/visualbasic/ddfb48e8-078f-4be8-b690-_1.vb)]\\n [!code-cs[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/csharp/ddfb48e8-078f-4be8-b690-_1.cs)]\"\n  syntax:\n    content: public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);\n    parameters:\n    - id: record\n      type: Microsoft.SqlServer.Server.SqlDataRecord\n      description: A <xref href=\"Microsoft.SqlServer.Server.SqlDataRecord\"></xref> object with the column values for the row to be sent to the client. The schema for the record must match the schema described by the metadata of the <xref href=\"Microsoft.SqlServer.Server.SqlDataRecord\"></xref> passed to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*> method.\n  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>record</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*> method was not previously called.\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)\n  id: SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  langs:\n  - csharp\n  name: SendResultsStart(SqlDataRecord)\n  nameWithType: SqlPipe.SendResultsStart(SqlDataRecord)\n  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(SqlDataRecord)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.\n  remarks: \"Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>. This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allow stored procedures to send custom result sets to the client.  \\n  \\n The SendResultsStart method marks the beginning of a result set, and uses the record parameter to construct the metadata that describes the result set. All the subsequent rows, sent using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, must match that metadata definition.  \\n  \\n Note that after calling SendResultsStart, only <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> can be called. Any other method in the same instance of <xref:Microsoft.SqlServer.Server.SqlPipe> throws an <xref:System.InvalidOperationException>. <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> sets <xref:Microsoft.SqlServer.Server.SqlPipe> back to the initial state where other methods can be called.  \\n  \\n After control returns to Transact-SQL from CLR execution, do not attempt to use a static or local variable initialized to CLR memory. For example, do not store an instance of an in process class, for example `SQLDataRecord`, which will be used after control returns from CLR. One exception is the `SQLMetaData` in process class.\"\n  example:\n  - \"The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the SendResultsStart method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.  \\n  \\n [!code-vb[DataWorks SqlPipe.SendResultsStart#1](~/add/codesnippet/visualbasic/7934d20a-2ed7-4876-a001-_1.vb)]\\n [!code-cs[DataWorks SqlPipe.SendResultsStart#1](~/add/codesnippet/csharp/7934d20a-2ed7-4876-a001-_1.cs)]\"\n  syntax:\n    content: public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);\n    parameters:\n    - id: record\n      type: Microsoft.SqlServer.Server.SqlDataRecord\n      description: A <xref href=\"Microsoft.SqlServer.Server.SqlDataRecord\"></xref> object from which metadata is extracted and used to describe the result set.\n  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>record</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>record</code> has no columns or has not been initialized.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A method other than <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow*> or <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd*> was called after the SendResultsStart method.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  isExternal: false\n  name: ExecuteAndSend(SqlCommand)\n  nameWithType: SqlPipe.ExecuteAndSend(SqlCommand)\n  fullName: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(SqlCommand)\n- uid: System.Data.SqlClient.SqlCommand\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlCommand\n  nameWithType: SqlCommand\n  fullName: System.Data.SqlClient.SqlCommand\n- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  isExternal: false\n  name: IsSendingResults\n  nameWithType: SqlPipe.IsSendingResults\n  fullName: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  isExternal: false\n  name: Send(SqlDataRecord)\n  nameWithType: SqlPipe.Send(SqlDataRecord)\n  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataRecord)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord\n  parent: Microsoft.SqlServer.Server\n  isExternal: false\n  name: SqlDataRecord\n  nameWithType: SqlDataRecord\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord\n- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  isExternal: false\n  name: Send(SqlDataReader)\n  nameWithType: SqlPipe.Send(SqlDataReader)\n  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataReader)\n- uid: System.Data.SqlClient.SqlDataReader\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlDataReader\n  nameWithType: SqlDataReader\n  fullName: System.Data.SqlClient.SqlDataReader\n- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.String)\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  isExternal: false\n  name: Send(String)\n  nameWithType: SqlPipe.Send(String)\n  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  isExternal: false\n  name: SendResultsEnd()\n  nameWithType: SqlPipe.SendResultsEnd()\n  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd()\n- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  isExternal: false\n  name: SendResultsRow(SqlDataRecord)\n  nameWithType: SqlPipe.SendResultsRow(SqlDataRecord)\n  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(SqlDataRecord)\n- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  isExternal: false\n  name: SendResultsStart(SqlDataRecord)\n  nameWithType: SqlPipe.SendResultsStart(SqlDataRecord)\n  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(SqlDataRecord)\n- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend*\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  isExternal: false\n  name: ExecuteAndSend\n  nameWithType: SqlPipe.ExecuteAndSend\n- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults*\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  isExternal: false\n  name: IsSendingResults\n  nameWithType: SqlPipe.IsSendingResults\n- uid: Microsoft.SqlServer.Server.SqlPipe.Send*\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  isExternal: false\n  name: Send\n  nameWithType: SqlPipe.Send\n- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd*\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  isExternal: false\n  name: SendResultsEnd\n  nameWithType: SqlPipe.SendResultsEnd\n- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow*\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  isExternal: false\n  name: SendResultsRow\n  nameWithType: SqlPipe.SendResultsRow\n- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*\n  parent: Microsoft.SqlServer.Server.SqlPipe\n  isExternal: false\n  name: SendResultsStart\n  nameWithType: SqlPipe.SendResultsStart\n"}