{"nodes":[{"pos":[3303,3315],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3352,3364],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4417,4429],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4537,4549],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5143,5155],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6237,6249],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6306,6318],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6873,6885],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7855,7867],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7975,7987],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9636,9648],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9703,9715],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9823,9835],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10420,10432],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10489,10501],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11776,11788],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11901,11913],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12021,12033],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13610,13622],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13740,13752],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13869,13881],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13989,14001],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15012,15024],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15079,15091],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15199,15211],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15900,15912],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16633,16645],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17706,17718],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17816,17828],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19132,19144],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19198,19210],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19318,19330],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20652,20664],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20777,20789],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20843,20855],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20963,20975],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21651,21663],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22257,22269],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23328,23340],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23395,23407],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23515,23527],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24148,24160],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24848,24860],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25844,25856],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25964,25976],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26595,26607],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27570,27582],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27690,27702],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28247,28259],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28999,29011],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30063,30075],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30130,30142],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30250,30262],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30963,30975],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.IHash`2\n  id: IHash`2\n  children:\n  - Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.IHash`2.bucket_count\n  - Microsoft.VisualC.StlClr.IHash`2.clear\n  - Microsoft.VisualC.StlClr.IHash`2.count(`0)\n  - Microsoft.VisualC.StlClr.IHash`2.empty\n  - Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)\n  - Microsoft.VisualC.StlClr.IHash`2.erase(`0)\n  - Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  - Microsoft.VisualC.StlClr.IHash`2.hash_delegate\n  - Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)\n  - Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)\n  - Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)\n  - Microsoft.VisualC.StlClr.IHash`2.key_comp\n  - Microsoft.VisualC.StlClr.IHash`2.load_factor\n  - Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  - Microsoft.VisualC.StlClr.IHash`2.max_load_factor\n  - Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)\n  - Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)\n  - Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.IHash`2.size\n  - Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash`2)\n  - Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  - Microsoft.VisualC.StlClr.IHash`2.value_comp\n  langs:\n  - csharp\n  name: IHash<TKey,TValue>\n  nameWithType: IHash<TKey,TValue>\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>\n  type: Interface\n  syntax:\n    content: >-\n      [System.Diagnostics.CodeAnalysis.SuppressMessage(\"Microsoft.Design\", \"CA1005\")]\n\n      public interface IHash<TKey,TValue> : ICloneable, Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue>, System.Collections.ICollection\n    typeParameters:\n    - id: TKey\n      description: To be added.\n    - id: TValue\n      description: To be added.\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue>\n  - System.Collections.ICollection\n  - System.ICloneable\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)\n  id: begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: begin(ContainerBidirectionalIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.begin(ContainerBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.begin(ContainerBidirectionalIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) begin (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.begin*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.bucket_count\n  id: bucket_count\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: bucket_count()\n  nameWithType: IHash<TKey,TValue>.bucket_count()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.bucket_count()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public int bucket_count ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.bucket_count*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.clear\n  id: clear\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: clear()\n  nameWithType: IHash<TKey,TValue>.clear()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.clear()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void clear ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.IHash`2.clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.count(`0)\n  id: count(`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: count(TKey)\n  nameWithType: IHash<TKey,TValue>.count(TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.count(TKey)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public int count (TKey _Keyval);\n    parameters:\n    - id: _Keyval\n      type: TKey\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.count*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.empty\n  id: empty\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: empty()\n  nameWithType: IHash<TKey,TValue>.empty()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.empty()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public bool empty ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.empty*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)\n  id: end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: end(ContainerBidirectionalIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.end(ContainerBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.end(ContainerBidirectionalIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) end (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.end*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)\n  id: equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)\n  nameWithType: IHash<TKey,TValue>.equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) equal_range (ref Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>> , TKey _Keyval);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}}\n      description: To be added.\n    - id: _Keyval\n      type: TKey\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.equal_range*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.erase(`0)\n  id: erase(`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: erase(TKey)\n  nameWithType: IHash<TKey,TValue>.erase(TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(TKey)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public int erase (TKey _Keyval);\n    parameters:\n    - id: _Keyval\n      type: TKey\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.erase*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)\n  nameWithType: IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: To be added.\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.erase*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)\n  nameWithType: IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Last_iter);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: To be added.\n    - id: _First_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: To be added.\n    - id: _Last_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.erase*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  id: find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: find(ContainerBidirectionalIterator<TValue>,TKey)\n  nameWithType: IHash<TKey,TValue>.find(ContainerBidirectionalIterator<TValue>,TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.find(ContainerBidirectionalIterator<TValue>,TKey)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) find (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , TKey _Keyval);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: To be added.\n    - id: _Keyval\n      type: TKey\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.find*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.hash_delegate\n  id: hash_delegate\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: hash_delegate()\n  nameWithType: IHash<TKey,TValue>.hash_delegate()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.hash_delegate()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Microsoft.VisualC.StlClr.UnaryDelegate<TKey,int> hash_delegate ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.UnaryDelegate{TKey,System.Int32}\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.hash_delegate*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)\n  id: insert(System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: insert(IEnumerable)\n  nameWithType: IHash<TKey,TValue>.insert(IEnumerable)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(IEnumerable)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (System.Collections.IEnumerable _Right);\n    parameters:\n    - id: _Right\n      type: System.Collections.IEnumerable\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: insert(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: insert(IInputIterator<TValue>,IInputIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.insert(IInputIterator<TValue>,IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(IInputIterator<TValue>,IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);\n    parameters:\n    - id: _First\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n    - id: _Last\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)\n  id: insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)\n  nameWithType: IHash<TKey,TValue>.insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,bool> , TValue _Val);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},System.Boolean}\n      description: To be added.\n    - id: _Val\n      type: TValue\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)\n  nameWithType: IHash<TKey,TValue>.insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, TValue _Val);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: To be added.\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: To be added.\n    - id: _Val\n      type: TValue\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.key_comp\n  id: key_comp\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: key_comp()\n  nameWithType: IHash<TKey,TValue>.key_comp()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.key_comp()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Microsoft.VisualC.StlClr.BinaryDelegate<TKey,TKey,bool> key_comp ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.BinaryDelegate{TKey,TKey,System.Boolean}\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.key_comp*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.load_factor\n  id: load_factor\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: load_factor()\n  nameWithType: IHash<TKey,TValue>.load_factor()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.load_factor()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public float load_factor ();\n    parameters: []\n    return:\n      type: System.Single\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.load_factor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  id: lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: lower_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  nameWithType: IHash<TKey,TValue>.lower_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.lower_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) lower_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , TKey _Keyval);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: To be added.\n    - id: _Keyval\n      type: TKey\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.lower_bound*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.max_load_factor\n  id: max_load_factor\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: max_load_factor()\n  nameWithType: IHash<TKey,TValue>.max_load_factor()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.max_load_factor()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public float max_load_factor ();\n    parameters: []\n    return:\n      type: System.Single\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.max_load_factor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)\n  id: max_load_factor(System.Single)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: max_load_factor(Single)\n  nameWithType: IHash<TKey,TValue>.max_load_factor(Single)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.max_load_factor(Single)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void max_load_factor (float _Newmax);\n    parameters:\n    - id: _Newmax\n      type: System.Single\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.max_load_factor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  id: rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: rbegin(ReverseBidirectionalIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.rbegin(ReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rbegin(ReverseBidirectionalIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.rbegin*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)\n  id: rehash(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: rehash(Int32)\n  nameWithType: IHash<TKey,TValue>.rehash(Int32)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rehash(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void rehash (int _Buckets);\n    parameters:\n    - id: _Buckets\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.rehash*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  id: rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: rend(ReverseBidirectionalIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.rend(ReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rend(ReverseBidirectionalIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rend (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.rend*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.size\n  id: size\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: size()\n  nameWithType: IHash<TKey,TValue>.size()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.size()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public int size ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.size*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash`2)\n  id: swap(Microsoft.VisualC.StlClr.IHash`2)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: swap(IHash<TKey,TValue>)\n  nameWithType: IHash<TKey,TValue>.swap(IHash<TKey,TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.swap(IHash<TKey,TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void swap (Microsoft.VisualC.StlClr.IHash<TKey,TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.IHash`2\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.swap*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  id: upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: upper_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  nameWithType: IHash<TKey,TValue>.upper_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.upper_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) upper_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , TKey _Keyval);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: To be added.\n    - id: _Keyval\n      type: TKey\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.upper_bound*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IHash`2.value_comp\n  id: value_comp\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: value_comp()\n  nameWithType: IHash<TKey,TValue>.value_comp()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.value_comp()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,bool> value_comp ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IHash`2.value_comp*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: begin(ContainerBidirectionalIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.begin(ContainerBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.begin(ContainerBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerBidirectionalIterator<TValue>\n  nameWithType: ContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IHash`2.bucket_count\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: bucket_count()\n  nameWithType: IHash<TKey,TValue>.bucket_count()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.bucket_count()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.IHash`2.clear\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: clear()\n  nameWithType: IHash<TKey,TValue>.clear()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.clear()\n- uid: Microsoft.VisualC.StlClr.IHash`2.count(`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: count(TKey)\n  nameWithType: IHash<TKey,TValue>.count(TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.count(TKey)\n- uid: TKey\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: Microsoft.VisualC.StlClr.IHash`2.empty\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: empty()\n  nameWithType: IHash<TKey,TValue>.empty()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.empty()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: end(ContainerBidirectionalIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.end(ContainerBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.end(ContainerBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)\n  nameWithType: IHash<TKey,TValue>.equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)\n- uid: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}}\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>\n  nameWithType: GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>\n  fullName: Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>>\n  spec.csharp:\n  - uid: Microsoft.VisualC.StlClr.GenericPair`2\n    name: GenericPair\n    nameWithType: GenericPair\n    fullName: GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n    name: ContainerBidirectionalIterator\n    nameWithType: ContainerBidirectionalIterator\n    fullName: ContainerBidirectionalIterator<TValue>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TValue\n    name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n    name: ContainerBidirectionalIterator\n    nameWithType: ContainerBidirectionalIterator\n    fullName: ContainerBidirectionalIterator<TValue>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TValue\n    name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.VisualC.StlClr.IHash`2.erase(`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: erase(TKey)\n  nameWithType: IHash<TKey,TValue>.erase(TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(TKey)\n- uid: Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)\n  nameWithType: IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerBidirectionalIterator\n  nameWithType: ContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)\n  nameWithType: IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: find(ContainerBidirectionalIterator<TValue>,TKey)\n  nameWithType: IHash<TKey,TValue>.find(ContainerBidirectionalIterator<TValue>,TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.find(ContainerBidirectionalIterator<TValue>,TKey)\n- uid: Microsoft.VisualC.StlClr.IHash`2.hash_delegate\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: hash_delegate()\n  nameWithType: IHash<TKey,TValue>.hash_delegate()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.hash_delegate()\n- uid: Microsoft.VisualC.StlClr.UnaryDelegate{TKey,System.Int32}\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: UnaryDelegate<TKey,Int32>\n  nameWithType: UnaryDelegate<TKey,Int32>\n  fullName: Microsoft.VisualC.StlClr.UnaryDelegate<TKey,System.Int32>\n  spec.csharp:\n  - uid: Microsoft.VisualC.StlClr.UnaryDelegate`2\n    name: UnaryDelegate\n    nameWithType: UnaryDelegate\n    fullName: UnaryDelegate<TKey,System.Int32>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TKey\n    name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: insert(IEnumerable)\n  nameWithType: IHash<TKey,TValue>.insert(IEnumerable)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(IEnumerable)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: insert(IInputIterator<TValue>,IInputIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.insert(IInputIterator<TValue>,IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(IInputIterator<TValue>,IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)\n  nameWithType: IHash<TKey,TValue>.insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)\n- uid: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},System.Boolean}\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>\n  nameWithType: GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>\n  fullName: Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,System.Boolean>\n  spec.csharp:\n  - uid: Microsoft.VisualC.StlClr.GenericPair`2\n    name: GenericPair\n    nameWithType: GenericPair\n    fullName: GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,System.Boolean>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n    name: ContainerBidirectionalIterator\n    nameWithType: ContainerBidirectionalIterator\n    fullName: ContainerBidirectionalIterator<TValue>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TValue\n    name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: TValue\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)\n  nameWithType: IHash<TKey,TValue>.insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)\n- uid: Microsoft.VisualC.StlClr.IHash`2.key_comp\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: key_comp()\n  nameWithType: IHash<TKey,TValue>.key_comp()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.key_comp()\n- uid: Microsoft.VisualC.StlClr.BinaryDelegate{TKey,TKey,System.Boolean}\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: BinaryDelegate<TKey,TKey,Boolean>\n  nameWithType: BinaryDelegate<TKey,TKey,Boolean>\n  fullName: Microsoft.VisualC.StlClr.BinaryDelegate<TKey,TKey,System.Boolean>\n  spec.csharp:\n  - uid: Microsoft.VisualC.StlClr.BinaryDelegate`3\n    name: BinaryDelegate\n    nameWithType: BinaryDelegate\n    fullName: BinaryDelegate<TKey,TKey,System.Boolean>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TKey\n    name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TKey\n    name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.VisualC.StlClr.IHash`2.load_factor\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: load_factor()\n  nameWithType: IHash<TKey,TValue>.load_factor()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.load_factor()\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: lower_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  nameWithType: IHash<TKey,TValue>.lower_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.lower_bound(ContainerBidirectionalIterator<TValue>,TKey)\n- uid: Microsoft.VisualC.StlClr.IHash`2.max_load_factor\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: max_load_factor()\n  nameWithType: IHash<TKey,TValue>.max_load_factor()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.max_load_factor()\n- uid: Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: max_load_factor(Single)\n  nameWithType: IHash<TKey,TValue>.max_load_factor(Single)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.max_load_factor(Single)\n- uid: Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: rbegin(ReverseBidirectionalIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.rbegin(ReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rbegin(ReverseBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ReverseBidirectionalIterator<TValue>\n  nameWithType: ReverseBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: rehash(Int32)\n  nameWithType: IHash<TKey,TValue>.rehash(Int32)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rehash(Int32)\n- uid: Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: rend(ReverseBidirectionalIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.rend(ReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rend(ReverseBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.IHash`2.size\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: size()\n  nameWithType: IHash<TKey,TValue>.size()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.size()\n- uid: Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash`2)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: swap(IHash<TKey,TValue>)\n  nameWithType: IHash<TKey,TValue>.swap(IHash<TKey,TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.swap(IHash<TKey,TValue>)\n- uid: Microsoft.VisualC.StlClr.IHash`2\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: IHash<TKey,TValue>\n  nameWithType: IHash<TKey,TValue>\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>\n- uid: Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: upper_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  nameWithType: IHash<TKey,TValue>.upper_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.upper_bound(ContainerBidirectionalIterator<TValue>,TKey)\n- uid: Microsoft.VisualC.StlClr.IHash`2.value_comp\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: value_comp()\n  nameWithType: IHash<TKey,TValue>.value_comp()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.value_comp()\n- uid: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: BinaryDelegate<TValue,TValue,Boolean>\n  nameWithType: BinaryDelegate<TValue,TValue,Boolean>\n  fullName: Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,System.Boolean>\n  spec.csharp:\n  - uid: Microsoft.VisualC.StlClr.BinaryDelegate`3\n    name: BinaryDelegate\n    nameWithType: BinaryDelegate\n    fullName: BinaryDelegate<TValue,TValue,System.Boolean>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TValue\n    name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TValue\n    name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.VisualC.StlClr.IHash`2.begin*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: begin\n  nameWithType: IHash<TKey,TValue>.begin\n- uid: Microsoft.VisualC.StlClr.IHash`2.bucket_count*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: bucket_count\n  nameWithType: IHash<TKey,TValue>.bucket_count\n- uid: Microsoft.VisualC.StlClr.IHash`2.clear*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: clear\n  nameWithType: IHash<TKey,TValue>.clear\n- uid: Microsoft.VisualC.StlClr.IHash`2.count*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: count\n  nameWithType: IHash<TKey,TValue>.count\n- uid: Microsoft.VisualC.StlClr.IHash`2.empty*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: empty\n  nameWithType: IHash<TKey,TValue>.empty\n- uid: Microsoft.VisualC.StlClr.IHash`2.end*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: end\n  nameWithType: IHash<TKey,TValue>.end\n- uid: Microsoft.VisualC.StlClr.IHash`2.equal_range*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: equal_range\n  nameWithType: IHash<TKey,TValue>.equal_range\n- uid: Microsoft.VisualC.StlClr.IHash`2.erase*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: erase\n  nameWithType: IHash<TKey,TValue>.erase\n- uid: Microsoft.VisualC.StlClr.IHash`2.find*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: find\n  nameWithType: IHash<TKey,TValue>.find\n- uid: Microsoft.VisualC.StlClr.IHash`2.hash_delegate*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: hash_delegate\n  nameWithType: IHash<TKey,TValue>.hash_delegate\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: insert\n  nameWithType: IHash<TKey,TValue>.insert\n- uid: Microsoft.VisualC.StlClr.IHash`2.key_comp*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: key_comp\n  nameWithType: IHash<TKey,TValue>.key_comp\n- uid: Microsoft.VisualC.StlClr.IHash`2.load_factor*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: load_factor\n  nameWithType: IHash<TKey,TValue>.load_factor\n- uid: Microsoft.VisualC.StlClr.IHash`2.lower_bound*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: lower_bound\n  nameWithType: IHash<TKey,TValue>.lower_bound\n- uid: Microsoft.VisualC.StlClr.IHash`2.max_load_factor*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: max_load_factor\n  nameWithType: IHash<TKey,TValue>.max_load_factor\n- uid: Microsoft.VisualC.StlClr.IHash`2.rbegin*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: rbegin\n  nameWithType: IHash<TKey,TValue>.rbegin\n- uid: Microsoft.VisualC.StlClr.IHash`2.rehash*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: rehash\n  nameWithType: IHash<TKey,TValue>.rehash\n- uid: Microsoft.VisualC.StlClr.IHash`2.rend*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: rend\n  nameWithType: IHash<TKey,TValue>.rend\n- uid: Microsoft.VisualC.StlClr.IHash`2.size*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: size\n  nameWithType: IHash<TKey,TValue>.size\n- uid: Microsoft.VisualC.StlClr.IHash`2.swap*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: swap\n  nameWithType: IHash<TKey,TValue>.swap\n- uid: Microsoft.VisualC.StlClr.IHash`2.upper_bound*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: upper_bound\n  nameWithType: IHash<TKey,TValue>.upper_bound\n- uid: Microsoft.VisualC.StlClr.IHash`2.value_comp*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: value_comp\n  nameWithType: IHash<TKey,TValue>.value_comp\n"}