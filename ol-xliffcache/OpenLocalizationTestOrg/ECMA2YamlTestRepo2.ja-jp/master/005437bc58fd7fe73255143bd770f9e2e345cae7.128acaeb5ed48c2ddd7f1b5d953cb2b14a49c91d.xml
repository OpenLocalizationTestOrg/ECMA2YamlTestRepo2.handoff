{"nodes":[{"pos":[1240,1336],"content":"Stores an ordered pair of floating-point numbers, typically the width and height of a rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stores an ordered pair of floating-point numbers, typically the width and height of a rectangle.","pos":[0,96]}]},{"pos":[1348,1561],"content":"The unit for a SizeF structure depends on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object that is used to draw.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unit for a SizeF structure depends on the &lt;xref:System.Drawing.Graphics.PageUnit%2A&gt; and &lt;xref:System.Drawing.Graphics.PageScale%2A&gt; settings for the &lt;xref:System.Drawing.Graphics&gt; object that is used to draw.","pos":[0,213],"source":"The unit for a SizeF structure depends on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object that is used to draw."}]},{"pos":[3092,3250],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure from the specified <bpt id=\"p2\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.SizeF\"></xref> structure from the specified <xref href=\"System.Drawing.PointF\"></xref> structure."},{"pos":[3397,3536],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure from which to initialize this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.PointF\"></xref> structure from which to initialize this <xref href=\"System.Drawing.SizeF\"></xref> structure."},{"pos":[3954,4120],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure from the specified existing <bpt id=\"p2\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.SizeF\"></xref> structure from the specified existing <xref href=\"System.Drawing.SizeF\"></xref> structure."},{"pos":[4269,4406],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure from which to create the new <bpt id=\"p2\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.SizeF\"></xref> structure from which to create the new <xref href=\"System.Drawing.SizeF\"></xref> structure."},{"pos":[4862,4978],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure from the specified dimensions.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.SizeF\"></xref> structure from the specified dimensions."},{"pos":[6060,6143],"content":"The width component of the new <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The width component of the new <xref href=\"System.Drawing.SizeF\"></xref> structure."},{"pos":[6206,6290],"content":"The height component of the new <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The height component of the new <xref href=\"System.Drawing.SizeF\"></xref> structure."},{"pos":[6751,6923],"content":"Adds the width and height of one <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to the width and height of another <bpt id=\"p2\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Adds the width and height of one <xref href=\"System.Drawing.SizeF\"></xref> structure to the width and height of another <xref href=\"System.Drawing.SizeF\"></xref> structure."},{"pos":[7122,7191],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to add.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.Drawing.SizeF\"></xref> structure to add."},{"pos":[7258,7328],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to add.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.Drawing.SizeF\"></xref> structure to add."},{"pos":[7393,7492],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that is the result of the addition operation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.SizeF\"></xref> structure that is the result of the addition operation."},{"pos":[7835,7991],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that has a &lt;xref:System.Drawing.SizeF.Height<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.Drawing.SizeF.Width<ept id=\"p2\">*</ept>&gt; value of 0.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Drawing.SizeF\"></xref> structure that has a <xref:System.Drawing.SizeF.Height*> and <xref:System.Drawing.SizeF.Width*> value of 0."},{"pos":[8130,8142],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8507,8691],"content":"Tests to see whether the specified object is a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure with the same dimensions as this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Tests to see whether the specified object is a <xref href=\"System.Drawing.SizeF\"></xref> structure with the same dimensions as this <xref href=\"System.Drawing.SizeF\"></xref> structure."},{"pos":[8832,8865],"content":"The <xref:System.Object> to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to test.","pos":[0,33],"source":"The <xref:System.Object> to test."}]},{"pos":[8924,9231],"content":"This method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a <bpt id=\"p3\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and has the same width and height as this <bpt id=\"p4\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is a <xref href=\"System.Drawing.SizeF\"></xref> and has the same width and height as this <xref href=\"System.Drawing.SizeF\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9614,9694],"content":"Returns a hash code for this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Returns a hash code for this <xref href=\"System.Drawing.Size\"></xref> structure."},{"pos":[9829,9934],"content":"An integer value that specifies a hash value for this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"An integer value that specifies a hash value for this <xref href=\"System.Drawing.Size\"></xref> structure."},{"pos":[10293,10389],"content":"Gets or sets the vertical component of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Gets or sets the vertical component of this <xref href=\"System.Drawing.SizeF\"></xref> structure."},{"pos":[10401,10684],"content":"The unit for the Height and <xref:System.Drawing.SizeF.Width%2A> of the <xref:System.Drawing.SizeF> structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object used to draw.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unit for the Height and &lt;xref:System.Drawing.SizeF.Width%2A&gt; of the &lt;xref:System.Drawing.SizeF&gt; structure depend on the &lt;xref:System.Drawing.Graphics.PageUnit%2A&gt; and &lt;xref:System.Drawing.Graphics.PageScale%2A&gt; settings for the &lt;xref:System.Drawing.Graphics&gt; object used to draw.","pos":[0,283],"source":"The unit for the Height and <xref:System.Drawing.SizeF.Width%2A> of the <xref:System.Drawing.SizeF> structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object used to draw."}]},{"pos":[10799,10912],"content":"The vertical component of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure, typically measured in pixels.","needQuote":true,"needEscape":true,"source":"The vertical component of this <xref href=\"System.Drawing.SizeF\"></xref> structure, typically measured in pixels."},{"pos":[11271,11390],"content":"Gets a value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure has zero width and height.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this <xref href=\"System.Drawing.SizeF\"></xref> structure has zero width and height."},{"pos":[11501,11757],"content":"This property returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure has both a width and height of zero; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This property returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when this <xref href=\"System.Drawing.SizeF\"></xref> structure has both a width and height of zero; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12262,12434],"content":"Adds the width and height of one <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to the width and height of another <bpt id=\"p2\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Adds the width and height of one <xref href=\"System.Drawing.SizeF\"></xref> structure to the width and height of another <xref href=\"System.Drawing.SizeF\"></xref> structure."},{"pos":[13546,13615],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to add.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.Drawing.SizeF\"></xref> structure to add."},{"pos":[13682,13752],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to add.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.Drawing.SizeF\"></xref> structure to add."},{"pos":[13817,13915],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that is the result of the addition operation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Size\"></xref> structure that is the result of the addition operation."},{"pos":[14424,14505],"content":"Tests whether two <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures are equal.","needQuote":true,"needEscape":true,"source":"Tests whether two <xref href=\"System.Drawing.SizeF\"></xref> structures are equal."},{"pos":[14696,14794],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure on the left side of the equality operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.SizeF\"></xref> structure on the left side of the equality operator."},{"pos":[14861,14955],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure on the right of the equality operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.SizeF\"></xref> structure on the right of the equality operator."},{"pos":[15014,15241],"content":"This operator returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">sz1</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">sz2</ph><ept id=\"p3\">&lt;/code&gt;</ept> have equal width and height; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This operator returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>sz1</code> and <code>sz2</code> have equal width and height; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15912,15924],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15990,16002],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16521,16606],"content":"Tests whether two <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures are different.","needQuote":true,"needEscape":true,"source":"Tests whether two <xref href=\"System.Drawing.SizeF\"></xref> structures are different."},{"pos":[16799,16894],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure on the left of the inequality operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.SizeF\"></xref> structure on the left of the inequality operator."},{"pos":[16961,17057],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure on the right of the inequality operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.SizeF\"></xref> structure on the right of the inequality operator."},{"pos":[17116,17388],"content":"This operator returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">sz1</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">sz2</ph><ept id=\"p3\">&lt;/code&gt;</ept> differ either in width or height; <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> if <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph3\">sz1</ph><ept id=\"p5\">&lt;/code&gt;</ept> and <bpt id=\"p6\">&lt;code&gt;</bpt><ph id=\"ph4\">sz2</ph><ept id=\"p6\">&lt;/code&gt;</ept> are equal.","needQuote":true,"needEscape":true,"source":"This operator returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>sz1</code> and <code>sz2</code> differ either in width or height; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if <code>sz1</code> and <code>sz2</code> are equal."},{"pos":[17914,18093],"content":"Subtracts the width and height of one <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure from the width and height of another <bpt id=\"p2\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Subtracts the width and height of one <xref href=\"System.Drawing.SizeF\"></xref> structure from the width and height of another <xref href=\"System.Drawing.SizeF\"></xref> structure."},{"pos":[18303,18404],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure on the left side of the subtraction operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.SizeF\"></xref> structure on the left side of the subtraction operator."},{"pos":[18471,18573],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure on the right side of the subtraction operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.SizeF\"></xref> structure on the right side of the subtraction operator."},{"pos":[18638,18730],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is the result of the subtraction operation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.SizeF\"></xref> that is the result of the subtraction operation."},{"pos":[19225,19404],"content":"Subtracts the width and height of one <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure from the width and height of another <bpt id=\"p2\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Subtracts the width and height of one <xref href=\"System.Drawing.SizeF\"></xref> structure from the width and height of another <xref href=\"System.Drawing.SizeF\"></xref> structure."},{"pos":[19608,19709],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure on the left side of the subtraction operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.SizeF\"></xref> structure on the left side of the subtraction operator."},{"pos":[19776,19878],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure on the right side of the subtraction operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.SizeF\"></xref> structure on the right side of the subtraction operator."},{"pos":[19943,20043],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that is a result of the subtraction operation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.SizeF\"></xref> structure that is a result of the subtraction operation."},{"pos":[20413,20534],"content":"Converts a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to a <bpt id=\"p2\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Converts a <xref href=\"System.Drawing.SizeF\"></xref> structure to a <xref href=\"System.Drawing.PointF\"></xref> structure."},{"pos":[20684,20747],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Drawing.PointF\"></xref> structure."},{"pos":[21107,21226],"content":"Converts a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to a <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Converts a <xref href=\"System.Drawing.SizeF\"></xref> structure to a <xref href=\"System.Drawing.Size\"></xref> structure."},{"pos":[21238,21428],"content":"The <xref:System.Drawing.SizeF> structure is converted to a <xref:System.Drawing.Size> structure by truncating the values of the <xref:System.Drawing.SizeF> to the next lower integer values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Drawing.SizeF&gt; structure is converted to a &lt;xref:System.Drawing.Size&gt; structure by truncating the values of the &lt;xref:System.Drawing.SizeF&gt; to the next lower integer values.","pos":[0,190],"source":"The <xref:System.Drawing.SizeF> structure is converted to a <xref:System.Drawing.Size> structure by truncating the values of the <xref:System.Drawing.SizeF> to the next lower integer values."}]},{"pos":[21572,21633],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Drawing.Size\"></xref> structure."},{"pos":[22001,22106],"content":"Creates a human-readable string that represents this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Creates a human-readable string that represents this <xref href=\"System.Drawing.SizeF\"></xref> structure."},{"pos":[22242,22324],"content":"A string that represents this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A string that represents this <xref href=\"System.Drawing.SizeF\"></xref> structure."},{"pos":[22675,22773],"content":"Gets or sets the horizontal component of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Gets or sets the horizontal component of this <xref href=\"System.Drawing.SizeF\"></xref> structure."},{"pos":[22785,23076],"content":"The unit for the <xref:System.Drawing.SizeF.Height%2A> and Width of the <xref:System.Drawing.SizeF> structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object that is used to draw.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unit for the &lt;xref:System.Drawing.SizeF.Height%2A&gt; and Width of the &lt;xref:System.Drawing.SizeF&gt; structure depend on the &lt;xref:System.Drawing.Graphics.PageUnit%2A&gt; and &lt;xref:System.Drawing.Graphics.PageScale%2A&gt; settings for the &lt;xref:System.Drawing.Graphics&gt; object that is used to draw.","pos":[0,291],"source":"The unit for the <xref:System.Drawing.SizeF.Height%2A> and Width of the <xref:System.Drawing.SizeF> structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object that is used to draw."}]},{"pos":[23190,23305],"content":"The horizontal component of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure, typically measured in pixels.","needQuote":true,"needEscape":true,"source":"The horizontal component of this <xref href=\"System.Drawing.SizeF\"></xref> structure, typically measured in pixels."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.SizeF\n  id: SizeF\n  children:\n  - System.Drawing.SizeF.#ctor(System.Drawing.PointF)\n  - System.Drawing.SizeF.#ctor(System.Drawing.SizeF)\n  - System.Drawing.SizeF.#ctor(System.Single,System.Single)\n  - System.Drawing.SizeF.Add(System.Drawing.SizeF,System.Drawing.SizeF)\n  - System.Drawing.SizeF.Empty\n  - System.Drawing.SizeF.Equals(System.Object)\n  - System.Drawing.SizeF.GetHashCode\n  - System.Drawing.SizeF.Height\n  - System.Drawing.SizeF.IsEmpty\n  - System.Drawing.SizeF.op_Addition(System.Drawing.SizeF,System.Drawing.SizeF)\n  - System.Drawing.SizeF.op_Equality(System.Drawing.SizeF,System.Drawing.SizeF)\n  - System.Drawing.SizeF.op_Explicit(System.Drawing.SizeF to System.Drawing.PointF)\n  - System.Drawing.SizeF.op_Inequality(System.Drawing.SizeF,System.Drawing.SizeF)\n  - System.Drawing.SizeF.op_Subtraction(System.Drawing.SizeF,System.Drawing.SizeF)\n  - System.Drawing.SizeF.Subtract(System.Drawing.SizeF,System.Drawing.SizeF)\n  - System.Drawing.SizeF.ToPointF\n  - System.Drawing.SizeF.ToSize\n  - System.Drawing.SizeF.ToString\n  - System.Drawing.SizeF.Width\n  langs:\n  - csharp\n  name: SizeF\n  nameWithType: SizeF\n  fullName: System.Drawing.SizeF\n  type: Struct\n  summary: Stores an ordered pair of floating-point numbers, typically the width and height of a rectangle.\n  remarks: The unit for a SizeF structure depends on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object that is used to draw.\n  example:\n  - \"The following code example adds a shadow to a <xref:System.Windows.Forms.ListBox> by using the following members:  \\n  \\n-   <xref:System.Drawing.SizeF.op_Addition%2A>  \\n  \\n-   <xref:System.Drawing.PointF.op_Addition%2A?displayProperty=fullName>  \\n  \\n-   <xref:System.Drawing.SolidBrush>  \\n  \\n This example is designed to be used with a Windows Form. To run this example, paste this code into a form and call the `AddShadow` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event. Verify that the form contains a <xref:System.Windows.Forms.ListBox> named `listBox1`.  \\n  \\n [!code-cs[System.Drawing.MiscExamples#3](~/add/codesnippet/csharp/t-system.drawing.sizef_1.cs)]\\n [!code-cpp[System.Drawing.MiscExamples#3](~/add/codesnippet/cpp/t-system.drawing.sizef_1.cpp)]\\n [!code-vb[System.Drawing.MiscExamples#3](~/add/codesnippet/visualbasic/t-system.drawing.sizef_1.vb)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Drawing.SizeFConverter))]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct SizeF\n  inheritance:\n  - System.ValueType\n  implements: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.#ctor(System.Drawing.PointF)\n  id: '#ctor(System.Drawing.PointF)'\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: SizeF(PointF)\n  nameWithType: SizeF.SizeF(PointF)\n  fullName: System.Drawing.SizeF.SizeF(PointF)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.SizeF\"></xref> structure from the specified <xref href=\"System.Drawing.PointF\"></xref> structure.\n  syntax:\n    content: public SizeF (System.Drawing.PointF pt);\n    parameters:\n    - id: pt\n      type: System.Drawing.PointF\n      description: The <xref href=\"System.Drawing.PointF\"></xref> structure from which to initialize this <xref href=\"System.Drawing.SizeF\"></xref> structure.\n  overload: System.Drawing.SizeF.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.#ctor(System.Drawing.SizeF)\n  id: '#ctor(System.Drawing.SizeF)'\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: SizeF(SizeF)\n  nameWithType: SizeF.SizeF(SizeF)\n  fullName: System.Drawing.SizeF.SizeF(SizeF)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.SizeF\"></xref> structure from the specified existing <xref href=\"System.Drawing.SizeF\"></xref> structure.\n  syntax:\n    content: public SizeF (System.Drawing.SizeF size);\n    parameters:\n    - id: size\n      type: System.Drawing.SizeF\n      description: The <xref href=\"System.Drawing.SizeF\"></xref> structure from which to create the new <xref href=\"System.Drawing.SizeF\"></xref> structure.\n  overload: System.Drawing.SizeF.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.#ctor(System.Single,System.Single)\n  id: '#ctor(System.Single,System.Single)'\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: SizeF(Single,Single)\n  nameWithType: SizeF.SizeF(Single,Single)\n  fullName: System.Drawing.SizeF.SizeF(Single,Single)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.SizeF\"></xref> structure from the specified dimensions.\n  remarks: ''\n  example:\n  - \"The following code example adds a shadow to a <xref:System.Windows.Forms.ListBox> by using the following members:  \\n  \\n-   <xref:System.Drawing.SizeF.op_Addition%2A>  \\n  \\n-   <xref:System.Drawing.PointF.op_Addition%2A?displayProperty=fullName>  \\n  \\n-   <xref:System.Drawing.SolidBrush>  \\n  \\n This example is designed to be used with a Windows Form. To run this example, paste this code into a form and call the `AddShadow` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event. Verify that the form contains a <xref:System.Windows.Forms.ListBox> named `listBox1`.  \\n  \\n [!code-cs[System.Drawing.MiscExamples#3](~/add/codesnippet/csharp/m-system.drawing.sizef.s_1.cs)]\\n [!code-cpp[System.Drawing.MiscExamples#3](~/add/codesnippet/cpp/m-system.drawing.sizef.s_1.cpp)]\\n [!code-vb[System.Drawing.MiscExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.sizef.s_1.vb)]\"\n  syntax:\n    content: public SizeF (float width, float height);\n    parameters:\n    - id: width\n      type: System.Single\n      description: The width component of the new <xref href=\"System.Drawing.SizeF\"></xref> structure.\n    - id: height\n      type: System.Single\n      description: The height component of the new <xref href=\"System.Drawing.SizeF\"></xref> structure.\n  overload: System.Drawing.SizeF.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.Add(System.Drawing.SizeF,System.Drawing.SizeF)\n  id: Add(System.Drawing.SizeF,System.Drawing.SizeF)\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: Add(SizeF,SizeF)\n  nameWithType: SizeF.Add(SizeF,SizeF)\n  fullName: System.Drawing.SizeF.Add(SizeF,SizeF)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Adds the width and height of one <xref href=\"System.Drawing.SizeF\"></xref> structure to the width and height of another <xref href=\"System.Drawing.SizeF\"></xref> structure.\n  syntax:\n    content: public static System.Drawing.SizeF Add (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);\n    parameters:\n    - id: sz1\n      type: System.Drawing.SizeF\n      description: The first <xref href=\"System.Drawing.SizeF\"></xref> structure to add.\n    - id: sz2\n      type: System.Drawing.SizeF\n      description: The second <xref href=\"System.Drawing.SizeF\"></xref> structure to add.\n    return:\n      type: System.Drawing.SizeF\n      description: A <xref href=\"System.Drawing.SizeF\"></xref> structure that is the result of the addition operation.\n  overload: System.Drawing.SizeF.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.Empty\n  id: Empty\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: SizeF.Empty\n  fullName: System.Drawing.SizeF.Empty\n  type: Field\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets a <xref href=\"System.Drawing.SizeF\"></xref> structure that has a <xref:System.Drawing.SizeF.Height*> and <xref:System.Drawing.SizeF.Width*> value of 0.\n  syntax:\n    content: public static readonly System.Drawing.SizeF Empty;\n    return:\n      type: System.Drawing.SizeF\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: SizeF.Equals(Object)\n  fullName: System.Drawing.SizeF.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Tests to see whether the specified object is a <xref href=\"System.Drawing.SizeF\"></xref> structure with the same dimensions as this <xref href=\"System.Drawing.SizeF\"></xref> structure.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref:System.Object> to test.\n    return:\n      type: System.Boolean\n      description: This method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is a <xref href=\"System.Drawing.SizeF\"></xref> and has the same width and height as this <xref href=\"System.Drawing.SizeF\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.SizeF.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.GetHashCode\n  id: GetHashCode\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: SizeF.GetHashCode()\n  fullName: System.Drawing.SizeF.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns a hash code for this <xref href=\"System.Drawing.Size\"></xref> structure.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An integer value that specifies a hash value for this <xref href=\"System.Drawing.Size\"></xref> structure.\n  overload: System.Drawing.SizeF.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.Height\n  id: Height\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: Height\n  nameWithType: SizeF.Height\n  fullName: System.Drawing.SizeF.Height\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets the vertical component of this <xref href=\"System.Drawing.SizeF\"></xref> structure.\n  remarks: The unit for the Height and <xref:System.Drawing.SizeF.Width%2A> of the <xref:System.Drawing.SizeF> structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object used to draw.\n  syntax:\n    content: public float Height { get; set; }\n    return:\n      type: System.Single\n      description: The vertical component of this <xref href=\"System.Drawing.SizeF\"></xref> structure, typically measured in pixels.\n  overload: System.Drawing.SizeF.Height*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.IsEmpty\n  id: IsEmpty\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: IsEmpty\n  nameWithType: SizeF.IsEmpty\n  fullName: System.Drawing.SizeF.IsEmpty\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets a value that indicates whether this <xref href=\"System.Drawing.SizeF\"></xref> structure has zero width and height.\n  syntax:\n    content: public bool IsEmpty { get; }\n    return:\n      type: System.Boolean\n      description: This property returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when this <xref href=\"System.Drawing.SizeF\"></xref> structure has both a width and height of zero; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.SizeF.IsEmpty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.op_Addition(System.Drawing.SizeF,System.Drawing.SizeF)\n  id: op_Addition(System.Drawing.SizeF,System.Drawing.SizeF)\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: op_Addition(SizeF,SizeF)\n  nameWithType: SizeF.op_Addition(SizeF,SizeF)\n  fullName: System.Drawing.SizeF.op_Addition(SizeF,SizeF)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Adds the width and height of one <xref href=\"System.Drawing.SizeF\"></xref> structure to the width and height of another <xref href=\"System.Drawing.SizeF\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following code example adds a shadow to a <xref:System.Windows.Forms.ListBox> by using the following members:  \\n  \\n-   Addition  \\n  \\n-   <xref:System.Drawing.PointF.op_Addition%2A?displayProperty=fullName>  \\n  \\n-   <xref:System.Drawing.SolidBrush>  \\n  \\n This example is designed to be used with a Windows Form. To run this example, paste this code into a form and call the `AddShadow` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event. Verify that the form contains a <xref:System.Windows.Forms.ListBox> named `listBox1`.  \\n  \\n [!code-cs[System.Drawing.MiscExamples#3](~/add/codesnippet/csharp/m-system.drawing.sizef.o_1.cs)]\\n [!code-cpp[System.Drawing.MiscExamples#3](~/add/codesnippet/cpp/m-system.drawing.sizef.o_1.cpp)]\\n [!code-vb[System.Drawing.MiscExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.sizef.o_1.vb)]\"\n  syntax:\n    content: public static System.Drawing.SizeF op_Addition (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);\n    parameters:\n    - id: sz1\n      type: System.Drawing.SizeF\n      description: The first <xref href=\"System.Drawing.SizeF\"></xref> structure to add.\n    - id: sz2\n      type: System.Drawing.SizeF\n      description: The second <xref href=\"System.Drawing.SizeF\"></xref> structure to add.\n    return:\n      type: System.Drawing.SizeF\n      description: A <xref href=\"System.Drawing.Size\"></xref> structure that is the result of the addition operation.\n  overload: System.Drawing.SizeF.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.op_Equality(System.Drawing.SizeF,System.Drawing.SizeF)\n  id: op_Equality(System.Drawing.SizeF,System.Drawing.SizeF)\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: op_Equality(SizeF,SizeF)\n  nameWithType: SizeF.op_Equality(SizeF,SizeF)\n  fullName: System.Drawing.SizeF.op_Equality(SizeF,SizeF)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Tests whether two <xref href=\"System.Drawing.SizeF\"></xref> structures are equal.\n  syntax:\n    content: public static bool op_Equality (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);\n    parameters:\n    - id: sz1\n      type: System.Drawing.SizeF\n      description: The <xref href=\"System.Drawing.SizeF\"></xref> structure on the left side of the equality operator.\n    - id: sz2\n      type: System.Drawing.SizeF\n      description: The <xref href=\"System.Drawing.SizeF\"></xref> structure on the right of the equality operator.\n    return:\n      type: System.Boolean\n      description: This operator returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>sz1</code> and <code>sz2</code> have equal width and height; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.SizeF.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.op_Explicit(System.Drawing.SizeF to System.Drawing.PointF)\n  id: op_Explicit(System.Drawing.SizeF to System.Drawing.PointF)\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: op_Explicit(SizeF)\n  nameWithType: SizeF.op_Explicit(SizeF)\n  fullName: System.Drawing.SizeF.op_Explicit(SizeF)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  syntax:\n    content: public static System.Drawing.PointF op_Explicit (System.Drawing.SizeF size);\n    parameters:\n    - id: size\n      type: System.Drawing.SizeF\n      description: To be added.\n    return:\n      type: System.Drawing.PointF\n      description: To be added.\n  overload: System.Drawing.SizeF.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.op_Inequality(System.Drawing.SizeF,System.Drawing.SizeF)\n  id: op_Inequality(System.Drawing.SizeF,System.Drawing.SizeF)\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: op_Inequality(SizeF,SizeF)\n  nameWithType: SizeF.op_Inequality(SizeF,SizeF)\n  fullName: System.Drawing.SizeF.op_Inequality(SizeF,SizeF)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Tests whether two <xref href=\"System.Drawing.SizeF\"></xref> structures are different.\n  syntax:\n    content: public static bool op_Inequality (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);\n    parameters:\n    - id: sz1\n      type: System.Drawing.SizeF\n      description: The <xref href=\"System.Drawing.SizeF\"></xref> structure on the left of the inequality operator.\n    - id: sz2\n      type: System.Drawing.SizeF\n      description: The <xref href=\"System.Drawing.SizeF\"></xref> structure on the right of the inequality operator.\n    return:\n      type: System.Boolean\n      description: This operator returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>sz1</code> and <code>sz2</code> differ either in width or height; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if <code>sz1</code> and <code>sz2</code> are equal.\n  overload: System.Drawing.SizeF.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.op_Subtraction(System.Drawing.SizeF,System.Drawing.SizeF)\n  id: op_Subtraction(System.Drawing.SizeF,System.Drawing.SizeF)\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: op_Subtraction(SizeF,SizeF)\n  nameWithType: SizeF.op_Subtraction(SizeF,SizeF)\n  fullName: System.Drawing.SizeF.op_Subtraction(SizeF,SizeF)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Subtracts the width and height of one <xref href=\"System.Drawing.SizeF\"></xref> structure from the width and height of another <xref href=\"System.Drawing.SizeF\"></xref> structure.\n  syntax:\n    content: public static System.Drawing.SizeF op_Subtraction (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);\n    parameters:\n    - id: sz1\n      type: System.Drawing.SizeF\n      description: The <xref href=\"System.Drawing.SizeF\"></xref> structure on the left side of the subtraction operator.\n    - id: sz2\n      type: System.Drawing.SizeF\n      description: The <xref href=\"System.Drawing.SizeF\"></xref> structure on the right side of the subtraction operator.\n    return:\n      type: System.Drawing.SizeF\n      description: A <xref href=\"System.Drawing.SizeF\"></xref> that is the result of the subtraction operation.\n  overload: System.Drawing.SizeF.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.Subtract(System.Drawing.SizeF,System.Drawing.SizeF)\n  id: Subtract(System.Drawing.SizeF,System.Drawing.SizeF)\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: Subtract(SizeF,SizeF)\n  nameWithType: SizeF.Subtract(SizeF,SizeF)\n  fullName: System.Drawing.SizeF.Subtract(SizeF,SizeF)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Subtracts the width and height of one <xref href=\"System.Drawing.SizeF\"></xref> structure from the width and height of another <xref href=\"System.Drawing.SizeF\"></xref> structure.\n  syntax:\n    content: public static System.Drawing.SizeF Subtract (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);\n    parameters:\n    - id: sz1\n      type: System.Drawing.SizeF\n      description: The <xref href=\"System.Drawing.SizeF\"></xref> structure on the left side of the subtraction operator.\n    - id: sz2\n      type: System.Drawing.SizeF\n      description: The <xref href=\"System.Drawing.SizeF\"></xref> structure on the right side of the subtraction operator.\n    return:\n      type: System.Drawing.SizeF\n      description: A <xref href=\"System.Drawing.SizeF\"></xref> structure that is a result of the subtraction operation.\n  overload: System.Drawing.SizeF.Subtract*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.ToPointF\n  id: ToPointF\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: ToPointF()\n  nameWithType: SizeF.ToPointF()\n  fullName: System.Drawing.SizeF.ToPointF()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts a <xref href=\"System.Drawing.SizeF\"></xref> structure to a <xref href=\"System.Drawing.PointF\"></xref> structure.\n  syntax:\n    content: public System.Drawing.PointF ToPointF ();\n    parameters: []\n    return:\n      type: System.Drawing.PointF\n      description: Returns a <xref href=\"System.Drawing.PointF\"></xref> structure.\n  overload: System.Drawing.SizeF.ToPointF*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.ToSize\n  id: ToSize\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: ToSize()\n  nameWithType: SizeF.ToSize()\n  fullName: System.Drawing.SizeF.ToSize()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts a <xref href=\"System.Drawing.SizeF\"></xref> structure to a <xref href=\"System.Drawing.Size\"></xref> structure.\n  remarks: The <xref:System.Drawing.SizeF> structure is converted to a <xref:System.Drawing.Size> structure by truncating the values of the <xref:System.Drawing.SizeF> to the next lower integer values.\n  syntax:\n    content: public System.Drawing.Size ToSize ();\n    parameters: []\n    return:\n      type: System.Drawing.Size\n      description: Returns a <xref href=\"System.Drawing.Size\"></xref> structure.\n  overload: System.Drawing.SizeF.ToSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.ToString\n  id: ToString\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: SizeF.ToString()\n  fullName: System.Drawing.SizeF.ToString()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates a human-readable string that represents this <xref href=\"System.Drawing.SizeF\"></xref> structure.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents this <xref href=\"System.Drawing.SizeF\"></xref> structure.\n  overload: System.Drawing.SizeF.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeF.Width\n  id: Width\n  parent: System.Drawing.SizeF\n  langs:\n  - csharp\n  name: Width\n  nameWithType: SizeF.Width\n  fullName: System.Drawing.SizeF.Width\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets the horizontal component of this <xref href=\"System.Drawing.SizeF\"></xref> structure.\n  remarks: The unit for the <xref:System.Drawing.SizeF.Height%2A> and Width of the <xref:System.Drawing.SizeF> structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object that is used to draw.\n  syntax:\n    content: public float Width { get; set; }\n    return:\n      type: System.Single\n      description: The horizontal component of this <xref href=\"System.Drawing.SizeF\"></xref> structure, typically measured in pixels.\n  overload: System.Drawing.SizeF.Width*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Drawing.SizeF.#ctor(System.Drawing.PointF)\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: SizeF(PointF)\n  nameWithType: SizeF.SizeF(PointF)\n  fullName: System.Drawing.SizeF.SizeF(PointF)\n- uid: System.Drawing.PointF\n  parent: System.Drawing\n  isExternal: false\n  name: PointF\n  nameWithType: PointF\n  fullName: System.Drawing.PointF\n- uid: System.Drawing.SizeF.#ctor(System.Drawing.SizeF)\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: SizeF(SizeF)\n  nameWithType: SizeF.SizeF(SizeF)\n  fullName: System.Drawing.SizeF.SizeF(SizeF)\n- uid: System.Drawing.SizeF\n  parent: System.Drawing\n  isExternal: false\n  name: SizeF\n  nameWithType: SizeF\n  fullName: System.Drawing.SizeF\n- uid: System.Drawing.SizeF.#ctor(System.Single,System.Single)\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: SizeF(Single,Single)\n  nameWithType: SizeF.SizeF(Single,Single)\n  fullName: System.Drawing.SizeF.SizeF(Single,Single)\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Drawing.SizeF.Add(System.Drawing.SizeF,System.Drawing.SizeF)\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: Add(SizeF,SizeF)\n  nameWithType: SizeF.Add(SizeF,SizeF)\n  fullName: System.Drawing.SizeF.Add(SizeF,SizeF)\n- uid: System.Drawing.SizeF.Empty\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: Empty\n  nameWithType: SizeF.Empty\n  fullName: System.Drawing.SizeF.Empty\n- uid: System.Drawing.SizeF.Equals(System.Object)\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: SizeF.Equals(Object)\n  fullName: System.Drawing.SizeF.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Drawing.SizeF.GetHashCode\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: SizeF.GetHashCode()\n  fullName: System.Drawing.SizeF.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Drawing.SizeF.Height\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: Height\n  nameWithType: SizeF.Height\n  fullName: System.Drawing.SizeF.Height\n- uid: System.Drawing.SizeF.IsEmpty\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: IsEmpty\n  nameWithType: SizeF.IsEmpty\n  fullName: System.Drawing.SizeF.IsEmpty\n- uid: System.Drawing.SizeF.op_Addition(System.Drawing.SizeF,System.Drawing.SizeF)\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: op_Addition(SizeF,SizeF)\n  nameWithType: SizeF.op_Addition(SizeF,SizeF)\n  fullName: System.Drawing.SizeF.op_Addition(SizeF,SizeF)\n- uid: System.Drawing.SizeF.op_Equality(System.Drawing.SizeF,System.Drawing.SizeF)\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: op_Equality(SizeF,SizeF)\n  nameWithType: SizeF.op_Equality(SizeF,SizeF)\n  fullName: System.Drawing.SizeF.op_Equality(SizeF,SizeF)\n- uid: System.Drawing.SizeF.op_Explicit(System.Drawing.SizeF to System.Drawing.PointF)\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: op_Explicit(SizeF)\n  nameWithType: SizeF.op_Explicit(SizeF)\n  fullName: System.Drawing.SizeF.op_Explicit(SizeF)\n- uid: System.Drawing.SizeF.op_Inequality(System.Drawing.SizeF,System.Drawing.SizeF)\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: op_Inequality(SizeF,SizeF)\n  nameWithType: SizeF.op_Inequality(SizeF,SizeF)\n  fullName: System.Drawing.SizeF.op_Inequality(SizeF,SizeF)\n- uid: System.Drawing.SizeF.op_Subtraction(System.Drawing.SizeF,System.Drawing.SizeF)\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: op_Subtraction(SizeF,SizeF)\n  nameWithType: SizeF.op_Subtraction(SizeF,SizeF)\n  fullName: System.Drawing.SizeF.op_Subtraction(SizeF,SizeF)\n- uid: System.Drawing.SizeF.Subtract(System.Drawing.SizeF,System.Drawing.SizeF)\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: Subtract(SizeF,SizeF)\n  nameWithType: SizeF.Subtract(SizeF,SizeF)\n  fullName: System.Drawing.SizeF.Subtract(SizeF,SizeF)\n- uid: System.Drawing.SizeF.ToPointF\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: ToPointF()\n  nameWithType: SizeF.ToPointF()\n  fullName: System.Drawing.SizeF.ToPointF()\n- uid: System.Drawing.SizeF.ToSize\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: ToSize()\n  nameWithType: SizeF.ToSize()\n  fullName: System.Drawing.SizeF.ToSize()\n- uid: System.Drawing.Size\n  parent: System.Drawing\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Drawing.Size\n- uid: System.Drawing.SizeF.ToString\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: ToString()\n  nameWithType: SizeF.ToString()\n  fullName: System.Drawing.SizeF.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Drawing.SizeF.Width\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: Width\n  nameWithType: SizeF.Width\n  fullName: System.Drawing.SizeF.Width\n- uid: System.Drawing.SizeF.#ctor*\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: SizeF\n  nameWithType: SizeF.SizeF\n- uid: System.Drawing.SizeF.Add*\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: Add\n  nameWithType: SizeF.Add\n- uid: System.Drawing.SizeF.Equals*\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: Equals\n  nameWithType: SizeF.Equals\n- uid: System.Drawing.SizeF.GetHashCode*\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: GetHashCode\n  nameWithType: SizeF.GetHashCode\n- uid: System.Drawing.SizeF.Height*\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: Height\n  nameWithType: SizeF.Height\n- uid: System.Drawing.SizeF.IsEmpty*\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: IsEmpty\n  nameWithType: SizeF.IsEmpty\n- uid: System.Drawing.SizeF.op_Addition*\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: op_Addition\n  nameWithType: SizeF.op_Addition\n- uid: System.Drawing.SizeF.op_Equality*\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: op_Equality\n  nameWithType: SizeF.op_Equality\n- uid: System.Drawing.SizeF.op_Explicit*\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: op_Explicit\n  nameWithType: SizeF.op_Explicit\n- uid: System.Drawing.SizeF.op_Inequality*\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: op_Inequality\n  nameWithType: SizeF.op_Inequality\n- uid: System.Drawing.SizeF.op_Subtraction*\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: SizeF.op_Subtraction\n- uid: System.Drawing.SizeF.Subtract*\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: Subtract\n  nameWithType: SizeF.Subtract\n- uid: System.Drawing.SizeF.ToPointF*\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: ToPointF\n  nameWithType: SizeF.ToPointF\n- uid: System.Drawing.SizeF.ToSize*\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: ToSize\n  nameWithType: SizeF.ToSize\n- uid: System.Drawing.SizeF.ToString*\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: ToString\n  nameWithType: SizeF.ToString\n- uid: System.Drawing.SizeF.Width*\n  parent: System.Drawing.SizeF\n  isExternal: false\n  name: Width\n  nameWithType: SizeF.Width\n"}