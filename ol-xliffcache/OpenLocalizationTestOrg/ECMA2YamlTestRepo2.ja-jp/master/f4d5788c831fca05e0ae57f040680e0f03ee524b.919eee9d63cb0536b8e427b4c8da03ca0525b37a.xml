{"nodes":[{"pos":[1513,1572],"content":"Represents the criteria to use when searching for services.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the criteria to use when searching for services.","pos":[0,59]}]},{"pos":[1585,1763],"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> using FindCriteria and the Find operation, see <bpt id=\"p1\">[</bpt>Discovery Find and FindCriteria<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>","needQuote":false,"needEscape":true,"source":"[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] using FindCriteria and the Find operation, see [Discovery Find and FindCriteria](~/add/includes/ajax-current-ext-md.md)"},{"pos":[2312,2406],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Discovery.FindCriteria\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.ServiceModel.Discovery.FindCriteria\"></xref>."},{"pos":[3015,3158],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Discovery.FindCriteria\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified name of a contract type.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.ServiceModel.Discovery.FindCriteria\"></xref> class with the specified name of a contract type."},{"pos":[3305,3349],"content":"The name of the contract type to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the contract type to search for.","pos":[0,44]}]},{"pos":[3882,3939],"content":"Gets the collection of contract type names to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of contract type names to search for.","pos":[0,57]}]},{"pos":[3951,4053],"content":"If more than one contract name is specified, only service endpoints matching ALL contracts will reply.","needQuote":true,"needEscape":true,"nodes":[{"content":"If more than one contract name is specified, only service endpoints matching ALL contracts will reply.","pos":[0,102]}]},{"pos":[4296,4334],"content":"The contract type names to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract type names to search for.","pos":[0,38]}]},{"pos":[4988,5067],"content":"Creates metadata exchange endpoint criteria to use when searching for services.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates metadata exchange endpoint criteria to use when searching for services.","pos":[0,79]}]},{"pos":[5296,5342],"content":"The endpoint criteria to use to find services.","needQuote":true,"needEscape":true,"nodes":[{"content":"The endpoint criteria to use to find services.","pos":[0,46]}]},{"pos":[6242,6371],"content":"Creates an object that contains metadata exchange endpoint criteria derived from the specified collection of XML qualified names.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an object that contains metadata exchange endpoint criteria derived from the specified collection of XML qualified names.","pos":[0,129]}]},{"pos":[6383,6496],"content":"An &lt;xref:System.Xml.XmlQualifiedName&gt; is a namespace-qualified local name in the format of <ph id=\"ph1\">`namespace:localname`</ph>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Xml.XmlQualifiedName> is a namespace-qualified local name in the format of `namespace:localname`."},{"pos":[6848,6912],"content":"A collection of enumerations that represent contract type names.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of enumerations that represent contract type names.","pos":[0,64]}]},{"pos":[6999,7045],"content":"The endpoint criteria to use to find services.","needQuote":true,"needEscape":true,"nodes":[{"content":"The endpoint criteria to use to find services.","pos":[0,46]}]},{"pos":[7758,7867],"content":"Creates an object that contains metadata exchange endpoint criteria derived from the specified contract type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an object that contains metadata exchange endpoint criteria derived from the specified contract type.","pos":[0,109]}]},{"pos":[7879,8004],"content":"The <xref:System.ServiceModel.Discovery.FindCriteria> information is used to create an endpoint that can search for services.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Discovery.FindCriteria&gt; information is used to create an endpoint that can search for services.","pos":[0,125],"source":"The <xref:System.ServiceModel.Discovery.FindCriteria> information is used to create an endpoint that can search for services."}]},{"pos":[8227,8254],"content":"A type of service contract.","needQuote":true,"needEscape":true,"nodes":[{"content":"A type of service contract.","pos":[0,27]}]},{"pos":[8341,8387],"content":"The endpoint criteria to use to find services.","needQuote":true,"needEscape":true,"nodes":[{"content":"The endpoint criteria to use to find services.","pos":[0,46]}]},{"pos":[8908,8996],"content":"Gets or sets a <xref:System.TimeSpan> that specifies the find operation time-out period.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a &lt;xref:System.TimeSpan&gt; that specifies the find operation time-out period.","pos":[0,88],"source":"Gets or sets a <xref:System.TimeSpan> that specifies the find operation time-out period."}]},{"pos":[9118,9160],"content":"The time-out period of the find operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time-out period of the find operation.","pos":[0,42]}]},{"pos":[9661,9773],"content":"Gets a collection of extensions in the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Discovery.FindCriteria\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets a collection of extensions in the <xref href=\"System.ServiceModel.Discovery.FindCriteria\"></xref> instance."},{"pos":[10003,10022],"content":"The XML extensions.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML extensions.","pos":[0,19]}]},{"pos":[10703,10873],"content":"Determines whether a set of criteria matches the service described by the specified <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Discovery.EndpointDiscoveryMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Determines whether a set of criteria matches the service described by the specified <xref href=\"System.ServiceModel.Discovery.EndpointDiscoveryMetadata\"></xref> instance."},{"pos":[11141,11212],"content":"The endpoint discovery metadata that describes the service in question.","needQuote":true,"needEscape":true,"nodes":[{"content":"The endpoint discovery metadata that describes the service in question.","pos":[0,71]}]},{"pos":[11271,11442],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the service matches the criteria, otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the service matches the criteria, otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11942,12020],"content":"Gets or sets the maximum number of responses required from the find operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum number of responses required from the find operation.","pos":[0,78]}]},{"pos":[12136,12200],"content":"The maximum number of response required from the find operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of response required from the find operation.","pos":[0,64]}]},{"pos":[12713,12770],"content":"Gets or sets a URI that specifies how scopes are matched.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a URI that specifies how scopes are matched.","pos":[0,57]}]},{"pos":[12886,12932],"content":"The URI that specifies how scopes are matched.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URI that specifies how scopes are matched.","pos":[0,46]}]},{"pos":[13469,13692],"content":"Specifies that scopes are matched by using a case-sensitive comparison (http://schemas.xmlsoap.org/ws/2004/10/discovery/strcmp0) as defined by the <bpt id=\"p1\">[</bpt>WS-Discovery Specification<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=122347)</ept>.","needQuote":true,"needEscape":true,"source":"Specifies that scopes are matched by using a case-sensitive comparison (http://schemas.xmlsoap.org/ws/2004/10/discovery/strcmp0) as defined by the [WS-Discovery Specification](http://go.microsoft.com/fwlink/?LinkId=122347)."},{"pos":[13816,13828],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14291,14499],"content":"Specifies that scopes are matched by using the LDAP method (http://schemas.xmlsoap.org/ws/2004/10/discovery/ldap) as defined by the <bpt id=\"p1\">[</bpt>WS-Discovery Specification<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=122347)</ept>.","needQuote":true,"needEscape":true,"source":"Specifies that scopes are matched by using the LDAP method (http://schemas.xmlsoap.org/ws/2004/10/discovery/ldap) as defined by the [WS-Discovery Specification](http://go.microsoft.com/fwlink/?LinkId=122347)."},{"pos":[14622,14634],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15097,15225],"content":"Specifies that scopes are ignored as defined by the <bpt id=\"p1\">[</bpt>WS-Discovery Specification<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=122347)</ept>.","needQuote":true,"needEscape":true,"source":"Specifies that scopes are ignored as defined by the [WS-Discovery Specification](http://go.microsoft.com/fwlink/?LinkId=122347)."},{"pos":[15348,15360],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15833,16043],"content":"Specifies that scopes are matched using the prefix method (http://schemas.xmlsoap.org/ws/2004/10/discovery/rfc2396) as defined by the <bpt id=\"p1\">[</bpt>WS-Discovery Specification<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=122347)</ept>.","needQuote":true,"needEscape":true,"source":"Specifies that scopes are matched using the prefix method (http://schemas.xmlsoap.org/ws/2004/10/discovery/rfc2396) as defined by the [WS-Discovery Specification](http://go.microsoft.com/fwlink/?LinkId=122347)."},{"pos":[16168,16180],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16643,16851],"content":"Specifies that scopes are matched by using the UUID method (http://schemas.xmlsoap.org/ws/2004/10/discovery/uuid) as defined by the <bpt id=\"p1\">[</bpt>WS-Discovery Specification<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=122347)</ept>.","needQuote":true,"needEscape":true,"source":"Specifies that scopes are matched by using the UUID method (http://schemas.xmlsoap.org/ws/2004/10/discovery/uuid) as defined by the [WS-Discovery Specification](http://go.microsoft.com/fwlink/?LinkId=122347)."},{"pos":[16974,16986],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17402,17489],"content":"Gets a collection of absolute URIs that represents scopes used to search for a service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of absolute URIs that represents scopes used to search for a service.","pos":[0,87]}]},{"pos":[17501,17592],"content":"If more than one scope is specified, only service endpoints matching ALL scopes will reply.","needQuote":true,"needEscape":true,"nodes":[{"content":"If more than one scope is specified, only service endpoints matching ALL scopes will reply.","pos":[0,91]}]},{"pos":[17783,17842],"content":"A collection of absolute URIs used to search for a service.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of absolute URIs used to search for a service.","pos":[0,59]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Discovery.FindCriteria\n  id: FindCriteria\n  children:\n  - System.ServiceModel.Discovery.FindCriteria.#ctor\n  - System.ServiceModel.Discovery.FindCriteria.#ctor(System.Type)\n  - System.ServiceModel.Discovery.FindCriteria.ContractTypeNames\n  - System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria\n  - System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName})\n  - System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Type)\n  - System.ServiceModel.Discovery.FindCriteria.Duration\n  - System.ServiceModel.Discovery.FindCriteria.Extensions\n  - System.ServiceModel.Discovery.FindCriteria.IsMatch(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)\n  - System.ServiceModel.Discovery.FindCriteria.MaxResults\n  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy\n  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact\n  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap\n  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone\n  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix\n  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid\n  - System.ServiceModel.Discovery.FindCriteria.Scopes\n  langs:\n  - csharp\n  name: FindCriteria\n  nameWithType: FindCriteria\n  fullName: System.ServiceModel.Discovery.FindCriteria\n  type: Class\n  summary: Represents the criteria to use when searching for services.\n  remarks: '[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] using FindCriteria and the Find operation, see [Discovery Find and FindCriteria](~/add/includes/ajax-current-ext-md.md)'\n  syntax:\n    content: public class FindCriteria\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.FindCriteria.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Discovery.FindCriteria\n  langs:\n  - csharp\n  name: FindCriteria()\n  nameWithType: FindCriteria.FindCriteria()\n  fullName: System.ServiceModel.Discovery.FindCriteria.FindCriteria()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Creates a new instance of the <xref href=\"System.ServiceModel.Discovery.FindCriteria\"></xref>.\n  syntax:\n    content: public FindCriteria ();\n    parameters: []\n  overload: System.ServiceModel.Discovery.FindCriteria.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.FindCriteria.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.ServiceModel.Discovery.FindCriteria\n  langs:\n  - csharp\n  name: FindCriteria(Type)\n  nameWithType: FindCriteria.FindCriteria(Type)\n  fullName: System.ServiceModel.Discovery.FindCriteria.FindCriteria(Type)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Creates a new instance of the <xref href=\"System.ServiceModel.Discovery.FindCriteria\"></xref> class with the specified name of a contract type.\n  syntax:\n    content: public FindCriteria (Type contractType);\n    parameters:\n    - id: contractType\n      type: System.Type\n      description: The name of the contract type to search for.\n  overload: System.ServiceModel.Discovery.FindCriteria.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames\n  id: ContractTypeNames\n  parent: System.ServiceModel.Discovery.FindCriteria\n  langs:\n  - csharp\n  name: ContractTypeNames\n  nameWithType: FindCriteria.ContractTypeNames\n  fullName: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames\n  type: Property\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Gets the collection of contract type names to search for.\n  remarks: If more than one contract name is specified, only service endpoints matching ALL contracts will reply.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Xml.XmlQualifiedName> ContractTypeNames { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Xml.XmlQualifiedName}\n      description: The contract type names to search for.\n  overload: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria\n  id: CreateMetadataExchangeEndpointCriteria\n  parent: System.ServiceModel.Discovery.FindCriteria\n  langs:\n  - csharp\n  name: CreateMetadataExchangeEndpointCriteria()\n  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria()\n  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria()\n  type: Method\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Creates metadata exchange endpoint criteria to use when searching for services.\n  syntax:\n    content: public static System.ServiceModel.Discovery.FindCriteria CreateMetadataExchangeEndpointCriteria ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Discovery.FindCriteria\n      description: The endpoint criteria to use to find services.\n  overload: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName})\n  id: CreateMetadataExchangeEndpointCriteria(System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName})\n  parent: System.ServiceModel.Discovery.FindCriteria\n  langs:\n  - csharp\n  name: CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)\n  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)\n  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Creates an object that contains metadata exchange endpoint criteria derived from the specified collection of XML qualified names.\n  remarks: An <xref:System.Xml.XmlQualifiedName> is a namespace-qualified local name in the format of `namespace:localname`.\n  syntax:\n    content: public static System.ServiceModel.Discovery.FindCriteria CreateMetadataExchangeEndpointCriteria (System.Collections.Generic.IEnumerable<System.Xml.XmlQualifiedName> contractTypeNames);\n    parameters:\n    - id: contractTypeNames\n      type: System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName}\n      description: A collection of enumerations that represent contract type names.\n    return:\n      type: System.ServiceModel.Discovery.FindCriteria\n      description: The endpoint criteria to use to find services.\n  overload: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Type)\n  id: CreateMetadataExchangeEndpointCriteria(System.Type)\n  parent: System.ServiceModel.Discovery.FindCriteria\n  langs:\n  - csharp\n  name: CreateMetadataExchangeEndpointCriteria(Type)\n  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria(Type)\n  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(Type)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Creates an object that contains metadata exchange endpoint criteria derived from the specified contract type.\n  remarks: The <xref:System.ServiceModel.Discovery.FindCriteria> information is used to create an endpoint that can search for services.\n  syntax:\n    content: public static System.ServiceModel.Discovery.FindCriteria CreateMetadataExchangeEndpointCriteria (Type contractType);\n    parameters:\n    - id: contractType\n      type: System.Type\n      description: A type of service contract.\n    return:\n      type: System.ServiceModel.Discovery.FindCriteria\n      description: The endpoint criteria to use to find services.\n  overload: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.FindCriteria.Duration\n  id: Duration\n  parent: System.ServiceModel.Discovery.FindCriteria\n  langs:\n  - csharp\n  name: Duration\n  nameWithType: FindCriteria.Duration\n  fullName: System.ServiceModel.Discovery.FindCriteria.Duration\n  type: Property\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Gets or sets a <xref:System.TimeSpan> that specifies the find operation time-out period.\n  syntax:\n    content: public TimeSpan Duration { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The time-out period of the find operation.\n  overload: System.ServiceModel.Discovery.FindCriteria.Duration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.FindCriteria.Extensions\n  id: Extensions\n  parent: System.ServiceModel.Discovery.FindCriteria\n  langs:\n  - csharp\n  name: Extensions\n  nameWithType: FindCriteria.Extensions\n  fullName: System.ServiceModel.Discovery.FindCriteria.Extensions\n  type: Property\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Gets a collection of extensions in the <xref href=\"System.ServiceModel.Discovery.FindCriteria\"></xref> instance.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Xml.Linq.XElement> Extensions { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Xml.Linq.XElement}\n      description: The XML extensions.\n  overload: System.ServiceModel.Discovery.FindCriteria.Extensions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.FindCriteria.IsMatch(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)\n  id: IsMatch(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)\n  parent: System.ServiceModel.Discovery.FindCriteria\n  langs:\n  - csharp\n  name: IsMatch(EndpointDiscoveryMetadata)\n  nameWithType: FindCriteria.IsMatch(EndpointDiscoveryMetadata)\n  fullName: System.ServiceModel.Discovery.FindCriteria.IsMatch(EndpointDiscoveryMetadata)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Determines whether a set of criteria matches the service described by the specified <xref href=\"System.ServiceModel.Discovery.EndpointDiscoveryMetadata\"></xref> instance.\n  syntax:\n    content: public bool IsMatch (System.ServiceModel.Discovery.EndpointDiscoveryMetadata endpointDiscoveryMetadata);\n    parameters:\n    - id: endpointDiscoveryMetadata\n      type: System.ServiceModel.Discovery.EndpointDiscoveryMetadata\n      description: The endpoint discovery metadata that describes the service in question.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the service matches the criteria, otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Discovery.FindCriteria.IsMatch*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.FindCriteria.MaxResults\n  id: MaxResults\n  parent: System.ServiceModel.Discovery.FindCriteria\n  langs:\n  - csharp\n  name: MaxResults\n  nameWithType: FindCriteria.MaxResults\n  fullName: System.ServiceModel.Discovery.FindCriteria.MaxResults\n  type: Property\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Gets or sets the maximum number of responses required from the find operation.\n  syntax:\n    content: public int MaxResults { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of response required from the find operation.\n  overload: System.ServiceModel.Discovery.FindCriteria.MaxResults*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy\n  id: ScopeMatchBy\n  parent: System.ServiceModel.Discovery.FindCriteria\n  langs:\n  - csharp\n  name: ScopeMatchBy\n  nameWithType: FindCriteria.ScopeMatchBy\n  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy\n  type: Property\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Gets or sets a URI that specifies how scopes are matched.\n  syntax:\n    content: public Uri ScopeMatchBy { get; set; }\n    return:\n      type: System.Uri\n      description: The URI that specifies how scopes are matched.\n  overload: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact\n  id: ScopeMatchByExact\n  parent: System.ServiceModel.Discovery.FindCriteria\n  langs:\n  - csharp\n  name: ScopeMatchByExact\n  nameWithType: FindCriteria.ScopeMatchByExact\n  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact\n  type: Field\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Specifies that scopes are matched by using a case-sensitive comparison (http://schemas.xmlsoap.org/ws/2004/10/discovery/strcmp0) as defined by the [WS-Discovery Specification](http://go.microsoft.com/fwlink/?LinkId=122347).\n  syntax:\n    content: public static readonly Uri ScopeMatchByExact;\n    return:\n      type: System.Uri\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap\n  id: ScopeMatchByLdap\n  parent: System.ServiceModel.Discovery.FindCriteria\n  langs:\n  - csharp\n  name: ScopeMatchByLdap\n  nameWithType: FindCriteria.ScopeMatchByLdap\n  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap\n  type: Field\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Specifies that scopes are matched by using the LDAP method (http://schemas.xmlsoap.org/ws/2004/10/discovery/ldap) as defined by the [WS-Discovery Specification](http://go.microsoft.com/fwlink/?LinkId=122347).\n  syntax:\n    content: public static readonly Uri ScopeMatchByLdap;\n    return:\n      type: System.Uri\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone\n  id: ScopeMatchByNone\n  parent: System.ServiceModel.Discovery.FindCriteria\n  langs:\n  - csharp\n  name: ScopeMatchByNone\n  nameWithType: FindCriteria.ScopeMatchByNone\n  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone\n  type: Field\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Specifies that scopes are ignored as defined by the [WS-Discovery Specification](http://go.microsoft.com/fwlink/?LinkId=122347).\n  syntax:\n    content: public static readonly Uri ScopeMatchByNone;\n    return:\n      type: System.Uri\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix\n  id: ScopeMatchByPrefix\n  parent: System.ServiceModel.Discovery.FindCriteria\n  langs:\n  - csharp\n  name: ScopeMatchByPrefix\n  nameWithType: FindCriteria.ScopeMatchByPrefix\n  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix\n  type: Field\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Specifies that scopes are matched using the prefix method (http://schemas.xmlsoap.org/ws/2004/10/discovery/rfc2396) as defined by the [WS-Discovery Specification](http://go.microsoft.com/fwlink/?LinkId=122347).\n  syntax:\n    content: public static readonly Uri ScopeMatchByPrefix;\n    return:\n      type: System.Uri\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid\n  id: ScopeMatchByUuid\n  parent: System.ServiceModel.Discovery.FindCriteria\n  langs:\n  - csharp\n  name: ScopeMatchByUuid\n  nameWithType: FindCriteria.ScopeMatchByUuid\n  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid\n  type: Field\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Specifies that scopes are matched by using the UUID method (http://schemas.xmlsoap.org/ws/2004/10/discovery/uuid) as defined by the [WS-Discovery Specification](http://go.microsoft.com/fwlink/?LinkId=122347).\n  syntax:\n    content: public static readonly Uri ScopeMatchByUuid;\n    return:\n      type: System.Uri\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.FindCriteria.Scopes\n  id: Scopes\n  parent: System.ServiceModel.Discovery.FindCriteria\n  langs:\n  - csharp\n  name: Scopes\n  nameWithType: FindCriteria.Scopes\n  fullName: System.ServiceModel.Discovery.FindCriteria.Scopes\n  type: Property\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Gets a collection of absolute URIs that represents scopes used to search for a service.\n  remarks: If more than one scope is specified, only service endpoints matching ALL scopes will reply.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<Uri> Scopes { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Uri}\n      description: A collection of absolute URIs used to search for a service.\n  overload: System.ServiceModel.Discovery.FindCriteria.Scopes*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ServiceModel.Discovery.FindCriteria.#ctor\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: FindCriteria()\n  nameWithType: FindCriteria.FindCriteria()\n  fullName: System.ServiceModel.Discovery.FindCriteria.FindCriteria()\n- uid: System.ServiceModel.Discovery.FindCriteria.#ctor(System.Type)\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: FindCriteria(Type)\n  nameWithType: FindCriteria.FindCriteria(Type)\n  fullName: System.ServiceModel.Discovery.FindCriteria.FindCriteria(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: ContractTypeNames\n  nameWithType: FindCriteria.ContractTypeNames\n  fullName: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames\n- uid: System.Collections.ObjectModel.Collection{System.Xml.XmlQualifiedName}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<XmlQualifiedName>\n  nameWithType: Collection<XmlQualifiedName>\n  fullName: System.Collections.ObjectModel.Collection<System.Xml.XmlQualifiedName>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Xml.XmlQualifiedName>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.XmlQualifiedName\n    name: XmlQualifiedName\n    nameWithType: XmlQualifiedName\n    fullName: XmlQualifiedName\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: CreateMetadataExchangeEndpointCriteria()\n  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria()\n  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria()\n- uid: System.ServiceModel.Discovery.FindCriteria\n  parent: System.ServiceModel.Discovery\n  isExternal: false\n  name: FindCriteria\n  nameWithType: FindCriteria\n  fullName: System.ServiceModel.Discovery.FindCriteria\n- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName})\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)\n  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)\n  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)\n- uid: System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<XmlQualifiedName>\n  nameWithType: IEnumerable<XmlQualifiedName>\n  fullName: System.Collections.Generic.IEnumerable<System.Xml.XmlQualifiedName>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Xml.XmlQualifiedName>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.XmlQualifiedName\n    name: XmlQualifiedName\n    nameWithType: XmlQualifiedName\n    fullName: XmlQualifiedName\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Type)\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: CreateMetadataExchangeEndpointCriteria(Type)\n  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria(Type)\n  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(Type)\n- uid: System.ServiceModel.Discovery.FindCriteria.Duration\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: Duration\n  nameWithType: FindCriteria.Duration\n  fullName: System.ServiceModel.Discovery.FindCriteria.Duration\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Discovery.FindCriteria.Extensions\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: Extensions\n  nameWithType: FindCriteria.Extensions\n  fullName: System.ServiceModel.Discovery.FindCriteria.Extensions\n- uid: System.Collections.ObjectModel.Collection{System.Xml.Linq.XElement}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<XElement>\n  nameWithType: Collection<XElement>\n  fullName: System.Collections.ObjectModel.Collection<System.Xml.Linq.XElement>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Xml.Linq.XElement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.Linq.XElement\n    name: XElement\n    nameWithType: XElement\n    fullName: XElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Discovery.FindCriteria.IsMatch(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: IsMatch(EndpointDiscoveryMetadata)\n  nameWithType: FindCriteria.IsMatch(EndpointDiscoveryMetadata)\n  fullName: System.ServiceModel.Discovery.FindCriteria.IsMatch(EndpointDiscoveryMetadata)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Discovery.EndpointDiscoveryMetadata\n  parent: System.ServiceModel.Discovery\n  isExternal: false\n  name: EndpointDiscoveryMetadata\n  nameWithType: EndpointDiscoveryMetadata\n  fullName: System.ServiceModel.Discovery.EndpointDiscoveryMetadata\n- uid: System.ServiceModel.Discovery.FindCriteria.MaxResults\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: MaxResults\n  nameWithType: FindCriteria.MaxResults\n  fullName: System.ServiceModel.Discovery.FindCriteria.MaxResults\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: ScopeMatchBy\n  nameWithType: FindCriteria.ScopeMatchBy\n  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: ScopeMatchByExact\n  nameWithType: FindCriteria.ScopeMatchByExact\n  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact\n- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: ScopeMatchByLdap\n  nameWithType: FindCriteria.ScopeMatchByLdap\n  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap\n- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: ScopeMatchByNone\n  nameWithType: FindCriteria.ScopeMatchByNone\n  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone\n- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: ScopeMatchByPrefix\n  nameWithType: FindCriteria.ScopeMatchByPrefix\n  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix\n- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: ScopeMatchByUuid\n  nameWithType: FindCriteria.ScopeMatchByUuid\n  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid\n- uid: System.ServiceModel.Discovery.FindCriteria.Scopes\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: Scopes\n  nameWithType: FindCriteria.Scopes\n  fullName: System.ServiceModel.Discovery.FindCriteria.Scopes\n- uid: System.Collections.ObjectModel.Collection{System.Uri}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<Uri>\n  nameWithType: Collection<Uri>\n  fullName: System.Collections.ObjectModel.Collection<System.Uri>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Uri>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: Uri\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Discovery.FindCriteria.#ctor*\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: FindCriteria\n  nameWithType: FindCriteria.FindCriteria\n- uid: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames*\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: ContractTypeNames\n  nameWithType: FindCriteria.ContractTypeNames\n- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria*\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: CreateMetadataExchangeEndpointCriteria\n  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria\n- uid: System.ServiceModel.Discovery.FindCriteria.Duration*\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: Duration\n  nameWithType: FindCriteria.Duration\n- uid: System.ServiceModel.Discovery.FindCriteria.Extensions*\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: Extensions\n  nameWithType: FindCriteria.Extensions\n- uid: System.ServiceModel.Discovery.FindCriteria.IsMatch*\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: IsMatch\n  nameWithType: FindCriteria.IsMatch\n- uid: System.ServiceModel.Discovery.FindCriteria.MaxResults*\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: MaxResults\n  nameWithType: FindCriteria.MaxResults\n- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy*\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: ScopeMatchBy\n  nameWithType: FindCriteria.ScopeMatchBy\n- uid: System.ServiceModel.Discovery.FindCriteria.Scopes*\n  parent: System.ServiceModel.Discovery.FindCriteria\n  isExternal: false\n  name: Scopes\n  nameWithType: FindCriteria.Scopes\n"}