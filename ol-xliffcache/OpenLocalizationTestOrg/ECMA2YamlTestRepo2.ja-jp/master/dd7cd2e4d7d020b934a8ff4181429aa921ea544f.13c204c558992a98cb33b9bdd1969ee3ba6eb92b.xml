{"nodes":[{"pos":[646,824],"content":"Provides utilities to support the exporting of COM+ SOAP-enabled application proxies by the server and the importing of the proxies by the client. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides utilities to support the exporting of COM+ SOAP-enabled application proxies by the server and the importing of the proxies by the client. This class cannot be inherited.","pos":[0,178],"nodes":[{"content":"Provides utilities to support the exporting of COM+ SOAP-enabled application proxies by the server and the importing of the proxies by the client.","pos":[0,146]},{"content":"This class cannot be inherited.","pos":[147,178]}]}]},{"pos":[837,1129],"content":"The utility functions that SoapUtility provides are called from numerous locations within COM+; however, their primary purpose is to support the export and import of client proxies.       SoapUtility is used internally by the .NET Framework. You do not need to use it directly in your code.","needQuote":false,"needEscape":true,"nodes":[{"content":"The utility functions that SoapUtility provides are called from numerous locations within COM+; however, their primary purpose is to support the export and import of client proxies.       SoapUtility is used internally by the .NET Framework. You do not need to use it directly in your code.","pos":[0,290],"nodes":[{"content":"The utility functions that SoapUtility provides are called from numerous locations within COM+; however, their primary purpose is to support the export and import of client proxies.","pos":[0,181]},{"content":"SoapUtility is used internally by the .NET Framework.","pos":[188,241]},{"content":"You do not need to use it directly in your code.","pos":[242,290]}]}]},{"pos":[1886,1994],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.Internal.SoapUtility\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.EnterpriseServices.Internal.SoapUtility\"></xref> class."},{"pos":[2804,2848],"content":"Returns the path for the SOAP bin directory.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the path for the SOAP bin directory.","pos":[0,44]}]},{"pos":[3070,3090],"content":"The root Web server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The root Web server.","pos":[0,20]}]},{"pos":[3156,3177],"content":"The base URL address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base URL address.","pos":[0,21]}]},{"pos":[3247,3276],"content":"The name of the virtual root.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the virtual root.","pos":[0,29]}]},{"pos":[3340,3444],"content":"When this method returns, this parameter contains the file path for the SOAP virtual root bin directory.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, this parameter contains the file path for the SOAP virtual root bin directory.","pos":[0,104]}]},{"pos":[3648,3725],"content":"A caller in the call chain does not have permission to access unmanaged code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A caller in the call chain does not have permission to access unmanaged code.","pos":[0,77]}]},{"pos":[3844,3878],"content":"The SOAP utility is not available.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SOAP utility is not available.","pos":[0,34]}]},{"pos":[4029,4073],"content":"The call to get the system directory failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The call to get the system directory failed.","pos":[0,44]}]},{"pos":[4760,4803],"content":"Returns the path for the SOAP virtual root.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the path for the SOAP virtual root.","pos":[0,43]}]},{"pos":[5035,5055],"content":"The root Web server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The root Web server.","pos":[0,20]}]},{"pos":[5121,5142],"content":"The base URL address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base URL address.","pos":[0,21]}]},{"pos":[5212,5241],"content":"The name of the virtual root.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the virtual root.","pos":[0,29]}]},{"pos":[5310,5400],"content":"When this method returns, this parameter contains the file path for the SOAP virtual root.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, this parameter contains the file path for the SOAP virtual root.","pos":[0,90]}]},{"pos":[5609,5686],"content":"A caller in the call chain does not have permission to access unmanaged code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A caller in the call chain does not have permission to access unmanaged code.","pos":[0,77]}]},{"pos":[5805,5839],"content":"The SOAP utility is not available.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SOAP utility is not available.","pos":[0,34]}]},{"pos":[5990,6034],"content":"The call to get the system directory failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The call to get the system directory failed.","pos":[0,44]}]},{"pos":[6454,6526],"content":"Determines whether authenticated, encrypted SOAP interfaces are present.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether authenticated, encrypted SOAP interfaces are present.","pos":[0,72]}]},{"pos":[6787,6864],"content":"A caller in the call chain does not have permission to access unmanaged code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A caller in the call chain does not have permission to access unmanaged code.","pos":[0,77]}]},{"pos":[6983,7017],"content":"The SOAP utility is not available.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SOAP utility is not available.","pos":[0,34]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.EnterpriseServices.Internal.SoapUtility\n  id: SoapUtility\n  children:\n  - System.EnterpriseServices.Internal.SoapUtility.#ctor\n  - System.EnterpriseServices.Internal.SoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)\n  - System.EnterpriseServices.Internal.SoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)\n  - System.EnterpriseServices.Internal.SoapUtility.Present\n  langs:\n  - csharp\n  name: SoapUtility\n  nameWithType: SoapUtility\n  fullName: System.EnterpriseServices.Internal.SoapUtility\n  type: Class\n  summary: Provides utilities to support the exporting of COM+ SOAP-enabled application proxies by the server and the importing of the proxies by the client. This class cannot be inherited.\n  remarks: \"The utility functions that SoapUtility provides are called from numerous locations within COM+; however, their primary purpose is to support the export and import of client proxies.  \\n  \\n SoapUtility is used internally by the .NET Framework. You do not need to use it directly in your code.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.Guid(\"5F9A955F-AA55-4127-A32B-33496AA8A44E\")]\n\n      public sealed class SoapUtility : System.EnterpriseServices.Internal.ISoapUtility\n  inheritance:\n  - System.Object\n  implements:\n  - System.EnterpriseServices.Internal.ISoapUtility\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.SoapUtility.#ctor\n  id: '#ctor'\n  parent: System.EnterpriseServices.Internal.SoapUtility\n  langs:\n  - csharp\n  name: SoapUtility()\n  nameWithType: SoapUtility.SoapUtility()\n  fullName: System.EnterpriseServices.Internal.SoapUtility.SoapUtility()\n  type: Constructor\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Initializes a new instance of the <xref href=\"System.EnterpriseServices.Internal.SoapUtility\"></xref> class.\n  syntax:\n    content: public SoapUtility ();\n    parameters: []\n  overload: System.EnterpriseServices.Internal.SoapUtility.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.SoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)\n  id: GetServerBinPath(System.String,System.String,System.String,System.String@)\n  parent: System.EnterpriseServices.Internal.SoapUtility\n  langs:\n  - csharp\n  name: GetServerBinPath(String,String,String,String)\n  nameWithType: SoapUtility.GetServerBinPath(String,String,String,String)\n  fullName: System.EnterpriseServices.Internal.SoapUtility.GetServerBinPath(String,String,String,String)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Returns the path for the SOAP bin directory.\n  syntax:\n    content: public void GetServerBinPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string binPath);\n    parameters:\n    - id: rootWebServer\n      type: System.String\n      description: The root Web server.\n    - id: inBaseUrl\n      type: System.String\n      description: The base URL address.\n    - id: inVirtualRoot\n      type: System.String\n      description: The name of the virtual root.\n    - id: binPath\n      type: System.String\n      description: When this method returns, this parameter contains the file path for the SOAP virtual root bin directory.\n  overload: System.EnterpriseServices.Internal.SoapUtility.GetServerBinPath*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: A caller in the call chain does not have permission to access unmanaged code.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The SOAP utility is not available.\n  - type: System.EnterpriseServices.ServicedComponentException\n    commentId: T:System.EnterpriseServices.ServicedComponentException\n    description: The call to get the system directory failed.\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.SoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)\n  id: GetServerPhysicalPath(System.String,System.String,System.String,System.String@)\n  parent: System.EnterpriseServices.Internal.SoapUtility\n  langs:\n  - csharp\n  name: GetServerPhysicalPath(String,String,String,String)\n  nameWithType: SoapUtility.GetServerPhysicalPath(String,String,String,String)\n  fullName: System.EnterpriseServices.Internal.SoapUtility.GetServerPhysicalPath(String,String,String,String)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Returns the path for the SOAP virtual root.\n  syntax:\n    content: public void GetServerPhysicalPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string physicalPath);\n    parameters:\n    - id: rootWebServer\n      type: System.String\n      description: The root Web server.\n    - id: inBaseUrl\n      type: System.String\n      description: The base URL address.\n    - id: inVirtualRoot\n      type: System.String\n      description: The name of the virtual root.\n    - id: physicalPath\n      type: System.String\n      description: When this method returns, this parameter contains the file path for the SOAP virtual root.\n  overload: System.EnterpriseServices.Internal.SoapUtility.GetServerPhysicalPath*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: A caller in the call chain does not have permission to access unmanaged code.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The SOAP utility is not available.\n  - type: System.EnterpriseServices.ServicedComponentException\n    commentId: T:System.EnterpriseServices.ServicedComponentException\n    description: The call to get the system directory failed.\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.SoapUtility.Present\n  id: Present\n  parent: System.EnterpriseServices.Internal.SoapUtility\n  langs:\n  - csharp\n  name: Present()\n  nameWithType: SoapUtility.Present()\n  fullName: System.EnterpriseServices.Internal.SoapUtility.Present()\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Determines whether authenticated, encrypted SOAP interfaces are present.\n  syntax:\n    content: public void Present ();\n    parameters: []\n  overload: System.EnterpriseServices.Internal.SoapUtility.Present*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: A caller in the call chain does not have permission to access unmanaged code.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The SOAP utility is not available.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.PlatformNotSupportedException\n  isExternal: true\n  name: System.PlatformNotSupportedException\n- uid: System.EnterpriseServices.ServicedComponentException\n  parent: System.EnterpriseServices\n  isExternal: false\n  name: ServicedComponentException\n  nameWithType: ServicedComponentException\n  fullName: System.EnterpriseServices.ServicedComponentException\n- uid: System.EnterpriseServices.Internal.SoapUtility.#ctor\n  parent: System.EnterpriseServices.Internal.SoapUtility\n  isExternal: false\n  name: SoapUtility()\n  nameWithType: SoapUtility.SoapUtility()\n  fullName: System.EnterpriseServices.Internal.SoapUtility.SoapUtility()\n- uid: System.EnterpriseServices.Internal.SoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)\n  parent: System.EnterpriseServices.Internal.SoapUtility\n  isExternal: false\n  name: GetServerBinPath(String,String,String,String)\n  nameWithType: SoapUtility.GetServerBinPath(String,String,String,String)\n  fullName: System.EnterpriseServices.Internal.SoapUtility.GetServerBinPath(String,String,String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.EnterpriseServices.Internal.SoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)\n  parent: System.EnterpriseServices.Internal.SoapUtility\n  isExternal: false\n  name: GetServerPhysicalPath(String,String,String,String)\n  nameWithType: SoapUtility.GetServerPhysicalPath(String,String,String,String)\n  fullName: System.EnterpriseServices.Internal.SoapUtility.GetServerPhysicalPath(String,String,String,String)\n- uid: System.EnterpriseServices.Internal.SoapUtility.Present\n  parent: System.EnterpriseServices.Internal.SoapUtility\n  isExternal: false\n  name: Present()\n  nameWithType: SoapUtility.Present()\n  fullName: System.EnterpriseServices.Internal.SoapUtility.Present()\n- uid: System.EnterpriseServices.Internal.SoapUtility.#ctor*\n  parent: System.EnterpriseServices.Internal.SoapUtility\n  isExternal: false\n  name: SoapUtility\n  nameWithType: SoapUtility.SoapUtility\n- uid: System.EnterpriseServices.Internal.SoapUtility.GetServerBinPath*\n  parent: System.EnterpriseServices.Internal.SoapUtility\n  isExternal: false\n  name: GetServerBinPath\n  nameWithType: SoapUtility.GetServerBinPath\n- uid: System.EnterpriseServices.Internal.SoapUtility.GetServerPhysicalPath*\n  parent: System.EnterpriseServices.Internal.SoapUtility\n  isExternal: false\n  name: GetServerPhysicalPath\n  nameWithType: SoapUtility.GetServerPhysicalPath\n- uid: System.EnterpriseServices.Internal.SoapUtility.Present*\n  parent: System.EnterpriseServices.Internal.SoapUtility\n  isExternal: false\n  name: Present\n  nameWithType: SoapUtility.Present\n"}