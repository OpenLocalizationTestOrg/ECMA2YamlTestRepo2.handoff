{"nodes":[{"pos":[1445,1503],"content":"Specifies information about a public environment accessor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies information about a public environment accessor.","pos":[0,58]}]},{"pos":[2120,2203],"content":"Gets the activity’s arguments, variables, child activities, and activity delegates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the activity’s arguments, variables, child activities, and activity delegates.","pos":[0,83]}]},{"pos":[2381,2459],"content":"The activity’s arguments, variables, child activities, and activity delegates.","needQuote":true,"needEscape":true,"nodes":[{"content":"The activity’s arguments, variables, child activities, and activity delegates.","pos":[0,78]}]},{"pos":[3145,3239],"content":"Creates the description of the arguments, child activities, variables, and activity delegates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates the description of the arguments, child activities, variables, and activity delegates.","pos":[0,94]}]},{"pos":[3496,3616],"content":"The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.","needQuote":true,"needEscape":true,"nodes":[{"content":"The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.","pos":[0,120]}]},{"pos":[3716,3802],"content":"The description of the arguments, child activities, variables, and activity delegates.","needQuote":true,"needEscape":true,"nodes":[{"content":"The description of the arguments, child activities, variables, and activity delegates.","pos":[0,86]}]},{"pos":[4386,4470],"content":"Determines whether the specified object is equal to the public environment accessor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified object is equal to the public environment accessor.","pos":[0,84]}]},{"pos":[4611,4633],"content":"The object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare.","pos":[0,22]}]},{"pos":[4692,4896],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified object is equal to the public environment accessor; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the specified object is equal to the public environment accessor; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5457,5522],"content":"Returns a unique identifier for this public environment accessor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a unique identifier for this public environment accessor.","pos":[0,65]}]},{"pos":[5657,5714],"content":"A unique identifier for this public environment accessor.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique identifier for this public environment accessor.","pos":[0,57]}]},{"pos":[6733,6819],"content":"Returns a value that indicates whether the two specified metadata instances are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the two specified metadata instances are equal.","pos":[0,86]}]},{"pos":[7119,7145],"content":"The first item to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first item to compare.","pos":[0,26]}]},{"pos":[7249,7276],"content":"The second item to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second item to compare.","pos":[0,27]}]},{"pos":[7335,7521],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two specified metadata instances are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the two specified metadata instances are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8550,8640],"content":"Returns a value that indicates whether the two specified metadata instances are not equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the two specified metadata instances are not equal.","pos":[0,90]}]},{"pos":[8942,8968],"content":"The first item to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first item to compare.","pos":[0,26]}]},{"pos":[9072,9099],"content":"The second item to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second item to compare.","pos":[0,27]}]},{"pos":[9158,9348],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two specified metadata instances are not equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the two specified metadata instances are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10380,10474],"content":"Returns a value that indicates whether the activity will try to get access to public location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the activity will try to get access to public location.","pos":[0,94]}]},{"pos":[10814,10840],"content":"Public location reference.","needQuote":true,"needEscape":true,"nodes":[{"content":"Public location reference.","pos":[0,26]}]},{"pos":[10934,10965],"content":"The access direction reference.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access direction reference.","pos":[0,31]}]},{"pos":[11062,11096],"content":"The equivalent location reference.","needQuote":true,"needEscape":true,"nodes":[{"content":"The equivalent location reference.","pos":[0,34]}]},{"pos":[11155,11349],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the activity to try will get access to public location; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the activity to try will get access to public location; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12285,12387],"content":"Returns a value that indicates whether the activity will try to get reference for the public location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the activity will try to get reference for the public location.","pos":[0,102]}]},{"pos":[12680,12706],"content":"Public reference location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Public reference location.","pos":[0,26]}]},{"pos":[12804,12838],"content":"The equivalent reference location.","needQuote":true,"needEscape":true,"nodes":[{"content":"The equivalent reference location.","pos":[0,34]}]},{"pos":[12897,13099],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the activity will try to get reference for the public location; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the activity will try to get reference for the public location; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor\n  id: CodeActivityPublicEnvironmentAccessor\n  children:\n  - System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata\n  - System.Activities.CodeActivityPublicEnvironmentAccessor.Create(System.Activities.CodeActivityMetadata)\n  - System.Activities.CodeActivityPublicEnvironmentAccessor.Equals(System.Object)\n  - System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode\n  - System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)\n  - System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)\n  - System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(System.Activities.LocationReference,System.Activities.ArgumentDirection,System.Activities.LocationReference@)\n  - System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(System.Activities.LocationReference,System.Activities.LocationReference@)\n  langs:\n  - csharp\n  name: CodeActivityPublicEnvironmentAccessor\n  nameWithType: CodeActivityPublicEnvironmentAccessor\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor\n  type: Struct\n  summary: Specifies information about a public environment accessor.\n  syntax:\n    content: public struct CodeActivityPublicEnvironmentAccessor\n  inheritance:\n  - System.ValueType\n  implements: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata\n  id: ActivityMetadata\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  langs:\n  - csharp\n  name: ActivityMetadata\n  nameWithType: CodeActivityPublicEnvironmentAccessor.ActivityMetadata\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the activity’s arguments, variables, child activities, and activity delegates.\n  syntax:\n    content: public System.Activities.CodeActivityMetadata ActivityMetadata { get; }\n    return:\n      type: System.Activities.CodeActivityMetadata\n      description: The activity’s arguments, variables, child activities, and activity delegates.\n  overload: System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.Create(System.Activities.CodeActivityMetadata)\n  id: Create(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  langs:\n  - csharp\n  name: Create(CodeActivityMetadata)\n  nameWithType: CodeActivityPublicEnvironmentAccessor.Create(CodeActivityMetadata)\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.Create(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Creates the description of the arguments, child activities, variables, and activity delegates.\n  syntax:\n    content: public static System.Activities.CodeActivityPublicEnvironmentAccessor Create (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.\n    return:\n      type: System.Activities.CodeActivityPublicEnvironmentAccessor\n      description: The description of the arguments, child activities, variables, and activity delegates.\n  overload: System.Activities.CodeActivityPublicEnvironmentAccessor.Create*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CodeActivityPublicEnvironmentAccessor.Equals(Object)\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Determines whether the specified object is equal to the public environment accessor.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the specified object is equal to the public environment accessor; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.CodeActivityPublicEnvironmentAccessor.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode\n  id: GetHashCode\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CodeActivityPublicEnvironmentAccessor.GetHashCode()\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a unique identifier for this public environment accessor.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A unique identifier for this public environment accessor.\n  overload: System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)\n  id: op_Equality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  langs:\n  - csharp\n  name: op_Equality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)\n  nameWithType: CodeActivityPublicEnvironmentAccessor.op_Equality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a value that indicates whether the two specified metadata instances are equal.\n  syntax:\n    content: public static bool op_Equality (System.Activities.CodeActivityPublicEnvironmentAccessor left, System.Activities.CodeActivityPublicEnvironmentAccessor right);\n    parameters:\n    - id: left\n      type: System.Activities.CodeActivityPublicEnvironmentAccessor\n      description: The first item to compare.\n    - id: right\n      type: System.Activities.CodeActivityPublicEnvironmentAccessor\n      description: The second item to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the two specified metadata instances are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)\n  id: op_Inequality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  langs:\n  - csharp\n  name: op_Inequality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)\n  nameWithType: CodeActivityPublicEnvironmentAccessor.op_Inequality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a value that indicates whether the two specified metadata instances are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.Activities.CodeActivityPublicEnvironmentAccessor left, System.Activities.CodeActivityPublicEnvironmentAccessor right);\n    parameters:\n    - id: left\n      type: System.Activities.CodeActivityPublicEnvironmentAccessor\n      description: The first item to compare.\n    - id: right\n      type: System.Activities.CodeActivityPublicEnvironmentAccessor\n      description: The second item to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the two specified metadata instances are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(System.Activities.LocationReference,System.Activities.ArgumentDirection,System.Activities.LocationReference@)\n  id: TryGetAccessToPublicLocation(System.Activities.LocationReference,System.Activities.ArgumentDirection,System.Activities.LocationReference@)\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  langs:\n  - csharp\n  name: TryGetAccessToPublicLocation(LocationReference,ArgumentDirection,LocationReference)\n  nameWithType: CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(LocationReference,ArgumentDirection,LocationReference)\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(LocationReference,ArgumentDirection,LocationReference)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a value that indicates whether the activity will try to get access to public location.\n  syntax:\n    content: public bool TryGetAccessToPublicLocation (System.Activities.LocationReference publicLocation, System.Activities.ArgumentDirection accessDirection, out System.Activities.LocationReference equivalentLocation);\n    parameters:\n    - id: publicLocation\n      type: System.Activities.LocationReference\n      description: Public location reference.\n    - id: accessDirection\n      type: System.Activities.ArgumentDirection\n      description: The access direction reference.\n    - id: equivalentLocation\n      type: System.Activities.LocationReference\n      description: The equivalent location reference.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the activity to try will get access to public location; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(System.Activities.LocationReference,System.Activities.LocationReference@)\n  id: TryGetReferenceToPublicLocation(System.Activities.LocationReference,System.Activities.LocationReference@)\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  langs:\n  - csharp\n  name: TryGetReferenceToPublicLocation(LocationReference,LocationReference)\n  nameWithType: CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(LocationReference,LocationReference)\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(LocationReference,LocationReference)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a value that indicates whether the activity will try to get reference for the public location.\n  syntax:\n    content: public bool TryGetReferenceToPublicLocation (System.Activities.LocationReference publicReference, out System.Activities.LocationReference equivalentReference);\n    parameters:\n    - id: publicReference\n      type: System.Activities.LocationReference\n      description: Public reference location.\n    - id: equivalentReference\n      type: System.Activities.LocationReference\n      description: The equivalent reference location.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the activity will try to get reference for the public location; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  isExternal: false\n  name: ActivityMetadata\n  nameWithType: CodeActivityPublicEnvironmentAccessor.ActivityMetadata\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.Create(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  isExternal: false\n  name: Create(CodeActivityMetadata)\n  nameWithType: CodeActivityPublicEnvironmentAccessor.Create(CodeActivityMetadata)\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.Create(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityPublicEnvironmentAccessor\n  nameWithType: CodeActivityPublicEnvironmentAccessor\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.Equals(System.Object)\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeActivityPublicEnvironmentAccessor.Equals(Object)\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeActivityPublicEnvironmentAccessor.GetHashCode()\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  isExternal: false\n  name: op_Equality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)\n  nameWithType: CodeActivityPublicEnvironmentAccessor.op_Equality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  isExternal: false\n  name: op_Inequality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)\n  nameWithType: CodeActivityPublicEnvironmentAccessor.op_Inequality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality(CodeActivityPublicEnvironmentAccessor,CodeActivityPublicEnvironmentAccessor)\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(System.Activities.LocationReference,System.Activities.ArgumentDirection,System.Activities.LocationReference@)\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  isExternal: false\n  name: TryGetAccessToPublicLocation(LocationReference,ArgumentDirection,LocationReference)\n  nameWithType: CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(LocationReference,ArgumentDirection,LocationReference)\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(LocationReference,ArgumentDirection,LocationReference)\n- uid: System.Activities.LocationReference\n  parent: System.Activities\n  isExternal: false\n  name: LocationReference\n  nameWithType: LocationReference\n  fullName: System.Activities.LocationReference\n- uid: System.Activities.ArgumentDirection\n  parent: System.Activities\n  isExternal: false\n  name: ArgumentDirection\n  nameWithType: ArgumentDirection\n  fullName: System.Activities.ArgumentDirection\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(System.Activities.LocationReference,System.Activities.LocationReference@)\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  isExternal: false\n  name: TryGetReferenceToPublicLocation(LocationReference,LocationReference)\n  nameWithType: CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(LocationReference,LocationReference)\n  fullName: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(LocationReference,LocationReference)\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata*\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  isExternal: false\n  name: ActivityMetadata\n  nameWithType: CodeActivityPublicEnvironmentAccessor.ActivityMetadata\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.Create*\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  isExternal: false\n  name: Create\n  nameWithType: CodeActivityPublicEnvironmentAccessor.Create\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.Equals*\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  isExternal: false\n  name: Equals\n  nameWithType: CodeActivityPublicEnvironmentAccessor.Equals\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode*\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  isExternal: false\n  name: GetHashCode\n  nameWithType: CodeActivityPublicEnvironmentAccessor.GetHashCode\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality*\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  isExternal: false\n  name: op_Equality\n  nameWithType: CodeActivityPublicEnvironmentAccessor.op_Equality\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality*\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  isExternal: false\n  name: op_Inequality\n  nameWithType: CodeActivityPublicEnvironmentAccessor.op_Inequality\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation*\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  isExternal: false\n  name: TryGetAccessToPublicLocation\n  nameWithType: CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation\n- uid: System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation*\n  parent: System.Activities.CodeActivityPublicEnvironmentAccessor\n  isExternal: false\n  name: TryGetReferenceToPublicLocation\n  nameWithType: CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation\n"}