{"nodes":[{"pos":[916,1015],"content":"Provides data for the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DetailsView.ItemUpdated\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Provides data for the <xref href=\"System.Web.UI.WebControls.DetailsView.ItemUpdated\"></xref> event."},{"pos":[1028,3331],"content":"The <xref:System.Web.UI.WebControls.DetailsView> control raises the <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> event when an Update button (a button with its `CommandName` property set to \"Update\") within the control is clicked, but after the <xref:System.Web.UI.WebControls.DetailsView> control updates the record. This allows you to provide an event handler that performs a custom routine, such as checking the results of an update operation, whenever this event occurs.       A DetailsViewUpdatedEventArgs object is passed to the event handler, which allows you to determine the number of records affected and any exceptions that might have occurred. To determine the number of records affected by the update operation, use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A> property. Use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> property to determine whether any exceptions occurred. You can also indicate whether the exception was handled in the event handler by setting the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> property. If you need to access the key field values for the updated record, use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A> property. The original and updated non-key field values can be accessed using the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A> and <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A> properties, respectively.       By default, the <xref:System.Web.UI.WebControls.DetailsView> control returns to the mode specified by the <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> property after an update operation. To keep the <xref:System.Web.UI.WebControls.DetailsView> control in edit mode, set the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A> property to `true`.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       For a list of initial property values for an instance of the DetailsViewUpdatedEventArgs class, see the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.%23ctor%2A> constructor.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control raises the &lt;xref:System.Web.UI.WebControls.DetailsView.ItemUpdated&gt; event when an Update button (a button with its <ph id=\"ph1\">`CommandName`</ph> property set to \"Update\") within the control is clicked, but after the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control updates the record.","pos":[0,329],"source":"The <xref:System.Web.UI.WebControls.DetailsView> control raises the <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> event when an Update button (a button with its `CommandName` property set to \"Update\") within the control is clicked, but after the <xref:System.Web.UI.WebControls.DetailsView> control updates the record."},{"content":"This allows you to provide an event handler that performs a custom routine, such as checking the results of an update operation, whenever this event occurs.","pos":[330,486]},{"content":"A DetailsViewUpdatedEventArgs object is passed to the event handler, which allows you to determine the number of records affected and any exceptions that might have occurred.","pos":[493,667]},{"content":"To determine the number of records affected by the update operation, use the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A&gt; property.","pos":[668,831],"source":" To determine the number of records affected by the update operation, use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A> property."},{"content":"Use the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A&gt; property to determine whether any exceptions occurred.","pos":[832,968],"source":" Use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> property to determine whether any exceptions occurred."},{"content":"You can also indicate whether the exception was handled in the event handler by setting the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A&gt; property.","pos":[969,1151],"source":" You can also indicate whether the exception was handled in the event handler by setting the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> property."},{"content":"If you need to access the key field values for the updated record, use the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A&gt; property.","pos":[1152,1305],"source":" If you need to access the key field values for the updated record, use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A> property."},{"content":"The original and updated non-key field values can be accessed using the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A&gt; and &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A&gt; properties, respectively.","pos":[1306,1555],"source":" The original and updated non-key field values can be accessed using the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A> and <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A> properties, respectively."},{"content":"By default, the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control returns to the mode specified by the &lt;xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A&gt; property after an update operation.","pos":[1562,1763],"source":"       By default, the <xref:System.Web.UI.WebControls.DetailsView> control returns to the mode specified by the <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> property after an update operation."},{"content":"To keep the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control in edit mode, set the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[1764,1949],"source":" To keep the <xref:System.Web.UI.WebControls.DetailsView> control in edit mode, set the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A> property to `true`."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[1956,2098],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"content":"For a list of initial property values for an instance of the DetailsViewUpdatedEventArgs class, see the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.%23ctor%2A&gt; constructor.","pos":[2105,2293],"source":"       For a list of initial property values for an instance of the DetailsViewUpdatedEventArgs class, see the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.%23ctor%2A> constructor."}]},{"pos":[4589,4704],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\"></xref> class."},{"pos":[4717,5675],"content":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> class.       The following table shows initial property values for an instance of the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> class.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A>|The value of the `affectedRows` parameter.|   |<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A>|The <xref:System.Exception?displayProperty=fullName> object contained in the `e` parameter.|   |<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A>|Initialized to `false`.|   |<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A>|Initialized to `false`.|      > [!NOTE] >  This constructor is used primarily by control developers when raising events.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use this constructor to initialize a new instance of the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs&gt; class.","pos":[0,124],"source":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> class."},{"content":"The following table shows initial property values for an instance of the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs&gt; class.","pos":[131,271],"source":"       The following table shows initial property values for an instance of the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> class."},{"content":"|Property|Initial value|   |--------------|-------------------|   |&lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A&gt;|The value of the <ph id=\"ph1\">`affectedRows`</ph> parameter.|   |&lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A&gt;|The &lt;xref:System.Exception?displayProperty=fullName&gt; object contained in the <ph id=\"ph2\">`e`</ph> parameter.|   |&lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A&gt;|Initialized to <ph id=\"ph3\">`false`</ph>.|   |&lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A&gt;|Initialized to <ph id=\"ph4\">`false`</ph>.|      &gt; <ph id=\"ph5\">[!NOTE]</ph> &gt;  This constructor is used primarily by control developers when raising events.","pos":[277,946],"source":"      |Property|Initial value|   |--------------|-------------------|   |<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A>|The value of the `affectedRows` parameter.|   |<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A>|The <xref:System.Exception?displayProperty=fullName> object contained in the `e` parameter.|   |<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A>|Initialized to `false`.|   |<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A>|Initialized to `false`.|      > [!NOTE] >  This constructor is used primarily by control developers when raising events."}]},{"pos":[5851,5903],"content":"The number of rows affected by the update operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of rows affected by the update operation.","pos":[0,52]}]},{"pos":[5964,6180],"content":"An <xref:System.Exception> that represents the exception raised when the update operation was performed. If no exception is raised, use <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for this parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Exception&gt; that represents the exception raised when the update operation was performed.","pos":[0,104],"source":"An <xref:System.Exception> that represents the exception raised when the update operation was performed."},{"content":"If no exception is raised, use <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for this parameter.","pos":[105,216],"source":" If no exception is raised, use <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for this parameter."}]},{"pos":[6724,6781],"content":"Gets the number of rows affected by the update operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of rows affected by the update operation.","pos":[0,57]}]},{"pos":[6793,6975],"content":"Use the AffectedRows property to determine the number of rows affected by the update operation. This value is commonly used to verify that the appropriate number of rows was updated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the AffectedRows property to determine the number of rows affected by the update operation. This value is commonly used to verify that the appropriate number of rows was updated.","pos":[0,182],"nodes":[{"content":"Use the AffectedRows property to determine the number of rows affected by the update operation.","pos":[0,95]},{"content":"This value is commonly used to verify that the appropriate number of rows was updated.","pos":[96,182]}]}]},{"pos":[7472,7524],"content":"The number of rows affected by the update operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of rows affected by the update operation.","pos":[0,52]}]},{"pos":[8060,8132],"content":"Gets the exception (if any) that was raised during the update operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the exception (if any) that was raised during the update operation.","pos":[0,72]}]},{"pos":[8145,8627],"content":"Use the Exception property to determine the exception (if any) that was raised during the update operation. If no exceptions were raised, this property returns `null`.      > [!NOTE] >  If an exception was raised and you decide to handle the exception in the event handler, be sure to set the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> property to `true`; otherwise, the exception is passed to the next method on the call stack for handling.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the Exception property to determine the exception (if any) that was raised during the update operation.","pos":[0,107]},{"content":"If no exceptions were raised, this property returns <ph id=\"ph1\">`null`</ph>.","pos":[108,167],"source":" If no exceptions were raised, this property returns `null`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If an exception was raised and you decide to handle the exception in the event handler, be sure to set the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A&gt; property to <ph id=\"ph2\">`true`</ph>; otherwise, the exception is passed to the next method on the call stack for handling.","pos":[173,479],"source":"      > [!NOTE] >  If an exception was raised and you decide to handle the exception in the event handler, be sure to set the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> property to `true`; otherwise, the exception is passed to the next method on the call stack for handling."}]},{"pos":[9133,9234],"content":"An <xref:System.Exception> that represents the exception that was raised during the update operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Exception&gt; that represents the exception that was raised during the update operation.","pos":[0,101],"source":"An <xref:System.Exception> that represents the exception that was raised during the update operation."}]},{"pos":[9802,9932],"content":"Gets or sets a value indicating whether an exception that was raised during the update operation was handled in the event handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether an exception that was raised during the update operation was handled in the event handler.","pos":[0,130]}]},{"pos":[9944,10464],"content":"When an exception is raised during the update operation, use the ExceptionHandled property to indicate whether the exception was handled in the event handler. When this property is set to `true`, the exception is considered handled and is not passed further up the call stack. If this property is set to `false`, the exception is passed to the next method on the call stack for handling. To determine which exception was raised, use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"When an exception is raised during the update operation, use the ExceptionHandled property to indicate whether the exception was handled in the event handler.","pos":[0,158]},{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, the exception is considered handled and is not passed further up the call stack.","pos":[159,276],"source":" When this property is set to `true`, the exception is considered handled and is not passed further up the call stack."},{"content":"If this property is set to <ph id=\"ph1\">`false`</ph>, the exception is passed to the next method on the call stack for handling.","pos":[277,387],"source":" If this property is set to `false`, the exception is passed to the next method on the call stack for handling."},{"content":"To determine which exception was raised, use the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A&gt; property.","pos":[388,520],"source":" To determine which exception was raised, use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> property."}]},{"pos":[10975,11240],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the exception was handled in the event handler; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the exception was handled in the event handler; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,186],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the exception was handled in the event handler; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[187,265],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[11805,11969],"content":"Gets or sets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DetailsView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control should remain in edit mode after an update operation.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether the <xref href=\"System.Web.UI.WebControls.DetailsView\"></xref> control should remain in edit mode after an update operation."},{"pos":[11982,12729],"content":"By default, the <xref:System.Web.UI.WebControls.DetailsView> control returns to the mode specified by the <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> property after an update operation. Use the KeepInEditMode property to specify whether the <xref:System.Web.UI.WebControls.DetailsView> control should remain in edit mode. To keep the <xref:System.Web.UI.WebControls.DetailsView> control in edit mode, set this property to `true`.      > [!NOTE] >  This property should be used if you want to override the default mode at a specific occasion. If the <xref:System.Web.UI.WebControls.DetailsView> control needs to remain in edit mode by default, set the <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> property instead.","needQuote":false,"needEscape":true,"nodes":[{"content":"By default, the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control returns to the mode specified by the &lt;xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A&gt; property after an update operation.","pos":[0,201],"source":"By default, the <xref:System.Web.UI.WebControls.DetailsView> control returns to the mode specified by the <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> property after an update operation."},{"content":"Use the KeepInEditMode property to specify whether the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control should remain in edit mode.","pos":[202,337],"source":" Use the KeepInEditMode property to specify whether the <xref:System.Web.UI.WebControls.DetailsView> control should remain in edit mode."},{"content":"To keep the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control in edit mode, set this property to <ph id=\"ph1\">`true`</ph>.","pos":[338,445],"source":" To keep the <xref:System.Web.UI.WebControls.DetailsView> control in edit mode, set this property to `true`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This property should be used if you want to override the default mode at a specific occasion.","pos":[451,557],"source":"      > [!NOTE] >  This property should be used if you want to override the default mode at a specific occasion."},{"content":"If the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control needs to remain in edit mode by default, set the &lt;xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A&gt; property instead.","pos":[558,744],"source":" If the <xref:System.Web.UI.WebControls.DetailsView> control needs to remain in edit mode by default, set the <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> property instead."}]},{"pos":[13275,13539],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to remain in edit mode after an update operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remain in edit mode after an update operation; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,185],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to remain in edit mode after an update operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[186,264],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[14052,14138],"content":"Gets a dictionary that contains the key field name/value pairs for the updated record.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a dictionary that contains the key field name/value pairs for the updated record.","pos":[0,86]}]},{"pos":[14151,14729],"content":"Use the Keys property to access the values of the key field for an updated record. For example, you can use these values to keep a log of updated records.       The Keys property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary> interface. The object contains <xref:System.Collections.DictionaryEntry> objects that represent the fields of the updated record.      > [!NOTE] >  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the Keys property to access the values of the key field for an updated record.","pos":[0,82]},{"content":"For example, you can use these values to keep a log of updated records.","pos":[83,154]},{"content":"The Keys property returns an object that implements the &lt;xref:System.Collections.Specialized.IOrderedDictionary&gt; interface.","pos":[161,284],"source":"       The Keys property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary> interface."},{"content":"The object contains &lt;xref:System.Collections.DictionaryEntry&gt; objects that represent the fields of the updated record.","pos":[285,403],"source":" The object contains <xref:System.Collections.DictionaryEntry> objects that represent the fields of the updated record."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  As a shortcut, you can also use the indexer of the &lt;xref:System.Collections.Specialized.IOrderedDictionary&gt; object to access the field values directly.","pos":[409,573],"source":"      > [!NOTE] >  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly."}]},{"pos":[15290,15444],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.IOrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains a dictionary of key field name/value pairs for the updated record.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> that contains a dictionary of key field name/value pairs for the updated record."},{"pos":[15972,16058],"content":"Gets a dictionary that contains the new field name/value pairs for the updated record.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a dictionary that contains the new field name/value pairs for the updated record.","pos":[0,86]}]},{"pos":[16071,16653],"content":"Use the NewValues property to access the new field values for the updated record. For example, you can use these values to keep a log of updated records.       The NewValues property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary> interface. The object contains <xref:System.Collections.DictionaryEntry> objects that represent the fields of the updated record.      > [!NOTE] >  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the NewValues property to access the new field values for the updated record.","pos":[0,81]},{"content":"For example, you can use these values to keep a log of updated records.","pos":[82,153]},{"content":"The NewValues property returns an object that implements the &lt;xref:System.Collections.Specialized.IOrderedDictionary&gt; interface.","pos":[160,288],"source":"       The NewValues property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary> interface."},{"content":"The object contains &lt;xref:System.Collections.DictionaryEntry&gt; objects that represent the fields of the updated record.","pos":[289,407],"source":" The object contains <xref:System.Collections.DictionaryEntry> objects that represent the fields of the updated record."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  As a shortcut, you can also use the indexer of the &lt;xref:System.Collections.Specialized.IOrderedDictionary&gt; object to access the field values directly.","pos":[413,577],"source":"      > [!NOTE] >  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly."}]},{"pos":[17252,17410],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.IOrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains a dictionary of the new field name/value pairs for the updated record.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> that contains a dictionary of the new field name/value pairs for the updated record."},{"pos":[17943,18034],"content":"Gets a dictionary that contains the original field name/value pairs for the updated record.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a dictionary that contains the original field name/value pairs for the updated record.","pos":[0,91]}]},{"pos":[18047,18634],"content":"Use the OldValues property to access the original field values for the updated record. For example, you can use these values to keep a log of updated records.       The OldValues property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary> interface. The object contains <xref:System.Collections.DictionaryEntry> objects that represent the fields of the updated record.      > [!NOTE] >  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the OldValues property to access the original field values for the updated record.","pos":[0,86]},{"content":"For example, you can use these values to keep a log of updated records.","pos":[87,158]},{"content":"The OldValues property returns an object that implements the &lt;xref:System.Collections.Specialized.IOrderedDictionary&gt; interface.","pos":[165,293],"source":"       The OldValues property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary> interface."},{"content":"The object contains &lt;xref:System.Collections.DictionaryEntry&gt; objects that represent the fields of the updated record.","pos":[294,412],"source":" The object contains <xref:System.Collections.DictionaryEntry> objects that represent the fields of the updated record."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  As a shortcut, you can also use the indexer of the &lt;xref:System.Collections.Specialized.IOrderedDictionary&gt; object to access the field values directly.","pos":[418,582],"source":"      > [!NOTE] >  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly."}]},{"pos":[19220,19383],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.IOrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains a dictionary of the original field name/value pairs for the updated record.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> that contains a dictionary of the original field name/value pairs for the updated record."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  id: DetailsViewUpdatedEventArgs\n  children:\n  - System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)\n  - System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows\n  - System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception\n  - System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled\n  - System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode\n  - System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys\n  - System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues\n  - System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues\n  langs:\n  - csharp\n  name: DetailsViewUpdatedEventArgs\n  nameWithType: DetailsViewUpdatedEventArgs\n  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  type: Class\n  summary: Provides data for the <xref href=\"System.Web.UI.WebControls.DetailsView.ItemUpdated\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.DetailsView> control raises the <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> event when an Update button (a button with its `CommandName` property set to \\\"Update\\\") within the control is clicked, but after the <xref:System.Web.UI.WebControls.DetailsView> control updates the record. This allows you to provide an event handler that performs a custom routine, such as checking the results of an update operation, whenever this event occurs.  \\n  \\n A DetailsViewUpdatedEventArgs object is passed to the event handler, which allows you to determine the number of records affected and any exceptions that might have occurred. To determine the number of records affected by the update operation, use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A> property. Use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> property to determine whether any exceptions occurred. You can also indicate whether the exception was handled in the event handler by setting the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> property. If you need to access the key field values for the updated record, use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A> property. The original and updated non-key field values can be accessed using the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A> and <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A> properties, respectively.  \\n  \\n By default, the <xref:System.Web.UI.WebControls.DetailsView> control returns to the mode specified by the <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> property after an update operation. To keep the <xref:System.Web.UI.WebControls.DetailsView> control in edit mode, set the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A> property to `true`.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \\n  \\n For a list of initial property values for an instance of the DetailsViewUpdatedEventArgs class, see the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.%23ctor%2A> constructor.\"\n  example:\n  - \"The following code example demonstrates how to use the DetailsViewUpdatedEventArgs object passed to the event handler for the <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> event to determine whether an exception occurred during an update operation.  \\n  \\n [!code-cs[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_393_1.aspx)]\\n [!code-vb[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_393_1.aspx)]\"\n  syntax:\n    content: 'public class DetailsViewUpdatedEventArgs : EventArgs'\n  inheritance:\n  - System.EventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)\n  id: '#ctor(System.Int32,System.Exception)'\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  langs:\n  - csharp\n  name: DetailsViewUpdatedEventArgs(Int32,Exception)\n  nameWithType: DetailsViewUpdatedEventArgs.DetailsViewUpdatedEventArgs(Int32,Exception)\n  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.DetailsViewUpdatedEventArgs(Int32,Exception)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\"></xref> class.\n  remarks: \"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> class.  \\n  \\n The following table shows initial property values for an instance of the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> class.  \\n  \\n|Property|Initial value|  \\n|--------------|-------------------|  \\n|<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A>|The value of the `affectedRows` parameter.|  \\n|<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A>|The <xref:System.Exception?displayProperty=fullName> object contained in the `e` parameter.|  \\n|<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A>|Initialized to `false`.|  \\n|<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A>|Initialized to `false`.|  \\n  \\n> [!NOTE]\\n>  This constructor is used primarily by control developers when raising events.\"\n  syntax:\n    content: public DetailsViewUpdatedEventArgs (int affectedRows, Exception e);\n    parameters:\n    - id: affectedRows\n      type: System.Int32\n      description: The number of rows affected by the update operation.\n    - id: e\n      type: System.Exception\n      description: An <xref:System.Exception> that represents the exception raised when the update operation was performed. If no exception is raised, use <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for this parameter.\n  overload: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows\n  id: AffectedRows\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  langs:\n  - csharp\n  name: AffectedRows\n  nameWithType: DetailsViewUpdatedEventArgs.AffectedRows\n  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the number of rows affected by the update operation.\n  remarks: Use the AffectedRows property to determine the number of rows affected by the update operation. This value is commonly used to verify that the appropriate number of rows was updated.\n  example:\n  - \"The following code example demonstrates how to use the AffectedRows property to determine the number of rows affected by an update operation.  \\n  \\n [!code-cs[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1055_1.aspx)]\\n [!code-vb[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1055_1.aspx)]\"\n  syntax:\n    content: public int AffectedRows { get; }\n    return:\n      type: System.Int32\n      description: The number of rows affected by the update operation.\n  overload: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception\n  id: Exception\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  langs:\n  - csharp\n  name: Exception\n  nameWithType: DetailsViewUpdatedEventArgs.Exception\n  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the exception (if any) that was raised during the update operation.\n  remarks: \"Use the Exception property to determine the exception (if any) that was raised during the update operation. If no exceptions were raised, this property returns `null`.  \\n  \\n> [!NOTE]\\n>  If an exception was raised and you decide to handle the exception in the event handler, be sure to set the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> property to `true`; otherwise, the exception is passed to the next method on the call stack for handling.\"\n  example:\n  - \"The following code example demonstrates how to use the Exception property to determine whether an exception occurred during an update operation.  \\n  \\n [!code-cs[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_573_1.aspx)]\\n [!code-vb[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_573_1.aspx)]\"\n  syntax:\n    content: public Exception Exception { get; }\n    return:\n      type: System.Exception\n      description: An <xref:System.Exception> that represents the exception that was raised during the update operation.\n  overload: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled\n  id: ExceptionHandled\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  langs:\n  - csharp\n  name: ExceptionHandled\n  nameWithType: DetailsViewUpdatedEventArgs.ExceptionHandled\n  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether an exception that was raised during the update operation was handled in the event handler.\n  remarks: When an exception is raised during the update operation, use the ExceptionHandled property to indicate whether the exception was handled in the event handler. When this property is set to `true`, the exception is considered handled and is not passed further up the call stack. If this property is set to `false`, the exception is passed to the next method on the call stack for handling. To determine which exception was raised, use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> property.\n  example:\n  - \"The following code example demonstrates how to use the ExceptionHandled property to indicate that the exception was handled in the event handler.  \\n  \\n [!code-cs[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_436_1.aspx)]\\n [!code-vb[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_436_1.aspx)]\"\n  syntax:\n    content: public bool ExceptionHandled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the exception was handled in the event handler; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode\n  id: KeepInEditMode\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  langs:\n  - csharp\n  name: KeepInEditMode\n  nameWithType: DetailsViewUpdatedEventArgs.KeepInEditMode\n  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether the <xref href=\"System.Web.UI.WebControls.DetailsView\"></xref> control should remain in edit mode after an update operation.\n  remarks: \"By default, the <xref:System.Web.UI.WebControls.DetailsView> control returns to the mode specified by the <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> property after an update operation. Use the KeepInEditMode property to specify whether the <xref:System.Web.UI.WebControls.DetailsView> control should remain in edit mode. To keep the <xref:System.Web.UI.WebControls.DetailsView> control in edit mode, set this property to `true`.  \\n  \\n> [!NOTE]\\n>  This property should be used if you want to override the default mode at a specific occasion. If the <xref:System.Web.UI.WebControls.DetailsView> control needs to remain in edit mode by default, set the <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> property instead.\"\n  example:\n  - \"The following code example demonstrates how to use the KeepInEditMode property to keep a <xref:System.Web.UI.WebControls.DetailsView> control in edit mode after an update operation.  \\n  \\n [!code-cs[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_381_1.aspx)]\\n [!code-vb[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_381_1.aspx)]\"\n  syntax:\n    content: public bool KeepInEditMode { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to remain in edit mode after an update operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys\n  id: Keys\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: DetailsViewUpdatedEventArgs.Keys\n  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a dictionary that contains the key field name/value pairs for the updated record.\n  remarks: \"Use the Keys property to access the values of the key field for an updated record. For example, you can use these values to keep a log of updated records.  \\n  \\n The Keys property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary> interface. The object contains <xref:System.Collections.DictionaryEntry> objects that represent the fields of the updated record.  \\n  \\n> [!NOTE]\\n>  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.\"\n  example:\n  - \"The following code example demonstrates how to use the Keys property to access the values of the key field for an updated record.  \\n  \\n [!code-cs[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1117_1.aspx)]\\n [!code-vb[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1117_1.aspx)]\"\n  syntax:\n    content: public System.Collections.Specialized.IOrderedDictionary Keys { get; }\n    return:\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> that contains a dictionary of key field name/value pairs for the updated record.\n  overload: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues\n  id: NewValues\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  langs:\n  - csharp\n  name: NewValues\n  nameWithType: DetailsViewUpdatedEventArgs.NewValues\n  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a dictionary that contains the new field name/value pairs for the updated record.\n  remarks: \"Use the NewValues property to access the new field values for the updated record. For example, you can use these values to keep a log of updated records.  \\n  \\n The NewValues property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary> interface. The object contains <xref:System.Collections.DictionaryEntry> objects that represent the fields of the updated record.  \\n  \\n> [!NOTE]\\n>  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.\"\n  example:\n  - \"The following code example demonstrates how to use the NewValues property to access the new values entered by the user for the non-key fields of the updated record.  \\n  \\n [!code-cs[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_674_1.aspx)]\\n [!code-vb[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_674_1.aspx)]\"\n  syntax:\n    content: public System.Collections.Specialized.IOrderedDictionary NewValues { get; }\n    return:\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> that contains a dictionary of the new field name/value pairs for the updated record.\n  overload: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues\n  id: OldValues\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  langs:\n  - csharp\n  name: OldValues\n  nameWithType: DetailsViewUpdatedEventArgs.OldValues\n  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a dictionary that contains the original field name/value pairs for the updated record.\n  remarks: \"Use the OldValues property to access the original field values for the updated record. For example, you can use these values to keep a log of updated records.  \\n  \\n The OldValues property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary> interface. The object contains <xref:System.Collections.DictionaryEntry> objects that represent the fields of the updated record.  \\n  \\n> [!NOTE]\\n>  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.\"\n  example:\n  - \"The following code example demonstrates how to use the OldValues property to access the original values of the non-key fields for the updated record.  \\n  \\n [!code-cs[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1300_1.aspx)]\\n [!code-vb[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1300_1.aspx)]\"\n  syntax:\n    content: public System.Collections.Specialized.IOrderedDictionary OldValues { get; }\n    return:\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> that contains a dictionary of the original field name/value pairs for the updated record.\n  overload: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.EventArgs\n  isExternal: false\n  name: System.EventArgs\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  isExternal: false\n  name: DetailsViewUpdatedEventArgs(Int32,Exception)\n  nameWithType: DetailsViewUpdatedEventArgs.DetailsViewUpdatedEventArgs(Int32,Exception)\n  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.DetailsViewUpdatedEventArgs(Int32,Exception)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  isExternal: false\n  name: AffectedRows\n  nameWithType: DetailsViewUpdatedEventArgs.AffectedRows\n  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  isExternal: false\n  name: Exception\n  nameWithType: DetailsViewUpdatedEventArgs.Exception\n  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  isExternal: false\n  name: ExceptionHandled\n  nameWithType: DetailsViewUpdatedEventArgs.ExceptionHandled\n  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  isExternal: false\n  name: KeepInEditMode\n  nameWithType: DetailsViewUpdatedEventArgs.KeepInEditMode\n  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  isExternal: false\n  name: Keys\n  nameWithType: DetailsViewUpdatedEventArgs.Keys\n  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys\n- uid: System.Collections.Specialized.IOrderedDictionary\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: IOrderedDictionary\n  nameWithType: IOrderedDictionary\n  fullName: System.Collections.Specialized.IOrderedDictionary\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  isExternal: false\n  name: NewValues\n  nameWithType: DetailsViewUpdatedEventArgs.NewValues\n  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  isExternal: false\n  name: OldValues\n  nameWithType: DetailsViewUpdatedEventArgs.OldValues\n  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.#ctor*\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  isExternal: false\n  name: DetailsViewUpdatedEventArgs\n  nameWithType: DetailsViewUpdatedEventArgs.DetailsViewUpdatedEventArgs\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows*\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  isExternal: false\n  name: AffectedRows\n  nameWithType: DetailsViewUpdatedEventArgs.AffectedRows\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception*\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  isExternal: false\n  name: Exception\n  nameWithType: DetailsViewUpdatedEventArgs.Exception\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled*\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  isExternal: false\n  name: ExceptionHandled\n  nameWithType: DetailsViewUpdatedEventArgs.ExceptionHandled\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode*\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  isExternal: false\n  name: KeepInEditMode\n  nameWithType: DetailsViewUpdatedEventArgs.KeepInEditMode\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys*\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  isExternal: false\n  name: Keys\n  nameWithType: DetailsViewUpdatedEventArgs.Keys\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues*\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  isExternal: false\n  name: NewValues\n  nameWithType: DetailsViewUpdatedEventArgs.NewValues\n- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues*\n  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs\n  isExternal: false\n  name: OldValues\n  nameWithType: DetailsViewUpdatedEventArgs.OldValues\n"}