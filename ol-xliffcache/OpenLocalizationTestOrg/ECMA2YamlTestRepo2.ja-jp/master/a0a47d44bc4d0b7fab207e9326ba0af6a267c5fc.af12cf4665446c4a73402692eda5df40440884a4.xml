{"nodes":[{"pos":[1286,1520],"content":"Implements the `MarkupCompilePass2` task. Use the `MarkupCompilePass2` element in your project file to create and execute this task. For usage and parameter information, see [MarkupCompilePass2](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the <ph id=\"ph1\">`MarkupCompilePass2`</ph> task.","pos":[0,41],"source":"Implements the `MarkupCompilePass2` task."},{"content":"Use the <ph id=\"ph1\">`MarkupCompilePass2`</ph> element in your project file to create and execute this task.","pos":[42,132],"source":" Use the `MarkupCompilePass2` element in your project file to create and execute this task."},{"content":"For usage and parameter information, see <bpt id=\"p1\">[</bpt>MarkupCompilePass2<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[133,234],"source":" For usage and parameter information, see [MarkupCompilePass2](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[2561,2671],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.Build.Tasks.Windows.MarkupCompilePass2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.Build.Tasks.Windows.MarkupCompilePass2\"></xref> class."},{"pos":[3414,3510],"content":"Gets or sets a value that indicates whether to run the compilation in second application domain.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether to run the compilation in second application domain.","pos":[0,96]}]},{"pos":[3659,3847],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to run the compilation in second application domain; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to run the compilation in second application domain; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4503,4582],"content":"Gets or sets a list of reference assemblies that change during the build cycle.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a list of reference assemblies that change during the build cycle.","pos":[0,79]}]},{"pos":[4726,4794],"content":"The list of reference assemblies that change during the build cycle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of reference assemblies that change during the build cycle.","pos":[0,68]}]},{"pos":[5350,5430],"content":"Gets or sets the short name of assembly that will be generated for this project.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the short name of assembly that will be generated for this project.","pos":[0,80]}]},{"pos":[5552,5620],"content":"The short name of assembly which will be generated for this project.","needQuote":true,"needEscape":true,"nodes":[{"content":"The short name of assembly which will be generated for this project.","pos":[0,68]}]},{"pos":[6137,6153],"content":"Executes a task.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes a task.","pos":[0,16]}]},{"pos":[6287,6457],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the task executed successfully; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the task executed successfully; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6995,7092],"content":"Gets or sets the generated <ph id=\"ph1\">[!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)]</ph> files.","needQuote":true,"needEscape":true,"source":"Gets or sets the generated [!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)] files."},{"pos":[7270,7354],"content":"The generated <ph id=\"ph1\">[!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)]</ph> files.","needQuote":true,"needEscape":true,"source":"The generated [!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)] files."},{"pos":[7928,8022],"content":"Gets or sets the paths of referenced assemblies that do not change during the build procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the paths of referenced assemblies that do not change during the build procedure.","pos":[0,94]}]},{"pos":[8155,8236],"content":"The paths of referenced assemblies that do not change during the build procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"The paths of referenced assemblies that do not change during the build procedure.","pos":[0,81]}]},{"pos":[8761,8822],"content":"Gets or sets the managed language that the compiler supports.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the managed language that the compiler supports.","pos":[0,61]}]},{"pos":[8940,9051],"content":"The managed language that the compiler supports. The valid values are **C#**, **VB**, **JScript**, and **C++**.","needQuote":true,"needEscape":true,"nodes":[{"content":"The managed language that the compiler supports.","pos":[0,48]},{"content":"The valid values are <bpt id=\"p1\">**</bpt>C#<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>VB<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>JScript<ept id=\"p3\">**</ept>, and <bpt id=\"p4\">**</bpt>C++<ept id=\"p4\">**</ept>.","pos":[49,111],"source":" The valid values are **C#**, **VB**, **JScript**, and **C++**."}]},{"pos":[9680,9835],"content":"Gets or sets a value that specifies how to generate localization information for each <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> file.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that specifies how to generate localization information for each [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] file."},{"pos":[9976,10180],"content":"A value that specifies how to generate localization information for each [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] file. The valid values are **None**, **CommentsOnly**, and **All**.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that specifies how to generate localization information for each <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> file.","pos":[0,142],"source":"A value that specifies how to generate localization information for each [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] file."},{"content":"The valid values are <bpt id=\"p1\">**</bpt>None<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>CommentsOnly<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>All<ept id=\"p3\">**</ept>.","pos":[143,204],"source":" The valid values are **None**, **CommentsOnly**, and **All**."}]},{"pos":[10727,10777],"content":"Gets or sets the location of generated code files.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the location of generated code files.","pos":[0,50]}]},{"pos":[10897,10934],"content":"The location of generated code files.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location of generated code files.","pos":[0,37]}]},{"pos":[11460,11505],"content":"Gets or sets the output type of the assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the output type of the assembly.","pos":[0,45]}]},{"pos":[11625,11751],"content":"The type of assembly that is generated by a project. The valid values are **winexe**, **exe**, **library**, and **netmodule**.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of assembly that is generated by a project.","pos":[0,52]},{"content":"The valid values are <bpt id=\"p1\">**</bpt>winexe<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>exe<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>library<ept id=\"p3\">**</ept>, and <bpt id=\"p4\">**</bpt>netmodule<ept id=\"p4\">**</ept>.","pos":[53,126],"source":" The valid values are **winexe**, **exe**, **library**, and **netmodule**."}]},{"pos":[12277,12314],"content":"Gets or sets the assembly references.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the assembly references.","pos":[0,37]}]},{"pos":[12489,12513],"content":"The assembly references.","needQuote":true,"needEscape":true,"nodes":[{"content":"The assembly references.","pos":[0,24]}]},{"pos":[13054,13120],"content":"Gets or sets the root namespace of the classes inside the project.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the root namespace of the classes inside the project.","pos":[0,66]}]},{"pos":[13243,13296],"content":"The root namespace of the classes inside the project.","needQuote":true,"needEscape":true,"nodes":[{"content":"The root namespace of the classes inside the project.","pos":[0,53]}]},{"pos":[13895,14096],"content":"Gets or sets a value that indicates whether diagnostic information is generated and included in the compiled <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> in order to aid debugging.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether diagnostic information is generated and included in the compiled [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] in order to aid debugging."},{"pos":[14229,14525],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if diagnostic information is generated and included in the compiled <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> in order to aid debugging; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if diagnostic information is generated and included in the compiled [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] in order to aid debugging; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  id: MarkupCompilePass2\n  children:\n  - Microsoft.Build.Tasks.Windows.MarkupCompilePass2.#ctor\n  - Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AlwaysCompileMarkupFilesInSeparateDomain\n  - Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssembliesGeneratedDuringBuild\n  - Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssemblyName\n  - Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Execute\n  - Microsoft.Build.Tasks.Windows.MarkupCompilePass2.GeneratedBaml\n  - Microsoft.Build.Tasks.Windows.MarkupCompilePass2.KnownReferencePaths\n  - Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Language\n  - Microsoft.Build.Tasks.Windows.MarkupCompilePass2.LocalizationDirectivesToLocFile\n  - Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputPath\n  - Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputType\n  - Microsoft.Build.Tasks.Windows.MarkupCompilePass2.References\n  - Microsoft.Build.Tasks.Windows.MarkupCompilePass2.RootNamespace\n  - Microsoft.Build.Tasks.Windows.MarkupCompilePass2.XamlDebuggingInformation\n  langs:\n  - csharp\n  name: MarkupCompilePass2\n  nameWithType: MarkupCompilePass2\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  type: Class\n  summary: Implements the `MarkupCompilePass2` task. Use the `MarkupCompilePass2` element in your project file to create and execute this task. For usage and parameter information, see [MarkupCompilePass2](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: 'public sealed class MarkupCompilePass2 : Microsoft.Build.Utilities.Task'\n  inheritance:\n  - System.Object\n  - Microsoft.Build.Utilities.Task\n  implements: []\n  inheritedMembers:\n  - Microsoft.Build.Utilities.Task.BuildEngine\n  - Microsoft.Build.Utilities.Task.BuildEngine2\n  - Microsoft.Build.Utilities.Task.BuildEngine3\n  - Microsoft.Build.Utilities.Task.BuildEngine4\n  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix\n  - Microsoft.Build.Utilities.Task.HostObject\n  - Microsoft.Build.Utilities.Task.Log\n  - Microsoft.Build.Utilities.Task.TaskResources\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.#ctor\n  id: '#ctor'\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  langs:\n  - csharp\n  name: MarkupCompilePass2()\n  nameWithType: MarkupCompilePass2.MarkupCompilePass2()\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.MarkupCompilePass2()\n  type: Constructor\n  assemblies:\n  - PresentationBuildTasks\n  namespace: Microsoft.Build.Tasks.Windows\n  summary: Initializes a new instance of the <xref href=\"Microsoft.Build.Tasks.Windows.MarkupCompilePass2\"></xref> class.\n  syntax:\n    content: public MarkupCompilePass2 ();\n    parameters: []\n  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AlwaysCompileMarkupFilesInSeparateDomain\n  id: AlwaysCompileMarkupFilesInSeparateDomain\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  langs:\n  - csharp\n  name: AlwaysCompileMarkupFilesInSeparateDomain\n  nameWithType: MarkupCompilePass2.AlwaysCompileMarkupFilesInSeparateDomain\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AlwaysCompileMarkupFilesInSeparateDomain\n  type: Property\n  assemblies:\n  - PresentationBuildTasks\n  namespace: Microsoft.Build.Tasks.Windows\n  summary: Gets or sets a value that indicates whether to run the compilation in second application domain.\n  syntax:\n    content: public bool AlwaysCompileMarkupFilesInSeparateDomain { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to run the compilation in second application domain; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AlwaysCompileMarkupFilesInSeparateDomain*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssembliesGeneratedDuringBuild\n  id: AssembliesGeneratedDuringBuild\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  langs:\n  - csharp\n  name: AssembliesGeneratedDuringBuild\n  nameWithType: MarkupCompilePass2.AssembliesGeneratedDuringBuild\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssembliesGeneratedDuringBuild\n  type: Property\n  assemblies:\n  - PresentationBuildTasks\n  namespace: Microsoft.Build.Tasks.Windows\n  summary: Gets or sets a list of reference assemblies that change during the build cycle.\n  syntax:\n    content: public string[] AssembliesGeneratedDuringBuild { get; set; }\n    return:\n      type: System.String[]\n      description: The list of reference assemblies that change during the build cycle.\n  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssembliesGeneratedDuringBuild*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssemblyName\n  id: AssemblyName\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  langs:\n  - csharp\n  name: AssemblyName\n  nameWithType: MarkupCompilePass2.AssemblyName\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssemblyName\n  type: Property\n  assemblies:\n  - PresentationBuildTasks\n  namespace: Microsoft.Build.Tasks.Windows\n  summary: Gets or sets the short name of assembly that will be generated for this project.\n  syntax:\n    content: public string AssemblyName { get; set; }\n    return:\n      type: System.String\n      description: The short name of assembly which will be generated for this project.\n  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssemblyName*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Execute\n  id: Execute\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  langs:\n  - csharp\n  name: Execute()\n  nameWithType: MarkupCompilePass2.Execute()\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Execute()\n  type: Method\n  assemblies:\n  - PresentationBuildTasks\n  namespace: Microsoft.Build.Tasks.Windows\n  summary: Executes a task.\n  syntax:\n    content: public override bool Execute ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the task executed successfully; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.GeneratedBaml\n  id: GeneratedBaml\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  langs:\n  - csharp\n  name: GeneratedBaml\n  nameWithType: MarkupCompilePass2.GeneratedBaml\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.GeneratedBaml\n  type: Property\n  assemblies:\n  - PresentationBuildTasks\n  namespace: Microsoft.Build.Tasks.Windows\n  summary: Gets or sets the generated [!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)] files.\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem[] GeneratedBaml { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: The generated [!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)] files.\n  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.GeneratedBaml*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.KnownReferencePaths\n  id: KnownReferencePaths\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  langs:\n  - csharp\n  name: KnownReferencePaths\n  nameWithType: MarkupCompilePass2.KnownReferencePaths\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.KnownReferencePaths\n  type: Property\n  assemblies:\n  - PresentationBuildTasks\n  namespace: Microsoft.Build.Tasks.Windows\n  summary: Gets or sets the paths of referenced assemblies that do not change during the build procedure.\n  syntax:\n    content: public string[] KnownReferencePaths { get; set; }\n    return:\n      type: System.String[]\n      description: The paths of referenced assemblies that do not change during the build procedure.\n  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.KnownReferencePaths*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Language\n  id: Language\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  langs:\n  - csharp\n  name: Language\n  nameWithType: MarkupCompilePass2.Language\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Language\n  type: Property\n  assemblies:\n  - PresentationBuildTasks\n  namespace: Microsoft.Build.Tasks.Windows\n  summary: Gets or sets the managed language that the compiler supports.\n  syntax:\n    content: public string Language { get; set; }\n    return:\n      type: System.String\n      description: The managed language that the compiler supports. The valid values are **C#**, **VB**, **JScript**, and **C++**.\n  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Language*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.LocalizationDirectivesToLocFile\n  id: LocalizationDirectivesToLocFile\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  langs:\n  - csharp\n  name: LocalizationDirectivesToLocFile\n  nameWithType: MarkupCompilePass2.LocalizationDirectivesToLocFile\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.LocalizationDirectivesToLocFile\n  type: Property\n  assemblies:\n  - PresentationBuildTasks\n  namespace: Microsoft.Build.Tasks.Windows\n  summary: Gets or sets a value that specifies how to generate localization information for each [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] file.\n  syntax:\n    content: public string LocalizationDirectivesToLocFile { get; set; }\n    return:\n      type: System.String\n      description: A value that specifies how to generate localization information for each [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] file. The valid values are **None**, **CommentsOnly**, and **All**.\n  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.LocalizationDirectivesToLocFile*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputPath\n  id: OutputPath\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  langs:\n  - csharp\n  name: OutputPath\n  nameWithType: MarkupCompilePass2.OutputPath\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputPath\n  type: Property\n  assemblies:\n  - PresentationBuildTasks\n  namespace: Microsoft.Build.Tasks.Windows\n  summary: Gets or sets the location of generated code files.\n  syntax:\n    content: public string OutputPath { get; set; }\n    return:\n      type: System.String\n      description: The location of generated code files.\n  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputType\n  id: OutputType\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  langs:\n  - csharp\n  name: OutputType\n  nameWithType: MarkupCompilePass2.OutputType\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputType\n  type: Property\n  assemblies:\n  - PresentationBuildTasks\n  namespace: Microsoft.Build.Tasks.Windows\n  summary: Gets or sets the output type of the assembly.\n  syntax:\n    content: public string OutputType { get; set; }\n    return:\n      type: System.String\n      description: The type of assembly that is generated by a project. The valid values are **winexe**, **exe**, **library**, and **netmodule**.\n  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputType*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.References\n  id: References\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  langs:\n  - csharp\n  name: References\n  nameWithType: MarkupCompilePass2.References\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.References\n  type: Property\n  assemblies:\n  - PresentationBuildTasks\n  namespace: Microsoft.Build.Tasks.Windows\n  summary: Gets or sets the assembly references.\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem[] References { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: The assembly references.\n  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.References*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.RootNamespace\n  id: RootNamespace\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  langs:\n  - csharp\n  name: RootNamespace\n  nameWithType: MarkupCompilePass2.RootNamespace\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.RootNamespace\n  type: Property\n  assemblies:\n  - PresentationBuildTasks\n  namespace: Microsoft.Build.Tasks.Windows\n  summary: Gets or sets the root namespace of the classes inside the project.\n  syntax:\n    content: public string RootNamespace { get; set; }\n    return:\n      type: System.String\n      description: The root namespace of the classes inside the project.\n  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.RootNamespace*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.XamlDebuggingInformation\n  id: XamlDebuggingInformation\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  langs:\n  - csharp\n  name: XamlDebuggingInformation\n  nameWithType: MarkupCompilePass2.XamlDebuggingInformation\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.XamlDebuggingInformation\n  type: Property\n  assemblies:\n  - PresentationBuildTasks\n  namespace: Microsoft.Build.Tasks.Windows\n  summary: Gets or sets a value that indicates whether diagnostic information is generated and included in the compiled [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] in order to aid debugging.\n  syntax:\n    content: public bool XamlDebuggingInformation { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if diagnostic information is generated and included in the compiled [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] in order to aid debugging; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.XamlDebuggingInformation*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.Build.Utilities.Task\n  isExternal: false\n  name: Microsoft.Build.Utilities.Task\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.#ctor\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: MarkupCompilePass2()\n  nameWithType: MarkupCompilePass2.MarkupCompilePass2()\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.MarkupCompilePass2()\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AlwaysCompileMarkupFilesInSeparateDomain\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: AlwaysCompileMarkupFilesInSeparateDomain\n  nameWithType: MarkupCompilePass2.AlwaysCompileMarkupFilesInSeparateDomain\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AlwaysCompileMarkupFilesInSeparateDomain\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssembliesGeneratedDuringBuild\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: AssembliesGeneratedDuringBuild\n  nameWithType: MarkupCompilePass2.AssembliesGeneratedDuringBuild\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssembliesGeneratedDuringBuild\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssemblyName\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: AssemblyName\n  nameWithType: MarkupCompilePass2.AssemblyName\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssemblyName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Execute\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: Execute()\n  nameWithType: MarkupCompilePass2.Execute()\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Execute()\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.GeneratedBaml\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: GeneratedBaml\n  nameWithType: MarkupCompilePass2.GeneratedBaml\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.GeneratedBaml\n- uid: Microsoft.Build.Framework.ITaskItem[]\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITaskItem\n  nameWithType: ITaskItem\n  fullName: Microsoft.Build.Framework.ITaskItem[]\n  spec.csharp:\n  - uid: Microsoft.Build.Framework.ITaskItem\n    name: ITaskItem\n    nameWithType: ITaskItem\n    fullName: ITaskItem[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.KnownReferencePaths\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: KnownReferencePaths\n  nameWithType: MarkupCompilePass2.KnownReferencePaths\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.KnownReferencePaths\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Language\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: Language\n  nameWithType: MarkupCompilePass2.Language\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Language\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.LocalizationDirectivesToLocFile\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: LocalizationDirectivesToLocFile\n  nameWithType: MarkupCompilePass2.LocalizationDirectivesToLocFile\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.LocalizationDirectivesToLocFile\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputPath\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: OutputPath\n  nameWithType: MarkupCompilePass2.OutputPath\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputPath\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputType\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: OutputType\n  nameWithType: MarkupCompilePass2.OutputType\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputType\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.References\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: References\n  nameWithType: MarkupCompilePass2.References\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.References\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.RootNamespace\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: RootNamespace\n  nameWithType: MarkupCompilePass2.RootNamespace\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.RootNamespace\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.XamlDebuggingInformation\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: XamlDebuggingInformation\n  nameWithType: MarkupCompilePass2.XamlDebuggingInformation\n  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.XamlDebuggingInformation\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.#ctor*\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: MarkupCompilePass2\n  nameWithType: MarkupCompilePass2.MarkupCompilePass2\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AlwaysCompileMarkupFilesInSeparateDomain*\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: AlwaysCompileMarkupFilesInSeparateDomain\n  nameWithType: MarkupCompilePass2.AlwaysCompileMarkupFilesInSeparateDomain\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssembliesGeneratedDuringBuild*\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: AssembliesGeneratedDuringBuild\n  nameWithType: MarkupCompilePass2.AssembliesGeneratedDuringBuild\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssemblyName*\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: AssemblyName\n  nameWithType: MarkupCompilePass2.AssemblyName\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Execute*\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: Execute\n  nameWithType: MarkupCompilePass2.Execute\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.GeneratedBaml*\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: GeneratedBaml\n  nameWithType: MarkupCompilePass2.GeneratedBaml\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.KnownReferencePaths*\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: KnownReferencePaths\n  nameWithType: MarkupCompilePass2.KnownReferencePaths\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Language*\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: Language\n  nameWithType: MarkupCompilePass2.Language\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.LocalizationDirectivesToLocFile*\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: LocalizationDirectivesToLocFile\n  nameWithType: MarkupCompilePass2.LocalizationDirectivesToLocFile\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputPath*\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: OutputPath\n  nameWithType: MarkupCompilePass2.OutputPath\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputType*\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: OutputType\n  nameWithType: MarkupCompilePass2.OutputType\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.References*\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: References\n  nameWithType: MarkupCompilePass2.References\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.RootNamespace*\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: RootNamespace\n  nameWithType: MarkupCompilePass2.RootNamespace\n- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass2.XamlDebuggingInformation*\n  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass2\n  isExternal: false\n  name: XamlDebuggingInformation\n  nameWithType: MarkupCompilePass2.XamlDebuggingInformation\n"}