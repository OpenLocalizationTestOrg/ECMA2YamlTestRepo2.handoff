{"nodes":[{"pos":[502,933],"content":"Exposes methods and properties to support UI Automation client access to controls that act as containers for a collection of child elements. The children of this element must implement <xref href=\"System.Windows.Automation.Provider.IGridItemProvider\"></xref> and be organized in a two-dimensional logical coordinate system that can be traversed (that is, a UI Automation client can move to adjacent controls) by using the keyboard.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exposes methods and properties to support UI Automation client access to controls that act as containers for a collection of child elements.","pos":[0,140]},{"content":"The children of this element must implement <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.Provider.IGridItemProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and be organized in a two-dimensional logical coordinate system that can be traversed (that is, a UI Automation client can move to adjacent controls) by using the keyboard.","pos":[141,431],"source":" The children of this element must implement <xref href=\"System.Windows.Automation.Provider.IGridItemProvider\"></xref> and be organized in a two-dimensional logical coordinate system that can be traversed (that is, a UI Automation client can move to adjacent controls) by using the keyboard."}]},{"pos":[946,1249],"content":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.GridPattern> control pattern.       IGridProvider does not enable active manipulation of a grid; <xref:System.Windows.Automation.Provider.ITransformProvider> must be implemented to enable this functionality.","needQuote":false,"needEscape":true,"nodes":[{"content":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.GridPattern> control pattern.       IGridProvider does not enable active manipulation of a grid; <xref:System.Windows.Automation.Provider.ITransformProvider> must be implemented to enable this functionality.","pos":[0,301],"nodes":[{"content":"Implemented on a UI Automation provider that must support the &lt;xref:System.Windows.Automation.GridPattern&gt; control pattern.","pos":[0,123],"source":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.GridPattern> control pattern."},{"content":"IGridProvider does not enable active manipulation of a grid; &lt;xref:System.Windows.Automation.Provider.ITransformProvider&gt; must be implemented to enable this functionality.","pos":[130,301],"source":"       IGridProvider does not enable active manipulation of a grid; <xref:System.Windows.Automation.Provider.ITransformProvider> must be implemented to enable this functionality."}]}]},{"pos":[2034,2077],"content":"Gets the total number of columns in a grid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the total number of columns in a grid.","pos":[0,43]}]},{"pos":[2089,2563],"content":"Hidden rows and columns, depending on the provider implementation, can be loaded in the [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] tree and will therefore be reflected in the <xref:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount%2A> and <xref:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount%2A> properties. If the hidden rows and columns have not yet been loaded they will not be counted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Hidden rows and columns, depending on the provider implementation, can be loaded in the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> tree and will therefore be reflected in the &lt;xref:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount%2A&gt; and &lt;xref:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount%2A&gt; properties.","pos":[0,392],"source":"Hidden rows and columns, depending on the provider implementation, can be loaded in the [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] tree and will therefore be reflected in the <xref:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount%2A> and <xref:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount%2A> properties."},{"content":"If the hidden rows and columns have not yet been loaded they will not be counted.","pos":[393,474]}]},{"pos":[2974,3012],"content":"The total number of columns in a grid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of columns in a grid.","pos":[0,38]}]},{"pos":[3613,3673],"content":"Retrieves the UI Automation provider for the specified cell.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the UI Automation provider for the specified cell.","pos":[0,60]}]},{"pos":[3686,4773],"content":"-   Grid coordinates are zero-based with the upper left (or upper right cell depending on locale) having coordinates (0,0).      -   If a cell is empty a UI Automation provider must still be returned in order to support the <xref:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid%2A> property for that cell. This is possible when the layout of child elements in the grid is similar to a ragged array.       ![Windows Explorer view showing ragged layout.](~/add/media/uia-gridpattern-ragged-array.PNG \"Windows Explorer view showing ragged layout.\")   Example of a Grid Control with Empty Coordinates      -   Hidden rows and columns, depending on the provider implementation, can be loaded in the [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] tree and will therefore be reflected in the <xref:System.Windows.Automation.Provider.IGridProvider.RowCount%2A> and <xref:System.Windows.Automation.Provider.IGridProvider.ColumnCount%2A> properties. If the hidden rows and columns have not yet been loaded they should not be counted.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">-</ph>   Grid coordinates are zero-based with the upper left (or upper right cell depending on locale) having coordinates (0,0).","pos":[0,123],"source":"-   Grid coordinates are zero-based with the upper left (or upper right cell depending on locale) having coordinates (0,0)."},{"content":"-   If a cell is empty a UI Automation provider must still be returned in order to support the &lt;xref:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid%2A&gt; property for that cell.","pos":[129,325],"source":"      -   If a cell is empty a UI Automation provider must still be returned in order to support the <xref:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid%2A> property for that cell."},{"content":"This is possible when the layout of child elements in the grid is similar to a ragged array.","pos":[326,418]},{"content":"<bpt id=\"p1\">![</bpt>Windows Explorer view showing ragged layout.<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/uia-gridpattern-ragged-array.PNG \"</bpt>Windows Explorer view showing ragged layout.<ept id=\"p2\">\")</ept>","pos":[425,565],"source":"![Windows Explorer view showing ragged layout.](~/add/media/uia-gridpattern-ragged-array.PNG \"Windows Explorer view showing ragged layout.\")"},{"content":"Example of a Grid Control with Empty Coordinates      -   Hidden rows and columns, depending on the provider implementation, can be loaded in the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> tree and will therefore be reflected in the &lt;xref:System.Windows.Automation.Provider.IGridProvider.RowCount%2A&gt; and &lt;xref:System.Windows.Automation.Provider.IGridProvider.ColumnCount%2A&gt; properties.","pos":[568,994],"source":"   Example of a Grid Control with Empty Coordinates      -   Hidden rows and columns, depending on the provider implementation, can be loaded in the [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] tree and will therefore be reflected in the <xref:System.Windows.Automation.Provider.IGridProvider.RowCount%2A> and <xref:System.Windows.Automation.Provider.IGridProvider.ColumnCount%2A> properties."},{"content":"If the hidden rows and columns have not yet been loaded they should not be counted.","pos":[995,1078]}]},{"pos":[5350,5392],"content":"The ordinal number of the row of interest.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ordinal number of the row of interest.","pos":[0,42]}]},{"pos":[5454,5499],"content":"The ordinal number of the column of interest.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ordinal number of the column of interest.","pos":[0,45]}]},{"pos":[5604,5654],"content":"The UI Automation provider for the specified cell.","needQuote":true,"needEscape":true,"nodes":[{"content":"The UI Automation provider for the specified cell.","pos":[0,50]}]},{"pos":[6165,6205],"content":"Gets the total number of rows in a grid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the total number of rows in a grid.","pos":[0,40]}]},{"pos":[6217,6617],"content":"Hidden rows and columns, depending on the provider implementation, can be loaded in the logical tree and will therefore be reflected in the <xref:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount%2A> and <xref:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount%2A> properties. If the hidden rows and columns have not yet been loaded they will not be counted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Hidden rows and columns, depending on the provider implementation, can be loaded in the logical tree and will therefore be reflected in the <xref:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount%2A> and <xref:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount%2A> properties. If the hidden rows and columns have not yet been loaded they will not be counted.","pos":[0,400],"nodes":[{"content":"Hidden rows and columns, depending on the provider implementation, can be loaded in the logical tree and will therefore be reflected in the &lt;xref:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount%2A&gt; and &lt;xref:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount%2A&gt; properties.","pos":[0,318],"source":"Hidden rows and columns, depending on the provider implementation, can be loaded in the logical tree and will therefore be reflected in the <xref:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount%2A> and <xref:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount%2A> properties."},{"content":"If the hidden rows and columns have not yet been loaded they will not be counted.","pos":[319,400]}]}]},{"pos":[7025,7060],"content":"The total number of rows in a grid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of rows in a grid.","pos":[0,35]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Automation.Provider.IGridProvider\n  id: IGridProvider\n  children:\n  - System.Windows.Automation.Provider.IGridProvider.ColumnCount\n  - System.Windows.Automation.Provider.IGridProvider.GetItem(System.Int32,System.Int32)\n  - System.Windows.Automation.Provider.IGridProvider.RowCount\n  langs:\n  - csharp\n  name: IGridProvider\n  nameWithType: IGridProvider\n  fullName: System.Windows.Automation.Provider.IGridProvider\n  type: Interface\n  summary: Exposes methods and properties to support UI Automation client access to controls that act as containers for a collection of child elements. The children of this element must implement <xref href=\"System.Windows.Automation.Provider.IGridItemProvider\"></xref> and be organized in a two-dimensional logical coordinate system that can be traversed (that is, a UI Automation client can move to adjacent controls) by using the keyboard.\n  remarks: \"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.GridPattern> control pattern.  \\n  \\n IGridProvider does not enable active manipulation of a grid; <xref:System.Windows.Automation.Provider.ITransformProvider> must be implemented to enable this functionality.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"b17d6187-0907-464b-a168-0ef17a1572b1\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface IGridProvider\n  implements: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.IGridProvider.ColumnCount\n  id: ColumnCount\n  parent: System.Windows.Automation.Provider.IGridProvider\n  langs:\n  - csharp\n  name: ColumnCount\n  nameWithType: IGridProvider.ColumnCount\n  fullName: System.Windows.Automation.Provider.IGridProvider.ColumnCount\n  type: Property\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Gets the total number of columns in a grid.\n  remarks: Hidden rows and columns, depending on the provider implementation, can be loaded in the [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] tree and will therefore be reflected in the <xref:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount%2A> and <xref:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount%2A> properties. If the hidden rows and columns have not yet been loaded they will not be counted.\n  example:\n  - \"The following example code returns the property value.  \\n  \\n [!code-vb[UIAMiscPatternProviders_snip#102](~/add/codesnippet/visualbasic/patternproviders/customgrid.vb#102)]\\n [!code-cs[UIAMiscPatternProviders_snip#102](~/add/codesnippet/csharp/PatternProviders/CustomGrid.cs#102)]\"\n  syntax:\n    content: public int ColumnCount { get; }\n    return:\n      type: System.Int32\n      description: The total number of columns in a grid.\n  overload: System.Windows.Automation.Provider.IGridProvider.ColumnCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.IGridProvider.GetItem(System.Int32,System.Int32)\n  id: GetItem(System.Int32,System.Int32)\n  parent: System.Windows.Automation.Provider.IGridProvider\n  langs:\n  - csharp\n  name: GetItem(Int32,Int32)\n  nameWithType: IGridProvider.GetItem(Int32,Int32)\n  fullName: System.Windows.Automation.Provider.IGridProvider.GetItem(Int32,Int32)\n  type: Method\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Retrieves the UI Automation provider for the specified cell.\n  remarks: \"-   Grid coordinates are zero-based with the upper left (or upper right cell depending on locale) having coordinates (0,0).  \\n  \\n-   If a cell is empty a UI Automation provider must still be returned in order to support the <xref:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid%2A> property for that cell. This is possible when the layout of child elements in the grid is similar to a ragged array.  \\n  \\n ![Windows Explorer view showing ragged layout.](~/add/media/uia-gridpattern-ragged-array.PNG \\\"Windows Explorer view showing ragged layout.\\\")  \\nExample of a Grid Control with Empty Coordinates  \\n  \\n-   Hidden rows and columns, depending on the provider implementation, can be loaded in the [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] tree and will therefore be reflected in the <xref:System.Windows.Automation.Provider.IGridProvider.RowCount%2A> and <xref:System.Windows.Automation.Provider.IGridProvider.ColumnCount%2A> properties. If the hidden rows and columns have not yet been loaded they should not be counted.\"\n  example:\n  - \"The following code is an example implementation of this method that returns an object representing the item at the specified location.  \\n  \\n [!code-vb[UIAMiscPatternProviders_snip#101](~/add/codesnippet/visualbasic/patternproviders/customgrid.vb#101)]\\n [!code-cs[UIAMiscPatternProviders_snip#101](~/add/codesnippet/csharp/PatternProviders/CustomGrid.cs#101)]\"\n  syntax:\n    content: public System.Windows.Automation.Provider.IRawElementProviderSimple GetItem (int row, int column);\n    parameters:\n    - id: row\n      type: System.Int32\n      description: The ordinal number of the row of interest.\n    - id: column\n      type: System.Int32\n      description: The ordinal number of the column of interest.\n    return:\n      type: System.Windows.Automation.Provider.IRawElementProviderSimple\n      description: The UI Automation provider for the specified cell.\n  overload: System.Windows.Automation.Provider.IGridProvider.GetItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.IGridProvider.RowCount\n  id: RowCount\n  parent: System.Windows.Automation.Provider.IGridProvider\n  langs:\n  - csharp\n  name: RowCount\n  nameWithType: IGridProvider.RowCount\n  fullName: System.Windows.Automation.Provider.IGridProvider.RowCount\n  type: Property\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Gets the total number of rows in a grid.\n  remarks: Hidden rows and columns, depending on the provider implementation, can be loaded in the logical tree and will therefore be reflected in the <xref:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount%2A> and <xref:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount%2A> properties. If the hidden rows and columns have not yet been loaded they will not be counted.\n  example:\n  - \"The following example code returns the property value.  \\n  \\n [!code-vb[UIAMiscPatternProviders_snip#103](~/add/codesnippet/visualbasic/patternproviders/customgrid.vb#103)]\\n [!code-cs[UIAMiscPatternProviders_snip#103](~/add/codesnippet/csharp/PatternProviders/CustomGrid.cs#103)]\"\n  syntax:\n    content: public int RowCount { get; }\n    return:\n      type: System.Int32\n      description: The total number of rows in a grid.\n  overload: System.Windows.Automation.Provider.IGridProvider.RowCount*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Automation.Provider.IGridProvider.ColumnCount\n  parent: System.Windows.Automation.Provider.IGridProvider\n  isExternal: false\n  name: ColumnCount\n  nameWithType: IGridProvider.ColumnCount\n  fullName: System.Windows.Automation.Provider.IGridProvider.ColumnCount\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Automation.Provider.IGridProvider.GetItem(System.Int32,System.Int32)\n  parent: System.Windows.Automation.Provider.IGridProvider\n  isExternal: false\n  name: GetItem(Int32,Int32)\n  nameWithType: IGridProvider.GetItem(Int32,Int32)\n  fullName: System.Windows.Automation.Provider.IGridProvider.GetItem(Int32,Int32)\n- uid: System.Windows.Automation.Provider.IRawElementProviderSimple\n  parent: System.Windows.Automation.Provider\n  isExternal: false\n  name: IRawElementProviderSimple\n  nameWithType: IRawElementProviderSimple\n  fullName: System.Windows.Automation.Provider.IRawElementProviderSimple\n- uid: System.Windows.Automation.Provider.IGridProvider.RowCount\n  parent: System.Windows.Automation.Provider.IGridProvider\n  isExternal: false\n  name: RowCount\n  nameWithType: IGridProvider.RowCount\n  fullName: System.Windows.Automation.Provider.IGridProvider.RowCount\n- uid: System.Windows.Automation.Provider.IGridProvider.ColumnCount*\n  parent: System.Windows.Automation.Provider.IGridProvider\n  isExternal: false\n  name: ColumnCount\n  nameWithType: IGridProvider.ColumnCount\n- uid: System.Windows.Automation.Provider.IGridProvider.GetItem*\n  parent: System.Windows.Automation.Provider.IGridProvider\n  isExternal: false\n  name: GetItem\n  nameWithType: IGridProvider.GetItem\n- uid: System.Windows.Automation.Provider.IGridProvider.RowCount*\n  parent: System.Windows.Automation.Provider.IGridProvider\n  isExternal: false\n  name: RowCount\n  nameWithType: IGridProvider.RowCount\n"}