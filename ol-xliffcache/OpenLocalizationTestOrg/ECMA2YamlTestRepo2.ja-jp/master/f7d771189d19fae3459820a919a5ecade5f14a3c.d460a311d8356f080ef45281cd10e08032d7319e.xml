{"nodes":[{"pos":[4160,4229],"content":"Represents a vector with four single-precision floating-point values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a vector with four single-precision floating-point values.","pos":[0,69]}]},{"pos":[4241,4306],"content":"The Vector4 structure provides support for hardware acceleration.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Vector4 structure provides support for hardware acceleration.","pos":[0,65]}]},{"pos":[4895,5001],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Numerics.Vector4\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object whose four elements have the same value.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Numerics.Vector4\"></xref> object whose four elements have the same value."},{"pos":[5132,5173],"content":"The value to assign to all four elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to assign to all four elements.","pos":[0,41]}]},{"pos":[5674,5832],"content":"Constructs a new <bpt id=\"p1\">&lt;xref href=\"System.Numerics.Vector4\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from the specified <bpt id=\"p2\">&lt;xref href=\"System.Numerics.Vector3\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object and a W component.","needQuote":true,"needEscape":true,"source":"Constructs a new <xref href=\"System.Numerics.Vector4\"></xref> object from the specified <xref href=\"System.Numerics.Vector3\"></xref> object and a W component."},{"pos":[6000,6049],"content":"The vector to use for the X, Y, and Z components.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector to use for the X, Y, and Z components.","pos":[0,49]}]},{"pos":[6107,6123],"content":"The W component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The W component.","pos":[0,16]}]},{"pos":[6673,6838],"content":"Creates a   new <bpt id=\"p1\">&lt;xref href=\"System.Numerics.Vector4\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from the specified <bpt id=\"p2\">&lt;xref href=\"System.Numerics.Vector2\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object and a Z and a W component.","needQuote":true,"needEscape":true,"source":"Creates a   new <xref href=\"System.Numerics.Vector4\"></xref> object from the specified <xref href=\"System.Numerics.Vector2\"></xref> object and a Z and a W component."},{"pos":[7015,7060],"content":"The vector to use for the X and Y components.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector to use for the X and Y components.","pos":[0,45]}]},{"pos":[7118,7134],"content":"The Z component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Z component.","pos":[0,16]}]},{"pos":[7192,7208],"content":"The W component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The W component.","pos":[0,16]}]},{"pos":[7784,7842],"content":"Creates a vector whose elements have the specified values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a vector whose elements have the specified values.","pos":[0,58]}]},{"pos":[7992,8072],"content":"The value to assign to the <bpt id=\"p1\">&lt;xref href=\"System.Numerics.Vector4.X\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> field.","needQuote":true,"needEscape":true,"source":"The value to assign to the <xref href=\"System.Numerics.Vector4.X\"></xref> field."},{"pos":[8130,8210],"content":"The value to assign to the <bpt id=\"p1\">&lt;xref href=\"System.Numerics.Vector4.Y\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> field.","needQuote":true,"needEscape":true,"source":"The value to assign to the <xref href=\"System.Numerics.Vector4.Y\"></xref> field."},{"pos":[8268,8348],"content":"The value to assign to the <bpt id=\"p1\">&lt;xref href=\"System.Numerics.Vector4.Z\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> field.","needQuote":true,"needEscape":true,"source":"The value to assign to the <xref href=\"System.Numerics.Vector4.Z\"></xref> field."},{"pos":[8406,8486],"content":"The value to assign to the <bpt id=\"p1\">&lt;xref href=\"System.Numerics.Vector4.W\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> field.","needQuote":true,"needEscape":true,"source":"The value to assign to the <xref href=\"System.Numerics.Vector4.W\"></xref> field."},{"pos":[8915,9014],"content":"Returns a vector whose elements are the absolute values of each of the specified vector's elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a vector whose elements are the absolute values of each of the specified vector's elements.","pos":[0,99]}]},{"pos":[9200,9209],"content":"A vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"A vector.","pos":[0,9]}]},{"pos":[9277,9303],"content":"The absolute value vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The absolute value vector.","pos":[0,26]}]},{"pos":[9802,9828],"content":"Adds two vectors together.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds two vectors together.","pos":[0,26]}]},{"pos":[10043,10067],"content":"The first vector to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first vector to add.","pos":[0,24]}]},{"pos":[10139,10164],"content":"The second vector to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second vector to add.","pos":[0,25]}]},{"pos":[10232,10250],"content":"The summed vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The summed vector.","pos":[0,18]}]},{"pos":[10831,10888],"content":"Restricts a vector between a minimum and a maximum value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Restricts a vector between a minimum and a maximum value.","pos":[0,57]}]},{"pos":[11136,11159],"content":"The vector to restrict.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector to restrict.","pos":[0,23]}]},{"pos":[11229,11247],"content":"The minimum value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The minimum value.","pos":[0,18]}]},{"pos":[11317,11335],"content":"The maximum value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum value.","pos":[0,18]}]},{"pos":[11403,11425],"content":"The restricted vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The restricted vector.","pos":[0,22]}]},{"pos":[11856,11911],"content":"Copies the elements of the vector to a specified array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the elements of the vector to a specified array.","pos":[0,55]}]},{"pos":[12167,12189],"content":"The destination array.","needQuote":true,"needEscape":true,"nodes":[{"content":"The destination array.","pos":[0,22]}]},{"pos":[12350,12433],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>array</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12528,12604],"content":"The number of elements in the current instance is greater than in the array.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of elements in the current instance is greater than in the array.","pos":[0,76]}]},{"pos":[12691,12730],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.","needQuote":true,"needEscape":true,"source":"<code>array</code> is multidimensional."},{"pos":[13145,13239],"content":"Copies the elements of the vector to a specified array starting at a specified index position.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the elements of the vector to a specified array starting at a specified index position.","pos":[0,94]}]},{"pos":[13252,13426],"content":"`array` must have a sufficient number of elements to accommodate the four vector elements. In other words, elements `index` through `index` + 3 must already exist in `array`.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">`array`</ph> must have a sufficient number of elements to accommodate the four vector elements.","pos":[0,90],"source":"`array` must have a sufficient number of elements to accommodate the four vector elements."},{"content":"In other words, elements <ph id=\"ph1\">`index`</ph> through <ph id=\"ph2\">`index`</ph> + 3 must already exist in <ph id=\"ph3\">`array`</ph>.","pos":[91,174],"source":" In other words, elements `index` through `index` + 3 must already exist in `array`."}]},{"pos":[13577,13599],"content":"The destination array.","needQuote":true,"needEscape":true,"nodes":[{"content":"The destination array.","pos":[0,22]}]},{"pos":[13660,13719],"content":"The index at which to copy the first element of the vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index at which to copy the first element of the vector.","pos":[0,59]}]},{"pos":[13880,13963],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>array</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14058,14134],"content":"The number of elements in the current instance is greater than in the array.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of elements in the current instance is greater than in the array.","pos":[0,76]}]},{"pos":[14250,14373],"content":"<code>index</code> is less than zero.       -or-       <code>index</code> is greater than or equal to the array length.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","pos":[0,37],"source":"<code>index</code> is less than zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is greater than or equal to the array length.","pos":[44,119],"source":"       -or-       <code>index</code> is greater than or equal to the array length."}]},{"pos":[14461,14500],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.","needQuote":true,"needEscape":true,"source":"<code>array</code> is multidimensional."},{"pos":[14966,15027],"content":"Computes the Euclidean distance between the two given points.","needQuote":true,"needEscape":true,"nodes":[{"content":"Computes the Euclidean distance between the two given points.","pos":[0,61]}]},{"pos":[15234,15250],"content":"The first point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first point.","pos":[0,16]}]},{"pos":[15323,15340],"content":"The second point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second point.","pos":[0,17]}]},{"pos":[15398,15411],"content":"The distance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The distance.","pos":[0,13]}]},{"pos":[15975,16043],"content":"Returns the Euclidean distance squared between two specified points.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the Euclidean distance squared between two specified points.","pos":[0,68]}]},{"pos":[16257,16273],"content":"The first point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first point.","pos":[0,16]}]},{"pos":[16346,16363],"content":"The second point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second point.","pos":[0,17]}]},{"pos":[16421,16442],"content":"The distance squared.","needQuote":true,"needEscape":true,"nodes":[{"content":"The distance squared.","pos":[0,21]}]},{"pos":[16968,17007],"content":"Divides the first vector by the second.","needQuote":true,"needEscape":true,"nodes":[{"content":"Divides the first vector by the second.","pos":[0,39]}]},{"pos":[17225,17242],"content":"The first vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first vector.","pos":[0,17]}]},{"pos":[17314,17332],"content":"The second vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second vector.","pos":[0,18]}]},{"pos":[17400,17439],"content":"The vector resulting from the division.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector resulting from the division.","pos":[0,39]}]},{"pos":[17933,17990],"content":"Divides the specified vector by a specified scalar value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Divides the specified vector by a specified scalar value.","pos":[0,57]}]},{"pos":[18192,18203],"content":"The vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector.","pos":[0,11]}]},{"pos":[18267,18284],"content":"The scalar value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scalar value.","pos":[0,17]}]},{"pos":[18352,18394],"content":"The vector that results from the division.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector that results from the division.","pos":[0,42]}]},{"pos":[18896,18935],"content":"Returns the dot product of two vectors.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the dot product of two vectors.","pos":[0,39]}]},{"pos":[19140,19157],"content":"The first vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first vector.","pos":[0,17]}]},{"pos":[19231,19249],"content":"The second vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second vector.","pos":[0,18]}]},{"pos":[19307,19323],"content":"The dot product.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dot product.","pos":[0,16]}]},{"pos":[19765,19847],"content":"Returns a value that indicates whether this instance and another vector are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether this instance and another vector are equal.","pos":[0,82]}]},{"pos":[19859,20040],"content":"Two vectors are equal if their <xref:System.Numerics.Vector4>, <xref:System.Numerics.Vector4>, <xref:System.Numerics.Vector4>, and <xref:System.Numerics.Vector4> elements are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Two vectors are equal if their &lt;xref:System.Numerics.Vector4&gt;, &lt;xref:System.Numerics.Vector4&gt;, &lt;xref:System.Numerics.Vector4&gt;, and &lt;xref:System.Numerics.Vector4&gt; elements are equal.","pos":[0,181],"source":"Two vectors are equal if their <xref:System.Numerics.Vector4>, <xref:System.Numerics.Vector4>, <xref:System.Numerics.Vector4>, and <xref:System.Numerics.Vector4> elements are equal."}]},{"pos":[20203,20220],"content":"The other vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The other vector.","pos":[0,17]}]},{"pos":[20279,20444],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two vectors are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two vectors are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20866,20952],"content":"Returns a value that indicates whether this instance and a specified object are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether this instance and a specified object are equal.","pos":[0,86]}]},{"pos":[20964,21100],"content":"The current instance and <ph id=\"ph1\">`obj`</ph> are equal if <ph id=\"ph2\">`obj`</ph> is a &lt;xref:System.Numerics.Vector4&gt; object and their corresponding elements are equal.","needQuote":true,"needEscape":true,"source":"The current instance and `obj` are equal if `obj` is a <xref:System.Numerics.Vector4> object and their corresponding elements are equal."},{"pos":[21241,21289],"content":"The object to compare with the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare with the current instance.","pos":[0,48]}]},{"pos":[21348,21759],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current instance and <code>obj</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref><xref uid=\"langword_csharp_\" name=\"\" href=\"\"></xref>. If <code>obj</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current instance and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> are equal; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept><bpt id=\"p4\">&lt;xref uid=\"langword_csharp_\" name=\"\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[0,243],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current instance and <code>obj</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref><xref uid=\"langword_csharp_\" name=\"\" href=\"\"></xref>."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, the method returns <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[244,411],"source":" If <code>obj</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[22158,22198],"content":"Returns the hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]},{"pos":[22333,22347],"content":"The hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash code.","pos":[0,14]}]},{"pos":[22726,22767],"content":"Returns the length of this vector object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the length of this vector object.","pos":[0,41]}]},{"pos":[22891,22911],"content":"The vector's length.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector's length.","pos":[0,20]}]},{"pos":[23320,23361],"content":"Returns the length of the vector squared.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the length of the vector squared.","pos":[0,41]}]},{"pos":[23373,23481],"content":"This operation offers better performance than a call to the <xref:System.Numerics.Vector4.Length%2A> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"This operation offers better performance than a call to the &lt;xref:System.Numerics.Vector4.Length%2A&gt; method.","pos":[0,108],"source":"This operation offers better performance than a call to the <xref:System.Numerics.Vector4.Length%2A> method."}]},{"pos":[23612,23640],"content":"The vector's length squared.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector's length squared.","pos":[0,28]}]},{"pos":[24203,24284],"content":"Performs a linear interpolation between two vectors based on the given weighting.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs a linear interpolation between two vectors based on the given weighting.","pos":[0,81]}]},{"pos":[24519,24536],"content":"The first vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first vector.","pos":[0,17]}]},{"pos":[24609,24627],"content":"The second vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second vector.","pos":[0,18]}]},{"pos":[24690,24752],"content":"A value between 0 and 1 that indicates the weight of <ph id=\"ph1\">`value2`</ph>.","needQuote":true,"needEscape":true,"source":"A value between 0 and 1 that indicates the weight of `value2`."},{"pos":[24820,24844],"content":"The interpolated vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The interpolated vector.","pos":[0,24]}]},{"pos":[25344,25450],"content":"Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.","pos":[0,106]}]},{"pos":[25670,25687],"content":"The first vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first vector.","pos":[0,17]}]},{"pos":[25760,25778],"content":"The second vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second vector.","pos":[0,18]}]},{"pos":[25846,25867],"content":"The maximized vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximized vector.","pos":[0,21]}]},{"pos":[26366,26472],"content":"Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.","pos":[0,106]}]},{"pos":[26692,26709],"content":"The first vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first vector.","pos":[0,17]}]},{"pos":[26782,26800],"content":"The second vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second vector.","pos":[0,18]}]},{"pos":[26868,26889],"content":"The minimized vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The minimized vector.","pos":[0,21]}]},{"pos":[27413,27445],"content":"Multiplies two vectors together.","needQuote":true,"needEscape":true,"nodes":[{"content":"Multiplies two vectors together.","pos":[0,32]}]},{"pos":[27665,27682],"content":"The first vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first vector.","pos":[0,17]}]},{"pos":[27754,27772],"content":"The second vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second vector.","pos":[0,18]}]},{"pos":[27840,27859],"content":"The product vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The product vector.","pos":[0,19]}]},{"pos":[28365,28407],"content":"Multiplies a vector by a specified scalar.","needQuote":true,"needEscape":true,"nodes":[{"content":"Multiplies a vector by a specified scalar.","pos":[0,42]}]},{"pos":[28609,28632],"content":"The vector to multiply.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector to multiply.","pos":[0,23]}]},{"pos":[28694,28711],"content":"The scalar value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scalar value.","pos":[0,17]}]},{"pos":[28779,28797],"content":"The scaled vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scaled vector.","pos":[0,18]}]},{"pos":[29303,29351],"content":"Multiplies a scalar value by a specified vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"Multiplies a scalar value by a specified vector.","pos":[0,48]}]},{"pos":[29543,29560],"content":"The scaled value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scaled value.","pos":[0,17]}]},{"pos":[29632,29643],"content":"The vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector.","pos":[0,11]}]},{"pos":[29711,29729],"content":"The scaled vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scaled vector.","pos":[0,18]}]},{"pos":[30176,30203],"content":"Negates a specified vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"Negates a specified vector.","pos":[0,27]}]},{"pos":[30392,30413],"content":"The vector to negate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector to negate.","pos":[0,21]}]},{"pos":[30481,30500],"content":"The negated vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The negated vector.","pos":[0,19]}]},{"pos":[30960,31051],"content":"Returns a vector with the same direction as the specified vector, but with a length of one.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a vector with the same direction as the specified vector, but with a length of one.","pos":[0,91]}]},{"pos":[31245,31269],"content":"The vector to normalize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector to normalize.","pos":[0,24]}]},{"pos":[31337,31359],"content":"The normalized vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The normalized vector.","pos":[0,22]}]},{"pos":[31717,31765],"content":"Gets a vector whose 4 elements are equal to one.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a vector whose 4 elements are equal to one.","pos":[0,48]}]},{"pos":[31777,31867],"content":"A vector whose four elements are equal to one (that is, it returns the vector <ph id=\"ph1\">`(1,1,1,1)`</ph>.","needQuote":true,"needEscape":true,"source":"A vector whose four elements are equal to one (that is, it returns the vector `(1,1,1,1)`."},{"pos":[32009,32062],"content":"Returns <bpt id=\"p1\">&lt;xref href=\"System.Numerics.Vector4\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref href=\"System.Numerics.Vector4\"></xref>."},{"pos":[32603,32629],"content":"Adds two vectors together.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds two vectors together.","pos":[0,26]}]},{"pos":[32641,32735],"content":"The Addition method defines the addition operation for <xref:System.Numerics.Vector4> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Addition method defines the addition operation for &lt;xref:System.Numerics.Vector4&gt; objects.","pos":[0,94],"source":"The Addition method defines the addition operation for <xref:System.Numerics.Vector4> objects."}]},{"pos":[32958,32982],"content":"The first vector to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first vector to add.","pos":[0,24]}]},{"pos":[33054,33079],"content":"The second vector to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second vector to add.","pos":[0,25]}]},{"pos":[33147,33165],"content":"The summed vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The summed vector.","pos":[0,18]}]},{"pos":[33714,33753],"content":"Divides the first vector by the second.","needQuote":true,"needEscape":true,"nodes":[{"content":"Divides the first vector by the second.","pos":[0,39]}]},{"pos":[33765,33859],"content":"The Division method defines the division operation for <xref:System.Numerics.Vector4> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Division method defines the division operation for &lt;xref:System.Numerics.Vector4&gt; objects.","pos":[0,94],"source":"The Division method defines the division operation for <xref:System.Numerics.Vector4> objects."}]},{"pos":[34082,34099],"content":"The first vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first vector.","pos":[0,17]}]},{"pos":[34171,34189],"content":"The second vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second vector.","pos":[0,18]}]},{"pos":[34257,34335],"content":"The vector that results from dividing <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The vector that results from dividing <code>left</code> by <code>right</code>."},{"pos":[34861,34918],"content":"Divides the specified vector by a specified scalar value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Divides the specified vector by a specified scalar value.","pos":[0,57]}]},{"pos":[34930,35024],"content":"The Division method defines the division operation for <xref:System.Numerics.Vector4> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Division method defines the division operation for &lt;xref:System.Numerics.Vector4&gt; objects.","pos":[0,94],"source":"The Division method defines the division operation for <xref:System.Numerics.Vector4> objects."}]},{"pos":[35234,35245],"content":"The vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector.","pos":[0,11]}]},{"pos":[35308,35325],"content":"The scalar value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scalar value.","pos":[0,17]}]},{"pos":[35393,35420],"content":"The result of the division.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of the division.","pos":[0,27]}]},{"pos":[35969,36064],"content":"Returns a value that indicates whether each pair of elements in two specified vectors is equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether each pair of elements in two specified vectors is equal.","pos":[0,95]}]},{"pos":[36076,36204],"content":"Two &lt;xref:System.Numerics.Vector4&gt; objects are equal if each element in <ph id=\"ph1\">`left`</ph> is equal to the corresponding element in <ph id=\"ph2\">`right`</ph>.","needQuote":true,"needEscape":true,"source":"Two <xref:System.Numerics.Vector4> objects are equal if each element in `left` is equal to the corresponding element in `right`."},{"pos":[36408,36436],"content":"The first vector to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first vector to compare.","pos":[0,28]}]},{"pos":[36508,36537],"content":"The second vector to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second vector to compare.","pos":[0,29]}]},{"pos":[36596,36786],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p3\">&lt;/code&gt;</ept> are equal; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[37345,37420],"content":"Returns a value that indicates whether two specified vectors are not equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether two specified vectors are not equal.","pos":[0,75]}]},{"pos":[37626,37654],"content":"The first vector to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first vector to compare.","pos":[0,28]}]},{"pos":[37726,37755],"content":"The second vector to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second vector to compare.","pos":[0,29]}]},{"pos":[37814,38008],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p3\">&lt;/code&gt;</ept> are not equal; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[38559,38591],"content":"Multiplies two vectors together.","needQuote":true,"needEscape":true,"nodes":[{"content":"Multiplies two vectors together.","pos":[0,32]}]},{"pos":[38603,38703],"content":"The Multiply method defines the multiplication operation for <xref:System.Numerics.Vector4> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Multiply method defines the multiplication operation for &lt;xref:System.Numerics.Vector4&gt; objects.","pos":[0,100],"source":"The Multiply method defines the multiplication operation for <xref:System.Numerics.Vector4> objects."}]},{"pos":[38926,38943],"content":"The first vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first vector.","pos":[0,17]}]},{"pos":[39015,39033],"content":"The second vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second vector.","pos":[0,18]}]},{"pos":[39101,39120],"content":"The product vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The product vector.","pos":[0,19]}]},{"pos":[39646,39707],"content":"Multiples the specified vector by the specified scalar value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Multiples the specified vector by the specified scalar value.","pos":[0,61]}]},{"pos":[39719,39819],"content":"The Multiply method defines the multiplication operation for <xref:System.Numerics.Vector4> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Multiply method defines the multiplication operation for &lt;xref:System.Numerics.Vector4&gt; objects.","pos":[0,100],"source":"The Multiply method defines the multiplication operation for <xref:System.Numerics.Vector4> objects."}]},{"pos":[40024,40035],"content":"The vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector.","pos":[0,11]}]},{"pos":[40097,40114],"content":"The scalar value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scalar value.","pos":[0,17]}]},{"pos":[40182,40200],"content":"The scaled vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scaled vector.","pos":[0,18]}]},{"pos":[40726,40777],"content":"Multiples the scalar value by the specified vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"Multiples the scalar value by the specified vector.","pos":[0,51]}]},{"pos":[40789,40889],"content":"The Multiply method defines the multiplication operation for <xref:System.Numerics.Vector4> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Multiply method defines the multiplication operation for &lt;xref:System.Numerics.Vector4&gt; objects.","pos":[0,100],"source":"The Multiply method defines the multiplication operation for <xref:System.Numerics.Vector4> objects."}]},{"pos":[41084,41095],"content":"The vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector.","pos":[0,11]}]},{"pos":[41167,41184],"content":"The scalar value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scalar value.","pos":[0,17]}]},{"pos":[41252,41270],"content":"The scaled vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scaled vector.","pos":[0,18]}]},{"pos":[41834,41877],"content":"Subtracts the second vector from the first.","needQuote":true,"needEscape":true,"nodes":[{"content":"Subtracts the second vector from the first.","pos":[0,43]}]},{"pos":[41889,41989],"content":"The Subtraction method defines the subtraction operation for <xref:System.Numerics.Vector4> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Subtraction method defines the subtraction operation for &lt;xref:System.Numerics.Vector4&gt; objects.","pos":[0,100],"source":"The Subtraction method defines the subtraction operation for <xref:System.Numerics.Vector4> objects."}]},{"pos":[42215,42232],"content":"The first vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first vector.","pos":[0,17]}]},{"pos":[42304,42322],"content":"The second vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second vector.","pos":[0,18]}]},{"pos":[42390,42473],"content":"The vector that results from subtracting <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">right</ph><ept id=\"p1\">&lt;/code&gt;</ept> from <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">left</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The vector that results from subtracting <code>right</code> from <code>left</code>."},{"pos":[42978,43007],"content":"Negates the specified vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"Negates the specified vector.","pos":[0,29]}]},{"pos":[43019,43124],"content":"The UnaryNegation method defines the unary negation operation for <xref:System.Numerics.Vector4> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The UnaryNegation method defines the unary negation operation for &lt;xref:System.Numerics.Vector4&gt; objects.","pos":[0,105],"source":"The UnaryNegation method defines the unary negation operation for <xref:System.Numerics.Vector4> objects."}]},{"pos":[43323,43344],"content":"The vector to negate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector to negate.","pos":[0,21]}]},{"pos":[43412,43431],"content":"The negated vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The negated vector.","pos":[0,19]}]},{"pos":[43906,43999],"content":"Returns a vector whose elements are the square root of each of a specified vector's elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a vector whose elements are the square root of each of a specified vector's elements.","pos":[0,93]}]},{"pos":[44192,44201],"content":"A vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"A vector.","pos":[0,9]}]},{"pos":[44269,44292],"content":"The square root vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The square root vector.","pos":[0,23]}]},{"pos":[44823,44866],"content":"Subtracts the second vector from the first.","needQuote":true,"needEscape":true,"nodes":[{"content":"Subtracts the second vector from the first.","pos":[0,43]}]},{"pos":[45086,45103],"content":"The first vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first vector.","pos":[0,17]}]},{"pos":[45175,45193],"content":"The second vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second vector.","pos":[0,18]}]},{"pos":[45261,45283],"content":"The difference vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The difference vector.","pos":[0,22]}]},{"pos":[45669,45752],"content":"Returns the string representation of the current instance using default formatting.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the string representation of the current instance using default formatting.","pos":[0,83]}]},{"pos":[45764,46190],"content":"This method returns a string in which each element of the vector is formatted using the \"G\" (general) format string and the formatting conventions of the current thread culture. The \"\\<\" and \">\" characters are used to begin and end the string, and the current culture's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName> property followed by a space is used to separate each element.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method returns a string in which each element of the vector is formatted using the \"G\" (general) format string and the formatting conventions of the current thread culture. The \"\\<\" and \">\" characters are used to begin and end the string, and the current culture's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName> property followed by a space is used to separate each element.","pos":[0,426],"nodes":[{"content":"This method returns a string in which each element of the vector is formatted using the \"G\" (general) format string and the formatting conventions of the current thread culture.","pos":[0,177]},{"content":"The \"<ph id=\"ph1\">\\&lt;</ph>\" and \"&gt;\" characters are used to begin and end the string, and the current culture's &lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName&gt; property followed by a space is used to separate each element.","pos":[178,426],"source":" The \"\\<\" and \">\" characters are used to begin and end the string, and the current culture's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName> property followed by a space is used to separate each element."}]}]},{"pos":[46326,46376],"content":"The string representation of the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string representation of the current instance.","pos":[0,50]}]},{"pos":[46810,46932],"content":"Returns the string representation of the current instance using the specified format string to format individual elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the string representation of the current instance using the specified format string to format individual elements.","pos":[0,122]}]},{"pos":[46944,47335],"content":"This method returns a string in which each element of the vector is formatted using `format` and the current culture's formatting conventions. The \"\\<\" and \">\" characters are used to begin and end the string, and the current culture's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName> property followed by a space is used to separate each element.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method returns a string in which each element of the vector is formatted using <ph id=\"ph1\">`format`</ph> and the current culture's formatting conventions.","pos":[0,142],"source":"This method returns a string in which each element of the vector is formatted using `format` and the current culture's formatting conventions."},{"content":"The \"<ph id=\"ph1\">\\&lt;</ph>\" and \"&gt;\" characters are used to begin and end the string, and the current culture's &lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName&gt; property followed by a space is used to separate each element.","pos":[143,391],"source":" The \"\\<\" and \">\" characters are used to begin and end the string, and the current culture's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName> property followed by a space is used to separate each element."}]},{"pos":[47477,47649],"content":"A <bpt id=\"p1\">[</bpt>standard<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id=\"p2\">[</bpt>custom numeric format string<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept> that defines the format of individual elements.","needQuote":true,"needEscape":true,"source":"A [standard](~/add/includes/ajax-current-ext-md.md) or [custom numeric format string](~/add/includes/ajax-current-ext-md.md) that defines the format of individual elements."},{"pos":[47707,47757],"content":"The string representation of the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string representation of the current instance.","pos":[0,50]}]},{"pos":[48285,48479],"content":"Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.","pos":[0,194]}]},{"pos":[48491,48854],"content":"This method returns a string in which each element of the vector is formatted using `format` and `formatProvider`. The \"\\<\" and \">\" characters are used to begin and end the string, and the format provider's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName> property followed by a space is used to separate each element.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method returns a string in which each element of the vector is formatted using <ph id=\"ph1\">`format`</ph> and <ph id=\"ph2\">`formatProvider`</ph>.","pos":[0,114],"source":"This method returns a string in which each element of the vector is formatted using `format` and `formatProvider`."},{"content":"The \"<ph id=\"ph1\">\\&lt;</ph>\" and \"&gt;\" characters are used to begin and end the string, and the format provider's &lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName&gt; property followed by a space is used to separate each element.","pos":[115,363],"source":" The \"\\<\" and \">\" characters are used to begin and end the string, and the format provider's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName> property followed by a space is used to separate each element."}]},{"pos":[49028,49200],"content":"A <bpt id=\"p1\">[</bpt>standard<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id=\"p2\">[</bpt>custom numeric format string<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept> that defines the format of individual elements.","needQuote":true,"needEscape":true,"source":"A [standard](~/add/includes/ajax-current-ext-md.md) or [custom numeric format string](~/add/includes/ajax-current-ext-md.md) that defines the format of individual elements."},{"pos":[49280,49352],"content":"A format provider that supplies culture-specific formatting information.","needQuote":true,"needEscape":true,"nodes":[{"content":"A format provider that supplies culture-specific formatting information.","pos":[0,72]}]},{"pos":[49410,49460],"content":"The string representation of the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string representation of the current instance.","pos":[0,50]}]},{"pos":[50004,50066],"content":"Transforms a two-dimensional vector by a specified 4x4 matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"Transforms a two-dimensional vector by a specified 4x4 matrix.","pos":[0,62]}]},{"pos":[50298,50322],"content":"The vector to transform.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector to transform.","pos":[0,24]}]},{"pos":[50397,50423],"content":"The transformation matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transformation matrix.","pos":[0,26]}]},{"pos":[50491,50514],"content":"The transformed vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transformed vector.","pos":[0,23]}]},{"pos":[51064,51143],"content":"Transforms a two-dimensional vector by the specified Quaternion rotation value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Transforms a two-dimensional vector by the specified Quaternion rotation value.","pos":[0,79]}]},{"pos":[51372,51393],"content":"The vector to rotate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector to rotate.","pos":[0,21]}]},{"pos":[51471,51493],"content":"The rotation to apply.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rotation to apply.","pos":[0,22]}]},{"pos":[51561,51584],"content":"The transformed vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transformed vector.","pos":[0,23]}]},{"pos":[52129,52193],"content":"Transforms a three-dimensional vector by a specified 4x4 matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"Transforms a three-dimensional vector by a specified 4x4 matrix.","pos":[0,64]}]},{"pos":[52425,52449],"content":"The vector to transform.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector to transform.","pos":[0,24]}]},{"pos":[52524,52550],"content":"The transformation matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transformation matrix.","pos":[0,26]}]},{"pos":[52618,52641],"content":"The transformed vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transformed vector.","pos":[0,23]}]},{"pos":[53191,53272],"content":"Transforms a three-dimensional vector by the specified Quaternion rotation value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Transforms a three-dimensional vector by the specified Quaternion rotation value.","pos":[0,81]}]},{"pos":[53501,53522],"content":"The vector to rotate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector to rotate.","pos":[0,21]}]},{"pos":[53600,53622],"content":"The rotation to apply.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rotation to apply.","pos":[0,22]}]},{"pos":[53690,53713],"content":"The transformed vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transformed vector.","pos":[0,23]}]},{"pos":[54258,54321],"content":"Transforms a four-dimensional vector by a specified 4x4 matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"Transforms a four-dimensional vector by a specified 4x4 matrix.","pos":[0,63]}]},{"pos":[54549,54573],"content":"The vector to transform.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector to transform.","pos":[0,24]}]},{"pos":[54648,54674],"content":"The transformation matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transformation matrix.","pos":[0,26]}]},{"pos":[54742,54765],"content":"The transformed vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transformed vector.","pos":[0,23]}]},{"pos":[55315,55395],"content":"Transforms a four-dimensional vector by the specified Quaternion rotation value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Transforms a four-dimensional vector by the specified Quaternion rotation value.","pos":[0,80]}]},{"pos":[55624,55645],"content":"The vector to rotate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vector to rotate.","pos":[0,21]}]},{"pos":[55723,55745],"content":"The rotation to apply.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rotation to apply.","pos":[0,22]}]},{"pos":[55813,55836],"content":"The transformed vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transformed vector.","pos":[0,23]}]},{"pos":[56204,56230],"content":"Gets the vector (0,0,0,1).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the vector (0,0,0,1).","pos":[0,26]}]},{"pos":[56374,56397],"content":"The vector <ph id=\"ph1\">`(0,0,0,1)`</ph>.","needQuote":true,"needEscape":true,"source":"The vector `(0,0,0,1)`."},{"pos":[56761,56787],"content":"Gets the vector (1,0,0,0).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the vector (1,0,0,0).","pos":[0,26]}]},{"pos":[56931,56954],"content":"The vector <ph id=\"ph1\">`(1,0,0,0)`</ph>.","needQuote":true,"needEscape":true,"source":"The vector `(1,0,0,0)`."},{"pos":[57318,57344],"content":"Gets the vector (0,1,0,0).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the vector (0,1,0,0).","pos":[0,26]}]},{"pos":[57488,57512],"content":"The vector <ph id=\"ph1\">`(0,1,0,0)`</ph>..","needQuote":true,"needEscape":true,"source":"The vector `(0,1,0,0)`.."},{"pos":[57876,57904],"content":"Gets the vector <ph id=\"ph1\">`(0,0,1,0)`</ph>.","needQuote":true,"needEscape":true,"source":"Gets the vector `(0,0,1,0)`."},{"pos":[58048,58071],"content":"The vector <ph id=\"ph1\">`(0,0,1,0)`</ph>.","needQuote":true,"needEscape":true,"source":"The vector `(0,0,1,0)`."},{"pos":[58412,58442],"content":"The W component of the vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The W component of the vector.","pos":[0,30]}]},{"pos":[58539,58551],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[58849,58879],"content":"The X component of the vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The X component of the vector.","pos":[0,30]}]},{"pos":[58976,58988],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[59286,59316],"content":"The Y component of the vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Y component of the vector.","pos":[0,30]}]},{"pos":[59413,59425],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[59723,59753],"content":"The Z component of the vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Z component of the vector.","pos":[0,30]}]},{"pos":[59850,59862],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[60178,60227],"content":"Gets a vector whose 4 elements are equal to zero.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a vector whose 4 elements are equal to zero.","pos":[0,49]}]},{"pos":[60370,60461],"content":"A vector whose four elements are equal to zero (that is, it returns the vector <ph id=\"ph1\">`(0,0,0,0)`</ph>.","needQuote":true,"needEscape":true,"source":"A vector whose four elements are equal to zero (that is, it returns the vector `(0,0,0,0)`."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Numerics.Vector4\n  id: Vector4\n  children:\n  - System.Numerics.Vector4.#ctor(System.Single)\n  - System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)\n  - System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)\n  - System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)\n  - System.Numerics.Vector4.Abs(System.Numerics.Vector4)\n  - System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.CopyTo(System.Single[])\n  - System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)\n  - System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)\n  - System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.Equals(System.Numerics.Vector4)\n  - System.Numerics.Vector4.Equals(System.Object)\n  - System.Numerics.Vector4.GetHashCode\n  - System.Numerics.Vector4.Length\n  - System.Numerics.Vector4.LengthSquared\n  - System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)\n  - System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)\n  - System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)\n  - System.Numerics.Vector4.Negate(System.Numerics.Vector4)\n  - System.Numerics.Vector4.Normalize(System.Numerics.Vector4)\n  - System.Numerics.Vector4.One\n  - System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)\n  - System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)\n  - System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)\n  - System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)\n  - System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)\n  - System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.ToString\n  - System.Numerics.Vector4.ToString(System.String)\n  - System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)\n  - System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)\n  - System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)\n  - System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)\n  - System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)\n  - System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)\n  - System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)\n  - System.Numerics.Vector4.UnitW\n  - System.Numerics.Vector4.UnitX\n  - System.Numerics.Vector4.UnitY\n  - System.Numerics.Vector4.UnitZ\n  - System.Numerics.Vector4.W\n  - System.Numerics.Vector4.X\n  - System.Numerics.Vector4.Y\n  - System.Numerics.Vector4.Z\n  - System.Numerics.Vector4.Zero\n  langs:\n  - csharp\n  name: Vector4\n  nameWithType: Vector4\n  fullName: System.Numerics.Vector4\n  type: Struct\n  summary: Represents a vector with four single-precision floating-point values.\n  remarks: The Vector4 structure provides support for hardware acceleration.\n  syntax:\n    content: 'public struct Vector4 : IEquatable<System.Numerics.Vector4>, IFormattable'\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.IEquatable<System.Numerics.Vector4>\n  - System.IFormattable\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.#ctor(System.Single)\n  id: '#ctor(System.Single)'\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Vector4(Single)\n  nameWithType: Vector4.Vector4(Single)\n  fullName: System.Numerics.Vector4.Vector4(Single)\n  type: Constructor\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Creates a new <xref href=\"System.Numerics.Vector4\"></xref> object whose four elements have the same value.\n  syntax:\n    content: public Vector4 (float value);\n    parameters:\n    - id: value\n      type: System.Single\n      description: The value to assign to all four elements.\n  overload: System.Numerics.Vector4.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)\n  id: '#ctor(System.Numerics.Vector3,System.Single)'\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Vector4(Vector3,Single)\n  nameWithType: Vector4.Vector4(Vector3,Single)\n  fullName: System.Numerics.Vector4.Vector4(Vector3,Single)\n  type: Constructor\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Constructs a new <xref href=\"System.Numerics.Vector4\"></xref> object from the specified <xref href=\"System.Numerics.Vector3\"></xref> object and a W component.\n  syntax:\n    content: public Vector4 (System.Numerics.Vector3 value, float w);\n    parameters:\n    - id: value\n      type: System.Numerics.Vector3\n      description: The vector to use for the X, Y, and Z components.\n    - id: w\n      type: System.Single\n      description: The W component.\n  overload: System.Numerics.Vector4.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)\n  id: '#ctor(System.Numerics.Vector2,System.Single,System.Single)'\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Vector4(Vector2,Single,Single)\n  nameWithType: Vector4.Vector4(Vector2,Single,Single)\n  fullName: System.Numerics.Vector4.Vector4(Vector2,Single,Single)\n  type: Constructor\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Creates a   new <xref href=\"System.Numerics.Vector4\"></xref> object from the specified <xref href=\"System.Numerics.Vector2\"></xref> object and a Z and a W component.\n  syntax:\n    content: public Vector4 (System.Numerics.Vector2 value, float z, float w);\n    parameters:\n    - id: value\n      type: System.Numerics.Vector2\n      description: The vector to use for the X and Y components.\n    - id: z\n      type: System.Single\n      description: The Z component.\n    - id: w\n      type: System.Single\n      description: The W component.\n  overload: System.Numerics.Vector4.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)\n  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Vector4(Single,Single,Single,Single)\n  nameWithType: Vector4.Vector4(Single,Single,Single,Single)\n  fullName: System.Numerics.Vector4.Vector4(Single,Single,Single,Single)\n  type: Constructor\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Creates a vector whose elements have the specified values.\n  syntax:\n    content: public Vector4 (float x, float y, float z, float w);\n    parameters:\n    - id: x\n      type: System.Single\n      description: The value to assign to the <xref href=\"System.Numerics.Vector4.X\"></xref> field.\n    - id: y\n      type: System.Single\n      description: The value to assign to the <xref href=\"System.Numerics.Vector4.Y\"></xref> field.\n    - id: z\n      type: System.Single\n      description: The value to assign to the <xref href=\"System.Numerics.Vector4.Z\"></xref> field.\n    - id: w\n      type: System.Single\n      description: The value to assign to the <xref href=\"System.Numerics.Vector4.W\"></xref> field.\n  overload: System.Numerics.Vector4.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Abs(System.Numerics.Vector4)\n  id: Abs(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Abs(Vector4)\n  nameWithType: Vector4.Abs(Vector4)\n  fullName: System.Numerics.Vector4.Abs(Vector4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns a vector whose elements are the absolute values of each of the specified vector's elements.\n  syntax:\n    content: public static System.Numerics.Vector4 Abs (System.Numerics.Vector4 value);\n    parameters:\n    - id: value\n      type: System.Numerics.Vector4\n      description: A vector.\n    return:\n      type: System.Numerics.Vector4\n      description: The absolute value vector.\n  overload: System.Numerics.Vector4.Abs*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Add(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Add(Vector4,Vector4)\n  nameWithType: Vector4.Add(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Add(Vector4,Vector4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Adds two vectors together.\n  syntax:\n    content: public static System.Numerics.Vector4 Add (System.Numerics.Vector4 left, System.Numerics.Vector4 right);\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: The first vector to add.\n    - id: right\n      type: System.Numerics.Vector4\n      description: The second vector to add.\n    return:\n      type: System.Numerics.Vector4\n      description: The summed vector.\n  overload: System.Numerics.Vector4.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Clamp(Vector4,Vector4,Vector4)\n  nameWithType: Vector4.Clamp(Vector4,Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Clamp(Vector4,Vector4,Vector4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Restricts a vector between a minimum and a maximum value.\n  syntax:\n    content: public static System.Numerics.Vector4 Clamp (System.Numerics.Vector4 value1, System.Numerics.Vector4 min, System.Numerics.Vector4 max);\n    parameters:\n    - id: value1\n      type: System.Numerics.Vector4\n      description: The vector to restrict.\n    - id: min\n      type: System.Numerics.Vector4\n      description: The minimum value.\n    - id: max\n      type: System.Numerics.Vector4\n      description: The maximum value.\n    return:\n      type: System.Numerics.Vector4\n      description: The restricted vector.\n  overload: System.Numerics.Vector4.Clamp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.CopyTo(System.Single[])\n  id: CopyTo(System.Single[])\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: CopyTo(Single[])\n  nameWithType: Vector4.CopyTo(Single[])\n  fullName: System.Numerics.Vector4.CopyTo(Single[])\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Copies the elements of the vector to a specified array.\n  remarks: '`array` must have at least four elements. The method copies the vector''s elements starting at index 0.'\n  syntax:\n    content: public void CopyTo (float[] array);\n    parameters:\n    - id: array\n      type: System.Single[]\n      description: The destination array.\n  overload: System.Numerics.Vector4.CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The number of elements in the current instance is greater than in the array.\n  - type: System.RankException\n    commentId: T:System.RankException\n    description: <code>array</code> is multidimensional.\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)\n  id: CopyTo(System.Single[],System.Int32)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: CopyTo(Single[],Int32)\n  nameWithType: Vector4.CopyTo(Single[],Int32)\n  fullName: System.Numerics.Vector4.CopyTo(Single[],Int32)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Copies the elements of the vector to a specified array starting at a specified index position.\n  remarks: '`array` must have a sufficient number of elements to accommodate the four vector elements. In other words, elements `index` through `index` + 3 must already exist in `array`.'\n  syntax:\n    content: public void CopyTo (float[] array, int index);\n    parameters:\n    - id: array\n      type: System.Single[]\n      description: The destination array.\n    - id: index\n      type: System.Int32\n      description: The index at which to copy the first element of the vector.\n  overload: System.Numerics.Vector4.CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The number of elements in the current instance is greater than in the array.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is greater than or equal to the array length.\"\n  - type: System.RankException\n    commentId: T:System.RankException\n    description: <code>array</code> is multidimensional.\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Distance(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Distance(Vector4,Vector4)\n  nameWithType: Vector4.Distance(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Distance(Vector4,Vector4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Computes the Euclidean distance between the two given points.\n  syntax:\n    content: public static float Distance (System.Numerics.Vector4 value1, System.Numerics.Vector4 value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Vector4\n      description: The first point.\n    - id: value2\n      type: System.Numerics.Vector4\n      description: The second point.\n    return:\n      type: System.Single\n      description: The distance.\n  overload: System.Numerics.Vector4.Distance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: DistanceSquared(Vector4,Vector4)\n  nameWithType: Vector4.DistanceSquared(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.DistanceSquared(Vector4,Vector4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns the Euclidean distance squared between two specified points.\n  syntax:\n    content: public static float DistanceSquared (System.Numerics.Vector4 value1, System.Numerics.Vector4 value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Vector4\n      description: The first point.\n    - id: value2\n      type: System.Numerics.Vector4\n      description: The second point.\n    return:\n      type: System.Single\n      description: The distance squared.\n  overload: System.Numerics.Vector4.DistanceSquared*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Divide(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Divide(Vector4,Vector4)\n  nameWithType: Vector4.Divide(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Divide(Vector4,Vector4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Divides the first vector by the second.\n  syntax:\n    content: public static System.Numerics.Vector4 Divide (System.Numerics.Vector4 left, System.Numerics.Vector4 right);\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: The first vector.\n    - id: right\n      type: System.Numerics.Vector4\n      description: The second vector.\n    return:\n      type: System.Numerics.Vector4\n      description: The vector resulting from the division.\n  overload: System.Numerics.Vector4.Divide*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)\n  id: Divide(System.Numerics.Vector4,System.Single)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Divide(Vector4,Single)\n  nameWithType: Vector4.Divide(Vector4,Single)\n  fullName: System.Numerics.Vector4.Divide(Vector4,Single)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Divides the specified vector by a specified scalar value.\n  syntax:\n    content: public static System.Numerics.Vector4 Divide (System.Numerics.Vector4 left, float divisor);\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: The vector.\n    - id: divisor\n      type: System.Single\n      description: The scalar value.\n    return:\n      type: System.Numerics.Vector4\n      description: The vector that results from the division.\n  overload: System.Numerics.Vector4.Divide*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Dot(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Dot(Vector4,Vector4)\n  nameWithType: Vector4.Dot(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Dot(Vector4,Vector4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns the dot product of two vectors.\n  syntax:\n    content: public static float Dot (System.Numerics.Vector4 vector1, System.Numerics.Vector4 vector2);\n    parameters:\n    - id: vector1\n      type: System.Numerics.Vector4\n      description: The first vector.\n    - id: vector2\n      type: System.Numerics.Vector4\n      description: The second vector.\n    return:\n      type: System.Single\n      description: The dot product.\n  overload: System.Numerics.Vector4.Dot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Equals(System.Numerics.Vector4)\n  id: Equals(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Equals(Vector4)\n  nameWithType: Vector4.Equals(Vector4)\n  fullName: System.Numerics.Vector4.Equals(Vector4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether this instance and another vector are equal.\n  remarks: Two vectors are equal if their <xref:System.Numerics.Vector4>, <xref:System.Numerics.Vector4>, <xref:System.Numerics.Vector4>, and <xref:System.Numerics.Vector4> elements are equal.\n  syntax:\n    content: public bool Equals (System.Numerics.Vector4 other);\n    parameters:\n    - id: other\n      type: System.Numerics.Vector4\n      description: The other vector.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two vectors are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Numerics.Vector4.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Vector4.Equals(Object)\n  fullName: System.Numerics.Vector4.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether this instance and a specified object are equal.\n  remarks: The current instance and `obj` are equal if `obj` is a <xref:System.Numerics.Vector4> object and their corresponding elements are equal.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with the current instance.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current instance and <code>obj</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref><xref uid=\"langword_csharp_\" name=\"\" href=\"\"></xref>. If <code>obj</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Numerics.Vector4.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.GetHashCode\n  id: GetHashCode\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Vector4.GetHashCode()\n  fullName: System.Numerics.Vector4.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code.\n  overload: System.Numerics.Vector4.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Length\n  id: Length\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Length()\n  nameWithType: Vector4.Length()\n  fullName: System.Numerics.Vector4.Length()\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns the length of this vector object.\n  syntax:\n    content: public float Length ();\n    parameters: []\n    return:\n      type: System.Single\n      description: The vector's length.\n  overload: System.Numerics.Vector4.Length*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.LengthSquared\n  id: LengthSquared\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: LengthSquared()\n  nameWithType: Vector4.LengthSquared()\n  fullName: System.Numerics.Vector4.LengthSquared()\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns the length of the vector squared.\n  remarks: This operation offers better performance than a call to the <xref:System.Numerics.Vector4.Length%2A> method.\n  syntax:\n    content: public float LengthSquared ();\n    parameters: []\n    return:\n      type: System.Single\n      description: The vector's length squared.\n  overload: System.Numerics.Vector4.LengthSquared*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)\n  id: Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Lerp(Vector4,Vector4,Single)\n  nameWithType: Vector4.Lerp(Vector4,Vector4,Single)\n  fullName: System.Numerics.Vector4.Lerp(Vector4,Vector4,Single)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Performs a linear interpolation between two vectors based on the given weighting.\n  syntax:\n    content: public static System.Numerics.Vector4 Lerp (System.Numerics.Vector4 value1, System.Numerics.Vector4 value2, float amount);\n    parameters:\n    - id: value1\n      type: System.Numerics.Vector4\n      description: The first vector.\n    - id: value2\n      type: System.Numerics.Vector4\n      description: The second vector.\n    - id: amount\n      type: System.Single\n      description: A value between 0 and 1 that indicates the weight of `value2`.\n    return:\n      type: System.Numerics.Vector4\n      description: The interpolated vector.\n  overload: System.Numerics.Vector4.Lerp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Max(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Max(Vector4,Vector4)\n  nameWithType: Vector4.Max(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Max(Vector4,Vector4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.\n  syntax:\n    content: public static System.Numerics.Vector4 Max (System.Numerics.Vector4 value1, System.Numerics.Vector4 value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Vector4\n      description: The first vector.\n    - id: value2\n      type: System.Numerics.Vector4\n      description: The second vector.\n    return:\n      type: System.Numerics.Vector4\n      description: The maximized vector.\n  overload: System.Numerics.Vector4.Max*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Min(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Min(Vector4,Vector4)\n  nameWithType: Vector4.Min(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Min(Vector4,Vector4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.\n  syntax:\n    content: public static System.Numerics.Vector4 Min (System.Numerics.Vector4 value1, System.Numerics.Vector4 value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Vector4\n      description: The first vector.\n    - id: value2\n      type: System.Numerics.Vector4\n      description: The second vector.\n    return:\n      type: System.Numerics.Vector4\n      description: The minimized vector.\n  overload: System.Numerics.Vector4.Min*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Multiply(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Multiply(Vector4,Vector4)\n  nameWithType: Vector4.Multiply(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Multiply(Vector4,Vector4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Multiplies two vectors together.\n  syntax:\n    content: public static System.Numerics.Vector4 Multiply (System.Numerics.Vector4 left, System.Numerics.Vector4 right);\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: The first vector.\n    - id: right\n      type: System.Numerics.Vector4\n      description: The second vector.\n    return:\n      type: System.Numerics.Vector4\n      description: The product vector.\n  overload: System.Numerics.Vector4.Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)\n  id: Multiply(System.Numerics.Vector4,System.Single)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Multiply(Vector4,Single)\n  nameWithType: Vector4.Multiply(Vector4,Single)\n  fullName: System.Numerics.Vector4.Multiply(Vector4,Single)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Multiplies a vector by a specified scalar.\n  syntax:\n    content: public static System.Numerics.Vector4 Multiply (System.Numerics.Vector4 left, float right);\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: The vector to multiply.\n    - id: right\n      type: System.Single\n      description: The scalar value.\n    return:\n      type: System.Numerics.Vector4\n      description: The scaled vector.\n  overload: System.Numerics.Vector4.Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)\n  id: Multiply(System.Single,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Multiply(Single,Vector4)\n  nameWithType: Vector4.Multiply(Single,Vector4)\n  fullName: System.Numerics.Vector4.Multiply(Single,Vector4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Multiplies a scalar value by a specified vector.\n  syntax:\n    content: public static System.Numerics.Vector4 Multiply (float left, System.Numerics.Vector4 right);\n    parameters:\n    - id: left\n      type: System.Single\n      description: The scaled value.\n    - id: right\n      type: System.Numerics.Vector4\n      description: The vector.\n    return:\n      type: System.Numerics.Vector4\n      description: The scaled vector.\n  overload: System.Numerics.Vector4.Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Negate(System.Numerics.Vector4)\n  id: Negate(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Negate(Vector4)\n  nameWithType: Vector4.Negate(Vector4)\n  fullName: System.Numerics.Vector4.Negate(Vector4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Negates a specified vector.\n  syntax:\n    content: public static System.Numerics.Vector4 Negate (System.Numerics.Vector4 value);\n    parameters:\n    - id: value\n      type: System.Numerics.Vector4\n      description: The vector to negate.\n    return:\n      type: System.Numerics.Vector4\n      description: The negated vector.\n  overload: System.Numerics.Vector4.Negate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Normalize(System.Numerics.Vector4)\n  id: Normalize(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Normalize(Vector4)\n  nameWithType: Vector4.Normalize(Vector4)\n  fullName: System.Numerics.Vector4.Normalize(Vector4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns a vector with the same direction as the specified vector, but with a length of one.\n  syntax:\n    content: public static System.Numerics.Vector4 Normalize (System.Numerics.Vector4 vector);\n    parameters:\n    - id: vector\n      type: System.Numerics.Vector4\n      description: The vector to normalize.\n    return:\n      type: System.Numerics.Vector4\n      description: The normalized vector.\n  overload: System.Numerics.Vector4.Normalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.One\n  id: One\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: One\n  nameWithType: Vector4.One\n  fullName: System.Numerics.Vector4.One\n  type: Property\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Gets a vector whose 4 elements are equal to one.\n  remarks: A vector whose four elements are equal to one (that is, it returns the vector `(1,1,1,1)`.\n  syntax:\n    content: public static System.Numerics.Vector4 One { get; }\n    return:\n      type: System.Numerics.Vector4\n      description: Returns <xref href=\"System.Numerics.Vector4\"></xref>.\n  overload: System.Numerics.Vector4.One*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: op_Addition(Vector4,Vector4)\n  nameWithType: Vector4.op_Addition(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.op_Addition(Vector4,Vector4)\n  type: Operator\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Adds two vectors together.\n  remarks: The Addition method defines the addition operation for <xref:System.Numerics.Vector4> objects.\n  syntax:\n    content: public static System.Numerics.Vector4 op_Addition (System.Numerics.Vector4 left, System.Numerics.Vector4 right);\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: The first vector to add.\n    - id: right\n      type: System.Numerics.Vector4\n      description: The second vector to add.\n    return:\n      type: System.Numerics.Vector4\n      description: The summed vector.\n  overload: System.Numerics.Vector4.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: op_Division(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: op_Division(Vector4,Vector4)\n  nameWithType: Vector4.op_Division(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.op_Division(Vector4,Vector4)\n  type: Operator\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Divides the first vector by the second.\n  remarks: The Division method defines the division operation for <xref:System.Numerics.Vector4> objects.\n  syntax:\n    content: public static System.Numerics.Vector4 op_Division (System.Numerics.Vector4 left, System.Numerics.Vector4 right);\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: The first vector.\n    - id: right\n      type: System.Numerics.Vector4\n      description: The second vector.\n    return:\n      type: System.Numerics.Vector4\n      description: The vector that results from dividing <code>left</code> by <code>right</code>.\n  overload: System.Numerics.Vector4.op_Division*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)\n  id: op_Division(System.Numerics.Vector4,System.Single)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: op_Division(Vector4,Single)\n  nameWithType: Vector4.op_Division(Vector4,Single)\n  fullName: System.Numerics.Vector4.op_Division(Vector4,Single)\n  type: Operator\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Divides the specified vector by a specified scalar value.\n  remarks: The Division method defines the division operation for <xref:System.Numerics.Vector4> objects.\n  syntax:\n    content: public static System.Numerics.Vector4 op_Division (System.Numerics.Vector4 value1, float value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Vector4\n      description: The vector.\n    - id: value2\n      type: System.Single\n      description: The scalar value.\n    return:\n      type: System.Numerics.Vector4\n      description: The result of the division.\n  overload: System.Numerics.Vector4.op_Division*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: op_Equality(Vector4,Vector4)\n  nameWithType: Vector4.op_Equality(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.op_Equality(Vector4,Vector4)\n  type: Operator\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether each pair of elements in two specified vectors is equal.\n  remarks: Two <xref:System.Numerics.Vector4> objects are equal if each element in `left` is equal to the corresponding element in `right`.\n  syntax:\n    content: public static bool op_Equality (System.Numerics.Vector4 left, System.Numerics.Vector4 right);\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: The first vector to compare.\n    - id: right\n      type: System.Numerics.Vector4\n      description: The second vector to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Numerics.Vector4.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: op_Inequality(Vector4,Vector4)\n  nameWithType: Vector4.op_Inequality(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.op_Inequality(Vector4,Vector4)\n  type: Operator\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether two specified vectors are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.Numerics.Vector4 left, System.Numerics.Vector4 right);\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: The first vector to compare.\n    - id: right\n      type: System.Numerics.Vector4\n      description: The second vector to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Numerics.Vector4.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: op_Multiply(Vector4,Vector4)\n  nameWithType: Vector4.op_Multiply(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.op_Multiply(Vector4,Vector4)\n  type: Operator\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Multiplies two vectors together.\n  remarks: The Multiply method defines the multiplication operation for <xref:System.Numerics.Vector4> objects.\n  syntax:\n    content: public static System.Numerics.Vector4 op_Multiply (System.Numerics.Vector4 left, System.Numerics.Vector4 right);\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: The first vector.\n    - id: right\n      type: System.Numerics.Vector4\n      description: The second vector.\n    return:\n      type: System.Numerics.Vector4\n      description: The product vector.\n  overload: System.Numerics.Vector4.op_Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)\n  id: op_Multiply(System.Numerics.Vector4,System.Single)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: op_Multiply(Vector4,Single)\n  nameWithType: Vector4.op_Multiply(Vector4,Single)\n  fullName: System.Numerics.Vector4.op_Multiply(Vector4,Single)\n  type: Operator\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Multiples the specified vector by the specified scalar value.\n  remarks: The Multiply method defines the multiplication operation for <xref:System.Numerics.Vector4> objects.\n  syntax:\n    content: public static System.Numerics.Vector4 op_Multiply (System.Numerics.Vector4 left, float right);\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: The vector.\n    - id: right\n      type: System.Single\n      description: The scalar value.\n    return:\n      type: System.Numerics.Vector4\n      description: The scaled vector.\n  overload: System.Numerics.Vector4.op_Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)\n  id: op_Multiply(System.Single,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: op_Multiply(Single,Vector4)\n  nameWithType: Vector4.op_Multiply(Single,Vector4)\n  fullName: System.Numerics.Vector4.op_Multiply(Single,Vector4)\n  type: Operator\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Multiples the scalar value by the specified vector.\n  remarks: The Multiply method defines the multiplication operation for <xref:System.Numerics.Vector4> objects.\n  syntax:\n    content: public static System.Numerics.Vector4 op_Multiply (float left, System.Numerics.Vector4 right);\n    parameters:\n    - id: left\n      type: System.Single\n      description: The vector.\n    - id: right\n      type: System.Numerics.Vector4\n      description: The scalar value.\n    return:\n      type: System.Numerics.Vector4\n      description: The scaled vector.\n  overload: System.Numerics.Vector4.op_Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: op_Subtraction(Vector4,Vector4)\n  nameWithType: Vector4.op_Subtraction(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.op_Subtraction(Vector4,Vector4)\n  type: Operator\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Subtracts the second vector from the first.\n  remarks: The Subtraction method defines the subtraction operation for <xref:System.Numerics.Vector4> objects.\n  syntax:\n    content: public static System.Numerics.Vector4 op_Subtraction (System.Numerics.Vector4 left, System.Numerics.Vector4 right);\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: The first vector.\n    - id: right\n      type: System.Numerics.Vector4\n      description: The second vector.\n    return:\n      type: System.Numerics.Vector4\n      description: The vector that results from subtracting <code>right</code> from <code>left</code>.\n  overload: System.Numerics.Vector4.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)\n  id: op_UnaryNegation(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: op_UnaryNegation(Vector4)\n  nameWithType: Vector4.op_UnaryNegation(Vector4)\n  fullName: System.Numerics.Vector4.op_UnaryNegation(Vector4)\n  type: Operator\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Negates the specified vector.\n  remarks: The UnaryNegation method defines the unary negation operation for <xref:System.Numerics.Vector4> objects.\n  syntax:\n    content: public static System.Numerics.Vector4 op_UnaryNegation (System.Numerics.Vector4 value);\n    parameters:\n    - id: value\n      type: System.Numerics.Vector4\n      description: The vector to negate.\n    return:\n      type: System.Numerics.Vector4\n      description: The negated vector.\n  overload: System.Numerics.Vector4.op_UnaryNegation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)\n  id: SquareRoot(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: SquareRoot(Vector4)\n  nameWithType: Vector4.SquareRoot(Vector4)\n  fullName: System.Numerics.Vector4.SquareRoot(Vector4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns a vector whose elements are the square root of each of a specified vector's elements.\n  syntax:\n    content: public static System.Numerics.Vector4 SquareRoot (System.Numerics.Vector4 value);\n    parameters:\n    - id: value\n      type: System.Numerics.Vector4\n      description: A vector.\n    return:\n      type: System.Numerics.Vector4\n      description: The square root vector.\n  overload: System.Numerics.Vector4.SquareRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Subtract(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Subtract(Vector4,Vector4)\n  nameWithType: Vector4.Subtract(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Subtract(Vector4,Vector4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Subtracts the second vector from the first.\n  syntax:\n    content: public static System.Numerics.Vector4 Subtract (System.Numerics.Vector4 left, System.Numerics.Vector4 right);\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: The first vector.\n    - id: right\n      type: System.Numerics.Vector4\n      description: The second vector.\n    return:\n      type: System.Numerics.Vector4\n      description: The difference vector.\n  overload: System.Numerics.Vector4.Subtract*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.ToString\n  id: ToString\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Vector4.ToString()\n  fullName: System.Numerics.Vector4.ToString()\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns the string representation of the current instance using default formatting.\n  remarks: This method returns a string in which each element of the vector is formatted using the \"G\" (general) format string and the formatting conventions of the current thread culture. The \"\\<\" and \">\" characters are used to begin and end the string, and the current culture's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName> property followed by a space is used to separate each element.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of the current instance.\n  overload: System.Numerics.Vector4.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.ToString(System.String)\n  id: ToString(System.String)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: ToString(String)\n  nameWithType: Vector4.ToString(String)\n  fullName: System.Numerics.Vector4.ToString(String)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns the string representation of the current instance using the specified format string to format individual elements.\n  remarks: This method returns a string in which each element of the vector is formatted using `format` and the current culture's formatting conventions. The \"\\<\" and \">\" characters are used to begin and end the string, and the current culture's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName> property followed by a space is used to separate each element.\n  syntax:\n    content: public string ToString (string format);\n    parameters:\n    - id: format\n      type: System.String\n      description: A [standard](~/add/includes/ajax-current-ext-md.md) or [custom numeric format string](~/add/includes/ajax-current-ext-md.md) that defines the format of individual elements.\n    return:\n      type: System.String\n      description: The string representation of the current instance.\n  overload: System.Numerics.Vector4.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)\n  id: ToString(System.String,System.IFormatProvider)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: ToString(String,IFormatProvider)\n  nameWithType: Vector4.ToString(String,IFormatProvider)\n  fullName: System.Numerics.Vector4.ToString(String,IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.\n  remarks: This method returns a string in which each element of the vector is formatted using `format` and `formatProvider`. The \"\\<\" and \">\" characters are used to begin and end the string, and the format provider's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName> property followed by a space is used to separate each element.\n  syntax:\n    content: public string ToString (string format, IFormatProvider formatProvider);\n    parameters:\n    - id: format\n      type: System.String\n      description: A [standard](~/add/includes/ajax-current-ext-md.md) or [custom numeric format string](~/add/includes/ajax-current-ext-md.md) that defines the format of individual elements.\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: A format provider that supplies culture-specific formatting information.\n    return:\n      type: System.String\n      description: The string representation of the current instance.\n  overload: System.Numerics.Vector4.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)\n  id: Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Transform(Vector2,Matrix4x4)\n  nameWithType: Vector4.Transform(Vector2,Matrix4x4)\n  fullName: System.Numerics.Vector4.Transform(Vector2,Matrix4x4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Transforms a two-dimensional vector by a specified 4x4 matrix.\n  syntax:\n    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector2 position, System.Numerics.Matrix4x4 matrix);\n    parameters:\n    - id: position\n      type: System.Numerics.Vector2\n      description: The vector to transform.\n    - id: matrix\n      type: System.Numerics.Matrix4x4\n      description: The transformation matrix.\n    return:\n      type: System.Numerics.Vector4\n      description: The transformed vector.\n  overload: System.Numerics.Vector4.Transform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)\n  id: Transform(System.Numerics.Vector2,System.Numerics.Quaternion)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Transform(Vector2,Quaternion)\n  nameWithType: Vector4.Transform(Vector2,Quaternion)\n  fullName: System.Numerics.Vector4.Transform(Vector2,Quaternion)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Transforms a two-dimensional vector by the specified Quaternion rotation value.\n  syntax:\n    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector2 value, System.Numerics.Quaternion rotation);\n    parameters:\n    - id: value\n      type: System.Numerics.Vector2\n      description: The vector to rotate.\n    - id: rotation\n      type: System.Numerics.Quaternion\n      description: The rotation to apply.\n    return:\n      type: System.Numerics.Vector4\n      description: The transformed vector.\n  overload: System.Numerics.Vector4.Transform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)\n  id: Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Transform(Vector3,Matrix4x4)\n  nameWithType: Vector4.Transform(Vector3,Matrix4x4)\n  fullName: System.Numerics.Vector4.Transform(Vector3,Matrix4x4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Transforms a three-dimensional vector by a specified 4x4 matrix.\n  syntax:\n    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector3 position, System.Numerics.Matrix4x4 matrix);\n    parameters:\n    - id: position\n      type: System.Numerics.Vector3\n      description: The vector to transform.\n    - id: matrix\n      type: System.Numerics.Matrix4x4\n      description: The transformation matrix.\n    return:\n      type: System.Numerics.Vector4\n      description: The transformed vector.\n  overload: System.Numerics.Vector4.Transform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)\n  id: Transform(System.Numerics.Vector3,System.Numerics.Quaternion)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Transform(Vector3,Quaternion)\n  nameWithType: Vector4.Transform(Vector3,Quaternion)\n  fullName: System.Numerics.Vector4.Transform(Vector3,Quaternion)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Transforms a three-dimensional vector by the specified Quaternion rotation value.\n  syntax:\n    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector3 value, System.Numerics.Quaternion rotation);\n    parameters:\n    - id: value\n      type: System.Numerics.Vector3\n      description: The vector to rotate.\n    - id: rotation\n      type: System.Numerics.Quaternion\n      description: The rotation to apply.\n    return:\n      type: System.Numerics.Vector4\n      description: The transformed vector.\n  overload: System.Numerics.Vector4.Transform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)\n  id: Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Transform(Vector4,Matrix4x4)\n  nameWithType: Vector4.Transform(Vector4,Matrix4x4)\n  fullName: System.Numerics.Vector4.Transform(Vector4,Matrix4x4)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Transforms a four-dimensional vector by a specified 4x4 matrix.\n  syntax:\n    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector4 vector, System.Numerics.Matrix4x4 matrix);\n    parameters:\n    - id: vector\n      type: System.Numerics.Vector4\n      description: The vector to transform.\n    - id: matrix\n      type: System.Numerics.Matrix4x4\n      description: The transformation matrix.\n    return:\n      type: System.Numerics.Vector4\n      description: The transformed vector.\n  overload: System.Numerics.Vector4.Transform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)\n  id: Transform(System.Numerics.Vector4,System.Numerics.Quaternion)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Transform(Vector4,Quaternion)\n  nameWithType: Vector4.Transform(Vector4,Quaternion)\n  fullName: System.Numerics.Vector4.Transform(Vector4,Quaternion)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Transforms a four-dimensional vector by the specified Quaternion rotation value.\n  syntax:\n    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector4 value, System.Numerics.Quaternion rotation);\n    parameters:\n    - id: value\n      type: System.Numerics.Vector4\n      description: The vector to rotate.\n    - id: rotation\n      type: System.Numerics.Quaternion\n      description: The rotation to apply.\n    return:\n      type: System.Numerics.Vector4\n      description: The transformed vector.\n  overload: System.Numerics.Vector4.Transform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.UnitW\n  id: UnitW\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: UnitW\n  nameWithType: Vector4.UnitW\n  fullName: System.Numerics.Vector4.UnitW\n  type: Property\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Gets the vector (0,0,0,1).\n  syntax:\n    content: public static System.Numerics.Vector4 UnitW { get; }\n    return:\n      type: System.Numerics.Vector4\n      description: The vector `(0,0,0,1)`.\n  overload: System.Numerics.Vector4.UnitW*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.UnitX\n  id: UnitX\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: UnitX\n  nameWithType: Vector4.UnitX\n  fullName: System.Numerics.Vector4.UnitX\n  type: Property\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Gets the vector (1,0,0,0).\n  syntax:\n    content: public static System.Numerics.Vector4 UnitX { get; }\n    return:\n      type: System.Numerics.Vector4\n      description: The vector `(1,0,0,0)`.\n  overload: System.Numerics.Vector4.UnitX*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.UnitY\n  id: UnitY\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: UnitY\n  nameWithType: Vector4.UnitY\n  fullName: System.Numerics.Vector4.UnitY\n  type: Property\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Gets the vector (0,1,0,0).\n  syntax:\n    content: public static System.Numerics.Vector4 UnitY { get; }\n    return:\n      type: System.Numerics.Vector4\n      description: The vector `(0,1,0,0)`..\n  overload: System.Numerics.Vector4.UnitY*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.UnitZ\n  id: UnitZ\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: UnitZ\n  nameWithType: Vector4.UnitZ\n  fullName: System.Numerics.Vector4.UnitZ\n  type: Property\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Gets the vector `(0,0,1,0)`.\n  syntax:\n    content: public static System.Numerics.Vector4 UnitZ { get; }\n    return:\n      type: System.Numerics.Vector4\n      description: The vector `(0,0,1,0)`.\n  overload: System.Numerics.Vector4.UnitZ*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.W\n  id: W\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: W\n  nameWithType: Vector4.W\n  fullName: System.Numerics.Vector4.W\n  type: Field\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: The W component of the vector.\n  syntax:\n    content: public float W;\n    return:\n      type: System.Single\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.X\n  id: X\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: X\n  nameWithType: Vector4.X\n  fullName: System.Numerics.Vector4.X\n  type: Field\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: The X component of the vector.\n  syntax:\n    content: public float X;\n    return:\n      type: System.Single\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Y\n  id: Y\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Y\n  nameWithType: Vector4.Y\n  fullName: System.Numerics.Vector4.Y\n  type: Field\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: The Y component of the vector.\n  syntax:\n    content: public float Y;\n    return:\n      type: System.Single\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Z\n  id: Z\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Z\n  nameWithType: Vector4.Z\n  fullName: System.Numerics.Vector4.Z\n  type: Field\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: The Z component of the vector.\n  syntax:\n    content: public float Z;\n    return:\n      type: System.Single\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Vector4.Zero\n  id: Zero\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  name: Zero\n  nameWithType: Vector4.Zero\n  fullName: System.Numerics.Vector4.Zero\n  type: Property\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Gets a vector whose 4 elements are equal to zero.\n  syntax:\n    content: public static System.Numerics.Vector4 Zero { get; }\n    return:\n      type: System.Numerics.Vector4\n      description: A vector whose four elements are equal to zero (that is, it returns the vector `(0,0,0,0)`.\n  overload: System.Numerics.Vector4.Zero*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.RankException\n  isExternal: true\n  name: System.RankException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Numerics.Vector4.#ctor(System.Single)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Vector4(Single)\n  nameWithType: Vector4.Vector4(Single)\n  fullName: System.Numerics.Vector4.Vector4(Single)\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Vector4(Vector3,Single)\n  nameWithType: Vector4.Vector4(Vector3,Single)\n  fullName: System.Numerics.Vector4.Vector4(Vector3,Single)\n- uid: System.Numerics.Vector3\n  parent: System.Numerics\n  isExternal: false\n  name: Vector3\n  nameWithType: Vector3\n  fullName: System.Numerics.Vector3\n- uid: System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Vector4(Vector2,Single,Single)\n  nameWithType: Vector4.Vector4(Vector2,Single,Single)\n  fullName: System.Numerics.Vector4.Vector4(Vector2,Single,Single)\n- uid: System.Numerics.Vector2\n  parent: System.Numerics\n  isExternal: false\n  name: Vector2\n  nameWithType: Vector2\n  fullName: System.Numerics.Vector2\n- uid: System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Vector4(Single,Single,Single,Single)\n  nameWithType: Vector4.Vector4(Single,Single,Single,Single)\n  fullName: System.Numerics.Vector4.Vector4(Single,Single,Single,Single)\n- uid: System.Numerics.Vector4.Abs(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Abs(Vector4)\n  nameWithType: Vector4.Abs(Vector4)\n  fullName: System.Numerics.Vector4.Abs(Vector4)\n- uid: System.Numerics.Vector4\n  parent: System.Numerics\n  isExternal: false\n  name: Vector4\n  nameWithType: Vector4\n  fullName: System.Numerics.Vector4\n- uid: System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Add(Vector4,Vector4)\n  nameWithType: Vector4.Add(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Add(Vector4,Vector4)\n- uid: System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Clamp(Vector4,Vector4,Vector4)\n  nameWithType: Vector4.Clamp(Vector4,Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Clamp(Vector4,Vector4,Vector4)\n- uid: System.Numerics.Vector4.CopyTo(System.Single[])\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: CopyTo(Single[])\n  nameWithType: Vector4.CopyTo(Single[])\n  fullName: System.Numerics.Vector4.CopyTo(Single[])\n- uid: System.Single[]\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single[]\n  spec.csharp:\n  - uid: System.Single\n    name: Single\n    nameWithType: Single\n    fullName: Single[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: CopyTo(Single[],Int32)\n  nameWithType: Vector4.CopyTo(Single[],Int32)\n  fullName: System.Numerics.Vector4.CopyTo(Single[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Distance(Vector4,Vector4)\n  nameWithType: Vector4.Distance(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Distance(Vector4,Vector4)\n- uid: System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: DistanceSquared(Vector4,Vector4)\n  nameWithType: Vector4.DistanceSquared(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.DistanceSquared(Vector4,Vector4)\n- uid: System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Divide(Vector4,Vector4)\n  nameWithType: Vector4.Divide(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Divide(Vector4,Vector4)\n- uid: System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Divide(Vector4,Single)\n  nameWithType: Vector4.Divide(Vector4,Single)\n  fullName: System.Numerics.Vector4.Divide(Vector4,Single)\n- uid: System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Dot(Vector4,Vector4)\n  nameWithType: Vector4.Dot(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Dot(Vector4,Vector4)\n- uid: System.Numerics.Vector4.Equals(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Equals(Vector4)\n  nameWithType: Vector4.Equals(Vector4)\n  fullName: System.Numerics.Vector4.Equals(Vector4)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Numerics.Vector4.Equals(System.Object)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Vector4.Equals(Object)\n  fullName: System.Numerics.Vector4.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Numerics.Vector4.GetHashCode\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Vector4.GetHashCode()\n  fullName: System.Numerics.Vector4.GetHashCode()\n- uid: System.Numerics.Vector4.Length\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Length()\n  nameWithType: Vector4.Length()\n  fullName: System.Numerics.Vector4.Length()\n- uid: System.Numerics.Vector4.LengthSquared\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: LengthSquared()\n  nameWithType: Vector4.LengthSquared()\n  fullName: System.Numerics.Vector4.LengthSquared()\n- uid: System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Lerp(Vector4,Vector4,Single)\n  nameWithType: Vector4.Lerp(Vector4,Vector4,Single)\n  fullName: System.Numerics.Vector4.Lerp(Vector4,Vector4,Single)\n- uid: System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Max(Vector4,Vector4)\n  nameWithType: Vector4.Max(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Max(Vector4,Vector4)\n- uid: System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Min(Vector4,Vector4)\n  nameWithType: Vector4.Min(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Min(Vector4,Vector4)\n- uid: System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Multiply(Vector4,Vector4)\n  nameWithType: Vector4.Multiply(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Multiply(Vector4,Vector4)\n- uid: System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Multiply(Vector4,Single)\n  nameWithType: Vector4.Multiply(Vector4,Single)\n  fullName: System.Numerics.Vector4.Multiply(Vector4,Single)\n- uid: System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Multiply(Single,Vector4)\n  nameWithType: Vector4.Multiply(Single,Vector4)\n  fullName: System.Numerics.Vector4.Multiply(Single,Vector4)\n- uid: System.Numerics.Vector4.Negate(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Negate(Vector4)\n  nameWithType: Vector4.Negate(Vector4)\n  fullName: System.Numerics.Vector4.Negate(Vector4)\n- uid: System.Numerics.Vector4.Normalize(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Normalize(Vector4)\n  nameWithType: Vector4.Normalize(Vector4)\n  fullName: System.Numerics.Vector4.Normalize(Vector4)\n- uid: System.Numerics.Vector4.One\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: One\n  nameWithType: Vector4.One\n  fullName: System.Numerics.Vector4.One\n- uid: System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: op_Addition(Vector4,Vector4)\n  nameWithType: Vector4.op_Addition(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.op_Addition(Vector4,Vector4)\n- uid: System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: op_Division(Vector4,Vector4)\n  nameWithType: Vector4.op_Division(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.op_Division(Vector4,Vector4)\n- uid: System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: op_Division(Vector4,Single)\n  nameWithType: Vector4.op_Division(Vector4,Single)\n  fullName: System.Numerics.Vector4.op_Division(Vector4,Single)\n- uid: System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: op_Equality(Vector4,Vector4)\n  nameWithType: Vector4.op_Equality(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.op_Equality(Vector4,Vector4)\n- uid: System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: op_Inequality(Vector4,Vector4)\n  nameWithType: Vector4.op_Inequality(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.op_Inequality(Vector4,Vector4)\n- uid: System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: op_Multiply(Vector4,Vector4)\n  nameWithType: Vector4.op_Multiply(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.op_Multiply(Vector4,Vector4)\n- uid: System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: op_Multiply(Vector4,Single)\n  nameWithType: Vector4.op_Multiply(Vector4,Single)\n  fullName: System.Numerics.Vector4.op_Multiply(Vector4,Single)\n- uid: System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: op_Multiply(Single,Vector4)\n  nameWithType: Vector4.op_Multiply(Single,Vector4)\n  fullName: System.Numerics.Vector4.op_Multiply(Single,Vector4)\n- uid: System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: op_Subtraction(Vector4,Vector4)\n  nameWithType: Vector4.op_Subtraction(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.op_Subtraction(Vector4,Vector4)\n- uid: System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: op_UnaryNegation(Vector4)\n  nameWithType: Vector4.op_UnaryNegation(Vector4)\n  fullName: System.Numerics.Vector4.op_UnaryNegation(Vector4)\n- uid: System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: SquareRoot(Vector4)\n  nameWithType: Vector4.SquareRoot(Vector4)\n  fullName: System.Numerics.Vector4.SquareRoot(Vector4)\n- uid: System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Subtract(Vector4,Vector4)\n  nameWithType: Vector4.Subtract(Vector4,Vector4)\n  fullName: System.Numerics.Vector4.Subtract(Vector4,Vector4)\n- uid: System.Numerics.Vector4.ToString\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: ToString()\n  nameWithType: Vector4.ToString()\n  fullName: System.Numerics.Vector4.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Numerics.Vector4.ToString(System.String)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: ToString(String)\n  nameWithType: Vector4.ToString(String)\n  fullName: System.Numerics.Vector4.ToString(String)\n- uid: System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: ToString(String,IFormatProvider)\n  nameWithType: Vector4.ToString(String,IFormatProvider)\n  fullName: System.Numerics.Vector4.ToString(String,IFormatProvider)\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: true\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Transform(Vector2,Matrix4x4)\n  nameWithType: Vector4.Transform(Vector2,Matrix4x4)\n  fullName: System.Numerics.Vector4.Transform(Vector2,Matrix4x4)\n- uid: System.Numerics.Matrix4x4\n  parent: System.Numerics\n  isExternal: false\n  name: Matrix4x4\n  nameWithType: Matrix4x4\n  fullName: System.Numerics.Matrix4x4\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Transform(Vector2,Quaternion)\n  nameWithType: Vector4.Transform(Vector2,Quaternion)\n  fullName: System.Numerics.Vector4.Transform(Vector2,Quaternion)\n- uid: System.Numerics.Quaternion\n  parent: System.Numerics\n  isExternal: false\n  name: Quaternion\n  nameWithType: Quaternion\n  fullName: System.Numerics.Quaternion\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Transform(Vector3,Matrix4x4)\n  nameWithType: Vector4.Transform(Vector3,Matrix4x4)\n  fullName: System.Numerics.Vector4.Transform(Vector3,Matrix4x4)\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Transform(Vector3,Quaternion)\n  nameWithType: Vector4.Transform(Vector3,Quaternion)\n  fullName: System.Numerics.Vector4.Transform(Vector3,Quaternion)\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Transform(Vector4,Matrix4x4)\n  nameWithType: Vector4.Transform(Vector4,Matrix4x4)\n  fullName: System.Numerics.Vector4.Transform(Vector4,Matrix4x4)\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Transform(Vector4,Quaternion)\n  nameWithType: Vector4.Transform(Vector4,Quaternion)\n  fullName: System.Numerics.Vector4.Transform(Vector4,Quaternion)\n- uid: System.Numerics.Vector4.UnitW\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: UnitW\n  nameWithType: Vector4.UnitW\n  fullName: System.Numerics.Vector4.UnitW\n- uid: System.Numerics.Vector4.UnitX\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: UnitX\n  nameWithType: Vector4.UnitX\n  fullName: System.Numerics.Vector4.UnitX\n- uid: System.Numerics.Vector4.UnitY\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: UnitY\n  nameWithType: Vector4.UnitY\n  fullName: System.Numerics.Vector4.UnitY\n- uid: System.Numerics.Vector4.UnitZ\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: UnitZ\n  nameWithType: Vector4.UnitZ\n  fullName: System.Numerics.Vector4.UnitZ\n- uid: System.Numerics.Vector4.W\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: W\n  nameWithType: Vector4.W\n  fullName: System.Numerics.Vector4.W\n- uid: System.Numerics.Vector4.X\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: X\n  nameWithType: Vector4.X\n  fullName: System.Numerics.Vector4.X\n- uid: System.Numerics.Vector4.Y\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Y\n  nameWithType: Vector4.Y\n  fullName: System.Numerics.Vector4.Y\n- uid: System.Numerics.Vector4.Z\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Z\n  nameWithType: Vector4.Z\n  fullName: System.Numerics.Vector4.Z\n- uid: System.Numerics.Vector4.Zero\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Zero\n  nameWithType: Vector4.Zero\n  fullName: System.Numerics.Vector4.Zero\n- uid: System.Numerics.Vector4.#ctor*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Vector4\n  nameWithType: Vector4.Vector4\n- uid: System.Numerics.Vector4.Abs*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Abs\n  nameWithType: Vector4.Abs\n- uid: System.Numerics.Vector4.Add*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Add\n  nameWithType: Vector4.Add\n- uid: System.Numerics.Vector4.Clamp*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Clamp\n  nameWithType: Vector4.Clamp\n- uid: System.Numerics.Vector4.CopyTo*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: CopyTo\n  nameWithType: Vector4.CopyTo\n- uid: System.Numerics.Vector4.Distance*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Distance\n  nameWithType: Vector4.Distance\n- uid: System.Numerics.Vector4.DistanceSquared*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: DistanceSquared\n  nameWithType: Vector4.DistanceSquared\n- uid: System.Numerics.Vector4.Divide*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Divide\n  nameWithType: Vector4.Divide\n- uid: System.Numerics.Vector4.Dot*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Dot\n  nameWithType: Vector4.Dot\n- uid: System.Numerics.Vector4.Equals*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Equals\n  nameWithType: Vector4.Equals\n- uid: System.Numerics.Vector4.GetHashCode*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Vector4.GetHashCode\n- uid: System.Numerics.Vector4.Length*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Length\n  nameWithType: Vector4.Length\n- uid: System.Numerics.Vector4.LengthSquared*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: LengthSquared\n  nameWithType: Vector4.LengthSquared\n- uid: System.Numerics.Vector4.Lerp*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Lerp\n  nameWithType: Vector4.Lerp\n- uid: System.Numerics.Vector4.Max*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Max\n  nameWithType: Vector4.Max\n- uid: System.Numerics.Vector4.Min*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Min\n  nameWithType: Vector4.Min\n- uid: System.Numerics.Vector4.Multiply*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Multiply\n  nameWithType: Vector4.Multiply\n- uid: System.Numerics.Vector4.Negate*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Negate\n  nameWithType: Vector4.Negate\n- uid: System.Numerics.Vector4.Normalize*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Normalize\n  nameWithType: Vector4.Normalize\n- uid: System.Numerics.Vector4.One*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: One\n  nameWithType: Vector4.One\n- uid: System.Numerics.Vector4.op_Addition*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: op_Addition\n  nameWithType: Vector4.op_Addition\n- uid: System.Numerics.Vector4.op_Division*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: op_Division\n  nameWithType: Vector4.op_Division\n- uid: System.Numerics.Vector4.op_Equality*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: op_Equality\n  nameWithType: Vector4.op_Equality\n- uid: System.Numerics.Vector4.op_Inequality*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: op_Inequality\n  nameWithType: Vector4.op_Inequality\n- uid: System.Numerics.Vector4.op_Multiply*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: op_Multiply\n  nameWithType: Vector4.op_Multiply\n- uid: System.Numerics.Vector4.op_Subtraction*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: Vector4.op_Subtraction\n- uid: System.Numerics.Vector4.op_UnaryNegation*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: op_UnaryNegation\n  nameWithType: Vector4.op_UnaryNegation\n- uid: System.Numerics.Vector4.SquareRoot*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: SquareRoot\n  nameWithType: Vector4.SquareRoot\n- uid: System.Numerics.Vector4.Subtract*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Subtract\n  nameWithType: Vector4.Subtract\n- uid: System.Numerics.Vector4.ToString*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: ToString\n  nameWithType: Vector4.ToString\n- uid: System.Numerics.Vector4.Transform*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Transform\n  nameWithType: Vector4.Transform\n- uid: System.Numerics.Vector4.UnitW*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: UnitW\n  nameWithType: Vector4.UnitW\n- uid: System.Numerics.Vector4.UnitX*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: UnitX\n  nameWithType: Vector4.UnitX\n- uid: System.Numerics.Vector4.UnitY*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: UnitY\n  nameWithType: Vector4.UnitY\n- uid: System.Numerics.Vector4.UnitZ*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: UnitZ\n  nameWithType: Vector4.UnitZ\n- uid: System.Numerics.Vector4.Zero*\n  parent: System.Numerics.Vector4\n  isExternal: false\n  name: Zero\n  nameWithType: Vector4.Zero\n"}