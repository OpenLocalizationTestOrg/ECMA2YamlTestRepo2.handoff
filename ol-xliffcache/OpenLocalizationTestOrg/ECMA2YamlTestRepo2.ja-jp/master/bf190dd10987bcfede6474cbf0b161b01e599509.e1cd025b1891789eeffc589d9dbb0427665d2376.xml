{"nodes":[{"pos":[558,649],"content":"Instructs obfuscation tools to take the specified actions for an assembly, type, or member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Instructs obfuscation tools to take the specified actions for an assembly, type, or member.","pos":[0,91]}]},{"pos":[662,2878],"content":"The ObfuscationAttribute and <xref:System.Reflection.ObfuscateAssemblyAttribute> attributes allow assembly authors to annotate their binaries so that obfuscation tools can process them correctly with minimal external configuration.      > [!IMPORTANT] >  Applying this attribute does not automatically obfuscate the code entity to which you apply it. Applying the attribute is an alternative to creating a configuration file for the obfuscation tool. That is, it merely provides instructions for an obfuscation tool. Microsoft recommends that vendors of obfuscation tools follow the semantics described here. However, there is no guarantee that a particular tool follows Microsoft recommendations.       The ObfuscationAttribute attribute has a string <xref:System.Reflection.ObfuscationAttribute.Feature%2A> property. Obfuscation tools can map the string values of this property to features they implement, preferably by using an XML configuration file that users can access. The ObfuscationAttribute defines two feature strings, \"default\" and \"all\". The string \"default\" should map to the default obfuscation features of a tool, and \"all\" should map to the complete set of obfuscation features supported by a tool. The default value of the <xref:System.Reflection.ObfuscationAttribute.Feature%2A> property is \"all\", enabling the complete set of obfuscation features.       When applied to an assembly, ObfuscationAttribute also applies to all types within the assembly. If the <xref:System.Reflection.ObfuscationAttribute.ApplyToMembers%2A> property is not specified, or is set to `true`, the attribute applies to all members as well. ObfuscationAttribute does not specify whether an assembly is public or private. To specify whether an assembly is public or private, use the <xref:System.Reflection.ObfuscateAssemblyAttribute> attribute.       When applied to classes and structures, ObfuscationAttribute also applies to all members of the type if the <xref:System.Reflection.ObfuscationAttribute.ApplyToMembers%2A> property is not specified, or is set to `true`.       When applied to methods, parameters, fields, and properties, the attribute affects only the entity to which it is applied.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ObfuscationAttribute and &lt;xref:System.Reflection.ObfuscateAssemblyAttribute&gt; attributes allow assembly authors to annotate their binaries so that obfuscation tools can process them correctly with minimal external configuration.","pos":[0,231],"source":"The ObfuscationAttribute and <xref:System.Reflection.ObfuscateAssemblyAttribute> attributes allow assembly authors to annotate their binaries so that obfuscation tools can process them correctly with minimal external configuration."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  Applying this attribute does not automatically obfuscate the code entity to which you apply it.","pos":[237,350],"source":"      > [!IMPORTANT] >  Applying this attribute does not automatically obfuscate the code entity to which you apply it."},{"content":"Applying the attribute is an alternative to creating a configuration file for the obfuscation tool.","pos":[351,450]},{"content":"That is, it merely provides instructions for an obfuscation tool.","pos":[451,516]},{"content":"Microsoft recommends that vendors of obfuscation tools follow the semantics described here.","pos":[517,608]},{"content":"However, there is no guarantee that a particular tool follows Microsoft recommendations.","pos":[609,697]},{"content":"The ObfuscationAttribute attribute has a string &lt;xref:System.Reflection.ObfuscationAttribute.Feature%2A&gt; property.","pos":[704,818],"source":"       The ObfuscationAttribute attribute has a string <xref:System.Reflection.ObfuscationAttribute.Feature%2A> property."},{"content":"Obfuscation tools can map the string values of this property to features they implement, preferably by using an XML configuration file that users can access.","pos":[819,976]},{"content":"The ObfuscationAttribute defines two feature strings, \"default\" and \"all\".","pos":[977,1051]},{"content":"The string \"default\" should map to the default obfuscation features of a tool, and \"all\" should map to the complete set of obfuscation features supported by a tool.","pos":[1052,1216]},{"content":"The default value of the &lt;xref:System.Reflection.ObfuscationAttribute.Feature%2A&gt; property is \"all\", enabling the complete set of obfuscation features.","pos":[1217,1368],"source":" The default value of the <xref:System.Reflection.ObfuscationAttribute.Feature%2A> property is \"all\", enabling the complete set of obfuscation features."},{"content":"When applied to an assembly, ObfuscationAttribute also applies to all types within the assembly.","pos":[1375,1471]},{"content":"If the &lt;xref:System.Reflection.ObfuscationAttribute.ApplyToMembers%2A&gt; property is not specified, or is set to <ph id=\"ph1\">`true`</ph>, the attribute applies to all members as well.","pos":[1472,1636],"source":" If the <xref:System.Reflection.ObfuscationAttribute.ApplyToMembers%2A> property is not specified, or is set to `true`, the attribute applies to all members as well."},{"content":"ObfuscationAttribute does not specify whether an assembly is public or private.","pos":[1637,1716]},{"content":"To specify whether an assembly is public or private, use the &lt;xref:System.Reflection.ObfuscateAssemblyAttribute&gt; attribute.","pos":[1717,1840],"source":" To specify whether an assembly is public or private, use the <xref:System.Reflection.ObfuscateAssemblyAttribute> attribute."},{"content":"When applied to classes and structures, ObfuscationAttribute also applies to all members of the type if the &lt;xref:System.Reflection.ObfuscationAttribute.ApplyToMembers%2A&gt; property is not specified, or is set to <ph id=\"ph1\">`true`</ph>.","pos":[1847,2066],"source":"       When applied to classes and structures, ObfuscationAttribute also applies to all members of the type if the <xref:System.Reflection.ObfuscationAttribute.ApplyToMembers%2A> property is not specified, or is set to `true`."},{"content":"When applied to methods, parameters, fields, and properties, the attribute affects only the entity to which it is applied.","pos":[2073,2195]}]},{"pos":[5950,6050],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Reflection.ObfuscationAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Reflection.ObfuscationAttribute\"></xref> class."},{"pos":[6062,6276],"content":"<xref:System.Reflection.ObfuscationAttribute> does not specify whether an assembly is public or private. To specify whether an assembly is public or private, use <xref:System.Reflection.ObfuscateAssemblyAttribute>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Reflection.ObfuscationAttribute> does not specify whether an assembly is public or private. To specify whether an assembly is public or private, use <xref:System.Reflection.ObfuscateAssemblyAttribute>.","pos":[0,214],"nodes":[{"content":"&lt;xref:System.Reflection.ObfuscationAttribute&gt; does not specify whether an assembly is public or private.","pos":[0,104],"source":"<xref:System.Reflection.ObfuscationAttribute> does not specify whether an assembly is public or private."},{"content":"To specify whether an assembly is public or private, use &lt;xref:System.Reflection.ObfuscateAssemblyAttribute&gt;.","pos":[105,214],"source":" To specify whether an assembly is public or private, use <xref:System.Reflection.ObfuscateAssemblyAttribute>."}]}]},{"pos":[6827,6952],"content":"Gets or sets a <xref:System.Boolean> value indicating whether the attribute of a type is to apply to the members of the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a &lt;xref:System.Boolean&gt; value indicating whether the attribute of a type is to apply to the members of the type.","pos":[0,125],"source":"Gets or sets a <xref:System.Boolean> value indicating whether the attribute of a type is to apply to the members of the type."}]},{"pos":[6965,7514],"content":"The value of this property is ignored when the attribute is applied to a member.      > [!IMPORTANT] >  Applying this attribute does not automatically obfuscate the code entity to which you apply it. Applying the attribute is an alternative to creating a configuration file for the obfuscation tool. That is, it merely provides instructions for an obfuscation tool. Microsoft recommends that vendors of obfuscation tools follow the semantics described here. However, there is no guarantee that a particular tool follows Microsoft recommendations.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of this property is ignored when the attribute is applied to a member.","pos":[0,80]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  Applying this attribute does not automatically obfuscate the code entity to which you apply it.","pos":[86,199],"source":"      > [!IMPORTANT] >  Applying this attribute does not automatically obfuscate the code entity to which you apply it."},{"content":"Applying the attribute is an alternative to creating a configuration file for the obfuscation tool.","pos":[200,299]},{"content":"That is, it merely provides instructions for an obfuscation tool.","pos":[300,365]},{"content":"Microsoft recommends that vendors of obfuscation tools follow the semantics described here.","pos":[366,457]},{"content":"However, there is no guarantee that a particular tool follows Microsoft recommendations.","pos":[458,546]}]},{"pos":[8169,8438],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the attribute is to apply to the members of the type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the attribute is to apply to the members of the type; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,192],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the attribute is to apply to the members of the type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[193,269],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[8889,9023],"content":"Gets or sets a <xref:System.Boolean> value indicating whether the obfuscation tool should exclude the type or member from obfuscation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a &lt;xref:System.Boolean&gt; value indicating whether the obfuscation tool should exclude the type or member from obfuscation.","pos":[0,134],"source":"Gets or sets a <xref:System.Boolean> value indicating whether the obfuscation tool should exclude the type or member from obfuscation."}]},{"pos":[12059,12520],"content":"> [!IMPORTANT] >  Applying this attribute does not automatically obfuscate the code entity to which you apply it. Applying the attribute is an alternative to creating a configuration file for the obfuscation tool. That is, it merely provides instructions for an obfuscation tool. Microsoft recommends that vendors of obfuscation tools follow the semantics described here. However, there is no guarantee that a particular tool follows Microsoft recommendations.","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!IMPORTANT]</ph> &gt;  Applying this attribute does not automatically obfuscate the code entity to which you apply it.","pos":[0,113],"source":"> [!IMPORTANT] >  Applying this attribute does not automatically obfuscate the code entity to which you apply it."},{"content":"Applying the attribute is an alternative to creating a configuration file for the obfuscation tool.","pos":[114,213]},{"content":"That is, it merely provides instructions for an obfuscation tool.","pos":[214,279]},{"content":"Microsoft recommends that vendors of obfuscation tools follow the semantics described here.","pos":[280,371]},{"content":"However, there is no guarantee that a particular tool follows Microsoft recommendations.","pos":[372,460]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.ObfuscationAttribute\n  id: ObfuscationAttribute\n  children:\n  - System.Reflection.ObfuscationAttribute.#ctor\n  - System.Reflection.ObfuscationAttribute.ApplyToMembers\n  - System.Reflection.ObfuscationAttribute.Exclude\n  - System.Reflection.ObfuscationAttribute.Feature\n  - System.Reflection.ObfuscationAttribute.StripAfterObfuscation\n  langs:\n  - csharp\n  name: ObfuscationAttribute\n  nameWithType: ObfuscationAttribute\n  fullName: System.Reflection.ObfuscationAttribute\n  type: Class\n  summary: Instructs obfuscation tools to take the specified actions for an assembly, type, or member.\n  remarks: \"The ObfuscationAttribute and <xref:System.Reflection.ObfuscateAssemblyAttribute> attributes allow assembly authors to annotate their binaries so that obfuscation tools can process them correctly with minimal external configuration.  \\n  \\n> [!IMPORTANT]\\n>  Applying this attribute does not automatically obfuscate the code entity to which you apply it. Applying the attribute is an alternative to creating a configuration file for the obfuscation tool. That is, it merely provides instructions for an obfuscation tool. Microsoft recommends that vendors of obfuscation tools follow the semantics described here. However, there is no guarantee that a particular tool follows Microsoft recommendations.  \\n  \\n The ObfuscationAttribute attribute has a string <xref:System.Reflection.ObfuscationAttribute.Feature%2A> property. Obfuscation tools can map the string values of this property to features they implement, preferably by using an XML configuration file that users can access. The ObfuscationAttribute defines two feature strings, \\\"default\\\" and \\\"all\\\". The string \\\"default\\\" should map to the default obfuscation features of a tool, and \\\"all\\\" should map to the complete set of obfuscation features supported by a tool. The default value of the <xref:System.Reflection.ObfuscationAttribute.Feature%2A> property is \\\"all\\\", enabling the complete set of obfuscation features.  \\n  \\n When applied to an assembly, ObfuscationAttribute also applies to all types within the assembly. If the <xref:System.Reflection.ObfuscationAttribute.ApplyToMembers%2A> property is not specified, or is set to `true`, the attribute applies to all members as well. ObfuscationAttribute does not specify whether an assembly is public or private. To specify whether an assembly is public or private, use the <xref:System.Reflection.ObfuscateAssemblyAttribute> attribute.  \\n  \\n When applied to classes and structures, ObfuscationAttribute also applies to all members of the type if the <xref:System.Reflection.ObfuscationAttribute.ApplyToMembers%2A> property is not specified, or is set to `true`.  \\n  \\n When applied to methods, parameters, fields, and properties, the attribute affects only the entity to which it is applied.\"\n  example:\n  - \"The following code example shows a public assembly with two types: `Type1` and `Type2`. The assembly is marked for obfuscation with the <xref:System.Reflection.ObfuscateAssemblyAttribute>, which marks the assembly to be treated as public (that is, the <xref:System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate%2A> property is `false`).  \\n  \\n `Type1` is marked for obfuscation because the assembly is marked for obfuscation. One member of `Type1` is excluded from obfuscation, using the <xref:System.Reflection.ObfuscationAttribute.Exclude%2A> property.  \\n  \\n `Type2` is excluded from obfuscation, but its members are marked for obfuscation because the <xref:System.Reflection.ObfuscationAttribute.ApplyToMembers%2A> property is `false`.  \\n  \\n The `MethodA` method of `Type2` is marked with the value `\\\"default\\\"` for the <xref:System.Reflection.ObfuscationAttribute.Feature%2A> property. It is necessary to specify `false` for the <xref:System.Reflection.ObfuscationAttribute.Exclude%2A> property to avoid excluding `MethodA` from obfuscation, because the default for the <xref:System.Reflection.ObfuscationAttribute.Exclude%2A> property is `true`. The obfuscation tool should not strip the attribute after obfuscation because the <xref:System.Reflection.ObfuscationAttribute.StripAfterObfuscation%2A> property is `false`. All the other attributes in this code example are stripped after obfuscation, because the <xref:System.Reflection.ObfuscationAttribute.StripAfterObfuscation%2A> property is not specified, and therefore defaults to `true`.  \\n  \\n The code example includes code to display the attributes and their properties. You can also examine the attributes by opening the DLL with the [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[ObfuscationAttribute#1](~/add/codesnippet/csharp/t-system.reflection.obfu_1_1.cs)]\\n [!code-vb[ObfuscationAttribute#1](~/add/codesnippet/visualbasic/t-system.reflection.obfu_1_1.vb)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Parameter | System.AttributeTargets.Delegate, AllowMultiple=true, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class ObfuscationAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Reflection.ObfuscationAttribute.#ctor\n  id: '#ctor'\n  parent: System.Reflection.ObfuscationAttribute\n  langs:\n  - csharp\n  name: ObfuscationAttribute()\n  nameWithType: ObfuscationAttribute.ObfuscationAttribute()\n  fullName: System.Reflection.ObfuscationAttribute.ObfuscationAttribute()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Initializes a new instance of the <xref href=\"System.Reflection.ObfuscationAttribute\"></xref> class.\n  remarks: <xref:System.Reflection.ObfuscationAttribute> does not specify whether an assembly is public or private. To specify whether an assembly is public or private, use <xref:System.Reflection.ObfuscateAssemblyAttribute>.\n  syntax:\n    content: public ObfuscationAttribute ();\n    parameters: []\n  overload: System.Reflection.ObfuscationAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.ObfuscationAttribute.ApplyToMembers\n  id: ApplyToMembers\n  parent: System.Reflection.ObfuscationAttribute\n  langs:\n  - csharp\n  name: ApplyToMembers\n  nameWithType: ObfuscationAttribute.ApplyToMembers\n  fullName: System.Reflection.ObfuscationAttribute.ApplyToMembers\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Gets or sets a <xref:System.Boolean> value indicating whether the attribute of a type is to apply to the members of the type.\n  remarks: \"The value of this property is ignored when the attribute is applied to a member.  \\n  \\n> [!IMPORTANT]\\n>  Applying this attribute does not automatically obfuscate the code entity to which you apply it. Applying the attribute is an alternative to creating a configuration file for the obfuscation tool. That is, it merely provides instructions for an obfuscation tool. Microsoft recommends that vendors of obfuscation tools follow the semantics described here. However, there is no guarantee that a particular tool follows Microsoft recommendations.\"\n  example:\n  - \"The following code example shows a type that is excluded from obfuscation, but the exclusion does not apply to its members because the ApplyToMembers property is `false`.  \\n  \\n This code is part of a larger example that can be compiled and executed. See the <xref:System.Reflection.ObfuscationAttribute> class.  \\n  \\n [!code-cs[ObfuscationAttribute#2](~/add/codesnippet/csharp/p-system.reflection.obfu_4_1.cs)]\\n [!code-vb[ObfuscationAttribute#2](~/add/codesnippet/visualbasic/p-system.reflection.obfu_4_1.vb)]\"\n  syntax:\n    content: public bool ApplyToMembers { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the attribute is to apply to the members of the type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Reflection.ObfuscationAttribute.ApplyToMembers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.ObfuscationAttribute.Exclude\n  id: Exclude\n  parent: System.Reflection.ObfuscationAttribute\n  langs:\n  - csharp\n  name: Exclude\n  nameWithType: ObfuscationAttribute.Exclude\n  fullName: System.Reflection.ObfuscationAttribute.Exclude\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Gets or sets a <xref:System.Boolean> value indicating whether the obfuscation tool should exclude the type or member from obfuscation.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  Applying this attribute does not automatically obfuscate the code entity to which you apply it. Applying the attribute is an alternative to creating a configuration file for the obfuscation tool. That is, it merely provides instructions for an obfuscation tool. Microsoft recommends that vendors of obfuscation tools follow the semantics described here. However, there is no guarantee that a particular tool follows Microsoft recommendations.\n  example:\n  - \"The following code example shows a type that is marked to be excluded from obfuscation. It is not necessary to specify the Exclude property, because it defaults to `true`, but specifying it explicitly makes your intent clear. The <xref:System.Reflection.ObfuscationAttribute.ApplyToMembers%2A> is set to `false`, so that the exclusion from obfuscation does not apply to the members of the class. That is, the class name is visible but the members are obfuscated.  \\n  \\n The `MethodA` method is marked with the value `\\\"default\\\"` for the <xref:System.Reflection.ObfuscationAttribute.Feature%2A> property. It is necessary to specify `false` for the Exclude property in order to avoid excluding `MethodA` from obfuscation, because the default for the Exclude property is `true`. The <xref:System.Reflection.ObfuscationAttribute.StripAfterObfuscation%2A> property is `false` so that the obfuscation tool will not strip the attribute after obfuscation.  \\n  \\n This code is part of a larger example that can be compiled and executed. See the <xref:System.Reflection.ObfuscationAttribute> class.  \\n  \\n [!code-cs[ObfuscationAttribute#4](~/add/codesnippet/csharp/p-system.reflection.obfu_1_1.cs)]\\n [!code-vb[ObfuscationAttribute#4](~/add/codesnippet/visualbasic/p-system.reflection.obfu_1_1.vb)]\"\n  syntax:\n    content: public bool Exclude { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the type or member to which this attribute is applied should be excluded from obfuscation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Reflection.ObfuscationAttribute.Exclude*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.ObfuscationAttribute.Feature\n  id: Feature\n  parent: System.Reflection.ObfuscationAttribute\n  langs:\n  - csharp\n  name: Feature\n  nameWithType: ObfuscationAttribute.Feature\n  fullName: System.Reflection.ObfuscationAttribute.Feature\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Gets or sets a string value that is recognized by the obfuscation tool, and which specifies processing options.\n  remarks: \"The value passed to this property depends on the obfuscation tool used. It is recommended that vendors of obfuscation tools support at least \\\"default\\\" and \\\"all\\\". Vendors can use these settings in conjunction with the XML configuration file.  \\n  \\n> [!IMPORTANT]\\n>  Applying this attribute does not automatically obfuscate the code entity to which you apply it. Applying the attribute is an alternative to creating a configuration file for the obfuscation tool. That is, it merely provides instructions for an obfuscation tool. Microsoft recommends that vendors of obfuscation tools follow the semantics described here. However, there is no guarantee that a particular tool follows Microsoft recommendations.\"\n  example:\n  - \"The following code example shows a method that is marked with the value `\\\"default\\\"` for the Feature property. It is necessary to specify `false` for the <xref:System.Reflection.ObfuscationAttribute.Exclude%2A> property to avoid excluding `MethodA` from obfuscation, because the default for the <xref:System.Reflection.ObfuscationAttribute.Exclude%2A> property is `true`. The <xref:System.Reflection.ObfuscationAttribute.StripAfterObfuscation%2A> property is `false` so that the obfuscation tool will not strip the attribute after obfuscation.  \\n  \\n This code is part of a larger example that can be compiled and executed. See the <xref:System.Reflection.ObfuscationAttribute> class.  \\n  \\n [!code-cs[ObfuscationAttribute#3](~/add/codesnippet/csharp/p-system.reflection.obfu_5_1.cs)]\\n [!code-vb[ObfuscationAttribute#3](~/add/codesnippet/visualbasic/p-system.reflection.obfu_5_1.vb)]\"\n  syntax:\n    content: public string Feature { get; set; }\n    return:\n      type: System.String\n      description: A string value that is recognized by the obfuscation tool, and which specifies processing options. The default is \"all\".\n  overload: System.Reflection.ObfuscationAttribute.Feature*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.ObfuscationAttribute.StripAfterObfuscation\n  id: StripAfterObfuscation\n  parent: System.Reflection.ObfuscationAttribute\n  langs:\n  - csharp\n  name: StripAfterObfuscation\n  nameWithType: ObfuscationAttribute.StripAfterObfuscation\n  fullName: System.Reflection.ObfuscationAttribute.StripAfterObfuscation\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Gets or sets a <xref:System.Boolean> value indicating whether the obfuscation tool should remove this attribute after processing.\n  remarks: \"Attributes should not be stripped if your library will be included as part of another application, and obfuscated as part of that application.  \\n  \\n> [!IMPORTANT]\\n>  Applying this attribute does not automatically obfuscate the code entity to which you apply it. Applying the attribute is an alternative to creating a configuration file for the obfuscation tool. That is, it merely provides instructions for an obfuscation tool. Microsoft recommends that vendors of obfuscation tools follow the semantics described here. However, there is no guarantee that a particular tool follows Microsoft recommendations.\"\n  example:\n  - \"The following code example shows an <xref:System.Reflection.ObfuscationAttribute> whose StripAfterObfuscation property is `false` so that the obfuscation tool will not strip the attribute after obfuscation. It is necessary to specify `false` for the <xref:System.Reflection.ObfuscationAttribute.Exclude%2A> property to avoid excluding `MethodA` from obfuscation, because the default for the <xref:System.Reflection.ObfuscationAttribute.Exclude%2A> property is `true`.  \\n  \\n This code is part of a larger example that can be compiled and executed. See the <xref:System.Reflection.ObfuscationAttribute> class.  \\n  \\n [!code-cs[ObfuscationAttribute#4](~/add/codesnippet/csharp/p-system.reflection.obfu_0_1.cs)]\\n [!code-vb[ObfuscationAttribute#4](~/add/codesnippet/visualbasic/p-system.reflection.obfu_0_1.vb)]\"\n  syntax:\n    content: public bool StripAfterObfuscation { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if an obfuscation tool should remove the attribute after processing; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Reflection.ObfuscationAttribute.StripAfterObfuscation*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.Reflection.ObfuscationAttribute.#ctor\n  parent: System.Reflection.ObfuscationAttribute\n  isExternal: false\n  name: ObfuscationAttribute()\n  nameWithType: ObfuscationAttribute.ObfuscationAttribute()\n  fullName: System.Reflection.ObfuscationAttribute.ObfuscationAttribute()\n- uid: System.Reflection.ObfuscationAttribute.ApplyToMembers\n  parent: System.Reflection.ObfuscationAttribute\n  isExternal: false\n  name: ApplyToMembers\n  nameWithType: ObfuscationAttribute.ApplyToMembers\n  fullName: System.Reflection.ObfuscationAttribute.ApplyToMembers\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.ObfuscationAttribute.Exclude\n  parent: System.Reflection.ObfuscationAttribute\n  isExternal: false\n  name: Exclude\n  nameWithType: ObfuscationAttribute.Exclude\n  fullName: System.Reflection.ObfuscationAttribute.Exclude\n- uid: System.Reflection.ObfuscationAttribute.Feature\n  parent: System.Reflection.ObfuscationAttribute\n  isExternal: false\n  name: Feature\n  nameWithType: ObfuscationAttribute.Feature\n  fullName: System.Reflection.ObfuscationAttribute.Feature\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.ObfuscationAttribute.StripAfterObfuscation\n  parent: System.Reflection.ObfuscationAttribute\n  isExternal: false\n  name: StripAfterObfuscation\n  nameWithType: ObfuscationAttribute.StripAfterObfuscation\n  fullName: System.Reflection.ObfuscationAttribute.StripAfterObfuscation\n- uid: System.Reflection.ObfuscationAttribute.#ctor*\n  parent: System.Reflection.ObfuscationAttribute\n  isExternal: false\n  name: ObfuscationAttribute\n  nameWithType: ObfuscationAttribute.ObfuscationAttribute\n- uid: System.Reflection.ObfuscationAttribute.ApplyToMembers*\n  parent: System.Reflection.ObfuscationAttribute\n  isExternal: false\n  name: ApplyToMembers\n  nameWithType: ObfuscationAttribute.ApplyToMembers\n- uid: System.Reflection.ObfuscationAttribute.Exclude*\n  parent: System.Reflection.ObfuscationAttribute\n  isExternal: false\n  name: Exclude\n  nameWithType: ObfuscationAttribute.Exclude\n- uid: System.Reflection.ObfuscationAttribute.Feature*\n  parent: System.Reflection.ObfuscationAttribute\n  isExternal: false\n  name: Feature\n  nameWithType: ObfuscationAttribute.Feature\n- uid: System.Reflection.ObfuscationAttribute.StripAfterObfuscation*\n  parent: System.Reflection.ObfuscationAttribute\n  isExternal: false\n  name: StripAfterObfuscation\n  nameWithType: ObfuscationAttribute.StripAfterObfuscation\n"}