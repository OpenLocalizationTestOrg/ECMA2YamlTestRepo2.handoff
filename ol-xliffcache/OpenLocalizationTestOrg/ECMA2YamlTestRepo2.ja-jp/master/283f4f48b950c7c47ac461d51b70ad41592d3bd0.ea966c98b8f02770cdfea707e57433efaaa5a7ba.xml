{"nodes":[{"pos":[300,437],"content":"Represents the method that will handle the <xref:System.Reflection.Assembly.ModuleResolve> event of an <xref:System.Reflection.Assembly>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the method that will handle the &lt;xref:System.Reflection.Assembly.ModuleResolve&gt; event of an &lt;xref:System.Reflection.Assembly&gt;.","pos":[0,137],"source":"Represents the method that will handle the <xref:System.Reflection.Assembly.ModuleResolve> event of an <xref:System.Reflection.Assembly>."}]},{"pos":[449,696],"content":"If the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means, this event is raised. The event handler for this delegate must locate and return a module that satisfies the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means, this event is raised. The event handler for this delegate must locate and return a module that satisfies the request.","pos":[0,247],"nodes":[{"content":"If the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means, this event is raised.","pos":[0,151]},{"content":"The event handler for this delegate must locate and return a module that satisfies the request.","pos":[152,247]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.ModuleResolveEventHandler\n  id: ModuleResolveEventHandler\n  langs:\n  - csharp\n  name: ModuleResolveEventHandler\n  nameWithType: ModuleResolveEventHandler\n  fullName: System.Reflection.ModuleResolveEventHandler\n  type: Delegate\n  summary: Represents the method that will handle the <xref:System.Reflection.Assembly.ModuleResolve> event of an <xref:System.Reflection.Assembly>.\n  remarks: If the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means, this event is raised. The event handler for this delegate must locate and return a module that satisfies the request.\n  example:\n  - \"The following example demonstrates the sequence of execution in which an event handler is called. In this example, Server1 is an external module of the MySample class.  \\n  \\n### To compile and run the example  \\n  \\n1.  Open a Command Prompt window and navigate to the directory that contains MySample.cs.  \\n  \\n2.  Compile Server1 using the following command:  \\n  \\n    ```  \\n    csc /out:subfolder\\\\Server1.netmodule /t:module Server1.cs  \\n    ```  \\n  \\n3.  Compile MySample using the following command:  \\n  \\n    ```  \\n    csc /out:MySample.exe /t:exe /addmodule:subfolder\\\\Server1.netmodule MySample.cs  \\n    ```  \\n  \\n4.  Run MySample.exe.  \\n  \\n> [!NOTE]\\n>  The module file Server1.netmodule must be in a subdirectory named \\\"subfolder\\\" for this example to work properly.  \\n  \\n [!code-cs[System.Reflection.ModuleResolveEventHandler#1](~/add/codesnippet/csharp/t-system.reflection.modu_1.cs)]  \\n[!code-cs[System.Reflection.ModuleResolveEventHandler#2](~/add/codesnippet/csharp/t-system.reflection.modu_2.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public delegate System.Reflection.Module ModuleResolveEventHandler(object sender, ResolveEventArgs e);\n  inheritance:\n  - System.Delegate\n  platform:\n  - net462\nreferences:\n- uid: System.Delegate\n  isExternal: false\n  name: System.Delegate\n"}