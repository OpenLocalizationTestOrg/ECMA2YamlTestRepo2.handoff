{"nodes":[{"pos":[1711,1762],"content":"Allows control of code access security permissions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows control of code access security permissions.","pos":[0,51]}]},{"pos":[4097,4209],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.ResourcePermissionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.ResourcePermissionBase\"></xref> class."},{"pos":[4975,5147],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.ResourcePermissionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified level of access to resources at creation.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.ResourcePermissionBase\"></xref> class with the specified level of access to resources at creation."},{"pos":[5364,5447],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."},{"pos":[5626,5748],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">state</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid value of <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>."},{"pos":[6420,6462],"content":"Adds a permission entry to the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a permission entry to the permission.","pos":[0,42]}]},{"pos":[7291,7379],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> to add."},{"pos":[7580,7735],"content":"The specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The specified <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7847,8303],"content":"The number of elements in the &lt;xref:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath%2A?displayProperty=fullName&gt; property is not equal to the number of elements in the &lt;xref:System.Security.Permissions.ResourcePermissionBase.TagNames%2A?displayProperty=fullName&gt; property.       -or-       The <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> is already included in the permission.","needQuote":false,"needEscape":true,"nodes":[{"content":"The number of elements in the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property is not equal to the number of elements in the <ph id=\"ph3\">&amp;lt;</ph>xref:System.Security.Permissions.ResourcePermissionBase.TagNames%2A?displayProperty=fullName<ph id=\"ph4\">&amp;gt;</ph> property.","pos":[0,313],"source":"The number of elements in the &lt;xref:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath%2A?displayProperty=fullName&gt; property is not equal to the number of elements in the &lt;xref:System.Security.Permissions.ResourcePermissionBase.TagNames%2A?displayProperty=fullName&gt; property."},{"content":"-or-       The <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is already included in the permission.","pos":[320,450],"source":"       -or-       The <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> is already included in the permission."}]},{"pos":[8694,8769],"content":"Specifies the character to be used to represent the any wildcard character.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the character to be used to represent the any wildcard character.","pos":[0,75]}]},{"pos":[8781,8812],"content":"The value of this field is \"*\".","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of this field is \"*\".","pos":[0,31]}]},{"pos":[8918,8930],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9354,9408],"content":"Clears the permission of the added permission entries.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the permission of the added permission entries.","pos":[0,54]}]},{"pos":[9964,10035],"content":"Creates and returns an identical copy of the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns an identical copy of the current permission object.","pos":[0,71]}]},{"pos":[10047,10153],"content":"A copy of the permission object represents the same access to resources as the original permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the permission object represents the same access to resources as the original permission object.","pos":[0,106]}]},{"pos":[10320,10360],"content":"A copy of the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current permission object.","pos":[0,40]}]},{"pos":[10974,11049],"content":"Reconstructs a security object with a specified state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a security object with a specified state from an XML encoding.","pos":[0,75]}]},{"pos":[11258,11317],"content":"The XML encoding to use to reconstruct the security object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoding to use to reconstruct the security object.","pos":[0,59]}]},{"pos":[11499,11680],"content":"The <code>securityElement</code> parameter is not a valid permission element.       -or-       The version number of the <code>securityElement</code> parameter is not supported.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">securityElement</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid permission element.","pos":[0,77],"source":"The <code>securityElement</code> parameter is not a valid permission element."},{"content":"-or-       The version number of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">securityElement</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not supported.","pos":[84,177],"source":"       -or-       The version number of the <code>securityElement</code> parameter is not supported."}]},{"pos":[11784,11891],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">securityElement</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>securityElement</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12373,12507],"content":"Returns an array of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects added to this permission.","needQuote":true,"needEscape":true,"source":"Returns an array of the <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> objects added to this permission."},{"pos":[12519,12748],"content":"Use <xref:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess%2A> and <xref:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess%2A> to add and remove permission entries to this permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use &lt;xref:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess%2A&gt; and &lt;xref:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess%2A&gt; to add and remove permission entries to this permission.","pos":[0,229],"source":"Use <xref:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess%2A> and <xref:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess%2A> to add and remove permission entries to this permission."}]},{"pos":[12985,13117],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that were added to this permission.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> objects that were added to this permission."},{"pos":[13737,13866],"content":"Creates and returns a permission object that is the intersection of the current permission object and a target permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns a permission object that is the intersection of the current permission object and a target permission object.","pos":[0,129]}]},{"pos":[13878,14099],"content":"The intersection of two permission objects is a permission that describes the set of operations they both hold in common. Specifically, it represents the minimum permissions required for a demand to pass both permissions.","needQuote":true,"needEscape":true,"nodes":[{"content":"The intersection of two permission objects is a permission that describes the set of operations they both hold in common. Specifically, it represents the minimum permissions required for a demand to pass both permissions.","pos":[0,221],"nodes":[{"content":"The intersection of two permission objects is a permission that describes the set of operations they both hold in common.","pos":[0,121]},{"content":"Specifically, it represents the minimum permissions required for a demand to pass both permissions.","pos":[122,221]}]}]},{"pos":[14307,14377],"content":"A permission object of the same type as the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission object of the same type as the current permission object.","pos":[0,70]}]},{"pos":[14449,14659],"content":"A new permission object that represents the intersection of the current object and the specified target. This object is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission object that represents the intersection of the current object and the specified target.","pos":[0,104]},{"content":"This object is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the intersection is empty.","pos":[105,210],"source":" This object is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty."}]},{"pos":[14842,14928],"content":"The target permission object is not of the same type as the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target permission object is not of the same type as the current permission object.","pos":[0,86]}]},{"pos":[15451,15540],"content":"Determines whether the current permission object is a subset of the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the current permission object is a subset of the specified permission.","pos":[0,89]}]},{"pos":[16373,16442],"content":"A permission object that is to be tested for the subset relationship.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission object that is to be tested for the subset relationship.","pos":[0,69]}]},{"pos":[16501,16717],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission object is a subset of the specified permission object; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission object is a subset of the specified permission object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17261,17324],"content":"Gets a value indicating whether the permission is unrestricted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the permission is unrestricted.","pos":[0,63]}]},{"pos":[17336,17441],"content":"An unrestricted permission object represents access to any and all resources protected by the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"An unrestricted permission object represents access to any and all resources protected by the permission.","pos":[0,105]}]},{"pos":[17573,17739],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if permission is unrestricted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if permission is unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18235,18301],"content":"Specifies the character to be used to represent a local reference.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the character to be used to represent a local reference.","pos":[0,66]}]},{"pos":[18313,18344],"content":"The value of this field is \".\".","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of this field is \".\".","pos":[0,31]}]},{"pos":[18452,18464],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18959,19061],"content":"Gets or sets an enumeration value that describes the types of access that you are giving the resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets an enumeration value that describes the types of access that you are giving the resource.","pos":[0,102]}]},{"pos":[19190,19318],"content":"An enumeration value that is derived from <xref:System.Type> and describes the types of access that you are giving the resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumeration value that is derived from &lt;xref:System.Type&gt; and describes the types of access that you are giving the resource.","pos":[0,128],"source":"An enumeration value that is derived from <xref:System.Type> and describes the types of access that you are giving the resource."}]},{"pos":[19520,19603],"content":"The property value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The property value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[19698,19745],"content":"The property value is not an enumeration value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property value is not an enumeration value.","pos":[0,47]}]},{"pos":[20432,20479],"content":"Removes a permission entry from the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a permission entry from the permission.","pos":[0,47]}]},{"pos":[20725,20816],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> to remove."},{"pos":[21020,21175],"content":"The specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The specified <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[21287,21730],"content":"The number of elements in the &lt;xref:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath%2A?displayProperty=fullName&gt; property is not equal to the number of elements in the &lt;xref:System.Security.Permissions.ResourcePermissionBase.TagNames%2A?displayProperty=fullName&gt; property.       -or-       The <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> is not in the permission.","needQuote":false,"needEscape":true,"nodes":[{"content":"The number of elements in the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property is not equal to the number of elements in the <ph id=\"ph3\">&amp;lt;</ph>xref:System.Security.Permissions.ResourcePermissionBase.TagNames%2A?displayProperty=fullName<ph id=\"ph4\">&amp;gt;</ph> property.","pos":[0,313],"source":"The number of elements in the &lt;xref:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath%2A?displayProperty=fullName&gt; property is not equal to the number of elements in the &lt;xref:System.Security.Permissions.ResourcePermissionBase.TagNames%2A?displayProperty=fullName&gt; property."},{"content":"-or-       The <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not in the permission.","pos":[320,437],"source":"       -or-       The <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> is not in the permission."}]},{"pos":[22149,22228],"content":"Gets or sets an array of strings that identify the resource you are protecting.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets an array of strings that identify the resource you are protecting.","pos":[0,79]}]},{"pos":[22353,22426],"content":"An array of strings that identify the resource you are trying to protect.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of strings that identify the resource you are trying to protect.","pos":[0,73]}]},{"pos":[22616,22699],"content":"The property value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The property value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[22794,22823],"content":"The length of the array is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of the array is 0.","pos":[0,29]}]},{"pos":[23230,23311],"content":"Creates and returns an XML encoding of the security object and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns an XML encoding of the security object and its current state.","pos":[0,81]}]},{"pos":[23487,23559],"content":"An XML encoding of the security object, including any state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]},{"pos":[24144,24249],"content":"Creates a permission object that combines the current permission object and the target permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a permission object that combines the current permission object and the target permission object.","pos":[0,105]}]},{"pos":[24261,24489],"content":"The result of a call to Union is a permission that represents all the operations represented by both the current permission object and the specified permission object. Any demand that passes either permission passes their union.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of a call to Union is a permission that represents all the operations represented by both the current permission object and the specified permission object. Any demand that passes either permission passes their union.","pos":[0,228],"nodes":[{"content":"The result of a call to Union is a permission that represents all the operations represented by both the current permission object and the specified permission object.","pos":[0,167]},{"content":"Any demand that passes either permission passes their union.","pos":[168,228]}]}]},{"pos":[24693,24821],"content":"A permission object to combine with the current permission object. It must be of the same type as the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission object to combine with the current permission object. It must be of the same type as the current permission object.","pos":[0,128],"nodes":[{"content":"A permission object to combine with the current permission object.","pos":[0,66]},{"content":"It must be of the same type as the current permission object.","pos":[67,128]}]}]},{"pos":[24893,25012],"content":"A new permission object that represents the union of the current permission object and the specified permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission object that represents the union of the current permission object and the specified permission object.","pos":[0,119]}]},{"pos":[25191,25290],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> permission object is not of the same type as the current permission object.","needQuote":true,"needEscape":true,"source":"The <code>target</code> permission object is not of the same type as the current permission object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.ResourcePermissionBase\n  id: ResourcePermissionBase\n  children:\n  - System.Security.Permissions.ResourcePermissionBase.#ctor\n  - System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)\n  - System.Security.Permissions.ResourcePermissionBase.Any\n  - System.Security.Permissions.ResourcePermissionBase.Clear\n  - System.Security.Permissions.ResourcePermissionBase.Copy\n  - System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries\n  - System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.ResourcePermissionBase.IsUnrestricted\n  - System.Security.Permissions.ResourcePermissionBase.Local\n  - System.Security.Permissions.ResourcePermissionBase.PermissionAccessType\n  - System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)\n  - System.Security.Permissions.ResourcePermissionBase.TagNames\n  - System.Security.Permissions.ResourcePermissionBase.ToXml\n  - System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: ResourcePermissionBase\n  nameWithType: ResourcePermissionBase\n  fullName: System.Security.Permissions.ResourcePermissionBase\n  type: Class\n  summary: Allows control of code access security permissions.\n  remarks: >-\n    > [!NOTE]\n\n    >  The ResourcePermissionBase class compares strings using ordinal sort rules and ignores the case of the strings being compared.\n  example:\n  - \"The following example inherits from the ResourcePermissionBase class. 4 kinds of constructors are implemented. The example also provides an implementation of a class called `MailslotPermissionEntry`. The <xref:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType%2A> property is then privately set to the type of `MailslotPermissionEntry`. The <xref:System.Security.Permissions.ResourcePermissionBase.TagNames%2A> property is set privately to \\\"Name\\\" and \\\"Machine\\\".  \\n  \\n [!code-cpp[ResourcePermissionBase#1](~/add/codesnippet/cpp/t-system.security.permis_0_1.cpp)]\\n [!code-vb[ResourcePermissionBase#1](~/add/codesnippet/visualbasic/t-system.security.permis_0_1.vb)]\\n [!code-cs[ResourcePermissionBase#1](~/add/codesnippet/csharp/t-system.security.permis_0_1.cs)]\"\n  syntax:\n    content: 'public abstract class ResourcePermissionBase : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Security.Permissions.ResourcePermissionBase.#ctor\n  id: '#ctor'\n  parent: System.Security.Permissions.ResourcePermissionBase\n  langs:\n  - csharp\n  name: ResourcePermissionBase()\n  nameWithType: ResourcePermissionBase.ResourcePermissionBase()\n  fullName: System.Security.Permissions.ResourcePermissionBase.ResourcePermissionBase()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.ResourcePermissionBase\"></xref> class.\n  syntax:\n    content: protected ResourcePermissionBase ();\n    parameters: []\n  overload: System.Security.Permissions.ResourcePermissionBase.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.ResourcePermissionBase\n  langs:\n  - csharp\n  name: ResourcePermissionBase(PermissionState)\n  nameWithType: ResourcePermissionBase.ResourcePermissionBase(PermissionState)\n  fullName: System.Security.Permissions.ResourcePermissionBase.ResourcePermissionBase(PermissionState)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.ResourcePermissionBase\"></xref> class with the specified level of access to resources at creation.\n  syntax:\n    content: protected ResourcePermissionBase (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Security.Permissions.ResourcePermissionBase.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)\n  id: AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  langs:\n  - csharp\n  name: AddPermissionAccess(ResourcePermissionBaseEntry)\n  nameWithType: ResourcePermissionBase.AddPermissionAccess(ResourcePermissionBaseEntry)\n  fullName: System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(ResourcePermissionBaseEntry)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Adds a permission entry to the permission.\n  remarks: ''\n  example:\n  - \"The following example shows the use of the AddPermissionAccess method to add a permission access entry during class initialization. This code example is part of a larger example provided for the <xref:System.Security.Permissions.ResourcePermissionBase> class.  \\n  \\n [!code-cpp[ResourcePermissionBase#2](~/add/codesnippet/cpp/dfef5eb6-165b-4033-bd02-_1.cpp)]\\n [!code-vb[ResourcePermissionBase#2](~/add/codesnippet/visualbasic/dfef5eb6-165b-4033-bd02-_1.vb)]\\n [!code-cs[ResourcePermissionBase#2](~/add/codesnippet/csharp/dfef5eb6-165b-4033-bd02-_1.cs)]\"\n  syntax:\n    content: protected void AddPermissionAccess (System.Security.Permissions.ResourcePermissionBaseEntry entry);\n    parameters:\n    - id: entry\n      type: System.Security.Permissions.ResourcePermissionBaseEntry\n      description: The <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> to add.\n  overload: System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The specified <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The number of elements in the &lt;xref:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath%2A?displayProperty=fullName&gt; property is not equal to the number of elements in the &lt;xref:System.Security.Permissions.ResourcePermissionBase.TagNames%2A?displayProperty=fullName&gt; property.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Security.Permissions.ResourcePermissionBaseEntry\\\"></xref> is already included in the permission.\"\n  platform:\n  - net462\n- uid: System.Security.Permissions.ResourcePermissionBase.Any\n  id: Any\n  parent: System.Security.Permissions.ResourcePermissionBase\n  langs:\n  - csharp\n  name: Any\n  nameWithType: ResourcePermissionBase.Any\n  fullName: System.Security.Permissions.ResourcePermissionBase.Any\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Specifies the character to be used to represent the any wildcard character.\n  remarks: The value of this field is \"*\".\n  syntax:\n    content: public const string Any;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.ResourcePermissionBase.Clear\n  id: Clear\n  parent: System.Security.Permissions.ResourcePermissionBase\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: ResourcePermissionBase.Clear()\n  fullName: System.Security.Permissions.ResourcePermissionBase.Clear()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Clears the permission of the added permission entries.\n  syntax:\n    content: protected void Clear ();\n    parameters: []\n  overload: System.Security.Permissions.ResourcePermissionBase.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.ResourcePermissionBase.Copy\n  id: Copy\n  parent: System.Security.Permissions.ResourcePermissionBase\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: ResourcePermissionBase.Copy()\n  fullName: System.Security.Permissions.ResourcePermissionBase.Copy()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Creates and returns an identical copy of the current permission object.\n  remarks: A copy of the permission object represents the same access to resources as the original permission object.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission object.\n  overload: System.Security.Permissions.ResourcePermissionBase.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: ResourcePermissionBase.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.ResourcePermissionBase.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Reconstructs a security object with a specified state from an XML encoding.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the security object.\n  overload: System.Security.Permissions.ResourcePermissionBase.FromXml*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>securityElement</code> parameter is not a valid permission element.  \\n  \\n -or-  \\n  \\n The version number of the <code>securityElement</code> parameter is not supported.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>securityElement</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries\n  id: GetPermissionEntries\n  parent: System.Security.Permissions.ResourcePermissionBase\n  langs:\n  - csharp\n  name: GetPermissionEntries()\n  nameWithType: ResourcePermissionBase.GetPermissionEntries()\n  fullName: System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Returns an array of the <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> objects added to this permission.\n  remarks: Use <xref:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess%2A> and <xref:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess%2A> to add and remove permission entries to this permission.\n  syntax:\n    content: protected System.Security.Permissions.ResourcePermissionBaseEntry[] GetPermissionEntries ();\n    parameters: []\n    return:\n      type: System.Security.Permissions.ResourcePermissionBaseEntry[]\n      description: An array of <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> objects that were added to this permission.\n  overload: System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: ResourcePermissionBase.Intersect(IPermission)\n  fullName: System.Security.Permissions.ResourcePermissionBase.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Creates and returns a permission object that is the intersection of the current permission object and a target permission object.\n  remarks: The intersection of two permission objects is a permission that describes the set of operations they both hold in common. Specifically, it represents the minimum permissions required for a demand to pass both permissions.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object of the same type as the current permission object.\n    return:\n      type: System.Security.IPermission\n      description: A new permission object that represents the intersection of the current object and the specified target. This object is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.\n  overload: System.Security.Permissions.ResourcePermissionBase.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The target permission object is not of the same type as the current permission object.\n  platform:\n  - net462\n- uid: System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: ResourcePermissionBase.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Determines whether the current permission object is a subset of the specified permission.\n  remarks: \"The current permission object is a subset of the specified permission object if the current permission object specifies a set of operations that is wholly contained by the specified permission object. For example, a permission that represents access to C:\\\\Example.txt is a subset of a permission that represents access to C:\\\\\\\\. If this method returns `true`, the current permission object represents no more access to the protected resource than does the specified permission object.  \\n  \\n This method always returns `false` when the specified permission object is of a different type than that of the current permission object.\"\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object that is to be tested for the subset relationship.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission object is a subset of the specified permission object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.ResourcePermissionBase.IsSubsetOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.ResourcePermissionBase.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Security.Permissions.ResourcePermissionBase\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: ResourcePermissionBase.IsUnrestricted()\n  fullName: System.Security.Permissions.ResourcePermissionBase.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Gets a value indicating whether the permission is unrestricted.\n  remarks: An unrestricted permission object represents access to any and all resources protected by the permission.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if permission is unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.ResourcePermissionBase.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.ResourcePermissionBase.Local\n  id: Local\n  parent: System.Security.Permissions.ResourcePermissionBase\n  langs:\n  - csharp\n  name: Local\n  nameWithType: ResourcePermissionBase.Local\n  fullName: System.Security.Permissions.ResourcePermissionBase.Local\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Specifies the character to be used to represent a local reference.\n  remarks: The value of this field is \".\".\n  syntax:\n    content: public const string Local;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.ResourcePermissionBase.PermissionAccessType\n  id: PermissionAccessType\n  parent: System.Security.Permissions.ResourcePermissionBase\n  langs:\n  - csharp\n  name: PermissionAccessType\n  nameWithType: ResourcePermissionBase.PermissionAccessType\n  fullName: System.Security.Permissions.ResourcePermissionBase.PermissionAccessType\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Gets or sets an enumeration value that describes the types of access that you are giving the resource.\n  syntax:\n    content: protected Type PermissionAccessType { get; set; }\n    return:\n      type: System.Type\n      description: An enumeration value that is derived from <xref:System.Type> and describes the types of access that you are giving the resource.\n  overload: System.Security.Permissions.ResourcePermissionBase.PermissionAccessType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The property value is not an enumeration value.\n  platform:\n  - net462\n- uid: System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)\n  id: RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  langs:\n  - csharp\n  name: RemovePermissionAccess(ResourcePermissionBaseEntry)\n  nameWithType: ResourcePermissionBase.RemovePermissionAccess(ResourcePermissionBaseEntry)\n  fullName: System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(ResourcePermissionBaseEntry)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Removes a permission entry from the permission.\n  syntax:\n    content: protected void RemovePermissionAccess (System.Security.Permissions.ResourcePermissionBaseEntry entry);\n    parameters:\n    - id: entry\n      type: System.Security.Permissions.ResourcePermissionBaseEntry\n      description: The <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> to remove.\n  overload: System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The specified <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The number of elements in the &lt;xref:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath%2A?displayProperty=fullName&gt; property is not equal to the number of elements in the &lt;xref:System.Security.Permissions.ResourcePermissionBase.TagNames%2A?displayProperty=fullName&gt; property.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Security.Permissions.ResourcePermissionBaseEntry\\\"></xref> is not in the permission.\"\n  platform:\n  - net462\n- uid: System.Security.Permissions.ResourcePermissionBase.TagNames\n  id: TagNames\n  parent: System.Security.Permissions.ResourcePermissionBase\n  langs:\n  - csharp\n  name: TagNames\n  nameWithType: ResourcePermissionBase.TagNames\n  fullName: System.Security.Permissions.ResourcePermissionBase.TagNames\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Gets or sets an array of strings that identify the resource you are protecting.\n  syntax:\n    content: protected string[] TagNames { get; set; }\n    return:\n      type: System.String[]\n      description: An array of strings that identify the resource you are trying to protect.\n  overload: System.Security.Permissions.ResourcePermissionBase.TagNames*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The length of the array is 0.\n  platform:\n  - net462\n- uid: System.Security.Permissions.ResourcePermissionBase.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.ResourcePermissionBase\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: ResourcePermissionBase.ToXml()\n  fullName: System.Security.Permissions.ResourcePermissionBase.ToXml()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Creates and returns an XML encoding of the security object and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Security.Permissions.ResourcePermissionBase.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: ResourcePermissionBase.Union(IPermission)\n  fullName: System.Security.Permissions.ResourcePermissionBase.Union(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Creates a permission object that combines the current permission object and the target permission object.\n  remarks: The result of a call to Union is a permission that represents all the operations represented by both the current permission object and the specified permission object. Any demand that passes either permission passes their union.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object to combine with the current permission object. It must be of the same type as the current permission object.\n    return:\n      type: System.Security.IPermission\n      description: A new permission object that represents the union of the current permission object and the specified permission object.\n  overload: System.Security.Permissions.ResourcePermissionBase.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> permission object is not of the same type as the current permission object.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Security.Permissions.ResourcePermissionBase.#ctor\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: ResourcePermissionBase()\n  nameWithType: ResourcePermissionBase.ResourcePermissionBase()\n  fullName: System.Security.Permissions.ResourcePermissionBase.ResourcePermissionBase()\n- uid: System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: ResourcePermissionBase(PermissionState)\n  nameWithType: ResourcePermissionBase.ResourcePermissionBase(PermissionState)\n  fullName: System.Security.Permissions.ResourcePermissionBase.ResourcePermissionBase(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: AddPermissionAccess(ResourcePermissionBaseEntry)\n  nameWithType: ResourcePermissionBase.AddPermissionAccess(ResourcePermissionBaseEntry)\n  fullName: System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(ResourcePermissionBaseEntry)\n- uid: System.Security.Permissions.ResourcePermissionBaseEntry\n  parent: System.Security.Permissions\n  isExternal: false\n  name: ResourcePermissionBaseEntry\n  nameWithType: ResourcePermissionBaseEntry\n  fullName: System.Security.Permissions.ResourcePermissionBaseEntry\n- uid: System.Security.Permissions.ResourcePermissionBase.Any\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Any\n  nameWithType: ResourcePermissionBase.Any\n  fullName: System.Security.Permissions.ResourcePermissionBase.Any\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Permissions.ResourcePermissionBase.Clear\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Clear()\n  nameWithType: ResourcePermissionBase.Clear()\n  fullName: System.Security.Permissions.ResourcePermissionBase.Clear()\n- uid: System.Security.Permissions.ResourcePermissionBase.Copy\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Copy()\n  nameWithType: ResourcePermissionBase.Copy()\n  fullName: System.Security.Permissions.ResourcePermissionBase.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: ResourcePermissionBase.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.ResourcePermissionBase.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: GetPermissionEntries()\n  nameWithType: ResourcePermissionBase.GetPermissionEntries()\n  fullName: System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries()\n- uid: System.Security.Permissions.ResourcePermissionBaseEntry[]\n  parent: System.Security.Permissions\n  isExternal: false\n  name: ResourcePermissionBaseEntry\n  nameWithType: ResourcePermissionBaseEntry\n  fullName: System.Security.Permissions.ResourcePermissionBaseEntry[]\n  spec.csharp:\n  - uid: System.Security.Permissions.ResourcePermissionBaseEntry\n    name: ResourcePermissionBaseEntry\n    nameWithType: ResourcePermissionBaseEntry\n    fullName: ResourcePermissionBaseEntry[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: ResourcePermissionBase.Intersect(IPermission)\n  fullName: System.Security.Permissions.ResourcePermissionBase.Intersect(IPermission)\n- uid: System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: ResourcePermissionBase.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.ResourcePermissionBase.IsUnrestricted\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: ResourcePermissionBase.IsUnrestricted()\n  fullName: System.Security.Permissions.ResourcePermissionBase.IsUnrestricted()\n- uid: System.Security.Permissions.ResourcePermissionBase.Local\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Local\n  nameWithType: ResourcePermissionBase.Local\n  fullName: System.Security.Permissions.ResourcePermissionBase.Local\n- uid: System.Security.Permissions.ResourcePermissionBase.PermissionAccessType\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: PermissionAccessType\n  nameWithType: ResourcePermissionBase.PermissionAccessType\n  fullName: System.Security.Permissions.ResourcePermissionBase.PermissionAccessType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: RemovePermissionAccess(ResourcePermissionBaseEntry)\n  nameWithType: ResourcePermissionBase.RemovePermissionAccess(ResourcePermissionBaseEntry)\n  fullName: System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(ResourcePermissionBaseEntry)\n- uid: System.Security.Permissions.ResourcePermissionBase.TagNames\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: TagNames\n  nameWithType: ResourcePermissionBase.TagNames\n  fullName: System.Security.Permissions.ResourcePermissionBase.TagNames\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Permissions.ResourcePermissionBase.ToXml\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: ToXml()\n  nameWithType: ResourcePermissionBase.ToXml()\n  fullName: System.Security.Permissions.ResourcePermissionBase.ToXml()\n- uid: System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: ResourcePermissionBase.Union(IPermission)\n  fullName: System.Security.Permissions.ResourcePermissionBase.Union(IPermission)\n- uid: System.Security.Permissions.ResourcePermissionBase.#ctor*\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: ResourcePermissionBase\n  nameWithType: ResourcePermissionBase.ResourcePermissionBase\n- uid: System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess*\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: AddPermissionAccess\n  nameWithType: ResourcePermissionBase.AddPermissionAccess\n- uid: System.Security.Permissions.ResourcePermissionBase.Clear*\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Clear\n  nameWithType: ResourcePermissionBase.Clear\n- uid: System.Security.Permissions.ResourcePermissionBase.Copy*\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Copy\n  nameWithType: ResourcePermissionBase.Copy\n- uid: System.Security.Permissions.ResourcePermissionBase.FromXml*\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: FromXml\n  nameWithType: ResourcePermissionBase.FromXml\n- uid: System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries*\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: GetPermissionEntries\n  nameWithType: ResourcePermissionBase.GetPermissionEntries\n- uid: System.Security.Permissions.ResourcePermissionBase.Intersect*\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Intersect\n  nameWithType: ResourcePermissionBase.Intersect\n- uid: System.Security.Permissions.ResourcePermissionBase.IsSubsetOf*\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: ResourcePermissionBase.IsSubsetOf\n- uid: System.Security.Permissions.ResourcePermissionBase.IsUnrestricted*\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: ResourcePermissionBase.IsUnrestricted\n- uid: System.Security.Permissions.ResourcePermissionBase.PermissionAccessType*\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: PermissionAccessType\n  nameWithType: ResourcePermissionBase.PermissionAccessType\n- uid: System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess*\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: RemovePermissionAccess\n  nameWithType: ResourcePermissionBase.RemovePermissionAccess\n- uid: System.Security.Permissions.ResourcePermissionBase.TagNames*\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: TagNames\n  nameWithType: ResourcePermissionBase.TagNames\n- uid: System.Security.Permissions.ResourcePermissionBase.ToXml*\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: ToXml\n  nameWithType: ResourcePermissionBase.ToXml\n- uid: System.Security.Permissions.ResourcePermissionBase.Union*\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Union\n  nameWithType: ResourcePermissionBase.Union\n"}