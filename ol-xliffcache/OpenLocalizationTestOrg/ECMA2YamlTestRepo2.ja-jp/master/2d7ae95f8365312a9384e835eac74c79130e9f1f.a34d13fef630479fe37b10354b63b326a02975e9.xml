{"nodes":[{"pos":[401,498],"content":"Represents a handle to <bpt id=\"p1\">&lt;xref href=\"System.Runtime.DurableInstancing.InstanceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Represents a handle to <xref href=\"System.Runtime.DurableInstancing.InstanceView\"></xref> object."},{"pos":[510,684],"content":"A host interacts with an instance in the instance store by obtaining an instance handle to the instance from the <xref:System.Runtime.DurableInstancing.InstanceStore> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A host interacts with an instance in the instance store by obtaining an instance handle to the instance from the &lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt; object.","pos":[0,174],"source":"A host interacts with an instance in the instance store by obtaining an instance handle to the instance from the <xref:System.Runtime.DurableInstancing.InstanceStore> object."}]},{"pos":[1231,1257],"content":"Frees the instance handle.","needQuote":true,"needEscape":true,"nodes":[{"content":"Frees the instance handle.","pos":[0,26]}]},{"pos":[1830,1897],"content":"Returns a value that indicates whether an instance handle is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether an instance handle is valid.","pos":[0,67]}]},{"pos":[2008,2183],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the handle is valid; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the handle is not valid.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handle is valid; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the handle is not valid."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.DurableInstancing.InstanceHandle\n  id: InstanceHandle\n  children:\n  - System.Runtime.DurableInstancing.InstanceHandle.Free\n  - System.Runtime.DurableInstancing.InstanceHandle.IsValid\n  langs:\n  - csharp\n  name: InstanceHandle\n  nameWithType: InstanceHandle\n  fullName: System.Runtime.DurableInstancing.InstanceHandle\n  type: Class\n  summary: Represents a handle to <xref href=\"System.Runtime.DurableInstancing.InstanceView\"></xref> object.\n  remarks: A host interacts with an instance in the instance store by obtaining an instance handle to the instance from the <xref:System.Runtime.DurableInstancing.InstanceStore> object.\n  syntax:\n    content: public sealed class InstanceHandle\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Runtime.DurableInstancing.InstanceHandle.Free\n  id: Free\n  parent: System.Runtime.DurableInstancing.InstanceHandle\n  langs:\n  - csharp\n  name: Free()\n  nameWithType: InstanceHandle.Free()\n  fullName: System.Runtime.DurableInstancing.InstanceHandle.Free()\n  type: Method\n  assemblies:\n  - System.Runtime.DurableInstancing\n  namespace: System.Runtime.DurableInstancing\n  summary: Frees the instance handle.\n  syntax:\n    content: public void Free ();\n    parameters: []\n  overload: System.Runtime.DurableInstancing.InstanceHandle.Free*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.DurableInstancing.InstanceHandle.IsValid\n  id: IsValid\n  parent: System.Runtime.DurableInstancing.InstanceHandle\n  langs:\n  - csharp\n  name: IsValid\n  nameWithType: InstanceHandle.IsValid\n  fullName: System.Runtime.DurableInstancing.InstanceHandle.IsValid\n  type: Property\n  assemblies:\n  - System.Runtime.DurableInstancing\n  namespace: System.Runtime.DurableInstancing\n  summary: Returns a value that indicates whether an instance handle is valid.\n  syntax:\n    content: public bool IsValid { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handle is valid; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the handle is not valid.\n  overload: System.Runtime.DurableInstancing.InstanceHandle.IsValid*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Runtime.DurableInstancing.InstanceHandle.Free\n  parent: System.Runtime.DurableInstancing.InstanceHandle\n  isExternal: false\n  name: Free()\n  nameWithType: InstanceHandle.Free()\n  fullName: System.Runtime.DurableInstancing.InstanceHandle.Free()\n- uid: System.Runtime.DurableInstancing.InstanceHandle.IsValid\n  parent: System.Runtime.DurableInstancing.InstanceHandle\n  isExternal: false\n  name: IsValid\n  nameWithType: InstanceHandle.IsValid\n  fullName: System.Runtime.DurableInstancing.InstanceHandle.IsValid\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.DurableInstancing.InstanceHandle.Free*\n  parent: System.Runtime.DurableInstancing.InstanceHandle\n  isExternal: false\n  name: Free\n  nameWithType: InstanceHandle.Free\n- uid: System.Runtime.DurableInstancing.InstanceHandle.IsValid*\n  parent: System.Runtime.DurableInstancing.InstanceHandle\n  isExternal: false\n  name: IsValid\n  nameWithType: InstanceHandle.IsValid\n"}