{"nodes":[{"pos":[736,994],"content":"Represents a validation error that is created either by the binding engine when a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ValidationRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> reports a validation error, or through the &lt;xref:System.Windows.Controls.Validation.MarkInvalid*&gt; method explicitly.","needQuote":true,"needEscape":true,"source":"Represents a validation error that is created either by the binding engine when a <xref href=\"System.Windows.Controls.ValidationRule\"></xref> reports a validation error, or through the <xref:System.Windows.Controls.Validation.MarkInvalid*> method explicitly."},{"pos":[1007,3827],"content":"The [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate validation rules with your <xref:System.Windows.Data.Binding> object. Validation occurs during target-to-source value transfer before the converter is called. The following describes the validation process.      1.  When a value is being transferred from the target property to the source property, the data binding engine first removes any ValidationError that might have been added to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property of the bound element. It then checks whether any custom validation rules are defined for that <xref:System.Windows.Data.Binding>, in which case it calls the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method on each <xref:System.Windows.Controls.ValidationRule> until one of them fails or until all of them pass.      2.  Once there is a custom rule that does not pass, the binding engine creates a ValidationError object and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element. When <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> is not empty, the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> attached property of the element is set to `true`. Also, if the <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> property of the <xref:System.Windows.Data.Binding> is set to `true`, then the binding engine raises the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> attached event on the element.      3.  If all the rules pass, the binding engine then calls the converter, if one exists.      4.  If the converter passes, the binding engine calls the setter of the source property.      5.  If the binding has an <xref:System.Windows.Controls.ExceptionValidationRule> associated with it and an exception is thrown during step 3 or 4, the binding engine checks to see if there is an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>. You can use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> callback to provide a custom handler for handling exceptions. If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a ValidationError with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element.       A valid value transfer in either direction (target to source or source to target) will clear the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> data binding model enables you to associate validation rules with your &lt;xref:System.Windows.Data.Binding&gt; object.","pos":[0,193],"source":"The [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate validation rules with your <xref:System.Windows.Data.Binding> object."},{"content":"Validation occurs during target-to-source value transfer before the converter is called.","pos":[194,282]},{"content":"The following describes the validation process.","pos":[283,330]},{"content":"1.","pos":[336,338]},{"content":"When a value is being transferred from the target property to the source property, the data binding engine first removes any ValidationError that might have been added to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; attached property of the bound element.","pos":[340,631],"source":"  When a value is being transferred from the target property to the source property, the data binding engine first removes any ValidationError that might have been added to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property of the bound element."},{"content":"It then checks whether any custom validation rules are defined for that &lt;xref:System.Windows.Data.Binding&gt;, in which case it calls the &lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt; method on each &lt;xref:System.Windows.Controls.ValidationRule&gt; until one of them fails or until all of them pass.","pos":[632,936],"source":" It then checks whether any custom validation rules are defined for that <xref:System.Windows.Data.Binding>, in which case it calls the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method on each <xref:System.Windows.Controls.ValidationRule> until one of them fails or until all of them pass."},{"content":"2.","pos":[942,944]},{"content":"Once there is a custom rule that does not pass, the binding engine creates a ValidationError object and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element.","pos":[946,1174],"source":"  Once there is a custom rule that does not pass, the binding engine creates a ValidationError object and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element."},{"content":"When &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; is not empty, the &lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName&gt; attached property of the element is set to <ph id=\"ph1\">`true`</ph>.","pos":[1175,1404],"source":" When <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> is not empty, the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> attached property of the element is set to `true`."},{"content":"Also, if the &lt;xref:System.Windows.Data.Binding.NotifyOnValidationError%2A&gt; property of the &lt;xref:System.Windows.Data.Binding&gt; is set to <ph id=\"ph1\">`true`</ph>, then the binding engine raises the &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt; attached event on the element.","pos":[1405,1687],"source":" Also, if the <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> property of the <xref:System.Windows.Data.Binding> is set to `true`, then the binding engine raises the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> attached event on the element."},{"content":"3.","pos":[1693,1695]},{"content":"If all the rules pass, the binding engine then calls the converter, if one exists.","pos":[1697,1779]},{"content":"4.","pos":[1785,1787]},{"content":"If the converter passes, the binding engine calls the setter of the source property.","pos":[1789,1873]},{"content":"5.","pos":[1879,1881]},{"content":"If the binding has an &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; associated with it and an exception is thrown during step 3 or 4, the binding engine checks to see if there is an &lt;xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A&gt;.","pos":[1883,2140],"source":"  If the binding has an <xref:System.Windows.Controls.ExceptionValidationRule> associated with it and an exception is thrown during step 3 or 4, the binding engine checks to see if there is an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>."},{"content":"You can use the &lt;xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A&gt; callback to provide a custom handler for handling exceptions.","pos":[2141,2284],"source":" You can use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> callback to provide a custom handler for handling exceptions."},{"content":"If an &lt;xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A&gt; is not specified on the &lt;xref:System.Windows.Data.Binding&gt;, the binding engine creates a ValidationError with the exception and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element.","pos":[2285,2609],"source":" If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a ValidationError with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element."},{"content":"A valid value transfer in either direction (target to source or source to target) will clear the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; attached property.","pos":[2616,2808],"source":"       A valid value transfer in either direction (target to source or source to target) will clear the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property."}]},{"pos":[4968,5099],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ValidationError\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified parameters.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.ValidationError\"></xref> class with the specified parameters."},{"pos":[5331,5371],"content":"The rule that detected validation error.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rule that detected validation error.","pos":[0,40]}]},{"pos":[5442,5605],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.Data.MultiBindingExpression\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object with the validation error.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Data.BindingExpression\"></xref> or <xref href=\"System.Windows.Data.MultiBindingExpression\"></xref> object with the validation error."},{"pos":[6380,6511],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ValidationError\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified parameters.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.ValidationError\"></xref> class with the specified parameters."},{"pos":[6785,6825],"content":"The rule that detected validation error.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rule that detected validation error.","pos":[0,40]}]},{"pos":[6896,7059],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.Data.MultiBindingExpression\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object with the validation error.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Data.BindingExpression\"></xref> or <xref href=\"System.Windows.Data.MultiBindingExpression\"></xref> object with the validation error."},{"pos":[7128,7156],"content":"Information about the error.","needQuote":true,"needEscape":true,"nodes":[{"content":"Information about the error.","pos":[0,28]}]},{"pos":[7225,7381],"content":"The exception that caused the validation failure. This parameter is optional and can be set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception that caused the validation failure.","pos":[0,49]},{"content":"This parameter is optional and can be set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[50,156],"source":" This parameter is optional and can be set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[7876,8167],"content":"Gets the <xref href=\"System.Windows.Data.BindingExpression\"></xref> or <xref href=\"System.Windows.Data.MultiBindingExpression\"></xref> object of this <xref href=\"System.Windows.Controls.ValidationError\"></xref>. The object is either marked invalid explicitly or has a failed validation rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.Data.MultiBindingExpression\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object of this <bpt id=\"p3\">&lt;xref href=\"System.Windows.Controls.ValidationError\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,211],"source":"Gets the <xref href=\"System.Windows.Data.BindingExpression\"></xref> or <xref href=\"System.Windows.Data.MultiBindingExpression\"></xref> object of this <xref href=\"System.Windows.Controls.ValidationError\"></xref>."},{"content":"The object is either marked invalid explicitly or has a failed validation rule.","pos":[212,291]}]},{"pos":[8286,8492],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.Data.MultiBindingExpression\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object of this <bpt id=\"p3\">&lt;xref href=\"System.Windows.Controls.ValidationError\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Data.BindingExpression\"></xref> or <xref href=\"System.Windows.Data.MultiBindingExpression\"></xref> object of this <xref href=\"System.Windows.Controls.ValidationError\"></xref>."},{"pos":[8986,9151],"content":"Gets or sets an object that provides additional context for this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ValidationError\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, such as a string describing the error.","needQuote":true,"needEscape":true,"source":"Gets or sets an object that provides additional context for this <xref href=\"System.Windows.Controls.ValidationError\"></xref>, such as a string describing the error."},{"pos":[9164,9274],"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_ErrorContent\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    See the Example section for an example.","needQuote":false,"needEscape":true,"source":"<a name=\"xamlTextUsage_ErrorContent\"></a>    ## XAML Text Usage    See the Example section for an example."},{"pos":[9857,9970],"content":"An object that provides additional context for this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ValidationError\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An object that provides additional context for this <xref href=\"System.Windows.Controls.ValidationError\"></xref>."},{"pos":[10447,10627],"content":"Gets or sets the &lt;xref:System.Exception&gt; object that was the cause of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ValidationError\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the error is the result of an exception.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref:System.Exception> object that was the cause of this <xref href=\"System.Windows.Controls.ValidationError\"></xref>, if the error is the result of an exception."},{"pos":[10752,10831],"content":"The <xref:System.Exception> object, if the error is the result of an exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Exception&gt; object, if the error is the result of an exception.","pos":[0,79],"source":"The <xref:System.Exception> object, if the error is the result of an exception."}]},{"pos":[11315,11536],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ValidationRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that was the cause of this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.ValidationError\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if the error is the result of a validation rule.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Windows.Controls.ValidationRule\"></xref> object that was the cause of this <xref href=\"System.Windows.Controls.ValidationError\"></xref>, if the error is the result of a validation rule."},{"pos":[11714,11834],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ValidationRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, if the error is the result of a validation rule.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Controls.ValidationRule\"></xref> object, if the error is the result of a validation rule."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.ValidationError\n  id: ValidationError\n  children:\n  - System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)\n  - System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)\n  - System.Windows.Controls.ValidationError.BindingInError\n  - System.Windows.Controls.ValidationError.ErrorContent\n  - System.Windows.Controls.ValidationError.Exception\n  - System.Windows.Controls.ValidationError.RuleInError\n  langs:\n  - csharp\n  name: ValidationError\n  nameWithType: ValidationError\n  fullName: System.Windows.Controls.ValidationError\n  type: Class\n  summary: Represents a validation error that is created either by the binding engine when a <xref href=\"System.Windows.Controls.ValidationRule\"></xref> reports a validation error, or through the <xref:System.Windows.Controls.Validation.MarkInvalid*> method explicitly.\n  remarks: \"The [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate validation rules with your <xref:System.Windows.Data.Binding> object. Validation occurs during target-to-source value transfer before the converter is called. The following describes the validation process.  \\n  \\n1.  When a value is being transferred from the target property to the source property, the data binding engine first removes any ValidationError that might have been added to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property of the bound element. It then checks whether any custom validation rules are defined for that <xref:System.Windows.Data.Binding>, in which case it calls the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method on each <xref:System.Windows.Controls.ValidationRule> until one of them fails or until all of them pass.  \\n  \\n2.  Once there is a custom rule that does not pass, the binding engine creates a ValidationError object and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element. When <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> is not empty, the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> attached property of the element is set to `true`. Also, if the <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> property of the <xref:System.Windows.Data.Binding> is set to `true`, then the binding engine raises the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> attached event on the element.  \\n  \\n3.  If all the rules pass, the binding engine then calls the converter, if one exists.  \\n  \\n4.  If the converter passes, the binding engine calls the setter of the source property.  \\n  \\n5.  If the binding has an <xref:System.Windows.Controls.ExceptionValidationRule> associated with it and an exception is thrown during step 3 or 4, the binding engine checks to see if there is an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>. You can use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> callback to provide a custom handler for handling exceptions. If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a ValidationError with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element.  \\n  \\n A valid value transfer in either direction (target to source or source to target) will clear the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property.\"\n  example:\n  - \"The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property returns a collection of ValidationError objects on the bound element.  \\n  \\n [!code-xml[DataBindingLab#14](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#14)]\"\n  syntax:\n    content: public class ValidationError\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)\n  id: '#ctor(System.Windows.Controls.ValidationRule,System.Object)'\n  parent: System.Windows.Controls.ValidationError\n  langs:\n  - csharp\n  name: ValidationError(ValidationRule,Object)\n  nameWithType: ValidationError.ValidationError(ValidationRule,Object)\n  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.ValidationError\"></xref> class with the specified parameters.\n  syntax:\n    content: public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError);\n    parameters:\n    - id: ruleInError\n      type: System.Windows.Controls.ValidationRule\n      description: The rule that detected validation error.\n    - id: bindingInError\n      type: System.Object\n      description: The <xref href=\"System.Windows.Data.BindingExpression\"></xref> or <xref href=\"System.Windows.Data.MultiBindingExpression\"></xref> object with the validation error.\n  overload: System.Windows.Controls.ValidationError.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)\n  id: '#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)'\n  parent: System.Windows.Controls.ValidationError\n  langs:\n  - csharp\n  name: ValidationError(ValidationRule,Object,Object,Exception)\n  nameWithType: ValidationError.ValidationError(ValidationRule,Object,Object,Exception)\n  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object,Object,Exception)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.ValidationError\"></xref> class with the specified parameters.\n  syntax:\n    content: public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, Exception exception);\n    parameters:\n    - id: ruleInError\n      type: System.Windows.Controls.ValidationRule\n      description: The rule that detected validation error.\n    - id: bindingInError\n      type: System.Object\n      description: The <xref href=\"System.Windows.Data.BindingExpression\"></xref> or <xref href=\"System.Windows.Data.MultiBindingExpression\"></xref> object with the validation error.\n    - id: errorContent\n      type: System.Object\n      description: Information about the error.\n    - id: exception\n      type: System.Exception\n      description: The exception that caused the validation failure. This parameter is optional and can be set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Controls.ValidationError.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ValidationError.BindingInError\n  id: BindingInError\n  parent: System.Windows.Controls.ValidationError\n  langs:\n  - csharp\n  name: BindingInError\n  nameWithType: ValidationError.BindingInError\n  fullName: System.Windows.Controls.ValidationError.BindingInError\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the <xref href=\"System.Windows.Data.BindingExpression\"></xref> or <xref href=\"System.Windows.Data.MultiBindingExpression\"></xref> object of this <xref href=\"System.Windows.Controls.ValidationError\"></xref>. The object is either marked invalid explicitly or has a failed validation rule.\n  syntax:\n    content: public object BindingInError { get; }\n    return:\n      type: System.Object\n      description: The <xref href=\"System.Windows.Data.BindingExpression\"></xref> or <xref href=\"System.Windows.Data.MultiBindingExpression\"></xref> object of this <xref href=\"System.Windows.Controls.ValidationError\"></xref>.\n  overload: System.Windows.Controls.ValidationError.BindingInError*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ValidationError.ErrorContent\n  id: ErrorContent\n  parent: System.Windows.Controls.ValidationError\n  langs:\n  - csharp\n  name: ErrorContent\n  nameWithType: ValidationError.ErrorContent\n  fullName: System.Windows.Controls.ValidationError.ErrorContent\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets an object that provides additional context for this <xref href=\"System.Windows.Controls.ValidationError\"></xref>, such as a string describing the error.\n  remarks: \"<a name=\\\"xamlTextUsage_ErrorContent\\\"></a>   \\n## XAML Text Usage  \\n See the Example section for an example.\"\n  example:\n  - \"The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property returns a collection of <xref:System.Windows.Controls.ValidationError> objects on the bound element.  \\n  \\n [!code-xml[DataBindingLab#14](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#14)]\"\n  syntax:\n    content: public object ErrorContent { get; set; }\n    return:\n      type: System.Object\n      description: An object that provides additional context for this <xref href=\"System.Windows.Controls.ValidationError\"></xref>.\n  overload: System.Windows.Controls.ValidationError.ErrorContent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ValidationError.Exception\n  id: Exception\n  parent: System.Windows.Controls.ValidationError\n  langs:\n  - csharp\n  name: Exception\n  nameWithType: ValidationError.Exception\n  fullName: System.Windows.Controls.ValidationError.Exception\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the <xref:System.Exception> object that was the cause of this <xref href=\"System.Windows.Controls.ValidationError\"></xref>, if the error is the result of an exception.\n  syntax:\n    content: public Exception Exception { get; set; }\n    return:\n      type: System.Exception\n      description: The <xref:System.Exception> object, if the error is the result of an exception.\n  overload: System.Windows.Controls.ValidationError.Exception*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ValidationError.RuleInError\n  id: RuleInError\n  parent: System.Windows.Controls.ValidationError\n  langs:\n  - csharp\n  name: RuleInError\n  nameWithType: ValidationError.RuleInError\n  fullName: System.Windows.Controls.ValidationError.RuleInError\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the <xref href=\"System.Windows.Controls.ValidationRule\"></xref> object that was the cause of this <xref href=\"System.Windows.Controls.ValidationError\"></xref>, if the error is the result of a validation rule.\n  syntax:\n    content: public System.Windows.Controls.ValidationRule RuleInError { get; set; }\n    return:\n      type: System.Windows.Controls.ValidationRule\n      description: The <xref href=\"System.Windows.Controls.ValidationRule\"></xref> object, if the error is the result of a validation rule.\n  overload: System.Windows.Controls.ValidationError.RuleInError*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)\n  parent: System.Windows.Controls.ValidationError\n  isExternal: false\n  name: ValidationError(ValidationRule,Object)\n  nameWithType: ValidationError.ValidationError(ValidationRule,Object)\n  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object)\n- uid: System.Windows.Controls.ValidationRule\n  parent: System.Windows.Controls\n  isExternal: false\n  name: ValidationRule\n  nameWithType: ValidationRule\n  fullName: System.Windows.Controls.ValidationRule\n- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)\n  parent: System.Windows.Controls.ValidationError\n  isExternal: false\n  name: ValidationError(ValidationRule,Object,Object,Exception)\n  nameWithType: ValidationError.ValidationError(ValidationRule,Object,Object,Exception)\n  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object,Object,Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Windows.Controls.ValidationError.BindingInError\n  parent: System.Windows.Controls.ValidationError\n  isExternal: false\n  name: BindingInError\n  nameWithType: ValidationError.BindingInError\n  fullName: System.Windows.Controls.ValidationError.BindingInError\n- uid: System.Windows.Controls.ValidationError.ErrorContent\n  parent: System.Windows.Controls.ValidationError\n  isExternal: false\n  name: ErrorContent\n  nameWithType: ValidationError.ErrorContent\n  fullName: System.Windows.Controls.ValidationError.ErrorContent\n- uid: System.Windows.Controls.ValidationError.Exception\n  parent: System.Windows.Controls.ValidationError\n  isExternal: false\n  name: Exception\n  nameWithType: ValidationError.Exception\n  fullName: System.Windows.Controls.ValidationError.Exception\n- uid: System.Windows.Controls.ValidationError.RuleInError\n  parent: System.Windows.Controls.ValidationError\n  isExternal: false\n  name: RuleInError\n  nameWithType: ValidationError.RuleInError\n  fullName: System.Windows.Controls.ValidationError.RuleInError\n- uid: System.Windows.Controls.ValidationError.#ctor*\n  parent: System.Windows.Controls.ValidationError\n  isExternal: false\n  name: ValidationError\n  nameWithType: ValidationError.ValidationError\n- uid: System.Windows.Controls.ValidationError.BindingInError*\n  parent: System.Windows.Controls.ValidationError\n  isExternal: false\n  name: BindingInError\n  nameWithType: ValidationError.BindingInError\n- uid: System.Windows.Controls.ValidationError.ErrorContent*\n  parent: System.Windows.Controls.ValidationError\n  isExternal: false\n  name: ErrorContent\n  nameWithType: ValidationError.ErrorContent\n- uid: System.Windows.Controls.ValidationError.Exception*\n  parent: System.Windows.Controls.ValidationError\n  isExternal: false\n  name: Exception\n  nameWithType: ValidationError.Exception\n- uid: System.Windows.Controls.ValidationError.RuleInError*\n  parent: System.Windows.Controls.ValidationError\n  isExternal: false\n  name: RuleInError\n  nameWithType: ValidationError.RuleInError\n"}