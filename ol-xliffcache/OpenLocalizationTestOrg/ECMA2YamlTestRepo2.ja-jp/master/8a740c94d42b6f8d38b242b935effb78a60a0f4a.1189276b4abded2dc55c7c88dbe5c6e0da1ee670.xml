{"nodes":[{"pos":[1168,1275],"content":"Displays an XML document without formatting or using Extensible Stylesheet Language Transformations (XSLT).","needQuote":true,"needEscape":true,"nodes":[{"content":"Displays an XML document without formatting or using Extensible Stylesheet Language Transformations (XSLT).","pos":[0,107]}]},{"pos":[1288,5730],"content":"In this topic:      -   [Introduction](#introduction)      -   [Specifying XML Data](#specifying_xml_data)      -   [Specifying an XSL Transformation](#specifying_an_xsl_transformation)      -   [Declarative Syntax](#declarative_syntax)      <a name=\"introduction\"></a>    ## Introduction    Use the Xml control to display the contents of an XML document without formatting or using XSL Transformations.      <a name=\"specifying_xml_data\"></a>    ## Specifying XML Data    The XML document to display is specified by setting one of three properties. These three properties represent the different types of XML documents that can be displayed. You can display a <xref:System.Xml.XmlDocument?displayProperty=fullName>, an XML string, or an XML file by setting the appropriate property. The following table lists the properties for specifying the XML document.      |Property|Description|   |--------------|-----------------|   |<xref:System.Web.UI.WebControls.Xml.Document%2A>|Sets the XML document using a <xref:System.Xml.XmlDocument?displayProperty=fullName> object. **Warning:**  This property is obsolete. Use one of the other properties listed in this section to set the XML content for the Xml control.|   |<xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>|Sets the XML document using a string. **Note:**  This property is commonly set declaratively by placing text between the opening and closing `<asp:Xml>` tags of the Xml control.|   |<xref:System.Web.UI.WebControls.Xml.DocumentSource%2A>|Sets the XML document using a file.|      > [!NOTE] >  At least one of the XML document properties must be set to display an XML document. If more than one XML document property is set, the XML document referenced in the last property set is displayed. The documents in the other properties are ignored.      <a name=\"specifying_an_xsl_transformation\"></a>    ## Specifying an XSL Transformation    You can optionally specify an XSL Transformation (XSLT) style sheet that formats the XML document before it is written to the output stream by setting one of two properties. The two properties represent the different types of XSL Transformation style sheets that can be used to format the XML document. You can format the XML document with a <xref:System.Xml.Xsl.XslCompiledTransform?displayProperty=fullName> object or with an XSL Transformation style sheet file by setting the appropriate property. If no XSL Transformation style sheet is specified, the XML document is displayed using the default format. The following table lists the properties for specifying an XSL Transformation style sheet.      |Property|Description|   |--------------|-----------------|   |<xref:System.Web.UI.WebControls.Xml.Transform%2A>|Formats the XML document using the specified <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object. **Note:**  Using a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object requires `Full Trust` permissions.|   |<xref:System.Web.UI.WebControls.Xml.TransformSource%2A>|Formats the XML document using the specified XSL Transformation style sheet file.|      > [!NOTE] >  The XSL Transformation style sheet is optional. You do not need to set the <xref:System.Web.UI.WebControls.Xml.Transform%2A> or the <xref:System.Web.UI.WebControls.Xml.TransformSource%2A> property. If both XSL Transformation style sheet properties are set, the last property set determines which XSL Transformation style sheet is used to format the XML document. The other property is ignored.       The Xml class also provides the <xref:System.Web.UI.WebControls.Xml.TransformArgumentList%2A> property, which enables you to provide the XSL Transformation style sheet with optional arguments. The arguments can be either XSL Transformations (XSLT) parameters or extension objects.      <a name=\"declarative_syntax\"></a>    ## Declarative Syntax      ```   <asp:Xml       DocumentSource=\"uri\"       EnableTheming=\"True|False\"       EnableViewState=\"True|False\"       ID=\"string\"       OnDataBinding=\"DataBinding event handler\"       OnDisposed=\"Disposed event handler\"       OnInit=\"Init event handler\"       OnLoad=\"Load event handler\"       OnPreRender=\"PreRender event handler\"       OnUnload=\"Unload event handler\"       runat=\"server\"       SkinID=\"string\"       TransformSource=\"string\"       Visible=\"True|False\"   />   ```","needQuote":false,"needEscape":true,"nodes":[{"content":"In this topic:      -   <bpt id=\"p1\">[</bpt>Introduction<ept id=\"p1\">](#introduction)</ept><ph id=\"ph1\">      -   </ph><bpt id=\"p2\">[</bpt>Specifying XML Data<ept id=\"p2\">](#specifying_xml_data)</ept><ph id=\"ph2\">      -   </ph><bpt id=\"p3\">[</bpt>Specifying an XSL Transformation<ept id=\"p3\">](#specifying_an_xsl_transformation)</ept><ph id=\"ph3\">      -   </ph><bpt id=\"p4\">[</bpt>Declarative Syntax<ept id=\"p4\">](#declarative_syntax)</ept>      <bpt id=\"p5\">&lt;a name=\"introduction\"&gt;</bpt><ept id=\"p5\">&lt;/a&gt;</ept>    ## Introduction    Use the Xml control to display the contents of an XML document without formatting or using XSL Transformations.","pos":[0,403],"source":"In this topic:      -   [Introduction](#introduction)      -   [Specifying XML Data](#specifying_xml_data)      -   [Specifying an XSL Transformation](#specifying_an_xsl_transformation)      -   [Declarative Syntax](#declarative_syntax)      <a name=\"introduction\"></a>    ## Introduction    Use the Xml control to display the contents of an XML document without formatting or using XSL Transformations."},{"content":"<bpt id=\"p1\">&lt;a name=\"specifying_xml_data\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Specifying XML Data    The XML document to display is specified by setting one of three properties.","pos":[409,549],"source":"<a name=\"specifying_xml_data\"></a>    ## Specifying XML Data    The XML document to display is specified by setting one of three properties."},{"content":"These three properties represent the different types of XML documents that can be displayed.","pos":[550,642]},{"content":"You can display a &lt;xref:System.Xml.XmlDocument?displayProperty=fullName&gt;, an XML string, or an XML file by setting the appropriate property.","pos":[643,783],"source":" You can display a <xref:System.Xml.XmlDocument?displayProperty=fullName>, an XML string, or an XML file by setting the appropriate property."},{"content":"The following table lists the properties for specifying the XML document.","pos":[784,857]},{"content":"|Property|Description|   |--------------|-----------------|   |&lt;xref:System.Web.UI.WebControls.Xml.Document%2A&gt;|Sets the XML document using a &lt;xref:System.Xml.XmlDocument?displayProperty=fullName&gt; object.","pos":[863,1067],"source":"      |Property|Description|   |--------------|-----------------|   |<xref:System.Web.UI.WebControls.Xml.Document%2A>|Sets the XML document using a <xref:System.Xml.XmlDocument?displayProperty=fullName> object."},{"content":"<bpt id=\"p1\">**</bpt>Warning:<ept id=\"p1\">**</ept>  This property is obsolete.","pos":[1068,1108],"source":"**Warning:**  This property is obsolete."},{"content":"Use one of the other properties listed in this section to set the XML content for the Xml control.|   |&lt;xref:System.Web.UI.WebControls.Xml.DocumentContent%2A&gt;|Sets the XML document using a string.","pos":[1109,1305],"source":" Use one of the other properties listed in this section to set the XML content for the Xml control.|   |<xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>|Sets the XML document using a string."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>  This property is commonly set declaratively by placing text between the opening and closing <ph id=\"ph1\">`&lt;asp:Xml&gt;`</ph> tags of the Xml control.|   |&lt;xref:System.Web.UI.WebControls.Xml.DocumentSource%2A&gt;|Sets the XML document using a file.|      &gt; <ph id=\"ph2\">[!NOTE]</ph> &gt;  At least one of the XML document properties must be set to display an XML document.","pos":[1306,1643],"source":"**Note:**  This property is commonly set declaratively by placing text between the opening and closing `<asp:Xml>` tags of the Xml control.|   |<xref:System.Web.UI.WebControls.Xml.DocumentSource%2A>|Sets the XML document using a file.|      > [!NOTE] >  At least one of the XML document properties must be set to display an XML document."},{"content":"If more than one XML document property is set, the XML document referenced in the last property set is displayed.","pos":[1644,1757]},{"content":"The documents in the other properties are ignored.","pos":[1758,1808]},{"content":"<bpt id=\"p1\">&lt;a name=\"specifying_an_xsl_transformation\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Specifying an XSL Transformation    You can optionally specify an XSL Transformation (XSLT) style sheet that formats the XML document before it is written to the output stream by setting one of two properties.","pos":[1814,2077],"source":"<a name=\"specifying_an_xsl_transformation\"></a>    ## Specifying an XSL Transformation    You can optionally specify an XSL Transformation (XSLT) style sheet that formats the XML document before it is written to the output stream by setting one of two properties."},{"content":"The two properties represent the different types of XSL Transformation style sheets that can be used to format the XML document.","pos":[2078,2206]},{"content":"You can format the XML document with a &lt;xref:System.Xml.Xsl.XslCompiledTransform?displayProperty=fullName&gt; object or with an XSL Transformation style sheet file by setting the appropriate property.","pos":[2207,2404],"source":" You can format the XML document with a <xref:System.Xml.Xsl.XslCompiledTransform?displayProperty=fullName> object or with an XSL Transformation style sheet file by setting the appropriate property."},{"content":"If no XSL Transformation style sheet is specified, the XML document is displayed using the default format.","pos":[2405,2511]},{"content":"The following table lists the properties for specifying an XSL Transformation style sheet.","pos":[2512,2602]},{"content":"|Property|Description|   |--------------|-----------------|   |&lt;xref:System.Web.UI.WebControls.Xml.Transform%2A&gt;|Formats the XML document using the specified &lt;xref:System.Xml.Xsl.XslTransform?displayProperty=fullName&gt; object.","pos":[2608,2833],"source":"      |Property|Description|   |--------------|-----------------|   |<xref:System.Web.UI.WebControls.Xml.Transform%2A>|Formats the XML document using the specified <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>  Using a &lt;xref:System.Xml.Xsl.XslTransform?displayProperty=fullName&gt; object requires <ph id=\"ph1\">`Full Trust`</ph> permissions.|   |&lt;xref:System.Web.UI.WebControls.Xml.TransformSource%2A&gt;|Formats the XML document using the specified XSL Transformation style sheet file.|      &gt; <ph id=\"ph2\">[!NOTE]</ph> &gt;  The XSL Transformation style sheet is optional.","pos":[2834,3163],"source":"**Note:**  Using a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object requires `Full Trust` permissions.|   |<xref:System.Web.UI.WebControls.Xml.TransformSource%2A>|Formats the XML document using the specified XSL Transformation style sheet file.|      > [!NOTE] >  The XSL Transformation style sheet is optional."},{"content":"You do not need to set the &lt;xref:System.Web.UI.WebControls.Xml.Transform%2A&gt; or the &lt;xref:System.Web.UI.WebControls.Xml.TransformSource%2A&gt; property.","pos":[3164,3313],"source":" You do not need to set the <xref:System.Web.UI.WebControls.Xml.Transform%2A> or the <xref:System.Web.UI.WebControls.Xml.TransformSource%2A> property."},{"content":"If both XSL Transformation style sheet properties are set, the last property set determines which XSL Transformation style sheet is used to format the XML document.","pos":[3314,3478]},{"content":"The other property is ignored.","pos":[3479,3509]},{"content":"The Xml class also provides the &lt;xref:System.Web.UI.WebControls.Xml.TransformArgumentList%2A&gt; property, which enables you to provide the XSL Transformation style sheet with optional arguments.","pos":[3516,3708],"source":"       The Xml class also provides the <xref:System.Web.UI.WebControls.Xml.TransformArgumentList%2A> property, which enables you to provide the XSL Transformation style sheet with optional arguments."},{"content":"The arguments can be either XSL Transformations (XSLT) parameters or extension objects.","pos":[3709,3796]},{"content":"<bpt id=\"p1\">&lt;a name=\"declarative_syntax\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Declarative Syntax      <ph id=\"ph1\">```   &lt;asp:Xml       DocumentSource=\"uri\"       EnableTheming=\"True|False\"       EnableViewState=\"True|False\"       ID=\"string\"       OnDataBinding=\"DataBinding event handler\"       OnDisposed=\"Disposed event handler\"       OnInit=\"Init event handler\"       OnLoad=\"Load event handler\"       OnPreRender=\"PreRender event handler\"       OnUnload=\"Unload event handler\"       runat=\"server\"       SkinID=\"string\"       TransformSource=\"string\"       Visible=\"True|False\"   /&gt;   ```</ph>","pos":[3802,4345],"source":"<a name=\"declarative_syntax\"></a>    ## Declarative Syntax      ```   <asp:Xml       DocumentSource=\"uri\"       EnableTheming=\"True|False\"       EnableViewState=\"True|False\"       ID=\"string\"       OnDataBinding=\"DataBinding event handler\"       OnDisposed=\"Disposed event handler\"       OnInit=\"Init event handler\"       OnLoad=\"Load event handler\"       OnPreRender=\"PreRender event handler\"       OnUnload=\"Unload event handler\"       runat=\"server\"       SkinID=\"string\"       TransformSource=\"string\"       Visible=\"True|False\"   />   ```"}]},{"pos":[12380,12471],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Xml\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> class."},{"pos":[13034,13216],"content":"Notifies the server control that an element, either XML or HTML, was parsed, and adds the element to the server control's <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Notifies the server control that an element, either XML or HTML, was parsed, and adds the element to the server control's <xref href=\"System.Web.UI.ControlCollection\"></xref> object."},{"pos":[13996,14055],"content":"An <xref:System.Object> that represents the parsed element.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that represents the parsed element.","pos":[0,59],"source":"An <xref:System.Object> that represents the parsed element."}]},{"pos":[14226,14308],"content":"<ph id=\"ph1\">&lt;code&gt;obj&lt;/code&gt;</ph> is not of type <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.LiteralControl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>obj</code> is not of type <xref href=\"System.Web.UI.LiteralControl\"></xref>."},{"pos":[14646,14788],"content":"Overrides the &lt;xref:System.Web.UI.Control.ClientID%2A?displayProperty=fullName&gt; property and returns the base server control identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.Control.ClientID%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property and returns the base server control identifier.","pos":[0,142],"source":"Overrides the &lt;xref:System.Web.UI.Control.ClientID%2A?displayProperty=fullName&gt; property and returns the base server control identifier."}]},{"pos":[14910,14945],"content":"The base server control identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base server control identifier.","pos":[0,35]}]},{"pos":[15352,15532],"content":"Overrides the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property and returns the base <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Overrides the &lt;xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName&gt; property and returns the base <xref href=\"System.Web.UI.ControlCollection\"></xref> collection."},{"pos":[15697,15770],"content":"The base <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"The base <xref href=\"System.Web.UI.ControlCollection\"></xref> collection."},{"pos":[16256,16335],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.EmptyControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Web.UI.EmptyControlCollection\"></xref> object."},{"pos":[16347,16502],"content":"The CreateControlCollection method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.WebControls.Xml> control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CreateControlCollection method is used primarily by control developers extending the functionality of the &lt;xref:System.Web.UI.WebControls.Xml&gt; control.","pos":[0,155],"source":"The CreateControlCollection method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.WebControls.Xml> control."}]},{"pos":[16699,16775],"content":"Always returns an <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.EmptyControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Always returns an <xref href=\"System.Web.UI.EmptyControlCollection\"></xref>."},{"pos":[17197,17335],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to display in the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.Xml\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Xml.XmlDocument\"></xref> to display in the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> control."},{"pos":[17348,18173],"content":"The Document property is obsolete. To specify the XML that will be displayed in the <xref:System.Web.UI.WebControls.Xml> control, use the <xref:System.Web.UI.WebControls.Xml.DocumentContent%2A> property or the <xref:System.Web.UI.WebControls.Xml.DocumentSource%2A> property. For more information about these alternatives, see the class overview for the <xref:System.Web.UI.WebControls.Xml> control.       The XML document to display in the <xref:System.Web.UI.WebControls.Xml> control is specified in one of three ways. You can specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> object, an XML string, or an XML file by setting the appropriate property. The Document property is used to specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> (representing an XML document) to display in the control.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Document property is obsolete. To specify the XML that will be displayed in the <xref:System.Web.UI.WebControls.Xml> control, use the <xref:System.Web.UI.WebControls.Xml.DocumentContent%2A> property or the <xref:System.Web.UI.WebControls.Xml.DocumentSource%2A> property. For more information about these alternatives, see the class overview for the <xref:System.Web.UI.WebControls.Xml> control.       The XML document to display in the <xref:System.Web.UI.WebControls.Xml> control is specified in one of three ways. You can specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> object, an XML string, or an XML file by setting the appropriate property. The Document property is used to specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> (representing an XML document) to display in the control.","pos":[0,823],"nodes":[{"content":"The Document property is obsolete.","pos":[0,34]},{"content":"To specify the XML that will be displayed in the &lt;xref:System.Web.UI.WebControls.Xml&gt; control, use the &lt;xref:System.Web.UI.WebControls.Xml.DocumentContent%2A&gt; property or the &lt;xref:System.Web.UI.WebControls.Xml.DocumentSource%2A&gt; property.","pos":[35,274],"source":" To specify the XML that will be displayed in the <xref:System.Web.UI.WebControls.Xml> control, use the <xref:System.Web.UI.WebControls.Xml.DocumentContent%2A> property or the <xref:System.Web.UI.WebControls.Xml.DocumentSource%2A> property."},{"content":"For more information about these alternatives, see the class overview for the &lt;xref:System.Web.UI.WebControls.Xml&gt; control.","pos":[275,398],"source":" For more information about these alternatives, see the class overview for the <xref:System.Web.UI.WebControls.Xml> control."},{"content":"The XML document to display in the &lt;xref:System.Web.UI.WebControls.Xml&gt; control is specified in one of three ways.","pos":[405,519],"source":"       The XML document to display in the <xref:System.Web.UI.WebControls.Xml> control is specified in one of three ways."},{"content":"You can specify a &lt;xref:System.Xml.XmlDocument?displayProperty=fullName&gt; object, an XML string, or an XML file by setting the appropriate property.","pos":[520,667],"source":" You can specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> object, an XML string, or an XML file by setting the appropriate property."},{"content":"The Document property is used to specify a &lt;xref:System.Xml.XmlDocument?displayProperty=fullName&gt; (representing an XML document) to display in the control.","pos":[668,823],"source":" The Document property is used to specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> (representing an XML document) to display in the control."}]}]},{"pos":[18793,18918],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to display in the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.Xml\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xml.XmlDocument\"></xref> to display in the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> control."},{"pos":[19360,19482],"content":"Sets a string that contains the XML document to display in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Xml\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Sets a string that contains the XML document to display in the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> control."},{"pos":[19495,20349],"content":"The XML document to display in the <xref:System.Web.UI.WebControls.Xml> control is specified in one of three ways. You can specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> object, an XML string, or an XML file by setting the appropriate property. The DocumentContent property is used to specify an XML string (representing an XML document) to display in the control. The DocumentContent property is not typically programmatically set, or set as an attribute of the control. Instead, the XML string is usually set declaratively by placing text between the opening and closing `<asp:Xml>` tags of the control.      > [!NOTE] >  Although the DocumentContent property contains both `get` and `set` accessors, only the `set` accessor is useful. If you use the `get` accessor, <xref:System.String.Empty?displayProperty=fullName> is returned.","needQuote":false,"needEscape":true,"nodes":[{"content":"The XML document to display in the &lt;xref:System.Web.UI.WebControls.Xml&gt; control is specified in one of three ways.","pos":[0,114],"source":"The XML document to display in the <xref:System.Web.UI.WebControls.Xml> control is specified in one of three ways."},{"content":"You can specify a &lt;xref:System.Xml.XmlDocument?displayProperty=fullName&gt; object, an XML string, or an XML file by setting the appropriate property.","pos":[115,262],"source":" You can specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> object, an XML string, or an XML file by setting the appropriate property."},{"content":"The DocumentContent property is used to specify an XML string (representing an XML document) to display in the control.","pos":[263,382]},{"content":"The DocumentContent property is not typically programmatically set, or set as an attribute of the control.","pos":[383,489]},{"content":"Instead, the XML string is usually set declaratively by placing text between the opening and closing <ph id=\"ph1\">`&lt;asp:Xml&gt;`</ph> tags of the control.","pos":[490,623],"source":" Instead, the XML string is usually set declaratively by placing text between the opening and closing `<asp:Xml>` tags of the control."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Although the DocumentContent property contains both <ph id=\"ph2\">`get`</ph> and <ph id=\"ph3\">`set`</ph> accessors, only the <ph id=\"ph4\">`set`</ph> accessor is useful.","pos":[629,755],"source":"      > [!NOTE] >  Although the DocumentContent property contains both `get` and `set` accessors, only the `set` accessor is useful."},{"content":"If you use the <ph id=\"ph1\">`get`</ph> accessor, &lt;xref:System.String.Empty?displayProperty=fullName&gt; is returned.","pos":[756,851],"source":" If you use the `get` accessor, <xref:System.String.Empty?displayProperty=fullName> is returned."}]},{"pos":[20475,20592],"content":"A string that contains the XML document to display in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Xml\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"A string that contains the XML document to display in the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> control."},{"pos":[21036,21154],"content":"Gets or sets the path to an XML document to display in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Xml\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the path to an XML document to display in the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> control."},{"pos":[21166,22049],"content":"The XML document to display in the <xref:System.Web.UI.WebControls.Xml> control is specified in one of three ways. You can specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> object, an XML string, or an XML file by setting the appropriate property. The DocumentSource property is used to specify the path to an XML file (representing an XML document) to display in the control. You can use a relative or an absolute path. A relative path relates the location of the file to the location of the Web Forms page or user control, without specifying a complete path on the server. The path is relative to the location of the Web page. This makes it easier to move the entire site to another directory on the server without updating the path to the file in code. An absolute path provides the complete path, so moving the site to another directory requires updating the code.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML document to display in the <xref:System.Web.UI.WebControls.Xml> control is specified in one of three ways. You can specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> object, an XML string, or an XML file by setting the appropriate property. The DocumentSource property is used to specify the path to an XML file (representing an XML document) to display in the control. You can use a relative or an absolute path. A relative path relates the location of the file to the location of the Web Forms page or user control, without specifying a complete path on the server. The path is relative to the location of the Web page. This makes it easier to move the entire site to another directory on the server without updating the path to the file in code. An absolute path provides the complete path, so moving the site to another directory requires updating the code.","pos":[0,883],"nodes":[{"content":"The XML document to display in the &lt;xref:System.Web.UI.WebControls.Xml&gt; control is specified in one of three ways.","pos":[0,114],"source":"The XML document to display in the <xref:System.Web.UI.WebControls.Xml> control is specified in one of three ways."},{"content":"You can specify a &lt;xref:System.Xml.XmlDocument?displayProperty=fullName&gt; object, an XML string, or an XML file by setting the appropriate property.","pos":[115,262],"source":" You can specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> object, an XML string, or an XML file by setting the appropriate property."},{"content":"The DocumentSource property is used to specify the path to an XML file (representing an XML document) to display in the control.","pos":[263,391]},{"content":"You can use a relative or an absolute path.","pos":[392,435]},{"content":"A relative path relates the location of the file to the location of the Web Forms page or user control, without specifying a complete path on the server.","pos":[436,589]},{"content":"The path is relative to the location of the Web page.","pos":[590,643]},{"content":"This makes it easier to move the entire site to another directory on the server without updating the path to the file in code.","pos":[644,770]},{"content":"An absolute path provides the complete path, so moving the site to another directory requires updating the code.","pos":[771,883]}]}]},{"pos":[22543,22648],"content":"The path to an XML document to display in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Xml\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"The path to an XML document to display in the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> control."},{"pos":[23086,23282],"content":"Overrides the &lt;xref:System.Web.UI.Control.EnableTheming%2A?displayProperty=fullName&gt; property. This property is not supported by the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.Control.EnableTheming%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property.","pos":[0,100],"source":"Overrides the &lt;xref:System.Web.UI.Control.EnableTheming%2A?displayProperty=fullName&gt; property."},{"content":"This property is not supported by the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Xml\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[101,196],"source":" This property is not supported by the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> class."}]},{"pos":[23294,23553],"content":"The EnableTheming property is inherited from the <xref:System.Web.UI.Control> class, but is not applicable to the <xref:System.Web.UI.WebControls.Xml> class. Any attempt to set the value of this property throws a <xref:System.NotSupportedException> exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The EnableTheming property is inherited from the <xref:System.Web.UI.Control> class, but is not applicable to the <xref:System.Web.UI.WebControls.Xml> class. Any attempt to set the value of this property throws a <xref:System.NotSupportedException> exception.","pos":[0,259],"nodes":[{"content":"The EnableTheming property is inherited from the &lt;xref:System.Web.UI.Control&gt; class, but is not applicable to the &lt;xref:System.Web.UI.WebControls.Xml&gt; class.","pos":[0,157],"source":"The EnableTheming property is inherited from the <xref:System.Web.UI.Control> class, but is not applicable to the <xref:System.Web.UI.WebControls.Xml> class."},{"content":"Any attempt to set the value of this property throws a &lt;xref:System.NotSupportedException&gt; exception.","pos":[158,259],"source":" Any attempt to set the value of this property throws a <xref:System.NotSupportedException> exception."}]}]},{"pos":[23684,23794],"content":"Always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. This property is not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,78],"source":"Always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"This property is not supported.","pos":[79,110]}]},{"pos":[23968,24021],"content":"An attempt is made to set the value of this property.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt is made to set the value of this property.","pos":[0,53]}]},{"pos":[24426,24494],"content":"Searches the page naming container for the specified server control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Searches the page naming container for the specified server control.","pos":[0,68]}]},{"pos":[24655,24698],"content":"The identifier for the control to be found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier for the control to be found.","pos":[0,43]}]},{"pos":[24764,24899],"content":"The specified control; otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified control does not exist.","needQuote":true,"needEscape":true,"source":"The specified control; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the specified control does not exist."},{"pos":[25298,25482],"content":"Overrides the &lt;xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName&gt; method. This method is not supported by the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method.","pos":[0,90],"source":"Overrides the &lt;xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName&gt; method."},{"content":"This method is not supported by the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Xml\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[91,184],"source":" This method is not supported by the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> class."}]},{"pos":[25494,25733],"content":"The Focus method is inherited from the <xref:System.Web.UI.Control> class, but it is not applicable to the <xref:System.Web.UI.WebControls.Xml> class. Any attempt to invoke the method throws a <xref:System.NotSupportedException> exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Focus method is inherited from the <xref:System.Web.UI.Control> class, but it is not applicable to the <xref:System.Web.UI.WebControls.Xml> class. Any attempt to invoke the method throws a <xref:System.NotSupportedException> exception.","pos":[0,239],"nodes":[{"content":"The Focus method is inherited from the &lt;xref:System.Web.UI.Control&gt; class, but it is not applicable to the &lt;xref:System.Web.UI.WebControls.Xml&gt; class.","pos":[0,150],"source":"The Focus method is inherited from the <xref:System.Web.UI.Control> class, but it is not applicable to the <xref:System.Web.UI.WebControls.Xml> class."},{"content":"Any attempt to invoke the method throws a &lt;xref:System.NotSupportedException&gt; exception.","pos":[151,239],"source":" Any attempt to invoke the method throws a <xref:System.NotSupportedException> exception."}]}]},{"pos":[25972,26013],"content":"An attempt is made to invoke this method.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt is made to invoke this method.","pos":[0,41]}]},{"pos":[26405,26441],"content":"Gets design-time data for a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets design-time data for a control.","pos":[0,36]}]},{"pos":[26453,26596],"content":"The GetDesignModeState method is a helper method used to get the current design-time state of the <xref:System.Web.UI.WebControls.Xml> control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The GetDesignModeState method is a helper method used to get the current design-time state of the &lt;xref:System.Web.UI.WebControls.Xml&gt; control.","pos":[0,143],"source":"The GetDesignModeState method is a helper method used to get the current design-time state of the <xref:System.Web.UI.WebControls.Xml> control."}]},{"pos":[26786,26926],"content":"An &lt;xref:System.Collections.IDictionary&gt; containing the design-time data for the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Xml\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IDictionary> containing the design-time data for the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> control."},{"pos":[27362,27428],"content":"Determines whether the server control contains any child controls.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the server control contains any child controls.","pos":[0,66]}]},{"pos":[27566,27741],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the control contains other controls; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control contains other controls; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28247,28288],"content":"Renders the results to the output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Renders the results to the output stream.","pos":[0,41]}]},{"pos":[29093,29125],"content":"The result of the output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of the output stream.","pos":[0,32]}]},{"pos":[29520,29709],"content":"Overrides the &lt;xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName&gt; property. This property is not supported by the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property.","pos":[0,93],"source":"Overrides the &lt;xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName&gt; property."},{"content":"This property is not supported by the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Xml\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[94,189],"source":" This property is not supported by the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> class."}]},{"pos":[29721,29973],"content":"The SkinID property is inherited from the <xref:System.Web.UI.Control> class, but is not applicable to the <xref:System.Web.UI.WebControls.Xml> class. Any attempt to set the value of this property throws a <xref:System.NotSupportedException> exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SkinID property is inherited from the <xref:System.Web.UI.Control> class, but is not applicable to the <xref:System.Web.UI.WebControls.Xml> class. Any attempt to set the value of this property throws a <xref:System.NotSupportedException> exception.","pos":[0,252],"nodes":[{"content":"The SkinID property is inherited from the &lt;xref:System.Web.UI.Control&gt; class, but is not applicable to the &lt;xref:System.Web.UI.WebControls.Xml&gt; class.","pos":[0,150],"source":"The SkinID property is inherited from the <xref:System.Web.UI.Control> class, but is not applicable to the <xref:System.Web.UI.WebControls.Xml> class."},{"content":"Any attempt to set the value of this property throws a &lt;xref:System.NotSupportedException&gt; exception.","pos":[151,252],"source":" Any attempt to set the value of this property throws a <xref:System.NotSupportedException> exception."}]}]},{"pos":[30098,30166],"content":"Always returns an empty string (\"\"). This property is not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Always returns an empty string (\"\"). This property is not supported.","pos":[0,68],"nodes":[{"content":"Always returns an empty string (\"\").","pos":[0,36]},{"content":"This property is not supported.","pos":[37,68]}]}]},{"pos":[30333,30386],"content":"An attempt is made to set the value of this property.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt is made to set the value of this property.","pos":[0,53]}]},{"pos":[30729,30874],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Xsl.XslTransform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that formats the XML document before it is written to the output stream.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Xml.Xsl.XslTransform\"></xref> object that formats the XML document before it is written to the output stream."},{"pos":[30887,31775],"content":"When using the <xref:System.Web.UI.WebControls.Xml> control to display an XML document, you can optionally specify an Extensible Stylesheet Language Transformation (XSLT) style sheet that formats the XML document, before it is written to the output stream in one of two ways. You can format the XML document with either a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object or an XSL Transformation style sheet file. If no XSL Transform document is specified, the XML document is displayed using the default format. The Transform property is used to specify a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object (representing an XSL Transform document) used to format the XML document before it is written to the output stream.      > [!NOTE] >  Using a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object requires `Full Trust` permissions.","needQuote":false,"needEscape":true,"nodes":[{"content":"When using the &lt;xref:System.Web.UI.WebControls.Xml&gt; control to display an XML document, you can optionally specify an Extensible Stylesheet Language Transformation (XSLT) style sheet that formats the XML document, before it is written to the output stream in one of two ways.","pos":[0,275],"source":"When using the <xref:System.Web.UI.WebControls.Xml> control to display an XML document, you can optionally specify an Extensible Stylesheet Language Transformation (XSLT) style sheet that formats the XML document, before it is written to the output stream in one of two ways."},{"content":"You can format the XML document with either a &lt;xref:System.Xml.Xsl.XslTransform?displayProperty=fullName&gt; object or an XSL Transformation style sheet file.","pos":[276,431],"source":" You can format the XML document with either a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object or an XSL Transformation style sheet file."},{"content":"If no XSL Transform document is specified, the XML document is displayed using the default format.","pos":[432,530]},{"content":"The Transform property is used to specify a &lt;xref:System.Xml.Xsl.XslTransform?displayProperty=fullName&gt; object (representing an XSL Transform document) used to format the XML document before it is written to the output stream.","pos":[531,757],"source":" The Transform property is used to specify a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object (representing an XSL Transform document) used to format the XML document before it is written to the output stream."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Using a &lt;xref:System.Xml.Xsl.XslTransform?displayProperty=fullName&gt; object requires <ph id=\"ph2\">`Full Trust`</ph> permissions.","pos":[763,885],"source":"      > [!NOTE] >  Using a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object requires `Full Trust` permissions."}]},{"pos":[32406,32531],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.Xsl.XslTransform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that formats the XML document before it is written to the output stream.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xml.Xsl.XslTransform\"></xref> that formats the XML document before it is written to the output stream."},{"pos":[33004,33214],"content":"Gets or sets a <bpt id=\"p1\">&lt;xref href=\"System.Xml.Xsl.XsltArgumentList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains a list of optional arguments passed to the style sheet and used during the Extensible Stylesheet Language Transformation (XSLT).","needQuote":true,"needEscape":true,"source":"Gets or sets a <xref href=\"System.Xml.Xsl.XsltArgumentList\"></xref> that contains a list of optional arguments passed to the style sheet and used during the Extensible Stylesheet Language Transformation (XSLT)."},{"pos":[33227,33630],"content":"Use the TransformArgumentList property to provide the XSL Transformation style sheet with optional arguments. The arguments can be either XSLT parameters or extension objects.       For more information about using the <xref:System.Xml.Xsl.XsltArgumentList?displayProperty=fullName> class, see [XsltArgumentList for Style Sheet Parameters and Extension Objects](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the TransformArgumentList property to provide the XSL Transformation style sheet with optional arguments.","pos":[0,109]},{"content":"The arguments can be either XSLT parameters or extension objects.","pos":[110,175]},{"content":"For more information about using the &lt;xref:System.Xml.Xsl.XsltArgumentList?displayProperty=fullName&gt; class, see <bpt id=\"p1\">[</bpt>XsltArgumentList for Style Sheet Parameters and Extension Objects<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[182,401],"source":"       For more information about using the <xref:System.Xml.Xsl.XsltArgumentList?displayProperty=fullName> class, see [XsltArgumentList for Style Sheet Parameters and Extension Objects](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[33805,33968],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Xml.Xsl.XsltArgumentList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains a list of optional arguments passed to the style sheet and used during the XSL Transformation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Xml.Xsl.XsltArgumentList\"></xref> that contains a list of optional arguments passed to the style sheet and used during the XSL Transformation."},{"pos":[34423,34588],"content":"Gets or sets the path to an Extensible Stylesheet Language Transformation (XSLT) style sheet that formats the XML document before it is written to the output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the path to an Extensible Stylesheet Language Transformation (XSLT) style sheet that formats the XML document before it is written to the output stream.","pos":[0,165]}]},{"pos":[34600,35823],"content":"When using the <xref:System.Web.UI.WebControls.Xml> control to display an XML document, you can optionally specify an XSL Transformation style sheet that formats the XML document before it is written to the output stream in one of two ways. You can either format the XML document with a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object or with an XSL Transformation style sheet file. If no XSL Transformation style sheet is specified, the XML document is displayed using the default format. The TransformSource property is used to specify the path to an XSL Transformation style sheet file (representing an XSL Transformation style sheet) used to format the XML document before it is written to the output stream. You can use a relative or an absolute path. A relative path relates the location of the file to the location of the Web Forms page or user control, without specifying a complete path on the server. The path is relative to the location of the Web page. This makes it easier to move the entire site to another directory on the server without updating the path to the file in code. An absolute path provides the complete path, so moving the site to another directory requires updating the code.","needQuote":true,"needEscape":true,"nodes":[{"content":"When using the <xref:System.Web.UI.WebControls.Xml> control to display an XML document, you can optionally specify an XSL Transformation style sheet that formats the XML document before it is written to the output stream in one of two ways. You can either format the XML document with a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object or with an XSL Transformation style sheet file. If no XSL Transformation style sheet is specified, the XML document is displayed using the default format. The TransformSource property is used to specify the path to an XSL Transformation style sheet file (representing an XSL Transformation style sheet) used to format the XML document before it is written to the output stream. You can use a relative or an absolute path. A relative path relates the location of the file to the location of the Web Forms page or user control, without specifying a complete path on the server. The path is relative to the location of the Web page. This makes it easier to move the entire site to another directory on the server without updating the path to the file in code. An absolute path provides the complete path, so moving the site to another directory requires updating the code.","pos":[0,1223],"nodes":[{"content":"When using the &lt;xref:System.Web.UI.WebControls.Xml&gt; control to display an XML document, you can optionally specify an XSL Transformation style sheet that formats the XML document before it is written to the output stream in one of two ways.","pos":[0,240],"source":"When using the <xref:System.Web.UI.WebControls.Xml> control to display an XML document, you can optionally specify an XSL Transformation style sheet that formats the XML document before it is written to the output stream in one of two ways."},{"content":"You can either format the XML document with a &lt;xref:System.Xml.Xsl.XslTransform?displayProperty=fullName&gt; object or with an XSL Transformation style sheet file.","pos":[241,401],"source":" You can either format the XML document with a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object or with an XSL Transformation style sheet file."},{"content":"If no XSL Transformation style sheet is specified, the XML document is displayed using the default format.","pos":[402,508]},{"content":"The TransformSource property is used to specify the path to an XSL Transformation style sheet file (representing an XSL Transformation style sheet) used to format the XML document before it is written to the output stream.","pos":[509,731]},{"content":"You can use a relative or an absolute path.","pos":[732,775]},{"content":"A relative path relates the location of the file to the location of the Web Forms page or user control, without specifying a complete path on the server.","pos":[776,929]},{"content":"The path is relative to the location of the Web page.","pos":[930,983]},{"content":"This makes it easier to move the entire site to another directory on the server without updating the path to the file in code.","pos":[984,1110]},{"content":"An absolute path provides the complete path, so moving the site to another directory requires updating the code.","pos":[1111,1223]}]}]},{"pos":[36318,36436],"content":"The path to an XSL Transformation style sheet that formats the XML document before it is written to the output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to an XSL Transformation style sheet that formats the XML document before it is written to the output stream.","pos":[0,118]}]},{"pos":[36880,37027],"content":"Gets or sets a cursor model for navigating and editing the XML data associated with the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Xml\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets a cursor model for navigating and editing the XML data associated with the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> control."},{"pos":[37040,37877],"content":"This property can be used to associate an <xref:System.Xml.XPath.XPathNavigator> object with the <xref:System.Web.UI.WebControls.Xml> control.       An <xref:System.Xml.XPath.XPathNavigator> object is created from a class that implements the <xref:System.Xml.XPath.IXPathNavigable> interface, such as the <xref:System.Xml.XPath.XPathDocument> and <xref:System.Xml.XmlDocument> classes. <xref:System.Xml.XPath.XPathNavigator> objects created by <xref:System.Xml.XPath.XPathDocument> objects are read-only, and <xref:System.Xml.XPath.XPathNavigator> objects created by <xref:System.Xml.XmlDocument> objects can be edited. An <xref:System.Xml.XPath.XPathNavigator> object's read-only or editable status is determined using the <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> property of the <xref:System.Xml.XPath.XPathNavigator> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property can be used to associate an <xref:System.Xml.XPath.XPathNavigator> object with the <xref:System.Web.UI.WebControls.Xml> control.       An <xref:System.Xml.XPath.XPathNavigator> object is created from a class that implements the <xref:System.Xml.XPath.IXPathNavigable> interface, such as the <xref:System.Xml.XPath.XPathDocument> and <xref:System.Xml.XmlDocument> classes. <xref:System.Xml.XPath.XPathNavigator> objects created by <xref:System.Xml.XPath.XPathDocument> objects are read-only, and <xref:System.Xml.XPath.XPathNavigator> objects created by <xref:System.Xml.XmlDocument> objects can be edited. An <xref:System.Xml.XPath.XPathNavigator> object's read-only or editable status is determined using the <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> property of the <xref:System.Xml.XPath.XPathNavigator> class.","pos":[0,835],"nodes":[{"content":"This property can be used to associate an &lt;xref:System.Xml.XPath.XPathNavigator&gt; object with the &lt;xref:System.Web.UI.WebControls.Xml&gt; control.","pos":[0,142],"source":"This property can be used to associate an <xref:System.Xml.XPath.XPathNavigator> object with the <xref:System.Web.UI.WebControls.Xml> control."},{"content":"An &lt;xref:System.Xml.XPath.XPathNavigator&gt; object is created from a class that implements the &lt;xref:System.Xml.XPath.IXPathNavigable&gt; interface, such as the &lt;xref:System.Xml.XPath.XPathDocument&gt; and &lt;xref:System.Xml.XmlDocument&gt; classes.","pos":[149,385],"source":"       An <xref:System.Xml.XPath.XPathNavigator> object is created from a class that implements the <xref:System.Xml.XPath.IXPathNavigable> interface, such as the <xref:System.Xml.XPath.XPathDocument> and <xref:System.Xml.XmlDocument> classes."},{"content":"&lt;xref:System.Xml.XPath.XPathNavigator&gt; objects created by &lt;xref:System.Xml.XPath.XPathDocument&gt; objects are read-only, and &lt;xref:System.Xml.XPath.XPathNavigator&gt; objects created by &lt;xref:System.Xml.XmlDocument&gt; objects can be edited.","pos":[386,619],"source":" <xref:System.Xml.XPath.XPathNavigator> objects created by <xref:System.Xml.XPath.XPathDocument> objects are read-only, and <xref:System.Xml.XPath.XPathNavigator> objects created by <xref:System.Xml.XmlDocument> objects can be edited."},{"content":"An &lt;xref:System.Xml.XPath.XPathNavigator&gt; object's read-only or editable status is determined using the &lt;xref:System.Xml.XPath.XPathNavigator.CanEdit%2A&gt; property of the &lt;xref:System.Xml.XPath.XPathNavigator&gt; class.","pos":[620,835],"source":" An <xref:System.Xml.XPath.XPathNavigator> object's read-only or editable status is determined using the <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> property of the <xref:System.Xml.XPath.XPathNavigator> class."}]}]},{"pos":[38045,38108],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.XPath.XPathNavigator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.Xml\n  id: Xml\n  children:\n  - System.Web.UI.WebControls.Xml.#ctor\n  - System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)\n  - System.Web.UI.WebControls.Xml.ClientID\n  - System.Web.UI.WebControls.Xml.Controls\n  - System.Web.UI.WebControls.Xml.CreateControlCollection\n  - System.Web.UI.WebControls.Xml.Document\n  - System.Web.UI.WebControls.Xml.DocumentContent\n  - System.Web.UI.WebControls.Xml.DocumentSource\n  - System.Web.UI.WebControls.Xml.EnableTheming\n  - System.Web.UI.WebControls.Xml.FindControl(System.String)\n  - System.Web.UI.WebControls.Xml.Focus\n  - System.Web.UI.WebControls.Xml.GetDesignModeState\n  - System.Web.UI.WebControls.Xml.HasControls\n  - System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.Xml.SkinID\n  - System.Web.UI.WebControls.Xml.Transform\n  - System.Web.UI.WebControls.Xml.TransformArgumentList\n  - System.Web.UI.WebControls.Xml.TransformSource\n  - System.Web.UI.WebControls.Xml.XPathNavigator\n  langs:\n  - csharp\n  name: Xml\n  nameWithType: Xml\n  fullName: System.Web.UI.WebControls.Xml\n  type: Class\n  summary: Displays an XML document without formatting or using Extensible Stylesheet Language Transformations (XSLT).\n  remarks: \"In this topic:  \\n  \\n-   [Introduction](#introduction)  \\n  \\n-   [Specifying XML Data](#specifying_xml_data)  \\n  \\n-   [Specifying an XSL Transformation](#specifying_an_xsl_transformation)  \\n  \\n-   [Declarative Syntax](#declarative_syntax)  \\n  \\n<a name=\\\"introduction\\\"></a>   \\n## Introduction  \\n Use the Xml control to display the contents of an XML document without formatting or using XSL Transformations.  \\n  \\n<a name=\\\"specifying_xml_data\\\"></a>   \\n## Specifying XML Data  \\n The XML document to display is specified by setting one of three properties. These three properties represent the different types of XML documents that can be displayed. You can display a <xref:System.Xml.XmlDocument?displayProperty=fullName>, an XML string, or an XML file by setting the appropriate property. The following table lists the properties for specifying the XML document.  \\n  \\n|Property|Description|  \\n|--------------|-----------------|  \\n|<xref:System.Web.UI.WebControls.Xml.Document%2A>|Sets the XML document using a <xref:System.Xml.XmlDocument?displayProperty=fullName> object. **Warning:**  This property is obsolete. Use one of the other properties listed in this section to set the XML content for the Xml control.|  \\n|<xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>|Sets the XML document using a string. **Note:**  This property is commonly set declaratively by placing text between the opening and closing `<asp:Xml>` tags of the Xml control.|  \\n|<xref:System.Web.UI.WebControls.Xml.DocumentSource%2A>|Sets the XML document using a file.|  \\n  \\n> [!NOTE]\\n>  At least one of the XML document properties must be set to display an XML document. If more than one XML document property is set, the XML document referenced in the last property set is displayed. The documents in the other properties are ignored.  \\n  \\n<a name=\\\"specifying_an_xsl_transformation\\\"></a>   \\n## Specifying an XSL Transformation  \\n You can optionally specify an XSL Transformation (XSLT) style sheet that formats the XML document before it is written to the output stream by setting one of two properties. The two properties represent the different types of XSL Transformation style sheets that can be used to format the XML document. You can format the XML document with a <xref:System.Xml.Xsl.XslCompiledTransform?displayProperty=fullName> object or with an XSL Transformation style sheet file by setting the appropriate property. If no XSL Transformation style sheet is specified, the XML document is displayed using the default format. The following table lists the properties for specifying an XSL Transformation style sheet.  \\n  \\n|Property|Description|  \\n|--------------|-----------------|  \\n|<xref:System.Web.UI.WebControls.Xml.Transform%2A>|Formats the XML document using the specified <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object. **Note:**  Using a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object requires `Full Trust` permissions.|  \\n|<xref:System.Web.UI.WebControls.Xml.TransformSource%2A>|Formats the XML document using the specified XSL Transformation style sheet file.|  \\n  \\n> [!NOTE]\\n>  The XSL Transformation style sheet is optional. You do not need to set the <xref:System.Web.UI.WebControls.Xml.Transform%2A> or the <xref:System.Web.UI.WebControls.Xml.TransformSource%2A> property. If both XSL Transformation style sheet properties are set, the last property set determines which XSL Transformation style sheet is used to format the XML document. The other property is ignored.  \\n  \\n The Xml class also provides the <xref:System.Web.UI.WebControls.Xml.TransformArgumentList%2A> property, which enables you to provide the XSL Transformation style sheet with optional arguments. The arguments can be either XSL Transformations (XSLT) parameters or extension objects.  \\n  \\n<a name=\\\"declarative_syntax\\\"></a>   \\n## Declarative Syntax  \\n  \\n```  \\n<asp:Xml  \\n    DocumentSource=\\\"uri\\\"  \\n    EnableTheming=\\\"True|False\\\"  \\n    EnableViewState=\\\"True|False\\\"  \\n    ID=\\\"string\\\"  \\n    OnDataBinding=\\\"DataBinding event handler\\\"  \\n    OnDisposed=\\\"Disposed event handler\\\"  \\n    OnInit=\\\"Init event handler\\\"  \\n    OnLoad=\\\"Load event handler\\\"  \\n    OnPreRender=\\\"PreRender event handler\\\"  \\n    OnUnload=\\\"Unload event handler\\\"  \\n    runat=\\\"server\\\"  \\n    SkinID=\\\"string\\\"  \\n    TransformSource=\\\"string\\\"  \\n    Visible=\\\"True|False\\\"  \\n/>  \\n```\"\n  example:\n  - \"The following code example shows how to create <xref:System.Xml.XmlDocument> and <xref:System.Xml.Xsl.XslTransform> objects from a sample XML file and an XSL Transformation style sheet. The objects are then used by the XML control to display the XML document.  \\n  \\n [!code-cs[XmlClassExample#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_196_1.aspx)]\\n [!code-vb[XmlClassExample#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_196_1.aspx)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultProperty(\"DocumentSource\")]\n\n      [System.ComponentModel.Designer(\"System.Web.UI.Design.WebControls.XmlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.XmlBuilder))]\n\n      [System.Web.UI.PersistChildren(false, true)]\n\n      public class Xml : System.Web.UI.Control\n  inheritance:\n  - System.Object\n  - System.Web.UI.Control\n  implements: []\n  inheritedMembers:\n  - System.Web.UI.Control.Adapter\n  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)\n  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)\n  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory\n  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.BindingContainer\n  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)\n  - System.Web.UI.Control.ChildControlsCreated\n  - System.Web.UI.Control.ClearCachedClientID\n  - System.Web.UI.Control.ClearChildControlState\n  - System.Web.UI.Control.ClearChildState\n  - System.Web.UI.Control.ClearChildViewState\n  - System.Web.UI.Control.ClearEffectiveClientIDMode\n  - System.Web.UI.Control.ClientIDMode\n  - System.Web.UI.Control.ClientIDSeparator\n  - System.Web.UI.Control.Context\n  - System.Web.UI.Control.CreateChildControls\n  - System.Web.UI.Control.DataBind\n  - System.Web.UI.Control.DataBind(System.Boolean)\n  - System.Web.UI.Control.DataBindChildren\n  - System.Web.UI.Control.DataBinding\n  - System.Web.UI.Control.DataItemContainer\n  - System.Web.UI.Control.DataKeysContainer\n  - System.Web.UI.Control.DesignMode\n  - System.Web.UI.Control.Dispose\n  - System.Web.UI.Control.Disposed\n  - System.Web.UI.Control.EnableViewState\n  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.EnsureChildControls\n  - System.Web.UI.Control.EnsureID\n  - System.Web.UI.Control.Events\n  - System.Web.UI.Control.FindControl(System.String,System.Int32)\n  - System.Web.UI.Control.GetRouteUrl(System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)\n  - System.Web.UI.Control.HasChildViewState\n  - System.Web.UI.Control.HasEvents\n  - System.Web.UI.Control.ID\n  - System.Web.UI.Control.IdSeparator\n  - System.Web.UI.Control.Init\n  - System.Web.UI.Control.IsChildControlStateCleared\n  - System.Web.UI.Control.IsLiteralContent\n  - System.Web.UI.Control.IsTrackingViewState\n  - System.Web.UI.Control.IsViewStateEnabled\n  - System.Web.UI.Control.Load\n  - System.Web.UI.Control.LoadControlState(System.Object)\n  - System.Web.UI.Control.LoadViewState(System.Object)\n  - System.Web.UI.Control.LoadViewStateByID\n  - System.Web.UI.Control.MapPathSecure(System.String)\n  - System.Web.UI.Control.NamingContainer\n  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.OnDataBinding(System.EventArgs)\n  - System.Web.UI.Control.OnInit(System.EventArgs)\n  - System.Web.UI.Control.OnLoad(System.EventArgs)\n  - System.Web.UI.Control.OnPreRender(System.EventArgs)\n  - System.Web.UI.Control.OnUnload(System.EventArgs)\n  - System.Web.UI.Control.OpenFile(System.String)\n  - System.Web.UI.Control.Page\n  - System.Web.UI.Control.Parent\n  - System.Web.UI.Control.PreRender\n  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)\n  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)\n  - System.Web.UI.Control.RenderingCompatibility\n  - System.Web.UI.Control.ResolveAdapter\n  - System.Web.UI.Control.ResolveClientUrl(System.String)\n  - System.Web.UI.Control.ResolveUrl(System.String)\n  - System.Web.UI.Control.SaveControlState\n  - System.Web.UI.Control.SaveViewState\n  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)\n  - System.Web.UI.Control.Site\n  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions\n  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.TemplateControl\n  - System.Web.UI.Control.TemplateSourceDirectory\n  - System.Web.UI.Control.TrackViewState\n  - System.Web.UI.Control.UniqueID\n  - System.Web.UI.Control.Unload\n  - System.Web.UI.Control.ValidateRequestMode\n  - System.Web.UI.Control.ViewState\n  - System.Web.UI.Control.ViewStateIgnoresCase\n  - System.Web.UI.Control.ViewStateMode\n  - System.Web.UI.Control.Visible\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: Xml()\n  nameWithType: Xml.Xml()\n  fullName: System.Web.UI.WebControls.Xml.Xml()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> class.\n  syntax:\n    content: public Xml ();\n    parameters: []\n  overload: System.Web.UI.WebControls.Xml.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)\n  id: AddParsedSubObject(System.Object)\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: AddParsedSubObject(Object)\n  nameWithType: Xml.AddParsedSubObject(Object)\n  fullName: System.Web.UI.WebControls.Xml.AddParsedSubObject(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Notifies the server control that an element, either XML or HTML, was parsed, and adds the element to the server control's <xref href=\"System.Web.UI.ControlCollection\"></xref> object.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to override the AddParsedSubObject method in a custom <xref:System.Web.UI.WebControls.Xml> server control.  \\n  \\n [!code-cs[CustomXmlAddParsedSubObject#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_244_1.aspx)]\\n [!code-vb[CustomXmlAddParsedSubObject#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_244_1.aspx)]  \\n  \\n [!code-vb[CustomXmlAddParsedSubObject#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_244_2.vb)]\\n [!code-cs[CustomXmlAddParsedSubObject#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_244_2.cs)]\"\n  syntax:\n    content: protected override void AddParsedSubObject (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An <xref:System.Object> that represents the parsed element.\n  overload: System.Web.UI.WebControls.Xml.AddParsedSubObject*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: <code>obj</code> is not of type <xref href=\"System.Web.UI.LiteralControl\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.ClientID\n  id: ClientID\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: ClientID\n  nameWithType: Xml.ClientID\n  fullName: System.Web.UI.WebControls.Xml.ClientID\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Overrides the &lt;xref:System.Web.UI.Control.ClientID%2A?displayProperty=fullName&gt; property and returns the base server control identifier.\n  syntax:\n    content: public override string ClientID { get; }\n    return:\n      type: System.String\n      description: The base server control identifier.\n  overload: System.Web.UI.WebControls.Xml.ClientID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.Controls\n  id: Controls\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: Controls\n  nameWithType: Xml.Controls\n  fullName: System.Web.UI.WebControls.Xml.Controls\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Overrides the &lt;xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName&gt; property and returns the base <xref href=\"System.Web.UI.ControlCollection\"></xref> collection.\n  syntax:\n    content: public override System.Web.UI.ControlCollection Controls { get; }\n    return:\n      type: System.Web.UI.ControlCollection\n      description: The base <xref href=\"System.Web.UI.ControlCollection\"></xref> collection.\n  overload: System.Web.UI.WebControls.Xml.Controls*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.CreateControlCollection\n  id: CreateControlCollection\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: CreateControlCollection()\n  nameWithType: Xml.CreateControlCollection()\n  fullName: System.Web.UI.WebControls.Xml.CreateControlCollection()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Creates a new <xref href=\"System.Web.UI.EmptyControlCollection\"></xref> object.\n  remarks: The CreateControlCollection method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.WebControls.Xml> control.\n  syntax:\n    content: protected override System.Web.UI.ControlCollection CreateControlCollection ();\n    parameters: []\n    return:\n      type: System.Web.UI.ControlCollection\n      description: Always returns an <xref href=\"System.Web.UI.EmptyControlCollection\"></xref>.\n  overload: System.Web.UI.WebControls.Xml.CreateControlCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.Document\n  id: Document\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: Document\n  nameWithType: Xml.Document\n  fullName: System.Web.UI.WebControls.Xml.Document\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the <xref href=\"System.Xml.XmlDocument\"></xref> to display in the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> control.\n  remarks: \"The Document property is obsolete. To specify the XML that will be displayed in the <xref:System.Web.UI.WebControls.Xml> control, use the <xref:System.Web.UI.WebControls.Xml.DocumentContent%2A> property or the <xref:System.Web.UI.WebControls.Xml.DocumentSource%2A> property. For more information about these alternatives, see the class overview for the <xref:System.Web.UI.WebControls.Xml> control.  \\n  \\n The XML document to display in the <xref:System.Web.UI.WebControls.Xml> control is specified in one of three ways. You can specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> object, an XML string, or an XML file by setting the appropriate property. The Document property is used to specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> (representing an XML document) to display in the control.\"\n  example:\n  - \"The following code example shows how to create <xref:System.Xml.XmlDocument> and <xref:System.Xml.Xsl.XslTransform> objects from a sample XML file and an XSL Transformation style sheet. The objects are then used by the XML control to display the XML document.  \\n  \\n [!code-cs[XmlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_173_1.aspx)]\\n [!code-vb[XmlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_173_1.aspx)]\"\n  syntax:\n    content: public System.Xml.XmlDocument Document { get; set; }\n    return:\n      type: System.Xml.XmlDocument\n      description: The <xref href=\"System.Xml.XmlDocument\"></xref> to display in the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> control.\n  overload: System.Web.UI.WebControls.Xml.Document*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.DocumentContent\n  id: DocumentContent\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: DocumentContent\n  nameWithType: Xml.DocumentContent\n  fullName: System.Web.UI.WebControls.Xml.DocumentContent\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Sets a string that contains the XML document to display in the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> control.\n  remarks: \"The XML document to display in the <xref:System.Web.UI.WebControls.Xml> control is specified in one of three ways. You can specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> object, an XML string, or an XML file by setting the appropriate property. The DocumentContent property is used to specify an XML string (representing an XML document) to display in the control. The DocumentContent property is not typically programmatically set, or set as an attribute of the control. Instead, the XML string is usually set declaratively by placing text between the opening and closing `<asp:Xml>` tags of the control.  \\n  \\n> [!NOTE]\\n>  Although the DocumentContent property contains both `get` and `set` accessors, only the `set` accessor is useful. If you use the `get` accessor, <xref:System.String.Empty?displayProperty=fullName> is returned.\"\n  syntax:\n    content: public string DocumentContent { get; set; }\n    return:\n      type: System.String\n      description: A string that contains the XML document to display in the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> control.\n  overload: System.Web.UI.WebControls.Xml.DocumentContent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.DocumentSource\n  id: DocumentSource\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: DocumentSource\n  nameWithType: Xml.DocumentSource\n  fullName: System.Web.UI.WebControls.Xml.DocumentSource\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the path to an XML document to display in the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> control.\n  remarks: The XML document to display in the <xref:System.Web.UI.WebControls.Xml> control is specified in one of three ways. You can specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> object, an XML string, or an XML file by setting the appropriate property. The DocumentSource property is used to specify the path to an XML file (representing an XML document) to display in the control. You can use a relative or an absolute path. A relative path relates the location of the file to the location of the Web Forms page or user control, without specifying a complete path on the server. The path is relative to the location of the Web page. This makes it easier to move the entire site to another directory on the server without updating the path to the file in code. An absolute path provides the complete path, so moving the site to another directory requires updating the code.\n  example:\n  - \"The following code example shows how to display an XML document using an XSL Transform in the <xref:System.Web.UI.WebControls.Xml> control.  \\n  \\n [!code-vb[XmlControlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_902_1.aspx)]\\n [!code-cs[XmlControlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_902_1.aspx)]\"\n  syntax:\n    content: public string DocumentSource { get; set; }\n    return:\n      type: System.String\n      description: The path to an XML document to display in the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> control.\n  overload: System.Web.UI.WebControls.Xml.DocumentSource*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.EnableTheming\n  id: EnableTheming\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: EnableTheming\n  nameWithType: Xml.EnableTheming\n  fullName: System.Web.UI.WebControls.Xml.EnableTheming\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Overrides the &lt;xref:System.Web.UI.Control.EnableTheming%2A?displayProperty=fullName&gt; property. This property is not supported by the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> class.\n  remarks: The EnableTheming property is inherited from the <xref:System.Web.UI.Control> class, but is not applicable to the <xref:System.Web.UI.WebControls.Xml> class. Any attempt to set the value of this property throws a <xref:System.NotSupportedException> exception.\n  syntax:\n    content: public override bool EnableTheming { get; set; }\n    return:\n      type: System.Boolean\n      description: Always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. This property is not supported.\n  overload: System.Web.UI.WebControls.Xml.EnableTheming*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: An attempt is made to set the value of this property.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.FindControl(System.String)\n  id: FindControl(System.String)\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: FindControl(String)\n  nameWithType: Xml.FindControl(String)\n  fullName: System.Web.UI.WebControls.Xml.FindControl(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Searches the page naming container for the specified server control.\n  syntax:\n    content: public override System.Web.UI.Control FindControl (string id);\n    parameters:\n    - id: id\n      type: System.String\n      description: The identifier for the control to be found.\n    return:\n      type: System.Web.UI.Control\n      description: The specified control; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the specified control does not exist.\n  overload: System.Web.UI.WebControls.Xml.FindControl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.Focus\n  id: Focus\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: Focus()\n  nameWithType: Xml.Focus()\n  fullName: System.Web.UI.WebControls.Xml.Focus()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Overrides the &lt;xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName&gt; method. This method is not supported by the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> class.\n  remarks: The Focus method is inherited from the <xref:System.Web.UI.Control> class, but it is not applicable to the <xref:System.Web.UI.WebControls.Xml> class. Any attempt to invoke the method throws a <xref:System.NotSupportedException> exception.\n  syntax:\n    content: public override void Focus ();\n    parameters: []\n  overload: System.Web.UI.WebControls.Xml.Focus*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: An attempt is made to invoke this method.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.GetDesignModeState\n  id: GetDesignModeState\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: GetDesignModeState()\n  nameWithType: Xml.GetDesignModeState()\n  fullName: System.Web.UI.WebControls.Xml.GetDesignModeState()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets design-time data for a control.\n  remarks: The GetDesignModeState method is a helper method used to get the current design-time state of the <xref:System.Web.UI.WebControls.Xml> control.\n  syntax:\n    content: protected override System.Collections.IDictionary GetDesignModeState ();\n    parameters: []\n    return:\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> containing the design-time data for the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> control.\n  overload: System.Web.UI.WebControls.Xml.GetDesignModeState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.HasControls\n  id: HasControls\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: HasControls()\n  nameWithType: Xml.HasControls()\n  fullName: System.Web.UI.WebControls.Xml.HasControls()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Determines whether the server control contains any child controls.\n  syntax:\n    content: public override bool HasControls ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control contains other controls; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.Xml.HasControls*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)\n  id: Render(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: Render(HtmlTextWriter)\n  nameWithType: Xml.Render(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.Xml.Render(HtmlTextWriter)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Renders the results to the output stream.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to override the Render method in a custom server control so that the <xref:System.Web.UI.WebControls.Xml> control is always displayed with an image.  \\n  \\n [!code-vb[CustomXmlRender#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_194_1.aspx)]\\n [!code-cs[CustomXmlRender#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_194_1.aspx)]  \\n  \\n [!code-cs[CustomXmlRender#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_194_2.cs)]\\n [!code-vb[CustomXmlRender#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_194_2.vb)]\"\n  syntax:\n    content: protected override void Render (System.Web.UI.HtmlTextWriter output);\n    parameters:\n    - id: output\n      type: System.Web.UI.HtmlTextWriter\n      description: The result of the output stream.\n  overload: System.Web.UI.WebControls.Xml.Render*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.SkinID\n  id: SkinID\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: SkinID\n  nameWithType: Xml.SkinID\n  fullName: System.Web.UI.WebControls.Xml.SkinID\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Overrides the &lt;xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName&gt; property. This property is not supported by the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> class.\n  remarks: The SkinID property is inherited from the <xref:System.Web.UI.Control> class, but is not applicable to the <xref:System.Web.UI.WebControls.Xml> class. Any attempt to set the value of this property throws a <xref:System.NotSupportedException> exception.\n  syntax:\n    content: public override string SkinID { get; set; }\n    return:\n      type: System.String\n      description: Always returns an empty string (\"\"). This property is not supported.\n  overload: System.Web.UI.WebControls.Xml.SkinID*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: An attempt is made to set the value of this property.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.Transform\n  id: Transform\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: Transform\n  nameWithType: Xml.Transform\n  fullName: System.Web.UI.WebControls.Xml.Transform\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the <xref href=\"System.Xml.Xsl.XslTransform\"></xref> object that formats the XML document before it is written to the output stream.\n  remarks: \"When using the <xref:System.Web.UI.WebControls.Xml> control to display an XML document, you can optionally specify an Extensible Stylesheet Language Transformation (XSLT) style sheet that formats the XML document, before it is written to the output stream in one of two ways. You can format the XML document with either a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object or an XSL Transformation style sheet file. If no XSL Transform document is specified, the XML document is displayed using the default format. The Transform property is used to specify a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object (representing an XSL Transform document) used to format the XML document before it is written to the output stream.  \\n  \\n> [!NOTE]\\n>  Using a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object requires `Full Trust` permissions.\"\n  example:\n  - \"The following code example shows how to create <xref:System.Xml.XmlDocument> and <xref:System.Xml.Xsl.XslTransform> objects from a sample XML file and an XSL Transformation style sheet. The objects are then used by the XML control to display the XML document.  \\n  \\n [!code-cs[XmlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_569_1.aspx)]\\n [!code-vb[XmlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_569_1.aspx)]\"\n  syntax:\n    content: public System.Xml.Xsl.XslTransform Transform { get; set; }\n    return:\n      type: System.Xml.Xsl.XslTransform\n      description: The <xref href=\"System.Xml.Xsl.XslTransform\"></xref> that formats the XML document before it is written to the output stream.\n  overload: System.Web.UI.WebControls.Xml.Transform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.TransformArgumentList\n  id: TransformArgumentList\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: TransformArgumentList\n  nameWithType: Xml.TransformArgumentList\n  fullName: System.Web.UI.WebControls.Xml.TransformArgumentList\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a <xref href=\"System.Xml.Xsl.XsltArgumentList\"></xref> that contains a list of optional arguments passed to the style sheet and used during the Extensible Stylesheet Language Transformation (XSLT).\n  remarks: \"Use the TransformArgumentList property to provide the XSL Transformation style sheet with optional arguments. The arguments can be either XSLT parameters or extension objects.  \\n  \\n For more information about using the <xref:System.Xml.Xsl.XsltArgumentList?displayProperty=fullName> class, see [XsltArgumentList for Style Sheet Parameters and Extension Objects](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public System.Xml.Xsl.XsltArgumentList TransformArgumentList { get; set; }\n    return:\n      type: System.Xml.Xsl.XsltArgumentList\n      description: A <xref href=\"System.Xml.Xsl.XsltArgumentList\"></xref> that contains a list of optional arguments passed to the style sheet and used during the XSL Transformation.\n  overload: System.Web.UI.WebControls.Xml.TransformArgumentList*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.TransformSource\n  id: TransformSource\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: TransformSource\n  nameWithType: Xml.TransformSource\n  fullName: System.Web.UI.WebControls.Xml.TransformSource\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the path to an Extensible Stylesheet Language Transformation (XSLT) style sheet that formats the XML document before it is written to the output stream.\n  remarks: When using the <xref:System.Web.UI.WebControls.Xml> control to display an XML document, you can optionally specify an XSL Transformation style sheet that formats the XML document before it is written to the output stream in one of two ways. You can either format the XML document with a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object or with an XSL Transformation style sheet file. If no XSL Transformation style sheet is specified, the XML document is displayed using the default format. The TransformSource property is used to specify the path to an XSL Transformation style sheet file (representing an XSL Transformation style sheet) used to format the XML document before it is written to the output stream. You can use a relative or an absolute path. A relative path relates the location of the file to the location of the Web Forms page or user control, without specifying a complete path on the server. The path is relative to the location of the Web page. This makes it easier to move the entire site to another directory on the server without updating the path to the file in code. An absolute path provides the complete path, so moving the site to another directory requires updating the code.\n  example:\n  - \"The following code example shows how to display an XML document using an XSL Transform in the <xref:System.Web.UI.WebControls.Xml> control.  \\n  \\n [!code-vb[XmlControlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_330_1.aspx)]\\n [!code-cs[XmlControlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_330_1.aspx)]\"\n  syntax:\n    content: public string TransformSource { get; set; }\n    return:\n      type: System.String\n      description: The path to an XSL Transformation style sheet that formats the XML document before it is written to the output stream.\n  overload: System.Web.UI.WebControls.Xml.TransformSource*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Xml.XPathNavigator\n  id: XPathNavigator\n  parent: System.Web.UI.WebControls.Xml\n  langs:\n  - csharp\n  name: XPathNavigator\n  nameWithType: Xml.XPathNavigator\n  fullName: System.Web.UI.WebControls.Xml.XPathNavigator\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a cursor model for navigating and editing the XML data associated with the <xref href=\"System.Web.UI.WebControls.Xml\"></xref> control.\n  remarks: \"This property can be used to associate an <xref:System.Xml.XPath.XPathNavigator> object with the <xref:System.Web.UI.WebControls.Xml> control.  \\n  \\n An <xref:System.Xml.XPath.XPathNavigator> object is created from a class that implements the <xref:System.Xml.XPath.IXPathNavigable> interface, such as the <xref:System.Xml.XPath.XPathDocument> and <xref:System.Xml.XmlDocument> classes. <xref:System.Xml.XPath.XPathNavigator> objects created by <xref:System.Xml.XPath.XPathDocument> objects are read-only, and <xref:System.Xml.XPath.XPathNavigator> objects created by <xref:System.Xml.XmlDocument> objects can be edited. An <xref:System.Xml.XPath.XPathNavigator> object's read-only or editable status is determined using the <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> property of the <xref:System.Xml.XPath.XPathNavigator> class.\"\n  syntax:\n    content: public System.Xml.XPath.XPathNavigator XPathNavigator { get; set; }\n    return:\n      type: System.Xml.XPath.XPathNavigator\n      description: An <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> object.\n  overload: System.Web.UI.WebControls.Xml.XPathNavigator*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.Control\n  isExternal: false\n  name: System.Web.UI.Control\n- uid: System.Web.HttpException\n  parent: System.Web\n  isExternal: false\n  name: HttpException\n  nameWithType: HttpException\n  fullName: System.Web.HttpException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.Web.UI.WebControls.Xml.#ctor\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: Xml()\n  nameWithType: Xml.Xml()\n  fullName: System.Web.UI.WebControls.Xml.Xml()\n- uid: System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: AddParsedSubObject(Object)\n  nameWithType: Xml.AddParsedSubObject(Object)\n  fullName: System.Web.UI.WebControls.Xml.AddParsedSubObject(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.UI.WebControls.Xml.ClientID\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: ClientID\n  nameWithType: Xml.ClientID\n  fullName: System.Web.UI.WebControls.Xml.ClientID\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.WebControls.Xml.Controls\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: Controls\n  nameWithType: Xml.Controls\n  fullName: System.Web.UI.WebControls.Xml.Controls\n- uid: System.Web.UI.ControlCollection\n  parent: System.Web.UI\n  isExternal: false\n  name: ControlCollection\n  nameWithType: ControlCollection\n  fullName: System.Web.UI.ControlCollection\n- uid: System.Web.UI.WebControls.Xml.CreateControlCollection\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: CreateControlCollection()\n  nameWithType: Xml.CreateControlCollection()\n  fullName: System.Web.UI.WebControls.Xml.CreateControlCollection()\n- uid: System.Web.UI.WebControls.Xml.Document\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: Document\n  nameWithType: Xml.Document\n  fullName: System.Web.UI.WebControls.Xml.Document\n- uid: System.Xml.XmlDocument\n  parent: System.Xml\n  isExternal: false\n  name: XmlDocument\n  nameWithType: XmlDocument\n  fullName: System.Xml.XmlDocument\n- uid: System.Web.UI.WebControls.Xml.DocumentContent\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: DocumentContent\n  nameWithType: Xml.DocumentContent\n  fullName: System.Web.UI.WebControls.Xml.DocumentContent\n- uid: System.Web.UI.WebControls.Xml.DocumentSource\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: DocumentSource\n  nameWithType: Xml.DocumentSource\n  fullName: System.Web.UI.WebControls.Xml.DocumentSource\n- uid: System.Web.UI.WebControls.Xml.EnableTheming\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: EnableTheming\n  nameWithType: Xml.EnableTheming\n  fullName: System.Web.UI.WebControls.Xml.EnableTheming\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.WebControls.Xml.FindControl(System.String)\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: FindControl(String)\n  nameWithType: Xml.FindControl(String)\n  fullName: System.Web.UI.WebControls.Xml.FindControl(String)\n- uid: System.Web.UI.WebControls.Xml.Focus\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: Focus()\n  nameWithType: Xml.Focus()\n  fullName: System.Web.UI.WebControls.Xml.Focus()\n- uid: System.Web.UI.WebControls.Xml.GetDesignModeState\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: GetDesignModeState()\n  nameWithType: Xml.GetDesignModeState()\n  fullName: System.Web.UI.WebControls.Xml.GetDesignModeState()\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: true\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Web.UI.WebControls.Xml.HasControls\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: HasControls()\n  nameWithType: Xml.HasControls()\n  fullName: System.Web.UI.WebControls.Xml.HasControls()\n- uid: System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: Render(HtmlTextWriter)\n  nameWithType: Xml.Render(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.Xml.Render(HtmlTextWriter)\n- uid: System.Web.UI.HtmlTextWriter\n  parent: System.Web.UI\n  isExternal: false\n  name: HtmlTextWriter\n  nameWithType: HtmlTextWriter\n  fullName: System.Web.UI.HtmlTextWriter\n- uid: System.Web.UI.WebControls.Xml.SkinID\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: SkinID\n  nameWithType: Xml.SkinID\n  fullName: System.Web.UI.WebControls.Xml.SkinID\n- uid: System.Web.UI.WebControls.Xml.Transform\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: Transform\n  nameWithType: Xml.Transform\n  fullName: System.Web.UI.WebControls.Xml.Transform\n- uid: System.Xml.Xsl.XslTransform\n  parent: System.Xml.Xsl\n  isExternal: false\n  name: XslTransform\n  nameWithType: XslTransform\n  fullName: System.Xml.Xsl.XslTransform\n- uid: System.Web.UI.WebControls.Xml.TransformArgumentList\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: TransformArgumentList\n  nameWithType: Xml.TransformArgumentList\n  fullName: System.Web.UI.WebControls.Xml.TransformArgumentList\n- uid: System.Xml.Xsl.XsltArgumentList\n  parent: System.Xml.Xsl\n  isExternal: false\n  name: XsltArgumentList\n  nameWithType: XsltArgumentList\n  fullName: System.Xml.Xsl.XsltArgumentList\n- uid: System.Web.UI.WebControls.Xml.TransformSource\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: TransformSource\n  nameWithType: Xml.TransformSource\n  fullName: System.Web.UI.WebControls.Xml.TransformSource\n- uid: System.Web.UI.WebControls.Xml.XPathNavigator\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: XPathNavigator\n  nameWithType: Xml.XPathNavigator\n  fullName: System.Web.UI.WebControls.Xml.XPathNavigator\n- uid: System.Xml.XPath.XPathNavigator\n  parent: System.Xml.XPath\n  isExternal: false\n  name: XPathNavigator\n  nameWithType: XPathNavigator\n  fullName: System.Xml.XPath.XPathNavigator\n- uid: System.Web.UI.WebControls.Xml.#ctor*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: Xml\n  nameWithType: Xml.Xml\n- uid: System.Web.UI.WebControls.Xml.AddParsedSubObject*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: AddParsedSubObject\n  nameWithType: Xml.AddParsedSubObject\n- uid: System.Web.UI.WebControls.Xml.ClientID*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: ClientID\n  nameWithType: Xml.ClientID\n- uid: System.Web.UI.WebControls.Xml.Controls*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: Controls\n  nameWithType: Xml.Controls\n- uid: System.Web.UI.WebControls.Xml.CreateControlCollection*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: CreateControlCollection\n  nameWithType: Xml.CreateControlCollection\n- uid: System.Web.UI.WebControls.Xml.Document*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: Document\n  nameWithType: Xml.Document\n- uid: System.Web.UI.WebControls.Xml.DocumentContent*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: DocumentContent\n  nameWithType: Xml.DocumentContent\n- uid: System.Web.UI.WebControls.Xml.DocumentSource*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: DocumentSource\n  nameWithType: Xml.DocumentSource\n- uid: System.Web.UI.WebControls.Xml.EnableTheming*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: EnableTheming\n  nameWithType: Xml.EnableTheming\n- uid: System.Web.UI.WebControls.Xml.FindControl*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: FindControl\n  nameWithType: Xml.FindControl\n- uid: System.Web.UI.WebControls.Xml.Focus*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: Focus\n  nameWithType: Xml.Focus\n- uid: System.Web.UI.WebControls.Xml.GetDesignModeState*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: GetDesignModeState\n  nameWithType: Xml.GetDesignModeState\n- uid: System.Web.UI.WebControls.Xml.HasControls*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: HasControls\n  nameWithType: Xml.HasControls\n- uid: System.Web.UI.WebControls.Xml.Render*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: Render\n  nameWithType: Xml.Render\n- uid: System.Web.UI.WebControls.Xml.SkinID*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: SkinID\n  nameWithType: Xml.SkinID\n- uid: System.Web.UI.WebControls.Xml.Transform*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: Transform\n  nameWithType: Xml.Transform\n- uid: System.Web.UI.WebControls.Xml.TransformArgumentList*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: TransformArgumentList\n  nameWithType: Xml.TransformArgumentList\n- uid: System.Web.UI.WebControls.Xml.TransformSource*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: TransformSource\n  nameWithType: Xml.TransformSource\n- uid: System.Web.UI.WebControls.Xml.XPathNavigator*\n  parent: System.Web.UI.WebControls.Xml\n  isExternal: false\n  name: XPathNavigator\n  nameWithType: Xml.XPathNavigator\n"}