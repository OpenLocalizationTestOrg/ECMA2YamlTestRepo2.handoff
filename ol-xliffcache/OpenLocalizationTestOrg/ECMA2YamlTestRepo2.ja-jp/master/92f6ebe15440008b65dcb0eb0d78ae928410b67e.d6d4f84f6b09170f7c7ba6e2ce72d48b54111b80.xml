{"nodes":[{"pos":[968,1058],"content":"Represents the license transform algorithm used to normalize XrML licenses for signatures.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the license transform algorithm used to normalize XrML licenses for signatures.","pos":[0,90]}]},{"pos":[1071,1478],"content":"The XmlLicenseTransform class represents the license transform algorithm as defined in the MPEG Rights Extension Language (MPEG REL).       Use the XmlLicenseTransform class to transform XrML licenses for signatures.       The Uniform Resource Identifier (URI) that describes the XmlLicenseTransform class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field.","needQuote":false,"needEscape":true,"nodes":[{"content":"The XmlLicenseTransform class represents the license transform algorithm as defined in the MPEG Rights Extension Language (MPEG REL).       Use the XmlLicenseTransform class to transform XrML licenses for signatures.       The Uniform Resource Identifier (URI) that describes the XmlLicenseTransform class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field.","pos":[0,403],"nodes":[{"content":"The XmlLicenseTransform class represents the license transform algorithm as defined in the MPEG Rights Extension Language (MPEG REL).","pos":[0,133]},{"content":"Use the XmlLicenseTransform class to transform XrML licenses for signatures.","pos":[140,216]},{"content":"The Uniform Resource Identifier (URI) that describes the XmlLicenseTransform class is defined by the &lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl&gt; field.","pos":[223,403],"source":"       The Uniform Resource Identifier (URI) that describes the XmlLicenseTransform class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field."}]}]},{"pos":[3120,3234],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> class."},{"pos":[3836,3959],"content":"Gets or sets the decryptor of the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets or sets the decryptor of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."},{"pos":[3971,4190],"content":"The &lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt; object uses an &lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt; interface to decrypt <ph id=\"ph1\">`&lt;encryptedGrant&gt;`</ph> elements from the current <ph id=\"ph2\">`&lt;license&gt;`</ph> element.","needQuote":true,"needEscape":true,"source":"The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> object uses an <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface to decrypt `<encryptedGrant>` elements from the current `<license>` element."},{"pos":[4968,5078],"content":"The decryptor of the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The decryptor of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."},{"pos":[5625,5917],"content":"Returns an XML representation of the parameters of an <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that are suitable to be included as subelements of an XMLDSIG <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;Transform&amp;gt;\" name=\"&amp;lt;Transform&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Returns an XML representation of the parameters of an <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object that are suitable to be included as subelements of an XMLDSIG <xref uid=\"langword_csharp_&lt;Transform&gt;\" name=\"&lt;Transform&gt;\" href=\"\"></xref> element."},{"pos":[6084,6375],"content":"A list of the XML nodes that represent the transform-specific content needed to describe the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object in an XMLDSIG <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;Transform&amp;gt;\" name=\"&amp;lt;Transform&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"A list of the XML nodes that represent the transform-specific content needed to describe the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object in an XMLDSIG <xref uid=\"langword_csharp_&lt;Transform&gt;\" name=\"&lt;Transform&gt;\" href=\"\"></xref> element."},{"pos":[6914,7020],"content":"Returns the output of an <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns the output of an <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."},{"pos":[7032,7102],"content":"The type of the returned object must be <xref:System.Xml.XmlDocument>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the returned object must be &lt;xref:System.Xml.XmlDocument&gt;.","pos":[0,70],"source":"The type of the returned object must be <xref:System.Xml.XmlDocument>."}]},{"pos":[7239,7338],"content":"The output of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The output of the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."},{"pos":[7913,8019],"content":"Returns the output of an <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns the output of an <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."},{"pos":[8163,8283],"content":"The type of the output to return. <xref href=\"System.Xml.XmlDocument\"></xref> is the only valid type for this parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the output to return.","pos":[0,33]},{"content":"<bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is the only valid type for this parameter.","pos":[34,120],"source":"<xref href=\"System.Xml.XmlDocument\"></xref> is the only valid type for this parameter."}]},{"pos":[8341,8440],"content":"The output of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The output of the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."},{"pos":[8625,8718],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not an <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <code>type</code> parameter is not an <xref href=\"System.Xml.XmlDocument\"></xref> object."},{"pos":[9163,9391],"content":"Gets an array of types that are valid inputs to the &lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes*&gt; method of the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets an array of types that are valid inputs to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes*> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."},{"pos":[9403,9535],"content":"The only valid input type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The only valid input type to the &lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt; class is &lt;xref:System.Xml.XmlDocument&gt;.","pos":[0,132],"source":"The only valid input type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>."}]},{"pos":[9659,10114],"content":"An array of types that are valid inputs to the &lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes<bpt id=\"p1\">*</bpt>&gt; method of the current <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object; you can pass only objects of one of these types to the &lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes<ept id=\"p1\">*</ept>&gt; method of the current <bpt id=\"p3\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An array of types that are valid inputs to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes*> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object; you can pass only objects of one of these types to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes*> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."},{"pos":[10748,11099],"content":"Parses the specified <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNodeList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object as transform-specific content of a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;Transform&amp;gt;\" name=\"&amp;lt;Transform&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element; this method is not supported because the <bpt id=\"p3\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> object has no inner XML elements.","needQuote":true,"needEscape":true,"source":"Parses the specified <xref href=\"System.Xml.XmlNodeList\"></xref> object as transform-specific content of a <xref uid=\"langword_csharp_&lt;Transform&gt;\" name=\"&lt;Transform&gt;\" href=\"\"></xref> element; this method is not supported because the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object has no inner XML elements."},{"pos":[11281,11473],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNodeList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that encapsulates the transform to load into the current <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.XmlNodeList\"></xref> object that encapsulates the transform to load into the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."},{"pos":[12061,12185],"content":"Loads the specified input into the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Loads the specified input into the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."},{"pos":[12329,12527],"content":"The input to load into the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object. The type of the input object must be <xref href=\"System.Xml.XmlDocument\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The input to load into the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,116],"source":"The input to load into the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."},{"content":"The type of the input object must be <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[117,198],"source":" The type of the input object must be <xref href=\"System.Xml.XmlDocument\"></xref>."}]},{"pos":[12767,13313],"content":"The context was not set before this transform was invoked.       -or-       The <xref uid=\"langword_csharp_&lt;issuer&gt;\" name=\"&lt;issuer&gt;\" href=\"\"></xref> element was not set before this transform was invoked.       -or-       The <xref uid=\"langword_csharp_&lt;license&gt;\" name=\"&lt;license&gt;\" href=\"\"></xref> element was not set before this transform was invoked.       -or-       The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor*> property was not set before this transform was invoked.","needQuote":false,"needEscape":true,"nodes":[{"content":"The context was not set before this transform was invoked.","pos":[0,58]},{"content":"-or-       The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;issuer&amp;gt;\" name=\"&amp;lt;issuer&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element was not set before this transform was invoked.","pos":[65,215],"source":"       -or-       The <xref uid=\"langword_csharp_&lt;issuer&gt;\" name=\"&lt;issuer&gt;\" href=\"\"></xref> element was not set before this transform was invoked."},{"content":"-or-       The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;license&amp;gt;\" name=\"&amp;lt;license&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element was not set before this transform was invoked.","pos":[222,374],"source":"       -or-       The <xref uid=\"langword_csharp_&lt;license&gt;\" name=\"&lt;license&gt;\" href=\"\"></xref> element was not set before this transform was invoked."},{"content":"-or-       The &lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor*&gt; property was not set before this transform was invoked.","pos":[381,522],"source":"       -or-       The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor*> property was not set before this transform was invoked."}]},{"pos":[13764,13934],"content":"Gets an array of types that are valid outputs from the OutputTypes method of the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets an array of types that are valid outputs from the OutputTypes method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."},{"pos":[13946,14079],"content":"The only valid output type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The only valid output type to the &lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt; class is &lt;xref:System.Xml.XmlDocument&gt;.","pos":[0,133],"source":"The only valid output type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>."}]},{"pos":[14204,14565],"content":"An array of valid output types for the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object; only objects of one of these types are returned from the &lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput*&gt; methods of the current <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An array of valid output types for the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object; only objects of one of these types are returned from the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput*> methods of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform\n  id: XmlLicenseTransform\n  children:\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\n  langs:\n  - csharp\n  name: XmlLicenseTransform\n  nameWithType: XmlLicenseTransform\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform\n  type: Class\n  summary: Represents the license transform algorithm used to normalize XrML licenses for signatures.\n  remarks: \"The XmlLicenseTransform class represents the license transform algorithm as defined in the MPEG Rights Extension Language (MPEG REL).  \\n  \\n Use the XmlLicenseTransform class to transform XrML licenses for signatures.  \\n  \\n The Uniform Resource Identifier (URI) that describes the XmlLicenseTransform class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field.\"\n  example:\n  - \"The following code example shows how to validate an XML digital signature using the <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface and the XmlLicenseTransform class.  \\n  \\n [!code-cs[Cryptography.XML.XmlLicenseTransform#2](~/add/codesnippet/csharp/t-system.security.crypto_114_1.cs)]\\n [!code-cpp[Cryptography.XML.XmlLicenseTransform#2](~/add/codesnippet/cpp/t-system.security.crypto_114_1.cpp)]\\n [!code-vb[Cryptography.XML.XmlLicenseTransform#2](~/add/codesnippet/visualbasic/t-system.security.crypto_114_1.vb)]\"\n  syntax:\n    content: 'public class XmlLicenseTransform : System.Security.Cryptography.Xml.Transform'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.Xml.Transform\n  implements: []\n  inheritedMembers:\n  - System.Security.Cryptography.Xml.Transform.Algorithm\n  - System.Security.Cryptography.Xml.Transform.Context\n  - System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)\n  - System.Security.Cryptography.Xml.Transform.GetXml\n  - System.Security.Cryptography.Xml.Transform.PropagatedNamespaces\n  - System.Security.Cryptography.Xml.Transform.Resolver\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: XmlLicenseTransform()\n  nameWithType: XmlLicenseTransform.XmlLicenseTransform()\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.XmlLicenseTransform()\n  type: Constructor\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> class.\n  syntax:\n    content: public XmlLicenseTransform ();\n    parameters: []\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor\n  id: Decryptor\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: Decryptor\n  nameWithType: XmlLicenseTransform.Decryptor\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets the decryptor of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  remarks: The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> object uses an <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface to decrypt `<encryptedGrant>` elements from the current `<license>` element.\n  example:\n  - \"The following code example shows how to validate an XML digital signature using the <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface and the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class.  \\n  \\n [!code-cs[Cryptography.XML.XmlLicenseTransform#2](~/add/codesnippet/csharp/p-system.security.crypto_17_1.cs)]\\n [!code-cpp[Cryptography.XML.XmlLicenseTransform#2](~/add/codesnippet/cpp/p-system.security.crypto_17_1.cpp)]\\n [!code-vb[Cryptography.XML.XmlLicenseTransform#2](~/add/codesnippet/visualbasic/p-system.security.crypto_17_1.vb)]\"\n  syntax:\n    content: public System.Security.Cryptography.Xml.IRelDecryptor Decryptor { get; set; }\n    return:\n      type: System.Security.Cryptography.Xml.IRelDecryptor\n      description: The decryptor of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml\n  id: GetInnerXml\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: GetInnerXml()\n  nameWithType: XmlLicenseTransform.GetInnerXml()\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml()\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Returns an XML representation of the parameters of an <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object that are suitable to be included as subelements of an XMLDSIG <xref uid=\"langword_csharp_&lt;Transform&gt;\" name=\"&lt;Transform&gt;\" href=\"\"></xref> element.\n  syntax:\n    content: protected override System.Xml.XmlNodeList GetInnerXml ();\n    parameters: []\n    return:\n      type: System.Xml.XmlNodeList\n      description: A list of the XML nodes that represent the transform-specific content needed to describe the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object in an XMLDSIG <xref uid=\"langword_csharp_&lt;Transform&gt;\" name=\"&lt;Transform&gt;\" href=\"\"></xref> element.\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput\n  id: GetOutput\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: GetOutput()\n  nameWithType: XmlLicenseTransform.GetOutput()\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput()\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Returns the output of an <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  remarks: The type of the returned object must be <xref:System.Xml.XmlDocument>.\n  syntax:\n    content: public override object GetOutput ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The output of the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)\n  id: GetOutput(System.Type)\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: GetOutput(Type)\n  nameWithType: XmlLicenseTransform.GetOutput(Type)\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(Type)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Returns the output of an <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  syntax:\n    content: public override object GetOutput (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of the output to return. <xref href=\"System.Xml.XmlDocument\"></xref> is the only valid type for this parameter.\n    return:\n      type: System.Object\n      description: The output of the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>type</code> parameter is not an <xref href=\"System.Xml.XmlDocument\"></xref> object.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes\n  id: InputTypes\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: InputTypes\n  nameWithType: XmlLicenseTransform.InputTypes\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets an array of types that are valid inputs to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes*> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  remarks: The only valid input type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>.\n  syntax:\n    content: public override Type[] InputTypes { get; }\n    return:\n      type: System.Type[]\n      description: An array of types that are valid inputs to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes*> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object; you can pass only objects of one of these types to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes*> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)\n  id: LoadInnerXml(System.Xml.XmlNodeList)\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: LoadInnerXml(XmlNodeList)\n  nameWithType: XmlLicenseTransform.LoadInnerXml(XmlNodeList)\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(XmlNodeList)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Parses the specified <xref href=\"System.Xml.XmlNodeList\"></xref> object as transform-specific content of a <xref uid=\"langword_csharp_&lt;Transform&gt;\" name=\"&lt;Transform&gt;\" href=\"\"></xref> element; this method is not supported because the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object has no inner XML elements.\n  syntax:\n    content: public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);\n    parameters:\n    - id: nodeList\n      type: System.Xml.XmlNodeList\n      description: An <xref href=\"System.Xml.XmlNodeList\"></xref> object that encapsulates the transform to load into the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)\n  id: LoadInput(System.Object)\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: LoadInput(Object)\n  nameWithType: XmlLicenseTransform.LoadInput(Object)\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(Object)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Loads the specified input into the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  syntax:\n    content: public override void LoadInput (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The input to load into the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object. The type of the input object must be <xref href=\"System.Xml.XmlDocument\"></xref>.\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The context was not set before this transform was invoked.  \\n  \\n -or-  \\n  \\n The <xref uid=\\\"langword_csharp_&lt;issuer&gt;\\\" name=\\\"&lt;issuer&gt;\\\" href=\\\"\\\"></xref> element was not set before this transform was invoked.  \\n  \\n -or-  \\n  \\n The <xref uid=\\\"langword_csharp_&lt;license&gt;\\\" name=\\\"&lt;license&gt;\\\" href=\\\"\\\"></xref> element was not set before this transform was invoked.  \\n  \\n -or-  \\n  \\n The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor*> property was not set before this transform was invoked.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\n  id: OutputTypes\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: OutputTypes\n  nameWithType: XmlLicenseTransform.OutputTypes\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets an array of types that are valid outputs from the OutputTypes method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  remarks: The only valid output type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>.\n  syntax:\n    content: public override Type[] OutputTypes { get; }\n    return:\n      type: System.Type[]\n      description: An array of valid output types for the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object; only objects of one of these types are returned from the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput*> methods of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.Xml.Transform\n  isExternal: false\n  name: System.Security.Cryptography.Xml.Transform\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: XmlLicenseTransform()\n  nameWithType: XmlLicenseTransform.XmlLicenseTransform()\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.XmlLicenseTransform()\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: Decryptor\n  nameWithType: XmlLicenseTransform.Decryptor\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor\n- uid: System.Security.Cryptography.Xml.IRelDecryptor\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: IRelDecryptor\n  nameWithType: IRelDecryptor\n  fullName: System.Security.Cryptography.Xml.IRelDecryptor\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: GetInnerXml()\n  nameWithType: XmlLicenseTransform.GetInnerXml()\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml()\n- uid: System.Xml.XmlNodeList\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeList\n  nameWithType: XmlNodeList\n  fullName: System.Xml.XmlNodeList\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: GetOutput()\n  nameWithType: XmlLicenseTransform.GetOutput()\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: GetOutput(Type)\n  nameWithType: XmlLicenseTransform.GetOutput(Type)\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: InputTypes\n  nameWithType: XmlLicenseTransform.InputTypes\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes\n- uid: System.Type[]\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: LoadInnerXml(XmlNodeList)\n  nameWithType: XmlLicenseTransform.LoadInnerXml(XmlNodeList)\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(XmlNodeList)\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: LoadInput(Object)\n  nameWithType: XmlLicenseTransform.LoadInput(Object)\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(Object)\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: OutputTypes\n  nameWithType: XmlLicenseTransform.OutputTypes\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor*\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: XmlLicenseTransform\n  nameWithType: XmlLicenseTransform.XmlLicenseTransform\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor*\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: Decryptor\n  nameWithType: XmlLicenseTransform.Decryptor\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml*\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: GetInnerXml\n  nameWithType: XmlLicenseTransform.GetInnerXml\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput*\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: GetOutput\n  nameWithType: XmlLicenseTransform.GetOutput\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes*\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: InputTypes\n  nameWithType: XmlLicenseTransform.InputTypes\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml*\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: LoadInnerXml\n  nameWithType: XmlLicenseTransform.LoadInnerXml\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput*\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: LoadInput\n  nameWithType: XmlLicenseTransform.LoadInput\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes*\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: OutputTypes\n  nameWithType: XmlLicenseTransform.OutputTypes\n"}