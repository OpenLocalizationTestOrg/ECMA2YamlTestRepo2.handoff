{"nodes":[{"pos":[330,456],"content":"Indicates that the modified instance of a variable differs from its true type when marshaling. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates that the modified instance of a variable differs from its true type when marshaling. This class cannot be inherited.","pos":[0,126],"nodes":[{"content":"Indicates that the modified instance of a variable differs from its true type when marshaling.","pos":[0,94]},{"content":"This class cannot be inherited.","pos":[95,126]}]}]},{"pos":[469,985],"content":"The CompilerMarshalOverride class allows the common language runtime to marshal using the correct sizes.       Some behaviors of the common language runtime are incompatible with some languages. For example, C++ treats Boolean variables as single-byte values, while the common language runtime marshals them as four-byte values to match the `BOOLEAN` type defined by the Microsoft Win32 API.  To work around such issues, the C++ compiler emits this modifier on any `wchar_t` or `bool` parameter or function return.","needQuote":false,"needEscape":true,"nodes":[{"content":"The CompilerMarshalOverride class allows the common language runtime to marshal using the correct sizes.","pos":[0,104]},{"content":"Some behaviors of the common language runtime are incompatible with some languages.","pos":[111,194]},{"content":"For example, C++ treats Boolean variables as single-byte values, while the common language runtime marshals them as four-byte values to match the <ph id=\"ph1\">`BOOLEAN`</ph> type defined by the Microsoft Win32 API.","pos":[195,391],"source":" For example, C++ treats Boolean variables as single-byte values, while the common language runtime marshals them as four-byte values to match the `BOOLEAN` type defined by the Microsoft Win32 API."},{"content":"To work around such issues, the C++ compiler emits this modifier on any <ph id=\"ph1\">`wchar_t`</ph> or <ph id=\"ph2\">`bool`</ph> parameter or function return.","pos":[393,514],"source":"  To work around such issues, the C++ compiler emits this modifier on any `wchar_t` or `bool` parameter or function return."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.CompilerServices.CompilerMarshalOverride\n  id: CompilerMarshalOverride\n  children: []\n  langs:\n  - csharp\n  name: CompilerMarshalOverride\n  nameWithType: CompilerMarshalOverride\n  fullName: System.Runtime.CompilerServices.CompilerMarshalOverride\n  type: Class\n  summary: Indicates that the modified instance of a variable differs from its true type when marshaling. This class cannot be inherited.\n  remarks: \"The CompilerMarshalOverride class allows the common language runtime to marshal using the correct sizes.  \\n  \\n Some behaviors of the common language runtime are incompatible with some languages. For example, C++ treats Boolean variables as single-byte values, while the common language runtime marshals them as four-byte values to match the `BOOLEAN` type defined by the Microsoft Win32 API.  To work around such issues, the C++ compiler emits this modifier on any `wchar_t` or `bool` parameter or function return.\"\n  syntax:\n    content: public static class CompilerMarshalOverride\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n"}