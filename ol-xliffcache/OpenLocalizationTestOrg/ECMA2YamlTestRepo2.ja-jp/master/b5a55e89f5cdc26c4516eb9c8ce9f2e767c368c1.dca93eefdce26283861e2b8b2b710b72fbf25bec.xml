{"nodes":[{"pos":[4903,5116],"content":"Encapsulates a set of related projects, their toolsets, a default set of global properties, and the loggers that should be used to build them. A global version of this class acts as the default project collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Encapsulates a set of related projects, their toolsets, a default set of global properties, and the loggers that should be used to build them. A global version of this class acts as the default project collection.","pos":[0,213],"nodes":[{"content":"Encapsulates a set of related projects, their toolsets, a default set of global properties, and the loggers that should be used to build them.","pos":[0,142]},{"content":"A global version of this class acts as the default project collection.","pos":[143,213]}]}]},{"pos":[5128,5232],"content":"Multiple project collections can exist within an app domain. However, these must not build concurrently.","needQuote":true,"needEscape":true,"nodes":[{"content":"Multiple project collections can exist within an app domain. However, these must not build concurrently.","pos":[0,104],"nodes":[{"content":"Multiple project collections can exist within an app domain.","pos":[0,60]},{"content":"However, these must not build concurrently.","pos":[61,104]}]}]},{"pos":[5830,5984],"content":"Creates a project collection with no global properties or loggers. The project collection toolset is initialized from the configuration file and registry.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a project collection with no global properties or loggers. The project collection toolset is initialized from the configuration file and registry.","pos":[0,154],"nodes":[{"content":"Creates a project collection with no global properties or loggers.","pos":[0,66]},{"content":"The project collection toolset is initialized from the configuration file and registry.","pos":[67,154]}]}]},{"pos":[6759,6909],"content":"Creates a project collection with no global properties or loggers. The project collection toolset is initialized from toolsets in the given locations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a project collection with no global properties or loggers. The project collection toolset is initialized from toolsets in the given locations.","pos":[0,150],"nodes":[{"content":"Creates a project collection with no global properties or loggers.","pos":[0,66]},{"content":"The project collection toolset is initialized from toolsets in the given locations.","pos":[67,150]}]}]},{"pos":[7160,7202],"content":"The locations from which to load toolsets.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locations from which to load toolsets.","pos":[0,42]}]},{"pos":[7934,8090],"content":"Instantiates a project collection with specified global properties, no loggers, and that reads toolset information from the configuration file and registry.","needQuote":true,"needEscape":true,"nodes":[{"content":"Instantiates a project collection with specified global properties, no loggers, and that reads toolset information from the configuration file and registry.","pos":[0,156]}]},{"pos":[8102,8146],"content":"May throw InvalidToolsetDefinitionException.","needQuote":true,"needEscape":true,"nodes":[{"content":"May throw InvalidToolsetDefinitionException.","pos":[0,44]}]},{"pos":[8411,8461],"content":"The default global properties to use. May be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default global properties to use. May be null.","pos":[0,50],"nodes":[{"content":"The default global properties to use.","pos":[0,37]},{"content":"May be null.","pos":[38,50]}]}]},{"pos":[9593,9714],"content":"Instantiates a project collection with specified global properties and loggers and using the specified toolset locations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Instantiates a project collection with specified global properties and loggers and using the specified toolset locations.","pos":[0,121]}]},{"pos":[9726,9770],"content":"May throw InvalidToolsetDefinitionException.","needQuote":true,"needEscape":true,"nodes":[{"content":"May throw InvalidToolsetDefinitionException.","pos":[0,44]}]},{"pos":[10200,10250],"content":"The default global properties to use. May be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default global properties to use. May be null.","pos":[0,50],"nodes":[{"content":"The default global properties to use.","pos":[0,37]},{"content":"May be null.","pos":[38,50]}]}]},{"pos":[10374,10411],"content":"The loggers to register. May be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The loggers to register. May be null.","pos":[0,37],"nodes":[{"content":"The loggers to register.","pos":[0,24]},{"content":"May be null.","pos":[25,37]}]}]},{"pos":[10534,10576],"content":"The locations from which to load toolsets.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locations from which to load toolsets.","pos":[0,42]}]},{"pos":[12088,12288],"content":"Creates a project collection with specified global properties, loggers, node count, and onlyLogCriticalEvents value. The project collection toolset is initialized from toolsets in the given locations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a project collection with specified global properties, loggers, node count, and onlyLogCriticalEvents value. The project collection toolset is initialized from toolsets in the given locations.","pos":[0,200],"nodes":[{"content":"Creates a project collection with specified global properties, loggers, node count, and onlyLogCriticalEvents value.","pos":[0,116]},{"content":"The project collection toolset is initialized from toolsets in the given locations.","pos":[117,200]}]}]},{"pos":[12300,12380],"content":"Throws InvalidProjectFileException if any of the global properties are reserved.","needQuote":true,"needEscape":true,"nodes":[{"content":"Throws InvalidProjectFileException if any of the global properties are reserved.","pos":[0,80]}]},{"pos":[12958,13008],"content":"The default global properties to use. May be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default global properties to use. May be null.","pos":[0,50],"nodes":[{"content":"The default global properties to use.","pos":[0,37]},{"content":"May be null.","pos":[38,50]}]}]},{"pos":[13132,13204],"content":"The loggers to register. May be null and specified to any build instead.","needQuote":true,"needEscape":true,"nodes":[{"content":"The loggers to register. May be null and specified to any build instead.","pos":[0,72],"nodes":[{"content":"The loggers to register.","pos":[0,24]},{"content":"May be null and specified to any build instead.","pos":[25,72]}]}]},{"pos":[13347,13426],"content":"Any remote loggers to register. May be null and specified to any build instead.","needQuote":true,"needEscape":true,"nodes":[{"content":"Any remote loggers to register. May be null and specified to any build instead.","pos":[0,79],"nodes":[{"content":"Any remote loggers to register.","pos":[0,31]},{"content":"May be null and specified to any build instead.","pos":[32,79]}]}]},{"pos":[13549,13591],"content":"The locations from which to load toolsets.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locations from which to load toolsets.","pos":[0,42]}]},{"pos":[13659,13707],"content":"The maximum number of nodes to use for building.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of nodes to use for building.","pos":[0,48]}]},{"pos":[13786,13838],"content":"If set to true, only critical events will be logged.","needQuote":true,"needEscape":true,"nodes":[{"content":"If set to true, only critical events will be logged.","pos":[0,52]}]},{"pos":[14429,14533],"content":"Adds a new toolset to the project collection. Replaces any existing toolset with the same tools version.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a new toolset to the project collection. Replaces any existing toolset with the same tools version.","pos":[0,104],"nodes":[{"content":"Adds a new toolset to the project collection.","pos":[0,45]},{"content":"Replaces any existing toolset with the same tools version.","pos":[46,104]}]}]},{"pos":[14726,14750],"content":"The toolset to be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The toolset to be added.","pos":[0,24]}]},{"pos":[15326,15394],"content":"Determines whether a toolset is defined for the given tools version.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether a toolset is defined for the given tools version.","pos":[0,68]}]},{"pos":[15553,15585],"content":"The tools version to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The tools version to search for.","pos":[0,32]}]},{"pos":[15644,15732],"content":"Returns true if there is a toolset defined for the given tools version; false otherwise.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns true if there is a toolset defined for the given tools version; false otherwise.","pos":[0,88]}]},{"pos":[16211,16277],"content":"Gets the number of projects currently loaded into this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of projects currently loaded into this collection.","pos":[0,66]}]},{"pos":[16383,16452],"content":"Returns the number of projects currently loaded into this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the number of projects currently loaded into this collection.","pos":[0,69]}]},{"pos":[16991,17049],"content":"Gets the default tools version of this project collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default tools version of this project collection.","pos":[0,58]}]},{"pos":[17062,17337],"content":"This default value is obtained from the .exe.config file, from the system registry, or if neither is present, from the hard-coded tools version \"2.0\".       The set method throws InvalidOperationException if a toolset with the provided tools version has not been defined.","needQuote":false,"needEscape":true,"nodes":[{"content":"This default value is obtained from the .exe.config file, from the system registry, or if neither is present, from the hard-coded tools version \"2.0\".       The set method throws InvalidOperationException if a toolset with the provided tools version has not been defined.","pos":[0,271],"nodes":[{"content":"This default value is obtained from the .exe.config file, from the system registry, or if neither is present, from the hard-coded tools version \"2.0\".","pos":[0,150]},{"content":"The set method throws InvalidOperationException if a toolset with the provided tools version has not been defined.","pos":[157,271]}]}]},{"pos":[17467,17553],"content":"Returns the default tools version of this project collection, which is always defined.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the default tools version of this project collection, which is always defined.","pos":[0,86]}]},{"pos":[18091,18372],"content":"Gets or sets a flag that determines whether <xref:Microsoft.Build.Evaluation.Project.MarkDirty*> is temporarily disabled on projects in this collection. This allows, for example, a global properties to be set without projects getting marked dirty for reevaluation as a consequence.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a flag that determines whether <xref:Microsoft.Build.Evaluation.Project.MarkDirty*> is temporarily disabled on projects in this collection. This allows, for example, a global properties to be set without projects getting marked dirty for reevaluation as a consequence.","pos":[0,281],"nodes":[{"content":"Gets or sets a flag that determines whether &lt;xref:Microsoft.Build.Evaluation.Project.MarkDirty*&gt; is temporarily disabled on projects in this collection.","pos":[0,152],"source":"Gets or sets a flag that determines whether <xref:Microsoft.Build.Evaluation.Project.MarkDirty*> is temporarily disabled on projects in this collection."},{"content":"This allows, for example, a global properties to be set without projects getting marked dirty for reevaluation as a consequence.","pos":[153,281]}]}]},{"pos":[18497,18631],"content":"Returns a flag that determines whether <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_MarkDirty\" name=\"MarkDirty\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is temporarily disabled.","needQuote":true,"needEscape":true,"source":"Returns a flag that determines whether <xref uid=\"langword_csharp_MarkDirty\" name=\"MarkDirty\" href=\"\"></xref> is temporarily disabled."},{"pos":[19125,19231],"content":"Releases both managed and unmanaged resources.  Called when a host no longer needs the project collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Releases both managed and unmanaged resources.  Called when a host no longer needs the project collection.","pos":[0,106],"nodes":[{"content":"Releases both managed and unmanaged resources.","pos":[0,46]},{"content":"Called when a host no longer needs the project collection.","pos":[48,106]}]}]},{"pos":[19243,19403],"content":"In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject() before the ProjectCollection goes out of scope.”","needQuote":true,"needEscape":true,"nodes":[{"content":"In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject() before the ProjectCollection goes out of scope.”","pos":[0,160]}]},{"pos":[20007,20211],"content":"Releases both managed and unmanaged resources.  Called when a host no longer needs the project collection.. Shuts down any logging services that the project collection owns and releases the logger thread.","needQuote":true,"needEscape":true,"nodes":[{"content":"Releases both managed and unmanaged resources.  Called when a host no longer needs the project collection.. Shuts down any logging services that the project collection owns and releases the logger thread.","pos":[0,204],"nodes":[{"content":"Releases both managed and unmanaged resources.","pos":[0,46]},{"content":"Called when a host no longer needs the project collection..","pos":[48,107]},{"content":"Shuts down any logging services that the project collection owns and releases the logger thread.","pos":[108,204]}]}]},{"pos":[20223,20271],"content":"Follows the garbage disposal guidelines of .NET.","needQuote":true,"needEscape":true,"nodes":[{"content":"Follows the garbage disposal guidelines of .NET.","pos":[0,48]}]},{"pos":[20426,20527],"content":"If true, releases both managed and unmanaged resources; otherwise releases only unmanaged resources..","needQuote":true,"needEscape":true,"nodes":[{"content":"If true, releases both managed and unmanaged resources; otherwise releases only unmanaged resources..","pos":[0,101]}]},{"pos":[21055,21120],"content":"Converts special characters in a string to MSBuild escape format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts special characters in a string to MSBuild escape format.","pos":[0,65]}]},{"pos":[21132,21441],"content":"For example, \"%3b\" for \";\". Only characters that are especially significant to MSBuild parsing are converted. Callers can use this method to make a string safe to be parsed by other methods that would otherwise expand it. Callers can also use this method to make a string safe to be written to a project file.","needQuote":true,"needEscape":true,"nodes":[{"content":"For example, \"%3b\" for \";\". Only characters that are especially significant to MSBuild parsing are converted. Callers can use this method to make a string safe to be parsed by other methods that would otherwise expand it. Callers can also use this method to make a string safe to be written to a project file.","pos":[0,309],"nodes":[{"content":"For example, \"%3b\" for \";\".","pos":[0,27]},{"content":"Only characters that are especially significant to MSBuild parsing are converted.","pos":[28,109]},{"content":"Callers can use this method to make a string safe to be parsed by other methods that would otherwise expand it.","pos":[110,221]},{"content":"Callers can also use this method to make a string safe to be written to a project file.","pos":[222,309]}]}]},{"pos":[21606,21633],"content":"The string to be converted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to be converted.","pos":[0,27]}]},{"pos":[21691,21720],"content":"Returns the converted string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the converted string.","pos":[0,29]}]},{"pos":[22302,22380],"content":"Get any global property on the project collection that has the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Get any global property on the project collection that has the specified name.","pos":[0,78]}]},{"pos":[22570,22611],"content":"The name of the property to be retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property to be retrieved.","pos":[0,41]}]},{"pos":[22705,22811],"content":"Returns any global property on the project collection that has the specified name; otherwise returns null.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns any global property on the project collection that has the specified name; otherwise returns null.","pos":[0,106]}]},{"pos":[23404,23464],"content":"Gets all projects whose project path matches the given path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets all projects whose project path matches the given path.","pos":[0,60]}]},{"pos":[23476,23613],"content":"There may be more than one project with the given path because projects are also distinguished by global properties and/or tools version.","needQuote":true,"needEscape":true,"nodes":[{"content":"There may be more than one project with the given path because projects are also distinguished by global properties and/or tools version.","pos":[0,137]}]},{"pos":[23836,23877],"content":"The path to a project file to be matched.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to a project file to be matched.","pos":[0,41]}]},{"pos":[23996,24059],"content":"Returns all projects whose project path matches the given path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns all projects whose project path matches the given path.","pos":[0,63]}]},{"pos":[24617,24666],"content":"Get the toolset with the specified tools version.","needQuote":true,"needEscape":true,"nodes":[{"content":"Get the toolset with the specified tools version.","pos":[0,49]}]},{"pos":[24850,24877],"content":"The tools version to match.","needQuote":true,"needEscape":true,"nodes":[{"content":"The tools version to match.","pos":[0,27]}]},{"pos":[24956,25072],"content":"Returns the toolset with the specified tools version. Returns null if no toolset matching this tools version exists.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the toolset with the specified tools version. Returns null if no toolset matching this tools version exists.","pos":[0,116],"nodes":[{"content":"Returns the toolset with the specified tools version.","pos":[0,53]},{"content":"Returns null if no toolset matching this tools version exists.","pos":[54,116]}]}]},{"pos":[25636,25678],"content":"Gets the global project collection object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the global project collection object.","pos":[0,42]}]},{"pos":[25690,25702],"content":"Thread safe.","needQuote":true,"needEscape":true,"nodes":[{"content":"Thread safe.","pos":[0,12]}]},{"pos":[25906,26102],"content":"Returns the global project collection object. This is a singleton project collection with no global properties or loggers. Toolset information is obtained from the configuration file and registry.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the global project collection object. This is a singleton project collection with no global properties or loggers. Toolset information is obtained from the configuration file and registry.","pos":[0,196],"nodes":[{"content":"Returns the global project collection object.","pos":[0,45]},{"content":"This is a singleton project collection with no global properties or loggers.","pos":[46,122]},{"content":"Toolset information is obtained from the configuration file and registry.","pos":[123,196]}]}]},{"pos":[26644,26725],"content":"Gets the read-only default global properties for all projects in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the read-only default global properties for all projects in this collection.","pos":[0,81]}]},{"pos":[26737,26936],"content":"Use <xref:Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty%2A> to add, set, and remove global properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use &lt;xref:Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty%2A&gt; and &lt;xref:Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty%2A&gt; to add, set, and remove global properties.","pos":[0,199],"source":"Use <xref:Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty%2A> to add, set, and remove global properties."}]},{"pos":[27158,27242],"content":"Returns the read-only default global properties for all projects in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the read-only default global properties for all projects in this collection.","pos":[0,84]}]},{"pos":[27757,27879],"content":"Gets or sets an object that provides host services to tasks during builds of projects contained in the project collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets an object that provides host services to tasks during builds of projects contained in the project collection.","pos":[0,122]}]},{"pos":[27891,27943],"content":"By default, returns HostServices, which may be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"By default, returns HostServices, which may be null.","pos":[0,52]}]},{"pos":[28122,28155],"content":"Returns the host services object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the host services object.","pos":[0,33]}]},{"pos":[28676,28805],"content":"Gets or sets a property that selects by default whether the targets and tasks of projects in the project collection can be built.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a property that selects by default whether the targets and tasks of projects in the project collection can be built.","pos":[0,129]}]},{"pos":[28817,29034],"content":"Can be used for security purposes. By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it. When IsBuildEnabled is false, the Build method on this project fails.","needQuote":true,"needEscape":true,"nodes":[{"content":"Can be used for security purposes. By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it. When IsBuildEnabled is false, the Build method on this project fails.","pos":[0,217],"nodes":[{"content":"Can be used for security purposes.","pos":[0,34]},{"content":"By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it.","pos":[35,147]},{"content":"When IsBuildEnabled is false, the Build method on this project fails.","pos":[148,217]}]}]},{"pos":[29157,29287],"content":"Gets or sets a property that selects by default whether the targets and tasks of projects in this project collection can be built.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a property that selects by default whether the targets and tasks of projects in this project collection can be built.","pos":[0,130]}]},{"pos":[29810,29870],"content":"Gets all the projects currently loaded into this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets all the projects currently loaded into this collection.","pos":[0,60]}]},{"pos":[29882,29966],"content":"Each project has a unique combination of path, global properties, and tools version.","needQuote":true,"needEscape":true,"nodes":[{"content":"Each project has a unique combination of path, global properties, and tools version.","pos":[0,84]}]},{"pos":[30214,30277],"content":"Returns all the projects currently loaded into this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns all the projects currently loaded into this collection.","pos":[0,63]}]},{"pos":[30837,31006],"content":"Evaluates a project from the source code in the given project file. The source code is evaluated with the global properties and tools version of this project collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Evaluates a project from the source code in the given project file. The source code is evaluated with the global properties and tools version of this project collection.","pos":[0,169],"nodes":[{"content":"Evaluates a project from the source code in the given project file.","pos":[0,67]},{"content":"The source code is evaluated with the global properties and tools version of this project collection.","pos":[68,169]}]}]},{"pos":[31018,31175],"content":"In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.","pos":[0,157]}]},{"pos":[31352,31381],"content":"The project file to evaluate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The project file to evaluate.","pos":[0,29]}]},{"pos":[31460,31685],"content":"If an existing project in the collection has already been evaluated from the given project file, the existing project is returned. Otherwise, a new project is created, evaluated, added to the project collection, and returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"If an existing project in the collection has already been evaluated from the given project file, the existing project is returned. Otherwise, a new project is created, evaluated, added to the project collection, and returned.","pos":[0,225],"nodes":[{"content":"If an existing project in the collection has already been evaluated from the given project file, the existing project is returned.","pos":[0,130]},{"content":"Otherwise, a new project is created, evaluated, added to the project collection, and returned.","pos":[131,225]}]}]},{"pos":[32265,32439],"content":"Evaluates a project from the source code read from the given XML reader. The source code is evaluated with the global properties and tools version of this project collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Evaluates a project from the source code read from the given XML reader. The source code is evaluated with the global properties and tools version of this project collection.","pos":[0,174],"nodes":[{"content":"Evaluates a project from the source code read from the given XML reader.","pos":[0,72]},{"content":"The source code is evaluated with the global properties and tools version of this project collection.","pos":[73,174]}]}]},{"pos":[32452,32758],"content":"The project is added to this project collection when either this project or the given project root is given the full path to a project file.       In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.","needQuote":false,"needEscape":true,"nodes":[{"content":"The project is added to this project collection when either this project or the given project root is given the full path to a project file.       In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.","pos":[0,304],"nodes":[{"content":"The project is added to this project collection when either this project or the given project root is given the full path to a project file.","pos":[0,140]},{"content":"In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.","pos":[147,304]}]}]},{"pos":[32959,33003],"content":"Xml reader to read project source code from.","needQuote":true,"needEscape":true,"nodes":[{"content":"Xml reader to read project source code from.","pos":[0,44]}]},{"pos":[33082,33106],"content":"Returns the new project.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the new project.","pos":[0,24]}]},{"pos":[33712,33898],"content":"Evaluates a project from the source code read from the given project file. The source code is evaluated with the global properties of this project collection and the given tools version.","needQuote":true,"needEscape":true,"nodes":[{"content":"Evaluates a project from the source code read from the given project file. The source code is evaluated with the global properties of this project collection and the given tools version.","pos":[0,186],"nodes":[{"content":"Evaluates a project from the source code read from the given project file.","pos":[0,74]},{"content":"The source code is evaluated with the global properties of this project collection and the given tools version.","pos":[75,186]}]}]},{"pos":[33910,34067],"content":"In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.","pos":[0,157]}]},{"pos":[34265,34294],"content":"The project file to evaluate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The project file to evaluate.","pos":[0,29]}]},{"pos":[34363,34401],"content":"The tools version to use. May be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The tools version to use. May be null.","pos":[0,38],"nodes":[{"content":"The tools version to use.","pos":[0,25]},{"content":"May be null.","pos":[26,38]}]}]},{"pos":[34480,34744],"content":"If an existing project in the collection has already been evaluated from the given project file, and with the given tools version, then the existing project is returned. Otherwise, a new project is created, evaluated, added to the project collection, and returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"If an existing project in the collection has already been evaluated from the given project file, and with the given tools version, then the existing project is returned. Otherwise, a new project is created, evaluated, added to the project collection, and returned.","pos":[0,264],"nodes":[{"content":"If an existing project in the collection has already been evaluated from the given project file, and with the given tools version, then the existing project is returned.","pos":[0,169]},{"content":"Otherwise, a new project is created, evaluated, added to the project collection, and returned.","pos":[170,264]}]}]},{"pos":[35373,35557],"content":"Evaluates a project from the source code read from the given XML reader. The source code is evaluated with the global properties of this project collection and the given tools version.","needQuote":true,"needEscape":true,"nodes":[{"content":"Evaluates a project from the source code read from the given XML reader. The source code is evaluated with the global properties of this project collection and the given tools version.","pos":[0,184],"nodes":[{"content":"Evaluates a project from the source code read from the given XML reader.","pos":[0,72]},{"content":"The source code is evaluated with the global properties of this project collection and the given tools version.","pos":[73,184]}]}]},{"pos":[35570,35876],"content":"The project is added to this project collection when either this project or the given project root is given the full path to a project file.       In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.","needQuote":false,"needEscape":true,"nodes":[{"content":"The project is added to this project collection when either this project or the given project root is given the full path to a project file.       In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.","pos":[0,304],"nodes":[{"content":"The project is added to this project collection when either this project or the given project root is given the full path to a project file.","pos":[0,140]},{"content":"In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.","pos":[147,304]}]}]},{"pos":[36098,36142],"content":"Xml reader to read project source code from.","needQuote":true,"needEscape":true,"nodes":[{"content":"Xml reader to read project source code from.","pos":[0,44]}]},{"pos":[36211,36249],"content":"The tools version to use. May be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The tools version to use. May be null.","pos":[0,38],"nodes":[{"content":"The tools version to use.","pos":[0,25]},{"content":"May be null.","pos":[26,38]}]}]},{"pos":[36328,36352],"content":"Returns the new project.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the new project.","pos":[0,24]}]},{"pos":[37175,37330],"content":"Evaluates a project from the source code read from the given project file. The source code is evaluated with the given global properties and tools version.","needQuote":true,"needEscape":true,"nodes":[{"content":"Evaluates a project from the source code read from the given project file. The source code is evaluated with the given global properties and tools version.","pos":[0,155],"nodes":[{"content":"Evaluates a project from the source code read from the given project file.","pos":[0,74]},{"content":"The source code is evaluated with the given global properties and tools version.","pos":[75,155]}]}]},{"pos":[37342,37499],"content":"In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.","pos":[0,157]}]},{"pos":[37769,37802],"content":"The project file to be evaluated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The project file to be evaluated.","pos":[0,33]}]},{"pos":[37929,38053],"content":"The global properties to use. May be null, in which case the containing project collection's global properties will be used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The global properties to use. May be null, in which case the containing project collection's global properties will be used.","pos":[0,124],"nodes":[{"content":"The global properties to use.","pos":[0,29]},{"content":"May be null, in which case the containing project collection's global properties will be used.","pos":[30,124]}]}]},{"pos":[38122,38153],"content":"The tools version. May be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The tools version. May be null.","pos":[0,31],"nodes":[{"content":"The tools version.","pos":[0,18]},{"content":"May be null.","pos":[19,31]}]}]},{"pos":[38232,38518],"content":"If an existing project in the collection has already been evaluated from the given project file, and with the given global properties and tools version, then the existing project is returned. Otherwise, a new project is created, evaluated, added to the project collection, and returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"If an existing project in the collection has already been evaluated from the given project file, and with the given global properties and tools version, then the existing project is returned. Otherwise, a new project is created, evaluated, added to the project collection, and returned.","pos":[0,286],"nodes":[{"content":"If an existing project in the collection has already been evaluated from the given project file, and with the given global properties and tools version, then the existing project is returned.","pos":[0,191]},{"content":"Otherwise, a new project is created, evaluated, added to the project collection, and returned.","pos":[192,286]}]}]},{"pos":[39364,39517],"content":"Evaluates a project from the source code read from the given XML reader. The source code is evaluated with the given global properties and tools version.","needQuote":true,"needEscape":true,"nodes":[{"content":"Evaluates a project from the source code read from the given XML reader. The source code is evaluated with the given global properties and tools version.","pos":[0,153],"nodes":[{"content":"Evaluates a project from the source code read from the given XML reader.","pos":[0,72]},{"content":"The source code is evaluated with the given global properties and tools version.","pos":[73,153]}]}]},{"pos":[39530,39836],"content":"The project is added to this project collection when either this project or the given project root is given the full path to a project file.       In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.","needQuote":false,"needEscape":true,"nodes":[{"content":"The project is added to this project collection when either this project or the given project root is given the full path to a project file.       In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.","pos":[0,304],"nodes":[{"content":"The project is added to this project collection when either this project or the given project root is given the full path to a project file.","pos":[0,140]},{"content":"In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.","pos":[147,304]}]}]},{"pos":[40130,40161],"content":"Xml reader to read project from","needQuote":true,"needEscape":true,"nodes":[{"content":"Xml reader to read project from","pos":[0,31]}]},{"pos":[40288,40411],"content":"The global properties to use. May be null in which case the containing project collection's global properties will be used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The global properties to use. May be null in which case the containing project collection's global properties will be used.","pos":[0,123],"nodes":[{"content":"The global properties to use.","pos":[0,29]},{"content":"May be null in which case the containing project collection's global properties will be used.","pos":[30,123]}]}]},{"pos":[40480,40511],"content":"The tools version. May be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The tools version. May be null.","pos":[0,31],"nodes":[{"content":"The tools version.","pos":[0,18]},{"content":"May be null.","pos":[19,31]}]}]},{"pos":[40590,40614],"content":"Returns the new project.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the new project.","pos":[0,24]}]},{"pos":[41099,41174],"content":"Gets all loggers that projects in this collection can use for their builds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets all loggers that projects in this collection can use for their builds.","pos":[0,75]}]},{"pos":[41186,41290],"content":"Loggers are added with the <xref:Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger%2A> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Loggers are added with the &lt;xref:Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger%2A&gt; method.","pos":[0,104],"source":"Loggers are added with the <xref:Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger%2A> method."}]},{"pos":[41529,41607],"content":"Returns all loggers that projects in this collection can use for their builds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns all loggers that projects in this collection can use for their builds.","pos":[0,78]}]},{"pos":[42158,42264],"content":"Gets or sets a switch that determines whether only critical events such as warnings and errors are logged.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a switch that determines whether only critical events such as warnings and errors are logged.","pos":[0,106]}]},{"pos":[42394,42480],"content":"If true, only critical events such as warnings and errors are logged; false otherwise.","needQuote":true,"needEscape":true,"nodes":[{"content":"If true, only critical events such as warnings and errors are logged; false otherwise.","pos":[0,86]}]},{"pos":[42997,43099],"content":"Event that is fired when a project is added to the ProjectRootElementCache of this project collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Event that is fired when a project is added to the ProjectRootElementCache of this project collection.","pos":[0,102]}]},{"pos":[43333,43345],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43792,43909],"content":"Raised when a <bpt id=\"p1\">&lt;xref href=\"Microsoft.Build.Evaluation.Project\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contained by this instance is directly changed.","needQuote":true,"needEscape":true,"source":"Raised when a <xref href=\"Microsoft.Build.Evaluation.Project\"></xref> contained by this instance is directly changed."},{"pos":[43921,44004],"content":"This event is NOT raised for direct project XML changes via the construction model.","needQuote":true,"needEscape":true,"nodes":[{"content":"This event is NOT raised for direct project XML changes via the construction model.","pos":[0,83]}]},{"pos":[44237,44249],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44746,44792],"content":"Raised when state is changed on this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raised when state is changed on this instance.","pos":[0,46]}]},{"pos":[44804,44864],"content":"This event is NOT raised for changes in individual projects.","needQuote":true,"needEscape":true,"nodes":[{"content":"This event is NOT raised for changes in individual projects.","pos":[0,60]}]},{"pos":[45127,45139],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45601,45722],"content":"Raised when a <bpt id=\"p1\">&lt;xref href=\"Microsoft.Build.Construction.ProjectRootElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contained by this instance is changed.","needQuote":true,"needEscape":true,"source":"Raised when a <xref href=\"Microsoft.Build.Construction.ProjectRootElement\"></xref> contained by this instance is changed."},{"pos":[45734,45849],"content":"This event is NOT raised for changes to global properties, or any other change that doesn't actually dirty the XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"This event is NOT raised for changes to global properties, or any other change that doesn't actually dirty the XML.","pos":[0,115]}]},{"pos":[46091,46103],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46893,47006],"content":"Adds the given remote loggers to the collection of remote loggers used for builds of projects in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the given remote loggers to the collection of remote loggers used for builds of projects in this collection.","pos":[0,113]}]},{"pos":[47330,47369],"content":"The remote loggers to add. May be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The remote loggers to add. May be null.","pos":[0,39],"nodes":[{"content":"The remote loggers to add.","pos":[0,26]},{"content":"May be null.","pos":[27,39]}]}]},{"pos":[47998,48096],"content":"Adds the given logger to the collection of loggers used for builds of projects in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the given logger to the collection of loggers used for builds of projects in this collection.","pos":[0,98]}]},{"pos":[48108,48172],"content":"If the logger object is already in the collection, does nothing.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the logger object is already in the collection, does nothing.","pos":[0,64]}]},{"pos":[48365,48383],"content":"The logger to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The logger to add.","pos":[0,18]}]},{"pos":[49125,49224],"content":"Adds the given loggers to the collection of loggers used for builds of projects in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the given loggers to the collection of loggers used for builds of projects in this collection.","pos":[0,99]}]},{"pos":[49236,49296],"content":"Skips any logger objects that are already in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Skips any logger objects that are already in the collection.","pos":[0,60]}]},{"pos":[49572,49609],"content":"The loggers to be added. May be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The loggers to be added. May be null.","pos":[0,37],"nodes":[{"content":"The loggers to be added.","pos":[0,24]},{"content":"May be null.","pos":[25,37]}]}]},{"pos":[50152,50201],"content":"Removes all toolsets from the project collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all toolsets from the project collection.","pos":[0,49]}]},{"pos":[50885,50953],"content":"Removes a global property from the set of default global properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a global property from the set of default global properties.","pos":[0,68]}]},{"pos":[51101,51151],"content":"The name of the default global property to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the default global property to remove.","pos":[0,50]}]},{"pos":[51210,51289],"content":"Returns true if the global property is present before removal; false otherwise.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns true if the global property is present before removal; false otherwise.","pos":[0,79]}]},{"pos":[51865,51911],"content":"Removes a toolset from the project collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a toolset from the project collection.","pos":[0,46]}]},{"pos":[52068,52094],"content":"The toolset to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The toolset to be removed.","pos":[0,26]}]},{"pos":[52153,52224],"content":"Returns true if the toolset is present before removal; false otherwise.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns true if the toolset is present before removal; false otherwise.","pos":[0,71]}]},{"pos":[52862,52931],"content":"Sets the value of a property in the default set of global properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of a property in the default set of global properties.","pos":[0,69]}]},{"pos":[52943,53038],"content":"If no matching property is found, the property is created and initialized with the given value.","needQuote":true,"needEscape":true,"nodes":[{"content":"If no matching property is found, the property is created and initialized with the given value.","pos":[0,95]}]},{"pos":[53197,53256],"content":"The name of the default global property to be added or set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the default global property to be added or set.","pos":[0,59]}]},{"pos":[53318,53363],"content":"The new value of the default global property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new value of the default global property.","pos":[0,45]}]},{"pos":[53889,54160],"content":"Gets or sets a flag the determines whether ReevaluateIfNecessary is temporarily disabled on projects in this collection. This is useful when the host expects to make a number of reads and writes to projects, and wants to temporarily sacrifice correctness for performance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a flag the determines whether ReevaluateIfNecessary is temporarily disabled on projects in this collection. This is useful when the host expects to make a number of reads and writes to projects, and wants to temporarily sacrifice correctness for performance.","pos":[0,271],"nodes":[{"content":"Gets or sets a flag the determines whether ReevaluateIfNecessary is temporarily disabled on projects in this collection.","pos":[0,120]},{"content":"This is useful when the host expects to make a number of reads and writes to projects, and wants to temporarily sacrifice correctness for performance.","pos":[121,271]}]}]},{"pos":[54283,54367],"content":"Returns a flag the determines whether ReevaluateIfNecessary is temporarily disabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a flag the determines whether ReevaluateIfNecessary is temporarily disabled.","pos":[0,84]}]},{"pos":[54900,54945],"content":"Gets the locations used to find the toolsets.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the locations used to find the toolsets.","pos":[0,45]}]},{"pos":[55153,55201],"content":"Returns the locations used to find the toolsets.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the locations used to find the toolsets.","pos":[0,48]}]},{"pos":[55696,55751],"content":"Gets the toolsets available to this project collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the toolsets available to this project collection.","pos":[0,55]}]},{"pos":[55993,56051],"content":"Returns the toolsets available to this project collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the toolsets available to this project collection.","pos":[0,58]}]},{"pos":[56734,56783],"content":"Attempts to remove a project from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to remove a project from the collection.","pos":[0,49]}]},{"pos":[57030,57072],"content":"The root element of the project to unload.","needQuote":true,"needEscape":true,"nodes":[{"content":"The root element of the project to unload.","pos":[0,42]}]},{"pos":[57131,57172],"content":"Returns true if the project was unloaded.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns true if the project was unloaded.","pos":[0,41]}]},{"pos":[57719,57802],"content":"Converts escaped characters in a string to MSBuild characters with special meaning.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts escaped characters in a string to MSBuild characters with special meaning.","pos":[0,83]}]},{"pos":[57814,57853],"content":"For example, \"%3b\" is converted to \";\".","needQuote":true,"needEscape":true,"nodes":[{"content":"For example, \"%3b\" is converted to \";\".","pos":[0,39]}]},{"pos":[58016,58043],"content":"The string to be converted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to be converted.","pos":[0,27]}]},{"pos":[58101,58130],"content":"Returns the converted string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the converted string.","pos":[0,29]}]},{"pos":[58666,58714],"content":"Removes all projects in this project collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all projects in this project collection.","pos":[0,48]}]},{"pos":[58726,58796],"content":"The host should call this method when it no longer needs the projects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The host should call this method when it no longer needs the projects.","pos":[0,70]}]},{"pos":[59549,59608],"content":"Removes a project root element from the project root cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a project root element from the project root cache.","pos":[0,59]}]},{"pos":[59620,59786],"content":"This method is useful for the case where the host knows that all projects using this root element have been removed, and that any unsaved changes should be discarded.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is useful for the case where the host knows that all projects using this root element have been removed, and that any unsaved changes should be discarded.","pos":[0,166]}]},{"pos":[60030,60065],"content":"The project root element to unload.","needQuote":true,"needEscape":true,"nodes":[{"content":"The project root element to unload.","pos":[0,35]}]},{"pos":[60262,60358],"content":"Thrown if the project root element to unload is still in use by a loaded project or its imports.","needQuote":true,"needEscape":true,"nodes":[{"content":"Thrown if the project root element to unload is still in use by a loaded project or its imports.","pos":[0,96]}]},{"pos":[60883,60937],"content":"Removes the given project from the project collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the given project from the project collection.","pos":[0,54]}]},{"pos":[60950,61123],"content":"The host should call this method when it no longer needs the project.       Throws InvalidOperationException if the given project is not present in the project collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"The host should call this method when it no longer needs the project.       Throws InvalidOperationException if the given project is not present in the project collection.","pos":[0,171],"nodes":[{"content":"The host should call this method when it no longer needs the project.","pos":[0,69]},{"content":"Throws InvalidOperationException if the given project is not present in the project collection.","pos":[76,171]}]}]},{"pos":[61320,61342],"content":"The project to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The project to remove.","pos":[0,22]}]},{"pos":[61898,61991],"content":"Removes all loggers from the collection of loggers used by project builds in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all loggers from the collection of loggers used by project builds in this collection.","pos":[0,93]}]},{"pos":[62564,62640],"content":"Gets the file version of the assembly file that contains the MSBuild engine.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the file version of the assembly file that contains the MSBuild engine.","pos":[0,76]}]},{"pos":[62653,62945],"content":"This is the Windows file version (specifically the value of the ProductVersion resource), which is not necessarily the assembly version. To obtain the assembly version, use Constants.AssemblyVersion.       See also the <xref:Microsoft.Build.Evaluation.ProjectCollection.ToolsetsVersion%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This is the Windows file version (specifically the value of the ProductVersion resource), which is not necessarily the assembly version. To obtain the assembly version, use Constants.AssemblyVersion.       See also the <xref:Microsoft.Build.Evaluation.ProjectCollection.ToolsetsVersion%2A>.","pos":[0,290],"nodes":[{"content":"This is the Windows file version (specifically the value of the ProductVersion resource), which is not necessarily the assembly version.","pos":[0,136]},{"content":"To obtain the assembly version, use Constants.AssemblyVersion.","pos":[137,199]},{"content":"See also the &lt;xref:Microsoft.Build.Evaluation.ProjectCollection.ToolsetsVersion%2A&gt;.","pos":[206,290],"source":"       See also the <xref:Microsoft.Build.Evaluation.ProjectCollection.ToolsetsVersion%2A>."}]}]},{"pos":[63067,63146],"content":"Returns the file version of the assembly file that contains the MSBuild engine.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the file version of the assembly file that contains the MSBuild engine.","pos":[0,79]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Evaluation.ProjectCollection\n  id: ProjectCollection\n  children:\n  - Microsoft.Build.Evaluation.ProjectCollection.#ctor\n  - Microsoft.Build.Evaluation.ProjectCollection.#ctor(Microsoft.Build.Evaluation.ToolsetDefinitionLocations)\n  - Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})\n  - Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},Microsoft.Build.Evaluation.ToolsetDefinitionLocations)\n  - Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},Microsoft.Build.Evaluation.ToolsetDefinitionLocations,System.Int32,System.Boolean)\n  - Microsoft.Build.Evaluation.ProjectCollection.AddToolset(Microsoft.Build.Evaluation.Toolset)\n  - Microsoft.Build.Evaluation.ProjectCollection.ContainsToolset(System.String)\n  - Microsoft.Build.Evaluation.ProjectCollection.Count\n  - Microsoft.Build.Evaluation.ProjectCollection.DefaultToolsVersion\n  - Microsoft.Build.Evaluation.ProjectCollection.DisableMarkDirty\n  - Microsoft.Build.Evaluation.ProjectCollection.Dispose\n  - Microsoft.Build.Evaluation.ProjectCollection.Dispose(System.Boolean)\n  - Microsoft.Build.Evaluation.ProjectCollection.Escape(System.String)\n  - Microsoft.Build.Evaluation.ProjectCollection.GetGlobalProperty(System.String)\n  - Microsoft.Build.Evaluation.ProjectCollection.GetLoadedProjects(System.String)\n  - Microsoft.Build.Evaluation.ProjectCollection.GetToolset(System.String)\n  - Microsoft.Build.Evaluation.ProjectCollection.GlobalProjectCollection\n  - Microsoft.Build.Evaluation.ProjectCollection.GlobalProperties\n  - Microsoft.Build.Evaluation.ProjectCollection.HostServices\n  - Microsoft.Build.Evaluation.ProjectCollection.IsBuildEnabled\n  - Microsoft.Build.Evaluation.ProjectCollection.LoadedProjects\n  - Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String)\n  - Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader)\n  - Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.String)\n  - Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.String)\n  - Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  - Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  - Microsoft.Build.Evaluation.ProjectCollection.Loggers\n  - Microsoft.Build.Evaluation.ProjectCollection.OnlyLogCriticalEvents\n  - Microsoft.Build.Evaluation.ProjectCollection.ProjectAdded\n  - Microsoft.Build.Evaluation.ProjectCollection.ProjectChanged\n  - Microsoft.Build.Evaluation.ProjectCollection.ProjectCollectionChanged\n  - Microsoft.Build.Evaluation.ProjectCollection.ProjectXmlChanged\n  - Microsoft.Build.Evaluation.ProjectCollection.RegisterForwardingLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  - Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger(Microsoft.Build.Framework.ILogger)\n  - Microsoft.Build.Evaluation.ProjectCollection.RegisterLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  - Microsoft.Build.Evaluation.ProjectCollection.RemoveAllToolsets\n  - Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty(System.String)\n  - Microsoft.Build.Evaluation.ProjectCollection.RemoveToolset(System.String)\n  - Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty(System.String,System.String)\n  - Microsoft.Build.Evaluation.ProjectCollection.SkipEvaluation\n  - Microsoft.Build.Evaluation.ProjectCollection.ToolsetLocations\n  - Microsoft.Build.Evaluation.ProjectCollection.Toolsets\n  - Microsoft.Build.Evaluation.ProjectCollection.TryUnloadProject(Microsoft.Build.Construction.ProjectRootElement)\n  - Microsoft.Build.Evaluation.ProjectCollection.Unescape(System.String)\n  - Microsoft.Build.Evaluation.ProjectCollection.UnloadAllProjects\n  - Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Construction.ProjectRootElement)\n  - Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Evaluation.Project)\n  - Microsoft.Build.Evaluation.ProjectCollection.UnregisterAllLoggers\n  - Microsoft.Build.Evaluation.ProjectCollection.Version\n  langs:\n  - csharp\n  name: ProjectCollection\n  nameWithType: ProjectCollection\n  fullName: Microsoft.Build.Evaluation.ProjectCollection\n  type: Class\n  summary: Encapsulates a set of related projects, their toolsets, a default set of global properties, and the loggers that should be used to build them. A global version of this class acts as the default project collection.\n  remarks: Multiple project collections can exist within an app domain. However, these must not build concurrently.\n  syntax:\n    content: 'public class ProjectCollection : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.#ctor\n  id: '#ctor'\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: ProjectCollection()\n  nameWithType: ProjectCollection.ProjectCollection()\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection()\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Creates a project collection with no global properties or loggers. The project collection toolset is initialized from the configuration file and registry.\n  syntax:\n    content: public ProjectCollection ();\n    parameters: []\n  overload: Microsoft.Build.Evaluation.ProjectCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.#ctor(Microsoft.Build.Evaluation.ToolsetDefinitionLocations)\n  id: '#ctor(Microsoft.Build.Evaluation.ToolsetDefinitionLocations)'\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: ProjectCollection(ToolsetDefinitionLocations)\n  nameWithType: ProjectCollection.ProjectCollection(ToolsetDefinitionLocations)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(ToolsetDefinitionLocations)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Creates a project collection with no global properties or loggers. The project collection toolset is initialized from toolsets in the given locations.\n  syntax:\n    content: public ProjectCollection (Microsoft.Build.Evaluation.ToolsetDefinitionLocations toolsetLocations);\n    parameters:\n    - id: toolsetLocations\n      type: Microsoft.Build.Evaluation.ToolsetDefinitionLocations\n      description: The locations from which to load toolsets.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})\n  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.String})'\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: ProjectCollection(IDictionary<String,String>)\n  nameWithType: ProjectCollection.ProjectCollection(IDictionary<String,String>)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(IDictionary<String,String>)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Instantiates a project collection with specified global properties, no loggers, and that reads toolset information from the configuration file and registry.\n  remarks: May throw InvalidToolsetDefinitionException.\n  syntax:\n    content: public ProjectCollection (System.Collections.Generic.IDictionary<string,string> globalProperties);\n    parameters:\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: The default global properties to use. May be null.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},Microsoft.Build.Evaluation.ToolsetDefinitionLocations)\n  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},Microsoft.Build.Evaluation.ToolsetDefinitionLocations)'\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: ProjectCollection(IDictionary<String,String>,IEnumerable<ILogger>,ToolsetDefinitionLocations)\n  nameWithType: ProjectCollection.ProjectCollection(IDictionary<String,String>,IEnumerable<ILogger>,ToolsetDefinitionLocations)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(IDictionary<String,String>,IEnumerable<ILogger>,ToolsetDefinitionLocations)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Instantiates a project collection with specified global properties and loggers and using the specified toolset locations.\n  remarks: May throw InvalidToolsetDefinitionException.\n  syntax:\n    content: public ProjectCollection (System.Collections.Generic.IDictionary<string,string> globalProperties, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, Microsoft.Build.Evaluation.ToolsetDefinitionLocations toolsetDefinitionLocations);\n    parameters:\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: The default global properties to use. May be null.\n    - id: loggers\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}\n      description: The loggers to register. May be null.\n    - id: toolsetDefinitionLocations\n      type: Microsoft.Build.Evaluation.ToolsetDefinitionLocations\n      description: The locations from which to load toolsets.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},Microsoft.Build.Evaluation.ToolsetDefinitionLocations,System.Int32,System.Boolean)\n  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},Microsoft.Build.Evaluation.ToolsetDefinitionLocations,System.Int32,System.Boolean)'\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: ProjectCollection(IDictionary<String,String>,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,ToolsetDefinitionLocations,Int32,Boolean)\n  nameWithType: ProjectCollection.ProjectCollection(IDictionary<String,String>,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,ToolsetDefinitionLocations,Int32,Boolean)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(IDictionary<String,String>,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,ToolsetDefinitionLocations,Int32,Boolean)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Creates a project collection with specified global properties, loggers, node count, and onlyLogCriticalEvents value. The project collection toolset is initialized from toolsets in the given locations.\n  remarks: Throws InvalidProjectFileException if any of the global properties are reserved.\n  syntax:\n    content: public ProjectCollection (System.Collections.Generic.IDictionary<string,string> globalProperties, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers, Microsoft.Build.Evaluation.ToolsetDefinitionLocations toolsetDefinitionLocations, int maxNodeCount, bool onlyLogCriticalEvents);\n    parameters:\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: The default global properties to use. May be null.\n    - id: loggers\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}\n      description: The loggers to register. May be null and specified to any build instead.\n    - id: remoteLoggers\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}\n      description: Any remote loggers to register. May be null and specified to any build instead.\n    - id: toolsetDefinitionLocations\n      type: Microsoft.Build.Evaluation.ToolsetDefinitionLocations\n      description: The locations from which to load toolsets.\n    - id: maxNodeCount\n      type: System.Int32\n      description: The maximum number of nodes to use for building.\n    - id: onlyLogCriticalEvents\n      type: System.Boolean\n      description: If set to true, only critical events will be logged.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.AddToolset(Microsoft.Build.Evaluation.Toolset)\n  id: AddToolset(Microsoft.Build.Evaluation.Toolset)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: AddToolset(Toolset)\n  nameWithType: ProjectCollection.AddToolset(Toolset)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.AddToolset(Toolset)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Adds a new toolset to the project collection. Replaces any existing toolset with the same tools version.\n  syntax:\n    content: public void AddToolset (Microsoft.Build.Evaluation.Toolset toolset);\n    parameters:\n    - id: toolset\n      type: Microsoft.Build.Evaluation.Toolset\n      description: The toolset to be added.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.AddToolset*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.ContainsToolset(System.String)\n  id: ContainsToolset(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: ContainsToolset(String)\n  nameWithType: ProjectCollection.ContainsToolset(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ContainsToolset(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Determines whether a toolset is defined for the given tools version.\n  syntax:\n    content: public bool ContainsToolset (string toolsVersion);\n    parameters:\n    - id: toolsVersion\n      type: System.String\n      description: The tools version to search for.\n    return:\n      type: System.Boolean\n      description: Returns true if there is a toolset defined for the given tools version; false otherwise.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.ContainsToolset*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Count\n  id: Count\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ProjectCollection.Count\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.Count\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the number of projects currently loaded into this collection.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Returns the number of projects currently loaded into this collection.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.DefaultToolsVersion\n  id: DefaultToolsVersion\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: DefaultToolsVersion\n  nameWithType: ProjectCollection.DefaultToolsVersion\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.DefaultToolsVersion\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the default tools version of this project collection.\n  remarks: \"This default value is obtained from the .exe.config file, from the system registry, or if neither is present, from the hard-coded tools version \\\"2.0\\\".  \\n  \\n The set method throws InvalidOperationException if a toolset with the provided tools version has not been defined.\"\n  syntax:\n    content: public string DefaultToolsVersion { get; set; }\n    return:\n      type: System.String\n      description: Returns the default tools version of this project collection, which is always defined.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.DefaultToolsVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.DisableMarkDirty\n  id: DisableMarkDirty\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: DisableMarkDirty\n  nameWithType: ProjectCollection.DisableMarkDirty\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.DisableMarkDirty\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets or sets a flag that determines whether <xref:Microsoft.Build.Evaluation.Project.MarkDirty*> is temporarily disabled on projects in this collection. This allows, for example, a global properties to be set without projects getting marked dirty for reevaluation as a consequence.\n  syntax:\n    content: public bool DisableMarkDirty { get; set; }\n    return:\n      type: System.Boolean\n      description: Returns a flag that determines whether <xref uid=\"langword_csharp_MarkDirty\" name=\"MarkDirty\" href=\"\"></xref> is temporarily disabled.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.DisableMarkDirty*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Dispose\n  id: Dispose\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: ProjectCollection.Dispose()\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.Dispose()\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Releases both managed and unmanaged resources.  Called when a host no longer needs the project collection.\n  remarks: In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject() before the ProjectCollection goes out of scope.”\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: Microsoft.Build.Evaluation.ProjectCollection.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: ProjectCollection.Dispose(Boolean)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Releases both managed and unmanaged resources.  Called when a host no longer needs the project collection.. Shuts down any logging services that the project collection owns and releases the logger thread.\n  remarks: Follows the garbage disposal guidelines of .NET.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: If true, releases both managed and unmanaged resources; otherwise releases only unmanaged resources..\n  overload: Microsoft.Build.Evaluation.ProjectCollection.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Escape(System.String)\n  id: Escape(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: Escape(String)\n  nameWithType: ProjectCollection.Escape(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.Escape(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Converts special characters in a string to MSBuild escape format.\n  remarks: For example, \"%3b\" for \";\". Only characters that are especially significant to MSBuild parsing are converted. Callers can use this method to make a string safe to be parsed by other methods that would otherwise expand it. Callers can also use this method to make a string safe to be written to a project file.\n  syntax:\n    content: public static string Escape (string unescapedString);\n    parameters:\n    - id: unescapedString\n      type: System.String\n      description: The string to be converted.\n    return:\n      type: System.String\n      description: Returns the converted string.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.Escape*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.GetGlobalProperty(System.String)\n  id: GetGlobalProperty(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: GetGlobalProperty(String)\n  nameWithType: ProjectCollection.GetGlobalProperty(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.GetGlobalProperty(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Get any global property on the project collection that has the specified name.\n  syntax:\n    content: public Microsoft.Build.Execution.ProjectPropertyInstance GetGlobalProperty (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the property to be retrieved.\n    return:\n      type: Microsoft.Build.Execution.ProjectPropertyInstance\n      description: Returns any global property on the project collection that has the specified name; otherwise returns null.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.GetGlobalProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.GetLoadedProjects(System.String)\n  id: GetLoadedProjects(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: GetLoadedProjects(String)\n  nameWithType: ProjectCollection.GetLoadedProjects(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.GetLoadedProjects(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets all projects whose project path matches the given path.\n  remarks: There may be more than one project with the given path because projects are also distinguished by global properties and/or tools version.\n  syntax:\n    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.Project> GetLoadedProjects (string fullPath);\n    parameters:\n    - id: fullPath\n      type: System.String\n      description: The path to a project file to be matched.\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.Project}\n      description: Returns all projects whose project path matches the given path.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.GetLoadedProjects*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.GetToolset(System.String)\n  id: GetToolset(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: GetToolset(String)\n  nameWithType: ProjectCollection.GetToolset(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.GetToolset(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Get the toolset with the specified tools version.\n  syntax:\n    content: public Microsoft.Build.Evaluation.Toolset GetToolset (string toolsVersion);\n    parameters:\n    - id: toolsVersion\n      type: System.String\n      description: The tools version to match.\n    return:\n      type: Microsoft.Build.Evaluation.Toolset\n      description: Returns the toolset with the specified tools version. Returns null if no toolset matching this tools version exists.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.GetToolset*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.GlobalProjectCollection\n  id: GlobalProjectCollection\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: GlobalProjectCollection\n  nameWithType: ProjectCollection.GlobalProjectCollection\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.GlobalProjectCollection\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the global project collection object.\n  remarks: Thread safe.\n  syntax:\n    content: public static Microsoft.Build.Evaluation.ProjectCollection GlobalProjectCollection { get; }\n    return:\n      type: Microsoft.Build.Evaluation.ProjectCollection\n      description: Returns the global project collection object. This is a singleton project collection with no global properties or loggers. Toolset information is obtained from the configuration file and registry.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.GlobalProjectCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.GlobalProperties\n  id: GlobalProperties\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: GlobalProperties\n  nameWithType: ProjectCollection.GlobalProperties\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.GlobalProperties\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the read-only default global properties for all projects in this collection.\n  remarks: Use <xref:Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty%2A> to add, set, and remove global properties.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,string> GlobalProperties { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Returns the read-only default global properties for all projects in this collection.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.GlobalProperties*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.HostServices\n  id: HostServices\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: HostServices\n  nameWithType: ProjectCollection.HostServices\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.HostServices\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets or sets an object that provides host services to tasks during builds of projects contained in the project collection.\n  remarks: By default, returns HostServices, which may be null.\n  syntax:\n    content: public Microsoft.Build.Execution.HostServices HostServices { get; set; }\n    return:\n      type: Microsoft.Build.Execution.HostServices\n      description: Returns the host services object.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.HostServices*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.IsBuildEnabled\n  id: IsBuildEnabled\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: IsBuildEnabled\n  nameWithType: ProjectCollection.IsBuildEnabled\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.IsBuildEnabled\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets or sets a property that selects by default whether the targets and tasks of projects in the project collection can be built.\n  remarks: Can be used for security purposes. By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it. When IsBuildEnabled is false, the Build method on this project fails.\n  syntax:\n    content: public bool IsBuildEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: Gets or sets a property that selects by default whether the targets and tasks of projects in this project collection can be built.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.IsBuildEnabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.LoadedProjects\n  id: LoadedProjects\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: LoadedProjects\n  nameWithType: ProjectCollection.LoadedProjects\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.LoadedProjects\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets all the projects currently loaded into this collection.\n  remarks: Each project has a unique combination of path, global properties, and tools version.\n  syntax:\n    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.Project> LoadedProjects { get; }\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.Project}\n      description: Returns all the projects currently loaded into this collection.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.LoadedProjects*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String)\n  id: LoadProject(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: LoadProject(String)\n  nameWithType: ProjectCollection.LoadProject(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Evaluates a project from the source code in the given project file. The source code is evaluated with the global properties and tools version of this project collection.\n  remarks: In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.\n  syntax:\n    content: public Microsoft.Build.Evaluation.Project LoadProject (string fileName);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The project file to evaluate.\n    return:\n      type: Microsoft.Build.Evaluation.Project\n      description: If an existing project in the collection has already been evaluated from the given project file, the existing project is returned. Otherwise, a new project is created, evaluated, added to the project collection, and returned.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.LoadProject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader)\n  id: LoadProject(System.Xml.XmlReader)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: LoadProject(XmlReader)\n  nameWithType: ProjectCollection.LoadProject(XmlReader)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(XmlReader)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Evaluates a project from the source code read from the given XML reader. The source code is evaluated with the global properties and tools version of this project collection.\n  remarks: \"The project is added to this project collection when either this project or the given project root is given the full path to a project file.  \\n  \\n In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.\"\n  syntax:\n    content: public Microsoft.Build.Evaluation.Project LoadProject (System.Xml.XmlReader xmlReader);\n    parameters:\n    - id: xmlReader\n      type: System.Xml.XmlReader\n      description: Xml reader to read project source code from.\n    return:\n      type: Microsoft.Build.Evaluation.Project\n      description: Returns the new project.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.LoadProject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.String)\n  id: LoadProject(System.String,System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: LoadProject(String,String)\n  nameWithType: ProjectCollection.LoadProject(String,String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Evaluates a project from the source code read from the given project file. The source code is evaluated with the global properties of this project collection and the given tools version.\n  remarks: In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.\n  syntax:\n    content: public Microsoft.Build.Evaluation.Project LoadProject (string fileName, string toolsVersion);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The project file to evaluate.\n    - id: toolsVersion\n      type: System.String\n      description: The tools version to use. May be null.\n    return:\n      type: Microsoft.Build.Evaluation.Project\n      description: If an existing project in the collection has already been evaluated from the given project file, and with the given tools version, then the existing project is returned. Otherwise, a new project is created, evaluated, added to the project collection, and returned.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.LoadProject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.String)\n  id: LoadProject(System.Xml.XmlReader,System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: LoadProject(XmlReader,String)\n  nameWithType: ProjectCollection.LoadProject(XmlReader,String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(XmlReader,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Evaluates a project from the source code read from the given XML reader. The source code is evaluated with the global properties of this project collection and the given tools version.\n  remarks: \"The project is added to this project collection when either this project or the given project root is given the full path to a project file.  \\n  \\n In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.\"\n  syntax:\n    content: public Microsoft.Build.Evaluation.Project LoadProject (System.Xml.XmlReader xmlReader, string toolsVersion);\n    parameters:\n    - id: xmlReader\n      type: System.Xml.XmlReader\n      description: Xml reader to read project source code from.\n    - id: toolsVersion\n      type: System.String\n      description: The tools version to use. May be null.\n    return:\n      type: Microsoft.Build.Evaluation.Project\n      description: Returns the new project.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.LoadProject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  id: LoadProject(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: LoadProject(String,IDictionary<String,String>,String)\n  nameWithType: ProjectCollection.LoadProject(String,IDictionary<String,String>,String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String,IDictionary<String,String>,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Evaluates a project from the source code read from the given project file. The source code is evaluated with the given global properties and tools version.\n  remarks: In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.\n  syntax:\n    content: public Microsoft.Build.Evaluation.Project LoadProject (string fileName, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The project file to be evaluated.\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: The global properties to use. May be null, in which case the containing project collection's global properties will be used.\n    - id: toolsVersion\n      type: System.String\n      description: The tools version. May be null.\n    return:\n      type: Microsoft.Build.Evaluation.Project\n      description: If an existing project in the collection has already been evaluated from the given project file, and with the given global properties and tools version, then the existing project is returned. Otherwise, a new project is created, evaluated, added to the project collection, and returned.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.LoadProject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  id: LoadProject(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: LoadProject(XmlReader,IDictionary<String,String>,String)\n  nameWithType: ProjectCollection.LoadProject(XmlReader,IDictionary<String,String>,String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(XmlReader,IDictionary<String,String>,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Evaluates a project from the source code read from the given XML reader. The source code is evaluated with the given global properties and tools version.\n  remarks: \"The project is added to this project collection when either this project or the given project root is given the full path to a project file.  \\n  \\n In the MSBuild versions that were delivered with .Net 4.5 and Visual Studio 12.0, you must call UnloadProject before the ProjectCollection goes out of scope.\"\n  syntax:\n    content: public Microsoft.Build.Evaluation.Project LoadProject (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion);\n    parameters:\n    - id: xmlReader\n      type: System.Xml.XmlReader\n      description: Xml reader to read project from\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: The global properties to use. May be null in which case the containing project collection's global properties will be used.\n    - id: toolsVersion\n      type: System.String\n      description: The tools version. May be null.\n    return:\n      type: Microsoft.Build.Evaluation.Project\n      description: Returns the new project.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.LoadProject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Loggers\n  id: Loggers\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: Loggers\n  nameWithType: ProjectCollection.Loggers\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.Loggers\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets all loggers that projects in this collection can use for their builds.\n  remarks: Loggers are added with the <xref:Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger%2A> method.\n  syntax:\n    content: public System.Collections.Generic.ICollection<Microsoft.Build.Framework.ILogger> Loggers { get; }\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Framework.ILogger}\n      description: Returns all loggers that projects in this collection can use for their builds.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.Loggers*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.OnlyLogCriticalEvents\n  id: OnlyLogCriticalEvents\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: OnlyLogCriticalEvents\n  nameWithType: ProjectCollection.OnlyLogCriticalEvents\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.OnlyLogCriticalEvents\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets or sets a switch that determines whether only critical events such as warnings and errors are logged.\n  syntax:\n    content: public bool OnlyLogCriticalEvents { get; set; }\n    return:\n      type: System.Boolean\n      description: If true, only critical events such as warnings and errors are logged; false otherwise.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.OnlyLogCriticalEvents*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.ProjectAdded\n  id: ProjectAdded\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: ProjectAdded\n  nameWithType: ProjectCollection.ProjectAdded\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectAdded\n  type: Event\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Event that is fired when a project is added to the ProjectRootElementCache of this project collection.\n  syntax:\n    content: public event Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedEventHandler ProjectAdded;\n    return:\n      type: Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.ProjectChanged\n  id: ProjectChanged\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: ProjectChanged\n  nameWithType: ProjectCollection.ProjectChanged\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectChanged\n  type: Event\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Raised when a <xref href=\"Microsoft.Build.Evaluation.Project\"></xref> contained by this instance is directly changed.\n  remarks: This event is NOT raised for direct project XML changes via the construction model.\n  syntax:\n    content: public event EventHandler<Microsoft.Build.Evaluation.ProjectChangedEventArgs> ProjectChanged;\n    return:\n      type: System.EventHandler{Microsoft.Build.Evaluation.ProjectChangedEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.ProjectCollectionChanged\n  id: ProjectCollectionChanged\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: ProjectCollectionChanged\n  nameWithType: ProjectCollection.ProjectCollectionChanged\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectCollectionChanged\n  type: Event\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Raised when state is changed on this instance.\n  remarks: This event is NOT raised for changes in individual projects.\n  syntax:\n    content: public event EventHandler<Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs> ProjectCollectionChanged;\n    return:\n      type: System.EventHandler{Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.ProjectXmlChanged\n  id: ProjectXmlChanged\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: ProjectXmlChanged\n  nameWithType: ProjectCollection.ProjectXmlChanged\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectXmlChanged\n  type: Event\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Raised when a <xref href=\"Microsoft.Build.Construction.ProjectRootElement\"></xref> contained by this instance is changed.\n  remarks: This event is NOT raised for changes to global properties, or any other change that doesn't actually dirty the XML.\n  syntax:\n    content: public event EventHandler<Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs> ProjectXmlChanged;\n    return:\n      type: System.EventHandler{Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RegisterForwardingLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  id: RegisterForwardingLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: RegisterForwardingLoggers(IEnumerable<ForwardingLoggerRecord>)\n  nameWithType: ProjectCollection.RegisterForwardingLoggers(IEnumerable<ForwardingLoggerRecord>)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.RegisterForwardingLoggers(IEnumerable<ForwardingLoggerRecord>)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Adds the given remote loggers to the collection of remote loggers used for builds of projects in this collection.\n  syntax:\n    content: public void RegisterForwardingLoggers (System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);\n    parameters:\n    - id: remoteLoggers\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}\n      description: The remote loggers to add. May be null.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.RegisterForwardingLoggers*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger(Microsoft.Build.Framework.ILogger)\n  id: RegisterLogger(Microsoft.Build.Framework.ILogger)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: RegisterLogger(ILogger)\n  nameWithType: ProjectCollection.RegisterLogger(ILogger)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger(ILogger)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Adds the given logger to the collection of loggers used for builds of projects in this collection.\n  remarks: If the logger object is already in the collection, does nothing.\n  syntax:\n    content: public void RegisterLogger (Microsoft.Build.Framework.ILogger logger);\n    parameters:\n    - id: logger\n      type: Microsoft.Build.Framework.ILogger\n      description: The logger to add.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RegisterLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  id: RegisterLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: RegisterLoggers(IEnumerable<ILogger>)\n  nameWithType: ProjectCollection.RegisterLoggers(IEnumerable<ILogger>)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.RegisterLoggers(IEnumerable<ILogger>)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Adds the given loggers to the collection of loggers used for builds of projects in this collection.\n  remarks: Skips any logger objects that are already in the collection.\n  syntax:\n    content: public void RegisterLoggers (System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);\n    parameters:\n    - id: loggers\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}\n      description: The loggers to be added. May be null.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.RegisterLoggers*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RemoveAllToolsets\n  id: RemoveAllToolsets\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: RemoveAllToolsets()\n  nameWithType: ProjectCollection.RemoveAllToolsets()\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.RemoveAllToolsets()\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Removes all toolsets from the project collection.\n  syntax:\n    content: public void RemoveAllToolsets ();\n    parameters: []\n  overload: Microsoft.Build.Evaluation.ProjectCollection.RemoveAllToolsets*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty(System.String)\n  id: RemoveGlobalProperty(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: RemoveGlobalProperty(String)\n  nameWithType: ProjectCollection.RemoveGlobalProperty(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Removes a global property from the set of default global properties.\n  syntax:\n    content: public bool RemoveGlobalProperty (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the default global property to remove.\n    return:\n      type: System.Boolean\n      description: Returns true if the global property is present before removal; false otherwise.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RemoveToolset(System.String)\n  id: RemoveToolset(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: RemoveToolset(String)\n  nameWithType: ProjectCollection.RemoveToolset(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.RemoveToolset(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Removes a toolset from the project collection.\n  syntax:\n    content: public bool RemoveToolset (string toolsVersion);\n    parameters:\n    - id: toolsVersion\n      type: System.String\n      description: The toolset to be removed.\n    return:\n      type: System.Boolean\n      description: Returns true if the toolset is present before removal; false otherwise.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.RemoveToolset*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty(System.String,System.String)\n  id: SetGlobalProperty(System.String,System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: SetGlobalProperty(String,String)\n  nameWithType: ProjectCollection.SetGlobalProperty(String,String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty(String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Sets the value of a property in the default set of global properties.\n  remarks: If no matching property is found, the property is created and initialized with the given value.\n  syntax:\n    content: public void SetGlobalProperty (string name, string value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the default global property to be added or set.\n    - id: value\n      type: System.String\n      description: The new value of the default global property.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.SkipEvaluation\n  id: SkipEvaluation\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: SkipEvaluation\n  nameWithType: ProjectCollection.SkipEvaluation\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.SkipEvaluation\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets or sets a flag the determines whether ReevaluateIfNecessary is temporarily disabled on projects in this collection. This is useful when the host expects to make a number of reads and writes to projects, and wants to temporarily sacrifice correctness for performance.\n  syntax:\n    content: public bool SkipEvaluation { get; set; }\n    return:\n      type: System.Boolean\n      description: Returns a flag the determines whether ReevaluateIfNecessary is temporarily disabled.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.SkipEvaluation*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.ToolsetLocations\n  id: ToolsetLocations\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: ToolsetLocations\n  nameWithType: ProjectCollection.ToolsetLocations\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ToolsetLocations\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the locations used to find the toolsets.\n  syntax:\n    content: public Microsoft.Build.Evaluation.ToolsetDefinitionLocations ToolsetLocations { get; }\n    return:\n      type: Microsoft.Build.Evaluation.ToolsetDefinitionLocations\n      description: Returns the locations used to find the toolsets.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.ToolsetLocations*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Toolsets\n  id: Toolsets\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: Toolsets\n  nameWithType: ProjectCollection.Toolsets\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.Toolsets\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the toolsets available to this project collection.\n  syntax:\n    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.Toolset> Toolsets { get; }\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.Toolset}\n      description: Returns the toolsets available to this project collection.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.Toolsets*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.TryUnloadProject(Microsoft.Build.Construction.ProjectRootElement)\n  id: TryUnloadProject(Microsoft.Build.Construction.ProjectRootElement)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: TryUnloadProject(ProjectRootElement)\n  nameWithType: ProjectCollection.TryUnloadProject(ProjectRootElement)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.TryUnloadProject(ProjectRootElement)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Attempts to remove a project from the collection.\n  syntax:\n    content: public bool TryUnloadProject (Microsoft.Build.Construction.ProjectRootElement projectRootElement);\n    parameters:\n    - id: projectRootElement\n      type: Microsoft.Build.Construction.ProjectRootElement\n      description: The root element of the project to unload.\n    return:\n      type: System.Boolean\n      description: Returns true if the project was unloaded.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.TryUnloadProject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Unescape(System.String)\n  id: Unescape(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: Unescape(String)\n  nameWithType: ProjectCollection.Unescape(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.Unescape(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Converts escaped characters in a string to MSBuild characters with special meaning.\n  remarks: For example, \"%3b\" is converted to \";\".\n  syntax:\n    content: public static string Unescape (string escapedString);\n    parameters:\n    - id: escapedString\n      type: System.String\n      description: The string to be converted.\n    return:\n      type: System.String\n      description: Returns the converted string.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.Unescape*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.UnloadAllProjects\n  id: UnloadAllProjects\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: UnloadAllProjects()\n  nameWithType: ProjectCollection.UnloadAllProjects()\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.UnloadAllProjects()\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Removes all projects in this project collection.\n  remarks: The host should call this method when it no longer needs the projects.\n  syntax:\n    content: public void UnloadAllProjects ();\n    parameters: []\n  overload: Microsoft.Build.Evaluation.ProjectCollection.UnloadAllProjects*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Construction.ProjectRootElement)\n  id: UnloadProject(Microsoft.Build.Construction.ProjectRootElement)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: UnloadProject(ProjectRootElement)\n  nameWithType: ProjectCollection.UnloadProject(ProjectRootElement)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(ProjectRootElement)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Removes a project root element from the project root cache.\n  remarks: This method is useful for the case where the host knows that all projects using this root element have been removed, and that any unsaved changes should be discarded.\n  syntax:\n    content: public void UnloadProject (Microsoft.Build.Construction.ProjectRootElement projectRootElement);\n    parameters:\n    - id: projectRootElement\n      type: Microsoft.Build.Construction.ProjectRootElement\n      description: The project root element to unload.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.UnloadProject*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Thrown if the project root element to unload is still in use by a loaded project or its imports.\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Evaluation.Project)\n  id: UnloadProject(Microsoft.Build.Evaluation.Project)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: UnloadProject(Project)\n  nameWithType: ProjectCollection.UnloadProject(Project)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Project)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Removes the given project from the project collection.\n  remarks: \"The host should call this method when it no longer needs the project.  \\n  \\n Throws InvalidOperationException if the given project is not present in the project collection.\"\n  syntax:\n    content: public void UnloadProject (Microsoft.Build.Evaluation.Project project);\n    parameters:\n    - id: project\n      type: Microsoft.Build.Evaluation.Project\n      description: The project to remove.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.UnloadProject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.UnregisterAllLoggers\n  id: UnregisterAllLoggers\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: UnregisterAllLoggers()\n  nameWithType: ProjectCollection.UnregisterAllLoggers()\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.UnregisterAllLoggers()\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Removes all loggers from the collection of loggers used by project builds in this collection.\n  syntax:\n    content: public void UnregisterAllLoggers ();\n    parameters: []\n  overload: Microsoft.Build.Evaluation.ProjectCollection.UnregisterAllLoggers*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Version\n  id: Version\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  langs:\n  - csharp\n  name: Version\n  nameWithType: ProjectCollection.Version\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.Version\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the file version of the assembly file that contains the MSBuild engine.\n  remarks: \"This is the Windows file version (specifically the value of the ProductVersion resource), which is not necessarily the assembly version. To obtain the assembly version, use Constants.AssemblyVersion.  \\n  \\n See also the <xref:Microsoft.Build.Evaluation.ProjectCollection.ToolsetsVersion%2A>.\"\n  syntax:\n    content: public static Version Version { get; }\n    return:\n      type: System.Version\n      description: Returns the file version of the assembly file that contains the MSBuild engine.\n  overload: Microsoft.Build.Evaluation.ProjectCollection.Version*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: Microsoft.Build.Evaluation.ProjectCollection.#ctor\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: ProjectCollection()\n  nameWithType: ProjectCollection.ProjectCollection()\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection()\n- uid: Microsoft.Build.Evaluation.ProjectCollection.#ctor(Microsoft.Build.Evaluation.ToolsetDefinitionLocations)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: ProjectCollection(ToolsetDefinitionLocations)\n  nameWithType: ProjectCollection.ProjectCollection(ToolsetDefinitionLocations)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(ToolsetDefinitionLocations)\n- uid: Microsoft.Build.Evaluation.ToolsetDefinitionLocations\n  parent: Microsoft.Build.Evaluation\n  isExternal: false\n  name: ToolsetDefinitionLocations\n  nameWithType: ToolsetDefinitionLocations\n  fullName: Microsoft.Build.Evaluation.ToolsetDefinitionLocations\n- uid: Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: ProjectCollection(IDictionary<String,String>)\n  nameWithType: ProjectCollection.ProjectCollection(IDictionary<String,String>)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(IDictionary<String,String>)\n- uid: System.Collections.Generic.IDictionary{System.String,System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<String,String>\n  nameWithType: IDictionary<String,String>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.String,System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},Microsoft.Build.Evaluation.ToolsetDefinitionLocations)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: ProjectCollection(IDictionary<String,String>,IEnumerable<ILogger>,ToolsetDefinitionLocations)\n  nameWithType: ProjectCollection.ProjectCollection(IDictionary<String,String>,IEnumerable<ILogger>,ToolsetDefinitionLocations)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(IDictionary<String,String>,IEnumerable<ILogger>,ToolsetDefinitionLocations)\n- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<ILogger>\n  nameWithType: IEnumerable<ILogger>\n  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<Microsoft.Build.Framework.ILogger>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Framework.ILogger\n    name: ILogger\n    nameWithType: ILogger\n    fullName: ILogger\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},Microsoft.Build.Evaluation.ToolsetDefinitionLocations,System.Int32,System.Boolean)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: ProjectCollection(IDictionary<String,String>,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,ToolsetDefinitionLocations,Int32,Boolean)\n  nameWithType: ProjectCollection.ProjectCollection(IDictionary<String,String>,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,ToolsetDefinitionLocations,Int32,Boolean)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(IDictionary<String,String>,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,ToolsetDefinitionLocations,Int32,Boolean)\n- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<ForwardingLoggerRecord>\n  nameWithType: IEnumerable<ForwardingLoggerRecord>\n  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Logging.ForwardingLoggerRecord\n    name: ForwardingLoggerRecord\n    nameWithType: ForwardingLoggerRecord\n    fullName: ForwardingLoggerRecord\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Build.Evaluation.ProjectCollection.AddToolset(Microsoft.Build.Evaluation.Toolset)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: AddToolset(Toolset)\n  nameWithType: ProjectCollection.AddToolset(Toolset)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.AddToolset(Toolset)\n- uid: Microsoft.Build.Evaluation.Toolset\n  parent: Microsoft.Build.Evaluation\n  isExternal: false\n  name: Toolset\n  nameWithType: Toolset\n  fullName: Microsoft.Build.Evaluation.Toolset\n- uid: Microsoft.Build.Evaluation.ProjectCollection.ContainsToolset(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: ContainsToolset(String)\n  nameWithType: ProjectCollection.ContainsToolset(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ContainsToolset(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Count\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: Count\n  nameWithType: ProjectCollection.Count\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.Count\n- uid: Microsoft.Build.Evaluation.ProjectCollection.DefaultToolsVersion\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: DefaultToolsVersion\n  nameWithType: ProjectCollection.DefaultToolsVersion\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.DefaultToolsVersion\n- uid: Microsoft.Build.Evaluation.ProjectCollection.DisableMarkDirty\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: DisableMarkDirty\n  nameWithType: ProjectCollection.DisableMarkDirty\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.DisableMarkDirty\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Dispose\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: Dispose()\n  nameWithType: ProjectCollection.Dispose()\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.Dispose()\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Dispose(System.Boolean)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ProjectCollection.Dispose(Boolean)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.Dispose(Boolean)\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Escape(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: Escape(String)\n  nameWithType: ProjectCollection.Escape(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.Escape(String)\n- uid: Microsoft.Build.Evaluation.ProjectCollection.GetGlobalProperty(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: GetGlobalProperty(String)\n  nameWithType: ProjectCollection.GetGlobalProperty(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.GetGlobalProperty(String)\n- uid: Microsoft.Build.Execution.ProjectPropertyInstance\n  parent: Microsoft.Build.Execution\n  isExternal: false\n  name: ProjectPropertyInstance\n  nameWithType: ProjectPropertyInstance\n  fullName: Microsoft.Build.Execution.ProjectPropertyInstance\n- uid: Microsoft.Build.Evaluation.ProjectCollection.GetLoadedProjects(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: GetLoadedProjects(String)\n  nameWithType: ProjectCollection.GetLoadedProjects(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.GetLoadedProjects(String)\n- uid: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.Project}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<Project>\n  nameWithType: ICollection<Project>\n  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.Project>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<Microsoft.Build.Evaluation.Project>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Evaluation.Project\n    name: Project\n    nameWithType: Project\n    fullName: Project\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.ProjectCollection.GetToolset(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: GetToolset(String)\n  nameWithType: ProjectCollection.GetToolset(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.GetToolset(String)\n- uid: Microsoft.Build.Evaluation.ProjectCollection.GlobalProjectCollection\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: GlobalProjectCollection\n  nameWithType: ProjectCollection.GlobalProjectCollection\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.GlobalProjectCollection\n- uid: Microsoft.Build.Evaluation.ProjectCollection\n  parent: Microsoft.Build.Evaluation\n  isExternal: false\n  name: ProjectCollection\n  nameWithType: ProjectCollection\n  fullName: Microsoft.Build.Evaluation.ProjectCollection\n- uid: Microsoft.Build.Evaluation.ProjectCollection.GlobalProperties\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: GlobalProperties\n  nameWithType: ProjectCollection.GlobalProperties\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.GlobalProperties\n- uid: Microsoft.Build.Evaluation.ProjectCollection.HostServices\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: HostServices\n  nameWithType: ProjectCollection.HostServices\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.HostServices\n- uid: Microsoft.Build.Execution.HostServices\n  parent: Microsoft.Build.Execution\n  isExternal: false\n  name: HostServices\n  nameWithType: HostServices\n  fullName: Microsoft.Build.Execution.HostServices\n- uid: Microsoft.Build.Evaluation.ProjectCollection.IsBuildEnabled\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: IsBuildEnabled\n  nameWithType: ProjectCollection.IsBuildEnabled\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.IsBuildEnabled\n- uid: Microsoft.Build.Evaluation.ProjectCollection.LoadedProjects\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: LoadedProjects\n  nameWithType: ProjectCollection.LoadedProjects\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.LoadedProjects\n- uid: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: LoadProject(String)\n  nameWithType: ProjectCollection.LoadProject(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String)\n- uid: Microsoft.Build.Evaluation.Project\n  parent: Microsoft.Build.Evaluation\n  isExternal: false\n  name: Project\n  nameWithType: Project\n  fullName: Microsoft.Build.Evaluation.Project\n- uid: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: LoadProject(XmlReader)\n  nameWithType: ProjectCollection.LoadProject(XmlReader)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(XmlReader)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: LoadProject(String,String)\n  nameWithType: ProjectCollection.LoadProject(String,String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String,String)\n- uid: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: LoadProject(XmlReader,String)\n  nameWithType: ProjectCollection.LoadProject(XmlReader,String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(XmlReader,String)\n- uid: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: LoadProject(String,IDictionary<String,String>,String)\n  nameWithType: ProjectCollection.LoadProject(String,IDictionary<String,String>,String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String,IDictionary<String,String>,String)\n- uid: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: LoadProject(XmlReader,IDictionary<String,String>,String)\n  nameWithType: ProjectCollection.LoadProject(XmlReader,IDictionary<String,String>,String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.LoadProject(XmlReader,IDictionary<String,String>,String)\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Loggers\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: Loggers\n  nameWithType: ProjectCollection.Loggers\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.Loggers\n- uid: System.Collections.Generic.ICollection{Microsoft.Build.Framework.ILogger}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<ILogger>\n  nameWithType: ICollection<ILogger>\n  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Framework.ILogger>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<Microsoft.Build.Framework.ILogger>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Framework.ILogger\n    name: ILogger\n    nameWithType: ILogger\n    fullName: ILogger\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.ProjectCollection.OnlyLogCriticalEvents\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: OnlyLogCriticalEvents\n  nameWithType: ProjectCollection.OnlyLogCriticalEvents\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.OnlyLogCriticalEvents\n- uid: Microsoft.Build.Evaluation.ProjectCollection.ProjectAdded\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: ProjectAdded\n  nameWithType: ProjectCollection.ProjectAdded\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectAdded\n- uid: Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedEventHandler\n  parent: Microsoft.Build.Evaluation\n  isExternal: false\n  name: ProjectCollection+ProjectAddedEventHandler\n  nameWithType: ProjectCollection+ProjectAddedEventHandler\n  fullName: Microsoft.Build.Evaluation.ProjectCollection+ProjectAddedEventHandler\n- uid: Microsoft.Build.Evaluation.ProjectCollection.ProjectChanged\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: ProjectChanged\n  nameWithType: ProjectCollection.ProjectChanged\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectChanged\n- uid: System.EventHandler{Microsoft.Build.Evaluation.ProjectChangedEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<ProjectChangedEventArgs>\n  nameWithType: EventHandler<ProjectChangedEventArgs>\n  fullName: System.EventHandler<Microsoft.Build.Evaluation.ProjectChangedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<Microsoft.Build.Evaluation.ProjectChangedEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Evaluation.ProjectChangedEventArgs\n    name: ProjectChangedEventArgs\n    nameWithType: ProjectChangedEventArgs\n    fullName: ProjectChangedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.ProjectCollection.ProjectCollectionChanged\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: ProjectCollectionChanged\n  nameWithType: ProjectCollection.ProjectCollectionChanged\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectCollectionChanged\n- uid: System.EventHandler{Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<ProjectCollectionChangedEventArgs>\n  nameWithType: EventHandler<ProjectCollectionChangedEventArgs>\n  fullName: System.EventHandler<Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs\n    name: ProjectCollectionChangedEventArgs\n    nameWithType: ProjectCollectionChangedEventArgs\n    fullName: ProjectCollectionChangedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.ProjectCollection.ProjectXmlChanged\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: ProjectXmlChanged\n  nameWithType: ProjectCollection.ProjectXmlChanged\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ProjectXmlChanged\n- uid: System.EventHandler{Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<ProjectXmlChangedEventArgs>\n  nameWithType: EventHandler<ProjectXmlChangedEventArgs>\n  fullName: System.EventHandler<Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs\n    name: ProjectXmlChangedEventArgs\n    nameWithType: ProjectXmlChangedEventArgs\n    fullName: ProjectXmlChangedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RegisterForwardingLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: RegisterForwardingLoggers(IEnumerable<ForwardingLoggerRecord>)\n  nameWithType: ProjectCollection.RegisterForwardingLoggers(IEnumerable<ForwardingLoggerRecord>)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.RegisterForwardingLoggers(IEnumerable<ForwardingLoggerRecord>)\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger(Microsoft.Build.Framework.ILogger)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: RegisterLogger(ILogger)\n  nameWithType: ProjectCollection.RegisterLogger(ILogger)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger(ILogger)\n- uid: Microsoft.Build.Framework.ILogger\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ILogger\n  nameWithType: ILogger\n  fullName: Microsoft.Build.Framework.ILogger\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RegisterLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: RegisterLoggers(IEnumerable<ILogger>)\n  nameWithType: ProjectCollection.RegisterLoggers(IEnumerable<ILogger>)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.RegisterLoggers(IEnumerable<ILogger>)\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RemoveAllToolsets\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: RemoveAllToolsets()\n  nameWithType: ProjectCollection.RemoveAllToolsets()\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.RemoveAllToolsets()\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: RemoveGlobalProperty(String)\n  nameWithType: ProjectCollection.RemoveGlobalProperty(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty(String)\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RemoveToolset(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: RemoveToolset(String)\n  nameWithType: ProjectCollection.RemoveToolset(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.RemoveToolset(String)\n- uid: Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty(System.String,System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: SetGlobalProperty(String,String)\n  nameWithType: ProjectCollection.SetGlobalProperty(String,String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty(String,String)\n- uid: Microsoft.Build.Evaluation.ProjectCollection.SkipEvaluation\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: SkipEvaluation\n  nameWithType: ProjectCollection.SkipEvaluation\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.SkipEvaluation\n- uid: Microsoft.Build.Evaluation.ProjectCollection.ToolsetLocations\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: ToolsetLocations\n  nameWithType: ProjectCollection.ToolsetLocations\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.ToolsetLocations\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Toolsets\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: Toolsets\n  nameWithType: ProjectCollection.Toolsets\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.Toolsets\n- uid: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.Toolset}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<Toolset>\n  nameWithType: ICollection<Toolset>\n  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.Toolset>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<Microsoft.Build.Evaluation.Toolset>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Evaluation.Toolset\n    name: Toolset\n    nameWithType: Toolset\n    fullName: Toolset\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.ProjectCollection.TryUnloadProject(Microsoft.Build.Construction.ProjectRootElement)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: TryUnloadProject(ProjectRootElement)\n  nameWithType: ProjectCollection.TryUnloadProject(ProjectRootElement)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.TryUnloadProject(ProjectRootElement)\n- uid: Microsoft.Build.Construction.ProjectRootElement\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ProjectRootElement\n  nameWithType: ProjectRootElement\n  fullName: Microsoft.Build.Construction.ProjectRootElement\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Unescape(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: Unescape(String)\n  nameWithType: ProjectCollection.Unescape(String)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.Unescape(String)\n- uid: Microsoft.Build.Evaluation.ProjectCollection.UnloadAllProjects\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: UnloadAllProjects()\n  nameWithType: ProjectCollection.UnloadAllProjects()\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.UnloadAllProjects()\n- uid: Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Construction.ProjectRootElement)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: UnloadProject(ProjectRootElement)\n  nameWithType: ProjectCollection.UnloadProject(ProjectRootElement)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(ProjectRootElement)\n- uid: Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Evaluation.Project)\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: UnloadProject(Project)\n  nameWithType: ProjectCollection.UnloadProject(Project)\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Project)\n- uid: Microsoft.Build.Evaluation.ProjectCollection.UnregisterAllLoggers\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: UnregisterAllLoggers()\n  nameWithType: ProjectCollection.UnregisterAllLoggers()\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.UnregisterAllLoggers()\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Version\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: Version\n  nameWithType: ProjectCollection.Version\n  fullName: Microsoft.Build.Evaluation.ProjectCollection.Version\n- uid: System.Version\n  parent: System\n  isExternal: true\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: Microsoft.Build.Evaluation.ProjectCollection.#ctor*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: ProjectCollection\n  nameWithType: ProjectCollection.ProjectCollection\n- uid: Microsoft.Build.Evaluation.ProjectCollection.AddToolset*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: AddToolset\n  nameWithType: ProjectCollection.AddToolset\n- uid: Microsoft.Build.Evaluation.ProjectCollection.ContainsToolset*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: ContainsToolset\n  nameWithType: ProjectCollection.ContainsToolset\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Count*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: Count\n  nameWithType: ProjectCollection.Count\n- uid: Microsoft.Build.Evaluation.ProjectCollection.DefaultToolsVersion*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: DefaultToolsVersion\n  nameWithType: ProjectCollection.DefaultToolsVersion\n- uid: Microsoft.Build.Evaluation.ProjectCollection.DisableMarkDirty*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: DisableMarkDirty\n  nameWithType: ProjectCollection.DisableMarkDirty\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Dispose*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: Dispose\n  nameWithType: ProjectCollection.Dispose\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Escape*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: Escape\n  nameWithType: ProjectCollection.Escape\n- uid: Microsoft.Build.Evaluation.ProjectCollection.GetGlobalProperty*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: GetGlobalProperty\n  nameWithType: ProjectCollection.GetGlobalProperty\n- uid: Microsoft.Build.Evaluation.ProjectCollection.GetLoadedProjects*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: GetLoadedProjects\n  nameWithType: ProjectCollection.GetLoadedProjects\n- uid: Microsoft.Build.Evaluation.ProjectCollection.GetToolset*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: GetToolset\n  nameWithType: ProjectCollection.GetToolset\n- uid: Microsoft.Build.Evaluation.ProjectCollection.GlobalProjectCollection*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: GlobalProjectCollection\n  nameWithType: ProjectCollection.GlobalProjectCollection\n- uid: Microsoft.Build.Evaluation.ProjectCollection.GlobalProperties*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: GlobalProperties\n  nameWithType: ProjectCollection.GlobalProperties\n- uid: Microsoft.Build.Evaluation.ProjectCollection.HostServices*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: HostServices\n  nameWithType: ProjectCollection.HostServices\n- uid: Microsoft.Build.Evaluation.ProjectCollection.IsBuildEnabled*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: IsBuildEnabled\n  nameWithType: ProjectCollection.IsBuildEnabled\n- uid: Microsoft.Build.Evaluation.ProjectCollection.LoadedProjects*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: LoadedProjects\n  nameWithType: ProjectCollection.LoadedProjects\n- uid: Microsoft.Build.Evaluation.ProjectCollection.LoadProject*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: LoadProject\n  nameWithType: ProjectCollection.LoadProject\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Loggers*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: Loggers\n  nameWithType: ProjectCollection.Loggers\n- uid: Microsoft.Build.Evaluation.ProjectCollection.OnlyLogCriticalEvents*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: OnlyLogCriticalEvents\n  nameWithType: ProjectCollection.OnlyLogCriticalEvents\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RegisterForwardingLoggers*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: RegisterForwardingLoggers\n  nameWithType: ProjectCollection.RegisterForwardingLoggers\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: RegisterLogger\n  nameWithType: ProjectCollection.RegisterLogger\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RegisterLoggers*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: RegisterLoggers\n  nameWithType: ProjectCollection.RegisterLoggers\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RemoveAllToolsets*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: RemoveAllToolsets\n  nameWithType: ProjectCollection.RemoveAllToolsets\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: RemoveGlobalProperty\n  nameWithType: ProjectCollection.RemoveGlobalProperty\n- uid: Microsoft.Build.Evaluation.ProjectCollection.RemoveToolset*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: RemoveToolset\n  nameWithType: ProjectCollection.RemoveToolset\n- uid: Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: SetGlobalProperty\n  nameWithType: ProjectCollection.SetGlobalProperty\n- uid: Microsoft.Build.Evaluation.ProjectCollection.SkipEvaluation*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: SkipEvaluation\n  nameWithType: ProjectCollection.SkipEvaluation\n- uid: Microsoft.Build.Evaluation.ProjectCollection.ToolsetLocations*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: ToolsetLocations\n  nameWithType: ProjectCollection.ToolsetLocations\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Toolsets*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: Toolsets\n  nameWithType: ProjectCollection.Toolsets\n- uid: Microsoft.Build.Evaluation.ProjectCollection.TryUnloadProject*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: TryUnloadProject\n  nameWithType: ProjectCollection.TryUnloadProject\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Unescape*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: Unescape\n  nameWithType: ProjectCollection.Unescape\n- uid: Microsoft.Build.Evaluation.ProjectCollection.UnloadAllProjects*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: UnloadAllProjects\n  nameWithType: ProjectCollection.UnloadAllProjects\n- uid: Microsoft.Build.Evaluation.ProjectCollection.UnloadProject*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: UnloadProject\n  nameWithType: ProjectCollection.UnloadProject\n- uid: Microsoft.Build.Evaluation.ProjectCollection.UnregisterAllLoggers*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: UnregisterAllLoggers\n  nameWithType: ProjectCollection.UnregisterAllLoggers\n- uid: Microsoft.Build.Evaluation.ProjectCollection.Version*\n  parent: Microsoft.Build.Evaluation.ProjectCollection\n  isExternal: false\n  name: Version\n  nameWithType: ProjectCollection.Version\n"}