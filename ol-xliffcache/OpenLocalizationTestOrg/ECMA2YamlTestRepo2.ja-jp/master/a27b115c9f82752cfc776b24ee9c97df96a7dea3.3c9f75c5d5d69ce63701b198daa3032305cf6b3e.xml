{"nodes":[{"pos":[525,582],"content":"Represents a word or short phrase that can be recognized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a word or short phrase that can be recognized.","pos":[0,57]}]},{"pos":[595,1452],"content":"Using the members of the SrgsToken class, you can specify three forms of a word: the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> form, the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> form, and a custom <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> for the word.       If multiple words are stored in a single SrgsToken object, each is treated as a different token internally and in the result.       This class represents the `token` element defined by the World Wide Web Consortium (W3C)  [Speech Recognition Grammar Specification (SRGS) Version 1.0.](http://go.microsoft.com/fwlink/?LinkId=201761). For information about the SRGS `token` element and details about its support by System.Speech, see [token Element](http://msdn.microsoft.com/en-us/3a9e8d64-7bd4-4188-a6f4-dbf28ea71632).","needQuote":false,"needEscape":true,"nodes":[{"content":"Using the members of the SrgsToken class, you can specify three forms of a word: the &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A&gt; form, the &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A&gt; form, and a custom &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A&gt; for the word.","pos":[0,328],"source":"Using the members of the SrgsToken class, you can specify three forms of a word: the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> form, the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> form, and a custom <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> for the word."},{"content":"If multiple words are stored in a single SrgsToken object, each is treated as a different token internally and in the result.","pos":[335,460]},{"content":"This class represents the <ph id=\"ph1\">`token`</ph> element defined by the World Wide Web Consortium (W3C)  <bpt id=\"p1\">[</bpt>Speech Recognition Grammar Specification (SRGS) Version 1.0.<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=201761)</ept>.","pos":[467,667],"source":"       This class represents the `token` element defined by the World Wide Web Consortium (W3C)  [Speech Recognition Grammar Specification (SRGS) Version 1.0.](http://go.microsoft.com/fwlink/?LinkId=201761)."},{"content":"For information about the SRGS <ph id=\"ph1\">`token`</ph> element and details about its support by System.Speech, see <bpt id=\"p1\">[</bpt>token Element<ept id=\"p1\">](http://msdn.microsoft.com/en-us/3a9e8d64-7bd4-4188-a6f4-dbf28ea71632)</ept>.","pos":[668,853],"source":" For information about the SRGS `token` element and details about its support by System.Speech, see [token Element](http://msdn.microsoft.com/en-us/3a9e8d64-7bd4-4188-a6f4-dbf28ea71632)."}]},{"pos":[2480,2629],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and specifies the text to be recognized.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsToken\"></xref> class and specifies the text to be recognized."},{"pos":[2641,2845],"content":"Creates a &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken&gt; object whose &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A&gt; property is set initially to the value of the <ph id=\"ph1\">`text`</ph> parameter.","needQuote":true,"needEscape":true,"source":"Creates a <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> object whose <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> property is set initially to the value of the `text` parameter."},{"pos":[2977,3081],"content":"The text of the new <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class instance.","needQuote":true,"needEscape":true,"source":"The text of the new <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsToken\"></xref> class instance."},{"pos":[3265,3347],"content":"<ph id=\"ph1\">&lt;code&gt;text&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>text</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[3462,3489],"content":"<ph id=\"ph1\">&lt;code&gt;text&lt;/code&gt;</ph> is empty.","needQuote":true,"needEscape":true,"source":"<code>text</code> is empty."},{"pos":[3897,3952],"content":"Gets or sets the display form of the text to be spoken.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the display form of the text to be spoken.","pos":[0,55]}]},{"pos":[3964,4435],"content":"Although they typically represent the same value, the Display form may be different than the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> form for a word or phrase in a <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>. For example, the display form may be an acronym, such as “USA”, while the text that will be spoken, and to which the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> applies, is “United States of America”.","needQuote":true,"needEscape":true,"nodes":[{"content":"Although they typically represent the same value, the Display form may be different than the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> form for a word or phrase in a <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>. For example, the display form may be an acronym, such as “USA”, while the text that will be spoken, and to which the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> applies, is “United States of America”.","pos":[0,471],"nodes":[{"content":"Although they typically represent the same value, the Display form may be different than the &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A&gt; form for a word or phrase in a &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken&gt;.","pos":[0,242],"source":"Although they typically represent the same value, the Display form may be different than the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> form for a word or phrase in a <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>."},{"content":"For example, the display form may be an acronym, such as “USA”, while the text that will be spoken, and to which the &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A&gt; applies, is “United States of America”.","pos":[243,471],"source":" For example, the display form may be an acronym, such as “USA”, while the text that will be spoken, and to which the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> applies, is “United States of America”."}]}]},{"pos":[4552,4608],"content":"A representation of the token as it should be displayed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A representation of the token as it should be displayed.","pos":[0,56]}]},{"pos":[4794,4892],"content":"An attempt is made to set Display to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt is made to set Display to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5007,5063],"content":"An attempt is made to assign an empty string to Display.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt is made to assign an empty string to Display.","pos":[0,56]}]},{"pos":[5501,5570],"content":"Gets or sets the string that defines the pronunciation for the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the string that defines the pronunciation for the token.","pos":[0,69]}]},{"pos":[5583,7190],"content":"Phones are letters or symbols that describe the sounds of speech. System.Speech supports three phonetic alphabets for specifying custom pronunciations: the Universal Phone Set (UPS), the Speech API (SAPI) Phone set, and the International Phonetic Alphabet (IPA). The phones specified in Pronunciation must match the phonetic alphabet specified in <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A>. See [Lexicons and Phonetic Alphabets](http://msdn.microsoft.com/en-us/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) for more information.       The phones specified in Pronunciation indicate how the contents of <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> should be pronounced for successful recognition.  The speech recognition engine uses the pronunciation specified in Pronunciation to match speech input and returns the string contained by <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> in the recognition result.       If the phones are not space-delimited or the specified string contains an unrecognized phone, the recognition engine does not recognize the specified pronunciation as a valid pronunciation of the word contained by <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.       Pronunciations specified in Pronunciation take precedence over pronunciations specified in lexicons associated with a grammar or a recognition engine. Also, the pronunciation in the Pronunciation property applies only to the single occurrence of the word or phrase contained by <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Phones are letters or symbols that describe the sounds of speech.","pos":[0,65]},{"content":"System.Speech supports three phonetic alphabets for specifying custom pronunciations: the Universal Phone Set (UPS), the Speech API (SAPI) Phone set, and the International Phonetic Alphabet (IPA).","pos":[66,262]},{"content":"The phones specified in Pronunciation must match the phonetic alphabet specified in &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A&gt;.","pos":[263,425],"source":" The phones specified in Pronunciation must match the phonetic alphabet specified in <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A>."},{"content":"See <bpt id=\"p1\">[</bpt>Lexicons and Phonetic Alphabets<ept id=\"p1\">](http://msdn.microsoft.com/en-us/435e3c6f-6834-4e5a-b0f6-c17b2275dc51)</ept> for more information.","pos":[426,555],"source":" See [Lexicons and Phonetic Alphabets](http://msdn.microsoft.com/en-us/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) for more information."},{"content":"The phones specified in Pronunciation indicate how the contents of &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A&gt; should be pronounced for successful recognition.","pos":[562,740],"source":"       The phones specified in Pronunciation indicate how the contents of <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> should be pronounced for successful recognition."},{"content":"The speech recognition engine uses the pronunciation specified in Pronunciation to match speech input and returns the string contained by &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A&gt; in the recognition result.","pos":[742,969],"source":"  The speech recognition engine uses the pronunciation specified in Pronunciation to match speech input and returns the string contained by <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> in the recognition result."},{"content":"If the phones are not space-delimited or the specified string contains an unrecognized phone, the recognition engine does not recognize the specified pronunciation as a valid pronunciation of the word contained by &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A&gt;.","pos":[976,1253],"source":"       If the phones are not space-delimited or the specified string contains an unrecognized phone, the recognition engine does not recognize the specified pronunciation as a valid pronunciation of the word contained by <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>."},{"content":"Pronunciations specified in Pronunciation take precedence over pronunciations specified in lexicons associated with a grammar or a recognition engine.","pos":[1260,1410]},{"content":"Also, the pronunciation in the Pronunciation property applies only to the single occurrence of the word or phrase contained by &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A&gt;.","pos":[1411,1601],"source":" Also, the pronunciation in the Pronunciation property applies only to the single occurrence of the word or phrase contained by <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>."}]},{"pos":[10810,10961],"content":"Returns a string containing phones from the phonetic alphabet specified in <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string containing phones from the phonetic alphabet specified in &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet*&gt;.","pos":[0,151],"source":"Returns a string containing phones from the phonetic alphabet specified in <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet*>."}]},{"pos":[11153,11257],"content":"An attempt is made to set Pronunciation to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt is made to set Pronunciation to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11372,11434],"content":"An attempt is made to assign an empty string to Pronunciation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt is made to assign an empty string to Pronunciation.","pos":[0,62]}]},{"pos":[11827,11891],"content":"Gets or sets the written form of the word that should be spoken.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the written form of the word that should be spoken.","pos":[0,64]}]},{"pos":[11904,12506],"content":"Although they typically represent the same value, the Text form may be different than the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> form for a word or phrase in a <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>. For example, the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> form may be an acronym, such as “USA”, while the text that will be spoken, and to which the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> applies, is “United States of America”.       The default value for the Text property is an empty string—\"\".","needQuote":false,"needEscape":true,"nodes":[{"content":"Although they typically represent the same value, the Text form may be different than the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> form for a word or phrase in a <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>. For example, the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> form may be an acronym, such as “USA”, while the text that will be spoken, and to which the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> applies, is “United States of America”.       The default value for the Text property is an empty string—\"\".","pos":[0,598],"nodes":[{"content":"Although they typically represent the same value, the Text form may be different than the &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A&gt; form for a word or phrase in a &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken&gt;.","pos":[0,242],"source":"Although they typically represent the same value, the Text form may be different than the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> form for a word or phrase in a <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>."},{"content":"For example, the &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A&gt; form may be an acronym, such as “USA”, while the text that will be spoken, and to which the &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A&gt; applies, is “United States of America”.","pos":[243,529],"source":" For example, the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> form may be an acronym, such as “USA”, while the text that will be spoken, and to which the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> applies, is “United States of America”."},{"content":"The default value for the Text property is an empty string—\"\".","pos":[536,598]}]}]},{"pos":[12621,12735],"content":"The text contained within the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class instance.","needQuote":true,"needEscape":true,"source":"The text contained within the <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsToken\"></xref> class instance."},{"pos":[12918,13013],"content":"An attempt is made to set Text to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt is made to set Text to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13128,13181],"content":"An attempt is made to assign an empty string to Text.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt is made to assign an empty string to Text.","pos":[0,53]}]},{"pos":[13276,13357],"content":"An attempt is made to assign a string that contains a quotation mark (\") to Text.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt is made to assign a string that contains a quotation mark (\") to Text.","pos":[0,81]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken\n  id: SrgsToken\n  children:\n  - System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)\n  - System.Speech.Recognition.SrgsGrammar.SrgsToken.Display\n  - System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation\n  - System.Speech.Recognition.SrgsGrammar.SrgsToken.Text\n  langs:\n  - csharp\n  name: SrgsToken\n  nameWithType: SrgsToken\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken\n  type: Class\n  summary: Represents a word or short phrase that can be recognized.\n  remarks: \"Using the members of the SrgsToken class, you can specify three forms of a word: the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> form, the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> form, and a custom <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> for the word.  \\n  \\n If multiple words are stored in a single SrgsToken object, each is treated as a different token internally and in the result.  \\n  \\n This class represents the `token` element defined by the World Wide Web Consortium (W3C)  [Speech Recognition Grammar Specification (SRGS) Version 1.0.](http://go.microsoft.com/fwlink/?LinkId=201761). For information about the SRGS `token` element and details about its support by System.Speech, see [token Element](http://msdn.microsoft.com/en-us/3a9e8d64-7bd4-4188-a6f4-dbf28ea71632).\"\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"{DebuggerDisplayString ()}\")]\n\n      public class SrgsToken : System.Speech.Recognition.SrgsGrammar.SrgsElement\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.Speech.Recognition.SrgsGrammar.SrgsElement\n  implements: []\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken\n  langs:\n  - csharp\n  name: SrgsToken(String)\n  nameWithType: SrgsToken.SrgsToken(String)\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.SrgsToken(String)\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: Initializes a new instance of the <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsToken\"></xref> class and specifies the text to be recognized.\n  remarks: Creates a <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> object whose <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> property is set initially to the value of the `text` parameter.\n  syntax:\n    content: public SrgsToken (string text);\n    parameters:\n    - id: text\n      type: System.String\n      description: The text of the new <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsToken\"></xref> class instance.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>text</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>text</code> is empty.\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display\n  id: Display\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken\n  langs:\n  - csharp\n  name: Display\n  nameWithType: SrgsToken.Display\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: Gets or sets the display form of the text to be spoken.\n  remarks: Although they typically represent the same value, the Display form may be different than the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> form for a word or phrase in a <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>. For example, the display form may be an acronym, such as “USA”, while the text that will be spoken, and to which the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> applies, is “United States of America”.\n  syntax:\n    content: public string Display { get; set; }\n    return:\n      type: System.String\n      description: A representation of the token as it should be displayed.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt is made to set Display to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: An attempt is made to assign an empty string to Display.\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation\n  id: Pronunciation\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken\n  langs:\n  - csharp\n  name: Pronunciation\n  nameWithType: SrgsToken.Pronunciation\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: Gets or sets the string that defines the pronunciation for the token.\n  remarks: \"Phones are letters or symbols that describe the sounds of speech. System.Speech supports three phonetic alphabets for specifying custom pronunciations: the Universal Phone Set (UPS), the Speech API (SAPI) Phone set, and the International Phonetic Alphabet (IPA). The phones specified in Pronunciation must match the phonetic alphabet specified in <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A>. See [Lexicons and Phonetic Alphabets](http://msdn.microsoft.com/en-us/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) for more information.  \\n  \\n The phones specified in Pronunciation indicate how the contents of <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> should be pronounced for successful recognition.  The speech recognition engine uses the pronunciation specified in Pronunciation to match speech input and returns the string contained by <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> in the recognition result.  \\n  \\n If the phones are not space-delimited or the specified string contains an unrecognized phone, the recognition engine does not recognize the specified pronunciation as a valid pronunciation of the word contained by <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.  \\n  \\n Pronunciations specified in Pronunciation take precedence over pronunciations specified in lexicons associated with a grammar or a recognition engine. Also, the pronunciation in the Pronunciation property applies only to the single occurrence of the word or phrase contained by <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.\"\n  example:\n  - \"The grammar in the following example contains slang words and also has an uncommon word: \\\"whatchamacallit\\\". Adding a custom, inline pronunciation using the Pronunciation property of the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> class can improve the accuracy of recognition for the word \\\"whatchamacallit\\\" as well as for the entire phrase that contains it. The example uses phones from the Microsoft Universal Phone Set (UPS) to define the custom pronunciations.  \\n  \\n```  \\nusing System;  \\nusing System.Speech.Recognition;  \\nusing System.Speech.Recognition.SrgsGrammar;  \\n  \\nnamespace SampleRecognition  \\n{  \\n  class Program  \\n  {  \\n    static void Main(string[] args)  \\n  \\n    // Initialize an instance of the in-process recognizer.  \\n    {  \\n      using (SpeechRecognitionEngine recognizer =  \\n         new SpeechRecognitionEngine(new System.Globalization.CultureInfo(\\\"en-US\\\")))  \\n      {  \\n  \\n        // Build the SrgsOneOf objects with alternative choices for the slang phrase.  \\n        SrgsOneOf gimme = new SrgsOneOf(  \\n          new string[] { \\\"give me\\\", \\\"gimme\\\", \\\"hand me\\\", \\\"ha'me\\\" });  \\n        SrgsOneOf the = new SrgsOneOf(new string[] { \\\"the\\\", \\\"duh\\\" });  \\n  \\n        // Build the one-of element that contains the pronunciation.  \\n        SrgsItem thing = new SrgsItem(\\\"thingamajig\\\");  \\n        SrgsItem whatcha = new SrgsItem();  \\n        SrgsToken callit = new SrgsToken(\\\"whatchamacallit\\\");  \\n        callit.Pronunciation = \\\"W AE T CH AE M AE K AA L IH T\\\";  \\n        whatcha.Add(callit);  \\n        SrgsOneOf what = new SrgsOneOf(new SrgsItem[] {thing, whatcha});  \\n  \\n        // Create the rule from the SrgsOneOf objects.  \\n        SrgsRule slangRule = new SrgsRule(\\\"slang\\\", gimme, the, what);  \\n  \\n        // Build an SrgsDocument object from the rule and set the phonetic alphabet.  \\n        SrgsDocument tokenPron = new SrgsDocument(slangRule);  \\n        tokenPron.PhoneticAlphabet = SrgsPhoneticAlphabet.Ups;  \\n  \\n        // Create a Grammar object from the SrgsDocument and load it to the recognizer.  \\n        Grammar g_Slang = new Grammar(tokenPron);  \\n        g_Slang.Name = (\\\"Slang Pronunciation\\\");  \\n        recognizer.LoadGrammarAsync(g_Slang);  \\n  \\n        // Configure recognizer input.  \\n        recognizer.SetInputToDefaultAudioDevice();  \\n  \\n        // Attach a handler for the SpeechRecognized event.  \\n        recognizer.SpeechRecognized +=   \\n          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  \\n  \\n        // Start asynchronous recognition.  \\n        recognizer.RecognizeAsync();  \\n        Console.WriteLine(\\\"Starting asynchronous recognition...\\\");  \\n  \\n        // Keep the console window open.  \\n        Console.ReadLine();  \\n      }  \\n    }  \\n  \\n    // Handle the SpeechRecognized event.  \\n    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \\n    {  \\n      Console.WriteLine(\\\"Recognized phrase: \\\" + e.Result.Text);  \\n      Console.WriteLine(\\\"Confidence: \\\" + e.Result.Confidence);  \\n      Console.WriteLine(\\\"  Word summary: \\\");  \\n      foreach (RecognizedWordUnit word in e.Result.Words)  \\n      {  \\n        Console.WriteLine(  \\n          \\\"    Lexical form ({1})\\\" +  \\n          \\\" Pronunciation ({0})\\\" +  \\n          \\\" Confidence ({2})\\\",  \\n          word.Pronunciation, word.LexicalForm, word.Confidence);  \\n      }  \\n    }  \\n  }  \\n}  \\n  \\n```\"\n  syntax:\n    content: public string Pronunciation { get; set; }\n    return:\n      type: System.String\n      description: Returns a string containing phones from the phonetic alphabet specified in <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet*>.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt is made to set Pronunciation to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: An attempt is made to assign an empty string to Pronunciation.\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text\n  id: Text\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken\n  langs:\n  - csharp\n  name: Text\n  nameWithType: SrgsToken.Text\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: Gets or sets the written form of the word that should be spoken.\n  remarks: \"Although they typically represent the same value, the Text form may be different than the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> form for a word or phrase in a <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>. For example, the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> form may be an acronym, such as “USA”, while the text that will be spoken, and to which the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> applies, is “United States of America”.  \\n  \\n The default value for the Text property is an empty string—\\\"\\\".\"\n  syntax:\n    content: public string Text { get; set; }\n    return:\n      type: System.String\n      description: The text contained within the <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsToken\"></xref> class instance.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt is made to set Text to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: An attempt is made to assign an empty string to Text.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An attempt is made to assign a string that contains a quotation mark (\") to Text.\n  platform:\n  - net462\nreferences:\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsElement\n  isExternal: false\n  name: System.Speech.Recognition.SrgsGrammar.SrgsElement\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken\n  isExternal: false\n  name: SrgsToken(String)\n  nameWithType: SrgsToken.SrgsToken(String)\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.SrgsToken(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken\n  isExternal: false\n  name: Display\n  nameWithType: SrgsToken.Display\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken\n  isExternal: false\n  name: Pronunciation\n  nameWithType: SrgsToken.Pronunciation\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken\n  isExternal: false\n  name: Text\n  nameWithType: SrgsToken.Text\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor*\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken\n  isExternal: false\n  name: SrgsToken\n  nameWithType: SrgsToken.SrgsToken\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display*\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken\n  isExternal: false\n  name: Display\n  nameWithType: SrgsToken.Display\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation*\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken\n  isExternal: false\n  name: Pronunciation\n  nameWithType: SrgsToken.Pronunciation\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text*\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken\n  isExternal: false\n  name: Text\n  nameWithType: SrgsToken.Text\n"}