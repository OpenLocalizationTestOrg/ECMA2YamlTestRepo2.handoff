{"nodes":[{"pos":[809,1072],"content":"Defines a set of properties and methods for evaluating an expression that is associated with a control property at design time and to provide an expression editor sheet to the visual design host for use in the expression editor dialog box. This class is abstract.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines a set of properties and methods for evaluating an expression that is associated with a control property at design time and to provide an expression editor sheet to the visual design host for use in the expression editor dialog box. This class is abstract.","pos":[0,263],"nodes":[{"content":"Defines a set of properties and methods for evaluating an expression that is associated with a control property at design time and to provide an expression editor sheet to the visual design host for use in the expression editor dialog box.","pos":[0,239]},{"content":"This class is abstract.","pos":[240,263]}]}]},{"pos":[1085,4049],"content":"A visual designer host, such as [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)], uses the ExpressionEditor class to present custom expression editor sheets to the user, and then evaluate the selected expression for design-time rendering.       When you browse the <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> property for a control in the design-time Properties grid, the visual designer displays a dialog box to set expressions for a control property. You can select the expression type based on a list of expression prefixes. When you select an expression prefix from the list, the visual designer uses the associated ExpressionEditor and <xref:System.Web.UI.Design.ExpressionEditorSheet> objects to set, evaluate, and convert the expression string based on the syntax for that type of expression. The visual designer sets the expression for the associated control property, and then uses the evaluated expression result to assign control property values that are rendered on the design surface.       The static <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> methods get the expression editor that is associated with a particular expression prefix or expression builder. The <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> property for an ExpressionEditor object returns the configured expression prefix. The <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> method evaluates an input expression string. The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method returns the <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that is used to prompt for the custom expression properties in the expressions dialog box.       Typically, to support a new expression type at design time, you define a unique expression prefix and provide custom <xref:System.Web.Compilation.ExpressionBuilder> and ExpressionEditor implementations. Optionally, you can provide a custom <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that defines properties that are used to form the expression in the expressions dialog box.       The expression prefix identifies the custom expression type and associates an expression with the expression builder and expression editor. When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and ExpressionEditor classes. To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file. The prefix is not required, but highly recommended.","needQuote":false,"needEscape":true,"nodes":[{"content":"A visual designer host, such as <ph id=\"ph1\">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph>, uses the ExpressionEditor class to present custom expression editor sheets to the user, and then evaluate the selected expression for design-time rendering.","pos":[0,251],"source":"A visual designer host, such as [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)], uses the ExpressionEditor class to present custom expression editor sheets to the user, and then evaluate the selected expression for design-time rendering."},{"content":"When you browse the &lt;xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A&gt; property for a control in the design-time Properties grid, the visual designer displays a dialog box to set expressions for a control property.","pos":[258,484],"source":"       When you browse the <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> property for a control in the design-time Properties grid, the visual designer displays a dialog box to set expressions for a control property."},{"content":"You can select the expression type based on a list of expression prefixes.","pos":[485,559]},{"content":"When you select an expression prefix from the list, the visual designer uses the associated ExpressionEditor and &lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt; objects to set, evaluate, and convert the expression string based on the syntax for that type of expression.","pos":[560,831],"source":" When you select an expression prefix from the list, the visual designer uses the associated ExpressionEditor and <xref:System.Web.UI.Design.ExpressionEditorSheet> objects to set, evaluate, and convert the expression string based on the syntax for that type of expression."},{"content":"The visual designer sets the expression for the associated control property, and then uses the evaluated expression result to assign control property values that are rendered on the design surface.","pos":[832,1029]},{"content":"The static &lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A&gt; methods get the expression editor that is associated with a particular expression prefix or expression builder.","pos":[1036,1226],"source":"       The static <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> methods get the expression editor that is associated with a particular expression prefix or expression builder."},{"content":"The &lt;xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A&gt; property for an ExpressionEditor object returns the configured expression prefix.","pos":[1227,1377],"source":" The <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> property for an ExpressionEditor object returns the configured expression prefix."},{"content":"The &lt;xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A&gt; method evaluates an input expression string.","pos":[1378,1493],"source":" The <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> method evaluates an input expression string."},{"content":"The &lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt; method returns the &lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt; implementation that is used to prompt for the custom expression properties in the expressions dialog box.","pos":[1494,1745],"source":" The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method returns the <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that is used to prompt for the custom expression properties in the expressions dialog box."},{"content":"Typically, to support a new expression type at design time, you define a unique expression prefix and provide custom &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; and ExpressionEditor implementations.","pos":[1752,1954],"source":"       Typically, to support a new expression type at design time, you define a unique expression prefix and provide custom <xref:System.Web.Compilation.ExpressionBuilder> and ExpressionEditor implementations."},{"content":"Optionally, you can provide a custom &lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt; implementation that defines properties that are used to form the expression in the expressions dialog box.","pos":[1955,2148],"source":" Optionally, you can provide a custom <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that defines properties that are used to form the expression in the expressions dialog box."},{"content":"The expression prefix identifies the custom expression type and associates an expression with the expression builder and expression editor.","pos":[2155,2294]},{"content":"When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; and ExpressionEditor classes.","pos":[2295,2486],"source":" When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and ExpressionEditor classes."},{"content":"To associate an expression prefix with an expression builder and expression editor, apply the &lt;xref:System.Web.Compilation.ExpressionEditorAttribute&gt; and &lt;xref:System.Web.Compilation.ExpressionPrefixAttribute&gt; attributes to the custom &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; class and configure the expression prefix for an expression builder in the <ph id=\"ph1\">`expressionBuilders`</ph> element in the Web configuration file.","pos":[2487,2904],"source":" To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file."},{"content":"The prefix is not required, but highly recommended.","pos":[2905,2956]}]},{"pos":[4831,4930],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Design.ExpressionEditor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.Design.ExpressionEditor\"></xref> class."},{"pos":[4942,5155],"content":"Because the <xref:System.Web.UI.Design.ExpressionEditor> class is abstract, you cannot create an instance of the  <xref:System.Web.UI.Design.ExpressionEditor> class directly using the ExpressionEditor constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Because the &lt;xref:System.Web.UI.Design.ExpressionEditor&gt; class is abstract, you cannot create an instance of the  &lt;xref:System.Web.UI.Design.ExpressionEditor&gt; class directly using the ExpressionEditor constructor.","pos":[0,213],"source":"Because the <xref:System.Web.UI.Design.ExpressionEditor> class is abstract, you cannot create an instance of the  <xref:System.Web.UI.Design.ExpressionEditor> class directly using the ExpressionEditor constructor."}]},{"pos":[5964,6053],"content":"Evaluates an expression string and provides the design-time value for a control property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Evaluates an expression string and provides the design-time value for a control property.","pos":[0,89]}]},{"pos":[6066,6614],"content":"The visual designer host uses the EvaluateExpression method to evaluate an expression and provide the design-time value for an associated control property.       The visual designer uses the <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=fullName> method to parse the expression string at design time, and then calls the EvaluateExpression method with the parsed expression data. The visual designer uses the evaluated expression result to assign control property values that are rendered on the design surface.","needQuote":false,"needEscape":true,"nodes":[{"content":"The visual designer host uses the EvaluateExpression method to evaluate an expression and provide the design-time value for an associated control property.       The visual designer uses the <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=fullName> method to parse the expression string at design time, and then calls the EvaluateExpression method with the parsed expression data. The visual designer uses the evaluated expression result to assign control property values that are rendered on the design surface.","pos":[0,546],"nodes":[{"content":"The visual designer host uses the EvaluateExpression method to evaluate an expression and provide the design-time value for an associated control property.","pos":[0,155]},{"content":"The visual designer uses the &lt;xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=fullName&gt; method to parse the expression string at design time, and then calls the EvaluateExpression method with the parsed expression data.","pos":[162,414],"source":"       The visual designer uses the <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=fullName> method to parse the expression string at design time, and then calls the EvaluateExpression method with the parsed expression data."},{"content":"The visual designer uses the evaluated expression result to assign control property values that are rendered on the design surface.","pos":[415,546]}]}]},{"pos":[6859,6947],"content":"An expression string to evaluate. The expression does not include the expression prefix.","needQuote":true,"needEscape":true,"nodes":[{"content":"An expression string to evaluate. The expression does not include the expression prefix.","pos":[0,88],"nodes":[{"content":"An expression string to evaluate.","pos":[0,33]},{"content":"The expression does not include the expression prefix.","pos":[34,88]}]}]},{"pos":[7017,7151],"content":"An object containing additional parsing information for evaluating `expression`. This typically is provided by the expression builder.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object containing additional parsing information for evaluating <ph id=\"ph1\">`expression`</ph>.","pos":[0,80],"source":"An object containing additional parsing information for evaluating `expression`."},{"content":"This typically is provided by the expression builder.","pos":[81,134]}]},{"pos":[7218,7282],"content":"The type of the control property to which <ph id=\"ph1\">`expression`</ph> is bound.","needQuote":true,"needEscape":true,"source":"The type of the control property to which `expression` is bound."},{"pos":[7364,7476],"content":"A service provider implementation supplied by the designer host, used to obtain additional design-time services.","needQuote":true,"needEscape":true,"nodes":[{"content":"A service provider implementation supplied by the designer host, used to obtain additional design-time services.","pos":[0,112]}]},{"pos":[7534,7704],"content":"The object referenced by the evaluated expression string, if the expression evaluation succeeded; otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object referenced by the evaluated expression string, if the expression evaluation succeeded; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8204,8325],"content":"Gets the expression prefix that identifies expression strings that are supported by the expression editor implementation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the expression prefix that identifies expression strings that are supported by the expression editor implementation.","pos":[0,121]}]},{"pos":[8338,9443],"content":"The expression prefix identifies the custom expression type and associates an expression with the expression builder and expression editor. When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> classes. To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.       Typically, derived classes do not override the ExpressionPrefix property. The base <xref:System.Web.UI.Design.ExpressionEditor> class sets the ExpressionPrefix value based on the <xref:System.Web.Compilation.ExpressionPrefixAttribute> attribute for the associated <xref:System.Web.Compilation.ExpressionBuilder> object.","needQuote":false,"needEscape":true,"nodes":[{"content":"The expression prefix identifies the custom expression type and associates an expression with the expression builder and expression editor.","pos":[0,139]},{"content":"When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; and &lt;xref:System.Web.UI.Design.ExpressionEditor&gt; classes.","pos":[140,359],"source":" When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> classes."},{"content":"To associate an expression prefix with an expression builder and expression editor, apply the &lt;xref:System.Web.Compilation.ExpressionEditorAttribute&gt; and &lt;xref:System.Web.Compilation.ExpressionPrefixAttribute&gt; attributes to the custom &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; class and configure the expression prefix for an expression builder in the <ph id=\"ph1\">`expressionBuilders`</ph> element in the Web configuration file.","pos":[360,777],"source":" To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file."},{"content":"Typically, derived classes do not override the ExpressionPrefix property.","pos":[784,857]},{"content":"The base &lt;xref:System.Web.UI.Design.ExpressionEditor&gt; class sets the ExpressionPrefix value based on the &lt;xref:System.Web.Compilation.ExpressionPrefixAttribute&gt; attribute for the associated &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; object.","pos":[858,1103],"source":" The base <xref:System.Web.UI.Design.ExpressionEditor> class sets the ExpressionPrefix value based on the <xref:System.Web.Compilation.ExpressionPrefixAttribute> attribute for the associated <xref:System.Web.Compilation.ExpressionBuilder> object."}]},{"pos":[9565,9818],"content":"A string representing the prefix for expressions supported by the class derived from the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Design.ExpressionEditor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>; otherwise, an empty string (\"\"), if the expression editor does not have an associated expression prefix.","needQuote":true,"needEscape":true,"source":"A string representing the prefix for expressions supported by the class derived from the <xref href=\"System.Web.UI.Design.ExpressionEditor\"></xref>; otherwise, an empty string (\"\"), if the expression editor does not have an associated expression prefix."},{"pos":[10482,10623],"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Design.ExpressionEditor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation that is associated with the specified expression prefix.","needQuote":true,"needEscape":true,"source":"Returns an <xref href=\"System.Web.UI.Design.ExpressionEditor\"></xref> implementation that is associated with the specified expression prefix."},{"pos":[10636,12439],"content":"Use the static <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method overloads to find the <xref:System.Web.UI.Design.ExpressionEditor> object that is associated with a particular expression prefix or expression builder type.       For each custom expression type, an expression prefix identifies the associated expression builder and expression editor. When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> classes.       To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.       To find the associated expression editor for an expression prefix, the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method enumerates the available <xref:System.Web.Compilation.ExpressionBuilder> implementations for a matching prefix. The <xref:System.Web.Compilation.ExpressionBuilder> implementations can be configured in the `expressionBuilders` section of the Web configuration file. If an available <xref:System.Web.Compilation.ExpressionBuilder> implementation defines the expression prefix, the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method returns the type that is specified in the <xref:System.Web.Compilation.ExpressionEditorAttribute> attribute of the <xref:System.Web.Compilation.ExpressionBuilder> metadata.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the static &lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A&gt; method overloads to find the &lt;xref:System.Web.UI.Design.ExpressionEditor&gt; object that is associated with a particular expression prefix or expression builder type.","pos":[0,246],"source":"Use the static <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method overloads to find the <xref:System.Web.UI.Design.ExpressionEditor> object that is associated with a particular expression prefix or expression builder type."},{"content":"For each custom expression type, an expression prefix identifies the associated expression builder and expression editor.","pos":[253,374]},{"content":"When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; and &lt;xref:System.Web.UI.Design.ExpressionEditor&gt; classes.","pos":[375,594],"source":" When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> classes."},{"content":"To associate an expression prefix with an expression builder and expression editor, apply the &lt;xref:System.Web.Compilation.ExpressionEditorAttribute&gt; and &lt;xref:System.Web.Compilation.ExpressionPrefixAttribute&gt; attributes to the custom &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; class and configure the expression prefix for an expression builder in the <ph id=\"ph1\">`expressionBuilders`</ph> element in the Web configuration file.","pos":[601,1018],"source":"       To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file."},{"content":"To find the associated expression editor for an expression prefix, the &lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A&gt; method enumerates the available &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; implementations for a matching prefix.","pos":[1025,1282],"source":"       To find the associated expression editor for an expression prefix, the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method enumerates the available <xref:System.Web.Compilation.ExpressionBuilder> implementations for a matching prefix."},{"content":"The &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; implementations can be configured in the <ph id=\"ph1\">`expressionBuilders`</ph> section of the Web configuration file.","pos":[1283,1435],"source":" The <xref:System.Web.Compilation.ExpressionBuilder> implementations can be configured in the `expressionBuilders` section of the Web configuration file."},{"content":"If an available &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; implementation defines the expression prefix, the &lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A&gt; method returns the type that is specified in the &lt;xref:System.Web.Compilation.ExpressionEditorAttribute&gt; attribute of the &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; metadata.","pos":[1436,1797],"source":" If an available <xref:System.Web.Compilation.ExpressionBuilder> implementation defines the expression prefix, the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method returns the type that is specified in the <xref:System.Web.Compilation.ExpressionEditorAttribute> attribute of the <xref:System.Web.Compilation.ExpressionBuilder> metadata."}]},{"pos":[12685,12753],"content":"The expression prefix used to find the associated expression editor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression prefix used to find the associated expression editor.","pos":[0,68]}]},{"pos":[12835,12947],"content":"A service provider implementation supplied by the designer host, used to obtain additional design-time services.","needQuote":true,"needEscape":true,"nodes":[{"content":"A service provider implementation supplied by the designer host, used to obtain additional design-time services.","pos":[0,112]}]},{"pos":[13029,13362],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Design.ExpressionEditor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation associated with <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">expressionPrefix</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, if <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph2\">expressionPrefix</ph><ept id=\"p4\">&lt;/code&gt;</ept> is not defined or is not associated with an <bpt id=\"p5\">&lt;xref href=\"System.Web.UI.Design.ExpressionEditor\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.Design.ExpressionEditor\"></xref> implementation associated with <code>expressionPrefix</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if <code>expressionPrefix</code> is not defined or is not associated with an <xref href=\"System.Web.UI.Design.ExpressionEditor\"></xref>."},{"pos":[13550,13643],"content":"<ph id=\"ph1\">&lt;code&gt;serviceProvider&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>serviceProvider</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14212,14359],"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Design.ExpressionEditor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation that is associated with the specified expression builder type.","needQuote":true,"needEscape":true,"source":"Returns an <xref href=\"System.Web.UI.Design.ExpressionEditor\"></xref> implementation that is associated with the specified expression builder type."},{"pos":[14372,16128],"content":"Use the static <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> overloads to find the <xref:System.Web.UI.Design.ExpressionEditor> object that is associated with a particular expression prefix or expression builder type.       For each custom expression type, an expression prefix identifies the associated expression builder and expression editor. When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> classes.       To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.       The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method enumerates the available <xref:System.Web.Compilation.ExpressionBuilder> implementations to locate `expressionBuilderType`. The <xref:System.Web.Compilation.ExpressionBuilder> implementations can be configured in the `expressionBuilders` section of the Web configuration file. If `expressionBuilderType` is found in the set of available <xref:System.Web.Compilation.ExpressionBuilder> implementations, the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method returns the type that is specified in the <xref:System.Web.Compilation.ExpressionEditorAttribute> attribute of the <xref:System.Web.Compilation.ExpressionBuilder> metadata.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the static &lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A&gt; overloads to find the &lt;xref:System.Web.UI.Design.ExpressionEditor&gt; object that is associated with a particular expression prefix or expression builder type.","pos":[0,239],"source":"Use the static <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> overloads to find the <xref:System.Web.UI.Design.ExpressionEditor> object that is associated with a particular expression prefix or expression builder type."},{"content":"For each custom expression type, an expression prefix identifies the associated expression builder and expression editor.","pos":[246,367]},{"content":"When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; and &lt;xref:System.Web.UI.Design.ExpressionEditor&gt; classes.","pos":[368,587],"source":" When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> classes."},{"content":"To associate an expression prefix with an expression builder and expression editor, apply the &lt;xref:System.Web.Compilation.ExpressionEditorAttribute&gt; and &lt;xref:System.Web.Compilation.ExpressionPrefixAttribute&gt; attributes to the custom &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; class and configure the expression prefix for an expression builder in the <ph id=\"ph1\">`expressionBuilders`</ph> element in the Web configuration file.","pos":[594,1011],"source":"       To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file."},{"content":"The &lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A&gt; method enumerates the available &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; implementations to locate <ph id=\"ph1\">`expressionBuilderType`</ph>.","pos":[1018,1220],"source":"       The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method enumerates the available <xref:System.Web.Compilation.ExpressionBuilder> implementations to locate `expressionBuilderType`."},{"content":"The &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; implementations can be configured in the <ph id=\"ph1\">`expressionBuilders`</ph> section of the Web configuration file.","pos":[1221,1373],"source":" The <xref:System.Web.Compilation.ExpressionBuilder> implementations can be configured in the `expressionBuilders` section of the Web configuration file."},{"content":"If <ph id=\"ph1\">`expressionBuilderType`</ph> is found in the set of available &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; implementations, the &lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A&gt; method returns the type that is specified in the &lt;xref:System.Web.Compilation.ExpressionEditorAttribute&gt; attribute of the &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; metadata.","pos":[1374,1750],"source":" If `expressionBuilderType` is found in the set of available <xref:System.Web.Compilation.ExpressionBuilder> implementations, the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method returns the type that is specified in the <xref:System.Web.Compilation.ExpressionEditorAttribute> attribute of the <xref:System.Web.Compilation.ExpressionBuilder> metadata."}]},{"pos":[16380,16478],"content":"The type of the derived expression builder class, used to locate the associated expression editor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the derived expression builder class, used to locate the associated expression editor.","pos":[0,98]}]},{"pos":[16560,16672],"content":"A service provider implementation supplied by the designer host, used to obtain additional design-time services.","needQuote":true,"needEscape":true,"nodes":[{"content":"A service provider implementation supplied by the designer host, used to obtain additional design-time services.","pos":[0,112]}]},{"pos":[16754,17092],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Design.ExpressionEditor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation associated with <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">expressionBuilderType</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, if <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph2\">expressionBuilderType</ph><ept id=\"p4\">&lt;/code&gt;</ept> cannot be located or has no associated <bpt id=\"p5\">&lt;xref href=\"System.Web.UI.Design.ExpressionEditor\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.Design.ExpressionEditor\"></xref> implementation associated with <code>expressionBuilderType</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if <code>expressionBuilderType</code> cannot be located or has no associated <xref href=\"System.Web.UI.Design.ExpressionEditor\"></xref>."},{"pos":[18116,18205],"content":"Returns an expression editor sheet that is associated with the current expression editor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an expression editor sheet that is associated with the current expression editor.","pos":[0,89]}]},{"pos":[18218,19941],"content":"The GetExpressionEditorSheet method returns an <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that defines the strings that are combined to form a custom expression. The visual designer uses an expression editor sheet to prompt for one or more strings that combine into a custom expression. The base class method returns a default expression editor sheet, which uses a single input string to form the expression. The expression editor sheet defines the property grid for the expression. Therefore, the properties that the expression editor exposes become properties that can be defined for the expression in the dialog box.       Classes deriving from the <xref:System.Web.UI.Design.ExpressionEditor> class optionally can override the GetExpressionEditorSheet method to provide a custom expression editor sheet. A custom expression editor sheet can allow design-time input for multiple properties, which are combined together to form the expression string.       For example, the <xref:System.Web.UI.Design.ResourceExpressionEditor> class derives from the <xref:System.Web.UI.Design.ExpressionEditor> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time. The <xref:System.Web.Compilation.ResourceExpressionBuilder> class is associated with the expression prefix `Resources` and the <xref:System.Web.UI.Design.ResourceExpressionEditor> implementation. The <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=fullName> method returns a <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, which defines the individual properties that form a resource reference expression.","needQuote":false,"needEscape":true,"nodes":[{"content":"The GetExpressionEditorSheet method returns an &lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt; implementation that defines the strings that are combined to form a custom expression.","pos":[0,183],"source":"The GetExpressionEditorSheet method returns an <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that defines the strings that are combined to form a custom expression."},{"content":"The visual designer uses an expression editor sheet to prompt for one or more strings that combine into a custom expression.","pos":[184,308]},{"content":"The base class method returns a default expression editor sheet, which uses a single input string to form the expression.","pos":[309,430]},{"content":"The expression editor sheet defines the property grid for the expression.","pos":[431,504]},{"content":"Therefore, the properties that the expression editor exposes become properties that can be defined for the expression in the dialog box.","pos":[505,641]},{"content":"Classes deriving from the &lt;xref:System.Web.UI.Design.ExpressionEditor&gt; class optionally can override the GetExpressionEditorSheet method to provide a custom expression editor sheet.","pos":[648,829],"source":"       Classes deriving from the <xref:System.Web.UI.Design.ExpressionEditor> class optionally can override the GetExpressionEditorSheet method to provide a custom expression editor sheet."},{"content":"A custom expression editor sheet can allow design-time input for multiple properties, which are combined together to form the expression string.","pos":[830,974]},{"content":"For example, the &lt;xref:System.Web.UI.Design.ResourceExpressionEditor&gt; class derives from the &lt;xref:System.Web.UI.Design.ExpressionEditor&gt; class and provides an implementation for evaluating and associating a resource string reference with a control property at design time.","pos":[981,1254],"source":"       For example, the <xref:System.Web.UI.Design.ResourceExpressionEditor> class derives from the <xref:System.Web.UI.Design.ExpressionEditor> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time."},{"content":"The &lt;xref:System.Web.Compilation.ResourceExpressionBuilder&gt; class is associated with the expression prefix <ph id=\"ph1\">`Resources`</ph> and the &lt;xref:System.Web.UI.Design.ResourceExpressionEditor&gt; implementation.","pos":[1255,1450],"source":" The <xref:System.Web.Compilation.ResourceExpressionBuilder> class is associated with the expression prefix `Resources` and the <xref:System.Web.UI.Design.ResourceExpressionEditor> implementation."},{"content":"The &lt;xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=fullName&gt; method returns a &lt;xref:System.Web.UI.Design.ResourceExpressionEditorSheet&gt;, which defines the individual properties that form a resource reference expression.","pos":[1451,1719],"source":" The <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=fullName> method returns a <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, which defines the individual properties that form a resource reference expression."}]},{"pos":[20186,20283],"content":"The expression string set for a control property, used to initialize the expression editor sheet.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression string set for a control property, used to initialize the expression editor sheet.","pos":[0,97]}]},{"pos":[20365,20477],"content":"A service provider implementation supplied by the designer host, used to obtain additional design-time services.","needQuote":true,"needEscape":true,"nodes":[{"content":"A service provider implementation supplied by the designer host, used to obtain additional design-time services.","pos":[0,112]}]},{"pos":[20564,20677],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Design.ExpressionEditorSheet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that defines the custom expression properties.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.Design.ExpressionEditorSheet\"></xref> that defines the custom expression properties."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.Design.ExpressionEditor\n  id: ExpressionEditor\n  children:\n  - System.Web.UI.Design.ExpressionEditor.#ctor\n  - System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)\n  - System.Web.UI.Design.ExpressionEditor.ExpressionPrefix\n  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)\n  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)\n  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)\n  langs:\n  - csharp\n  name: ExpressionEditor\n  nameWithType: ExpressionEditor\n  fullName: System.Web.UI.Design.ExpressionEditor\n  type: Class\n  summary: Defines a set of properties and methods for evaluating an expression that is associated with a control property at design time and to provide an expression editor sheet to the visual design host for use in the expression editor dialog box. This class is abstract.\n  remarks: \"A visual designer host, such as [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)], uses the ExpressionEditor class to present custom expression editor sheets to the user, and then evaluate the selected expression for design-time rendering.  \\n  \\n When you browse the <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> property for a control in the design-time Properties grid, the visual designer displays a dialog box to set expressions for a control property. You can select the expression type based on a list of expression prefixes. When you select an expression prefix from the list, the visual designer uses the associated ExpressionEditor and <xref:System.Web.UI.Design.ExpressionEditorSheet> objects to set, evaluate, and convert the expression string based on the syntax for that type of expression. The visual designer sets the expression for the associated control property, and then uses the evaluated expression result to assign control property values that are rendered on the design surface.  \\n  \\n The static <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> methods get the expression editor that is associated with a particular expression prefix or expression builder. The <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> property for an ExpressionEditor object returns the configured expression prefix. The <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> method evaluates an input expression string. The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method returns the <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that is used to prompt for the custom expression properties in the expressions dialog box.  \\n  \\n Typically, to support a new expression type at design time, you define a unique expression prefix and provide custom <xref:System.Web.Compilation.ExpressionBuilder> and ExpressionEditor implementations. Optionally, you can provide a custom <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that defines properties that are used to form the expression in the expressions dialog box.  \\n  \\n The expression prefix identifies the custom expression type and associates an expression with the expression builder and expression editor. When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and ExpressionEditor classes. To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file. The prefix is not required, but highly recommended.\"\n  example:\n  - \"The following code example demonstrates how to derive from the ExpressionEditor class to define a custom expression editor.  \\n  \\n [!code-cs[CustomExpressionEditor#1](~/add/codesnippet/csharp/t-system.web.ui.design.e_0_1.cs)]\"\n  syntax:\n    content: public abstract class ExpressionEditor\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.Design.ExpressionEditor.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.Design.ExpressionEditor\n  langs:\n  - csharp\n  name: ExpressionEditor()\n  nameWithType: ExpressionEditor.ExpressionEditor()\n  fullName: System.Web.UI.Design.ExpressionEditor.ExpressionEditor()\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.Design.ExpressionEditor\"></xref> class.\n  remarks: Because the <xref:System.Web.UI.Design.ExpressionEditor> class is abstract, you cannot create an instance of the  <xref:System.Web.UI.Design.ExpressionEditor> class directly using the ExpressionEditor constructor.\n  syntax:\n    content: protected ExpressionEditor ();\n    parameters: []\n  overload: System.Web.UI.Design.ExpressionEditor.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)\n  id: EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)\n  parent: System.Web.UI.Design.ExpressionEditor\n  langs:\n  - csharp\n  name: EvaluateExpression(String,Object,Type,IServiceProvider)\n  nameWithType: ExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)\n  fullName: System.Web.UI.Design.ExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Evaluates an expression string and provides the design-time value for a control property.\n  remarks: \"The visual designer host uses the EvaluateExpression method to evaluate an expression and provide the design-time value for an associated control property.  \\n  \\n The visual designer uses the <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=fullName> method to parse the expression string at design time, and then calls the EvaluateExpression method with the parsed expression data. The visual designer uses the evaluated expression result to assign control property values that are rendered on the design surface.\"\n  syntax:\n    content: public abstract object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);\n    parameters:\n    - id: expression\n      type: System.String\n      description: An expression string to evaluate. The expression does not include the expression prefix.\n    - id: parseTimeData\n      type: System.Object\n      description: An object containing additional parsing information for evaluating `expression`. This typically is provided by the expression builder.\n    - id: propertyType\n      type: System.Type\n      description: The type of the control property to which `expression` is bound.\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: A service provider implementation supplied by the designer host, used to obtain additional design-time services.\n    return:\n      type: System.Object\n      description: The object referenced by the evaluated expression string, if the expression evaluation succeeded; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.UI.Design.ExpressionEditor.EvaluateExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix\n  id: ExpressionPrefix\n  parent: System.Web.UI.Design.ExpressionEditor\n  langs:\n  - csharp\n  name: ExpressionPrefix\n  nameWithType: ExpressionEditor.ExpressionPrefix\n  fullName: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Gets the expression prefix that identifies expression strings that are supported by the expression editor implementation.\n  remarks: \"The expression prefix identifies the custom expression type and associates an expression with the expression builder and expression editor. When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> classes. To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.  \\n  \\n Typically, derived classes do not override the ExpressionPrefix property. The base <xref:System.Web.UI.Design.ExpressionEditor> class sets the ExpressionPrefix value based on the <xref:System.Web.Compilation.ExpressionPrefixAttribute> attribute for the associated <xref:System.Web.Compilation.ExpressionBuilder> object.\"\n  syntax:\n    content: public string ExpressionPrefix { get; }\n    return:\n      type: System.String\n      description: A string representing the prefix for expressions supported by the class derived from the <xref href=\"System.Web.UI.Design.ExpressionEditor\"></xref>; otherwise, an empty string (\"\"), if the expression editor does not have an associated expression prefix.\n  overload: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)\n  id: GetExpressionEditor(System.String,System.IServiceProvider)\n  parent: System.Web.UI.Design.ExpressionEditor\n  langs:\n  - csharp\n  name: GetExpressionEditor(String,IServiceProvider)\n  nameWithType: ExpressionEditor.GetExpressionEditor(String,IServiceProvider)\n  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(String,IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Returns an <xref href=\"System.Web.UI.Design.ExpressionEditor\"></xref> implementation that is associated with the specified expression prefix.\n  remarks: \"Use the static <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method overloads to find the <xref:System.Web.UI.Design.ExpressionEditor> object that is associated with a particular expression prefix or expression builder type.  \\n  \\n For each custom expression type, an expression prefix identifies the associated expression builder and expression editor. When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> classes.  \\n  \\n To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.  \\n  \\n To find the associated expression editor for an expression prefix, the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method enumerates the available <xref:System.Web.Compilation.ExpressionBuilder> implementations for a matching prefix. The <xref:System.Web.Compilation.ExpressionBuilder> implementations can be configured in the `expressionBuilders` section of the Web configuration file. If an available <xref:System.Web.Compilation.ExpressionBuilder> implementation defines the expression prefix, the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method returns the type that is specified in the <xref:System.Web.Compilation.ExpressionEditorAttribute> attribute of the <xref:System.Web.Compilation.ExpressionBuilder> metadata.\"\n  syntax:\n    content: public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (string expressionPrefix, IServiceProvider serviceProvider);\n    parameters:\n    - id: expressionPrefix\n      type: System.String\n      description: The expression prefix used to find the associated expression editor.\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: A service provider implementation supplied by the designer host, used to obtain additional design-time services.\n    return:\n      type: System.Web.UI.Design.ExpressionEditor\n      description: An <xref href=\"System.Web.UI.Design.ExpressionEditor\"></xref> implementation associated with <code>expressionPrefix</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if <code>expressionPrefix</code> is not defined or is not associated with an <xref href=\"System.Web.UI.Design.ExpressionEditor\"></xref>.\n  overload: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceProvider</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)\n  id: GetExpressionEditor(System.Type,System.IServiceProvider)\n  parent: System.Web.UI.Design.ExpressionEditor\n  langs:\n  - csharp\n  name: GetExpressionEditor(Type,IServiceProvider)\n  nameWithType: ExpressionEditor.GetExpressionEditor(Type,IServiceProvider)\n  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(Type,IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Returns an <xref href=\"System.Web.UI.Design.ExpressionEditor\"></xref> implementation that is associated with the specified expression builder type.\n  remarks: \"Use the static <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> overloads to find the <xref:System.Web.UI.Design.ExpressionEditor> object that is associated with a particular expression prefix or expression builder type.  \\n  \\n For each custom expression type, an expression prefix identifies the associated expression builder and expression editor. When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> classes.  \\n  \\n To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.  \\n  \\n The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method enumerates the available <xref:System.Web.Compilation.ExpressionBuilder> implementations to locate `expressionBuilderType`. The <xref:System.Web.Compilation.ExpressionBuilder> implementations can be configured in the `expressionBuilders` section of the Web configuration file. If `expressionBuilderType` is found in the set of available <xref:System.Web.Compilation.ExpressionBuilder> implementations, the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method returns the type that is specified in the <xref:System.Web.Compilation.ExpressionEditorAttribute> attribute of the <xref:System.Web.Compilation.ExpressionBuilder> metadata.\"\n  syntax:\n    content: public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (Type expressionBuilderType, IServiceProvider serviceProvider);\n    parameters:\n    - id: expressionBuilderType\n      type: System.Type\n      description: The type of the derived expression builder class, used to locate the associated expression editor.\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: A service provider implementation supplied by the designer host, used to obtain additional design-time services.\n    return:\n      type: System.Web.UI.Design.ExpressionEditor\n      description: An <xref href=\"System.Web.UI.Design.ExpressionEditor\"></xref> implementation associated with <code>expressionBuilderType</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if <code>expressionBuilderType</code> cannot be located or has no associated <xref href=\"System.Web.UI.Design.ExpressionEditor\"></xref>.\n  overload: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>expressionBuilderType</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n <code>serviceProvider</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)\n  id: GetExpressionEditorSheet(System.String,System.IServiceProvider)\n  parent: System.Web.UI.Design.ExpressionEditor\n  langs:\n  - csharp\n  name: GetExpressionEditorSheet(String,IServiceProvider)\n  nameWithType: ExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)\n  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Returns an expression editor sheet that is associated with the current expression editor.\n  remarks: \"The GetExpressionEditorSheet method returns an <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that defines the strings that are combined to form a custom expression. The visual designer uses an expression editor sheet to prompt for one or more strings that combine into a custom expression. The base class method returns a default expression editor sheet, which uses a single input string to form the expression. The expression editor sheet defines the property grid for the expression. Therefore, the properties that the expression editor exposes become properties that can be defined for the expression in the dialog box.  \\n  \\n Classes deriving from the <xref:System.Web.UI.Design.ExpressionEditor> class optionally can override the GetExpressionEditorSheet method to provide a custom expression editor sheet. A custom expression editor sheet can allow design-time input for multiple properties, which are combined together to form the expression string.  \\n  \\n For example, the <xref:System.Web.UI.Design.ResourceExpressionEditor> class derives from the <xref:System.Web.UI.Design.ExpressionEditor> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time. The <xref:System.Web.Compilation.ResourceExpressionBuilder> class is associated with the expression prefix `Resources` and the <xref:System.Web.UI.Design.ResourceExpressionEditor> implementation. The <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=fullName> method returns a <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, which defines the individual properties that form a resource reference expression.\"\n  syntax:\n    content: public virtual System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);\n    parameters:\n    - id: expression\n      type: System.String\n      description: The expression string set for a control property, used to initialize the expression editor sheet.\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: A service provider implementation supplied by the designer host, used to obtain additional design-time services.\n    return:\n      type: System.Web.UI.Design.ExpressionEditorSheet\n      description: An <xref href=\"System.Web.UI.Design.ExpressionEditorSheet\"></xref> that defines the custom expression properties.\n  overload: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.UI.Design.ExpressionEditor.#ctor\n  parent: System.Web.UI.Design.ExpressionEditor\n  isExternal: false\n  name: ExpressionEditor()\n  nameWithType: ExpressionEditor.ExpressionEditor()\n  fullName: System.Web.UI.Design.ExpressionEditor.ExpressionEditor()\n- uid: System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)\n  parent: System.Web.UI.Design.ExpressionEditor\n  isExternal: false\n  name: EvaluateExpression(String,Object,Type,IServiceProvider)\n  nameWithType: ExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)\n  fullName: System.Web.UI.Design.ExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: true\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix\n  parent: System.Web.UI.Design.ExpressionEditor\n  isExternal: false\n  name: ExpressionPrefix\n  nameWithType: ExpressionEditor.ExpressionPrefix\n  fullName: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix\n- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)\n  parent: System.Web.UI.Design.ExpressionEditor\n  isExternal: false\n  name: GetExpressionEditor(String,IServiceProvider)\n  nameWithType: ExpressionEditor.GetExpressionEditor(String,IServiceProvider)\n  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(String,IServiceProvider)\n- uid: System.Web.UI.Design.ExpressionEditor\n  parent: System.Web.UI.Design\n  isExternal: false\n  name: ExpressionEditor\n  nameWithType: ExpressionEditor\n  fullName: System.Web.UI.Design.ExpressionEditor\n- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)\n  parent: System.Web.UI.Design.ExpressionEditor\n  isExternal: false\n  name: GetExpressionEditor(Type,IServiceProvider)\n  nameWithType: ExpressionEditor.GetExpressionEditor(Type,IServiceProvider)\n  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(Type,IServiceProvider)\n- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)\n  parent: System.Web.UI.Design.ExpressionEditor\n  isExternal: false\n  name: GetExpressionEditorSheet(String,IServiceProvider)\n  nameWithType: ExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)\n  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)\n- uid: System.Web.UI.Design.ExpressionEditorSheet\n  parent: System.Web.UI.Design\n  isExternal: false\n  name: ExpressionEditorSheet\n  nameWithType: ExpressionEditorSheet\n  fullName: System.Web.UI.Design.ExpressionEditorSheet\n- uid: System.Web.UI.Design.ExpressionEditor.#ctor*\n  parent: System.Web.UI.Design.ExpressionEditor\n  isExternal: false\n  name: ExpressionEditor\n  nameWithType: ExpressionEditor.ExpressionEditor\n- uid: System.Web.UI.Design.ExpressionEditor.EvaluateExpression*\n  parent: System.Web.UI.Design.ExpressionEditor\n  isExternal: false\n  name: EvaluateExpression\n  nameWithType: ExpressionEditor.EvaluateExpression\n- uid: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix*\n  parent: System.Web.UI.Design.ExpressionEditor\n  isExternal: false\n  name: ExpressionPrefix\n  nameWithType: ExpressionEditor.ExpressionPrefix\n- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor*\n  parent: System.Web.UI.Design.ExpressionEditor\n  isExternal: false\n  name: GetExpressionEditor\n  nameWithType: ExpressionEditor.GetExpressionEditor\n- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet*\n  parent: System.Web.UI.Design.ExpressionEditor\n  isExternal: false\n  name: GetExpressionEditorSheet\n  nameWithType: ExpressionEditor.GetExpressionEditorSheet\n"}