{"nodes":[{"pos":[1211,1236],"content":"Creates a field template.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a field template.","pos":[0,25]}]},{"pos":[1248,1427],"content":"By default, this class implements the <xref:System.Web.DynamicData.IFieldTemplateFactory> interface, and uses the <xref:System.Web.UI.UserControl> class to create field templates.","needQuote":true,"needEscape":true,"nodes":[{"content":"By default, this class implements the &lt;xref:System.Web.DynamicData.IFieldTemplateFactory&gt; interface, and uses the &lt;xref:System.Web.UI.UserControl&gt; class to create field templates.","pos":[0,179],"source":"By default, this class implements the <xref:System.Web.DynamicData.IFieldTemplateFactory> interface, and uses the <xref:System.Web.UI.UserControl> class to create field templates."}]},{"pos":[2099,2201],"content":"Initializes an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.FieldTemplateFactory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes an instance of the <xref href=\"System.Web.DynamicData.FieldTemplateFactory\"></xref> class."},{"pos":[3111,3201],"content":"Builds the virtual path to a field template based on the field template name and the mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"Builds the virtual path to a field template based on the field template name and the mode.","pos":[0,90]}]},{"pos":[3213,3550],"content":"By default, this method builds the virtual path to a field template by using the template name, appending the mode and then adding a .ascx extension. For example, if `templateName` is MyFieldTemplate and `mode` is Edit, then the virtual path will be MyFieldTemplate_Edit.ascx, in the folder specified by the Template folder virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"By default, this method builds the virtual path to a field template by using the template name, appending the mode and then adding a .ascx extension.","pos":[0,149]},{"content":"For example, if <ph id=\"ph1\">`templateName`</ph> is MyFieldTemplate and <ph id=\"ph2\">`mode`</ph> is Edit, then the virtual path will be MyFieldTemplate_Edit.ascx, in the folder specified by the Template folder virtual path.","pos":[150,337],"source":" For example, if `templateName` is MyFieldTemplate and `mode` is Edit, then the virtual path will be MyFieldTemplate_Edit.ascx, in the folder specified by the Template folder virtual path."}]},{"pos":[3815,3847],"content":"The name of the template to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the template to use.","pos":[0,32]}]},{"pos":[3930,3992],"content":"Specifies the data column which the field template applies to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the data column which the field template applies to.","pos":[0,62]}]},{"pos":[4086,4135],"content":"Specifies the display mode of the field template.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the display mode of the field template.","pos":[0,49]}]},{"pos":[4193,4232],"content":"The virtual path to the field template.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path to the field template.","pos":[0,39]}]},{"pos":[4423,4457],"content":"<ph id=\"ph1\">&lt;code&gt;templateName&lt;/code&gt;</ph> is null.","needQuote":true,"needEscape":true,"source":"<code>templateName</code> is null."},{"pos":[5228,5480],"content":"Creates an instance of a field template using the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.DataBoundControlMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class and &lt;xref:System.Web.DynamicData.MetaColumn.UIHint*&gt; property.","needQuote":true,"needEscape":true,"source":"Creates an instance of a field template using the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> class, the <xref href=\"System.Web.UI.WebControls.DataBoundControlMode\"></xref> class and <xref:System.Web.DynamicData.MetaColumn.UIHint*> property."},{"pos":[5787,5849],"content":"Specifies the data column which the field template applies to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the data column which the field template applies to.","pos":[0,62]}]},{"pos":[5943,5992],"content":"Specifies the display mode of the field template.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the display mode of the field template.","pos":[0,49]}]},{"pos":[6055,6091],"content":"Specifies the field template to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the field template to use.","pos":[0,36]}]},{"pos":[6173,6293],"content":"An instance of the interface that the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.FieldTemplateFactory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class implements.","needQuote":true,"needEscape":true,"source":"An instance of the interface that the <xref href=\"System.Web.DynamicData.FieldTemplateFactory\"></xref> class implements."},{"pos":[7198,7246],"content":"Determines the virtual path of a field template.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines the virtual path of a field template.","pos":[0,48]}]},{"pos":[7258,7518],"content":"Dynamic Data field templates are created in the DynamicData/FieldTemplates/ folder but you can create a new folder for your field templates. This method determines the virtual path for the folder that contains the field template using the specified parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Dynamic Data field templates are created in the DynamicData/FieldTemplates/ folder but you can create a new folder for your field templates. This method determines the virtual path for the folder that contains the field template using the specified parameters.","pos":[0,260],"nodes":[{"content":"Dynamic Data field templates are created in the DynamicData/FieldTemplates/ folder but you can create a new folder for your field templates.","pos":[0,140]},{"content":"This method determines the virtual path for the folder that contains the field template using the specified parameters.","pos":[141,260]}]}]},{"pos":[7802,7864],"content":"Specifies the data column which the field template applies to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the data column which the field template applies to.","pos":[0,62]}]},{"pos":[7958,8034],"content":"Specifies the display mode of the field template-Read Only, Edit, or Insert.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the display mode of the field template-Read Only, Edit, or Insert.","pos":[0,76]}]},{"pos":[8097,8184],"content":"Specifies the field template to use. This parameter affects the field template look up.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the field template to use. This parameter affects the field template look up.","pos":[0,87],"nodes":[{"content":"Specifies the field template to use.","pos":[0,36]},{"content":"This parameter affects the field template look up.","pos":[37,87]}]}]},{"pos":[8242,8281],"content":"The virtual path of the field template.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path of the field template.","pos":[0,39]}]},{"pos":[8898,9037],"content":"Associates a <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaModel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with a <bpt id=\"p2\">&lt;xref href=\"System.Web.DynamicData.FieldTemplateFactory\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Associates a <xref href=\"System.Web.DynamicData.MetaModel\"></xref> with a <xref href=\"System.Web.DynamicData.FieldTemplateFactory\"></xref>."},{"pos":[9230,9342],"content":"Specifies the data model to associate with the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.FieldTemplateFactory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Specifies the data model to associate with the <xref href=\"System.Web.DynamicData.FieldTemplateFactory\"></xref>."},{"pos":[9818,9987],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaModel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is associated with the <bpt id=\"p2\">&lt;xref href=\"System.Web.DynamicData.FieldTemplateFactory\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Web.DynamicData.MetaModel\"></xref> that is associated with the <xref href=\"System.Web.DynamicData.FieldTemplateFactory\"></xref> class"},{"pos":[9999,10501],"content":"The <xref:System.Web.DynamicData.MetaModel> class is an abstract class that represents the mapping between a database and domain objects. Dynamic Data provides a set of classes (the data model) that represent the model. The classes are generated through the Object Relational Designer (O/R Designer). You can use the LINQ to SQL Classes template to generate these classes. This property is used to get and set the data model associated with the <xref:System.Web.DynamicData.FieldTemplateFactory> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Web.DynamicData.MetaModel> class is an abstract class that represents the mapping between a database and domain objects. Dynamic Data provides a set of classes (the data model) that represent the model. The classes are generated through the Object Relational Designer (O/R Designer). You can use the LINQ to SQL Classes template to generate these classes. This property is used to get and set the data model associated with the <xref:System.Web.DynamicData.FieldTemplateFactory> class.","pos":[0,502],"nodes":[{"content":"The &lt;xref:System.Web.DynamicData.MetaModel&gt; class is an abstract class that represents the mapping between a database and domain objects.","pos":[0,137],"source":"The <xref:System.Web.DynamicData.MetaModel> class is an abstract class that represents the mapping between a database and domain objects."},{"content":"Dynamic Data provides a set of classes (the data model) that represent the model.","pos":[138,219]},{"content":"The classes are generated through the Object Relational Designer (O/R Designer).","pos":[220,300]},{"content":"You can use the LINQ to SQL Classes template to generate these classes.","pos":[301,372]},{"content":"This property is used to get and set the data model associated with the &lt;xref:System.Web.DynamicData.FieldTemplateFactory&gt; class.","pos":[373,502],"source":" This property is used to get and set the data model associated with the <xref:System.Web.DynamicData.FieldTemplateFactory> class."}]}]},{"pos":[10656,10759],"content":"The model that is associated with the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.FieldTemplateFactory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The model that is associated with the <xref href=\"System.Web.DynamicData.FieldTemplateFactory\"></xref>."},{"pos":[11536,11572],"content":"Changes the mode of the data column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Changes the mode of the data column.","pos":[0,36]}]},{"pos":[11584,11909],"content":"Dynamic Data renders data in Read Only, Insert, or Edits modes. This method controls which mode is rendered in the column. For example, an Edit mode request changes to Read Only if the column is a primary key column. Columns that are automatically generated and foreign keys that are part of the primary key cannot be edited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Dynamic Data renders data in Read Only, Insert, or Edits modes. This method controls which mode is rendered in the column. For example, an Edit mode request changes to Read Only if the column is a primary key column. Columns that are automatically generated and foreign keys that are part of the primary key cannot be edited.","pos":[0,325],"nodes":[{"content":"Dynamic Data renders data in Read Only, Insert, or Edits modes.","pos":[0,63]},{"content":"This method controls which mode is rendered in the column.","pos":[64,122]},{"content":"For example, an Edit mode request changes to Read Only if the column is a primary key column.","pos":[123,216]},{"content":"Columns that are automatically generated and foreign keys that are part of the primary key cannot be edited.","pos":[217,325]}]}]},{"pos":[12205,12255],"content":"The column for which the field template is needed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The column for which the field template is needed.","pos":[0,50]}]},{"pos":[12349,12400],"content":"The mode (Read Only, Edit, or Insert) to change to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The mode (Read Only, Edit, or Insert) to change to.","pos":[0,51]}]},{"pos":[12491,12522],"content":"The mode that a column renders.","needQuote":true,"needEscape":true,"nodes":[{"content":"The mode that a column renders.","pos":[0,31]}]},{"pos":[13102,13162],"content":"Gets or sets the folder in which to create a field template.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the folder in which to create a field template.","pos":[0,60]}]},{"pos":[13174,13621],"content":"The default folder where field templates are created is the /DynamicData/FieldTemplates/. This folder contains the default field templates and custom field templates that you create. If you create and specify a different folder for the field templates, Dynamic Data will create the field templates in the folder you specify. For more information about field templates, see [ASP.NET Dynamic Data Scaffolding](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"The default folder where field templates are created is the /DynamicData/FieldTemplates/.","pos":[0,89]},{"content":"This folder contains the default field templates and custom field templates that you create.","pos":[90,182]},{"content":"If you create and specify a different folder for the field templates, Dynamic Data will create the field templates in the folder you specify.","pos":[183,324]},{"content":"For more information about field templates, see <bpt id=\"p1\">[</bpt>ASP.NET Dynamic Data Scaffolding<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[325,447],"source":" For more information about field templates, see [ASP.NET Dynamic Data Scaffolding](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[13756,13813],"content":"The path to the folder that contains the field templates.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to the folder that contains the field templates.","pos":[0,57]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.DynamicData.FieldTemplateFactory\n  id: FieldTemplateFactory\n  children:\n  - System.Web.DynamicData.FieldTemplateFactory.#ctor\n  - System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)\n  - System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)\n  - System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)\n  - System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)\n  - System.Web.DynamicData.FieldTemplateFactory.Model\n  - System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)\n  - System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath\n  langs:\n  - csharp\n  name: FieldTemplateFactory\n  nameWithType: FieldTemplateFactory\n  fullName: System.Web.DynamicData.FieldTemplateFactory\n  type: Class\n  summary: Creates a field template.\n  remarks: By default, this class implements the <xref:System.Web.DynamicData.IFieldTemplateFactory> interface, and uses the <xref:System.Web.UI.UserControl> class to create field templates.\n  syntax:\n    content: 'public class FieldTemplateFactory : System.Web.DynamicData.IFieldTemplateFactory'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Web.DynamicData.IFieldTemplateFactory\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.FieldTemplateFactory.#ctor\n  id: '#ctor'\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  langs:\n  - csharp\n  name: FieldTemplateFactory()\n  nameWithType: FieldTemplateFactory.FieldTemplateFactory()\n  fullName: System.Web.DynamicData.FieldTemplateFactory.FieldTemplateFactory()\n  type: Constructor\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes an instance of the <xref href=\"System.Web.DynamicData.FieldTemplateFactory\"></xref> class.\n  syntax:\n    content: public FieldTemplateFactory ();\n    parameters: []\n  overload: System.Web.DynamicData.FieldTemplateFactory.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)\n  id: BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  langs:\n  - csharp\n  name: BuildVirtualPath(String,MetaColumn,DataBoundControlMode)\n  nameWithType: FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)\n  fullName: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Builds the virtual path to a field template based on the field template name and the mode.\n  remarks: By default, this method builds the virtual path to a field template by using the template name, appending the mode and then adding a .ascx extension. For example, if `templateName` is MyFieldTemplate and `mode` is Edit, then the virtual path will be MyFieldTemplate_Edit.ascx, in the folder specified by the Template folder virtual path.\n  syntax:\n    content: public virtual string BuildVirtualPath (string templateName, System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);\n    parameters:\n    - id: templateName\n      type: System.String\n      description: The name of the template to use.\n    - id: column\n      type: System.Web.DynamicData.MetaColumn\n      description: Specifies the data column which the field template applies to.\n    - id: mode\n      type: System.Web.UI.WebControls.DataBoundControlMode\n      description: Specifies the display mode of the field template.\n    return:\n      type: System.String\n      description: The virtual path to the field template.\n  overload: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>templateName</code> is null.\n  platform:\n  - net462\n- uid: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)\n  id: CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  langs:\n  - csharp\n  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)\n  nameWithType: FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)\n  fullName: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates an instance of a field template using the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> class, the <xref href=\"System.Web.UI.WebControls.DataBoundControlMode\"></xref> class and <xref:System.Web.DynamicData.MetaColumn.UIHint*> property.\n  syntax:\n    content: public virtual System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);\n    parameters:\n    - id: column\n      type: System.Web.DynamicData.MetaColumn\n      description: Specifies the data column which the field template applies to.\n    - id: mode\n      type: System.Web.UI.WebControls.DataBoundControlMode\n      description: Specifies the display mode of the field template.\n    - id: uiHint\n      type: System.String\n      description: Specifies the field template to use.\n    return:\n      type: System.Web.DynamicData.IFieldTemplate\n      description: An instance of the interface that the <xref href=\"System.Web.DynamicData.FieldTemplateFactory\"></xref> class implements.\n  overload: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)\n  id: GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  langs:\n  - csharp\n  name: GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)\n  nameWithType: FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)\n  fullName: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Determines the virtual path of a field template.\n  remarks: Dynamic Data field templates are created in the DynamicData/FieldTemplates/ folder but you can create a new folder for your field templates. This method determines the virtual path for the folder that contains the field template using the specified parameters.\n  syntax:\n    content: public virtual string GetFieldTemplateVirtualPath (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);\n    parameters:\n    - id: column\n      type: System.Web.DynamicData.MetaColumn\n      description: Specifies the data column which the field template applies to.\n    - id: mode\n      type: System.Web.UI.WebControls.DataBoundControlMode\n      description: Specifies the display mode of the field template-Read Only, Edit, or Insert.\n    - id: uiHint\n      type: System.String\n      description: Specifies the field template to use. This parameter affects the field template look up.\n    return:\n      type: System.String\n      description: The virtual path of the field template.\n  overload: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)\n  id: Initialize(System.Web.DynamicData.MetaModel)\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  langs:\n  - csharp\n  name: Initialize(MetaModel)\n  nameWithType: FieldTemplateFactory.Initialize(MetaModel)\n  fullName: System.Web.DynamicData.FieldTemplateFactory.Initialize(MetaModel)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Associates a <xref href=\"System.Web.DynamicData.MetaModel\"></xref> with a <xref href=\"System.Web.DynamicData.FieldTemplateFactory\"></xref>.\n  syntax:\n    content: public virtual void Initialize (System.Web.DynamicData.MetaModel model);\n    parameters:\n    - id: model\n      type: System.Web.DynamicData.MetaModel\n      description: Specifies the data model to associate with the <xref href=\"System.Web.DynamicData.FieldTemplateFactory\"></xref>.\n  overload: System.Web.DynamicData.FieldTemplateFactory.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.FieldTemplateFactory.Model\n  id: Model\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  langs:\n  - csharp\n  name: Model\n  nameWithType: FieldTemplateFactory.Model\n  fullName: System.Web.DynamicData.FieldTemplateFactory.Model\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets the <xref href=\"System.Web.DynamicData.MetaModel\"></xref> that is associated with the <xref href=\"System.Web.DynamicData.FieldTemplateFactory\"></xref> class\n  remarks: The <xref:System.Web.DynamicData.MetaModel> class is an abstract class that represents the mapping between a database and domain objects. Dynamic Data provides a set of classes (the data model) that represent the model. The classes are generated through the Object Relational Designer (O/R Designer). You can use the LINQ to SQL Classes template to generate these classes. This property is used to get and set the data model associated with the <xref:System.Web.DynamicData.FieldTemplateFactory> class.\n  syntax:\n    content: public System.Web.DynamicData.MetaModel Model { get; }\n    return:\n      type: System.Web.DynamicData.MetaModel\n      description: The model that is associated with the <xref href=\"System.Web.DynamicData.FieldTemplateFactory\"></xref>.\n  overload: System.Web.DynamicData.FieldTemplateFactory.Model*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)\n  id: PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  langs:\n  - csharp\n  name: PreprocessMode(MetaColumn,DataBoundControlMode)\n  nameWithType: FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)\n  fullName: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Changes the mode of the data column.\n  remarks: Dynamic Data renders data in Read Only, Insert, or Edits modes. This method controls which mode is rendered in the column. For example, an Edit mode request changes to Read Only if the column is a primary key column. Columns that are automatically generated and foreign keys that are part of the primary key cannot be edited.\n  syntax:\n    content: public virtual System.Web.UI.WebControls.DataBoundControlMode PreprocessMode (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);\n    parameters:\n    - id: column\n      type: System.Web.DynamicData.MetaColumn\n      description: The column for which the field template is needed.\n    - id: mode\n      type: System.Web.UI.WebControls.DataBoundControlMode\n      description: The mode (Read Only, Edit, or Insert) to change to.\n    return:\n      type: System.Web.UI.WebControls.DataBoundControlMode\n      description: The mode that a column renders.\n  overload: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath\n  id: TemplateFolderVirtualPath\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  langs:\n  - csharp\n  name: TemplateFolderVirtualPath\n  nameWithType: FieldTemplateFactory.TemplateFolderVirtualPath\n  fullName: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets the folder in which to create a field template.\n  remarks: The default folder where field templates are created is the /DynamicData/FieldTemplates/. This folder contains the default field templates and custom field templates that you create. If you create and specify a different folder for the field templates, Dynamic Data will create the field templates in the folder you specify. For more information about field templates, see [ASP.NET Dynamic Data Scaffolding](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public string TemplateFolderVirtualPath { get; set; }\n    return:\n      type: System.String\n      description: The path to the folder that contains the field templates.\n  overload: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.DynamicData.FieldTemplateFactory.#ctor\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  isExternal: false\n  name: FieldTemplateFactory()\n  nameWithType: FieldTemplateFactory.FieldTemplateFactory()\n  fullName: System.Web.DynamicData.FieldTemplateFactory.FieldTemplateFactory()\n- uid: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  isExternal: false\n  name: BuildVirtualPath(String,MetaColumn,DataBoundControlMode)\n  nameWithType: FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)\n  fullName: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.DynamicData.MetaColumn\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaColumn\n  nameWithType: MetaColumn\n  fullName: System.Web.DynamicData.MetaColumn\n- uid: System.Web.UI.WebControls.DataBoundControlMode\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataBoundControlMode\n  nameWithType: DataBoundControlMode\n  fullName: System.Web.UI.WebControls.DataBoundControlMode\n- uid: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  isExternal: false\n  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)\n  nameWithType: FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)\n  fullName: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)\n- uid: System.Web.DynamicData.IFieldTemplate\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: IFieldTemplate\n  nameWithType: IFieldTemplate\n  fullName: System.Web.DynamicData.IFieldTemplate\n- uid: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  isExternal: false\n  name: GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)\n  nameWithType: FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)\n  fullName: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)\n- uid: System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  isExternal: false\n  name: Initialize(MetaModel)\n  nameWithType: FieldTemplateFactory.Initialize(MetaModel)\n  fullName: System.Web.DynamicData.FieldTemplateFactory.Initialize(MetaModel)\n- uid: System.Web.DynamicData.MetaModel\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaModel\n  nameWithType: MetaModel\n  fullName: System.Web.DynamicData.MetaModel\n- uid: System.Web.DynamicData.FieldTemplateFactory.Model\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  isExternal: false\n  name: Model\n  nameWithType: FieldTemplateFactory.Model\n  fullName: System.Web.DynamicData.FieldTemplateFactory.Model\n- uid: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  isExternal: false\n  name: PreprocessMode(MetaColumn,DataBoundControlMode)\n  nameWithType: FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)\n  fullName: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)\n- uid: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  isExternal: false\n  name: TemplateFolderVirtualPath\n  nameWithType: FieldTemplateFactory.TemplateFolderVirtualPath\n  fullName: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath\n- uid: System.Web.DynamicData.FieldTemplateFactory.#ctor*\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  isExternal: false\n  name: FieldTemplateFactory\n  nameWithType: FieldTemplateFactory.FieldTemplateFactory\n- uid: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath*\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  isExternal: false\n  name: BuildVirtualPath\n  nameWithType: FieldTemplateFactory.BuildVirtualPath\n- uid: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate*\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  isExternal: false\n  name: CreateFieldTemplate\n  nameWithType: FieldTemplateFactory.CreateFieldTemplate\n- uid: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath*\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  isExternal: false\n  name: GetFieldTemplateVirtualPath\n  nameWithType: FieldTemplateFactory.GetFieldTemplateVirtualPath\n- uid: System.Web.DynamicData.FieldTemplateFactory.Initialize*\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  isExternal: false\n  name: Initialize\n  nameWithType: FieldTemplateFactory.Initialize\n- uid: System.Web.DynamicData.FieldTemplateFactory.Model*\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  isExternal: false\n  name: Model\n  nameWithType: FieldTemplateFactory.Model\n- uid: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode*\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  isExternal: false\n  name: PreprocessMode\n  nameWithType: FieldTemplateFactory.PreprocessMode\n- uid: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath*\n  parent: System.Web.DynamicData.FieldTemplateFactory\n  isExternal: false\n  name: TemplateFolderVirtualPath\n  nameWithType: FieldTemplateFactory.TemplateFolderVirtualPath\n"}