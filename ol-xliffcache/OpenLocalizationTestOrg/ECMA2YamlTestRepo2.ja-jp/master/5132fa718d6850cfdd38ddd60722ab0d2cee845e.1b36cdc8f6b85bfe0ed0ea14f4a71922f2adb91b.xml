{"nodes":[{"pos":[1167,1239],"content":"A class that manages multiple, named security token handler collections.","needQuote":true,"needEscape":true,"nodes":[{"content":"A class that manages multiple, named security token handler collections.","pos":[0,72]}]},{"pos":[2018,2177],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for the specified named service.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\"></xref> class for the specified named service."},{"pos":[2351,2506],"content":"The name of the associated service. The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName*> property is set to this name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the associated service. The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName*> property is set to this name.","pos":[0,155],"nodes":[{"content":"The name of the associated service.","pos":[0,35]},{"content":"The &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName*&gt; property is set to this name.","pos":[36,155],"source":" The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName*> property is set to this name."}]}]},{"pos":[3167,3269],"content":"Determines whether this instance contains a security token handler collection for the specified usage.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether this instance contains a security token handler collection for the specified usage.","pos":[0,102]}]},{"pos":[3410,3465],"content":"The usage for which to find a token handler collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The usage for which to find a token handler collection.","pos":[0,55]}]},{"pos":[3524,3737],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this instance contains a token handler collection for the specified usage; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this instance contains a token handler collection for the specified usage; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4322,4401],"content":"Gets the number of security token handler collections managed by this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of security token handler collections managed by this instance.","pos":[0,79]}]},{"pos":[4507,4572],"content":"The number of token handler collections managed by this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of token handler collections managed by this instance.","pos":[0,65]}]},{"pos":[5380,5497],"content":"Creates a token handler collection manager with a handler collection that contains the default set of token handlers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a token handler collection manager with a handler collection that contains the default set of token handlers.","pos":[0,117]}]},{"pos":[5509,5589],"content":"The new instance is associated with the default service name from configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new instance is associated with the default service name from configuration.","pos":[0,80]}]},{"pos":[5876,5945],"content":"A manager that contains a collection with the default token handlers.","needQuote":true,"needEscape":true,"nodes":[{"content":"A manager that contains a collection with the default token handlers.","pos":[0,69]}]},{"pos":[6788,6838],"content":"Creates an empty token handler collection manager.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an empty token handler collection manager.","pos":[0,50]}]},{"pos":[7123,7170],"content":"A collection manager that contains no handlers.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection manager that contains no handlers.","pos":[0,47]}]},{"pos":[7841,7911],"content":"Returns the security token handler collection for the specified usage.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the security token handler collection for the specified usage.","pos":[0,70]}]},{"pos":[7923,8028],"content":"An exception is thrown if there is no token handler collection associated with the specified key (usage).","needQuote":true,"needEscape":true,"nodes":[{"content":"An exception is thrown if there is no token handler collection associated with the specified key (usage).","pos":[0,105]}]},{"pos":[8228,8276],"content":"The usage name for the token handler collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The usage name for the token handler collection.","pos":[0,48]}]},{"pos":[8379,8444],"content":"The token handler collection associated with the specified usage.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token handler collection associated with the specified usage.","pos":[0,65]}]},{"pos":[9152,9221],"content":"Gets the security token handler collections managed by this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the security token handler collections managed by this instance.","pos":[0,69]}]},{"pos":[9534,9589],"content":"The token handler collections managed by this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token handler collections managed by this instance.","pos":[0,55]}]},{"pos":[10224,10246],"content":"Gets the service name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the service name.","pos":[0,22]}]},{"pos":[10362,10416],"content":"The name of the service associated with this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the service associated with this instance.","pos":[0,54]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  id: SecurityTokenHandlerCollectionManager\n  children:\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName\n  langs:\n  - csharp\n  name: SecurityTokenHandlerCollectionManager\n  nameWithType: SecurityTokenHandlerCollectionManager\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  type: Class\n  summary: A class that manages multiple, named security token handler collections.\n  syntax:\n    content: public class SecurityTokenHandlerCollectionManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  langs:\n  - csharp\n  name: SecurityTokenHandlerCollectionManager(String)\n  nameWithType: SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollectionManager(String)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollectionManager(String)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\"></xref> class for the specified named service.\n  syntax:\n    content: public SecurityTokenHandlerCollectionManager (string serviceName);\n    parameters:\n    - id: serviceName\n      type: System.String\n      description: The name of the associated service. The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName*> property is set to this name.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey(System.String)\n  id: ContainsKey(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  langs:\n  - csharp\n  name: ContainsKey(String)\n  nameWithType: SecurityTokenHandlerCollectionManager.ContainsKey(String)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Determines whether this instance contains a security token handler collection for the specified usage.\n  syntax:\n    content: public bool ContainsKey (string usage);\n    parameters:\n    - id: usage\n      type: System.String\n      description: The usage for which to find a token handler collection.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this instance contains a token handler collection for the specified usage; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count\n  id: Count\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  langs:\n  - csharp\n  name: Count\n  nameWithType: SecurityTokenHandlerCollectionManager.Count\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the number of security token handler collections managed by this instance.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of token handler collections managed by this instance.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager\n  id: CreateDefaultSecurityTokenHandlerCollectionManager\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  langs:\n  - csharp\n  name: CreateDefaultSecurityTokenHandlerCollectionManager()\n  nameWithType: SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager()\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Creates a token handler collection manager with a handler collection that contains the default set of token handlers.\n  remarks: The new instance is associated with the default service name from configuration.\n  syntax:\n    content: public static System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager CreateDefaultSecurityTokenHandlerCollectionManager ();\n    parameters: []\n    return:\n      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n      description: A manager that contains a collection with the default token handlers.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager\n  id: CreateEmptySecurityTokenHandlerCollectionManager\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  langs:\n  - csharp\n  name: CreateEmptySecurityTokenHandlerCollectionManager()\n  nameWithType: SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager()\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Creates an empty token handler collection manager.\n  syntax:\n    content: public static System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager CreateEmptySecurityTokenHandlerCollectionManager ();\n    parameters: []\n    return:\n      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n      description: A collection manager that contains no handlers.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item(System.String)\n  id: Item(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: SecurityTokenHandlerCollectionManager.Item(String)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item(String)\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns the security token handler collection for the specified usage.\n  remarks: An exception is thrown if there is no token handler collection associated with the specified key (usage).\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityTokenHandlerCollection this[string usage] { get; set; }\n    parameters:\n    - id: usage\n      type: System.String\n      description: The usage name for the token handler collection.\n    return:\n      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n      description: The token handler collection associated with the specified usage.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections\n  id: SecurityTokenHandlerCollections\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  langs:\n  - csharp\n  name: SecurityTokenHandlerCollections\n  nameWithType: SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the security token handler collections managed by this instance.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandlerCollection> SecurityTokenHandlerCollections { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandlerCollection}\n      description: The token handler collections managed by this instance.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName\n  id: ServiceName\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  langs:\n  - csharp\n  name: ServiceName\n  nameWithType: SecurityTokenHandlerCollectionManager.ServiceName\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the service name.\n  syntax:\n    content: public string ServiceName { get; }\n    return:\n      type: System.String\n      description: The name of the service associated with this instance.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  isExternal: false\n  name: SecurityTokenHandlerCollectionManager(String)\n  nameWithType: SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollectionManager(String)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollectionManager(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  isExternal: false\n  name: ContainsKey(String)\n  nameWithType: SecurityTokenHandlerCollectionManager.ContainsKey(String)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  isExternal: false\n  name: Count\n  nameWithType: SecurityTokenHandlerCollectionManager.Count\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  isExternal: false\n  name: CreateDefaultSecurityTokenHandlerCollectionManager()\n  nameWithType: SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager()\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager()\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenHandlerCollectionManager\n  nameWithType: SecurityTokenHandlerCollectionManager\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  isExternal: false\n  name: CreateEmptySecurityTokenHandlerCollectionManager()\n  nameWithType: SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager()\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager()\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  isExternal: false\n  name: Item(String)\n  nameWithType: SecurityTokenHandlerCollectionManager.Item(String)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item(String)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenHandlerCollection\n  nameWithType: SecurityTokenHandlerCollection\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  isExternal: false\n  name: SecurityTokenHandlerCollections\n  nameWithType: SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections\n- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandlerCollection}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<SecurityTokenHandlerCollection>\n  nameWithType: IEnumerable<SecurityTokenHandlerCollection>\n  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandlerCollection>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandlerCollection>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n    name: SecurityTokenHandlerCollection\n    nameWithType: SecurityTokenHandlerCollection\n    fullName: SecurityTokenHandlerCollection\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  isExternal: false\n  name: ServiceName\n  nameWithType: SecurityTokenHandlerCollectionManager.ServiceName\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  isExternal: false\n  name: SecurityTokenHandlerCollectionManager\n  nameWithType: SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollectionManager\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  isExternal: false\n  name: ContainsKey\n  nameWithType: SecurityTokenHandlerCollectionManager.ContainsKey\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  isExternal: false\n  name: Count\n  nameWithType: SecurityTokenHandlerCollectionManager.Count\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  isExternal: false\n  name: CreateDefaultSecurityTokenHandlerCollectionManager\n  nameWithType: SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  isExternal: false\n  name: CreateEmptySecurityTokenHandlerCollectionManager\n  nameWithType: SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  isExternal: false\n  name: Item\n  nameWithType: SecurityTokenHandlerCollectionManager.Item\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  isExternal: false\n  name: SecurityTokenHandlerCollections\n  nameWithType: SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  isExternal: false\n  name: ServiceName\n  nameWithType: SecurityTokenHandlerCollectionManager.ServiceName\n"}