{"nodes":[{"pos":[799,898],"content":"Represents a configuration element that is used in message logging. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a configuration element that is used in message logging. This class cannot be inherited.","pos":[0,99],"nodes":[{"content":"Represents a configuration element that is used in message logging.","pos":[0,67]},{"content":"This class cannot be inherited.","pos":[68,99]}]}]},{"pos":[911,1679],"content":"An XPath filter is a query on an XML document defined by an XPath 1.0 expression.       XPath filters can be added to the `messageLogging` section to log specific messages at the transport and service levels. If no filters are defined, all messages are logged. Filters are applied only to the headers of the message. The body is ignored. [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] ignores the message body to improve performance. If you want to filter based on the content of the body, you can create a custom listener with a filter that does so.       When transport message logging is enabled (<xref:System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel%2A> is `true`), only messages matching the filters are logged.","needQuote":false,"needEscape":true,"nodes":[{"content":"An XPath filter is a query on an XML document defined by an XPath 1.0 expression.","pos":[0,81]},{"content":"XPath filters can be added to the <ph id=\"ph1\">`messageLogging`</ph> section to log specific messages at the transport and service levels.","pos":[88,208],"source":"       XPath filters can be added to the `messageLogging` section to log specific messages at the transport and service levels."},{"content":"If no filters are defined, all messages are logged.","pos":[209,260]},{"content":"Filters are applied only to the headers of the message.","pos":[261,316]},{"content":"The body is ignored.","pos":[317,337]},{"content":"<ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> ignores the message body to improve performance.","pos":[338,445],"source":"[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] ignores the message body to improve performance."},{"content":"If you want to filter based on the content of the body, you can create a custom listener with a filter that does so.","pos":[446,562]},{"content":"When transport message logging is enabled (&lt;xref:System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel%2A&gt; is <ph id=\"ph1\">`true`</ph>), only messages matching the filters are logged.","pos":[569,764],"source":"       When transport message logging is enabled (<xref:System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel%2A> is `true`), only messages matching the filters are logged."}]},{"pos":[4924,5045],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.XPathMessageFilterElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.XPathMessageFilterElement\"></xref> class."},{"pos":[6066,6078],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6158,6170],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6736,6774],"content":"Gets or sets the XPath filter defined.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the XPath filter defined.","pos":[0,38]}]},{"pos":[6969,6994],"content":"The XPath filter defined.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XPath filter defined.","pos":[0,25]}]},{"pos":[7768,7780],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8731,8743],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8811,8823],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8882,8894],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElement\n  id: XPathMessageFilterElement\n  children:\n  - System.ServiceModel.Configuration.XPathMessageFilterElement.#ctor\n  - System.ServiceModel.Configuration.XPathMessageFilterElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.ServiceModel.Configuration.XPathMessageFilterElement.Filter\n  - System.ServiceModel.Configuration.XPathMessageFilterElement.Properties\n  - System.ServiceModel.Configuration.XPathMessageFilterElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  langs:\n  - csharp\n  name: XPathMessageFilterElement\n  nameWithType: XPathMessageFilterElement\n  fullName: System.ServiceModel.Configuration.XPathMessageFilterElement\n  type: Class\n  summary: Represents a configuration element that is used in message logging. This class cannot be inherited.\n  remarks: \"An XPath filter is a query on an XML document defined by an XPath 1.0 expression.  \\n  \\n XPath filters can be added to the `messageLogging` section to log specific messages at the transport and service levels. If no filters are defined, all messages are logged. Filters are applied only to the headers of the message. The body is ignored. [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] ignores the message body to improve performance. If you want to filter based on the content of the body, you can create a custom listener with a filter that does so.  \\n  \\n When transport message logging is enabled (<xref:System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel%2A> is `true`), only messages matching the filters are logged.\"\n  syntax:\n    content: 'public sealed class XPathMessageFilterElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.XPathMessageFilterElement\n  langs:\n  - csharp\n  name: XPathMessageFilterElement()\n  nameWithType: XPathMessageFilterElement.XPathMessageFilterElement()\n  fullName: System.ServiceModel.Configuration.XPathMessageFilterElement.XPathMessageFilterElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.XPathMessageFilterElement\"></xref> class.\n  syntax:\n    content: public XPathMessageFilterElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.XPathMessageFilterElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  id: DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.ServiceModel.Configuration.XPathMessageFilterElement\n  langs:\n  - csharp\n  name: DeserializeElement(XmlReader,Boolean)\n  nameWithType: XPathMessageFilterElement.DeserializeElement(XmlReader,Boolean)\n  fullName: System.ServiceModel.Configuration.XPathMessageFilterElement.DeserializeElement(XmlReader,Boolean)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override void DeserializeElement (System.Xml.XmlReader reader, bool serializeCollectionKey);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: To be added.\n    - id: serializeCollectionKey\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Configuration.XPathMessageFilterElement.DeserializeElement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElement.Filter\n  id: Filter\n  parent: System.ServiceModel.Configuration.XPathMessageFilterElement\n  langs:\n  - csharp\n  name: Filter\n  nameWithType: XPathMessageFilterElement.Filter\n  fullName: System.ServiceModel.Configuration.XPathMessageFilterElement.Filter\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the XPath filter defined.\n  syntax:\n    content: public System.ServiceModel.Dispatcher.XPathMessageFilter Filter { get; set; }\n    return:\n      type: System.ServiceModel.Dispatcher.XPathMessageFilter\n      description: The XPath filter defined.\n  overload: System.ServiceModel.Configuration.XPathMessageFilterElement.Filter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.XPathMessageFilterElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: XPathMessageFilterElement.Properties\n  fullName: System.ServiceModel.Configuration.XPathMessageFilterElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.ServiceModel.Configuration.XPathMessageFilterElement.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  id: SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.ServiceModel.Configuration.XPathMessageFilterElement\n  langs:\n  - csharp\n  name: SerializeToXmlElement(XmlWriter,String)\n  nameWithType: XPathMessageFilterElement.SerializeToXmlElement(XmlWriter,String)\n  fullName: System.ServiceModel.Configuration.XPathMessageFilterElement.SerializeToXmlElement(XmlWriter,String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override bool SerializeToXmlElement (System.Xml.XmlWriter writer, string elementName);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: To be added.\n    - id: elementName\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Configuration.XPathMessageFilterElement.SerializeToXmlElement*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElement.#ctor\n  parent: System.ServiceModel.Configuration.XPathMessageFilterElement\n  isExternal: false\n  name: XPathMessageFilterElement()\n  nameWithType: XPathMessageFilterElement.XPathMessageFilterElement()\n  fullName: System.ServiceModel.Configuration.XPathMessageFilterElement.XPathMessageFilterElement()\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.ServiceModel.Configuration.XPathMessageFilterElement\n  isExternal: false\n  name: DeserializeElement(XmlReader,Boolean)\n  nameWithType: XPathMessageFilterElement.DeserializeElement(XmlReader,Boolean)\n  fullName: System.ServiceModel.Configuration.XPathMessageFilterElement.DeserializeElement(XmlReader,Boolean)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElement.Filter\n  parent: System.ServiceModel.Configuration.XPathMessageFilterElement\n  isExternal: false\n  name: Filter\n  nameWithType: XPathMessageFilterElement.Filter\n  fullName: System.ServiceModel.Configuration.XPathMessageFilterElement.Filter\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilter\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: XPathMessageFilter\n  nameWithType: XPathMessageFilter\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilter\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElement.Properties\n  parent: System.ServiceModel.Configuration.XPathMessageFilterElement\n  isExternal: false\n  name: Properties\n  nameWithType: XPathMessageFilterElement.Properties\n  fullName: System.ServiceModel.Configuration.XPathMessageFilterElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.ServiceModel.Configuration.XPathMessageFilterElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter,String)\n  nameWithType: XPathMessageFilterElement.SerializeToXmlElement(XmlWriter,String)\n  fullName: System.ServiceModel.Configuration.XPathMessageFilterElement.SerializeToXmlElement(XmlWriter,String)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElement.#ctor*\n  parent: System.ServiceModel.Configuration.XPathMessageFilterElement\n  isExternal: false\n  name: XPathMessageFilterElement\n  nameWithType: XPathMessageFilterElement.XPathMessageFilterElement\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElement.DeserializeElement*\n  parent: System.ServiceModel.Configuration.XPathMessageFilterElement\n  isExternal: false\n  name: DeserializeElement\n  nameWithType: XPathMessageFilterElement.DeserializeElement\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElement.Filter*\n  parent: System.ServiceModel.Configuration.XPathMessageFilterElement\n  isExternal: false\n  name: Filter\n  nameWithType: XPathMessageFilterElement.Filter\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElement.Properties*\n  parent: System.ServiceModel.Configuration.XPathMessageFilterElement\n  isExternal: false\n  name: Properties\n  nameWithType: XPathMessageFilterElement.Properties\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElement.SerializeToXmlElement*\n  parent: System.ServiceModel.Configuration.XPathMessageFilterElement\n  isExternal: false\n  name: SerializeToXmlElement\n  nameWithType: XPathMessageFilterElement.SerializeToXmlElement\n"}