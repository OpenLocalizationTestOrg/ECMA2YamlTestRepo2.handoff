{"nodes":[{"pos":[1065,1167],"content":"Provides a strongly typed collection of <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessThread\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Provides a strongly typed collection of <xref href=\"System.Diagnostics.ProcessThread\"></xref> objects."},{"pos":[2282,2470],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessThreadCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, with no associated <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.ProcessThread\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.ProcessThreadCollection\"></xref> class, with no associated <xref href=\"System.Diagnostics.ProcessThread\"></xref> instances."},{"pos":[3182,3380],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessThreadCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, using the specified array of <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.ProcessThread\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.ProcessThreadCollection\"></xref> class, using the specified array of <xref href=\"System.Diagnostics.ProcessThread\"></xref> instances."},{"pos":[3595,3774],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessThread\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances with which to initialize this <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.ProcessThreadCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Diagnostics.ProcessThread\"></xref> instances with which to initialize this <xref href=\"System.Diagnostics.ProcessThreadCollection\"></xref> instance."},{"pos":[4325,4368],"content":"Appends a process thread to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Appends a process thread to the collection.","pos":[0,43]}]},{"pos":[4547,4583],"content":"The thread to add to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The thread to add to the collection.","pos":[0,36]}]},{"pos":[4640,4693],"content":"The zero-based index of the thread in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the thread in the collection.","pos":[0,53]}]},{"pos":[5267,5340],"content":"Determines whether the specified process thread exists in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified process thread exists in the collection.","pos":[0,73]}]},{"pos":[5352,5428],"content":"A module is identified by its module name and its fully qualified file path.","needQuote":true,"needEscape":true,"nodes":[{"content":"A module is identified by its module name and its fully qualified file path.","pos":[0,76]}]},{"pos":[5613,5731],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessThread\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that indicates the thread to find in this collection.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.ProcessThread\"></xref> instance that indicates the thread to find in this collection."},{"pos":[5790,5965],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the thread exists in the collection; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the thread exists in the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6588,6713],"content":"Copies an array of <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessThread\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances to the collection, at the specified index.","needQuote":true,"needEscape":true,"source":"Copies an array of <xref href=\"System.Diagnostics.ProcessThread\"></xref> instances to the collection, at the specified index."},{"pos":[6909,7010],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessThread\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances to add to the collection.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Diagnostics.ProcessThread\"></xref> instances to add to the collection."},{"pos":[7071,7118],"content":"The location at which to add the new instances.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location at which to add the new instances.","pos":[0,47]}]},{"pos":[7690,7756],"content":"Provides the location of a specified thread within the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the location of a specified thread within the collection.","pos":[0,66]}]},{"pos":[7939,8022],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessThread\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose index is retrieved.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Diagnostics.ProcessThread\"></xref> whose index is retrieved."},{"pos":[8079,8215],"content":"The zero-based index that defines the location of the thread within the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessThreadCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The zero-based index that defines the location of the thread within the <xref href=\"System.Diagnostics.ProcessThreadCollection\"></xref>."},{"pos":[8827,8896],"content":"Inserts a process thread at the specified location in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inserts a process thread at the specified location in the collection.","pos":[0,69]}]},{"pos":[9069,9144],"content":"The zero-based index indicating the location at which to insert the thread.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index indicating the location at which to insert the thread.","pos":[0,75]}]},{"pos":[9226,9267],"content":"The thread to insert into the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The thread to insert into the collection.","pos":[0,41]}]},{"pos":[9762,9822],"content":"Gets an index for iterating over the set of process threads.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an index for iterating over the set of process threads.","pos":[0,60]}]},{"pos":[9987,10046],"content":"The zero-based index value of the thread in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index value of the thread in the collection.","pos":[0,59]}]},{"pos":[10123,10222],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessThread\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indexes the threads in the collection.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.ProcessThread\"></xref> that indexes the threads in the collection."},{"pos":[10787,10832],"content":"Deletes a process thread from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes a process thread from the collection.","pos":[0,45]}]},{"pos":[11015,11056],"content":"The thread to remove from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The thread to remove from the collection.","pos":[0,41]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.ProcessThreadCollection\n  id: ProcessThreadCollection\n  children:\n  - System.Diagnostics.ProcessThreadCollection.#ctor\n  - System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])\n  - System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)\n  - System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)\n  - System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)\n  - System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)\n  - System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)\n  - System.Diagnostics.ProcessThreadCollection.Item(System.Int32)\n  - System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)\n  langs:\n  - csharp\n  name: ProcessThreadCollection\n  nameWithType: ProcessThreadCollection\n  fullName: System.Diagnostics.ProcessThreadCollection\n  type: Class\n  summary: Provides a strongly typed collection of <xref href=\"System.Diagnostics.ProcessThread\"></xref> objects.\n  syntax:\n    content: 'public class ProcessThreadCollection : System.Collections.ReadOnlyCollectionBase'\n  inheritance:\n  - System.Object\n  - System.Collections.ReadOnlyCollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.ReadOnlyCollectionBase.Count\n  - System.Collections.ReadOnlyCollectionBase.GetEnumerator\n  - System.Collections.ReadOnlyCollectionBase.InnerList\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot\n  platform:\n  - net462\n- uid: System.Diagnostics.ProcessThreadCollection.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.ProcessThreadCollection\n  langs:\n  - csharp\n  name: ProcessThreadCollection()\n  nameWithType: ProcessThreadCollection.ProcessThreadCollection()\n  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.ProcessThreadCollection\"></xref> class, with no associated <xref href=\"System.Diagnostics.ProcessThread\"></xref> instances.\n  syntax:\n    content: protected ProcessThreadCollection ();\n    parameters: []\n  overload: System.Diagnostics.ProcessThreadCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])\n  id: '#ctor(System.Diagnostics.ProcessThread[])'\n  parent: System.Diagnostics.ProcessThreadCollection\n  langs:\n  - csharp\n  name: ProcessThreadCollection(ProcessThread[])\n  nameWithType: ProcessThreadCollection.ProcessThreadCollection(ProcessThread[])\n  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection(ProcessThread[])\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.ProcessThreadCollection\"></xref> class, using the specified array of <xref href=\"System.Diagnostics.ProcessThread\"></xref> instances.\n  syntax:\n    content: public ProcessThreadCollection (System.Diagnostics.ProcessThread[] processThreads);\n    parameters:\n    - id: processThreads\n      type: System.Diagnostics.ProcessThread[]\n      description: An array of <xref href=\"System.Diagnostics.ProcessThread\"></xref> instances with which to initialize this <xref href=\"System.Diagnostics.ProcessThreadCollection\"></xref> instance.\n  overload: System.Diagnostics.ProcessThreadCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)\n  id: Add(System.Diagnostics.ProcessThread)\n  parent: System.Diagnostics.ProcessThreadCollection\n  langs:\n  - csharp\n  name: Add(ProcessThread)\n  nameWithType: ProcessThreadCollection.Add(ProcessThread)\n  fullName: System.Diagnostics.ProcessThreadCollection.Add(ProcessThread)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Appends a process thread to the collection.\n  syntax:\n    content: public int Add (System.Diagnostics.ProcessThread thread);\n    parameters:\n    - id: thread\n      type: System.Diagnostics.ProcessThread\n      description: The thread to add to the collection.\n    return:\n      type: System.Int32\n      description: The zero-based index of the thread in the collection.\n  overload: System.Diagnostics.ProcessThreadCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)\n  id: Contains(System.Diagnostics.ProcessThread)\n  parent: System.Diagnostics.ProcessThreadCollection\n  langs:\n  - csharp\n  name: Contains(ProcessThread)\n  nameWithType: ProcessThreadCollection.Contains(ProcessThread)\n  fullName: System.Diagnostics.ProcessThreadCollection.Contains(ProcessThread)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Determines whether the specified process thread exists in the collection.\n  remarks: A module is identified by its module name and its fully qualified file path.\n  syntax:\n    content: public bool Contains (System.Diagnostics.ProcessThread thread);\n    parameters:\n    - id: thread\n      type: System.Diagnostics.ProcessThread\n      description: A <xref href=\"System.Diagnostics.ProcessThread\"></xref> instance that indicates the thread to find in this collection.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the thread exists in the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.ProcessThreadCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)\n  id: CopyTo(System.Diagnostics.ProcessThread[],System.Int32)\n  parent: System.Diagnostics.ProcessThreadCollection\n  langs:\n  - csharp\n  name: CopyTo(ProcessThread[],Int32)\n  nameWithType: ProcessThreadCollection.CopyTo(ProcessThread[],Int32)\n  fullName: System.Diagnostics.ProcessThreadCollection.CopyTo(ProcessThread[],Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Copies an array of <xref href=\"System.Diagnostics.ProcessThread\"></xref> instances to the collection, at the specified index.\n  syntax:\n    content: public void CopyTo (System.Diagnostics.ProcessThread[] array, int index);\n    parameters:\n    - id: array\n      type: System.Diagnostics.ProcessThread[]\n      description: An array of <xref href=\"System.Diagnostics.ProcessThread\"></xref> instances to add to the collection.\n    - id: index\n      type: System.Int32\n      description: The location at which to add the new instances.\n  overload: System.Diagnostics.ProcessThreadCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)\n  id: IndexOf(System.Diagnostics.ProcessThread)\n  parent: System.Diagnostics.ProcessThreadCollection\n  langs:\n  - csharp\n  name: IndexOf(ProcessThread)\n  nameWithType: ProcessThreadCollection.IndexOf(ProcessThread)\n  fullName: System.Diagnostics.ProcessThreadCollection.IndexOf(ProcessThread)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Provides the location of a specified thread within the collection.\n  syntax:\n    content: public int IndexOf (System.Diagnostics.ProcessThread thread);\n    parameters:\n    - id: thread\n      type: System.Diagnostics.ProcessThread\n      description: The <xref href=\"System.Diagnostics.ProcessThread\"></xref> whose index is retrieved.\n    return:\n      type: System.Int32\n      description: The zero-based index that defines the location of the thread within the <xref href=\"System.Diagnostics.ProcessThreadCollection\"></xref>.\n  overload: System.Diagnostics.ProcessThreadCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)\n  id: Insert(System.Int32,System.Diagnostics.ProcessThread)\n  parent: System.Diagnostics.ProcessThreadCollection\n  langs:\n  - csharp\n  name: Insert(Int32,ProcessThread)\n  nameWithType: ProcessThreadCollection.Insert(Int32,ProcessThread)\n  fullName: System.Diagnostics.ProcessThreadCollection.Insert(Int32,ProcessThread)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Inserts a process thread at the specified location in the collection.\n  syntax:\n    content: public void Insert (int index, System.Diagnostics.ProcessThread thread);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index indicating the location at which to insert the thread.\n    - id: thread\n      type: System.Diagnostics.ProcessThread\n      description: The thread to insert into the collection.\n  overload: System.Diagnostics.ProcessThreadCollection.Insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.ProcessThreadCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Diagnostics.ProcessThreadCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ProcessThreadCollection.Item(Int32)\n  fullName: System.Diagnostics.ProcessThreadCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets an index for iterating over the set of process threads.\n  syntax:\n    content: public System.Diagnostics.ProcessThread this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index value of the thread in the collection.\n    return:\n      type: System.Diagnostics.ProcessThread\n      description: A <xref href=\"System.Diagnostics.ProcessThread\"></xref> that indexes the threads in the collection.\n  overload: System.Diagnostics.ProcessThreadCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)\n  id: Remove(System.Diagnostics.ProcessThread)\n  parent: System.Diagnostics.ProcessThreadCollection\n  langs:\n  - csharp\n  name: Remove(ProcessThread)\n  nameWithType: ProcessThreadCollection.Remove(ProcessThread)\n  fullName: System.Diagnostics.ProcessThreadCollection.Remove(ProcessThread)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Deletes a process thread from the collection.\n  syntax:\n    content: public void Remove (System.Diagnostics.ProcessThread thread);\n    parameters:\n    - id: thread\n      type: System.Diagnostics.ProcessThread\n      description: The thread to remove from the collection.\n  overload: System.Diagnostics.ProcessThreadCollection.Remove*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.ReadOnlyCollectionBase\n  isExternal: false\n  name: System.Collections.ReadOnlyCollectionBase\n- uid: System.Diagnostics.ProcessThreadCollection.#ctor\n  parent: System.Diagnostics.ProcessThreadCollection\n  isExternal: false\n  name: ProcessThreadCollection()\n  nameWithType: ProcessThreadCollection.ProcessThreadCollection()\n  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection()\n- uid: System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])\n  parent: System.Diagnostics.ProcessThreadCollection\n  isExternal: false\n  name: ProcessThreadCollection(ProcessThread[])\n  nameWithType: ProcessThreadCollection.ProcessThreadCollection(ProcessThread[])\n  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection(ProcessThread[])\n- uid: System.Diagnostics.ProcessThread[]\n  parent: System.Diagnostics\n  isExternal: false\n  name: ProcessThread\n  nameWithType: ProcessThread\n  fullName: System.Diagnostics.ProcessThread[]\n  spec.csharp:\n  - uid: System.Diagnostics.ProcessThread\n    name: ProcessThread\n    nameWithType: ProcessThread\n    fullName: ProcessThread[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)\n  parent: System.Diagnostics.ProcessThreadCollection\n  isExternal: false\n  name: Add(ProcessThread)\n  nameWithType: ProcessThreadCollection.Add(ProcessThread)\n  fullName: System.Diagnostics.ProcessThreadCollection.Add(ProcessThread)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.ProcessThread\n  parent: System.Diagnostics\n  isExternal: false\n  name: ProcessThread\n  nameWithType: ProcessThread\n  fullName: System.Diagnostics.ProcessThread\n- uid: System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)\n  parent: System.Diagnostics.ProcessThreadCollection\n  isExternal: false\n  name: Contains(ProcessThread)\n  nameWithType: ProcessThreadCollection.Contains(ProcessThread)\n  fullName: System.Diagnostics.ProcessThreadCollection.Contains(ProcessThread)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)\n  parent: System.Diagnostics.ProcessThreadCollection\n  isExternal: false\n  name: CopyTo(ProcessThread[],Int32)\n  nameWithType: ProcessThreadCollection.CopyTo(ProcessThread[],Int32)\n  fullName: System.Diagnostics.ProcessThreadCollection.CopyTo(ProcessThread[],Int32)\n- uid: System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)\n  parent: System.Diagnostics.ProcessThreadCollection\n  isExternal: false\n  name: IndexOf(ProcessThread)\n  nameWithType: ProcessThreadCollection.IndexOf(ProcessThread)\n  fullName: System.Diagnostics.ProcessThreadCollection.IndexOf(ProcessThread)\n- uid: System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)\n  parent: System.Diagnostics.ProcessThreadCollection\n  isExternal: false\n  name: Insert(Int32,ProcessThread)\n  nameWithType: ProcessThreadCollection.Insert(Int32,ProcessThread)\n  fullName: System.Diagnostics.ProcessThreadCollection.Insert(Int32,ProcessThread)\n- uid: System.Diagnostics.ProcessThreadCollection.Item(System.Int32)\n  parent: System.Diagnostics.ProcessThreadCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ProcessThreadCollection.Item(Int32)\n  fullName: System.Diagnostics.ProcessThreadCollection.Item(Int32)\n- uid: System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)\n  parent: System.Diagnostics.ProcessThreadCollection\n  isExternal: false\n  name: Remove(ProcessThread)\n  nameWithType: ProcessThreadCollection.Remove(ProcessThread)\n  fullName: System.Diagnostics.ProcessThreadCollection.Remove(ProcessThread)\n- uid: System.Diagnostics.ProcessThreadCollection.#ctor*\n  parent: System.Diagnostics.ProcessThreadCollection\n  isExternal: false\n  name: ProcessThreadCollection\n  nameWithType: ProcessThreadCollection.ProcessThreadCollection\n- uid: System.Diagnostics.ProcessThreadCollection.Add*\n  parent: System.Diagnostics.ProcessThreadCollection\n  isExternal: false\n  name: Add\n  nameWithType: ProcessThreadCollection.Add\n- uid: System.Diagnostics.ProcessThreadCollection.Contains*\n  parent: System.Diagnostics.ProcessThreadCollection\n  isExternal: false\n  name: Contains\n  nameWithType: ProcessThreadCollection.Contains\n- uid: System.Diagnostics.ProcessThreadCollection.CopyTo*\n  parent: System.Diagnostics.ProcessThreadCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: ProcessThreadCollection.CopyTo\n- uid: System.Diagnostics.ProcessThreadCollection.IndexOf*\n  parent: System.Diagnostics.ProcessThreadCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: ProcessThreadCollection.IndexOf\n- uid: System.Diagnostics.ProcessThreadCollection.Insert*\n  parent: System.Diagnostics.ProcessThreadCollection\n  isExternal: false\n  name: Insert\n  nameWithType: ProcessThreadCollection.Insert\n- uid: System.Diagnostics.ProcessThreadCollection.Item*\n  parent: System.Diagnostics.ProcessThreadCollection\n  isExternal: false\n  name: Item\n  nameWithType: ProcessThreadCollection.Item\n- uid: System.Diagnostics.ProcessThreadCollection.Remove*\n  parent: System.Diagnostics.ProcessThreadCollection\n  isExternal: false\n  name: Remove\n  nameWithType: ProcessThreadCollection.Remove\n"}