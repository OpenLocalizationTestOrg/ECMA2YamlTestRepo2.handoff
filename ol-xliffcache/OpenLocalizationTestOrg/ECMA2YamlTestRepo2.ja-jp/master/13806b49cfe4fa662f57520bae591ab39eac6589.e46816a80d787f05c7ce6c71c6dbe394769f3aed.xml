{"nodes":[{"pos":[1278,1373],"content":"Provides additional information about a cryptographic key pair. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides additional information about a cryptographic key pair. This class cannot be inherited.","pos":[0,95],"nodes":[{"content":"Provides additional information about a cryptographic key pair.","pos":[0,63]},{"content":"This class cannot be inherited.","pos":[64,95]}]}]},{"pos":[1386,1929],"content":"Use this class to obtain additional information about a key pair, such as the key container name or the key number.       In cases where a random key is generated by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> or the <xref:System.Security.Cryptography.DSACryptoServiceProvider>, a key container will not be created until you call a method that uses the key.  Some properties of the CspKeyContainerInfo class will throw a <xref:System.Security.Cryptography.CryptographicException> if a key container has not been created.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use this class to obtain additional information about a key pair, such as the key container name or the key number.       In cases where a random key is generated by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> or the <xref:System.Security.Cryptography.DSACryptoServiceProvider>, a key container will not be created until you call a method that uses the key.  Some properties of the CspKeyContainerInfo class will throw a <xref:System.Security.Cryptography.CryptographicException> if a key container has not been created.","pos":[0,541],"nodes":[{"content":"Use this class to obtain additional information about a key pair, such as the key container name or the key number.","pos":[0,115]},{"content":"In cases where a random key is generated by the &lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt; or the &lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;, a key container will not be created until you call a method that uses the key.","pos":[122,378],"source":"       In cases where a random key is generated by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> or the <xref:System.Security.Cryptography.DSACryptoServiceProvider>, a key container will not be created until you call a method that uses the key."},{"content":"Some properties of the CspKeyContainerInfo class will throw a &lt;xref:System.Security.Cryptography.CryptographicException&gt; if a key container has not been created.","pos":[380,541],"source":"  Some properties of the CspKeyContainerInfo class will throw a <xref:System.Security.Cryptography.CryptographicException> if a key container has not been created."}]}]},{"pos":[3234,3375],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CspKeyContainerInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified parameters.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.CspKeyContainerInfo\"></xref> class using the specified parameters."},{"pos":[4124,4237],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CspParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that provides information about the key.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Cryptography.CspParameters\"></xref> object that provides information about the key."},{"pos":[4744,4815],"content":"Gets a value indicating whether a key in a key container is accessible.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether a key in a key container is accessible.","pos":[0,71]}]},{"pos":[5468,5629],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key is accessible; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key is accessible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5819,5849],"content":"The key type is not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key type is not supported.","pos":[0,30]}]},{"pos":[6306,6451],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents access rights and audit rules for a container.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object that represents access rights and audit rules for a container."},{"pos":[6463,6743],"content":"Use the <xref:System.Security.Cryptography.CspKeyContainerInfo> property to retrieve the  <xref:System.Security.AccessControl.CryptoKeySecurity> object that manages the creation of discretionary access control lists (DACLS) and system access control lists (SACLS) for a container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the &lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt; property to retrieve the  &lt;xref:System.Security.AccessControl.CryptoKeySecurity&gt; object that manages the creation of discretionary access control lists (DACLS) and system access control lists (SACLS) for a container.","pos":[0,280],"source":"Use the <xref:System.Security.Cryptography.CspKeyContainerInfo> property to retrieve the  <xref:System.Security.AccessControl.CryptoKeySecurity> object that manages the creation of discretionary access control lists (DACLS) and system access control lists (SACLS) for a container."}]},{"pos":[6940,7080],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents access rights and audit rules for a container.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object that represents access rights and audit rules for a container."},{"pos":[7323,7353],"content":"The key type is not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key type is not supported.","pos":[0,30]}]},{"pos":[7457,7562],"content":"The cryptographic service provider cannot be found.       -or-       The key container was not found.","needQuote":false,"needEscape":true,"nodes":[{"content":"The cryptographic service provider cannot be found.       -or-       The key container was not found.","pos":[0,101],"nodes":[{"content":"The cryptographic service provider cannot be found.","pos":[0,51]},{"content":"-or-       The key container was not found.","pos":[58,101]}]}]},{"pos":[7985,8060],"content":"Gets a value indicating whether a key can be exported from a key container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether a key can be exported from a key container.","pos":[0,75]}]},{"pos":[8716,8879],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key can be exported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key can be exported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9069,9099],"content":"The key type is not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key type is not supported.","pos":[0,30]}]},{"pos":[9249,9354],"content":"The cryptographic service provider cannot be found.       -or-       The key container was not found.","needQuote":false,"needEscape":true,"nodes":[{"content":"The cryptographic service provider cannot be found.       -or-       The key container was not found.","pos":[0,101],"nodes":[{"content":"The cryptographic service provider cannot be found.","pos":[0,51]},{"content":"-or-       The key container was not found.","pos":[58,101]}]}]},{"pos":[9797,9853],"content":"Gets a value indicating whether a key is a hardware key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether a key is a hardware key.","pos":[0,56]}]},{"pos":[10510,10675],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key is a hardware key; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key is a hardware key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10915,10966],"content":"The cryptographic service provider cannot be found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cryptographic service provider cannot be found.","pos":[0,51]}]},{"pos":[11418,11444],"content":"Gets a key container name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a key container name.","pos":[0,26]}]},{"pos":[12104,12127],"content":"The key container name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key container name.","pos":[0,23]}]},{"pos":[12640,12744],"content":"Gets a value that describes whether an asymmetric key was created as a signature key or an exchange key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that describes whether an asymmetric key was created as a signature key or an exchange key.","pos":[0,104]}]},{"pos":[12757,13641],"content":"The value of the KeyNumber property is derived from the <xref:System.Security.Cryptography.CspParameters.KeyNumber> field of the <xref:System.Security.Cryptography.CspParameters> object that was used to initialize the <xref:System.Security.Cryptography.CspKeyContainerInfo> object.       An exchange key is an asymmetric key pair used to encrypt session keys so that they can be safely stored and exchanged with other users.  The <xref:System.Security.Cryptography.KeyNumber> value specifies an exchange key.  This value corresponds to the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).       A signature key is an asymmetric key pair used for authenticating (digitally signed) messages or files.  The <xref:System.Security.Cryptography.KeyNumber> value specifies a signature key.  This value corresponds to the `AT_SIGNATURE` value used in CAPI.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the KeyNumber property is derived from the &lt;xref:System.Security.Cryptography.CspParameters.KeyNumber&gt; field of the &lt;xref:System.Security.Cryptography.CspParameters&gt; object that was used to initialize the &lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt; object.","pos":[0,281],"source":"The value of the KeyNumber property is derived from the <xref:System.Security.Cryptography.CspParameters.KeyNumber> field of the <xref:System.Security.Cryptography.CspParameters> object that was used to initialize the <xref:System.Security.Cryptography.CspKeyContainerInfo> object."},{"content":"An exchange key is an asymmetric key pair used to encrypt session keys so that they can be safely stored and exchanged with other users.","pos":[288,424]},{"content":"The &lt;xref:System.Security.Cryptography.KeyNumber&gt; value specifies an exchange key.","pos":[426,508],"source":"  The <xref:System.Security.Cryptography.KeyNumber> value specifies an exchange key."},{"content":"This value corresponds to the <ph id=\"ph1\">`AT_KEYEXCHANGE`</ph> value used in the unmanaged Microsoft Cryptographic API (CAPI).","pos":[510,620],"source":"  This value corresponds to the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI)."},{"content":"A signature key is an asymmetric key pair used for authenticating (digitally signed) messages or files.","pos":[627,730]},{"content":"The &lt;xref:System.Security.Cryptography.KeyNumber&gt; value specifies a signature key.","pos":[732,814],"source":"  The <xref:System.Security.Cryptography.KeyNumber> value specifies a signature key."},{"content":"This value corresponds to the <ph id=\"ph1\">`AT_SIGNATURE`</ph> value used in CAPI.","pos":[816,880],"source":"  This value corresponds to the `AT_SIGNATURE` value used in CAPI."}]},{"pos":[14338,14507],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.KeyNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that describes whether an asymmetric key was created as a signature key or an exchange key.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Cryptography.KeyNumber\"></xref> values that describes whether an asymmetric key was created as a signature key or an exchange key."},{"pos":[15043,15107],"content":"Gets a value indicating whether a key is from a machine key set.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether a key is from a machine key set.","pos":[0,64]}]},{"pos":[15765,15940],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key is from the machine key set; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key is from the machine key set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16452,16508],"content":"Gets a value indicating whether a key pair is protected.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether a key pair is protected.","pos":[0,56]}]},{"pos":[17163,17328],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key pair is protected; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key pair is protected; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17517,17547],"content":"The key type is not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key type is not supported.","pos":[0,30]}]},{"pos":[17697,17802],"content":"The cryptographic service provider cannot be found.       -or-       The key container was not found.","needQuote":false,"needEscape":true,"nodes":[{"content":"The cryptographic service provider cannot be found.       -or-       The key container was not found.","pos":[0,101],"nodes":[{"content":"The cryptographic service provider cannot be found.","pos":[0,51]},{"content":"-or-       The key container was not found.","pos":[58,101]}]}]},{"pos":[18235,18267],"content":"Gets the provider name of a key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the provider name of a key.","pos":[0,32]}]},{"pos":[18279,18359],"content":"This property specifies the cryptographic service provider that created the key.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property specifies the cryptographic service provider that created the key.","pos":[0,80]}]},{"pos":[19001,19019],"content":"The provider name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider name.","pos":[0,18]}]},{"pos":[19543,19575],"content":"Gets the provider type of a key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the provider type of a key.","pos":[0,32]}]},{"pos":[19587,19979],"content":"Valid values are determined by the cryptographic service provider used to create the key. Cryptographic service providers are generally organized into groups or families, each of which has its own set of data formats and processes. Two families that use the same algorithm, such as the RC2 block cipher, often use different padding schemes, different key lengths, and different default modes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Valid values are determined by the cryptographic service provider used to create the key. Cryptographic service providers are generally organized into groups or families, each of which has its own set of data formats and processes. Two families that use the same algorithm, such as the RC2 block cipher, often use different padding schemes, different key lengths, and different default modes.","pos":[0,392],"nodes":[{"content":"Valid values are determined by the cryptographic service provider used to create the key.","pos":[0,89]},{"content":"Cryptographic service providers are generally organized into groups or families, each of which has its own set of data formats and processes.","pos":[90,231]},{"content":"Two families that use the same algorithm, such as the RC2 block cipher, often use different padding schemes, different key lengths, and different default modes.","pos":[232,392]}]}]},{"pos":[20617,20653],"content":"The provider type. The default is 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider type. The default is 1.","pos":[0,36],"nodes":[{"content":"The provider type.","pos":[0,18]},{"content":"The default is 1.","pos":[19,36]}]}]},{"pos":[21202,21305],"content":"Gets a value indicating whether a key container was randomly generated by a managed cryptography class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether a key container was randomly generated by a managed cryptography class.","pos":[0,103]}]},{"pos":[21317,21425],"content":"Usually, when a randomly generated key container is created, the key container is named \"CLR{<ph id=\"ph1\">`guid value`</ph>}.\"","needQuote":true,"needEscape":true,"source":"Usually, when a randomly generated key container is created, the key container is named \"CLR{`guid value`}.\""},{"pos":[22071,22251],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key container was randomly generated; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key container was randomly generated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22765,22839],"content":"Gets a value indicating whether a key can be removed from a key container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether a key can be removed from a key container.","pos":[0,74]}]},{"pos":[23488,23648],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key is removable; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key is removable; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23883,23938],"content":"The cryptographic service provider (CSP) was not found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cryptographic service provider (CSP) was not found.","pos":[0,55]}]},{"pos":[24420,24453],"content":"Gets a unique key container name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a unique key container name.","pos":[0,33]}]},{"pos":[25119,25149],"content":"The unique key container name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique key container name.","pos":[0,30]}]},{"pos":[25351,25381],"content":"The key type is not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key type is not supported.","pos":[0,30]}]},{"pos":[25531,25636],"content":"The cryptographic service provider cannot be found.       -or-       The key container was not found.","needQuote":false,"needEscape":true,"nodes":[{"content":"The cryptographic service provider cannot be found.       -or-       The key container was not found.","pos":[0,101],"nodes":[{"content":"The cryptographic service provider cannot be found.","pos":[0,51]},{"content":"-or-       The key container was not found.","pos":[58,101]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.CspKeyContainerInfo\n  id: CspKeyContainerInfo\n  children:\n  - System.Security.Cryptography.CspKeyContainerInfo.#ctor(System.Security.Cryptography.CspParameters)\n  - System.Security.Cryptography.CspKeyContainerInfo.Accessible\n  - System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity\n  - System.Security.Cryptography.CspKeyContainerInfo.Exportable\n  - System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice\n  - System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName\n  - System.Security.Cryptography.CspKeyContainerInfo.KeyNumber\n  - System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore\n  - System.Security.Cryptography.CspKeyContainerInfo.Protected\n  - System.Security.Cryptography.CspKeyContainerInfo.ProviderName\n  - System.Security.Cryptography.CspKeyContainerInfo.ProviderType\n  - System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated\n  - System.Security.Cryptography.CspKeyContainerInfo.Removable\n  - System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName\n  langs:\n  - csharp\n  name: CspKeyContainerInfo\n  nameWithType: CspKeyContainerInfo\n  fullName: System.Security.Cryptography.CspKeyContainerInfo\n  type: Class\n  summary: Provides additional information about a cryptographic key pair. This class cannot be inherited.\n  remarks: \"Use this class to obtain additional information about a key pair, such as the key container name or the key number.  \\n  \\n In cases where a random key is generated by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> or the <xref:System.Security.Cryptography.DSACryptoServiceProvider>, a key container will not be created until you call a method that uses the key.  Some properties of the CspKeyContainerInfo class will throw a <xref:System.Security.Cryptography.CryptographicException> if a key container has not been created.\"\n  example:\n  - \"The following code example creates a key container and retrieves information about that container.  \\n  \\n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/t-system.security.crypto_30_1.cpp)]\\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/t-system.security.crypto_30_1.vb)]\\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/t-system.security.crypto_30_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class CspKeyContainerInfo\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspKeyContainerInfo.#ctor(System.Security.Cryptography.CspParameters)\n  id: '#ctor(System.Security.Cryptography.CspParameters)'\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  langs:\n  - csharp\n  name: CspKeyContainerInfo(CspParameters)\n  nameWithType: CspKeyContainerInfo.CspKeyContainerInfo(CspParameters)\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.CspKeyContainerInfo(CspParameters)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.CspKeyContainerInfo\"></xref> class using the specified parameters.\n  remarks: ''\n  example:\n  - \"The following code example creates a key container and retrieves information about that container.  \\n  \\n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/fb266140-c04f-42c1-9655-_1.cpp)]\\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/fb266140-c04f-42c1-9655-_1.vb)]\\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/fb266140-c04f-42c1-9655-_1.cs)]\"\n  syntax:\n    content: public CspKeyContainerInfo (System.Security.Cryptography.CspParameters parameters);\n    parameters:\n    - id: parameters\n      type: System.Security.Cryptography.CspParameters\n      description: A <xref href=\"System.Security.Cryptography.CspParameters\"></xref> object that provides information about the key.\n  overload: System.Security.Cryptography.CspKeyContainerInfo.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspKeyContainerInfo.Accessible\n  id: Accessible\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  langs:\n  - csharp\n  name: Accessible\n  nameWithType: CspKeyContainerInfo.Accessible\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.Accessible\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a value indicating whether a key in a key container is accessible.\n  remarks: ''\n  example:\n  - \"The following code example creates a key container and retrieves information about that container.  \\n  \\n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_38_1.cpp)]\\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_38_1.vb)]\\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_38_1.cs)]\"\n  syntax:\n    content: public bool Accessible { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key is accessible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.CspKeyContainerInfo.Accessible*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The key type is not supported.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity\n  id: CryptoKeySecurity\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  langs:\n  - csharp\n  name: CryptoKeySecurity\n  nameWithType: CspKeyContainerInfo.CryptoKeySecurity\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object that represents access rights and audit rules for a container.\n  remarks: Use the <xref:System.Security.Cryptography.CspKeyContainerInfo> property to retrieve the  <xref:System.Security.AccessControl.CryptoKeySecurity> object that manages the creation of discretionary access control lists (DACLS) and system access control lists (SACLS) for a container.\n  syntax:\n    content: public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; }\n    return:\n      type: System.Security.AccessControl.CryptoKeySecurity\n      description: A <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object that represents access rights and audit rules for a container.\n  overload: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The key type is not supported.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The cryptographic service provider cannot be found.  \\n  \\n -or-  \\n  \\n The key container was not found.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspKeyContainerInfo.Exportable\n  id: Exportable\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  langs:\n  - csharp\n  name: Exportable\n  nameWithType: CspKeyContainerInfo.Exportable\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.Exportable\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a value indicating whether a key can be exported from a key container.\n  remarks: ''\n  example:\n  - \"The following code example creates a key container and retrieves information about that container.  \\n  \\n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_104_1.cpp)]\\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_104_1.vb)]\\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_104_1.cs)]\"\n  syntax:\n    content: public bool Exportable { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key can be exported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.CspKeyContainerInfo.Exportable*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The key type is not supported.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The cryptographic service provider cannot be found.  \\n  \\n -or-  \\n  \\n The key container was not found.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice\n  id: HardwareDevice\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  langs:\n  - csharp\n  name: HardwareDevice\n  nameWithType: CspKeyContainerInfo.HardwareDevice\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a value indicating whether a key is a hardware key.\n  remarks: ''\n  example:\n  - \"The following code example creates a key container and retrieves information about that container.  \\n  \\n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_90_1.cpp)]\\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_90_1.vb)]\\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_90_1.cs)]\"\n  syntax:\n    content: public bool HardwareDevice { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key is a hardware key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The cryptographic service provider cannot be found.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName\n  id: KeyContainerName\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  langs:\n  - csharp\n  name: KeyContainerName\n  nameWithType: CspKeyContainerInfo.KeyContainerName\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a key container name.\n  remarks: ''\n  example:\n  - \"The following code example creates a key container and retrieves information about that container.  \\n  \\n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_56_1.cpp)]\\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_56_1.vb)]\\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_56_1.cs)]\"\n  syntax:\n    content: public string KeyContainerName { get; }\n    return:\n      type: System.String\n      description: The key container name.\n  overload: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber\n  id: KeyNumber\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  langs:\n  - csharp\n  name: KeyNumber\n  nameWithType: CspKeyContainerInfo.KeyNumber\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a value that describes whether an asymmetric key was created as a signature key or an exchange key.\n  remarks: \"The value of the KeyNumber property is derived from the <xref:System.Security.Cryptography.CspParameters.KeyNumber> field of the <xref:System.Security.Cryptography.CspParameters> object that was used to initialize the <xref:System.Security.Cryptography.CspKeyContainerInfo> object.  \\n  \\n An exchange key is an asymmetric key pair used to encrypt session keys so that they can be safely stored and exchanged with other users.  The <xref:System.Security.Cryptography.KeyNumber> value specifies an exchange key.  This value corresponds to the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).  \\n  \\n A signature key is an asymmetric key pair used for authenticating (digitally signed) messages or files.  The <xref:System.Security.Cryptography.KeyNumber> value specifies a signature key.  This value corresponds to the `AT_SIGNATURE` value used in CAPI.\"\n  example:\n  - \"The following code example creates a key container and retrieves information about that container.  \\n  \\n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_23_1.cpp)]\\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_23_1.vb)]\\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_23_1.cs)]\"\n  syntax:\n    content: public System.Security.Cryptography.KeyNumber KeyNumber { get; }\n    return:\n      type: System.Security.Cryptography.KeyNumber\n      description: One of the <xref href=\"System.Security.Cryptography.KeyNumber\"></xref> values that describes whether an asymmetric key was created as a signature key or an exchange key.\n  overload: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore\n  id: MachineKeyStore\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  langs:\n  - csharp\n  name: MachineKeyStore\n  nameWithType: CspKeyContainerInfo.MachineKeyStore\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a value indicating whether a key is from a machine key set.\n  remarks: ''\n  example:\n  - \"The following code example creates a key container and retrieves information about that container.  \\n  \\n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_45_1.cpp)]\\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_45_1.vb)]\\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_45_1.cs)]\"\n  syntax:\n    content: public bool MachineKeyStore { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key is from the machine key set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspKeyContainerInfo.Protected\n  id: Protected\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  langs:\n  - csharp\n  name: Protected\n  nameWithType: CspKeyContainerInfo.Protected\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.Protected\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a value indicating whether a key pair is protected.\n  remarks: ''\n  example:\n  - \"The following code example creates a key container and retrieves information about that container.  \\n  \\n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_108_1.cpp)]\\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_108_1.vb)]\\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_108_1.cs)]\"\n  syntax:\n    content: public bool Protected { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key pair is protected; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.CspKeyContainerInfo.Protected*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The key type is not supported.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The cryptographic service provider cannot be found.  \\n  \\n -or-  \\n  \\n The key container was not found.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderName\n  id: ProviderName\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  langs:\n  - csharp\n  name: ProviderName\n  nameWithType: CspKeyContainerInfo.ProviderName\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.ProviderName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets the provider name of a key.\n  remarks: This property specifies the cryptographic service provider that created the key.\n  example:\n  - \"The following code example creates a key container and retrieves information about that container.  \\n  \\n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_34_1.cpp)]\\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_34_1.vb)]\\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_34_1.cs)]\"\n  syntax:\n    content: public string ProviderName { get; }\n    return:\n      type: System.String\n      description: The provider name.\n  overload: System.Security.Cryptography.CspKeyContainerInfo.ProviderName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderType\n  id: ProviderType\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  langs:\n  - csharp\n  name: ProviderType\n  nameWithType: CspKeyContainerInfo.ProviderType\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.ProviderType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets the provider type of a key.\n  remarks: Valid values are determined by the cryptographic service provider used to create the key. Cryptographic service providers are generally organized into groups or families, each of which has its own set of data formats and processes. Two families that use the same algorithm, such as the RC2 block cipher, often use different padding schemes, different key lengths, and different default modes.\n  example:\n  - \"The following code example creates a key container and retrieves information about that container.  \\n  \\n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_81_1.cpp)]\\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_81_1.vb)]\\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_81_1.cs)]\"\n  syntax:\n    content: public int ProviderType { get; }\n    return:\n      type: System.Int32\n      description: The provider type. The default is 1.\n  overload: System.Security.Cryptography.CspKeyContainerInfo.ProviderType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated\n  id: RandomlyGenerated\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  langs:\n  - csharp\n  name: RandomlyGenerated\n  nameWithType: CspKeyContainerInfo.RandomlyGenerated\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a value indicating whether a key container was randomly generated by a managed cryptography class.\n  remarks: Usually, when a randomly generated key container is created, the key container is named \"CLR{`guid value`}.\"\n  example:\n  - \"The following code example creates a key container and retrieves information about that container.  \\n  \\n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_29_1.cpp)]\\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_29_1.vb)]\\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_29_1.cs)]\"\n  syntax:\n    content: public bool RandomlyGenerated { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key container was randomly generated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspKeyContainerInfo.Removable\n  id: Removable\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  langs:\n  - csharp\n  name: Removable\n  nameWithType: CspKeyContainerInfo.Removable\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.Removable\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a value indicating whether a key can be removed from a key container.\n  remarks: ''\n  example:\n  - \"The following code example creates a key container and retrieves information about that container.  \\n  \\n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_5_1.cpp)]\\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_5_1.vb)]\\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_5_1.cs)]\"\n  syntax:\n    content: public bool Removable { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key is removable; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.CspKeyContainerInfo.Removable*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The cryptographic service provider (CSP) was not found.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName\n  id: UniqueKeyContainerName\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  langs:\n  - csharp\n  name: UniqueKeyContainerName\n  nameWithType: CspKeyContainerInfo.UniqueKeyContainerName\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a unique key container name.\n  remarks: ''\n  example:\n  - \"The following code example creates a key container and retrieves information about that container.  \\n  \\n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_88_1.cpp)]\\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_88_1.vb)]\\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_88_1.cs)]\"\n  syntax:\n    content: public string UniqueKeyContainerName { get; }\n    return:\n      type: System.String\n      description: The unique key container name.\n  overload: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The key type is not supported.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The cryptographic service provider cannot be found.  \\n  \\n -or-  \\n  \\n The key container was not found.\"\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.CspKeyContainerInfo.#ctor(System.Security.Cryptography.CspParameters)\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: CspKeyContainerInfo(CspParameters)\n  nameWithType: CspKeyContainerInfo.CspKeyContainerInfo(CspParameters)\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.CspKeyContainerInfo(CspParameters)\n- uid: System.Security.Cryptography.CspParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CspParameters\n  nameWithType: CspParameters\n  fullName: System.Security.Cryptography.CspParameters\n- uid: System.Security.Cryptography.CspKeyContainerInfo.Accessible\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: Accessible\n  nameWithType: CspKeyContainerInfo.Accessible\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.Accessible\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: CryptoKeySecurity\n  nameWithType: CspKeyContainerInfo.CryptoKeySecurity\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity\n- uid: System.Security.AccessControl.CryptoKeySecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeySecurity\n  nameWithType: CryptoKeySecurity\n  fullName: System.Security.AccessControl.CryptoKeySecurity\n- uid: System.Security.Cryptography.CspKeyContainerInfo.Exportable\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: Exportable\n  nameWithType: CspKeyContainerInfo.Exportable\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.Exportable\n- uid: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: HardwareDevice\n  nameWithType: CspKeyContainerInfo.HardwareDevice\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice\n- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: KeyContainerName\n  nameWithType: CspKeyContainerInfo.KeyContainerName\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: KeyNumber\n  nameWithType: CspKeyContainerInfo.KeyNumber\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber\n- uid: System.Security.Cryptography.KeyNumber\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: KeyNumber\n  nameWithType: KeyNumber\n  fullName: System.Security.Cryptography.KeyNumber\n- uid: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: MachineKeyStore\n  nameWithType: CspKeyContainerInfo.MachineKeyStore\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore\n- uid: System.Security.Cryptography.CspKeyContainerInfo.Protected\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: Protected\n  nameWithType: CspKeyContainerInfo.Protected\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.Protected\n- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderName\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: ProviderName\n  nameWithType: CspKeyContainerInfo.ProviderName\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.ProviderName\n- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderType\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: ProviderType\n  nameWithType: CspKeyContainerInfo.ProviderType\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.ProviderType\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: RandomlyGenerated\n  nameWithType: CspKeyContainerInfo.RandomlyGenerated\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated\n- uid: System.Security.Cryptography.CspKeyContainerInfo.Removable\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: Removable\n  nameWithType: CspKeyContainerInfo.Removable\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.Removable\n- uid: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: UniqueKeyContainerName\n  nameWithType: CspKeyContainerInfo.UniqueKeyContainerName\n  fullName: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName\n- uid: System.Security.Cryptography.CspKeyContainerInfo.#ctor*\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: CspKeyContainerInfo\n  nameWithType: CspKeyContainerInfo.CspKeyContainerInfo\n- uid: System.Security.Cryptography.CspKeyContainerInfo.Accessible*\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: Accessible\n  nameWithType: CspKeyContainerInfo.Accessible\n- uid: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity*\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: CryptoKeySecurity\n  nameWithType: CspKeyContainerInfo.CryptoKeySecurity\n- uid: System.Security.Cryptography.CspKeyContainerInfo.Exportable*\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: Exportable\n  nameWithType: CspKeyContainerInfo.Exportable\n- uid: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice*\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: HardwareDevice\n  nameWithType: CspKeyContainerInfo.HardwareDevice\n- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName*\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: KeyContainerName\n  nameWithType: CspKeyContainerInfo.KeyContainerName\n- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber*\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: KeyNumber\n  nameWithType: CspKeyContainerInfo.KeyNumber\n- uid: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore*\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: MachineKeyStore\n  nameWithType: CspKeyContainerInfo.MachineKeyStore\n- uid: System.Security.Cryptography.CspKeyContainerInfo.Protected*\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: Protected\n  nameWithType: CspKeyContainerInfo.Protected\n- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderName*\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: ProviderName\n  nameWithType: CspKeyContainerInfo.ProviderName\n- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderType*\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: ProviderType\n  nameWithType: CspKeyContainerInfo.ProviderType\n- uid: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated*\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: RandomlyGenerated\n  nameWithType: CspKeyContainerInfo.RandomlyGenerated\n- uid: System.Security.Cryptography.CspKeyContainerInfo.Removable*\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: Removable\n  nameWithType: CspKeyContainerInfo.Removable\n- uid: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName*\n  parent: System.Security.Cryptography.CspKeyContainerInfo\n  isExternal: false\n  name: UniqueKeyContainerName\n  nameWithType: CspKeyContainerInfo.UniqueKeyContainerName\n"}