{"nodes":[{"pos":[715,973],"content":"Represents a set of types that are either allowed or disallowed in compiled workflows by the workflow compiler (depending on the value of the <xref:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*> property). This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a set of types that are either allowed or disallowed in compiled workflows by the workflow compiler (depending on the value of the <xref:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*> property). This class cannot be inherited.","pos":[0,258],"nodes":[{"content":"Represents a set of types that are either allowed or disallowed in compiled workflows by the workflow compiler (depending on the value of the &lt;xref:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*&gt; property).","pos":[0,226],"source":"Represents a set of types that are either allowed or disallowed in compiled workflows by the workflow compiler (depending on the value of the <xref:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*> property)."},{"content":"This class cannot be inherited.","pos":[227,258]}]}]},{"pos":[986,1886],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       During the validation phase of workflow compilation, a workflow source document is rejected if it or the companion rules file directly references any .NET Framework types not present on a list of authorized types. The list of authorized types is an XML document where each entry indicates an `Assembly`, a `Namespace`, a `TypeName`, and an Authorized {`true`&#124;`false`} indicator. This class corresponds to an entry on the list. Also note that wildcard character designations are allowed, to include or exclude complete namespaces. For example, using `Type=”System.*”` includes all types in <xref:System>, including types contained in child namespaces.       The use of a list of authorized types is controlled by the <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler> option `'/checktypes'`","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       During the validation phase of workflow compilation, a workflow source document is rejected if it or the companion rules file directly references any .NET Framework types not present on a list of authorized types.","pos":[0,301],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       During the validation phase of workflow compilation, a workflow source document is rejected if it or the companion rules file directly references any .NET Framework types not present on a list of authorized types."},{"content":"The list of authorized types is an XML document where each entry indicates an <ph id=\"ph1\">`Assembly`</ph>, a <ph id=\"ph2\">`Namespace`</ph>, a <ph id=\"ph3\">`TypeName`</ph>, and an Authorized {<ph id=\"ph4\">`true`</ph>&amp;#124;<ph id=\"ph5\">`false`</ph>} indicator.","pos":[302,471],"source":" The list of authorized types is an XML document where each entry indicates an `Assembly`, a `Namespace`, a `TypeName`, and an Authorized {`true`&#124;`false`} indicator."},{"content":"This class corresponds to an entry on the list.","pos":[472,519]},{"content":"Also note that wildcard character designations are allowed, to include or exclude complete namespaces.","pos":[520,622]},{"content":"For example, using <ph id=\"ph1\">`Type=”System.*”`</ph> includes all types in &lt;xref:System&gt;, including types contained in child namespaces.","pos":[623,743],"source":" For example, using `Type=”System.*”` includes all types in <xref:System>, including types contained in child namespaces."},{"content":"The use of a list of authorized types is controlled by the &lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler&gt; option <ph id=\"ph1\">`'/checktypes'`</ph>","pos":[750,895],"source":"       The use of a list of authorized types is controlled by the <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler> option `'/checktypes'`"}]},{"pos":[2700,2816],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Compiler.AuthorizedType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.Compiler.AuthorizedType\"></xref> class."},{"pos":[3433,3523],"content":"Gets or sets the name of the assembly that contains the type(s) represented by this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the assembly that contains the type(s) represented by this class.","pos":[0,90]}]},{"pos":[3641,3666],"content":"The name of the assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the assembly.","pos":[0,25]}]},{"pos":[4228,4363],"content":"Gets or sets the value that indicates whether the type designated by this class is authorized to participate in a workflow compilation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the value that indicates whether the type designated by this class is authorized to participate in a workflow compilation.","pos":[0,135]}]},{"pos":[4483,4674],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if authorized to participate in a workflow compilation; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if authorized to participate in a workflow compilation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5233,5313],"content":"Gets or sets the name of the namespace of the type represented in this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the namespace of the type represented in this instance.","pos":[0,80]}]},{"pos":[5432,5513],"content":"The name of the namespace of the <xref:System.Type> represented in this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the namespace of the &lt;xref:System.Type&gt; represented in this instance.","pos":[0,81],"source":"The name of the namespace of the <xref:System.Type> represented in this instance."}]},{"pos":[6111,6194],"content":"Gets the <xref:System.Text.RegularExpressions.Regex> associated with this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Text.RegularExpressions.Regex&gt; associated with this instance.","pos":[0,83],"source":"Gets the <xref:System.Text.RegularExpressions.Regex> associated with this instance."}]},{"pos":[6206,6439],"content":"Because wildcard naming is supported, there is an implicitly created <xref:System.Text.RegularExpressions.Regex> when wildcard naming is used. This property provides direct access to that <xref:System.Text.RegularExpressions.Regex> .","needQuote":true,"needEscape":true,"nodes":[{"content":"Because wildcard naming is supported, there is an implicitly created <xref:System.Text.RegularExpressions.Regex> when wildcard naming is used. This property provides direct access to that <xref:System.Text.RegularExpressions.Regex> .","pos":[0,233],"nodes":[{"content":"Because wildcard naming is supported, there is an implicitly created &lt;xref:System.Text.RegularExpressions.Regex&gt; when wildcard naming is used.","pos":[0,142],"source":"Because wildcard naming is supported, there is an implicitly created <xref:System.Text.RegularExpressions.Regex> when wildcard naming is used."},{"content":"This property provides direct access to that &lt;xref:System.Text.RegularExpressions.Regex&gt; .","pos":[143,233],"source":" This property provides direct access to that <xref:System.Text.RegularExpressions.Regex> ."}]}]},{"pos":[6614,6667],"content":"The regular expression associated with this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The regular expression associated with this instance.","pos":[0,53]}]},{"pos":[7228,7297],"content":"Gets or sets the name of the type being represented by this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the type being represented by this instance.","pos":[0,69]}]},{"pos":[7415,7485],"content":"The name of the <xref:System.Type> being represented by this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the &lt;xref:System.Type&gt; being represented by this instance.","pos":[0,70],"source":"The name of the <xref:System.Type> being represented by this instance."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  id: AuthorizedType\n  children:\n  - System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor\n  - System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly\n  - System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized\n  - System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace\n  - System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression\n  - System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName\n  langs:\n  - csharp\n  name: AuthorizedType\n  nameWithType: AuthorizedType\n  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  type: Class\n  summary: Represents a set of types that are either allowed or disallowed in compiled workflows by the workflow compiler (depending on the value of the <xref:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*> property). This class cannot be inherited.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n During the validation phase of workflow compilation, a workflow source document is rejected if it or the companion rules file directly references any .NET Framework types not present on a list of authorized types. The list of authorized types is an XML document where each entry indicates an `Assembly`, a `Namespace`, a `TypeName`, and an Authorized {`true`&#124;`false`} indicator. This class corresponds to an entry on the list. Also note that wildcard character designations are allowed, to include or exclude complete namespaces. For example, using `Type=”System.*”` includes all types in <xref:System>, including types contained in child namespaces.  \\n  \\n The use of a list of authorized types is controlled by the <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler> option `'/checktypes'`\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Xml.Serialization.XmlType(\"authorizedType\")]\n\n      public sealed class AuthorizedType\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor\n  id: '#ctor'\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  langs:\n  - csharp\n  name: AuthorizedType()\n  nameWithType: AuthorizedType.AuthorizedType()\n  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.AuthorizedType()\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.Compiler.AuthorizedType\"></xref> class.\n  syntax:\n    content: public AuthorizedType ();\n    parameters: []\n  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly\n  id: Assembly\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  langs:\n  - csharp\n  name: Assembly\n  nameWithType: AuthorizedType.Assembly\n  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Gets or sets the name of the assembly that contains the type(s) represented by this class.\n  syntax:\n    content: public string Assembly { get; set; }\n    return:\n      type: System.String\n      description: The name of the assembly.\n  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized\n  id: Authorized\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  langs:\n  - csharp\n  name: Authorized\n  nameWithType: AuthorizedType.Authorized\n  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Gets or sets the value that indicates whether the type designated by this class is authorized to participate in a workflow compilation.\n  syntax:\n    content: public string Authorized { get; set; }\n    return:\n      type: System.String\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if authorized to participate in a workflow compilation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace\n  id: Namespace\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  langs:\n  - csharp\n  name: Namespace\n  nameWithType: AuthorizedType.Namespace\n  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Gets or sets the name of the namespace of the type represented in this instance.\n  syntax:\n    content: public string Namespace { get; set; }\n    return:\n      type: System.String\n      description: The name of the namespace of the <xref:System.Type> represented in this instance.\n  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression\n  id: RegularExpression\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  langs:\n  - csharp\n  name: RegularExpression\n  nameWithType: AuthorizedType.RegularExpression\n  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Gets the <xref:System.Text.RegularExpressions.Regex> associated with this instance.\n  remarks: Because wildcard naming is supported, there is an implicitly created <xref:System.Text.RegularExpressions.Regex> when wildcard naming is used. This property provides direct access to that <xref:System.Text.RegularExpressions.Regex> .\n  syntax:\n    content: public System.Text.RegularExpressions.Regex RegularExpression { get; }\n    return:\n      type: System.Text.RegularExpressions.Regex\n      description: The regular expression associated with this instance.\n  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName\n  id: TypeName\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  langs:\n  - csharp\n  name: TypeName\n  nameWithType: AuthorizedType.TypeName\n  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Gets or sets the name of the type being represented by this instance.\n  syntax:\n    content: public string TypeName { get; set; }\n    return:\n      type: System.String\n      description: The name of the <xref:System.Type> being represented by this instance.\n  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: AuthorizedType()\n  nameWithType: AuthorizedType.AuthorizedType()\n  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.AuthorizedType()\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: Assembly\n  nameWithType: AuthorizedType.Assembly\n  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: Authorized\n  nameWithType: AuthorizedType.Authorized\n  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: Namespace\n  nameWithType: AuthorizedType.Namespace\n  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: RegularExpression\n  nameWithType: AuthorizedType.RegularExpression\n  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression\n- uid: System.Text.RegularExpressions.Regex\n  parent: System.Text.RegularExpressions\n  isExternal: true\n  name: Regex\n  nameWithType: Regex\n  fullName: System.Text.RegularExpressions.Regex\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: TypeName\n  nameWithType: AuthorizedType.TypeName\n  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor*\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: AuthorizedType\n  nameWithType: AuthorizedType.AuthorizedType\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly*\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: Assembly\n  nameWithType: AuthorizedType.Assembly\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: Authorized\n  nameWithType: AuthorizedType.Authorized\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace*\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: Namespace\n  nameWithType: AuthorizedType.Namespace\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression*\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: RegularExpression\n  nameWithType: AuthorizedType.RegularExpression\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName*\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: TypeName\n  nameWithType: AuthorizedType.TypeName\n"}