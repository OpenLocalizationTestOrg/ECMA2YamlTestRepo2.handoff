{"nodes":[{"pos":[462,605],"content":"Exposes methods and properties to support UI Automation client access to controls that expose their dock properties within a docking container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exposes methods and properties to support UI Automation client access to controls that expose their dock properties within a docking container.","pos":[0,143]}]},{"pos":[618,1341],"content":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.DockPattern> control pattern.       A docking container is a control that allows the arrangement of child elements, both horizontally and vertically, relative to the boundaries of the docking container and other elements within the container.       IDockProvider does not expose any properties of the docking container or any properties of controls that may be docked adjacent to the current control within the docking container.       Controls are docked relative to each other based on their current z-order; the higher their z-order placement the further they are placed from the specified edge of the docking container.","needQuote":false,"needEscape":true,"nodes":[{"content":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.DockPattern> control pattern.       A docking container is a control that allows the arrangement of child elements, both horizontally and vertically, relative to the boundaries of the docking container and other elements within the container.       IDockProvider does not expose any properties of the docking container or any properties of controls that may be docked adjacent to the current control within the docking container.       Controls are docked relative to each other based on their current z-order; the higher their z-order placement the further they are placed from the specified edge of the docking container.","pos":[0,717],"nodes":[{"content":"Implemented on a UI Automation provider that must support the &lt;xref:System.Windows.Automation.DockPattern&gt; control pattern.","pos":[0,123],"source":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.DockPattern> control pattern."},{"content":"A docking container is a control that allows the arrangement of child elements, both horizontally and vertically, relative to the boundaries of the docking container and other elements within the container.","pos":[130,336]},{"content":"IDockProvider does not expose any properties of the docking container or any properties of controls that may be docked adjacent to the current control within the docking container.","pos":[343,523]},{"content":"Controls are docked relative to each other based on their current z-order; the higher their z-order placement the further they are placed from the specified edge of the docking container.","pos":[530,717]}]}]},{"pos":[2131,2250],"content":"Gets the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.DockPosition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the control within a docking container.","needQuote":true,"needEscape":true,"source":"Gets the current <xref href=\"System.Windows.Automation.DockPosition\"></xref> of the control within a docking container."},{"pos":[2262,2468],"content":"A docking container is a control that allows the arrangement of child elements, both horizontally and vertically, relative to the boundaries of the docking container and other elements within the container.","needQuote":true,"needEscape":true,"nodes":[{"content":"A docking container is a control that allows the arrangement of child elements, both horizontally and vertically, relative to the boundaries of the docking container and other elements within the container.","pos":[0,206]}]},{"pos":[2642,2814],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.DockPosition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the control, relative to the boundaries of the docking container and other elements within the container.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Automation.DockPosition\"></xref> of the control, relative to the boundaries of the docking container and other elements within the container."},{"pos":[3485,3530],"content":"Docks the control within a docking container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Docks the control within a docking container.","pos":[0,45]}]},{"pos":[3542,3748],"content":"A docking container is a control that allows the arrangement of child elements, both horizontally and vertically, relative to the boundaries of the docking container and other elements within the container.","needQuote":true,"needEscape":true,"nodes":[{"content":"A docking container is a control that allows the arrangement of child elements, both horizontally and vertically, relative to the boundaries of the docking container and other elements within the container.","pos":[0,206]}]},{"pos":[3964,4075],"content":"The dock position, relative to the boundaries of the docking container and other elements within the container.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dock position, relative to the boundaries of the docking container and other elements within the container.","pos":[0,111]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Automation.Provider.IDockProvider\n  id: IDockProvider\n  children:\n  - System.Windows.Automation.Provider.IDockProvider.DockPosition\n  - System.Windows.Automation.Provider.IDockProvider.SetDockPosition(System.Windows.Automation.DockPosition)\n  langs:\n  - csharp\n  name: IDockProvider\n  nameWithType: IDockProvider\n  fullName: System.Windows.Automation.Provider.IDockProvider\n  type: Interface\n  summary: Exposes methods and properties to support UI Automation client access to controls that expose their dock properties within a docking container.\n  remarks: \"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.DockPattern> control pattern.  \\n  \\n A docking container is a control that allows the arrangement of child elements, both horizontally and vertically, relative to the boundaries of the docking container and other elements within the container.  \\n  \\n IDockProvider does not expose any properties of the docking container or any properties of controls that may be docked adjacent to the current control within the docking container.  \\n  \\n Controls are docked relative to each other based on their current z-order; the higher their z-order placement the further they are placed from the specified edge of the docking container.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"159bc72c-4ad3-485e-9637-d7052edf0146\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface IDockProvider\n  implements: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.IDockProvider.DockPosition\n  id: DockPosition\n  parent: System.Windows.Automation.Provider.IDockProvider\n  langs:\n  - csharp\n  name: DockPosition\n  nameWithType: IDockProvider.DockPosition\n  fullName: System.Windows.Automation.Provider.IDockProvider.DockPosition\n  type: Property\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Gets the current <xref href=\"System.Windows.Automation.DockPosition\"></xref> of the control within a docking container.\n  remarks: A docking container is a control that allows the arrangement of child elements, both horizontally and vertically, relative to the boundaries of the docking container and other elements within the container.\n  syntax:\n    content: public System.Windows.Automation.DockPosition DockPosition { get; }\n    return:\n      type: System.Windows.Automation.DockPosition\n      description: The <xref href=\"System.Windows.Automation.DockPosition\"></xref> of the control, relative to the boundaries of the docking container and other elements within the container.\n  overload: System.Windows.Automation.Provider.IDockProvider.DockPosition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.IDockProvider.SetDockPosition(System.Windows.Automation.DockPosition)\n  id: SetDockPosition(System.Windows.Automation.DockPosition)\n  parent: System.Windows.Automation.Provider.IDockProvider\n  langs:\n  - csharp\n  name: SetDockPosition(DockPosition)\n  nameWithType: IDockProvider.SetDockPosition(DockPosition)\n  fullName: System.Windows.Automation.Provider.IDockProvider.SetDockPosition(DockPosition)\n  type: Method\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Docks the control within a docking container.\n  remarks: A docking container is a control that allows the arrangement of child elements, both horizontally and vertically, relative to the boundaries of the docking container and other elements within the container.\n  syntax:\n    content: public void SetDockPosition (System.Windows.Automation.DockPosition dockPosition);\n    parameters:\n    - id: dockPosition\n      type: System.Windows.Automation.DockPosition\n      description: The dock position, relative to the boundaries of the docking container and other elements within the container.\n  overload: System.Windows.Automation.Provider.IDockProvider.SetDockPosition*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Automation.Provider.IDockProvider.DockPosition\n  parent: System.Windows.Automation.Provider.IDockProvider\n  isExternal: false\n  name: DockPosition\n  nameWithType: IDockProvider.DockPosition\n  fullName: System.Windows.Automation.Provider.IDockProvider.DockPosition\n- uid: System.Windows.Automation.DockPosition\n  parent: System.Windows.Automation\n  isExternal: false\n  name: DockPosition\n  nameWithType: DockPosition\n  fullName: System.Windows.Automation.DockPosition\n- uid: System.Windows.Automation.Provider.IDockProvider.SetDockPosition(System.Windows.Automation.DockPosition)\n  parent: System.Windows.Automation.Provider.IDockProvider\n  isExternal: false\n  name: SetDockPosition(DockPosition)\n  nameWithType: IDockProvider.SetDockPosition(DockPosition)\n  fullName: System.Windows.Automation.Provider.IDockProvider.SetDockPosition(DockPosition)\n- uid: System.Windows.Automation.Provider.IDockProvider.DockPosition*\n  parent: System.Windows.Automation.Provider.IDockProvider\n  isExternal: false\n  name: DockPosition\n  nameWithType: IDockProvider.DockPosition\n- uid: System.Windows.Automation.Provider.IDockProvider.SetDockPosition*\n  parent: System.Windows.Automation.Provider.IDockProvider\n  isExternal: false\n  name: SetDockPosition\n  nameWithType: IDockProvider.SetDockPosition\n"}