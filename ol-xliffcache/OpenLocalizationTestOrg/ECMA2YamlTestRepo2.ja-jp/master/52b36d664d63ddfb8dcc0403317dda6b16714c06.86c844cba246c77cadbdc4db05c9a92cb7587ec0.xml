{"nodes":[{"pos":[849,951],"content":"Authenticates a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security token.","needQuote":true,"needEscape":true,"source":"Authenticates a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security token."},{"pos":[964,2335],"content":"Override the UserNameSecurityTokenAuthenticator class to authenticate security tokens based on a user name and password.       The [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] ships with the following classes that provide support for authenticating <xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens.      |Type|Description|   |----------|-----------------|   |<xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator>|Allows an application to provide a custom authentication scheme for user names and passwords. The authentication scheme is provided using a class deriving from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class.|   |<xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>|Authenticates the user name and password as a Windows account.|       Most custom authentication schemes can use the use the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class and implement a class that derives from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class.  However, if additional flexibility is needed, you can derive a class from the UserNameSecurityTokenAuthenticator class and override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"Override the UserNameSecurityTokenAuthenticator class to authenticate security tokens based on a user name and password.","pos":[0,120]},{"content":"The <ph id=\"ph1\">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> ships with the following classes that provide support for authenticating &lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt; security tokens.","pos":[127,329],"source":"       The [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] ships with the following classes that provide support for authenticating <xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens."},{"content":"|Type|Description|   |----------|-----------------|   |&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&gt;|Allows an application to provide a custom authentication scheme for user names and passwords.","pos":[335,562],"source":"      |Type|Description|   |----------|-----------------|   |<xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator>|Allows an application to provide a custom authentication scheme for user names and passwords."},{"content":"The authentication scheme is provided using a class deriving from the &lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt; class.|   |&lt;xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator&gt;|Authenticates the user name and password as a Windows account.|       Most custom authentication schemes can use the use the &lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&gt; class and implement a class that derives from the &lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt; class.","pos":[563,1112],"source":" The authentication scheme is provided using a class deriving from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class.|   |<xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>|Authenticates the user name and password as a Windows account.|       Most custom authentication schemes can use the use the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class and implement a class that derives from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class."},{"content":"However, if additional flexibility is needed, you can derive a class from the UserNameSecurityTokenAuthenticator class and override the &lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt; method.","pos":[1114,1362],"source":"  However, if additional flexibility is needed, you can derive a class from the UserNameSecurityTokenAuthenticator class and override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method."}]},{"pos":[3672,3799],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\"></xref> class."},{"pos":[4673,4788],"content":"Gets a value indicating whether the specified security token can be validated by this security token authenticator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the specified security token can be validated by this security token authenticator.","pos":[0,115]}]},{"pos":[4800,5000],"content":"The CanValidateTokenCore method does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CanValidateTokenCore method does not authenticate the security token; that is performed by the &lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A&gt; method.","pos":[0,200],"source":"The CanValidateTokenCore method does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A> method."}]},{"pos":[5225,5308],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be validated.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated."},{"pos":[5367,5618],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">token</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a <bpt id=\"p3\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> security token; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when <code>token</code> is a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security token; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6401,6513],"content":"Authenticates the specified security token and returns the set of authorization policies for the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Authenticates the specified security token and returns the set of authorization policies for the security token.","pos":[0,112]}]},{"pos":[6525,6747],"content":"The ValidateTokenCore method calls the &lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt; method to authenticate the <ph id=\"ph1\">`token`</ph> parameter using its user name and password.","needQuote":true,"needEscape":true,"source":"The ValidateTokenCore method calls the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method to authenticate the `token` parameter using its user name and password."},{"pos":[7064,7147],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be validated.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated."},{"pos":[7291,7517],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id=\"ph2\">&amp;gt;</ph> of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the set of authorization policies in effect for this application.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application."},{"pos":[8324,8548],"content":"When overridden in a derived class, authenticates the specified user name and password and returns the set of authorization policies for <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security tokens.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, authenticates the specified user name and password and returns the set of authorization policies for <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security tokens."},{"pos":[8561,9387],"content":"Override the ValidateUserNamePasswordCore method to authenticate <xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens.       When the ValidateUserNamePasswordCore method is overridden, follow these guidelines:      -   When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.      -   When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.       When `null` is returned by this method, [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] throws the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.","needQuote":false,"needEscape":true,"nodes":[{"content":"Override the ValidateUserNamePasswordCore method to authenticate &lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt; security tokens.","pos":[0,138],"source":"Override the ValidateUserNamePasswordCore method to authenticate <xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens."},{"content":"When the ValidateUserNamePasswordCore method is overridden, follow these guidelines:      -   When the security token passed into the <ph id=\"ph1\">`token`</ph> parameter cannot be validated, throw the &lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt; exception.","pos":[145,406],"source":"       When the ValidateUserNamePasswordCore method is overridden, follow these guidelines:      -   When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception."},{"content":"-   When there are no authorization policies in effect for this application, return an empty &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;.","pos":[412,630],"source":"      -   When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>."},{"content":"When <ph id=\"ph1\">`null`</ph> is returned by this method, <ph id=\"ph2\">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> throws the &lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt; exception.","pos":[637,818],"source":"       When `null` is returned by this method, [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] throws the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception."}]},{"pos":[9918,9967],"content":"The user name associated with the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name associated with the security token.","pos":[0,49]}]},{"pos":[10032,10080],"content":"The password associated with the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password associated with the security token.","pos":[0,48]}]},{"pos":[10224,10450],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id=\"ph2\">&amp;gt;</ph> of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the set of authorization policies in effect for this application.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  id: UserNameSecurityTokenAuthenticator\n  children:\n  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor\n  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)\n  langs:\n  - csharp\n  name: UserNameSecurityTokenAuthenticator\n  nameWithType: UserNameSecurityTokenAuthenticator\n  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  type: Class\n  summary: Authenticates a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security token.\n  remarks: \"Override the UserNameSecurityTokenAuthenticator class to authenticate security tokens based on a user name and password.  \\n  \\n The [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] ships with the following classes that provide support for authenticating <xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens.  \\n  \\n|Type|Description|  \\n|----------|-----------------|  \\n|<xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator>|Allows an application to provide a custom authentication scheme for user names and passwords. The authentication scheme is provided using a class deriving from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class.|  \\n|<xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>|Authenticates the user name and password as a Windows account.|  \\n  \\n Most custom authentication schemes can use the use the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class and implement a class that derives from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class.  However, if additional flexibility is needed, you can derive a class from the UserNameSecurityTokenAuthenticator class and override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method.\"\n  example:\n  - >-\n    [!code-cs[UserNameSecurityTokenAuthenticator#0](~/add/codesnippet/csharp/t-system.identitymodel.s_6_1.cs)]\n     [!code-vb[UserNameSecurityTokenAuthenticator#0](~/add/codesnippet/visualbasic/t-system.identitymodel.s_6_1.vb)]\n  syntax:\n    content: 'public abstract class UserNameSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: UserNameSecurityTokenAuthenticator()\n  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()\n  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\"></xref> class.\n  syntax:\n    content: protected UserNameSecurityTokenAuthenticator ();\n    parameters: []\n  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: CanValidateTokenCore(SecurityToken)\n  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a value indicating whether the specified security token can be validated by this security token authenticator.\n  remarks: The CanValidateTokenCore method does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A> method.\n  syntax:\n    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when <code>token</code> is a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security token; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ValidateTokenCore(SecurityToken)\n  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Authenticates the specified security token and returns the set of authorization policies for the security token.\n  remarks: The ValidateTokenCore method calls the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method to authenticate the `token` parameter using its user name and password.\n  syntax:\n    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n      description: A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application.\n  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)\n  id: ValidateUserNamePasswordCore(System.String,System.String)\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ValidateUserNamePasswordCore(String,String)\n  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)\n  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: When overridden in a derived class, authenticates the specified user name and password and returns the set of authorization policies for <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security tokens.\n  remarks: \"Override the ValidateUserNamePasswordCore method to authenticate <xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens.  \\n  \\n When the ValidateUserNamePasswordCore method is overridden, follow these guidelines:  \\n  \\n-   When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.  \\n  \\n-   When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.  \\n  \\n When `null` is returned by this method, [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] throws the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.\"\n  example:\n  - >-\n    [!code-cs[UserNameSecurityTokenAuthenticator#1](~/add/codesnippet/csharp/2e0e79be-aa35-46e5-a7cb-_1.cs)]\n     [!code-vb[UserNameSecurityTokenAuthenticator#1](~/add/codesnippet/visualbasic/2e0e79be-aa35-46e5-a7cb-_1.vb)]\n  syntax:\n    content: protected abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateUserNamePasswordCore (string userName, string password);\n    parameters:\n    - id: userName\n      type: System.String\n      description: The user name associated with the security token.\n    - id: password\n      type: System.String\n      description: The password associated with the security token.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n      description: A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application.\n  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: UserNameSecurityTokenAuthenticator()\n  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()\n  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateTokenCore(SecurityToken)\n  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateTokenCore(SecurityToken)\n  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<IAuthorizationPolicy>\n  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Policy.IAuthorizationPolicy\n    name: IAuthorizationPolicy\n    nameWithType: IAuthorizationPolicy\n    fullName: IAuthorizationPolicy\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateUserNamePasswordCore(String,String)\n  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)\n  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor*\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: UserNameSecurityTokenAuthenticator\n  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore*\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateTokenCore\n  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore*\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateTokenCore\n  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateUserNamePasswordCore\n  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore\n"}