{"nodes":[{"pos":[731,814],"content":"Allows declarative <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> permission checks.","needQuote":true,"needEscape":true,"source":"Allows declarative <xref href=\"System.DirectoryServices\"></xref> permission checks."},{"pos":[2226,2303],"content":"Initializes a new instance of the DirectoryServicesPermissionAttribute class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the DirectoryServicesPermissionAttribute class.","pos":[0,77]}]},{"pos":[2531,2613],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values."},{"pos":[3235,3295],"content":"Creates permissions based on the attribute's specifications.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates permissions based on the attribute's specifications.","pos":[0,60]}]},{"pos":[3474,3565],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the created permission.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.IPermission\"></xref> that represents the created permission."},{"pos":[4134,4229],"content":"Gets or sets a path to an Active Directory Domain Services node to which the permissions apply.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a path to an Active Directory Domain Services node to which the permissions apply.","pos":[0,95]}]},{"pos":[4343,4416],"content":"The path to an Active Directory Domain Services node. The default is \"*\".","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to an Active Directory Domain Services node. The default is \"*\".","pos":[0,73],"nodes":[{"content":"The path to an Active Directory Domain Services node.","pos":[0,53]},{"content":"The default is \"*\".","pos":[54,73]}]}]},{"pos":[4613,4737],"content":"The property value is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"The property value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[5257,5326],"content":"Gets or sets the access levels that are used in creating permissions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the access levels that are used in creating permissions.","pos":[0,69]}]},{"pos":[5549,5670],"content":"One of the <xref href=\"System.DirectoryServices.DirectoryServicesPermissionAccess\"></xref> values. The default is Browse.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,98],"source":"One of the <xref href=\"System.DirectoryServices.DirectoryServicesPermissionAccess\"></xref> values."},{"content":"The default is Browse.","pos":[99,121]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  id: DirectoryServicesPermissionAttribute\n  children:\n  - System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  - System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission\n  - System.DirectoryServices.DirectoryServicesPermissionAttribute.Path\n  - System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess\n  langs:\n  - csharp\n  name: DirectoryServicesPermissionAttribute\n  nameWithType: DirectoryServicesPermissionAttribute\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  type: Class\n  summary: Allows declarative <xref href=\"System.DirectoryServices\"></xref> permission checks.\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Event, AllowMultiple=true, Inherited=false)]\n\n      public class DirectoryServicesPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute\n  inheritance:\n  - System.Attribute\n  - System.Security.Permissions.SecurityAttribute\n  - System.Security.Permissions.CodeAccessSecurityAttribute\n  implements: []\n  inheritedMembers:\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  langs:\n  - csharp\n  name: DirectoryServicesPermissionAttribute(SecurityAction)\n  nameWithType: DirectoryServicesPermissionAttribute.DirectoryServicesPermissionAttribute(SecurityAction)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.DirectoryServicesPermissionAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the DirectoryServicesPermissionAttribute class.\n  syntax:\n    content: public DirectoryServicesPermissionAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values.\n  overload: System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission\n  id: CreatePermission\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  langs:\n  - csharp\n  name: CreatePermission()\n  nameWithType: DirectoryServicesPermissionAttribute.CreatePermission()\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Creates permissions based on the attribute's specifications.\n  syntax:\n    content: public override System.Security.IPermission CreatePermission ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: An <xref href=\"System.Security.IPermission\"></xref> that represents the created permission.\n  overload: System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.Path\n  id: Path\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  langs:\n  - csharp\n  name: Path\n  nameWithType: DirectoryServicesPermissionAttribute.Path\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.Path\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a path to an Active Directory Domain Services node to which the permissions apply.\n  syntax:\n    content: public string Path { get; set; }\n    return:\n      type: System.String\n      description: The path to an Active Directory Domain Services node. The default is \"*\".\n  overload: System.DirectoryServices.DirectoryServicesPermissionAttribute.Path*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess\n  id: PermissionAccess\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  langs:\n  - csharp\n  name: PermissionAccess\n  nameWithType: DirectoryServicesPermissionAttribute.PermissionAccess\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets the access levels that are used in creating permissions.\n  syntax:\n    content: public System.DirectoryServices.DirectoryServicesPermissionAccess PermissionAccess { get; set; }\n    return:\n      type: System.DirectoryServices.DirectoryServicesPermissionAccess\n      description: One of the <xref href=\"System.DirectoryServices.DirectoryServicesPermissionAccess\"></xref> values. The default is Browse.\n  overload: System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute\n  isExternal: false\n  name: System.Security.Permissions.CodeAccessSecurityAttribute\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  isExternal: false\n  name: DirectoryServicesPermissionAttribute(SecurityAction)\n  nameWithType: DirectoryServicesPermissionAttribute.DirectoryServicesPermissionAttribute(SecurityAction)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.DirectoryServicesPermissionAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  isExternal: false\n  name: CreatePermission()\n  nameWithType: DirectoryServicesPermissionAttribute.CreatePermission()\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.Path\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  isExternal: false\n  name: Path\n  nameWithType: DirectoryServicesPermissionAttribute.Path\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.Path\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  isExternal: false\n  name: PermissionAccess\n  nameWithType: DirectoryServicesPermissionAttribute.PermissionAccess\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess\n- uid: System.DirectoryServices.DirectoryServicesPermissionAccess\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryServicesPermissionAccess\n  nameWithType: DirectoryServicesPermissionAccess\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAccess\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor*\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  isExternal: false\n  name: DirectoryServicesPermissionAttribute\n  nameWithType: DirectoryServicesPermissionAttribute.DirectoryServicesPermissionAttribute\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission*\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  isExternal: false\n  name: CreatePermission\n  nameWithType: DirectoryServicesPermissionAttribute.CreatePermission\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.Path*\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  isExternal: false\n  name: Path\n  nameWithType: DirectoryServicesPermissionAttribute.Path\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess*\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  isExternal: false\n  name: PermissionAccess\n  nameWithType: DirectoryServicesPermissionAttribute.PermissionAccess\n"}