{"nodes":[{"pos":[482,536],"content":"Represents a request to move focus to another control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a request to move focus to another control.","pos":[0,54]}]},{"pos":[549,1550],"content":"This class is used as an input parameter for the <xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=fullName> method. The <xref:System.Windows.UIElement.MoveFocus%2A> method has a WPF framework-level override that provides a more practical implementation (<xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName>), as well as a parallel implementation on <xref:System.Windows.ContentElement> and <xref:System.Windows.FrameworkContentElement>. You typically will set properties on TraversalRequest in order to customize the focusing behavior when you request that the focus be moved to another element.       This class is also used as input parameters for the following methods:      -   <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>, and implementations of that method that are used for interoperation (<xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>).      -   <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This class is used as an input parameter for the <xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=fullName> method. The <xref:System.Windows.UIElement.MoveFocus%2A> method has a WPF framework-level override that provides a more practical implementation (<xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName>), as well as a parallel implementation on <xref:System.Windows.ContentElement> and <xref:System.Windows.FrameworkContentElement>. You typically will set properties on TraversalRequest in order to customize the focusing behavior when you request that the focus be moved to another element.       This class is also used as input parameters for the following methods:      -   <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>, and implementations of that method that are used for interoperation (<xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>).      -   <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>.","pos":[0,995],"nodes":[{"content":"This class is used as an input parameter for the &lt;xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=fullName&gt; method.","pos":[0,126],"source":"This class is used as an input parameter for the <xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=fullName> method."},{"content":"The &lt;xref:System.Windows.UIElement.MoveFocus%2A&gt; method has a WPF framework-level override that provides a more practical implementation (&lt;xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName&gt;), as well as a parallel implementation on &lt;xref:System.Windows.ContentElement&gt; and &lt;xref:System.Windows.FrameworkContentElement&gt;.","pos":[127,471],"source":" The <xref:System.Windows.UIElement.MoveFocus%2A> method has a WPF framework-level override that provides a more practical implementation (<xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName>), as well as a parallel implementation on <xref:System.Windows.ContentElement> and <xref:System.Windows.FrameworkContentElement>."},{"content":"You typically will set properties on TraversalRequest in order to customize the focusing behavior when you request that the focus be moved to another element.","pos":[472,630]},{"content":"This class is also used as input parameters for the following methods:      -   &lt;xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A&gt;, and implementations of that method that are used for interoperation (&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A&gt;).","pos":[637,916],"source":"       This class is also used as input parameters for the following methods:      -   <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>, and implementations of that method that are used for interoperation (<xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>)."},{"content":"-   &lt;xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A&gt;.","pos":[922,995],"source":"      -   <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>."}]}]},{"pos":[2671,2770],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TraversalRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Input.TraversalRequest\"></xref> class."},{"pos":[3490,3567],"content":"The intended direction of the focus traversal, as a value of the enumeration.","needQuote":true,"needEscape":true,"nodes":[{"content":"The intended direction of the focus traversal, as a value of the enumeration.","pos":[0,77]}]},{"pos":[4092,4121],"content":"Gets the traversal direction.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the traversal direction.","pos":[0,29]}]},{"pos":[4133,4325],"content":"This property is read-only because the <xref:System.Windows.Input.FocusNavigationDirection> is a required input parameter of the <xref:System.Windows.Input.TraversalRequest> class constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is read-only because the &lt;xref:System.Windows.Input.FocusNavigationDirection&gt; is a required input parameter of the &lt;xref:System.Windows.Input.TraversalRequest&gt; class constructor.","pos":[0,192],"source":"This property is read-only because the <xref:System.Windows.Input.FocusNavigationDirection> is a required input parameter of the <xref:System.Windows.Input.TraversalRequest> class constructor."}]},{"pos":[4525,4575],"content":"One of the traversal direction enumeration values.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the traversal direction enumeration values.","pos":[0,50]}]},{"pos":[5034,5152],"content":"Gets or sets a value that indicates whether focus traversal has reached the end of child elements that can have focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether focus traversal has reached the end of child elements that can have focus.","pos":[0,118]}]},{"pos":[5165,5876],"content":"Focusable elements are those elements where the <xref:System.Windows.UIElement.Focusable%2A> property is `true`.       This parameter is primarily intended to communicate whether traversal using tab stops should wrap when calling the methods <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>, <xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>,or.<xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>. If you are passing focus to an object that implements <xref:System.Windows.Interop.IKeyboardInputSink>, then specifying true for Wrapped will result in that `true` value being passed to the <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> implementation.","needQuote":false,"needEscape":true,"nodes":[{"content":"Focusable elements are those elements where the &lt;xref:System.Windows.UIElement.Focusable%2A&gt; property is <ph id=\"ph1\">`true`</ph>.","pos":[0,112],"source":"Focusable elements are those elements where the <xref:System.Windows.UIElement.Focusable%2A> property is `true`."},{"content":"This parameter is primarily intended to communicate whether traversal using tab stops should wrap when calling the methods &lt;xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A&gt;, &lt;xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A&gt;,or.&lt;xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A&gt;.","pos":[119,443],"source":"       This parameter is primarily intended to communicate whether traversal using tab stops should wrap when calling the methods <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>, <xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>,or.<xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>."},{"content":"If you are passing focus to an object that implements &lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;, then specifying true for Wrapped will result in that <ph id=\"ph1\">`true`</ph> value being passed to the &lt;xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A&gt; implementation.","pos":[444,709],"source":" If you are passing focus to an object that implements <xref:System.Windows.Interop.IKeyboardInputSink>, then specifying true for Wrapped will result in that `true` value being passed to the <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> implementation."}]},{"pos":[5993,6284],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this traversal has reached the end of child elements that can have focus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this traversal has reached the end of child elements that can have focus; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,212],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this traversal has reached the end of child elements that can have focus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[213,291],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.TraversalRequest\n  id: TraversalRequest\n  children:\n  - System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)\n  - System.Windows.Input.TraversalRequest.FocusNavigationDirection\n  - System.Windows.Input.TraversalRequest.Wrapped\n  langs:\n  - csharp\n  name: TraversalRequest\n  nameWithType: TraversalRequest\n  fullName: System.Windows.Input.TraversalRequest\n  type: Class\n  summary: Represents a request to move focus to another control.\n  remarks: \"This class is used as an input parameter for the <xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=fullName> method. The <xref:System.Windows.UIElement.MoveFocus%2A> method has a WPF framework-level override that provides a more practical implementation (<xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName>), as well as a parallel implementation on <xref:System.Windows.ContentElement> and <xref:System.Windows.FrameworkContentElement>. You typically will set properties on TraversalRequest in order to customize the focusing behavior when you request that the focus be moved to another element.  \\n  \\n This class is also used as input parameters for the following methods:  \\n  \\n-   <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>, and implementations of that method that are used for interoperation (<xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>).  \\n  \\n-   <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>.\"\n  example:\n  - \"The following example creates a TraversalRequest instance as input for a <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName> call.  \\n  \\n [!code-cs[FocusSample#FocusSampleMoveFocus](~/add/codesnippet/csharp/FocusSample/Window1.xaml.cs#focussamplemovefocus)]\\n [!code-vb[FocusSample#FocusSampleMoveFocus](~/add/codesnippet/visualbasic/focussample/window1.xaml.vb#focussamplemovefocus)]\"\n  syntax:\n    content: public class TraversalRequest\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)\n  id: '#ctor(System.Windows.Input.FocusNavigationDirection)'\n  parent: System.Windows.Input.TraversalRequest\n  langs:\n  - csharp\n  name: TraversalRequest(FocusNavigationDirection)\n  nameWithType: TraversalRequest.TraversalRequest(FocusNavigationDirection)\n  fullName: System.Windows.Input.TraversalRequest.TraversalRequest(FocusNavigationDirection)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.TraversalRequest\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example creates a <xref:System.Windows.Input.TraversalRequest> instance as input for a <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName> call.  \\n  \\n [!code-cs[FocusSample#FocusSampleMoveFocus](~/add/codesnippet/csharp/FocusSample/Window1.xaml.cs#focussamplemovefocus)]\\n [!code-vb[FocusSample#FocusSampleMoveFocus](~/add/codesnippet/visualbasic/focussample/window1.xaml.vb#focussamplemovefocus)]\"\n  syntax:\n    content: public TraversalRequest (System.Windows.Input.FocusNavigationDirection focusNavigationDirection);\n    parameters:\n    - id: focusNavigationDirection\n      type: System.Windows.Input.FocusNavigationDirection\n      description: The intended direction of the focus traversal, as a value of the enumeration.\n  overload: System.Windows.Input.TraversalRequest.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.TraversalRequest.FocusNavigationDirection\n  id: FocusNavigationDirection\n  parent: System.Windows.Input.TraversalRequest\n  langs:\n  - csharp\n  name: FocusNavigationDirection\n  nameWithType: TraversalRequest.FocusNavigationDirection\n  fullName: System.Windows.Input.TraversalRequest.FocusNavigationDirection\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Input\n  summary: Gets the traversal direction.\n  remarks: This property is read-only because the <xref:System.Windows.Input.FocusNavigationDirection> is a required input parameter of the <xref:System.Windows.Input.TraversalRequest> class constructor.\n  syntax:\n    content: public System.Windows.Input.FocusNavigationDirection FocusNavigationDirection { get; }\n    return:\n      type: System.Windows.Input.FocusNavigationDirection\n      description: One of the traversal direction enumeration values.\n  overload: System.Windows.Input.TraversalRequest.FocusNavigationDirection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.TraversalRequest.Wrapped\n  id: Wrapped\n  parent: System.Windows.Input.TraversalRequest\n  langs:\n  - csharp\n  name: Wrapped\n  nameWithType: TraversalRequest.Wrapped\n  fullName: System.Windows.Input.TraversalRequest.Wrapped\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Input\n  summary: Gets or sets a value that indicates whether focus traversal has reached the end of child elements that can have focus.\n  remarks: \"Focusable elements are those elements where the <xref:System.Windows.UIElement.Focusable%2A> property is `true`.  \\n  \\n This parameter is primarily intended to communicate whether traversal using tab stops should wrap when calling the methods <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>, <xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>,or.<xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>. If you are passing focus to an object that implements <xref:System.Windows.Interop.IKeyboardInputSink>, then specifying true for Wrapped will result in that `true` value being passed to the <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> implementation.\"\n  syntax:\n    content: public bool Wrapped { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this traversal has reached the end of child elements that can have focus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Input.TraversalRequest.Wrapped*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)\n  parent: System.Windows.Input.TraversalRequest\n  isExternal: false\n  name: TraversalRequest(FocusNavigationDirection)\n  nameWithType: TraversalRequest.TraversalRequest(FocusNavigationDirection)\n  fullName: System.Windows.Input.TraversalRequest.TraversalRequest(FocusNavigationDirection)\n- uid: System.Windows.Input.FocusNavigationDirection\n  parent: System.Windows.Input\n  isExternal: false\n  name: FocusNavigationDirection\n  nameWithType: FocusNavigationDirection\n  fullName: System.Windows.Input.FocusNavigationDirection\n- uid: System.Windows.Input.TraversalRequest.FocusNavigationDirection\n  parent: System.Windows.Input.TraversalRequest\n  isExternal: false\n  name: FocusNavigationDirection\n  nameWithType: TraversalRequest.FocusNavigationDirection\n  fullName: System.Windows.Input.TraversalRequest.FocusNavigationDirection\n- uid: System.Windows.Input.TraversalRequest.Wrapped\n  parent: System.Windows.Input.TraversalRequest\n  isExternal: false\n  name: Wrapped\n  nameWithType: TraversalRequest.Wrapped\n  fullName: System.Windows.Input.TraversalRequest.Wrapped\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.TraversalRequest.#ctor*\n  parent: System.Windows.Input.TraversalRequest\n  isExternal: false\n  name: TraversalRequest\n  nameWithType: TraversalRequest.TraversalRequest\n- uid: System.Windows.Input.TraversalRequest.FocusNavigationDirection*\n  parent: System.Windows.Input.TraversalRequest\n  isExternal: false\n  name: FocusNavigationDirection\n  nameWithType: TraversalRequest.FocusNavigationDirection\n- uid: System.Windows.Input.TraversalRequest.Wrapped*\n  parent: System.Windows.Input.TraversalRequest\n  isExternal: false\n  name: Wrapped\n  nameWithType: TraversalRequest.Wrapped\n"}