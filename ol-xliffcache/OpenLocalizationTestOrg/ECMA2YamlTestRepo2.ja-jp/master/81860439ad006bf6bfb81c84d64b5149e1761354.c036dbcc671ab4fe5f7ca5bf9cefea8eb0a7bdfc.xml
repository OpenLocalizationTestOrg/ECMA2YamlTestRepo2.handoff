{"nodes":[{"pos":[1309,1396],"content":"A wrapping-token that handles encryption for a token that does not natively support it.","needQuote":true,"needEscape":true,"nodes":[{"content":"A wrapping-token that handles encryption for a token that does not natively support it.","pos":[0,87]}]},{"pos":[1408,1714],"content":"For example, a <xref:System.IdentityModel.Tokens.SamlSecurityToken> cannot encrypt itself, so to issue an encrypted SAML11 assertion, wrap a <xref:System.IdentityModel.Tokens.SamlSecurityToken> with an EncryptedSecurityToken and provide appropriate <xref:System.IdentityModel.Tokens.EncryptingCredentials>.","needQuote":true,"needEscape":true,"nodes":[{"content":"For example, a &lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt; cannot encrypt itself, so to issue an encrypted SAML11 assertion, wrap a &lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt; with an EncryptedSecurityToken and provide appropriate &lt;xref:System.IdentityModel.Tokens.EncryptingCredentials&gt;.","pos":[0,306],"source":"For example, a <xref:System.IdentityModel.Tokens.SamlSecurityToken> cannot encrypt itself, so to issue an encrypted SAML11 assertion, wrap a <xref:System.IdentityModel.Tokens.SamlSecurityToken> with an EncryptedSecurityToken and provide appropriate <xref:System.IdentityModel.Tokens.EncryptingCredentials>."}]},{"pos":[2708,2890],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for the specified token by using the specified encrypting credentials.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref> class for the specified token by using the specified encrypting credentials."},{"pos":[2902,2966],"content":"Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inherited from &lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;.","pos":[0,64],"source":"Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>."}]},{"pos":[3249,3270],"content":"The token to encrypt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token to encrypt.","pos":[0,21]}]},{"pos":[3384,3428],"content":"The credentials to use to encrypt the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The credentials to use to encrypt the token.","pos":[0,44]}]},{"pos":[4271,4283],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5118,5130],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5737,5780],"content":"Gets the credentials to use for encryption.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the credentials to use for encryption.","pos":[0,43]}]},{"pos":[5985,6023],"content":"The credentials to use for encryption.","needQuote":true,"needEscape":true,"nodes":[{"content":"The credentials to use for encryption.","pos":[0,38]}]},{"pos":[6528,6577],"content":"Gets the unique identifier of the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the unique identifier of the security token.","pos":[0,49]}]},{"pos":[6693,6737],"content":"The unique identifier of the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique identifier of the security token.","pos":[0,44]}]},{"pos":[7542,7666],"content":"Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.","pos":[0,124]}]},{"pos":[7678,7742],"content":"Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inherited from &lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;.","pos":[0,64],"source":"Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>."}]},{"pos":[8026,8078],"content":"A key identifier clause to compare to this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A key identifier clause to compare to this instance.","pos":[0,52]}]},{"pos":[8137,8344],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified key identifier clause can be resolved by this instance; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified key identifier clause can be resolved by this instance; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9173,9226],"content":"Gets the key for the specified key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the key for the specified key identifier clause.","pos":[0,53]}]},{"pos":[9238,9302],"content":"Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inherited from &lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;.","pos":[0,64],"source":"Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>."}]},{"pos":[9621,9666],"content":"The key identifier clause to get the key for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause to get the key for.","pos":[0,45]}]},{"pos":[9750,9758],"content":"The key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key.","pos":[0,8]}]},{"pos":[10318,10381],"content":"Gets the cryptographic keys associated with the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the cryptographic keys associated with the security token.","pos":[0,63]}]},{"pos":[10393,10457],"content":"Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inherited from &lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;.","pos":[0,64],"source":"Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>."}]},{"pos":[10744,10795],"content":"The set of keys associated with the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The set of keys associated with the security token.","pos":[0,51]}]},{"pos":[11306,11331],"content":"Gets the encrypted token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the encrypted token.","pos":[0,25]}]},{"pos":[11504,11524],"content":"The encrypted token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encrypted token.","pos":[0,20]}]},{"pos":[12048,12116],"content":"Gets the first instant in time at which the security token is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the first instant in time at which the security token is valid.","pos":[0,68]}]},{"pos":[12243,12300],"content":"The instant in time at which the security token is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The instant in time at which the security token is valid.","pos":[0,57]}]},{"pos":[12818,12885],"content":"Gets the last instant in time at which the security token is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the last instant in time at which the security token is valid.","pos":[0,67]}]},{"pos":[13010,13072],"content":"The last instant in time at which the security token is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The last instant in time at which the security token is valid.","pos":[0,62]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken\n  id: EncryptedSecurityToken\n  children:\n  - System.IdentityModel.Tokens.EncryptedSecurityToken.#ctor(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.EncryptingCredentials)\n  - System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause``1\n  - System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause``1\n  - System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials\n  - System.IdentityModel.Tokens.EncryptedSecurityToken.Id\n  - System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys\n  - System.IdentityModel.Tokens.EncryptedSecurityToken.Token\n  - System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom\n  - System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo\n  langs:\n  - csharp\n  name: EncryptedSecurityToken\n  nameWithType: EncryptedSecurityToken\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken\n  type: Class\n  summary: A wrapping-token that handles encryption for a token that does not natively support it.\n  remarks: For example, a <xref:System.IdentityModel.Tokens.SamlSecurityToken> cannot encrypt itself, so to issue an encrypted SAML11 assertion, wrap a <xref:System.IdentityModel.Tokens.SamlSecurityToken> with an EncryptedSecurityToken and provide appropriate <xref:System.IdentityModel.Tokens.EncryptingCredentials>.\n  syntax:\n    content: 'public class EncryptedSecurityToken : System.IdentityModel.Tokens.SecurityToken'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityToken\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.#ctor(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.EncryptingCredentials)\n  id: '#ctor(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.EncryptingCredentials)'\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  langs:\n  - csharp\n  name: EncryptedSecurityToken(SecurityToken,EncryptingCredentials)\n  nameWithType: EncryptedSecurityToken.EncryptedSecurityToken(SecurityToken,EncryptingCredentials)\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptedSecurityToken(SecurityToken,EncryptingCredentials)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref> class for the specified token by using the specified encrypting credentials.\n  remarks: Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.\n  syntax:\n    content: public EncryptedSecurityToken (System.IdentityModel.Tokens.SecurityToken token, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The token to encrypt.\n    - id: encryptingCredentials\n      type: System.IdentityModel.Tokens.EncryptingCredentials\n      description: The credentials to use to encrypt the token.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause``1\n  id: CanCreateKeyIdentifierClause``1\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  langs:\n  - csharp\n  name: CanCreateKeyIdentifierClause()\n  nameWithType: EncryptedSecurityToken.CanCreateKeyIdentifierClause()\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  syntax:\n    content: 'public override bool CanCreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'\n    parameters: []\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause``1\n  id: CreateKeyIdentifierClause``1\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  langs:\n  - csharp\n  name: CreateKeyIdentifierClause()\n  nameWithType: EncryptedSecurityToken.CreateKeyIdentifierClause()\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  syntax:\n    content: 'public override T CreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'\n    parameters: []\n    return:\n      type: T\n      description: To be added.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials\n  id: EncryptingCredentials\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  langs:\n  - csharp\n  name: EncryptingCredentials\n  nameWithType: EncryptedSecurityToken.EncryptingCredentials\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the credentials to use for encryption.\n  syntax:\n    content: public System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; }\n    return:\n      type: System.IdentityModel.Tokens.EncryptingCredentials\n      description: The credentials to use for encryption.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.Id\n  id: Id\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  langs:\n  - csharp\n  name: Id\n  nameWithType: EncryptedSecurityToken.Id\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.Id\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the unique identifier of the security token.\n  syntax:\n    content: public override string Id { get; }\n    return:\n      type: System.String\n      description: The unique identifier of the security token.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.Id*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  langs:\n  - csharp\n  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: EncryptedSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.\n  remarks: Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.\n  syntax:\n    content: public override bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: A key identifier clause to compare to this instance.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified key identifier clause can be resolved by this instance; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  langs:\n  - csharp\n  name: ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: EncryptedSecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the key for the specified key identifier clause.\n  remarks: Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.\n  syntax:\n    content: public override System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to get the key for.\n    return:\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: The key.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys\n  id: SecurityKeys\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  langs:\n  - csharp\n  name: SecurityKeys\n  nameWithType: EncryptedSecurityToken.SecurityKeys\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the cryptographic keys associated with the security token.\n  remarks: Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.\n  syntax:\n    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}\n      description: The set of keys associated with the security token.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.Token\n  id: Token\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  langs:\n  - csharp\n  name: Token\n  nameWithType: EncryptedSecurityToken.Token\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.Token\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the encrypted token.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityToken Token { get; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The encrypted token.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.Token*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom\n  id: ValidFrom\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  langs:\n  - csharp\n  name: ValidFrom\n  nameWithType: EncryptedSecurityToken.ValidFrom\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the first instant in time at which the security token is valid.\n  syntax:\n    content: public override DateTime ValidFrom { get; }\n    return:\n      type: System.DateTime\n      description: The instant in time at which the security token is valid.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo\n  id: ValidTo\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  langs:\n  - csharp\n  name: ValidTo\n  nameWithType: EncryptedSecurityToken.ValidTo\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the last instant in time at which the security token is valid.\n  syntax:\n    content: public override DateTime ValidTo { get; }\n    return:\n      type: System.DateTime\n      description: The last instant in time at which the security token is valid.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.#ctor(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.EncryptingCredentials)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: EncryptedSecurityToken(SecurityToken,EncryptingCredentials)\n  nameWithType: EncryptedSecurityToken.EncryptedSecurityToken(SecurityToken,EncryptingCredentials)\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptedSecurityToken(SecurityToken,EncryptingCredentials)\n- uid: System.IdentityModel.Tokens.EncryptingCredentials\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: EncryptingCredentials\n  nameWithType: EncryptingCredentials\n  fullName: System.IdentityModel.Tokens.EncryptingCredentials\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause``1\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: CanCreateKeyIdentifierClause()\n  nameWithType: EncryptedSecurityToken.CanCreateKeyIdentifierClause()\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause``1\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: CreateKeyIdentifierClause()\n  nameWithType: EncryptedSecurityToken.CreateKeyIdentifierClause()\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: EncryptingCredentials\n  nameWithType: EncryptedSecurityToken.EncryptingCredentials\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.Id\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: Id\n  nameWithType: EncryptedSecurityToken.Id\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.Id\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: EncryptedSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: EncryptedSecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKey\n  nameWithType: SecurityKey\n  fullName: System.IdentityModel.Tokens.SecurityKey\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: SecurityKeys\n  nameWithType: EncryptedSecurityToken.SecurityKeys\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<SecurityKey>\n  nameWithType: ReadOnlyCollection<SecurityKey>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Tokens.SecurityKey\n    name: SecurityKey\n    nameWithType: SecurityKey\n    fullName: SecurityKey\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.Token\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: Token\n  nameWithType: EncryptedSecurityToken.Token\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.Token\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: ValidFrom\n  nameWithType: EncryptedSecurityToken.ValidFrom\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: ValidTo\n  nameWithType: EncryptedSecurityToken.ValidTo\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.#ctor*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: EncryptedSecurityToken\n  nameWithType: EncryptedSecurityToken.EncryptedSecurityToken\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause<T>*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: CanCreateKeyIdentifierClause<T>\n  nameWithType: EncryptedSecurityToken.CanCreateKeyIdentifierClause<T>\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause<T>*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: CreateKeyIdentifierClause<T>\n  nameWithType: EncryptedSecurityToken.CreateKeyIdentifierClause<T>\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: EncryptingCredentials\n  nameWithType: EncryptedSecurityToken.EncryptingCredentials\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.Id*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: Id\n  nameWithType: EncryptedSecurityToken.Id\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: MatchesKeyIdentifierClause\n  nameWithType: EncryptedSecurityToken.MatchesKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: ResolveKeyIdentifierClause\n  nameWithType: EncryptedSecurityToken.ResolveKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: SecurityKeys\n  nameWithType: EncryptedSecurityToken.SecurityKeys\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.Token*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: Token\n  nameWithType: EncryptedSecurityToken.Token\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: ValidFrom\n  nameWithType: EncryptedSecurityToken.ValidFrom\n- uid: System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityToken\n  isExternal: false\n  name: ValidTo\n  nameWithType: EncryptedSecurityToken.ValidTo\n"}