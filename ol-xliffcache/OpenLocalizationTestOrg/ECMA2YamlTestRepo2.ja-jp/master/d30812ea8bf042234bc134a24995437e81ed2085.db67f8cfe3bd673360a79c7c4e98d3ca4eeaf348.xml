{"nodes":[{"pos":[1462,1598],"content":"Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client.","pos":[0,136]}]},{"pos":[1611,2367],"content":"This is commonly used with transports, such as HTTP, that do not allow duplex communications natively. TCP, by contrast, does allow duplex communications natively and so does not require the use of this binding element for the service to send messages back to a client.       The client must expose an address at which the service can contact it to establish a connection from the service to the client. This client address is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> property. Note that [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] auto-generates a <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> if one is not explicitly set by the user.","needQuote":false,"needEscape":true,"nodes":[{"content":"This is commonly used with transports, such as HTTP, that do not allow duplex communications natively.","pos":[0,102]},{"content":"TCP, by contrast, does allow duplex communications natively and so does not require the use of this binding element for the service to send messages back to a client.","pos":[103,269]},{"content":"The client must expose an address at which the service can contact it to establish a connection from the service to the client.","pos":[276,403]},{"content":"This client address is provided by the &lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt; property.","pos":[404,539],"source":" This client address is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> property."},{"content":"Note that <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> auto-generates a &lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt; if one is not explicitly set by the user.","pos":[540,754],"source":" Note that [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] auto-generates a <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> if one is not explicitly set by the user."}]},{"pos":[3235,3355],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Channels.CompositeDuplexBindingElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.CompositeDuplexBindingElement\"></xref> class."},{"pos":[4470,4482],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4581,4593],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5720,5732],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5824,5836],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6861,6873],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6932,6944],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8041,8053],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8112,8124],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8755,8800],"content":"Gets or sets the base address for the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the base address for the client.","pos":[0,45]}]},{"pos":[8813,9121],"content":"This property provides an address at which the service can contact the client. A `null` value causes the system to automatically generate a client base address.       This is a base address, not an absolute address. A GUID is appended to the base address when generating client endpoints from this binding.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property provides an address at which the service can contact the client.","pos":[0,78]},{"content":"A <ph id=\"ph1\">`null`</ph> value causes the system to automatically generate a client base address.","pos":[79,160],"source":" A `null` value causes the system to automatically generate a client base address."},{"content":"This is a base address, not an absolute address.","pos":[167,215]},{"content":"A GUID is appended to the base address when generating client endpoints from this binding.","pos":[216,306]}]},{"pos":[9243,9309],"content":"A <xref:System.Uri> that contains the base address for the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Uri&gt; that contains the base address for the client.","pos":[0,66],"source":"A <xref:System.Uri> that contains the base address for the client."}]},{"pos":[9868,9920],"content":"Returns a deep clone of the current binding element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a deep clone of the current binding element.","pos":[0,52]}]},{"pos":[9933,10773],"content":"Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a clone is not returned, the run-time behavior is undefined.       A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. (This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects. In particular, a deep copy of <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement> copies over the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> value.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a clone is not returned, the run-time behavior is undefined.       A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. (This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects. In particular, a deep copy of <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement> copies over the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> value.","pos":[0,838],"nodes":[{"content":"Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.","pos":[0,123]},{"content":"If a clone is not returned, the run-time behavior is undefined.","pos":[124,187]},{"content":"A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.","pos":[194,323]},{"content":"(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.","pos":[324,451]},{"content":"If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.","pos":[452,632]},{"content":"In particular, a deep copy of &lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement&gt; copies over the &lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt; value.","pos":[633,838],"source":" In particular, a deep copy of <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement> copies over the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> value."}]}]},{"pos":[10974,11108],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Channels.CompositeDuplexBindingElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is a deep clone of the current binding element.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ServiceModel.Channels.CompositeDuplexBindingElement\"></xref> that is a deep clone of the current binding element."},{"pos":[12050,12062],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12108,12120],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13332,13443],"content":"Exports custom policy assertions about bindings that represent the presence of composite duplex in the binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exports custom policy assertions about bindings that represent the presence of composite duplex in the binding.","pos":[0,111]}]},{"pos":[13456,13579],"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph> &lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;.","needQuote":false,"needEscape":true,"source":"[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] <xref:System.ServiceModel.Description.IPolicyExportExtension>."},{"pos":[13886,14009],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExporter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that you can use to modify the exporting process.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that you can use to modify the exporting process."},{"pos":[14115,14252],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.PolicyConversionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that you can use to insert your custom policy assertion.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Description.PolicyConversionContext\"></xref> that you can use to insert your custom policy assertion."},{"pos":[14509,14594],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>context</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  id: CompositeDuplexBindingElement\n  children:\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  langs:\n  - csharp\n  name: CompositeDuplexBindingElement\n  nameWithType: CompositeDuplexBindingElement\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  type: Class\n  summary: Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client.\n  remarks: \"This is commonly used with transports, such as HTTP, that do not allow duplex communications natively. TCP, by contrast, does allow duplex communications natively and so does not require the use of this binding element for the service to send messages back to a client.  \\n  \\n The client must expose an address at which the service can contact it to establish a connection from the service to the client. This client address is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> property. Note that [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] auto-generates a <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> if one is not explicitly set by the user.\"\n  syntax:\n    content: 'public sealed class CompositeDuplexBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension'\n  inheritance:\n  - System.ServiceModel.Channels.BindingElement\n  implements:\n  - System.ServiceModel.Description.IPolicyExportExtension\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: CompositeDuplexBindingElement()\n  nameWithType: CompositeDuplexBindingElement.CompositeDuplexBindingElement()\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CompositeDuplexBindingElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.CompositeDuplexBindingElement\"></xref> class.\n  syntax:\n    content: public CompositeDuplexBindingElement ();\n    parameters: []\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: BuildChannelFactory(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.BuildChannelFactory(BindingContext)\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: To be added.\n    return:\n      type: System.ServiceModel.Channels.IChannelFactory{TChannel}\n      description: To be added.\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory<TChannel>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: BuildChannelListener(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.BuildChannelListener(BindingContext)\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: To be added.\n    return:\n      type: System.ServiceModel.Channels.IChannelListener`1\n      description: To be added.\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener<TChannel>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: CanBuildChannelFactory(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.CanBuildChannelFactory(BindingContext)\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: public override bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory<TChannel>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: CanBuildChannelListener(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.CanBuildChannelListener(BindingContext)\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: 'public override bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener<TChannel>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress\n  id: ClientBaseAddress\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: ClientBaseAddress\n  nameWithType: CompositeDuplexBindingElement.ClientBaseAddress\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the base address for the client.\n  remarks: \"This property provides an address at which the service can contact the client. A `null` value causes the system to automatically generate a client base address.  \\n  \\n This is a base address, not an absolute address. A GUID is appended to the base address when generating client endpoints from this binding.\"\n  syntax:\n    content: public Uri ClientBaseAddress { get; set; }\n    return:\n      type: System.Uri\n      description: A <xref:System.Uri> that contains the base address for the client.\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone\n  id: Clone\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: CompositeDuplexBindingElement.Clone()\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a deep clone of the current binding element.\n  remarks: \"Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a clone is not returned, the run-time behavior is undefined.  \\n  \\n A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. (This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects. In particular, a deep copy of <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement> copies over the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> value.\"\n  syntax:\n    content: public override System.ServiceModel.Channels.BindingElement Clone ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.BindingElement\n      description: A <xref href=\"System.ServiceModel.Channels.CompositeDuplexBindingElement\"></xref> that is a deep clone of the current binding element.\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: GetProperty(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.GetProperty(BindingContext)\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  id: System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  isEii: true\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)\n  nameWithType: CompositeDuplexBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Exports custom policy assertions about bindings that represent the presence of composite duplex in the binding.\n  remarks: '[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] <xref:System.ServiceModel.Description.IPolicyExportExtension>.'\n  syntax:\n    content: void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);\n    parameters:\n    - id: exporter\n      type: System.ServiceModel.Description.MetadataExporter\n      description: The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that you can use to modify the exporting process.\n    - id: context\n      type: System.ServiceModel.Description.PolicyConversionContext\n      description: The <xref href=\"System.ServiceModel.Description.PolicyConversionContext\"></xref> that you can use to insert your custom policy assertion.\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Channels.BindingElement\n  isExternal: false\n  name: System.ServiceModel.Channels.BindingElement\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: CompositeDuplexBindingElement()\n  nameWithType: CompositeDuplexBindingElement.CompositeDuplexBindingElement()\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CompositeDuplexBindingElement()\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: BuildChannelFactory(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.BuildChannelFactory(BindingContext)\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory(BindingContext)\n- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: IChannelFactory<TChannel>\n  nameWithType: IChannelFactory<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>\n  spec.csharp:\n  - uid: System.ServiceModel.Channels.IChannelFactory`1\n    name: IChannelFactory\n    nameWithType: IChannelFactory\n    fullName: IChannelFactory<TChannel>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TChannel\n    name: TChannel\n    nameWithType: TChannel\n    fullName: TChannel\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Channels.BindingContext\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: BindingContext\n  nameWithType: BindingContext\n  fullName: System.ServiceModel.Channels.BindingContext\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: BuildChannelListener(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.BuildChannelListener(BindingContext)\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener(BindingContext)\n- uid: System.ServiceModel.Channels.IChannelListener`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelListener<TChannel>\n  nameWithType: IChannelListener<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: CanBuildChannelFactory(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.CanBuildChannelFactory(BindingContext)\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory(BindingContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: CanBuildChannelListener(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.CanBuildChannelListener(BindingContext)\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener(BindingContext)\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: ClientBaseAddress\n  nameWithType: CompositeDuplexBindingElement.ClientBaseAddress\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: Clone()\n  nameWithType: CompositeDuplexBindingElement.Clone()\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone()\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: GetProperty(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.GetProperty(BindingContext)\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty(BindingContext)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)\n  nameWithType: CompositeDuplexBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)\n- uid: System.ServiceModel.Description.MetadataExporter\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: MetadataExporter\n  nameWithType: MetadataExporter\n  fullName: System.ServiceModel.Description.MetadataExporter\n- uid: System.ServiceModel.Description.PolicyConversionContext\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: PolicyConversionContext\n  nameWithType: PolicyConversionContext\n  fullName: System.ServiceModel.Description.PolicyConversionContext\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: CompositeDuplexBindingElement\n  nameWithType: CompositeDuplexBindingElement.CompositeDuplexBindingElement\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory<TChannel>*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: BuildChannelFactory<TChannel>\n  nameWithType: CompositeDuplexBindingElement.BuildChannelFactory<TChannel>\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener<TChannel>*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: BuildChannelListener<TChannel>\n  nameWithType: CompositeDuplexBindingElement.BuildChannelListener<TChannel>\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory<TChannel>*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>\n  nameWithType: CompositeDuplexBindingElement.CanBuildChannelFactory<TChannel>\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener<TChannel>*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>\n  nameWithType: CompositeDuplexBindingElement.CanBuildChannelListener<TChannel>\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: ClientBaseAddress\n  nameWithType: CompositeDuplexBindingElement.ClientBaseAddress\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: Clone\n  nameWithType: CompositeDuplexBindingElement.Clone\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty<T>*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: GetProperty<T>\n  nameWithType: CompositeDuplexBindingElement.GetProperty<T>\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy\n  nameWithType: CompositeDuplexBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy\n"}