{"nodes":[{"pos":[1093,1271],"content":"Performs symmetric encryption and decryption using the Cryptographic Application Programming Interfaces (CAPI) implementation of the Advanced Encryption Standard (AES) algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs symmetric encryption and decryption using the Cryptographic Application Programming Interfaces (CAPI) implementation of the Advanced Encryption Standard (AES) algorithm.","pos":[0,178]}]},{"pos":[2308,2423],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.AesCryptoServiceProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCryptoServiceProvider\"></xref> class."},{"pos":[2707,2763],"content":"There is no supported key size for the current platform.","needQuote":true,"needEscape":true,"nodes":[{"content":"There is no supported key size for the current platform.","pos":[0,56]}]},{"pos":[3237,3331],"content":"Creates a symmetric AES decryptor object using the current key and initialization vector (IV).","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a symmetric AES decryptor object using the current key and initialization vector (IV).","pos":[0,94]}]},{"pos":[3545,3578],"content":"A symmetric AES decryptor object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A symmetric AES decryptor object.","pos":[0,33]}]},{"pos":[3824,3862],"content":"The current key is invalid or missing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current key is invalid or missing.","pos":[0,38]}]},{"pos":[4433,4529],"content":"Creates a symmetric AES decryptor object using the specified key and initialization vector (IV).","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a symmetric AES decryptor object using the specified key and initialization vector (IV).","pos":[0,96]}]},{"pos":[5191,5241],"content":"The secret key to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]},{"pos":[5300,5361],"content":"The initialization vector to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]}]},{"pos":[5451,5484],"content":"A symmetric AES decryptor object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A symmetric AES decryptor object.","pos":[0,33]}]},{"pos":[5684,5784],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;iv&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>key</code> or <code>iv</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5879,5907],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is invalid.","needQuote":true,"needEscape":true,"source":"<code>key</code> is invalid."},{"pos":[6381,6475],"content":"Creates a symmetric AES encryptor object using the current key and initialization vector (IV).","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a symmetric AES encryptor object using the current key and initialization vector (IV).","pos":[0,94]}]},{"pos":[6689,6722],"content":"A symmetric AES encryptor object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A symmetric AES encryptor object.","pos":[0,33]}]},{"pos":[7393,7485],"content":"Creates a symmetric encryptor object using the specified key and initialization vector (IV).","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a symmetric encryptor object using the specified key and initialization vector (IV).","pos":[0,92]}]},{"pos":[7497,7742],"content":"See the code examples in the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A&gt; and &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A&gt; properties to determine the size of the <ph id=\"ph1\">`key`</ph> and <ph id=\"ph2\">`iv`</ph> parameters.","needQuote":true,"needEscape":true,"source":"See the code examples in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> and <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A> properties to determine the size of the `key` and `iv` parameters."},{"pos":[8379,8429],"content":"The secret key to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]},{"pos":[8488,8549],"content":"The initialization vector to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]}]},{"pos":[8639,8672],"content":"A symmetric AES encryptor object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A symmetric AES encryptor object.","pos":[0,33]}]},{"pos":[8872,8986],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">iv</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>key</code> or <code>iv</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9081,9109],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is invalid.","needQuote":true,"needEscape":true,"source":"<code>key</code> is invalid."},{"pos":[9740,9752],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10293,10364],"content":"Generates a random initialization vector (IV) to use for the algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates a random initialization vector (IV) to use for the algorithm.","pos":[0,71]}]},{"pos":[10683,10737],"content":"The initialization vector (IV) could not be generated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The initialization vector (IV) could not be generated.","pos":[0,54]}]},{"pos":[11191,11239],"content":"Generates a random key to use for the algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates a random key to use for the algorithm.","pos":[0,48]}]},{"pos":[11560,11591],"content":"The key could not be generated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key could not be generated.","pos":[0,31]}]},{"pos":[12001,12075],"content":"Gets or sets the symmetric key that is used for encryption and decryption.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the symmetric key that is used for encryption and decryption.","pos":[0,74]}]},{"pos":[12197,12258],"content":"The symmetric key that is used for encryption and decryption.","needQuote":true,"needEscape":true,"nodes":[{"content":"The symmetric key that is used for encryption and decryption.","pos":[0,61]}]},{"pos":[12446,12532],"content":"The value for the key is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value for the key is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12681,12712],"content":"The size of the key is invalid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the key is invalid.","pos":[0,31]}]},{"pos":[13142,13192],"content":"Gets or sets the size, in bits, of the secret key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the size, in bits, of the secret key.","pos":[0,50]}]},{"pos":[13204,13278],"content":"The minimum size of the key is 128 bits, and the maximum size is 256 bits.","needQuote":true,"needEscape":true,"nodes":[{"content":"The minimum size of the key is 128 bits, and the maximum size is 256 bits.","pos":[0,74]}]},{"pos":[13400,13430],"content":"The size, in bits, of the key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size, in bits, of the key.","pos":[0,30]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.AesCryptoServiceProvider\n  id: AesCryptoServiceProvider\n  children:\n  - System.Security.Cryptography.AesCryptoServiceProvider.#ctor\n  - System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor\n  - System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor\n  - System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.AesCryptoServiceProvider.Dispose(System.Boolean)\n  - System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV\n  - System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey\n  - System.Security.Cryptography.AesCryptoServiceProvider.Key\n  - System.Security.Cryptography.AesCryptoServiceProvider.KeySize\n  langs:\n  - csharp\n  name: AesCryptoServiceProvider\n  nameWithType: AesCryptoServiceProvider\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider\n  type: Class\n  summary: Performs symmetric encryption and decryption using the Cryptographic Application Programming Interfaces (CAPI) implementation of the Advanced Encryption Standard (AES) algorithm.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to encrypt and decrypt sample data using the AesCryptoServiceProvider class.  \\n  \\n [!code-vb[AesCryptoServProvider#1](~/add/codesnippet/visualbasic/t-system.security.crypto_73_1.vb)]\\n [!code-cs[AesCryptoServProvider#1](~/add/codesnippet/csharp/t-system.security.crypto_73_1.cs)]\"\n  syntax:\n    content: 'public sealed class AesCryptoServiceProvider : System.Security.Cryptography.Aes'\n  inheritance:\n  - System.Security.Cryptography.Aes\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: AesCryptoServiceProvider()\n  nameWithType: AesCryptoServiceProvider.AesCryptoServiceProvider()\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.AesCryptoServiceProvider()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCryptoServiceProvider\"></xref> class.\n  syntax:\n    content: public AesCryptoServiceProvider ();\n    parameters: []\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.#ctor*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: There is no supported key size for the current platform.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor\n  id: CreateDecryptor\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateDecryptor()\n  nameWithType: AesCryptoServiceProvider.CreateDecryptor()\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric AES decryptor object using the current key and initialization vector (IV).\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric AES decryptor object.\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The current key is invalid or missing.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  id: CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateDecryptor(Byte[],Byte[])\n  nameWithType: AesCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric AES decryptor object using the specified key and initialization vector (IV).\n  remarks: ''\n  example:\n  - \"The following example shows how to use the CreateDecryptor method to decrypt an encrypted message. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AesCryptoServiceProvider> class.  \\n  \\n [!code-vb[AesCryptoServProvider#3](~/add/codesnippet/visualbasic/da7de4f0-05be-4eb7-95ca-_1.vb)]\\n [!code-cs[AesCryptoServProvider#3](~/add/codesnippet/csharp/da7de4f0-05be-4eb7-95ca-_1.cs)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] key, byte[] iv);\n    parameters:\n    - id: key\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: iv\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric AES decryptor object.\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> or <code>iv</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>key</code> is invalid.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor\n  id: CreateEncryptor\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateEncryptor()\n  nameWithType: AesCryptoServiceProvider.CreateEncryptor()\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric AES encryptor object using the current key and initialization vector (IV).\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric AES encryptor object.\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  id: CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateEncryptor(Byte[],Byte[])\n  nameWithType: AesCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric encryptor object using the specified key and initialization vector (IV).\n  remarks: See the code examples in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> and <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A> properties to determine the size of the `key` and `iv` parameters.\n  example:\n  - \"The following example shows how to use the CreateEncryptor method to encrypt a message. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AesCryptoServiceProvider> class.  \\n  \\n [!code-vb[AesCryptoServProvider#2](~/add/codesnippet/visualbasic/2e043d16-7828-4c0a-bf1c-_1.vb)]\\n [!code-cs[AesCryptoServProvider#2](~/add/codesnippet/csharp/2e043d16-7828-4c0a-bf1c-_1.cs)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] key, byte[] iv);\n    parameters:\n    - id: key\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: iv\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric AES encryptor object.\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>key</code> or <code>iv</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>key</code> is invalid.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: AesCryptoServiceProvider.Dispose(Boolean)\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: To be added.\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV\n  id: GenerateIV\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateIV()\n  nameWithType: AesCryptoServiceProvider.GenerateIV()\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Generates a random initialization vector (IV) to use for the algorithm.\n  syntax:\n    content: public override void GenerateIV ();\n    parameters: []\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The initialization vector (IV) could not be generated.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey\n  id: GenerateKey\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateKey()\n  nameWithType: AesCryptoServiceProvider.GenerateKey()\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Generates a random key to use for the algorithm.\n  syntax:\n    content: public override void GenerateKey ();\n    parameters: []\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The key could not be generated.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Key\n  id: Key\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: Key\n  nameWithType: AesCryptoServiceProvider.Key\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.Key\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the symmetric key that is used for encryption and decryption.\n  syntax:\n    content: public override byte[] Key { get; set; }\n    return:\n      type: System.Byte[]\n      description: The symmetric key that is used for encryption and decryption.\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.Key*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value for the key is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The size of the key is invalid.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.KeySize\n  id: KeySize\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: KeySize\n  nameWithType: AesCryptoServiceProvider.KeySize\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.KeySize\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the size, in bits, of the secret key.\n  remarks: The minimum size of the key is 128 bits, and the maximum size is 256 bits.\n  syntax:\n    content: public override int KeySize { get; set; }\n    return:\n      type: System.Int32\n      description: The size, in bits, of the key.\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.KeySize*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.Aes\n  isExternal: false\n  name: System.Security.Cryptography.Aes\n- uid: System.PlatformNotSupportedException\n  isExternal: true\n  name: System.PlatformNotSupportedException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.#ctor\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: AesCryptoServiceProvider()\n  nameWithType: AesCryptoServiceProvider.AesCryptoServiceProvider()\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.AesCryptoServiceProvider()\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor()\n  nameWithType: AesCryptoServiceProvider.CreateDecryptor()\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor()\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor(Byte[],Byte[])\n  nameWithType: AesCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor()\n  nameWithType: AesCryptoServiceProvider.CreateEncryptor()\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor()\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor(Byte[],Byte[])\n  nameWithType: AesCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: AesCryptoServiceProvider.Dispose(Boolean)\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: GenerateIV()\n  nameWithType: AesCryptoServiceProvider.GenerateIV()\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV()\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: GenerateKey()\n  nameWithType: AesCryptoServiceProvider.GenerateKey()\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey()\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Key\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: Key\n  nameWithType: AesCryptoServiceProvider.Key\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.Key\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.KeySize\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: KeySize\n  nameWithType: AesCryptoServiceProvider.KeySize\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider.KeySize\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.#ctor*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: AesCryptoServiceProvider\n  nameWithType: AesCryptoServiceProvider.AesCryptoServiceProvider\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor\n  nameWithType: AesCryptoServiceProvider.CreateDecryptor\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor\n  nameWithType: AesCryptoServiceProvider.CreateEncryptor\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Dispose*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: Dispose\n  nameWithType: AesCryptoServiceProvider.Dispose\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: GenerateIV\n  nameWithType: AesCryptoServiceProvider.GenerateIV\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: GenerateKey\n  nameWithType: AesCryptoServiceProvider.GenerateKey\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Key*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: Key\n  nameWithType: AesCryptoServiceProvider.Key\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.KeySize*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: KeySize\n  nameWithType: AesCryptoServiceProvider.KeySize\n"}