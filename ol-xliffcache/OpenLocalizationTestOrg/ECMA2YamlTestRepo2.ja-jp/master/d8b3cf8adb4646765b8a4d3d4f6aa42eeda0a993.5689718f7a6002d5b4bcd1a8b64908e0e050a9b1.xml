{"nodes":[{"pos":[463,515],"content":"Contributes an envoy message sink on the client end.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contributes an envoy message sink on the client end.","pos":[0,52]}]},{"pos":[527,975],"content":"The IContributeEnvoySink interface is implemented by context properties in the server <xref:System.Runtime.Remoting.Contexts.Context> class that want to contribute an envoy message sink on the client end. The server envoy chain is composed from those context properties that implement IContributeEnvoySink. The envoy chain resides on the client end and acts as a representative of the corresponding message sinks from the server context properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"The IContributeEnvoySink interface is implemented by context properties in the server <xref:System.Runtime.Remoting.Contexts.Context> class that want to contribute an envoy message sink on the client end. The server envoy chain is composed from those context properties that implement IContributeEnvoySink. The envoy chain resides on the client end and acts as a representative of the corresponding message sinks from the server context properties.","pos":[0,448],"nodes":[{"content":"The IContributeEnvoySink interface is implemented by context properties in the server &lt;xref:System.Runtime.Remoting.Contexts.Context&gt; class that want to contribute an envoy message sink on the client end.","pos":[0,204],"source":"The IContributeEnvoySink interface is implemented by context properties in the server <xref:System.Runtime.Remoting.Contexts.Context> class that want to contribute an envoy message sink on the client end."},{"content":"The server envoy chain is composed from those context properties that implement IContributeEnvoySink.","pos":[205,306]},{"content":"The envoy chain resides on the client end and acts as a representative of the corresponding message sinks from the server context properties.","pos":[307,448]}]}]},{"pos":[1816,1946],"content":"Takes the first sink in the chain of sinks composed so far, and then chains its message sink in front of the chain already formed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Takes the first sink in the chain of sinks composed so far, and then chains its message sink in front of the chain already formed.","pos":[0,130]}]},{"pos":[1958,2142],"content":"The GetEnvoySink method is used as an optimization to create an envoy sink when the destination is a different context in the same application domain and is used by the Wrap operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The GetEnvoySink method is used as an optimization to create an envoy sink when the destination is a different context in the same application domain and is used by the Wrap operation.","pos":[0,184]}]},{"pos":[2403,2458],"content":"The server object for which the chain is being created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The server object for which the chain is being created.","pos":[0,55]}]},{"pos":[2556,2591],"content":"The chain of sinks composed so far.","needQuote":true,"needEscape":true,"nodes":[{"content":"The chain of sinks composed so far.","pos":[0,35]}]},{"pos":[2682,2707],"content":"The composite sink chain.","needQuote":true,"needEscape":true,"nodes":[{"content":"The composite sink chain.","pos":[0,25]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Contexts.IContributeEnvoySink\n  id: IContributeEnvoySink\n  children:\n  - System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMessageSink)\n  langs:\n  - csharp\n  name: IContributeEnvoySink\n  nameWithType: IContributeEnvoySink\n  fullName: System.Runtime.Remoting.Contexts.IContributeEnvoySink\n  type: Interface\n  summary: Contributes an envoy message sink on the client end.\n  remarks: The IContributeEnvoySink interface is implemented by context properties in the server <xref:System.Runtime.Remoting.Contexts.Context> class that want to contribute an envoy message sink on the client end. The server envoy chain is composed from those context properties that implement IContributeEnvoySink. The envoy chain resides on the client end and acts as a representative of the corresponding message sinks from the server context properties.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IContributeEnvoySink\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMessageSink)\n  id: GetEnvoySink(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMessageSink)\n  parent: System.Runtime.Remoting.Contexts.IContributeEnvoySink\n  langs:\n  - csharp\n  name: GetEnvoySink(MarshalByRefObject,IMessageSink)\n  nameWithType: IContributeEnvoySink.GetEnvoySink(MarshalByRefObject,IMessageSink)\n  fullName: System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink(MarshalByRefObject,IMessageSink)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Takes the first sink in the chain of sinks composed so far, and then chains its message sink in front of the chain already formed.\n  remarks: The GetEnvoySink method is used as an optimization to create an envoy sink when the destination is a different context in the same application domain and is used by the Wrap operation.\n  syntax:\n    content: public System.Runtime.Remoting.Messaging.IMessageSink GetEnvoySink (MarshalByRefObject obj, System.Runtime.Remoting.Messaging.IMessageSink nextSink);\n    parameters:\n    - id: obj\n      type: System.MarshalByRefObject\n      description: The server object for which the chain is being created.\n    - id: nextSink\n      type: System.Runtime.Remoting.Messaging.IMessageSink\n      description: The chain of sinks composed so far.\n    return:\n      type: System.Runtime.Remoting.Messaging.IMessageSink\n      description: The composite sink chain.\n  overload: System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMessageSink)\n  parent: System.Runtime.Remoting.Contexts.IContributeEnvoySink\n  isExternal: false\n  name: GetEnvoySink(MarshalByRefObject,IMessageSink)\n  nameWithType: IContributeEnvoySink.GetEnvoySink(MarshalByRefObject,IMessageSink)\n  fullName: System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink(MarshalByRefObject,IMessageSink)\n- uid: System.Runtime.Remoting.Messaging.IMessageSink\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMessageSink\n  nameWithType: IMessageSink\n  fullName: System.Runtime.Remoting.Messaging.IMessageSink\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: false\n  name: MarshalByRefObject\n  nameWithType: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n- uid: System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink*\n  parent: System.Runtime.Remoting.Contexts.IContributeEnvoySink\n  isExternal: false\n  name: GetEnvoySink\n  nameWithType: IContributeEnvoySink.GetEnvoySink\n"}