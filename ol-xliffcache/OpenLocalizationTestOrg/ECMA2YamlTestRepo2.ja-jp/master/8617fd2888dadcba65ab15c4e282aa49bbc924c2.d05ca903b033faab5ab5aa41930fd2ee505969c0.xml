{"nodes":[{"pos":[3276,3406],"content":"Exposes the public members of the &lt;xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt; class to unmanaged code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exposes the public members of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.ConstructorInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> class to unmanaged code.","pos":[0,130],"source":"Exposes the public members of the &lt;xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt; class to unmanaged code."}]},{"pos":[3419,3908],"content":"This interface is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.ConstructorInfo?displayProperty=fullName> class discovers the attributes of a class constructor and provides access to constructor metadata.       The _ConstructorInfo interface preserves the vtable order of the <xref:System.Reflection.ConstructorInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.","needQuote":false,"needEscape":true,"nodes":[{"content":"This interface is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.ConstructorInfo?displayProperty=fullName> class discovers the attributes of a class constructor and provides access to constructor metadata.       The _ConstructorInfo interface preserves the vtable order of the <xref:System.Reflection.ConstructorInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.","pos":[0,485],"nodes":[{"content":"This interface is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,112]},{"content":"The &lt;xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt; class discovers the attributes of a class constructor and provides access to constructor metadata.","pos":[119,287],"source":"       The <xref:System.Reflection.ConstructorInfo?displayProperty=fullName> class discovers the attributes of a class constructor and provides access to constructor metadata."},{"content":"The _ConstructorInfo interface preserves the vtable order of the &lt;xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt; class members that can be accessed by unmanaged COM objects.","pos":[294,485],"source":"       The _ConstructorInfo interface preserves the vtable order of the <xref:System.Reflection.ConstructorInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects."}]}]},{"pos":[4813,4930],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.Attributes*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.Attributes*&gt; property.","pos":[0,117],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.Attributes*> property."}]},{"pos":[4943,5172],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.Attributes%2A> property gets the attributes associated with this method.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.Attributes%2A> property gets the attributes associated with this method.","pos":[0,227],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.Attributes%2A&gt; property gets the attributes associated with this method.","pos":[116,227],"source":"       The <xref:System.Reflection.MethodBase.Attributes%2A> property gets the attributes associated with this method."}]}]},{"pos":[5337,5397],"content":"One of the <xref:System.Reflection.MethodAttributes> values.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the &lt;xref:System.Reflection.MethodAttributes&gt; values.","pos":[0,60],"source":"One of the <xref:System.Reflection.MethodAttributes> values."}]},{"pos":[5939,6063],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.CallingConvention*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.CallingConvention*&gt; property.","pos":[0,124],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.CallingConvention*> property."}]},{"pos":[6076,6328],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.CallingConvention%2A> property gets a value indicating the calling conventions for this method.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.CallingConvention%2A> property gets a value indicating the calling conventions for this method.","pos":[0,250],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.CallingConvention%2A&gt; property gets a value indicating the calling conventions for this method.","pos":[116,250],"source":"       The <xref:System.Reflection.MethodBase.CallingConvention%2A> property gets a value indicating the calling conventions for this method."}]}]},{"pos":[6504,6568],"content":"The <xref:System.Reflection.CallingConventions> for this method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Reflection.CallingConventions&gt; for this method.","pos":[0,64],"source":"The <xref:System.Reflection.CallingConventions> for this method."}]},{"pos":[7097,7217],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.DeclaringType*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt; property.","pos":[0,120],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.DeclaringType*> property."}]},{"pos":[7230,7455],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.","pos":[0,223],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt; property gets the class that declares this member.","pos":[116,223],"source":"       The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member."}]}]},{"pos":[7570,7640],"content":"The <xref:System.Type> object for the class that declares this member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; object for the class that declares this member.","pos":[0,70],"source":"The <xref:System.Type> object for the class that declares this member."}]},{"pos":[8182,8278],"content":"Provides COM objects with version-independent access to the <xref:System.Object.Equals*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Object.Equals*&gt; method.","pos":[0,96],"source":"Provides COM objects with version-independent access to the <xref:System.Object.Equals*> method."}]},{"pos":[8291,8550],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.","pos":[0,257],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Object.Equals%2A&gt; method determines whether the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;.","pos":[116,257],"source":"       The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>."}]}]},{"pos":[8687,8761],"content":"The <xref:System.Object> to compare with the current <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to compare with the current &lt;xref:System.Object&gt;.","pos":[0,74],"source":"The <xref:System.Object> to compare with the current <xref:System.Object>."}]},{"pos":[8820,9039],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref:System.Object> is equal to the current <xref:System.Object>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9644,9768],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.","pos":[0,124],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method."}]},{"pos":[9781,10023],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.","pos":[0,240],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method returns an array containing all the custom attributes.","pos":[116,240],"source":"       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes."}]}]},{"pos":[10180,10263],"content":"Specifies whether to search this member's inheritance chain to find the attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether to search this member's inheritance chain to find the attributes.","pos":[0,83]}]},{"pos":[10323,10433],"content":"An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.","pos":[0,110]}]},{"pos":[11090,11222],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes*&gt; method.","pos":[0,132],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes*> method."}]},{"pos":[11235,11502],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.","pos":[0,265],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A&gt; method returns an array of custom attributes identified by &lt;xref:System.Type&gt;.","pos":[116,265],"source":"       The <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>."}]}]},{"pos":[11682,11781],"content":"The type of attribute to search for. Only attributes that are assignable to this type are returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of attribute to search for. Only attributes that are assignable to this type are returned.","pos":[0,99],"nodes":[{"content":"The type of attribute to search for.","pos":[0,36]},{"content":"Only attributes that are assignable to this type are returned.","pos":[37,99]}]}]},{"pos":[11846,11929],"content":"Specifies whether to search this member's inheritance chain to find the attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether to search this member's inheritance chain to find the attributes.","pos":[0,83]}]},{"pos":[11989,12113],"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","pos":[0,124]}]},{"pos":[12638,12739],"content":"Provides COM objects with version-independent access to the <xref:System.Object.GetHashCode*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Object.GetHashCode*&gt; method.","pos":[0,101],"source":"Provides COM objects with version-independent access to the <xref:System.Object.GetHashCode*> method."}]},{"pos":[12752,13082],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures like a hash table.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures like a hash table.","pos":[0,328],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Object.GetHashCode%2A&gt; method serves as a hash function for a particular type.","pos":[116,211],"source":"       The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type."},{"content":"&lt;xref:System.Object.GetHashCode%2A&gt; is suitable for use in hashing algorithms and data structures like a hash table.","pos":[212,328],"source":" <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures like a hash table."}]}]},{"pos":[13209,13248],"content":"The hash code for the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash code for the current instance.","pos":[0,39]}]},{"pos":[14011,14078],"content":"Maps a set of names to a corresponding set of dispatch identifiers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","pos":[0,67]}]},{"pos":[14090,14276],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.","pos":[110,186],"source":" For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."}]},{"pos":[14476,14518],"content":"Reserved for future use. Must be IID_NULL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]},{"pos":[14584,14622],"content":"Passed-in array of names to be mapped.","needQuote":true,"needEscape":true,"nodes":[{"content":"Passed-in array of names to be mapped.","pos":[0,38]}]},{"pos":[14685,14717],"content":"Count of the names to be mapped.","needQuote":true,"needEscape":true,"nodes":[{"content":"Count of the names to be mapped.","pos":[0,32]}]},{"pos":[14778,14829],"content":"The locale context in which to interpret the names.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locale context in which to interpret the names.","pos":[0,51]}]},{"pos":[14894,14966],"content":"Caller-allocated array that receives the IDs corresponding to the names.","needQuote":true,"needEscape":true,"nodes":[{"content":"Caller-allocated array that receives the IDs corresponding to the names.","pos":[0,72]}]},{"pos":[15570,15703],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.GetMethodImplementationFlags*> member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags*&gt; member.","pos":[0,133],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.GetMethodImplementationFlags*> member."}]},{"pos":[15716,15977],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A> member returns the <xref:System.Reflection.MethodImplAttributes> flags.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A> member returns the <xref:System.Reflection.MethodImplAttributes> flags.","pos":[0,259],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A&gt; member returns the &lt;xref:System.Reflection.MethodImplAttributes&gt; flags.","pos":[116,259],"source":"       The <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A> member returns the <xref:System.Reflection.MethodImplAttributes> flags."}]}]},{"pos":[16182,16238],"content":"The <xref:System.Reflection.MethodImplAttributes> flags.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Reflection.MethodImplAttributes&gt; flags.","pos":[0,56],"source":"The <xref:System.Reflection.MethodImplAttributes> flags."}]},{"pos":[16782,16900],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.GetParameters*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.GetParameters*&gt; method.","pos":[0,118],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.GetParameters*> method."}]},{"pos":[16913,17154],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.GetParameters%2A> method gets the parameters of the specified method or constructor.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.GetParameters%2A> method gets the parameters of the specified method or constructor.","pos":[0,239],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.GetParameters%2A&gt; method gets the parameters of the specified method or constructor.","pos":[116,239],"source":"       The <xref:System.Reflection.MethodBase.GetParameters%2A> method gets the parameters of the specified method or constructor."}]}]},{"pos":[17334,17498],"content":"An array of type <xref:System.Reflection.ParameterInfo> containing information that matches the signature of the method (or constructor) reflected by this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Reflection.ParameterInfo&gt; containing information that matches the signature of the method (or constructor) reflected by this instance.","pos":[0,164],"source":"An array of type <xref:System.Reflection.ParameterInfo> containing information that matches the signature of the method (or constructor) reflected by this instance."}]},{"pos":[17997,18094],"content":"Provides COM objects with version-independent access to the <xref:System.Object.GetType*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Object.GetType*&gt; method.","pos":[0,97],"source":"Provides COM objects with version-independent access to the <xref:System.Object.GetType*> method."}]},{"pos":[18107,18306],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Object.GetType%2A> method gets the type of the current instance.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Object.GetType%2A> method gets the type of the current instance.","pos":[0,197],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Object.GetType%2A&gt; method gets the type of the current instance.","pos":[116,197],"source":"       The <xref:System.Object.GetType%2A> method gets the type of the current instance."}]}]},{"pos":[18429,18457],"content":"A <xref:System.Type> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; object.","pos":[0,28],"source":"A <xref:System.Type> object."}]},{"pos":[19116,19230],"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","pos":[0,114]}]},{"pos":[19242,19426],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.","pos":[110,184],"source":" For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."}]},{"pos":[19594,19625],"content":"The type information to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type information to return.","pos":[0,31]}]},{"pos":[19686,19733],"content":"The locale identifier for the type information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locale identifier for the type information.","pos":[0,47]}]},{"pos":[19797,19857],"content":"Receives a pointer to the requested type information object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Receives a pointer to the requested type information object.","pos":[0,60]}]},{"pos":[20449,20541],"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","pos":[0,92]}]},{"pos":[20553,20742],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.","pos":[110,189],"source":" For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."}]},{"pos":[20894,20994],"content":"Points to a location that receives the number of type information interfaces provided by the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Points to a location that receives the number of type information interfaces provided by the object.","pos":[0,100]}]},{"pos":[21869,21932],"content":"Provides access to properties and methods exposed by an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to properties and methods exposed by an object.","pos":[0,63]}]},{"pos":[21944,22123],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::Invoke`</ph>, see the MSDN Library.","pos":[110,179],"source":" For more information about `IDispatch::Invoke`, see the MSDN Library."}]},{"pos":[22386,22408],"content":"Identifies the member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the member.","pos":[0,22]}]},{"pos":[22467,22509],"content":"Reserved for future use. Must be IID_NULL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]},{"pos":[22570,22621],"content":"The locale context in which to interpret arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locale context in which to interpret arguments.","pos":[0,51]}]},{"pos":[22683,22724],"content":"Flags describing the context of the call.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags describing the context of the call.","pos":[0,41]}]},{"pos":[22792,22951],"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","needQuote":true,"needEscape":true,"nodes":[{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","pos":[0,159]}]},{"pos":[23018,23075],"content":"Pointer to the location where the result is to be stored.","needQuote":true,"needEscape":true,"nodes":[{"content":"Pointer to the location where the result is to be stored.","pos":[0,57]}]},{"pos":[23142,23201],"content":"Pointer to a structure that contains exception information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Pointer to a structure that contains exception information.","pos":[0,59]}]},{"pos":[23266,23316],"content":"The index of the first argument that has an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the first argument that has an error.","pos":[0,50]}]},{"pos":[24194,24305],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.Invoke*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.Invoke*&gt; method.","pos":[0,111],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.Invoke*> method."}]},{"pos":[24318,24677],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder>.","pos":[0,357],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.Invoke%2A&gt; method invokes the constructor reflected by this &lt;xref:System.Reflection.ConstructorInfo&gt; with the specified arguments, under the constraints of the specified &lt;xref:System.Reflection.Binder&gt;.","pos":[116,357],"source":"       The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder>."}]}]},{"pos":[24953,24991],"content":"The instance that created this method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The instance that created this method.","pos":[0,38]}]},{"pos":[25075,25205],"content":"One of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the type of binding.","needQuote":true,"needEscape":true,"source":"One of the <xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"></xref> values that specifies the type of binding."},{"pos":[25279,25661],"content":"A <xref uid=\"langword_csharp_Binder\" name=\"Binder\" href=\"\"></xref> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If `binder` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, then <xref uid=\"langword_csharp_Binder.DefaultBinding\" name=\"Binder.DefaultBinding\" href=\"\"></xref> is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Binder\" name=\"Binder\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.","pos":[0,196],"source":"A <xref uid=\"langword_csharp_Binder\" name=\"Binder\" href=\"\"></xref> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection."},{"content":"If <ph id=\"ph1\">`binder`</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, then <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Binder.DefaultBinding\" name=\"Binder.DefaultBinding\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is used.","pos":[197,382],"source":" If `binder` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, then <xref uid=\"langword_csharp_Binder.DefaultBinding\" name=\"Binder.DefaultBinding\" href=\"\"></xref> is used."}]},{"pos":[25730,26439],"content":"An array of type <xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"></xref> used to match the number, order, and type of the parameters for this constructor, under the constraints of `binder`. If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0]. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. For value-type elements, this value is 0, 0.0, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, depending on the specific element type.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to match the number, order, and type of the parameters for this constructor, under the constraints of <ph id=\"ph1\">`binder`</ph>.","pos":[0,198],"source":"An array of type <xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"></xref> used to match the number, order, and type of the parameters for this constructor, under the constraints of `binder`."},{"content":"If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0].","pos":[199,324]},{"content":"Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.","pos":[325,450]},{"content":"For reference-type elements, this value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[451,555],"source":" For reference-type elements, this value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"For value-type elements, this value is 0, 0.0, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, depending on the specific element type.","pos":[556,709],"source":" For value-type elements, this value is 0, 0.0, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, depending on the specific element type."}]},{"pos":[26522,26750],"content":"A <xref:System.Globalization.CultureInfo> used to govern the coercion of types. If this is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the <xref:System.Globalization.CultureInfo> for the current thread is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Globalization.CultureInfo&gt; used to govern the coercion of types.","pos":[0,79],"source":"A <xref:System.Globalization.CultureInfo> used to govern the coercion of types."},{"content":"If this is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.","pos":[80,228],"source":" If this is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the <xref:System.Globalization.CultureInfo> for the current thread is used."}]},{"pos":[26808,26865],"content":"An instance of the class associated with the constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the class associated with the constructor.","pos":[0,57]}]},{"pos":[27471,27582],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.Invoke*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.Invoke*&gt; method.","pos":[0,111],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.Invoke*> method."}]},{"pos":[27595,27863],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the method or constructor represented by this object, using the specified parameters.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the method or constructor represented by this object, using the specified parameters.","pos":[0,266],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.Invoke%2A&gt; method invokes the method or constructor represented by this object, using the specified parameters.","pos":[116,266],"source":"       The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the method or constructor represented by this object, using the specified parameters."}]}]},{"pos":[28021,28059],"content":"The instance that created this method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The instance that created this method.","pos":[0,38]}]},{"pos":[28129,29183],"content":"An argument list for the invoked method or constructor. This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked. If there are no parameters, `parameters` should be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       If the method or constructor represented by this instance takes a <xref uid=\"langword_csharp_ref\" name=\"ref\" href=\"\"></xref> parameter (<xref uid=\"langword_csharp_ByRef\" name=\"ByRef\" href=\"\"></xref> in Visual Basic), no special attribute is required for that parameter in order to invoke the method or constructor using this function. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. For value-type elements, this value is 0, 0.0, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, depending on the specific element type.","needQuote":false,"needEscape":true,"nodes":[{"content":"An argument list for the invoked method or constructor.","pos":[0,55]},{"content":"This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked.","pos":[56,183]},{"content":"If there are no parameters, <ph id=\"ph1\">`parameters`</ph> should be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[184,296],"source":" If there are no parameters, `parameters` should be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"If the method or constructor represented by this instance takes a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ref\" name=\"ref\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter (<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_ByRef\" name=\"ByRef\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> in Visual Basic), no special attribute is required for that parameter in order to invoke the method or constructor using this function.","pos":[303,637],"source":"       If the method or constructor represented by this instance takes a <xref uid=\"langword_csharp_ref\" name=\"ref\" href=\"\"></xref> parameter (<xref uid=\"langword_csharp_ByRef\" name=\"ByRef\" href=\"\"></xref> in Visual Basic), no special attribute is required for that parameter in order to invoke the method or constructor using this function."},{"content":"Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.","pos":[638,763]},{"content":"For reference-type elements, this value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[764,868],"source":" For reference-type elements, this value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"For value-type elements, this value is 0, 0.0, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, depending on the specific element type.","pos":[869,1022],"source":" For value-type elements, this value is 0, 0.0, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, depending on the specific element type."}]},{"pos":[29242,29299],"content":"An instance of the class associated with the constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the class associated with the constructor.","pos":[0,57]}]},{"pos":[30130,30246],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.ConstructorInfo.Invoke*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.ConstructorInfo.Invoke*&gt; method.","pos":[0,116],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.ConstructorInfo.Invoke*> method."}]},{"pos":[30259,30637],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.ConstructorInfo.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> object with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder> object.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.ConstructorInfo.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> object with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder> object.","pos":[0,376],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.ConstructorInfo.Invoke%2A&gt; method invokes the constructor reflected by this &lt;xref:System.Reflection.ConstructorInfo&gt; object with the specified arguments, under the constraints of the specified &lt;xref:System.Reflection.Binder&gt; object.","pos":[116,376],"source":"       The <xref:System.Reflection.ConstructorInfo.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> object with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder> object."}]}]},{"pos":[30925,31055],"content":"One of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the type of binding.","needQuote":true,"needEscape":true,"source":"One of the <xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"></xref> values that specifies the type of binding."},{"pos":[31129,31511],"content":"A <xref uid=\"langword_csharp_Binder\" name=\"Binder\" href=\"\"></xref> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If `binder` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, then <xref uid=\"langword_csharp_Binder.DefaultBinding\" name=\"Binder.DefaultBinding\" href=\"\"></xref> is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Binder\" name=\"Binder\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.","pos":[0,196],"source":"A <xref uid=\"langword_csharp_Binder\" name=\"Binder\" href=\"\"></xref> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection."},{"content":"If <ph id=\"ph1\">`binder`</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, then <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Binder.DefaultBinding\" name=\"Binder.DefaultBinding\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is used.","pos":[197,382],"source":" If `binder` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, then <xref uid=\"langword_csharp_Binder.DefaultBinding\" name=\"Binder.DefaultBinding\" href=\"\"></xref> is used."}]},{"pos":[31580,32289],"content":"An array of type <xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"></xref> used to match the number, order, and type of the parameters for this constructor, under the constraints of `binder`. If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0]. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. For value-type elements, this value is 0, 0.0, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, depending on the specific element type.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to match the number, order, and type of the parameters for this constructor, under the constraints of <ph id=\"ph1\">`binder`</ph>.","pos":[0,198],"source":"An array of type <xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"></xref> used to match the number, order, and type of the parameters for this constructor, under the constraints of `binder`."},{"content":"If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0].","pos":[199,324]},{"content":"Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.","pos":[325,450]},{"content":"For reference-type elements, this value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[451,555],"source":" For reference-type elements, this value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"For value-type elements, this value is 0, 0.0, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, depending on the specific element type.","pos":[556,709],"source":" For value-type elements, this value is 0, 0.0, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, depending on the specific element type."}]},{"pos":[32372,32600],"content":"A <xref:System.Globalization.CultureInfo> used to govern the coercion of types. If this is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the <xref:System.Globalization.CultureInfo> for the current thread is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Globalization.CultureInfo&gt; used to govern the coercion of types.","pos":[0,79],"source":"A <xref:System.Globalization.CultureInfo> used to govern the coercion of types."},{"content":"If this is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.","pos":[80,228],"source":" If this is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the <xref:System.Globalization.CultureInfo> for the current thread is used."}]},{"pos":[32658,32715],"content":"An instance of the class associated with the constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the class associated with the constructor.","pos":[0,57]}]},{"pos":[33272,33388],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.ConstructorInfo.Invoke*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.ConstructorInfo.Invoke*&gt; method.","pos":[0,116],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.ConstructorInfo.Invoke*> method."}]},{"pos":[33401,33728],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.ConstructorInfo.Invoke%2A> method invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.ConstructorInfo.Invoke%2A> method invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.","pos":[0,325],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.ConstructorInfo.Invoke%2A&gt; method invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.","pos":[116,325],"source":"       The <xref:System.Reflection.ConstructorInfo.Invoke%2A> method invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used."}]}]},{"pos":[33883,34606],"content":"An array of values that matches the number, order, and type (under the constraints of the default binder) of the parameters for this constructor. If this constructor takes no parameters, then use either an array with zero elements or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, as in Object[] parameters = new Object[0]. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. For value-type elements, this value is 0, 0.0, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, depending on the specific element type.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of values that matches the number, order, and type (under the constraints of the default binder) of the parameters for this constructor.","pos":[0,145]},{"content":"If this constructor takes no parameters, then use either an array with zero elements or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, as in Object[] parameters = new Object[0].","pos":[146,338],"source":" If this constructor takes no parameters, then use either an array with zero elements or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, as in Object[] parameters = new Object[0]."},{"content":"Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.","pos":[339,464]},{"content":"For reference-type elements, this value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[465,569],"source":" For reference-type elements, this value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"For value-type elements, this value is 0, 0.0, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, depending on the specific element type.","pos":[570,723],"source":" For value-type elements, this value is 0, 0.0, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, depending on the specific element type."}]},{"pos":[34664,34721],"content":"An instance of the class associated with the constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the class associated with the constructor.","pos":[0,57]}]},{"pos":[35226,35343],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsAbstract*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsAbstract*&gt; property.","pos":[0,117],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsAbstract*> property."}]},{"pos":[35356,35592],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsAbstract%2A> property gets a value indicating whether the method is abstract.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsAbstract%2A> property gets a value indicating whether the method is abstract.","pos":[0,234],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.IsAbstract%2A&gt; property gets a value indicating whether the method is abstract.","pos":[116,234],"source":"       The <xref:System.Reflection.MethodBase.IsAbstract%2A> property gets a value indicating whether the method is abstract."}]}]},{"pos":[35707,35869],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the method is abstract; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method is abstract; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[36376,36493],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsAssembly*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsAssembly*&gt; property.","pos":[0,117],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsAssembly*> property."}]},{"pos":[36506,36783],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsAssembly%2A> property gets a value indicating whether this method can be called by other classes in the same assembly.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsAssembly%2A> property gets a value indicating whether this method can be called by other classes in the same assembly.","pos":[0,275],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.IsAssembly%2A&gt; property gets a value indicating whether this method can be called by other classes in the same assembly.","pos":[116,275],"source":"       The <xref:System.Reflection.MethodBase.IsAssembly%2A> property gets a value indicating whether this method can be called by other classes in the same assembly."}]}]},{"pos":[36898,37101],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this method can be called by other classes in the same assembly; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method can be called by other classes in the same assembly; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[37623,37743],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsConstructor*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsConstructor*&gt; property.","pos":[0,120],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsConstructor*> property."}]},{"pos":[37756,38000],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsConstructor%2A> property gets a value indicating whether the method is a constructor.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsConstructor%2A> property gets a value indicating whether the method is a constructor.","pos":[0,242],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.IsConstructor%2A&gt; property gets a value indicating whether the method is a constructor.","pos":[116,242],"source":"       The <xref:System.Reflection.MethodBase.IsConstructor%2A> property gets a value indicating whether the method is a constructor."}]}]},{"pos":[38118,38286],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this method is a constructor; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method is a constructor; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[38887,39001],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.IsDefined*> member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.IsDefined*&gt; member.","pos":[0,114],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.IsDefined*> member."}]},{"pos":[39014,39277],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.IsDefined%2A> member indicates whether one or more instances of `attributeType` is applied to this member.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt; member indicates whether one or more instances of <ph id=\"ph1\">`attributeType`</ph> is applied to this member.","pos":[116,261],"source":"       The <xref:System.Reflection.MemberInfo.IsDefined%2A> member indicates whether one or more instances of `attributeType` is applied to this member."}]},{"pos":[39443,39558],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to which the custom attributes are applied.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"></xref> object to which the custom attributes are applied."},{"pos":[39623,39706],"content":"Specifies whether to search this member's inheritance chain to find the attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether to search this member's inheritance chain to find the attributes.","pos":[0,83]}]},{"pos":[39765,39981],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if one or more instances of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">attributeType</ph><ept id=\"p2\">&lt;/code&gt;</ept> is applied to this member; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if one or more instances of <code>attributeType</code> is applied to this member; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[40477,40592],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsFamily*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFamily*&gt; property.","pos":[0,115],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsFamily*> property."}]},{"pos":[40605,40911],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsFamily%2A> property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsFamily%2A> property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes.","pos":[0,304],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.IsFamily%2A&gt; property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes.","pos":[116,304],"source":"       The <xref:System.Reflection.MethodBase.IsFamily%2A> property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes."}]}]},{"pos":[41024,41266],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to the class is restricted to members of the class itself and to members of its derived classes; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the class is restricted to members of the class itself and to members of its derived classes; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[41816,41942],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsFamilyAndAssembly*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly*&gt; property.","pos":[0,126],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsFamilyAndAssembly*> property."}]},{"pos":[41955,42255],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A> property gets a value indicating whether this method can be called by derived classes if they are in the same assembly.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A> property gets a value indicating whether this method can be called by derived classes if they are in the same assembly.","pos":[0,298],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A&gt; property gets a value indicating whether this method can be called by derived classes if they are in the same assembly.","pos":[116,298],"source":"       The <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A> property gets a value indicating whether this method can be called by derived classes if they are in the same assembly."}]}]},{"pos":[42379,42649],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to this method is restricted to members of the class itself and to members of derived classes that are in the same assembly; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to this method is restricted to members of the class itself and to members of derived classes that are in the same assembly; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[43205,43330],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsFamilyOrAssembly*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly*&gt; property.","pos":[0,125],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsFamilyOrAssembly*> property."}]},{"pos":[43343,43669],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A> property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A> property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly.","pos":[0,324],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A&gt; property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly.","pos":[116,324],"source":"       The <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A> property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly."}]}]},{"pos":[43792,44095],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to this method is restricted to members of the class itself, members of derived classes wherever they are, and members of other classes in the same assembly; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to this method is restricted to members of the class itself, members of derived classes wherever they are, and members of other classes in the same assembly; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[44595,44709],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsFinal*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFinal*&gt; property.","pos":[0,114],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsFinal*> property."}]},{"pos":[44722,44955],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsFinal%2A> property gets a value indicating whether this method is `final`.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.IsFinal%2A&gt; property gets a value indicating whether this method is <ph id=\"ph1\">`final`</ph>.","pos":[116,231],"source":"       The <xref:System.Reflection.MethodBase.IsFinal%2A> property gets a value indicating whether this method is `final`."}]},{"pos":[45067,45284],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this method is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_final\" name=\"final\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method is <xref uid=\"langword_csharp_final\" name=\"final\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[45793,45911],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsHideBySig*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsHideBySig*&gt; property.","pos":[0,118],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsHideBySig*> property."}]},{"pos":[45924,46232],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsHideBySig%2A> property gets a value indicating whether only a member of the same kind with exactly the same signature is hidden in the derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsHideBySig%2A> property gets a value indicating whether only a member of the same kind with exactly the same signature is hidden in the derived class.","pos":[0,306],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.IsHideBySig%2A&gt; property gets a value indicating whether only a member of the same kind with exactly the same signature is hidden in the derived class.","pos":[116,306],"source":"       The <xref:System.Reflection.MethodBase.IsHideBySig%2A> property gets a value indicating whether only a member of the same kind with exactly the same signature is hidden in the derived class."}]}]},{"pos":[46348,46521],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the member is hidden by signature; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the member is hidden by signature; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[47024,47140],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsPrivate*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsPrivate*&gt; property.","pos":[0,116],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsPrivate*> property."}]},{"pos":[47153,47388],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsPrivate%2A> property gets a value indicating whether this member is private.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsPrivate%2A> property gets a value indicating whether this member is private.","pos":[0,233],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.IsPrivate%2A&gt; property gets a value indicating whether this member is private.","pos":[116,233],"source":"       The <xref:System.Reflection.MethodBase.IsPrivate%2A> property gets a value indicating whether this member is private."}]}]},{"pos":[47502,47714],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to this method is restricted to other members of the class itself; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to this method is restricted to other members of the class itself; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[48210,48325],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsPublic*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsPublic*&gt; property.","pos":[0,115],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsPublic*> property."}]},{"pos":[48338,48573],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsPublic%2A> property gets a value indicating whether this is a public method.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsPublic%2A> property gets a value indicating whether this is a public method.","pos":[0,233],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.IsPublic%2A&gt; property gets a value indicating whether this is a public method.","pos":[116,233],"source":"       The <xref:System.Reflection.MethodBase.IsPublic%2A> property gets a value indicating whether this is a public method."}]}]},{"pos":[48686,48847],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this method is public; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method is public; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[49367,49487],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsSpecialName*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsSpecialName*&gt; property.","pos":[0,120],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsSpecialName*> property."}]},{"pos":[49500,49747],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsSpecialName%2A> property gets a value indicating whether this method has a special name.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsSpecialName%2A> property gets a value indicating whether this method has a special name.","pos":[0,245],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.IsSpecialName%2A&gt; property gets a value indicating whether this method has a special name.","pos":[116,245],"source":"       The <xref:System.Reflection.MethodBase.IsSpecialName%2A> property gets a value indicating whether this method has a special name."}]}]},{"pos":[49865,50035],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this method has a special name; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method has a special name; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[50535,50650],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsStatic*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsStatic*&gt; property.","pos":[0,115],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsStatic*> property."}]},{"pos":[50663,50897],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsStatic%2A> property gets a value indicating whether the method is `static`.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.IsStatic%2A&gt; property gets a value indicating whether the method is <ph id=\"ph1\">`static`</ph>.","pos":[116,232],"source":"       The <xref:System.Reflection.MethodBase.IsStatic%2A> property gets a value indicating whether the method is `static`."}]},{"pos":[51010,51229],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this method is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method is <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[51729,51845],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsVirtual*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsVirtual*&gt; property.","pos":[0,116],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsVirtual*> property."}]},{"pos":[51858,52094],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsVirtual%2A> property gets a value indicating whether the method is `virtual`.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.IsVirtual%2A&gt; property gets a value indicating whether the method is <ph id=\"ph1\">`virtual`</ph>.","pos":[116,234],"source":"       The <xref:System.Reflection.MethodBase.IsVirtual%2A> property gets a value indicating whether the method is `virtual`."}]},{"pos":[52208,52429],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this method is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_virtual\" name=\"virtual\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method is <xref uid=\"langword_csharp_virtual\" name=\"virtual\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[52935,53057],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.ConstructorInfo.MemberType*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.ConstructorInfo.MemberType*&gt; property.","pos":[0,122],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.ConstructorInfo.MemberType*> property."}]},{"pos":[53070,53380],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.ConstructorInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating the type of the member — method, constructor, event, and so on.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.ConstructorInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating the type of the member — method, constructor, event, and so on.","pos":[0,308],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.ConstructorInfo.MemberType%2A&gt; property gets a &lt;xref:System.Reflection.MemberTypes&gt; value indicating the type of the member — method, constructor, event, and so on.","pos":[116,308],"source":"       The <xref:System.Reflection.ConstructorInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating the type of the member — method, constructor, event, and so on."}]}]},{"pos":[53535,53624],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Reflection.MemberTypes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value indicating the type of member.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Reflection.MemberTypes\"></xref> value indicating the type of member."},{"pos":[54141,54260],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.MethodHandle*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.MethodHandle*&gt; property.","pos":[0,119],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.MethodHandle*> property."}]},{"pos":[54273,54522],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.MethodHandle%2A> property gets a handle to the internal metadata representation of a method.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MethodBase.MethodHandle%2A> property gets a handle to the internal metadata representation of a method.","pos":[0,247],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MethodBase.MethodHandle%2A&gt; property gets a handle to the internal metadata representation of a method.","pos":[116,247],"source":"       The <xref:System.Reflection.MethodBase.MethodHandle%2A> property gets a handle to the internal metadata representation of a method."}]}]},{"pos":[54666,54709],"content":"A <xref:System.RuntimeMethodHandle> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.RuntimeMethodHandle&gt; object.","pos":[0,43],"source":"A <xref:System.RuntimeMethodHandle> object."}]},{"pos":[55188,55299],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.Name*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.Name*&gt; property.","pos":[0,111],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.Name*> property."}]},{"pos":[55312,55523],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.","pos":[0,209],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MemberInfo.Name%2A&gt; property gets the name of the current member.","pos":[116,209],"source":"       The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member."}]}]},{"pos":[55633,55691],"content":"A <xref:System.String> containing the name of this member.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; containing the name of this member.","pos":[0,58],"source":"A <xref:System.String> containing the name of this member."}]},{"pos":[56207,56327],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.ReflectedType*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt; property.","pos":[0,120],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.ReflectedType*> property."}]},{"pos":[56340,56623],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this instance of <xref:System.Reflection.MemberInfo>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this instance of <xref:System.Reflection.MemberInfo>.","pos":[0,281],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt; property gets the class object that was used to obtain this instance of &lt;xref:System.Reflection.MemberInfo&gt;.","pos":[116,281],"source":"       The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this instance of <xref:System.Reflection.MemberInfo>."}]}]},{"pos":[56738,56843],"content":"The <xref:System.Type> object through which this <xref:System.Reflection.MemberInfo> object was obtained.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; object through which this &lt;xref:System.Reflection.MemberInfo&gt; object was obtained.","pos":[0,105],"source":"The <xref:System.Type> object through which this <xref:System.Reflection.MemberInfo> object was obtained."}]},{"pos":[57347,57445],"content":"Provides COM objects with version-independent access to the <xref:System.Object.ToString*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Object.ToString*&gt; method.","pos":[0,98],"source":"Provides COM objects with version-independent access to the <xref:System.Object.ToString*> method."}]},{"pos":[57457,57566],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[57693,57751],"content":"A string that represents the current <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents the current &lt;xref:System.Object&gt;.","pos":[0,58],"source":"A string that represents the current <xref:System.Object>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices._ConstructorInfo\n  id: _ConstructorInfo\n  children:\n  - System.Runtime.InteropServices._ConstructorInfo.Attributes\n  - System.Runtime.InteropServices._ConstructorInfo.CallingConvention\n  - System.Runtime.InteropServices._ConstructorInfo.DeclaringType\n  - System.Runtime.InteropServices._ConstructorInfo.Equals(System.Object)\n  - System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Boolean)\n  - System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Runtime.InteropServices._ConstructorInfo.GetHashCode\n  - System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags\n  - System.Runtime.InteropServices._ConstructorInfo.GetParameters\n  - System.Runtime.InteropServices._ConstructorInfo.GetType\n  - System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(System.UInt32@)\n  - System.Runtime.InteropServices._ConstructorInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System.Object,System.Object[])\n  - System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Runtime.InteropServices._ConstructorInfo.Invoke_5(System.Object[])\n  - System.Runtime.InteropServices._ConstructorInfo.IsAbstract\n  - System.Runtime.InteropServices._ConstructorInfo.IsAssembly\n  - System.Runtime.InteropServices._ConstructorInfo.IsConstructor\n  - System.Runtime.InteropServices._ConstructorInfo.IsDefined(System.Type,System.Boolean)\n  - System.Runtime.InteropServices._ConstructorInfo.IsFamily\n  - System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly\n  - System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly\n  - System.Runtime.InteropServices._ConstructorInfo.IsFinal\n  - System.Runtime.InteropServices._ConstructorInfo.IsHideBySig\n  - System.Runtime.InteropServices._ConstructorInfo.IsPrivate\n  - System.Runtime.InteropServices._ConstructorInfo.IsPublic\n  - System.Runtime.InteropServices._ConstructorInfo.IsSpecialName\n  - System.Runtime.InteropServices._ConstructorInfo.IsStatic\n  - System.Runtime.InteropServices._ConstructorInfo.IsVirtual\n  - System.Runtime.InteropServices._ConstructorInfo.MemberType\n  - System.Runtime.InteropServices._ConstructorInfo.MethodHandle\n  - System.Runtime.InteropServices._ConstructorInfo.Name\n  - System.Runtime.InteropServices._ConstructorInfo.ReflectedType\n  - System.Runtime.InteropServices._ConstructorInfo.ToString\n  langs:\n  - csharp\n  name: _ConstructorInfo\n  nameWithType: _ConstructorInfo\n  fullName: System.Runtime.InteropServices._ConstructorInfo\n  type: Interface\n  summary: Exposes the public members of the &lt;xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt; class to unmanaged code.\n  remarks: \"This interface is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.ConstructorInfo?displayProperty=fullName> class discovers the attributes of a class constructor and provides access to constructor metadata.  \\n  \\n The _ConstructorInfo interface preserves the vtable order of the <xref:System.Reflection.ConstructorInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"E9A19478-9646-3679-9B10-8411AE1FD57D\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.ConstructorInfo))]\n\n      public interface _ConstructorInfo\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.Attributes\n  id: Attributes\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: _ConstructorInfo.Attributes\n  fullName: System.Runtime.InteropServices._ConstructorInfo.Attributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.Attributes*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.Attributes%2A> property gets the attributes associated with this method.\"\n  syntax:\n    content: public System.Reflection.MethodAttributes Attributes { get; }\n    return:\n      type: System.Reflection.MethodAttributes\n      description: One of the <xref:System.Reflection.MethodAttributes> values.\n  overload: System.Runtime.InteropServices._ConstructorInfo.Attributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.CallingConvention\n  id: CallingConvention\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: CallingConvention\n  nameWithType: _ConstructorInfo.CallingConvention\n  fullName: System.Runtime.InteropServices._ConstructorInfo.CallingConvention\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.CallingConvention*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.CallingConvention%2A> property gets a value indicating the calling conventions for this method.\"\n  syntax:\n    content: public System.Reflection.CallingConventions CallingConvention { get; }\n    return:\n      type: System.Reflection.CallingConventions\n      description: The <xref:System.Reflection.CallingConventions> for this method.\n  overload: System.Runtime.InteropServices._ConstructorInfo.CallingConvention*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.DeclaringType\n  id: DeclaringType\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: DeclaringType\n  nameWithType: _ConstructorInfo.DeclaringType\n  fullName: System.Runtime.InteropServices._ConstructorInfo.DeclaringType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.DeclaringType*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.\"\n  syntax:\n    content: public Type DeclaringType { get; }\n    return:\n      type: System.Type\n      description: The <xref:System.Type> object for the class that declares this member.\n  overload: System.Runtime.InteropServices._ConstructorInfo.DeclaringType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: _ConstructorInfo.Equals(Object)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Object.Equals*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.\"\n  syntax:\n    content: public bool Equals (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: The <xref:System.Object> to compare with the current <xref:System.Object>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref:System.Object> is equal to the current <xref:System.Object>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._ConstructorInfo.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Boolean)\n  id: GetCustomAttributes(System.Boolean)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: GetCustomAttributes(Boolean)\n  nameWithType: _ConstructorInfo.GetCustomAttributes(Boolean)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.\"\n  syntax:\n    content: public object[] GetCustomAttributes (bool inherit);\n    parameters:\n    - id: inherit\n      type: System.Boolean\n      description: Specifies whether to search this member's inheritance chain to find the attributes.\n    return:\n      type: System.Object[]\n      description: An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.\n  overload: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Type,System.Boolean)\n  id: GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: GetCustomAttributes(Type,Boolean)\n  nameWithType: _ConstructorInfo.GetCustomAttributes(Type,Boolean)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.\"\n  syntax:\n    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The type of attribute to search for. Only attributes that are assignable to this type are returned.\n    - id: inherit\n      type: System.Boolean\n      description: Specifies whether to search this member's inheritance chain to find the attributes.\n    return:\n      type: System.Object[]\n      description: An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.\n  overload: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetHashCode\n  id: GetHashCode\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: _ConstructorInfo.GetHashCode()\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Object.GetHashCode*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures like a hash table.\"\n  syntax:\n    content: public int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for the current instance.\n  overload: System.Runtime.InteropServices._ConstructorInfo.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: _ConstructorInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Maps a set of names to a corresponding set of dispatch identifiers.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.\n  syntax:\n    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: rgszNames\n      type: System.IntPtr\n      description: Passed-in array of names to be mapped.\n    - id: cNames\n      type: System.UInt32\n      description: Count of the names to be mapped.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret the names.\n    - id: rgDispId\n      type: System.IntPtr\n      description: Caller-allocated array that receives the IDs corresponding to the names.\n  overload: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags\n  id: GetMethodImplementationFlags\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: GetMethodImplementationFlags()\n  nameWithType: _ConstructorInfo.GetMethodImplementationFlags()\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.GetMethodImplementationFlags*> member.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A> member returns the <xref:System.Reflection.MethodImplAttributes> flags.\"\n  syntax:\n    content: public System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: The <xref:System.Reflection.MethodImplAttributes> flags.\n  overload: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetParameters\n  id: GetParameters\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: GetParameters()\n  nameWithType: _ConstructorInfo.GetParameters()\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetParameters()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.GetParameters*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.GetParameters%2A> method gets the parameters of the specified method or constructor.\"\n  syntax:\n    content: public System.Reflection.ParameterInfo[] GetParameters ();\n    parameters: []\n    return:\n      type: System.Reflection.ParameterInfo[]\n      description: An array of type <xref:System.Reflection.ParameterInfo> containing information that matches the signature of the method (or constructor) reflected by this instance.\n  overload: System.Runtime.InteropServices._ConstructorInfo.GetParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetType\n  id: GetType\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: GetType()\n  nameWithType: _ConstructorInfo.GetType()\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetType()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Object.GetType*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Object.GetType%2A> method gets the type of the current instance.\"\n  syntax:\n    content: public Type GetType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: A <xref:System.Type> object.\n  overload: System.Runtime.InteropServices._ConstructorInfo.GetType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: _ConstructorInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.\n  syntax:\n    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: The type information to return.\n    - id: lcid\n      type: System.UInt32\n      description: The locale identifier for the type information.\n    - id: ppTInfo\n      type: System.IntPtr\n      description: Receives a pointer to the requested type information object.\n  overload: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(System.UInt32@)\n  id: GetTypeInfoCount(System.UInt32@)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _ConstructorInfo.GetTypeInfoCount(UInt32)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.\n  syntax:\n    content: public void GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: Points to a location that receives the number of type information interfaces provided by the object.\n  overload: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: _ConstructorInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides access to properties and methods exposed by an object.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.\n  syntax:\n    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: Identifies the member.\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret arguments.\n    - id: wFlags\n      type: System.Int16\n      description: Flags describing the context of the call.\n    - id: pDispParams\n      type: System.IntPtr\n      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.\n    - id: pVarResult\n      type: System.IntPtr\n      description: Pointer to the location where the result is to be stored.\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Pointer to a structure that contains exception information.\n    - id: puArgErr\n      type: System.IntPtr\n      description: The index of the first argument that has an error.\n  overload: System.Runtime.InteropServices._ConstructorInfo.Invoke*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  id: Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)\n  nameWithType: _ConstructorInfo.Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.Invoke*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder>.\"\n  syntax:\n    content: public object Invoke_2 (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The instance that created this method.\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: One of the <xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"></xref> values that specifies the type of binding.\n    - id: binder\n      type: System.Reflection.Binder\n      description: A <xref uid=\"langword_csharp_Binder\" name=\"Binder\" href=\"\"></xref> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If `binder` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, then <xref uid=\"langword_csharp_Binder.DefaultBinding\" name=\"Binder.DefaultBinding\" href=\"\"></xref> is used.\n    - id: parameters\n      type: System.Object[]\n      description: An array of type <xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"></xref> used to match the number, order, and type of the parameters for this constructor, under the constraints of `binder`. If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0]. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. For value-type elements, this value is 0, 0.0, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, depending on the specific element type.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref:System.Globalization.CultureInfo> used to govern the coercion of types. If this is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the <xref:System.Globalization.CultureInfo> for the current thread is used.\n    return:\n      type: System.Object\n      description: An instance of the class associated with the constructor.\n  overload: System.Runtime.InteropServices._ConstructorInfo.Invoke_2*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System.Object,System.Object[])\n  id: Invoke_3(System.Object,System.Object[])\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: Invoke_3(Object,Object[])\n  nameWithType: _ConstructorInfo.Invoke_3(Object,Object[])\n  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_3(Object,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.Invoke*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the method or constructor represented by this object, using the specified parameters.\"\n  syntax:\n    content: public object Invoke_3 (object obj, object[] parameters);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The instance that created this method.\n    - id: parameters\n      type: System.Object[]\n      description: \"An argument list for the invoked method or constructor. This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked. If there are no parameters, `parameters` should be <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n If the method or constructor represented by this instance takes a <xref uid=\\\"langword_csharp_ref\\\" name=\\\"ref\\\" href=\\\"\\\"></xref> parameter (<xref uid=\\\"langword_csharp_ByRef\\\" name=\\\"ByRef\\\" href=\\\"\\\"></xref> in Visual Basic), no special attribute is required for that parameter in order to invoke the method or constructor using this function. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>. For value-type elements, this value is 0, 0.0, or <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>, depending on the specific element type.\"\n    return:\n      type: System.Object\n      description: An instance of the class associated with the constructor.\n  overload: System.Runtime.InteropServices._ConstructorInfo.Invoke_3*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  id: Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: Invoke_4(BindingFlags,Binder,Object[],CultureInfo)\n  nameWithType: _ConstructorInfo.Invoke_4(BindingFlags,Binder,Object[],CultureInfo)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_4(BindingFlags,Binder,Object[],CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.ConstructorInfo.Invoke*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.ConstructorInfo.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> object with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder> object.\"\n  syntax:\n    content: public object Invoke_4 (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: One of the <xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"></xref> values that specifies the type of binding.\n    - id: binder\n      type: System.Reflection.Binder\n      description: A <xref uid=\"langword_csharp_Binder\" name=\"Binder\" href=\"\"></xref> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If `binder` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, then <xref uid=\"langword_csharp_Binder.DefaultBinding\" name=\"Binder.DefaultBinding\" href=\"\"></xref> is used.\n    - id: parameters\n      type: System.Object[]\n      description: An array of type <xref uid=\"langword_csharp_Object\" name=\"Object\" href=\"\"></xref> used to match the number, order, and type of the parameters for this constructor, under the constraints of `binder`. If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0]. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. For value-type elements, this value is 0, 0.0, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, depending on the specific element type.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref:System.Globalization.CultureInfo> used to govern the coercion of types. If this is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the <xref:System.Globalization.CultureInfo> for the current thread is used.\n    return:\n      type: System.Object\n      description: An instance of the class associated with the constructor.\n  overload: System.Runtime.InteropServices._ConstructorInfo.Invoke_4*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_5(System.Object[])\n  id: Invoke_5(System.Object[])\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: Invoke_5(Object[])\n  nameWithType: _ConstructorInfo.Invoke_5(Object[])\n  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_5(Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.ConstructorInfo.Invoke*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.ConstructorInfo.Invoke%2A> method invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.\"\n  syntax:\n    content: public object Invoke_5 (object[] parameters);\n    parameters:\n    - id: parameters\n      type: System.Object[]\n      description: An array of values that matches the number, order, and type (under the constraints of the default binder) of the parameters for this constructor. If this constructor takes no parameters, then use either an array with zero elements or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, as in Object[] parameters = new Object[0]. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. For value-type elements, this value is 0, 0.0, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, depending on the specific element type.\n    return:\n      type: System.Object\n      description: An instance of the class associated with the constructor.\n  overload: System.Runtime.InteropServices._ConstructorInfo.Invoke_5*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsAbstract\n  id: IsAbstract\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: IsAbstract\n  nameWithType: _ConstructorInfo.IsAbstract\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsAbstract\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsAbstract*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsAbstract%2A> property gets a value indicating whether the method is abstract.\"\n  syntax:\n    content: public bool IsAbstract { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method is abstract; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._ConstructorInfo.IsAbstract*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsAssembly\n  id: IsAssembly\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: IsAssembly\n  nameWithType: _ConstructorInfo.IsAssembly\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsAssembly*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsAssembly%2A> property gets a value indicating whether this method can be called by other classes in the same assembly.\"\n  syntax:\n    content: public bool IsAssembly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method can be called by other classes in the same assembly; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._ConstructorInfo.IsAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsConstructor\n  id: IsConstructor\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: IsConstructor\n  nameWithType: _ConstructorInfo.IsConstructor\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsConstructor\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsConstructor*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsConstructor%2A> property gets a value indicating whether the method is a constructor.\"\n  syntax:\n    content: public bool IsConstructor { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method is a constructor; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._ConstructorInfo.IsConstructor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsDefined(System.Type,System.Boolean)\n  id: IsDefined(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: IsDefined(Type,Boolean)\n  nameWithType: _ConstructorInfo.IsDefined(Type,Boolean)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsDefined(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.IsDefined*> member.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.IsDefined%2A> member indicates whether one or more instances of `attributeType` is applied to this member.\"\n  syntax:\n    content: public bool IsDefined (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The <xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"></xref> object to which the custom attributes are applied.\n    - id: inherit\n      type: System.Boolean\n      description: Specifies whether to search this member's inheritance chain to find the attributes.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if one or more instances of <code>attributeType</code> is applied to this member; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._ConstructorInfo.IsDefined*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamily\n  id: IsFamily\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: IsFamily\n  nameWithType: _ConstructorInfo.IsFamily\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamily\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsFamily*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsFamily%2A> property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes.\"\n  syntax:\n    content: public bool IsFamily { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the class is restricted to members of the class itself and to members of its derived classes; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._ConstructorInfo.IsFamily*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly\n  id: IsFamilyAndAssembly\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: IsFamilyAndAssembly\n  nameWithType: _ConstructorInfo.IsFamilyAndAssembly\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsFamilyAndAssembly*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A> property gets a value indicating whether this method can be called by derived classes if they are in the same assembly.\"\n  syntax:\n    content: public bool IsFamilyAndAssembly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to this method is restricted to members of the class itself and to members of derived classes that are in the same assembly; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly\n  id: IsFamilyOrAssembly\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: IsFamilyOrAssembly\n  nameWithType: _ConstructorInfo.IsFamilyOrAssembly\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsFamilyOrAssembly*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A> property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly.\"\n  syntax:\n    content: public bool IsFamilyOrAssembly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to this method is restricted to members of the class itself, members of derived classes wherever they are, and members of other classes in the same assembly; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsFinal\n  id: IsFinal\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: IsFinal\n  nameWithType: _ConstructorInfo.IsFinal\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFinal\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsFinal*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsFinal%2A> property gets a value indicating whether this method is `final`.\"\n  syntax:\n    content: public bool IsFinal { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method is <xref uid=\"langword_csharp_final\" name=\"final\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._ConstructorInfo.IsFinal*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig\n  id: IsHideBySig\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: IsHideBySig\n  nameWithType: _ConstructorInfo.IsHideBySig\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsHideBySig*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsHideBySig%2A> property gets a value indicating whether only a member of the same kind with exactly the same signature is hidden in the derived class.\"\n  syntax:\n    content: public bool IsHideBySig { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the member is hidden by signature; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsPrivate\n  id: IsPrivate\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: IsPrivate\n  nameWithType: _ConstructorInfo.IsPrivate\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsPrivate\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsPrivate*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsPrivate%2A> property gets a value indicating whether this member is private.\"\n  syntax:\n    content: public bool IsPrivate { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to this method is restricted to other members of the class itself; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._ConstructorInfo.IsPrivate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsPublic\n  id: IsPublic\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: IsPublic\n  nameWithType: _ConstructorInfo.IsPublic\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsPublic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsPublic*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsPublic%2A> property gets a value indicating whether this is a public method.\"\n  syntax:\n    content: public bool IsPublic { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method is public; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._ConstructorInfo.IsPublic*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName\n  id: IsSpecialName\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: IsSpecialName\n  nameWithType: _ConstructorInfo.IsSpecialName\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsSpecialName*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsSpecialName%2A> property gets a value indicating whether this method has a special name.\"\n  syntax:\n    content: public bool IsSpecialName { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method has a special name; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsStatic\n  id: IsStatic\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: IsStatic\n  nameWithType: _ConstructorInfo.IsStatic\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsStatic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsStatic*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsStatic%2A> property gets a value indicating whether the method is `static`.\"\n  syntax:\n    content: public bool IsStatic { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method is <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._ConstructorInfo.IsStatic*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsVirtual\n  id: IsVirtual\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: IsVirtual\n  nameWithType: _ConstructorInfo.IsVirtual\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsVirtual\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsVirtual*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsVirtual%2A> property gets a value indicating whether the method is `virtual`.\"\n  syntax:\n    content: public bool IsVirtual { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method is <xref uid=\"langword_csharp_virtual\" name=\"virtual\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._ConstructorInfo.IsVirtual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.MemberType\n  id: MemberType\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: MemberType\n  nameWithType: _ConstructorInfo.MemberType\n  fullName: System.Runtime.InteropServices._ConstructorInfo.MemberType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.ConstructorInfo.MemberType*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.ConstructorInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating the type of the member — method, constructor, event, and so on.\"\n  syntax:\n    content: public System.Reflection.MemberTypes MemberType { get; }\n    return:\n      type: System.Reflection.MemberTypes\n      description: A <xref href=\"System.Reflection.MemberTypes\"></xref> value indicating the type of member.\n  overload: System.Runtime.InteropServices._ConstructorInfo.MemberType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.MethodHandle\n  id: MethodHandle\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: MethodHandle\n  nameWithType: _ConstructorInfo.MethodHandle\n  fullName: System.Runtime.InteropServices._ConstructorInfo.MethodHandle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.MethodHandle*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.MethodHandle%2A> property gets a handle to the internal metadata representation of a method.\"\n  syntax:\n    content: public RuntimeMethodHandle MethodHandle { get; }\n    return:\n      type: System.RuntimeMethodHandle\n      description: A <xref:System.RuntimeMethodHandle> object.\n  overload: System.Runtime.InteropServices._ConstructorInfo.MethodHandle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.Name\n  id: Name\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: Name\n  nameWithType: _ConstructorInfo.Name\n  fullName: System.Runtime.InteropServices._ConstructorInfo.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.Name*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the name of this member.\n  overload: System.Runtime.InteropServices._ConstructorInfo.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.ReflectedType\n  id: ReflectedType\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: ReflectedType\n  nameWithType: _ConstructorInfo.ReflectedType\n  fullName: System.Runtime.InteropServices._ConstructorInfo.ReflectedType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.ReflectedType*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this instance of <xref:System.Reflection.MemberInfo>.\"\n  syntax:\n    content: public Type ReflectedType { get; }\n    return:\n      type: System.Type\n      description: The <xref:System.Type> object through which this <xref:System.Reflection.MemberInfo> object was obtained.\n  overload: System.Runtime.InteropServices._ConstructorInfo.ReflectedType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ConstructorInfo.ToString\n  id: ToString\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: _ConstructorInfo.ToString()\n  fullName: System.Runtime.InteropServices._ConstructorInfo.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Object.ToString*> method.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code.\n  syntax:\n    content: public string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current <xref:System.Object>.\n  overload: System.Runtime.InteropServices._ConstructorInfo.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.InteropServices._ConstructorInfo.Attributes\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: _ConstructorInfo.Attributes\n  fullName: System.Runtime.InteropServices._ConstructorInfo.Attributes\n- uid: System.Reflection.MethodAttributes\n  parent: System.Reflection\n  isExternal: true\n  name: MethodAttributes\n  nameWithType: MethodAttributes\n  fullName: System.Reflection.MethodAttributes\n- uid: System.Runtime.InteropServices._ConstructorInfo.CallingConvention\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: CallingConvention\n  nameWithType: _ConstructorInfo.CallingConvention\n  fullName: System.Runtime.InteropServices._ConstructorInfo.CallingConvention\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: true\n  name: CallingConventions\n  nameWithType: CallingConventions\n  fullName: System.Reflection.CallingConventions\n- uid: System.Runtime.InteropServices._ConstructorInfo.DeclaringType\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: DeclaringType\n  nameWithType: _ConstructorInfo.DeclaringType\n  fullName: System.Runtime.InteropServices._ConstructorInfo.DeclaringType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Runtime.InteropServices._ConstructorInfo.Equals(System.Object)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: _ConstructorInfo.Equals(Object)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Boolean)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: _ConstructorInfo.GetCustomAttributes(Boolean)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(Boolean)\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: GetCustomAttributes(Type,Boolean)\n  nameWithType: _ConstructorInfo.GetCustomAttributes(Type,Boolean)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(Type,Boolean)\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetHashCode\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: _ConstructorInfo.GetHashCode()\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: _ConstructorInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: true\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: GetMethodImplementationFlags()\n  nameWithType: _ConstructorInfo.GetMethodImplementationFlags()\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags()\n- uid: System.Reflection.MethodImplAttributes\n  parent: System.Reflection\n  isExternal: true\n  name: MethodImplAttributes\n  nameWithType: MethodImplAttributes\n  fullName: System.Reflection.MethodImplAttributes\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetParameters\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: GetParameters()\n  nameWithType: _ConstructorInfo.GetParameters()\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetParameters()\n- uid: System.Reflection.ParameterInfo[]\n  parent: System.Reflection\n  isExternal: true\n  name: ParameterInfo\n  nameWithType: ParameterInfo\n  fullName: System.Reflection.ParameterInfo[]\n  spec.csharp:\n  - uid: System.Reflection.ParameterInfo\n    name: ParameterInfo\n    nameWithType: ParameterInfo\n    fullName: ParameterInfo[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetType\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: GetType()\n  nameWithType: _ConstructorInfo.GetType()\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetType()\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: _ConstructorInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(System.UInt32@)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _ConstructorInfo.GetTypeInfoCount(UInt32)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(UInt32)\n- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: _ConstructorInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: true\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)\n  nameWithType: _ConstructorInfo.Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System.Object,System.Object[])\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: Invoke_3(Object,Object[])\n  nameWithType: _ConstructorInfo.Invoke_3(Object,Object[])\n  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_3(Object,Object[])\n- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: Invoke_4(BindingFlags,Binder,Object[],CultureInfo)\n  nameWithType: _ConstructorInfo.Invoke_4(BindingFlags,Binder,Object[],CultureInfo)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_4(BindingFlags,Binder,Object[],CultureInfo)\n- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_5(System.Object[])\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: Invoke_5(Object[])\n  nameWithType: _ConstructorInfo.Invoke_5(Object[])\n  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_5(Object[])\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsAbstract\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsAbstract\n  nameWithType: _ConstructorInfo.IsAbstract\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsAbstract\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsAssembly\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsAssembly\n  nameWithType: _ConstructorInfo.IsAssembly\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsAssembly\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsConstructor\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsConstructor\n  nameWithType: _ConstructorInfo.IsConstructor\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsConstructor\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsDefined(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsDefined(Type,Boolean)\n  nameWithType: _ConstructorInfo.IsDefined(Type,Boolean)\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsDefined(Type,Boolean)\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamily\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsFamily\n  nameWithType: _ConstructorInfo.IsFamily\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamily\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsFamilyAndAssembly\n  nameWithType: _ConstructorInfo.IsFamilyAndAssembly\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsFamilyOrAssembly\n  nameWithType: _ConstructorInfo.IsFamilyOrAssembly\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsFinal\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsFinal\n  nameWithType: _ConstructorInfo.IsFinal\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFinal\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsHideBySig\n  nameWithType: _ConstructorInfo.IsHideBySig\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsPrivate\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsPrivate\n  nameWithType: _ConstructorInfo.IsPrivate\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsPrivate\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsPublic\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsPublic\n  nameWithType: _ConstructorInfo.IsPublic\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsPublic\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: _ConstructorInfo.IsSpecialName\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsStatic\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsStatic\n  nameWithType: _ConstructorInfo.IsStatic\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsStatic\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsVirtual\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsVirtual\n  nameWithType: _ConstructorInfo.IsVirtual\n  fullName: System.Runtime.InteropServices._ConstructorInfo.IsVirtual\n- uid: System.Runtime.InteropServices._ConstructorInfo.MemberType\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: _ConstructorInfo.MemberType\n  fullName: System.Runtime.InteropServices._ConstructorInfo.MemberType\n- uid: System.Reflection.MemberTypes\n  parent: System.Reflection\n  isExternal: false\n  name: MemberTypes\n  nameWithType: MemberTypes\n  fullName: System.Reflection.MemberTypes\n- uid: System.Runtime.InteropServices._ConstructorInfo.MethodHandle\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: MethodHandle\n  nameWithType: _ConstructorInfo.MethodHandle\n  fullName: System.Runtime.InteropServices._ConstructorInfo.MethodHandle\n- uid: System.RuntimeMethodHandle\n  parent: System\n  isExternal: true\n  name: RuntimeMethodHandle\n  nameWithType: RuntimeMethodHandle\n  fullName: System.RuntimeMethodHandle\n- uid: System.Runtime.InteropServices._ConstructorInfo.Name\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: Name\n  nameWithType: _ConstructorInfo.Name\n  fullName: System.Runtime.InteropServices._ConstructorInfo.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.InteropServices._ConstructorInfo.ReflectedType\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: ReflectedType\n  nameWithType: _ConstructorInfo.ReflectedType\n  fullName: System.Runtime.InteropServices._ConstructorInfo.ReflectedType\n- uid: System.Runtime.InteropServices._ConstructorInfo.ToString\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: ToString()\n  nameWithType: _ConstructorInfo.ToString()\n  fullName: System.Runtime.InteropServices._ConstructorInfo.ToString()\n- uid: System.Runtime.InteropServices._ConstructorInfo.Attributes*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: _ConstructorInfo.Attributes\n- uid: System.Runtime.InteropServices._ConstructorInfo.CallingConvention*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: CallingConvention\n  nameWithType: _ConstructorInfo.CallingConvention\n- uid: System.Runtime.InteropServices._ConstructorInfo.DeclaringType*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: DeclaringType\n  nameWithType: _ConstructorInfo.DeclaringType\n- uid: System.Runtime.InteropServices._ConstructorInfo.Equals*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: Equals\n  nameWithType: _ConstructorInfo.Equals\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: GetCustomAttributes\n  nameWithType: _ConstructorInfo.GetCustomAttributes\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetHashCode*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: GetHashCode\n  nameWithType: _ConstructorInfo.GetHashCode\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: GetIDsOfNames\n  nameWithType: _ConstructorInfo.GetIDsOfNames\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: GetMethodImplementationFlags\n  nameWithType: _ConstructorInfo.GetMethodImplementationFlags\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetParameters*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: GetParameters\n  nameWithType: _ConstructorInfo.GetParameters\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetType*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: GetType\n  nameWithType: _ConstructorInfo.GetType\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: GetTypeInfo\n  nameWithType: _ConstructorInfo.GetTypeInfo\n- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: GetTypeInfoCount\n  nameWithType: _ConstructorInfo.GetTypeInfoCount\n- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: Invoke\n  nameWithType: _ConstructorInfo.Invoke\n- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_2*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: Invoke_2\n  nameWithType: _ConstructorInfo.Invoke_2\n- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_3*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: Invoke_3\n  nameWithType: _ConstructorInfo.Invoke_3\n- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_4*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: Invoke_4\n  nameWithType: _ConstructorInfo.Invoke_4\n- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_5*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: Invoke_5\n  nameWithType: _ConstructorInfo.Invoke_5\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsAbstract*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsAbstract\n  nameWithType: _ConstructorInfo.IsAbstract\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsAssembly*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsAssembly\n  nameWithType: _ConstructorInfo.IsAssembly\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsConstructor*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsConstructor\n  nameWithType: _ConstructorInfo.IsConstructor\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsDefined*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsDefined\n  nameWithType: _ConstructorInfo.IsDefined\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamily*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsFamily\n  nameWithType: _ConstructorInfo.IsFamily\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsFamilyAndAssembly\n  nameWithType: _ConstructorInfo.IsFamilyAndAssembly\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsFamilyOrAssembly\n  nameWithType: _ConstructorInfo.IsFamilyOrAssembly\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsFinal*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsFinal\n  nameWithType: _ConstructorInfo.IsFinal\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsHideBySig\n  nameWithType: _ConstructorInfo.IsHideBySig\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsPrivate*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsPrivate\n  nameWithType: _ConstructorInfo.IsPrivate\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsPublic*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsPublic\n  nameWithType: _ConstructorInfo.IsPublic\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: _ConstructorInfo.IsSpecialName\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsStatic*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsStatic\n  nameWithType: _ConstructorInfo.IsStatic\n- uid: System.Runtime.InteropServices._ConstructorInfo.IsVirtual*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: IsVirtual\n  nameWithType: _ConstructorInfo.IsVirtual\n- uid: System.Runtime.InteropServices._ConstructorInfo.MemberType*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: _ConstructorInfo.MemberType\n- uid: System.Runtime.InteropServices._ConstructorInfo.MethodHandle*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: MethodHandle\n  nameWithType: _ConstructorInfo.MethodHandle\n- uid: System.Runtime.InteropServices._ConstructorInfo.Name*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: Name\n  nameWithType: _ConstructorInfo.Name\n- uid: System.Runtime.InteropServices._ConstructorInfo.ReflectedType*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: ReflectedType\n  nameWithType: _ConstructorInfo.ReflectedType\n- uid: System.Runtime.InteropServices._ConstructorInfo.ToString*\n  parent: System.Runtime.InteropServices._ConstructorInfo\n  isExternal: false\n  name: ToString\n  nameWithType: _ConstructorInfo.ToString\n"}