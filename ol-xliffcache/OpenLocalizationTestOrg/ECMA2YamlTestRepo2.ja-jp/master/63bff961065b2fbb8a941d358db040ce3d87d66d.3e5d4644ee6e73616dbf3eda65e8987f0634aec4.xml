{"nodes":[{"pos":[429,543],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Text.RegularExpressions.RegexRunner\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for a compiled regular expression.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Text.RegularExpressions.RegexRunner\"></xref> class for a compiled regular expression."},{"pos":[555,1167],"content":"A <xref:System.Text.RegularExpressions.RegexRunner> object executes a compiled regular expression. A regular expression that is compiled to an assembly becomes a type in that assembly, and an object of that type is typically created using reflection. However, creating an object by reflection is an expensive operation. The RegexRunnerFactory class improves the performance of the .NET Framework by providing the <xref:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance%2A> method, which creates a <xref:System.Text.RegularExpressions.RegexRunner> object for a specific compiled regular expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.Text.RegularExpressions.RegexRunner> object executes a compiled regular expression. A regular expression that is compiled to an assembly becomes a type in that assembly, and an object of that type is typically created using reflection. However, creating an object by reflection is an expensive operation. The RegexRunnerFactory class improves the performance of the .NET Framework by providing the <xref:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance%2A> method, which creates a <xref:System.Text.RegularExpressions.RegexRunner> object for a specific compiled regular expression.","pos":[0,612],"nodes":[{"content":"A &lt;xref:System.Text.RegularExpressions.RegexRunner&gt; object executes a compiled regular expression.","pos":[0,98],"source":"A <xref:System.Text.RegularExpressions.RegexRunner> object executes a compiled regular expression."},{"content":"A regular expression that is compiled to an assembly becomes a type in that assembly, and an object of that type is typically created using reflection.","pos":[99,250]},{"content":"However, creating an object by reflection is an expensive operation.","pos":[251,319]},{"content":"The RegexRunnerFactory class improves the performance of the .NET Framework by providing the &lt;xref:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance%2A&gt; method, which creates a &lt;xref:System.Text.RegularExpressions.RegexRunner&gt; object for a specific compiled regular expression.","pos":[320,612],"source":" The RegexRunnerFactory class improves the performance of the .NET Framework by providing the <xref:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance%2A> method, which creates a <xref:System.Text.RegularExpressions.RegexRunner> object for a specific compiled regular expression."}]}]},{"pos":[1859,1970],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Text.RegularExpressions.RegexRunnerFactory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Text.RegularExpressions.RegexRunnerFactory\"></xref> class."},{"pos":[2579,2739],"content":"When overridden in a derived class, creates a <bpt id=\"p1\">&lt;xref href=\"System.Text.RegularExpressions.RegexRunner\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for a specific compiled regular expression.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, creates a <xref href=\"System.Text.RegularExpressions.RegexRunner\"></xref> object for a specific compiled regular expression."},{"pos":[2949,3081],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Text.RegularExpressions.RegexRunner\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object designed to execute a specific compiled regular expression.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Text.RegularExpressions.RegexRunner\"></xref> object designed to execute a specific compiled regular expression."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Text.RegularExpressions.RegexRunnerFactory\n  id: RegexRunnerFactory\n  children:\n  - System.Text.RegularExpressions.RegexRunnerFactory.#ctor\n  - System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance\n  langs:\n  - csharp\n  name: RegexRunnerFactory\n  nameWithType: RegexRunnerFactory\n  fullName: System.Text.RegularExpressions.RegexRunnerFactory\n  type: Class\n  summary: Creates a <xref href=\"System.Text.RegularExpressions.RegexRunner\"></xref> class for a compiled regular expression.\n  remarks: A <xref:System.Text.RegularExpressions.RegexRunner> object executes a compiled regular expression. A regular expression that is compiled to an assembly becomes a type in that assembly, and an object of that type is typically created using reflection. However, creating an object by reflection is an expensive operation. The RegexRunnerFactory class improves the performance of the .NET Framework by providing the <xref:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance%2A> method, which creates a <xref:System.Text.RegularExpressions.RegexRunner> object for a specific compiled regular expression.\n  syntax:\n    content: >-\n      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]\n\n      public abstract class RegexRunnerFactory\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Text.RegularExpressions.RegexRunnerFactory.#ctor\n  id: '#ctor'\n  parent: System.Text.RegularExpressions.RegexRunnerFactory\n  langs:\n  - csharp\n  name: RegexRunnerFactory()\n  nameWithType: RegexRunnerFactory.RegexRunnerFactory()\n  fullName: System.Text.RegularExpressions.RegexRunnerFactory.RegexRunnerFactory()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Text.RegularExpressions\n  summary: Initializes a new instance of the <xref href=\"System.Text.RegularExpressions.RegexRunnerFactory\"></xref> class.\n  syntax:\n    content: protected RegexRunnerFactory ();\n    parameters: []\n  overload: System.Text.RegularExpressions.RegexRunnerFactory.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance\n  id: CreateInstance\n  parent: System.Text.RegularExpressions.RegexRunnerFactory\n  langs:\n  - csharp\n  name: CreateInstance()\n  nameWithType: RegexRunnerFactory.CreateInstance()\n  fullName: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Text.RegularExpressions\n  summary: When overridden in a derived class, creates a <xref href=\"System.Text.RegularExpressions.RegexRunner\"></xref> object for a specific compiled regular expression.\n  syntax:\n    content: protected abstract System.Text.RegularExpressions.RegexRunner CreateInstance ();\n    parameters: []\n    return:\n      type: System.Text.RegularExpressions.RegexRunner\n      description: A <xref href=\"System.Text.RegularExpressions.RegexRunner\"></xref> object designed to execute a specific compiled regular expression.\n  overload: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Text.RegularExpressions.RegexRunnerFactory.#ctor\n  parent: System.Text.RegularExpressions.RegexRunnerFactory\n  isExternal: false\n  name: RegexRunnerFactory()\n  nameWithType: RegexRunnerFactory.RegexRunnerFactory()\n  fullName: System.Text.RegularExpressions.RegexRunnerFactory.RegexRunnerFactory()\n- uid: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance\n  parent: System.Text.RegularExpressions.RegexRunnerFactory\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: RegexRunnerFactory.CreateInstance()\n  fullName: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance()\n- uid: System.Text.RegularExpressions.RegexRunner\n  parent: System.Text.RegularExpressions\n  isExternal: false\n  name: RegexRunner\n  nameWithType: RegexRunner\n  fullName: System.Text.RegularExpressions.RegexRunner\n- uid: System.Text.RegularExpressions.RegexRunnerFactory.#ctor*\n  parent: System.Text.RegularExpressions.RegexRunnerFactory\n  isExternal: false\n  name: RegexRunnerFactory\n  nameWithType: RegexRunnerFactory.RegexRunnerFactory\n- uid: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance*\n  parent: System.Text.RegularExpressions.RegexRunnerFactory\n  isExternal: false\n  name: CreateInstance\n  nameWithType: RegexRunnerFactory.CreateInstance\n"}