{"nodes":[{"pos":[497,539],"content":"Represents a reference to a default value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a reference to a default value.","pos":[0,42]}]},{"pos":[552,2731],"content":"A CodeDefaultValueExpression can be used to represent a reference to a default value.       The <xref:System.CodeDom.CodeDefaultValueExpression.Type%2A> property specifies the reference to the value type. The CodeDefaultValueExpression class is used in the generation of generics-based code. For more information on generics, see [Generics in the .NET Framework Class Library](~/add/includes/ajax-current-ext-md.md). The following code steps are provided in this section to further describe the use of the CodeDefaultValueExpression class to add a new default value to a code graph.       The code in part 1 is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class. This code, when run through the C# code generator, results in the C# code that appears in part 2. When this code is called in the statement in part 3, the result is the output shown in part 4.      ```   // Part 1: Code to create a generic Print method.               CodeMemberMethod printMethod = new CodeMemberMethod();               CodeTypeParameter sType = new CodeTypeParameter(\"S\");               sType.HasConstructorConstraint = true;               CodeTypeParameter tType = new CodeTypeParameter(\"T\");               sType.HasConstructorConstraint = true;                  printMethod.Name = \"Print\";               printMethod.TypeParameters.Add(sType);               printMethod.TypeParameters.Add(tType);               printMethod.Statements.Add(ConsoleWriteLineStatement(                   new CodeDefaultValueExpression(new CodeTypeReference(\"T\"))));               printMethod.Statements.Add(ConsoleWriteLineStatement(                   new CodeDefaultValueExpression(new CodeTypeReference(\"S\"))));   ```      ```   // Part 2: Code generated by code in part 1.   public virtual void Print<S, T>()               where S : new()            {               Console.WriteLine(default(T));               Console.WriteLine(default(S));           }   ```      ```   // Part 3: Call to the generated method.   dict.Print<System.Decimal, int>();   ```      ```   // Part 4: Output of the generated method.   0   0      ```","needQuote":false,"needEscape":true,"nodes":[{"content":"A CodeDefaultValueExpression can be used to represent a reference to a default value.","pos":[0,85]},{"content":"The &lt;xref:System.CodeDom.CodeDefaultValueExpression.Type%2A&gt; property specifies the reference to the value type.","pos":[92,204],"source":"       The <xref:System.CodeDom.CodeDefaultValueExpression.Type%2A> property specifies the reference to the value type."},{"content":"The CodeDefaultValueExpression class is used in the generation of generics-based code.","pos":[205,291]},{"content":"For more information on generics, see <bpt id=\"p1\">[</bpt>Generics in the .NET Framework Class Library<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[292,416],"source":" For more information on generics, see [Generics in the .NET Framework Class Library](~/add/includes/ajax-current-ext-md.md)."},{"content":"The following code steps are provided in this section to further describe the use of the CodeDefaultValueExpression class to add a new default value to a code graph.","pos":[417,582]},{"content":"The code in part 1 is part of a larger example provided for the &lt;xref:System.CodeDom.CodeTypeParameter&gt; class.","pos":[589,699],"source":"       The code in part 1 is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class."},{"content":"This code, when run through the C# code generator, results in the C# code that appears in part 2.","pos":[700,797]},{"content":"When this code is called in the statement in part 3, the result is the output shown in part 4.","pos":[798,892]},{"content":"<ph id=\"ph1\">```   // Part 1: Code to create a generic Print method.               CodeMemberMethod printMethod = new CodeMemberMethod();               CodeTypeParameter sType = new CodeTypeParameter(\"S\");               sType.HasConstructorConstraint = true;               CodeTypeParameter tType = new CodeTypeParameter(\"T\");               sType.HasConstructorConstraint = true;                  printMethod.Name = \"Print\";               printMethod.TypeParameters.Add(sType);               printMethod.TypeParameters.Add(tType);               printMethod.Statements.Add(ConsoleWriteLineStatement(                   new CodeDefaultValueExpression(new CodeTypeReference(\"T\"))));               printMethod.Statements.Add(ConsoleWriteLineStatement(                   new CodeDefaultValueExpression(new CodeTypeReference(\"S\"))));   ```</ph>      <ph id=\"ph2\">```   // Part 2: Code generated by code in part 1.   public virtual void Print&lt;S, T&gt;()               where S : new()            {               Console.WriteLine(default(T));               Console.WriteLine(default(S));           }   ```</ph>      <ph id=\"ph3\">```   // Part 3: Call to the generated method.   dict.Print&lt;System.Decimal, int&gt;();   ```</ph>      <ph id=\"ph4\">```   // Part 4: Output of the generated method.   0   0      ```</ph>","pos":[898,2126],"source":"```   // Part 1: Code to create a generic Print method.               CodeMemberMethod printMethod = new CodeMemberMethod();               CodeTypeParameter sType = new CodeTypeParameter(\"S\");               sType.HasConstructorConstraint = true;               CodeTypeParameter tType = new CodeTypeParameter(\"T\");               sType.HasConstructorConstraint = true;                  printMethod.Name = \"Print\";               printMethod.TypeParameters.Add(sType);               printMethod.TypeParameters.Add(tType);               printMethod.Statements.Add(ConsoleWriteLineStatement(                   new CodeDefaultValueExpression(new CodeTypeReference(\"T\"))));               printMethod.Statements.Add(ConsoleWriteLineStatement(                   new CodeDefaultValueExpression(new CodeTypeReference(\"S\"))));   ```      ```   // Part 2: Code generated by code in part 1.   public virtual void Print<S, T>()               where S : new()            {               Console.WriteLine(default(T));               Console.WriteLine(default(S));           }   ```      ```   // Part 3: Call to the generated method.   dict.Print<System.Decimal, int>();   ```      ```   // Part 4: Output of the generated method.   0   0      ```"}]},{"pos":[4091,4194],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeDefaultValueExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeDefaultValueExpression\"></xref> class."},{"pos":[4912,5055],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeDefaultValueExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified code type reference.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeDefaultValueExpression\"></xref> class using the specified code type reference."},{"pos":[5249,5350],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the reference to a value type.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that specifies the reference to a value type."},{"pos":[5790,5847],"content":"Gets or sets the data type reference for a default value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the data type reference for a default value.","pos":[0,57]}]},{"pos":[6006,6119],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object representing a data type that has a default value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> object representing a data type that has a default value."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeDefaultValueExpression\n  id: CodeDefaultValueExpression\n  children:\n  - System.CodeDom.CodeDefaultValueExpression.#ctor\n  - System.CodeDom.CodeDefaultValueExpression.#ctor(System.CodeDom.CodeTypeReference)\n  - System.CodeDom.CodeDefaultValueExpression.Type\n  langs:\n  - csharp\n  name: CodeDefaultValueExpression\n  nameWithType: CodeDefaultValueExpression\n  fullName: System.CodeDom.CodeDefaultValueExpression\n  type: Class\n  summary: Represents a reference to a default value.\n  remarks: \"A CodeDefaultValueExpression can be used to represent a reference to a default value.  \\n  \\n The <xref:System.CodeDom.CodeDefaultValueExpression.Type%2A> property specifies the reference to the value type. The CodeDefaultValueExpression class is used in the generation of generics-based code. For more information on generics, see [Generics in the .NET Framework Class Library](~/add/includes/ajax-current-ext-md.md). The following code steps are provided in this section to further describe the use of the CodeDefaultValueExpression class to add a new default value to a code graph.  \\n  \\n The code in part 1 is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class. This code, when run through the C# code generator, results in the C# code that appears in part 2. When this code is called in the statement in part 3, the result is the output shown in part 4.  \\n  \\n```  \\n// Part 1: Code to create a generic Print method.  \\n            CodeMemberMethod printMethod = new CodeMemberMethod();  \\n            CodeTypeParameter sType = new CodeTypeParameter(\\\"S\\\");  \\n            sType.HasConstructorConstraint = true;  \\n            CodeTypeParameter tType = new CodeTypeParameter(\\\"T\\\");  \\n            sType.HasConstructorConstraint = true;  \\n  \\n            printMethod.Name = \\\"Print\\\";  \\n            printMethod.TypeParameters.Add(sType);  \\n            printMethod.TypeParameters.Add(tType);  \\n            printMethod.Statements.Add(ConsoleWriteLineStatement(  \\n                new CodeDefaultValueExpression(new CodeTypeReference(\\\"T\\\"))));  \\n            printMethod.Statements.Add(ConsoleWriteLineStatement(  \\n                new CodeDefaultValueExpression(new CodeTypeReference(\\\"S\\\"))));  \\n```  \\n  \\n```  \\n// Part 2: Code generated by code in part 1.  \\npublic virtual void Print<S, T>()  \\n            where S : new()  \\n         {  \\n            Console.WriteLine(default(T));  \\n            Console.WriteLine(default(S));  \\n        }  \\n```  \\n  \\n```  \\n// Part 3: Call to the generated method.  \\ndict.Print<System.Decimal, int>();  \\n```  \\n  \\n```  \\n// Part 4: Output of the generated method.  \\n0  \\n0  \\n  \\n```\"\n  example:\n  - \"The following code example shows the use of the CodeDefaultValueExpression to create default values for decimal and integer parameters. This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.  \\n  \\n [!code-vb[System.CodeDOM.Generics.1#7](~/add/codesnippet/visualbasic/t-system.codedom.codedef_1.vb)]\\n [!code-cs[System.CodeDOM.Generics.1#7](~/add/codesnippet/csharp/t-system.codedom.codedef_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeDefaultValueExpression : System.CodeDom.CodeExpression\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  - System.CodeDom.CodeExpression\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeObject.UserData\n  platform:\n  - net462\n- uid: System.CodeDom.CodeDefaultValueExpression.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeDefaultValueExpression\n  langs:\n  - csharp\n  name: CodeDefaultValueExpression()\n  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression()\n  fullName: System.CodeDom.CodeDefaultValueExpression.CodeDefaultValueExpression()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeDefaultValueExpression\"></xref> class.\n  syntax:\n    content: public CodeDefaultValueExpression ();\n    parameters: []\n  overload: System.CodeDom.CodeDefaultValueExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeDefaultValueExpression.#ctor(System.CodeDom.CodeTypeReference)\n  id: '#ctor(System.CodeDom.CodeTypeReference)'\n  parent: System.CodeDom.CodeDefaultValueExpression\n  langs:\n  - csharp\n  name: CodeDefaultValueExpression(CodeTypeReference)\n  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression(CodeTypeReference)\n  fullName: System.CodeDom.CodeDefaultValueExpression.CodeDefaultValueExpression(CodeTypeReference)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeDefaultValueExpression\"></xref> class using the specified code type reference.\n  syntax:\n    content: public CodeDefaultValueExpression (System.CodeDom.CodeTypeReference type);\n    parameters:\n    - id: type\n      type: System.CodeDom.CodeTypeReference\n      description: A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that specifies the reference to a value type.\n  overload: System.CodeDom.CodeDefaultValueExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeDefaultValueExpression.Type\n  id: Type\n  parent: System.CodeDom.CodeDefaultValueExpression\n  langs:\n  - csharp\n  name: Type\n  nameWithType: CodeDefaultValueExpression.Type\n  fullName: System.CodeDom.CodeDefaultValueExpression.Type\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the data type reference for a default value.\n  syntax:\n    content: public System.CodeDom.CodeTypeReference Type { get; set; }\n    return:\n      type: System.CodeDom.CodeTypeReference\n      description: A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> object representing a data type that has a default value.\n  overload: System.CodeDom.CodeDefaultValueExpression.Type*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.CodeDom.CodeExpression\n  isExternal: false\n  name: System.CodeDom.CodeExpression\n- uid: System.CodeDom.CodeDefaultValueExpression.#ctor\n  parent: System.CodeDom.CodeDefaultValueExpression\n  isExternal: false\n  name: CodeDefaultValueExpression()\n  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression()\n  fullName: System.CodeDom.CodeDefaultValueExpression.CodeDefaultValueExpression()\n- uid: System.CodeDom.CodeDefaultValueExpression.#ctor(System.CodeDom.CodeTypeReference)\n  parent: System.CodeDom.CodeDefaultValueExpression\n  isExternal: false\n  name: CodeDefaultValueExpression(CodeTypeReference)\n  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression(CodeTypeReference)\n  fullName: System.CodeDom.CodeDefaultValueExpression.CodeDefaultValueExpression(CodeTypeReference)\n- uid: System.CodeDom.CodeTypeReference\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeReference\n  nameWithType: CodeTypeReference\n  fullName: System.CodeDom.CodeTypeReference\n- uid: System.CodeDom.CodeDefaultValueExpression.Type\n  parent: System.CodeDom.CodeDefaultValueExpression\n  isExternal: false\n  name: Type\n  nameWithType: CodeDefaultValueExpression.Type\n  fullName: System.CodeDom.CodeDefaultValueExpression.Type\n- uid: System.CodeDom.CodeDefaultValueExpression.#ctor*\n  parent: System.CodeDom.CodeDefaultValueExpression\n  isExternal: false\n  name: CodeDefaultValueExpression\n  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression\n- uid: System.CodeDom.CodeDefaultValueExpression.Type*\n  parent: System.CodeDom.CodeDefaultValueExpression\n  isExternal: false\n  name: Type\n  nameWithType: CodeDefaultValueExpression.Type\n"}