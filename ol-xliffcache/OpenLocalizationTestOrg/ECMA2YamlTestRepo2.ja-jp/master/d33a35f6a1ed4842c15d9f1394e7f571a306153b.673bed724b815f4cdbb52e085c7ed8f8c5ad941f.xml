{"nodes":[{"pos":[486,543],"content":"Provides the base class for trace filter implementations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the base class for trace filter implementations.","pos":[0,57]}]},{"pos":[556,1621],"content":"Trace filters can be used by trace listeners to provide an extra layer of filtering beyond that provided by trace switches. The trace filter for a trace listener can be found in the listener's <xref:System.Diagnostics.TraceListener.Filter%2A> property. Trace switches determine if a trace is to be sent to the trace listeners. Trace filters allow the individual trace listeners to determine whether or not the trace is to be written to the associated output medium. For example, as determined by each trace filter, a trace may be written to the console by a <xref:System.Diagnostics.ConsoleTraceListener>, but not to the event log by a <xref:System.Diagnostics.EventLogTraceListener>.       Filters that inherit from the TraceFilter class can be used by trace listeners that inherit from the <xref:System.Diagnostics.TraceListener> class to perform filtering of events being traced. TraceFilter contains a single method, <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>, which takes event data and returns a flag indicating whether the event should be traced.","needQuote":false,"needEscape":true,"nodes":[{"content":"Trace filters can be used by trace listeners to provide an extra layer of filtering beyond that provided by trace switches. The trace filter for a trace listener can be found in the listener's <xref:System.Diagnostics.TraceListener.Filter%2A> property. Trace switches determine if a trace is to be sent to the trace listeners. Trace filters allow the individual trace listeners to determine whether or not the trace is to be written to the associated output medium. For example, as determined by each trace filter, a trace may be written to the console by a <xref:System.Diagnostics.ConsoleTraceListener>, but not to the event log by a <xref:System.Diagnostics.EventLogTraceListener>.       Filters that inherit from the TraceFilter class can be used by trace listeners that inherit from the <xref:System.Diagnostics.TraceListener> class to perform filtering of events being traced. TraceFilter contains a single method, <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>, which takes event data and returns a flag indicating whether the event should be traced.","pos":[0,1063],"nodes":[{"content":"Trace filters can be used by trace listeners to provide an extra layer of filtering beyond that provided by trace switches.","pos":[0,123]},{"content":"The trace filter for a trace listener can be found in the listener's &lt;xref:System.Diagnostics.TraceListener.Filter%2A&gt; property.","pos":[124,252],"source":" The trace filter for a trace listener can be found in the listener's <xref:System.Diagnostics.TraceListener.Filter%2A> property."},{"content":"Trace switches determine if a trace is to be sent to the trace listeners.","pos":[253,326]},{"content":"Trace filters allow the individual trace listeners to determine whether or not the trace is to be written to the associated output medium.","pos":[327,465]},{"content":"For example, as determined by each trace filter, a trace may be written to the console by a &lt;xref:System.Diagnostics.ConsoleTraceListener&gt;, but not to the event log by a &lt;xref:System.Diagnostics.EventLogTraceListener&gt;.","pos":[466,684],"source":" For example, as determined by each trace filter, a trace may be written to the console by a <xref:System.Diagnostics.ConsoleTraceListener>, but not to the event log by a <xref:System.Diagnostics.EventLogTraceListener>."},{"content":"Filters that inherit from the TraceFilter class can be used by trace listeners that inherit from the &lt;xref:System.Diagnostics.TraceListener&gt; class to perform filtering of events being traced.","pos":[691,882],"source":"       Filters that inherit from the TraceFilter class can be used by trace listeners that inherit from the <xref:System.Diagnostics.TraceListener> class to perform filtering of events being traced."},{"content":"TraceFilter contains a single method, &lt;xref:System.Diagnostics.TraceFilter.ShouldTrace%2A&gt;, which takes event data and returns a flag indicating whether the event should be traced.","pos":[883,1063],"source":" TraceFilter contains a single method, <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>, which takes event data and returns a flag indicating whether the event should be traced."}]}]},{"pos":[2104,2196],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.TraceFilter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.TraceFilter\"></xref> class."},{"pos":[3227,3324],"content":"When overridden in a derived class, determines whether the trace listener should trace the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, determines whether the trace listener should trace the event.","pos":[0,97]}]},{"pos":[4232,4338],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.TraceEventCache\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains information for the trace event.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that contains information for the trace event."},{"pos":[4401,4424],"content":"The name of the source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the source.","pos":[0,23]}]},{"pos":[4510,4638],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.TraceEventType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace."},{"pos":[4696,4722],"content":"A trace identifier number.","needQuote":true,"needEscape":true,"nodes":[{"content":"A trace identifier number.","pos":[0,26]}]},{"pos":[4794,4910],"content":"Either the format to use for writing an array of arguments specified by the <ph id=\"ph1\">`args`</ph> parameter, or a message to write.","needQuote":true,"needEscape":true,"source":"Either the format to use for writing an array of arguments specified by the `args` parameter, or a message to write."},{"pos":[4973,5002],"content":"An array of argument objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of argument objects.","pos":[0,29]}]},{"pos":[5064,5084],"content":"A trace data object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A trace data object.","pos":[0,20]}]},{"pos":[5147,5178],"content":"An array of trace data objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of trace data objects.","pos":[0,31]}]},{"pos":[5237,5402],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to trace the specified event; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to trace the specified event; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.TraceFilter\n  id: TraceFilter\n  children:\n  - System.Diagnostics.TraceFilter.#ctor\n  - System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])\n  langs:\n  - csharp\n  name: TraceFilter\n  nameWithType: TraceFilter\n  fullName: System.Diagnostics.TraceFilter\n  type: Class\n  summary: Provides the base class for trace filter implementations.\n  remarks: \"Trace filters can be used by trace listeners to provide an extra layer of filtering beyond that provided by trace switches. The trace filter for a trace listener can be found in the listener's <xref:System.Diagnostics.TraceListener.Filter%2A> property. Trace switches determine if a trace is to be sent to the trace listeners. Trace filters allow the individual trace listeners to determine whether or not the trace is to be written to the associated output medium. For example, as determined by each trace filter, a trace may be written to the console by a <xref:System.Diagnostics.ConsoleTraceListener>, but not to the event log by a <xref:System.Diagnostics.EventLogTraceListener>.  \\n  \\n Filters that inherit from the TraceFilter class can be used by trace listeners that inherit from the <xref:System.Diagnostics.TraceListener> class to perform filtering of events being traced. TraceFilter contains a single method, <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>, which takes event data and returns a flag indicating whether the event should be traced.\"\n  syntax:\n    content: public abstract class TraceFilter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Diagnostics.TraceFilter.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.TraceFilter\n  langs:\n  - csharp\n  name: TraceFilter()\n  nameWithType: TraceFilter.TraceFilter()\n  fullName: System.Diagnostics.TraceFilter.TraceFilter()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.TraceFilter\"></xref> class.\n  syntax:\n    content: protected TraceFilter ();\n    parameters: []\n  overload: System.Diagnostics.TraceFilter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])\n  id: ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])\n  parent: System.Diagnostics.TraceFilter\n  langs:\n  - csharp\n  name: ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])\n  nameWithType: TraceFilter.ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])\n  fullName: System.Diagnostics.TraceFilter.ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: When overridden in a derived class, determines whether the trace listener should trace the event.\n  remarks: ''\n  example:\n  - \"The following code example shows how to override the ShouldTrace method to indicate tracing should occur when the trace event type of the event is equal to <xref:System.Diagnostics.TraceEventType?displayProperty=fullName>.  \\n  \\n [!code-cs[System.Diagnostics.TraceFilter#2](~/add/codesnippet/csharp/9ccfab59-d4f0-4d0a-b482-_1.cs)]\\n [!code-vb[System.Diagnostics.TraceFilter#2](~/add/codesnippet/visualbasic/9ccfab59-d4f0-4d0a-b482-_1.vb)]\\n [!code-cpp[System.Diagnostics.TraceFilter#2](~/add/codesnippet/cpp/9ccfab59-d4f0-4d0a-b482-_1.cpp)]\"\n  syntax:\n    content: public abstract bool ShouldTrace (System.Diagnostics.TraceEventCache cache, string source, System.Diagnostics.TraceEventType eventType, int id, string formatOrMessage, object[] args, object data1, object[] data);\n    parameters:\n    - id: cache\n      type: System.Diagnostics.TraceEventCache\n      description: The <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that contains information for the trace event.\n    - id: source\n      type: System.String\n      description: The name of the source.\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace.\n    - id: id\n      type: System.Int32\n      description: A trace identifier number.\n    - id: formatOrMessage\n      type: System.String\n      description: Either the format to use for writing an array of arguments specified by the `args` parameter, or a message to write.\n    - id: args\n      type: System.Object[]\n      description: An array of argument objects.\n    - id: data1\n      type: System.Object\n      description: A trace data object.\n    - id: data\n      type: System.Object[]\n      description: An array of trace data objects.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to trace the specified event; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.TraceFilter.ShouldTrace*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Diagnostics.TraceFilter.#ctor\n  parent: System.Diagnostics.TraceFilter\n  isExternal: false\n  name: TraceFilter()\n  nameWithType: TraceFilter.TraceFilter()\n  fullName: System.Diagnostics.TraceFilter.TraceFilter()\n- uid: System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])\n  parent: System.Diagnostics.TraceFilter\n  isExternal: false\n  name: ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])\n  nameWithType: TraceFilter.ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])\n  fullName: System.Diagnostics.TraceFilter.ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.TraceEventCache\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceEventCache\n  nameWithType: TraceEventCache\n  fullName: System.Diagnostics.TraceEventCache\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.TraceEventType\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceEventType\n  nameWithType: TraceEventType\n  fullName: System.Diagnostics.TraceEventType\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.TraceFilter.#ctor*\n  parent: System.Diagnostics.TraceFilter\n  isExternal: false\n  name: TraceFilter\n  nameWithType: TraceFilter.TraceFilter\n- uid: System.Diagnostics.TraceFilter.ShouldTrace*\n  parent: System.Diagnostics.TraceFilter\n  isExternal: false\n  name: ShouldTrace\n  nameWithType: TraceFilter.ShouldTrace\n"}