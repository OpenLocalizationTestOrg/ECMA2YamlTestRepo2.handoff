{"nodes":[{"pos":[642,741],"content":"Specifies the types of required and optional claims expected to appear in the federated credential.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the types of required and optional claims expected to appear in the federated credential.","pos":[0,99]}]},{"pos":[753,1261],"content":"In a federated scenario, services state the requirements on incoming credentials. For example, the incoming credentials must possess a certain set of claim types. This requirement is manifested in a security policy. When a client requests a security token from a security token service (for example, [!INCLUDE[infocard](~/add/includes/infocard-md.md)]), it puts the requirements into a token request so that the security token service can issue the security token that satisfies the requirements accordingly.","needQuote":true,"needEscape":true,"nodes":[{"content":"In a federated scenario, services state the requirements on incoming credentials.","pos":[0,81]},{"content":"For example, the incoming credentials must possess a certain set of claim types.","pos":[82,162]},{"content":"This requirement is manifested in a security policy.","pos":[163,215]},{"content":"When a client requests a security token from a security token service (for example, <ph id=\"ph1\">[!INCLUDE[infocard](~/add/includes/infocard-md.md)]</ph>), it puts the requirements into a token request so that the security token service can issue the security token that satisfies the requirements accordingly.","pos":[216,508],"source":" When a client requests a security token from a security token service (for example, [!INCLUDE[infocard](~/add/includes/infocard-md.md)]), it puts the requirements into a token request so that the security token service can issue the security token that satisfies the requirements accordingly."}]},{"pos":[2325,2486],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.ClaimTypeRequirement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for a required claim of the specified type.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.ClaimTypeRequirement\"></xref> class for a required claim of the specified type."},{"pos":[2498,2589],"content":"The predefined claim types can be found at   <xref:System.IdentityModel.Claims.ClaimTypes>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The predefined claim types can be found at   &lt;xref:System.IdentityModel.Claims.ClaimTypes&gt;.","pos":[0,91],"source":"The predefined claim types can be found at   <xref:System.IdentityModel.Claims.ClaimTypes>."}]},{"pos":[2937,2952],"content":"The claim type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The claim type.","pos":[0,15]}]},{"pos":[3643,3795],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.ClaimTypeRequirement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for a claim of the specified type.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.ClaimTypeRequirement\"></xref> class for a claim of the specified type."},{"pos":[4174,4189],"content":"The claim type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The claim type.","pos":[0,15]}]},{"pos":[4257,4373],"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the claim is required; otherwise, it is optional.","needQuote":true,"needEscape":true,"source":"If <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the claim is required; otherwise, it is optional."},{"pos":[4926,4984],"content":"Gets the claim type that was specified in the constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the claim type that was specified in the constructor.","pos":[0,58]}]},{"pos":[4996,5224],"content":"This property is a URI that defines the type of a claim.  For example, to purchase a product from a Web site, the user must present a valid credit card with a sufficient credit limit. The claim type would be the credit card URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is a URI that defines the type of a claim.  For example, to purchase a product from a Web site, the user must present a valid credit card with a sufficient credit limit. The claim type would be the credit card URI.","pos":[0,228],"nodes":[{"content":"This property is a URI that defines the type of a claim.","pos":[0,56]},{"content":"For example, to purchase a product from a Web site, the user must present a valid credit card with a sufficient credit limit.","pos":[58,183]},{"content":"The claim type would be the credit card URI.","pos":[184,228]}]}]},{"pos":[5511,5526],"content":"The claim type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The claim type.","pos":[0,15]}]},{"pos":[6088,6146],"content":"Gets a value that indicates whether the claim is optional.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the claim is optional.","pos":[0,58]}]},{"pos":[6158,6400],"content":"An example of how to use this property is the scenario in which the service asks for some information but does not require it. For instance, you are required to enter your first name, last name, and address, but your phone number is optional.","needQuote":true,"needEscape":true,"nodes":[{"content":"An example of how to use this property is the scenario in which the service asks for some information but does not require it. For instance, you are required to enter your first name, last name, and address, but your phone number is optional.","pos":[0,242],"nodes":[{"content":"An example of how to use this property is the scenario in which the service asks for some information but does not require it.","pos":[0,126]},{"content":"For instance, you are required to enter your first name, last name, and address, but your phone number is optional.","pos":[127,242]}]}]},{"pos":[6688,6901],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this instance of the class is for an optional claim; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if it specifies a required claim.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this instance of the class is for an optional claim; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it specifies a required claim."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement\n  id: ClaimTypeRequirement\n  children:\n  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)\n  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)\n  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType\n  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional\n  langs:\n  - csharp\n  name: ClaimTypeRequirement\n  nameWithType: ClaimTypeRequirement\n  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement\n  type: Class\n  summary: Specifies the types of required and optional claims expected to appear in the federated credential.\n  remarks: In a federated scenario, services state the requirements on incoming credentials. For example, the incoming credentials must possess a certain set of claim types. This requirement is manifested in a security policy. When a client requests a security token from a security token service (for example, [!INCLUDE[infocard](~/add/includes/infocard-md.md)]), it puts the requirements into a token request so that the security token service can issue the security token that satisfies the requirements accordingly.\n  example:\n  - \"The following code adds two claim type requirements to a security binding.  \\n  \\n [!code-cs[S_UEClaimTypeRequirement#1](~/add/codesnippet/csharp/t-system.servicemodel.se_14_1.cs)]  \\n  \\n The following config file is used with the preceding code.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public class ClaimTypeRequirement\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement\n  langs:\n  - csharp\n  name: ClaimTypeRequirement(String)\n  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String)\n  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.ClaimTypeRequirement\"></xref> class for a required claim of the specified type.\n  remarks: The predefined claim types can be found at   <xref:System.IdentityModel.Claims.ClaimTypes>.\n  example:\n  - \"The following code adds two claim type requirements to a security binding.  \\n  \\n [!code-cs[S_UEClaimTypeRequirement#1](~/add/codesnippet/csharp/82f0f677-aea6-40fd-b2fa-_1.cs)]\"\n  syntax:\n    content: public ClaimTypeRequirement (string claimType);\n    parameters:\n    - id: claimType\n      type: System.String\n      description: The claim type.\n  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)\n  id: '#ctor(System.String,System.Boolean)'\n  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement\n  langs:\n  - csharp\n  name: ClaimTypeRequirement(String,Boolean)\n  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String,Boolean)\n  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(String,Boolean)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.ClaimTypeRequirement\"></xref> class for a claim of the specified type.\n  remarks: ''\n  example:\n  - \"The following code adds two claim type requirements to a security binding.  \\n  \\n [!code-cs[S_UEClaimTypeRequirement#1](~/add/codesnippet/csharp/5f45f1b5-1008-4244-927f-_1.cs)]\"\n  syntax:\n    content: public ClaimTypeRequirement (string claimType, bool isOptional);\n    parameters:\n    - id: claimType\n      type: System.String\n      description: The claim type.\n    - id: isOptional\n      type: System.Boolean\n      description: If <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the claim is required; otherwise, it is optional.\n  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType\n  id: ClaimType\n  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement\n  langs:\n  - csharp\n  name: ClaimType\n  nameWithType: ClaimTypeRequirement.ClaimType\n  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets the claim type that was specified in the constructor.\n  remarks: This property is a URI that defines the type of a claim.  For example, to purchase a product from a Web site, the user must present a valid credit card with a sufficient credit limit. The claim type would be the credit card URI.\n  example:\n  - \"The following code shows how to get this property.  \\n  \\n [!code-cs[S_UEClaimTypeRequirement#2](~/add/codesnippet/csharp/p-system.servicemodel.se_5_1.cs)]\"\n  syntax:\n    content: public string ClaimType { get; }\n    return:\n      type: System.String\n      description: The claim type.\n  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional\n  id: IsOptional\n  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement\n  langs:\n  - csharp\n  name: IsOptional\n  nameWithType: ClaimTypeRequirement.IsOptional\n  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets a value that indicates whether the claim is optional.\n  remarks: An example of how to use this property is the scenario in which the service asks for some information but does not require it. For instance, you are required to enter your first name, last name, and address, but your phone number is optional.\n  example:\n  - \"The following code shows how to get this property.  \\n  \\n [!code-cs[S_UEClaimTypeRequirement#2](~/add/codesnippet/csharp/p-system.servicemodel.se_17_1.cs)]\"\n  syntax:\n    content: public bool IsOptional { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this instance of the class is for an optional claim; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it specifies a required claim.\n  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)\n  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement\n  isExternal: false\n  name: ClaimTypeRequirement(String)\n  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String)\n  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)\n  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement\n  isExternal: false\n  name: ClaimTypeRequirement(String,Boolean)\n  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String,Boolean)\n  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(String,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType\n  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement\n  isExternal: false\n  name: ClaimType\n  nameWithType: ClaimTypeRequirement.ClaimType\n  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType\n- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional\n  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement\n  isExternal: false\n  name: IsOptional\n  nameWithType: ClaimTypeRequirement.IsOptional\n  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional\n- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor*\n  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement\n  isExternal: false\n  name: ClaimTypeRequirement\n  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement\n- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType*\n  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement\n  isExternal: false\n  name: ClaimType\n  nameWithType: ClaimTypeRequirement.ClaimType\n- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional*\n  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement\n  isExternal: false\n  name: IsOptional\n  nameWithType: ClaimTypeRequirement.IsOptional\n"}