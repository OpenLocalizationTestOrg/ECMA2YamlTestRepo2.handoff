{"nodes":[{"pos":[504,564],"content":"Provides the basic framework for building a custom designer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the basic framework for building a custom designer.","pos":[0,60]}]},{"pos":[577,3408],"content":"The IDesigner interface provides an interface through which you can implement basic services for a designer. A designer can modify the behavior of a component at design time, and may provide its own services and behavior. A designer is only active at design-time, and must be associated with a type of component using a <xref:System.ComponentModel.DesignerAttribute> in order to be loaded when a component of the associated type is created at design time.       The IDesigner interface provides methods and properties that you can implement in order to provide custom behavior at design time.       Implement the <xref:System.ComponentModel.Design.IDesigner.Initialize%2A> method of a designer to perform actions when a component is created. This can be useful if a component should have a special configuration at design-time, or if its configuration should change depending on conditions that the designer can determine.       A designer can provide menu commands on the shortcut menu that is displayed when a user right-clicks a component or control in the design-time environment. You can implement the <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property to define a get accessor that returns a <xref:System.ComponentModel.Design.DesignerVerbCollection> containing the <xref:System.ComponentModel.Design.DesignerVerb> objects for generating menu commands.       A designer for a component that appears in the component tray can perform a default action when the component is double-clicked. Implement the <xref:System.ComponentModel.Design.IDesigner.DoDefaultAction%2A> method to specify the behavior to perform when the component is double-clicked.       A designer can also use the available design-time services to perform a variety of tasks, including surveying the current design-time environment for components and their properties, reading and setting the values of properties of components, managing the toolbox, managing selected components, or displaying a user interface that can be used to configure values or to apply further processing.       To implement a designer for a control that can be sited on a form, you can inherit from the <xref:System.Windows.Forms.Design.ControlDesigner> class. Controls whose associated designer does not derive from <xref:System.Windows.Forms.Design.ControlDesigner> are displayed in the component tray. The <xref:System.ComponentModel.Design.ComponentDesigner> and <xref:System.Windows.Forms.Design.ControlDesigner> classes implement the IDesigner interface and provide additional design-time support that may be of use to authors of designers. For more information, see the reference documentation for these classes.       For an overview of creating design components, please see [Extending Design-Time Support](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The IDesigner interface provides an interface through which you can implement basic services for a designer.","pos":[0,108]},{"content":"A designer can modify the behavior of a component at design time, and may provide its own services and behavior.","pos":[109,221]},{"content":"A designer is only active at design-time, and must be associated with a type of component using a &lt;xref:System.ComponentModel.DesignerAttribute&gt; in order to be loaded when a component of the associated type is created at design time.","pos":[222,455],"source":" A designer is only active at design-time, and must be associated with a type of component using a <xref:System.ComponentModel.DesignerAttribute> in order to be loaded when a component of the associated type is created at design time."},{"content":"The IDesigner interface provides methods and properties that you can implement in order to provide custom behavior at design time.","pos":[462,592]},{"content":"Implement the &lt;xref:System.ComponentModel.Design.IDesigner.Initialize%2A&gt; method of a designer to perform actions when a component is created.","pos":[599,741],"source":"       Implement the <xref:System.ComponentModel.Design.IDesigner.Initialize%2A> method of a designer to perform actions when a component is created."},{"content":"This can be useful if a component should have a special configuration at design-time, or if its configuration should change depending on conditions that the designer can determine.","pos":[742,922]},{"content":"A designer can provide menu commands on the shortcut menu that is displayed when a user right-clicks a component or control in the design-time environment.","pos":[929,1084]},{"content":"You can implement the &lt;xref:System.ComponentModel.Design.IDesigner.Verbs%2A&gt; property to define a get accessor that returns a &lt;xref:System.ComponentModel.Design.DesignerVerbCollection&gt; containing the &lt;xref:System.ComponentModel.Design.DesignerVerb&gt; objects for generating menu commands.","pos":[1085,1371],"source":" You can implement the <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property to define a get accessor that returns a <xref:System.ComponentModel.Design.DesignerVerbCollection> containing the <xref:System.ComponentModel.Design.DesignerVerb> objects for generating menu commands."},{"content":"A designer for a component that appears in the component tray can perform a default action when the component is double-clicked.","pos":[1378,1506]},{"content":"Implement the &lt;xref:System.ComponentModel.Design.IDesigner.DoDefaultAction%2A&gt; method to specify the behavior to perform when the component is double-clicked.","pos":[1507,1665],"source":" Implement the <xref:System.ComponentModel.Design.IDesigner.DoDefaultAction%2A> method to specify the behavior to perform when the component is double-clicked."},{"content":"A designer can also use the available design-time services to perform a variety of tasks, including surveying the current design-time environment for components and their properties, reading and setting the values of properties of components, managing the toolbox, managing selected components, or displaying a user interface that can be used to configure values or to apply further processing.","pos":[1672,2066]},{"content":"To implement a designer for a control that can be sited on a form, you can inherit from the &lt;xref:System.Windows.Forms.Design.ControlDesigner&gt; class.","pos":[2073,2222],"source":"       To implement a designer for a control that can be sited on a form, you can inherit from the <xref:System.Windows.Forms.Design.ControlDesigner> class."},{"content":"Controls whose associated designer does not derive from &lt;xref:System.Windows.Forms.Design.ControlDesigner&gt; are displayed in the component tray.","pos":[2223,2366],"source":" Controls whose associated designer does not derive from <xref:System.Windows.Forms.Design.ControlDesigner> are displayed in the component tray."},{"content":"The &lt;xref:System.ComponentModel.Design.ComponentDesigner&gt; and &lt;xref:System.Windows.Forms.Design.ControlDesigner&gt; classes implement the IDesigner interface and provide additional design-time support that may be of use to authors of designers.","pos":[2367,2608],"source":" The <xref:System.ComponentModel.Design.ComponentDesigner> and <xref:System.Windows.Forms.Design.ControlDesigner> classes implement the IDesigner interface and provide additional design-time support that may be of use to authors of designers."},{"content":"For more information, see the reference documentation for these classes.","pos":[2609,2681]},{"content":"For an overview of creating design components, please see <bpt id=\"p1\">[</bpt>Extending Design-Time Support<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2688,2817],"source":"       For an overview of creating design components, please see [Extending Design-Time Support](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[4466,4522],"content":"Gets the base component that this designer is designing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the base component that this designer is designing.","pos":[0,56]}]},{"pos":[4681,4800],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.IComponent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicating the base component that this designer is designing.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.IComponent\"></xref> indicating the base component that this designer is designing."},{"pos":[5288,5334],"content":"Performs the default action for this designer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs the default action for this designer.","pos":[0,46]}]},{"pos":[5346,5450],"content":"This method is called when a user double-clicks the representation of a component in the component tray.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is called when a user double-clicks the representation of a component in the component tray.","pos":[0,104]}]},{"pos":[6091,6145],"content":"Initializes the designer with the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes the designer with the specified component.","pos":[0,54]}]},{"pos":[6338,6384],"content":"The component to associate with this designer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to associate with this designer.","pos":[0,46]}]},{"pos":[6819,6888],"content":"Gets a collection of the design-time verbs supported by the designer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of the design-time verbs supported by the designer.","pos":[0,69]}]},{"pos":[6901,7534],"content":"Returns the design time verbs supported by the component associated with the designer. The verbs returned by this method are typically displayed by the design-time environment in a right-click menu. When a user selects one of the verbs, the event handler of the corresponding <xref:System.ComponentModel.Design.DesignerVerb> is invoked.      > [!NOTE] >  A design-time environment typically provides a **Properties...** entry on a component's right-click menu. To avoid duplicate titles for menu entries, no verb with a title of \"Properties...\" should be included in a <xref:System.ComponentModel.Design.DesignerVerbCollection>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns the design time verbs supported by the component associated with the designer.","pos":[0,86]},{"content":"The verbs returned by this method are typically displayed by the design-time environment in a right-click menu.","pos":[87,198]},{"content":"When a user selects one of the verbs, the event handler of the corresponding &lt;xref:System.ComponentModel.Design.DesignerVerb&gt; is invoked.","pos":[199,336],"source":" When a user selects one of the verbs, the event handler of the corresponding <xref:System.ComponentModel.Design.DesignerVerb> is invoked."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  A design-time environment typically provides a <bpt id=\"p1\">**</bpt>Properties...<ept id=\"p1\">**</ept> entry on a component's right-click menu.","pos":[342,460],"source":"      > [!NOTE] >  A design-time environment typically provides a **Properties...** entry on a component's right-click menu."},{"content":"To avoid duplicate titles for menu entries, no verb with a title of \"Properties...\" should be included in a &lt;xref:System.ComponentModel.Design.DesignerVerbCollection&gt;.","pos":[461,628],"source":" To avoid duplicate titles for menu entries, no verb with a title of \"Properties...\" should be included in a <xref:System.ComponentModel.Design.DesignerVerbCollection>."}]},{"pos":[7728,7948],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignerVerbCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the verbs supported by the designer, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the component has no verbs.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.Design.DesignerVerbCollection\"></xref> that contains the verbs supported by the designer, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the component has no verbs."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.IDesigner\n  id: IDesigner\n  children:\n  - System.ComponentModel.Design.IDesigner.Component\n  - System.ComponentModel.Design.IDesigner.DoDefaultAction\n  - System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)\n  - System.ComponentModel.Design.IDesigner.Verbs\n  langs:\n  - csharp\n  name: IDesigner\n  nameWithType: IDesigner\n  fullName: System.ComponentModel.Design.IDesigner\n  type: Interface\n  summary: Provides the basic framework for building a custom designer.\n  remarks: \"The IDesigner interface provides an interface through which you can implement basic services for a designer. A designer can modify the behavior of a component at design time, and may provide its own services and behavior. A designer is only active at design-time, and must be associated with a type of component using a <xref:System.ComponentModel.DesignerAttribute> in order to be loaded when a component of the associated type is created at design time.  \\n  \\n The IDesigner interface provides methods and properties that you can implement in order to provide custom behavior at design time.  \\n  \\n Implement the <xref:System.ComponentModel.Design.IDesigner.Initialize%2A> method of a designer to perform actions when a component is created. This can be useful if a component should have a special configuration at design-time, or if its configuration should change depending on conditions that the designer can determine.  \\n  \\n A designer can provide menu commands on the shortcut menu that is displayed when a user right-clicks a component or control in the design-time environment. You can implement the <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property to define a get accessor that returns a <xref:System.ComponentModel.Design.DesignerVerbCollection> containing the <xref:System.ComponentModel.Design.DesignerVerb> objects for generating menu commands.  \\n  \\n A designer for a component that appears in the component tray can perform a default action when the component is double-clicked. Implement the <xref:System.ComponentModel.Design.IDesigner.DoDefaultAction%2A> method to specify the behavior to perform when the component is double-clicked.  \\n  \\n A designer can also use the available design-time services to perform a variety of tasks, including surveying the current design-time environment for components and their properties, reading and setting the values of properties of components, managing the toolbox, managing selected components, or displaying a user interface that can be used to configure values or to apply further processing.  \\n  \\n To implement a designer for a control that can be sited on a form, you can inherit from the <xref:System.Windows.Forms.Design.ControlDesigner> class. Controls whose associated designer does not derive from <xref:System.Windows.Forms.Design.ControlDesigner> are displayed in the component tray. The <xref:System.ComponentModel.Design.ComponentDesigner> and <xref:System.Windows.Forms.Design.ControlDesigner> classes implement the IDesigner interface and provide additional design-time support that may be of use to authors of designers. For more information, see the reference documentation for these classes.  \\n  \\n For an overview of creating design components, please see [Extending Design-Time Support](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"This example demonstrates an IDesigner implementation that stores a local reference to its component, performs a default action when the component is double-clicked, and provides a designer verb menu command.  \\n  \\n [!code-cs[IDesignerExample#1](~/add/codesnippet/csharp/t-system.componentmodel._156_1.cs)]\\n [!code-vb[IDesignerExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._156_1.vb)]\\n [!code-cpp[IDesignerExample#1](~/add/codesnippet/cpp/t-system.componentmodel._156_1.cpp)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IDesigner : IDisposable\n  implements:\n  - System.IDisposable\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IDesigner.Component\n  id: Component\n  parent: System.ComponentModel.Design.IDesigner\n  langs:\n  - csharp\n  name: Component\n  nameWithType: IDesigner.Component\n  fullName: System.ComponentModel.Design.IDesigner.Component\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets the base component that this designer is designing.\n  syntax:\n    content: public System.ComponentModel.IComponent Component { get; }\n    return:\n      type: System.ComponentModel.IComponent\n      description: An <xref href=\"System.ComponentModel.IComponent\"></xref> indicating the base component that this designer is designing.\n  overload: System.ComponentModel.Design.IDesigner.Component*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IDesigner.DoDefaultAction\n  id: DoDefaultAction\n  parent: System.ComponentModel.Design.IDesigner\n  langs:\n  - csharp\n  name: DoDefaultAction()\n  nameWithType: IDesigner.DoDefaultAction()\n  fullName: System.ComponentModel.Design.IDesigner.DoDefaultAction()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Performs the default action for this designer.\n  remarks: This method is called when a user double-clicks the representation of a component in the component tray.\n  syntax:\n    content: public void DoDefaultAction ();\n    parameters: []\n  overload: System.ComponentModel.Design.IDesigner.DoDefaultAction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)\n  id: Initialize(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.Design.IDesigner\n  langs:\n  - csharp\n  name: Initialize(IComponent)\n  nameWithType: IDesigner.Initialize(IComponent)\n  fullName: System.ComponentModel.Design.IDesigner.Initialize(IComponent)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Initializes the designer with the specified component.\n  syntax:\n    content: public void Initialize (System.ComponentModel.IComponent component);\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: The component to associate with this designer.\n  overload: System.ComponentModel.Design.IDesigner.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IDesigner.Verbs\n  id: Verbs\n  parent: System.ComponentModel.Design.IDesigner\n  langs:\n  - csharp\n  name: Verbs\n  nameWithType: IDesigner.Verbs\n  fullName: System.ComponentModel.Design.IDesigner.Verbs\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets a collection of the design-time verbs supported by the designer.\n  remarks: \"Returns the design time verbs supported by the component associated with the designer. The verbs returned by this method are typically displayed by the design-time environment in a right-click menu. When a user selects one of the verbs, the event handler of the corresponding <xref:System.ComponentModel.Design.DesignerVerb> is invoked.  \\n  \\n> [!NOTE]\\n>  A design-time environment typically provides a **Properties...** entry on a component's right-click menu. To avoid duplicate titles for menu entries, no verb with a title of \\\"Properties...\\\" should be included in a <xref:System.ComponentModel.Design.DesignerVerbCollection>.\"\n  syntax:\n    content: public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }\n    return:\n      type: System.ComponentModel.Design.DesignerVerbCollection\n      description: A <xref href=\"System.ComponentModel.Design.DesignerVerbCollection\"></xref> that contains the verbs supported by the designer, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the component has no verbs.\n  overload: System.ComponentModel.Design.IDesigner.Verbs*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.Design.IDesigner.Component\n  parent: System.ComponentModel.Design.IDesigner\n  isExternal: false\n  name: Component\n  nameWithType: IDesigner.Component\n  fullName: System.ComponentModel.Design.IDesigner.Component\n- uid: System.ComponentModel.IComponent\n  parent: System.ComponentModel\n  isExternal: false\n  name: IComponent\n  nameWithType: IComponent\n  fullName: System.ComponentModel.IComponent\n- uid: System.ComponentModel.Design.IDesigner.DoDefaultAction\n  parent: System.ComponentModel.Design.IDesigner\n  isExternal: false\n  name: DoDefaultAction()\n  nameWithType: IDesigner.DoDefaultAction()\n  fullName: System.ComponentModel.Design.IDesigner.DoDefaultAction()\n- uid: System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.Design.IDesigner\n  isExternal: false\n  name: Initialize(IComponent)\n  nameWithType: IDesigner.Initialize(IComponent)\n  fullName: System.ComponentModel.Design.IDesigner.Initialize(IComponent)\n- uid: System.ComponentModel.Design.IDesigner.Verbs\n  parent: System.ComponentModel.Design.IDesigner\n  isExternal: false\n  name: Verbs\n  nameWithType: IDesigner.Verbs\n  fullName: System.ComponentModel.Design.IDesigner.Verbs\n- uid: System.ComponentModel.Design.DesignerVerbCollection\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: DesignerVerbCollection\n  nameWithType: DesignerVerbCollection\n  fullName: System.ComponentModel.Design.DesignerVerbCollection\n- uid: System.ComponentModel.Design.IDesigner.Component*\n  parent: System.ComponentModel.Design.IDesigner\n  isExternal: false\n  name: Component\n  nameWithType: IDesigner.Component\n- uid: System.ComponentModel.Design.IDesigner.DoDefaultAction*\n  parent: System.ComponentModel.Design.IDesigner\n  isExternal: false\n  name: DoDefaultAction\n  nameWithType: IDesigner.DoDefaultAction\n- uid: System.ComponentModel.Design.IDesigner.Initialize*\n  parent: System.ComponentModel.Design.IDesigner\n  isExternal: false\n  name: Initialize\n  nameWithType: IDesigner.Initialize\n- uid: System.ComponentModel.Design.IDesigner.Verbs*\n  parent: System.ComponentModel.Design.IDesigner\n  isExternal: false\n  name: Verbs\n  nameWithType: IDesigner.Verbs\n"}