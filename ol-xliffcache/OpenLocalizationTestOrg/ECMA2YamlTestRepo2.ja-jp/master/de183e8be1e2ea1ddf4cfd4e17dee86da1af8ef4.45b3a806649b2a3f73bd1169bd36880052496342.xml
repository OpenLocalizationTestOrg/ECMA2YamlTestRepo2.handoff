{"nodes":[{"pos":[403,484],"content":"Provides a method for reading values of a particular type from the configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a method for reading values of a particular type from the configuration.","pos":[0,81]}]},{"pos":[2518,2618],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.AppSettingsReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.AppSettingsReader\"></xref> class."},{"pos":[4758,4962],"content":"Gets the value for a specified key from the <xref:System.Configuration.ConfigurationSettings.AppSettings*> property and returns an object of the specified type containing the value from the configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value for a specified key from the &lt;xref:System.Configuration.ConfigurationSettings.AppSettings*&gt; property and returns an object of the specified type containing the value from the configuration.","pos":[0,204],"source":"Gets the value for a specified key from the <xref:System.Configuration.ConfigurationSettings.AppSettings*> property and returns an object of the specified type containing the value from the configuration."}]},{"pos":[5529,5564],"content":"The key for which to get the value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key for which to get the value.","pos":[0,35]}]},{"pos":[5623,5656],"content":"The type of the object to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the object to return.","pos":[0,33]}]},{"pos":[5714,5745],"content":"The value of the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified key.","pos":[0,31]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.AppSettingsReader\n  id: AppSettingsReader\n  children:\n  - System.Configuration.AppSettingsReader.#ctor\n  - System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)\n  langs:\n  - csharp\n  name: AppSettingsReader\n  nameWithType: AppSettingsReader\n  fullName: System.Configuration.AppSettingsReader\n  type: Class\n  summary: Provides a method for reading values of a particular type from the configuration.\n  remarks: ''\n  example:\n  - \"The following example creates a configuration file that contains the `<appSettings>` section, and then uses the AppSettingsReader to read the settings just generated.  \\n  \\n```  \\nusing System;  \\nusing System.Configuration;  \\n  \\nclass Program  \\n{  \\n    static void Main(string[] args)  \\n    {  \\n        var reader = new AppSettingsReader();  \\n  \\n        var stringSetting = reader.GetValue(\\\"String setting\\\", typeof(string));  \\n        Console.WriteLine(\\\"String setting: \\\" + stringSetting);  \\n  \\n        var dateTimeSetting = reader.GetValue(\\\"DateTime setting\\\", typeof(DateTime));  \\n        Console.WriteLine(\\\"DateTime setting: \\\" + dateTimeSetting);  \\n  \\n        try  \\n        {  \\n            var missingSetting = reader.GetValue(\\\"Int setting\\\", typeof(Int32));  \\n        }  \\n        catch (InvalidOperationException e)  \\n        {  \\n            Console.WriteLine(\\\"Missing key error: \\\" + e.Message);  \\n        }  \\n  \\n        Console.WriteLine(\\\"Press any key to continue\\\");  \\n        Console.ReadKey();  \\n    }  \\n}  \\n```  \\n  \\n The following example demonstrates a configuration file used by the previous example.  \\n  \\n```  \\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>  \\n<configuration>  \\n    <appSettings>  \\n        <add key=\\\"String setting\\\" value=\\\"String retrieved from App.Config\\\"/>  \\n        <add key=\\\"Date setting\\\" value=\\\"Thursday, December 01, 2005 12:53:56 PM\\\"/>  \\n    </appSettings>  \\n</configuration>  \\n```\"\n  syntax:\n    content: public class AppSettingsReader\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Configuration.AppSettingsReader.#ctor\n  id: '#ctor'\n  parent: System.Configuration.AppSettingsReader\n  langs:\n  - csharp\n  name: AppSettingsReader()\n  nameWithType: AppSettingsReader.AppSettingsReader()\n  fullName: System.Configuration.AppSettingsReader.AppSettingsReader()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.AppSettingsReader\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example creates a configuration file that contains the `<appSettings>` section, and then uses the <xref:System.Configuration.AppSettingsReader> to read the settings just generated.  \\n  \\n```  \\nusing System;  \\nusing System.Configuration;  \\n  \\nclass Program  \\n{  \\n    static void Main(string[] args)  \\n    {  \\n        var reader = new AppSettingsReader();  \\n  \\n        var stringSetting = reader.GetValue(\\\"String setting\\\", typeof(string));  \\n        Console.WriteLine(\\\"String setting: \\\" + stringSetting);  \\n  \\n        var dateTimeSetting = reader.GetValue(\\\"DateTime setting\\\", typeof(DateTime));  \\n        Console.WriteLine(\\\"DateTime setting: \\\" + dateTimeSetting);  \\n  \\n        try  \\n        {  \\n            var missingSetting = reader.GetValue(\\\"Int setting\\\", typeof(Int32));  \\n        }  \\n        catch (InvalidOperationException e)  \\n        {  \\n            Console.WriteLine(\\\"Missing key error: \\\" + e.Message);  \\n        }  \\n  \\n        Console.WriteLine(\\\"Press any key to continue\\\");  \\n        Console.ReadKey();  \\n    }  \\n}  \\n```  \\n  \\n The following example demonstrates a configuration file used by the previous example.  \\n  \\n```  \\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>  \\n<configuration>  \\n    <appSettings>  \\n        <add key=\\\"String setting\\\" value=\\\"String retrieved from App.Config\\\"/>  \\n        <add key=\\\"Date setting\\\" value=\\\"Thursday, December 01, 2005 12:53:56 PM\\\"/>  \\n    </appSettings>  \\n</configuration>  \\n```\"\n  syntax:\n    content: public AppSettingsReader ();\n    parameters: []\n  overload: System.Configuration.AppSettingsReader.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)\n  id: GetValue(System.String,System.Type)\n  parent: System.Configuration.AppSettingsReader\n  langs:\n  - csharp\n  name: GetValue(String,Type)\n  nameWithType: AppSettingsReader.GetValue(String,Type)\n  fullName: System.Configuration.AppSettingsReader.GetValue(String,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Configuration\n  summary: Gets the value for a specified key from the <xref:System.Configuration.ConfigurationSettings.AppSettings*> property and returns an object of the specified type containing the value from the configuration.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the GetValue method to retrieve the value for each key in the `<appSettings>` section of the configuration file.  \\n  \\n [!code-cs[System.Configuration.AppSettingsReader#2](~/add/codesnippet/csharp/m-system.configuration.a_2_1.cs)]\\n [!code-vb[System.Configuration.AppSettingsReader#2](~/add/codesnippet/visualbasic/m-system.configuration.a_2_1.vb)]\"\n  syntax:\n    content: public object GetValue (string key, Type type);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key for which to get the value.\n    - id: type\n      type: System.Type\n      description: The type of the object to return.\n    return:\n      type: System.Object\n      description: The value of the specified key.\n  overload: System.Configuration.AppSettingsReader.GetValue*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>key</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n <code>type</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<code>key</code> does not exist in the <xref uid=\\\"langword_csharp_&lt;appSettings&gt;\\\" name=\\\"&lt;appSettings&gt;\\\" href=\\\"\\\"></xref> configuration section.  \\n  \\n \\\\- or -  \\n  \\n The value in the <xref uid=\\\"langword_csharp_&lt;appSettings&gt;\\\" name=\\\"&lt;appSettings&gt;\\\" href=\\\"\\\"></xref> configuration section for <code>key</code> is not of type <code>type</code>.\"\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Configuration.AppSettingsReader.#ctor\n  parent: System.Configuration.AppSettingsReader\n  isExternal: false\n  name: AppSettingsReader()\n  nameWithType: AppSettingsReader.AppSettingsReader()\n  fullName: System.Configuration.AppSettingsReader.AppSettingsReader()\n- uid: System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)\n  parent: System.Configuration.AppSettingsReader\n  isExternal: false\n  name: GetValue(String,Type)\n  nameWithType: AppSettingsReader.GetValue(String,Type)\n  fullName: System.Configuration.AppSettingsReader.GetValue(String,Type)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Configuration.AppSettingsReader.#ctor*\n  parent: System.Configuration.AppSettingsReader\n  isExternal: false\n  name: AppSettingsReader\n  nameWithType: AppSettingsReader.AppSettingsReader\n- uid: System.Configuration.AppSettingsReader.GetValue*\n  parent: System.Configuration.AppSettingsReader\n  isExternal: false\n  name: GetValue\n  nameWithType: AppSettingsReader.GetValue\n"}