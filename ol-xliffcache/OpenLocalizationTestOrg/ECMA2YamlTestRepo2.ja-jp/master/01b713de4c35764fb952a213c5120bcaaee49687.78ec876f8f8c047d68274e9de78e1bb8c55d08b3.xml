{"nodes":[{"pos":[306,379],"content":"Indicates that a class can be serialized. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates that a class can be serialized. This class cannot be inherited.","pos":[0,73],"nodes":[{"content":"Indicates that a class can be serialized.","pos":[0,41]},{"content":"This class cannot be inherited.","pos":[42,73]}]}]},{"pos":[392,1812],"content":"Apply the SerializableAttribute attribute to a type to indicate that instances of this type can be serialized. The common language runtime throws <xref:System.Runtime.Serialization.SerializationException> if any type in the graph of objects being serialized does not have the SerializableAttribute attribute applied.       Apply the SerializableAttribute attribute even if the class also implements the <xref:System.Runtime.Serialization.ISerializable> interface to control the serialization process.       When you apply the SerializableAttribute attribute to a type, all private and public fields are serialized by default. You can control serialization more granularly by implementing the <xref:System.Runtime.Serialization.ISerializable> interface to override the serialization process.       Or you can exclude fields from serialization by applying the <xref:System.NonSerializedAttribute> attribute to the field. If a field of a serializable type contains a pointer, a handle, or some other data structure that is specific to a particular environment, and cannot be meaningfully reconstituted in a different environment, then you might want to apply the <xref:System.NonSerializedAttribute> attribute to that field.       For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md). For more information about serialization, see <xref:System.Runtime.Serialization>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Apply the SerializableAttribute attribute to a type to indicate that instances of this type can be serialized.","pos":[0,110]},{"content":"The common language runtime throws &lt;xref:System.Runtime.Serialization.SerializationException&gt; if any type in the graph of objects being serialized does not have the SerializableAttribute attribute applied.","pos":[111,316],"source":" The common language runtime throws <xref:System.Runtime.Serialization.SerializationException> if any type in the graph of objects being serialized does not have the SerializableAttribute attribute applied."},{"content":"Apply the SerializableAttribute attribute even if the class also implements the &lt;xref:System.Runtime.Serialization.ISerializable&gt; interface to control the serialization process.","pos":[323,500],"source":"       Apply the SerializableAttribute attribute even if the class also implements the <xref:System.Runtime.Serialization.ISerializable> interface to control the serialization process."},{"content":"When you apply the SerializableAttribute attribute to a type, all private and public fields are serialized by default.","pos":[507,625]},{"content":"You can control serialization more granularly by implementing the &lt;xref:System.Runtime.Serialization.ISerializable&gt; interface to override the serialization process.","pos":[626,790],"source":" You can control serialization more granularly by implementing the <xref:System.Runtime.Serialization.ISerializable> interface to override the serialization process."},{"content":"Or you can exclude fields from serialization by applying the &lt;xref:System.NonSerializedAttribute&gt; attribute to the field.","pos":[797,918],"source":"       Or you can exclude fields from serialization by applying the <xref:System.NonSerializedAttribute> attribute to the field."},{"content":"If a field of a serializable type contains a pointer, a handle, or some other data structure that is specific to a particular environment, and cannot be meaningfully reconstituted in a different environment, then you might want to apply the &lt;xref:System.NonSerializedAttribute&gt; attribute to that field.","pos":[919,1221],"source":" If a field of a serializable type contains a pointer, a handle, or some other data structure that is specific to a particular environment, and cannot be meaningfully reconstituted in a different environment, then you might want to apply the <xref:System.NonSerializedAttribute> attribute to that field."},{"content":"For more information about using attributes, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1228,1329],"source":"       For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md)."},{"content":"For more information about serialization, see &lt;xref:System.Runtime.Serialization&gt;.","pos":[1330,1412],"source":" For more information about serialization, see <xref:System.Runtime.Serialization>."}]},{"pos":[3216,3306],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.SerializableAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.SerializableAttribute\"></xref> class."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.SerializableAttribute\n  id: SerializableAttribute\n  children:\n  - System.SerializableAttribute.#ctor\n  langs:\n  - csharp\n  name: SerializableAttribute\n  nameWithType: SerializableAttribute\n  fullName: System.SerializableAttribute\n  type: Class\n  summary: Indicates that a class can be serialized. This class cannot be inherited.\n  remarks: \"Apply the SerializableAttribute attribute to a type to indicate that instances of this type can be serialized. The common language runtime throws <xref:System.Runtime.Serialization.SerializationException> if any type in the graph of objects being serialized does not have the SerializableAttribute attribute applied.  \\n  \\n Apply the SerializableAttribute attribute even if the class also implements the <xref:System.Runtime.Serialization.ISerializable> interface to control the serialization process.  \\n  \\n When you apply the SerializableAttribute attribute to a type, all private and public fields are serialized by default. You can control serialization more granularly by implementing the <xref:System.Runtime.Serialization.ISerializable> interface to override the serialization process.  \\n  \\n Or you can exclude fields from serialization by applying the <xref:System.NonSerializedAttribute> attribute to the field. If a field of a serializable type contains a pointer, a handle, or some other data structure that is specific to a particular environment, and cannot be meaningfully reconstituted in a different environment, then you might want to apply the <xref:System.NonSerializedAttribute> attribute to that field.  \\n  \\n For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md). For more information about serialization, see <xref:System.Runtime.Serialization>.\"\n  example:\n  - \"The following example demonstrates serialization of an object that is marked with the SerializableAttribute attribute. To use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> instead of the <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>, uncomment the appropriate lines.  \\n  \\n [!code-cpp[SerializationAttributes#1](~/add/codesnippet/cpp/t-system.serializableatt_1.cpp)]\\n [!code-cs[SerializationAttributes#1](~/add/codesnippet/csharp/t-system.serializableatt_1.cs)]\\n [!code-vb[SerializationAttributes#1](~/add/codesnippet/visualbasic/t-system.serializableatt_1.vb)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Delegate, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class SerializableAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.SerializableAttribute.#ctor\n  id: '#ctor'\n  parent: System.SerializableAttribute\n  langs:\n  - csharp\n  name: SerializableAttribute()\n  nameWithType: SerializableAttribute.SerializableAttribute()\n  fullName: System.SerializableAttribute.SerializableAttribute()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.SerializableAttribute\"></xref> class.\n  syntax:\n    content: public SerializableAttribute ();\n    parameters: []\n  overload: System.SerializableAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.SerializableAttribute.#ctor\n  parent: System.SerializableAttribute\n  isExternal: false\n  name: SerializableAttribute()\n  nameWithType: SerializableAttribute.SerializableAttribute()\n  fullName: System.SerializableAttribute.SerializableAttribute()\n- uid: System.SerializableAttribute.#ctor*\n  parent: System.SerializableAttribute\n  isExternal: false\n  name: SerializableAttribute\n  nameWithType: SerializableAttribute.SerializableAttribute\n"}