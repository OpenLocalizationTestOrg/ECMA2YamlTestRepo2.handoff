{"nodes":[{"pos":[693,847],"content":"Provides an abstract base class from which all <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.ECDiffieHellmanCngPublicKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementations must inherit.","needQuote":true,"needEscape":true,"source":"Provides an abstract base class from which all <xref href=\"System.Security.Cryptography.ECDiffieHellmanCngPublicKey\"></xref> implementations must inherit."},{"pos":[1562,1677],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.ECDiffieHellmanPublicKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.ECDiffieHellmanPublicKey\"></xref> class."},{"pos":[1689,1937],"content":"This constructor is called by classes that derive from the <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey> class. The <xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey> class is the only currently supported implementation.","needQuote":true,"needEscape":true,"nodes":[{"content":"This constructor is called by classes that derive from the <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey> class. The <xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey> class is the only currently supported implementation.","pos":[0,248],"nodes":[{"content":"This constructor is called by classes that derive from the &lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt; class.","pos":[0,126],"source":"This constructor is called by classes that derive from the <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey> class."},{"content":"The &lt;xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey&gt; class is the only currently supported implementation.","pos":[127,248],"source":" The <xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey> class is the only currently supported implementation."}]}]},{"pos":[2093,2207],"content":"A byte array that represents an <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.ECDiffieHellmanPublicKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A byte array that represents an <xref href=\"System.Security.Cryptography.ECDiffieHellmanPublicKey\"></xref> object."},{"pos":[2397,2482],"content":"<ph id=\"ph1\">&lt;code&gt;keyBlob&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>keyBlob</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[2916,3047],"content":"Releases all resources used by the current instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.ECDiffieHellman\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Releases all resources used by the current instance of the <xref href=\"System.Security.Cryptography.ECDiffieHellman\"></xref> class."},{"pos":[3060,3682],"content":"Call Dispose when you are finished using the <xref:System.Security.Cryptography.ECDiffieHellman>. The Dispose method leaves the <xref:System.Security.Cryptography.ECDiffieHellman> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Security.Cryptography.ECDiffieHellman> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.ECDiffieHellman> was occupying.       For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Call Dispose when you are finished using the &lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;.","pos":[0,97],"source":"Call Dispose when you are finished using the <xref:System.Security.Cryptography.ECDiffieHellman>."},{"content":"The Dispose method leaves the &lt;xref:System.Security.Cryptography.ECDiffieHellman&gt; in an unusable state.","pos":[98,201],"source":" The Dispose method leaves the <xref:System.Security.Cryptography.ECDiffieHellman> in an unusable state."},{"content":"After calling Dispose, you must release all references to the &lt;xref:System.Security.Cryptography.ECDiffieHellman&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Security.Cryptography.ECDiffieHellman&gt; was occupying.","pos":[202,439],"source":" After calling Dispose, you must release all references to the <xref:System.Security.Cryptography.ECDiffieHellman> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.ECDiffieHellman> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[446,620],"source":"       For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[4328,4491],"content":"Releases the unmanaged resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.ECDiffieHellman\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and optionally releases the managed resources.","needQuote":true,"needEscape":true,"source":"Releases the unmanaged resources used by the <xref href=\"System.Security.Cryptography.ECDiffieHellman\"></xref> class and optionally releases the managed resources."},{"pos":[4504,5612],"content":"This method executes in two distinct scenarios:      -   If `disposing` equals `true`, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.      -   If `disposing` equals `false`, the method has been called by the runtime from inside the finalizer, and you should not reference managed resources. Only unmanaged resources can be disposed.       If you need to provide cleanup code for managed and unmanaged resources that an object created, you should override this method.       This method is called by the public `Dispose()`method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.       When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey> references. This method invokes the `Dispose()` method of each referenced object.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method executes in two distinct scenarios:      -   If <ph id=\"ph1\">`disposing`</ph> equals <ph id=\"ph2\">`true`</ph>, the method has been called directly or indirectly by a user's code.","pos":[0,154],"source":"This method executes in two distinct scenarios:      -   If `disposing` equals `true`, the method has been called directly or indirectly by a user's code."},{"content":"Managed and unmanaged resources can be disposed.","pos":[155,203]},{"content":"-   If <ph id=\"ph1\">`disposing`</ph> equals <ph id=\"ph2\">`false`</ph>, the method has been called by the runtime from inside the finalizer, and you should not reference managed resources.","pos":[209,360],"source":"      -   If `disposing` equals `false`, the method has been called by the runtime from inside the finalizer, and you should not reference managed resources."},{"content":"Only unmanaged resources can be disposed.","pos":[361,402]},{"content":"If you need to provide cleanup code for managed and unmanaged resources that an object created, you should override this method.","pos":[409,537]},{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph>method and the &lt;xref:System.Object.Finalize%2A&gt; method.","pos":[544,646],"source":"       This method is called by the public `Dispose()`method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[647,752],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id=\"ph1\">`Dispose`</ph> with <ph id=\"ph2\">`disposing`</ph> set to <ph id=\"ph3\">`false`</ph>.","pos":[753,836],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."},{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this &lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt; references.","pos":[843,1028],"source":"       When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[1029,1098],"source":" This method invokes the `Dispose()` method of each referenced object."}]},{"pos":[5768,5977],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources."},{"pos":[6523,6638],"content":"Serializes the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.ECDiffieHellmanPublicKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> key BLOB to a byte array.","needQuote":true,"needEscape":true,"source":"Serializes the <xref href=\"System.Security.Cryptography.ECDiffieHellmanPublicKey\"></xref> key BLOB to a byte array."},{"pos":[6776,6866],"content":"A byte array that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key.","pos":[0,90]}]},{"pos":[7416,7534],"content":"Serializes the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.ECDiffieHellmanPublicKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> public key to an XML string.","needQuote":true,"needEscape":true,"source":"Serializes the <xref href=\"System.Security.Cryptography.ECDiffieHellmanPublicKey\"></xref> public key to an XML string."},{"pos":[7672,7763],"content":"An XML string that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML string that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key.","pos":[0,91]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  id: ECDiffieHellmanPublicKey\n  children:\n  - System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])\n  - System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose\n  - System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)\n  - System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray\n  - System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString\n  langs:\n  - csharp\n  name: ECDiffieHellmanPublicKey\n  nameWithType: ECDiffieHellmanPublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  type: Class\n  summary: Provides an abstract base class from which all <xref href=\"System.Security.Cryptography.ECDiffieHellmanCngPublicKey\"></xref> implementations must inherit.\n  syntax:\n    content: 'public abstract class ECDiffieHellmanPublicKey : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  langs:\n  - csharp\n  name: ECDiffieHellmanPublicKey(Byte[])\n  nameWithType: ECDiffieHellmanPublicKey.ECDiffieHellmanPublicKey(Byte[])\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ECDiffieHellmanPublicKey(Byte[])\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.ECDiffieHellmanPublicKey\"></xref> class.\n  remarks: This constructor is called by classes that derive from the <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey> class. The <xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey> class is the only currently supported implementation.\n  syntax:\n    content: protected ECDiffieHellmanPublicKey (byte[] keyBlob);\n    parameters:\n    - id: keyBlob\n      type: System.Byte[]\n      description: A byte array that represents an <xref href=\"System.Security.Cryptography.ECDiffieHellmanPublicKey\"></xref> object.\n  overload: System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyBlob</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose\n  id: Dispose\n  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: ECDiffieHellmanPublicKey.Dispose()\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Releases all resources used by the current instance of the <xref href=\"System.Security.Cryptography.ECDiffieHellman\"></xref> class.\n  remarks: \"Call Dispose when you are finished using the <xref:System.Security.Cryptography.ECDiffieHellman>. The Dispose method leaves the <xref:System.Security.Cryptography.ECDiffieHellman> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Security.Cryptography.ECDiffieHellman> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.ECDiffieHellman> was occupying.  \\n  \\n For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: ECDiffieHellmanPublicKey.Dispose(Boolean)\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Security.Cryptography.ECDiffieHellman\"></xref> class and optionally releases the managed resources.\n  remarks: \"This method executes in two distinct scenarios:  \\n  \\n-   If `disposing` equals `true`, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.  \\n  \\n-   If `disposing` equals `false`, the method has been called by the runtime from inside the finalizer, and you should not reference managed resources. Only unmanaged resources can be disposed.  \\n  \\n If you need to provide cleanup code for managed and unmanaged resources that an object created, you should override this method.  \\n  \\n This method is called by the public `Dispose()`method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources.\n  overload: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray\n  id: ToByteArray\n  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  langs:\n  - csharp\n  name: ToByteArray()\n  nameWithType: ECDiffieHellmanPublicKey.ToByteArray()\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Serializes the <xref href=\"System.Security.Cryptography.ECDiffieHellmanPublicKey\"></xref> key BLOB to a byte array.\n  syntax:\n    content: public virtual byte[] ToByteArray ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key.\n  overload: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString\n  id: ToXmlString\n  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  langs:\n  - csharp\n  name: ToXmlString()\n  nameWithType: ECDiffieHellmanPublicKey.ToXmlString()\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Serializes the <xref href=\"System.Security.Cryptography.ECDiffieHellmanPublicKey\"></xref> public key to an XML string.\n  syntax:\n    content: public virtual string ToXmlString ();\n    parameters: []\n    return:\n      type: System.String\n      description: An XML string that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key.\n  overload: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])\n  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  isExternal: false\n  name: ECDiffieHellmanPublicKey(Byte[])\n  nameWithType: ECDiffieHellmanPublicKey.ECDiffieHellmanPublicKey(Byte[])\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ECDiffieHellmanPublicKey(Byte[])\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose\n  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  isExternal: false\n  name: Dispose()\n  nameWithType: ECDiffieHellmanPublicKey.Dispose()\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose()\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ECDiffieHellmanPublicKey.Dispose(Boolean)\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray\n  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  isExternal: false\n  name: ToByteArray()\n  nameWithType: ECDiffieHellmanPublicKey.ToByteArray()\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray()\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString\n  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  isExternal: false\n  name: ToXmlString()\n  nameWithType: ECDiffieHellmanPublicKey.ToXmlString()\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor*\n  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  isExternal: false\n  name: ECDiffieHellmanPublicKey\n  nameWithType: ECDiffieHellmanPublicKey.ECDiffieHellmanPublicKey\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose*\n  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  isExternal: false\n  name: Dispose\n  nameWithType: ECDiffieHellmanPublicKey.Dispose\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray*\n  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  isExternal: false\n  name: ToByteArray\n  nameWithType: ECDiffieHellmanPublicKey.ToByteArray\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString*\n  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  isExternal: false\n  name: ToXmlString\n  nameWithType: ECDiffieHellmanPublicKey.ToXmlString\n"}