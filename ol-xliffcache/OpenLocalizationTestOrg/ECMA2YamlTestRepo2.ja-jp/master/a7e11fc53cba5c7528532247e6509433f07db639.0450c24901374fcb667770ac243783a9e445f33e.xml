{"nodes":[{"pos":[1693,1805],"content":"Contains a strongly typed collection of <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventLogPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Contains a strongly typed collection of <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref> objects."},{"pos":[4234,4334],"content":"Adds a specified <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventLogPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to this collection.","needQuote":true,"needEscape":true,"source":"Adds a specified <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref> to this collection."},{"pos":[4531,4606],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventLogPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref> to add."},{"pos":[4663,4761],"content":"The zero-based index of the added <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventLogPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The zero-based index of the added <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref>."},{"pos":[5445,5510],"content":"Appends a set of specified permission entries to this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Appends a set of specified permission entries to this collection.","pos":[0,65]}]},{"pos":[5717,5850],"content":"An array of type <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventLogPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that contains the permission entries to add.","needQuote":true,"needEscape":true,"source":"An array of type <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref> objects that contains the permission entries to add."},{"pos":[6042,6125],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6762,6827],"content":"Appends a set of specified permission entries to this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Appends a set of specified permission entries to this collection.","pos":[0,65]}]},{"pos":[7050,7170],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventLogPermissionEntryCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the permission entries to add.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.EventLogPermissionEntryCollection\"></xref> that contains the permission entries to add."},{"pos":[7362,7445],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8032,8152],"content":"Determines whether this collection contains a specified <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventLogPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether this collection contains a specified <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref>."},{"pos":[8355,8431],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventLogPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to find.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref> to find."},{"pos":[8490,8734],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.EventLogPermissionEntry\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> belongs to this collection; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref> belongs to this collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9457,9565],"content":"Copies the permission entries from this collection to an array, starting at a particular index of the array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the permission entries from this collection to an array, starting at a particular index of the array.","pos":[0,108]}]},{"pos":[9781,9913],"content":"An array of type <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventLogPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that receives this collection's permission entries.","needQuote":true,"needEscape":true,"source":"An array of type <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref> that receives this collection's permission entries."},{"pos":[9974,10044],"content":"The zero-based index at which to begin copying the permission entries.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index at which to begin copying the permission entries.","pos":[0,70]}]},{"pos":[10716,10788],"content":"Determines the index of a specified permission entry in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines the index of a specified permission entry in this collection.","pos":[0,72]}]},{"pos":[10989,11024],"content":"The permission entry to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permission entry to search for.","pos":[0,35]}]},{"pos":[11081,11199],"content":"The zero-based index of the specified permission entry, or -1 if the permission entry was not found in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the specified permission entry, or -1 if the permission entry was not found in the collection.","pos":[0,118]}]},{"pos":[11911,11980],"content":"Inserts a permission entry into this collection at a specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inserts a permission entry into this collection at a specified index.","pos":[0,69]}]},{"pos":[12162,12241],"content":"The zero-based index of the collection at which to insert the permission entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the collection at which to insert the permission entry.","pos":[0,79]}]},{"pos":[12332,12384],"content":"The permission entry to insert into this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permission entry to insert into this collection.","pos":[0,52]}]},{"pos":[12929,12974],"content":"Gets or sets the object at a specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the object at a specified index.","pos":[0,45]}]},{"pos":[13154,13195],"content":"The zero-based index into the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index into the collection.","pos":[0,41]}]},{"pos":[13282,13385],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventLogPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that exists at the specified index.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref> that exists at the specified index."},{"pos":[13898,13981],"content":"Performs additional custom processes after clearing the contents of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs additional custom processes after clearing the contents of the collection.","pos":[0,83]}]},{"pos":[14672,14771],"content":"Performs additional custom processes before a new permission entry is inserted into the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs additional custom processes before a new permission entry is inserted into the collection.","pos":[0,99]}]},{"pos":[14931,14979],"content":"The zero-based index at which to insert <ph id=\"ph1\">`value`</ph>.","needQuote":true,"needEscape":true,"source":"The zero-based index at which to insert `value`."},{"pos":[15041,15090],"content":"The new value of the permission entry at <ph id=\"ph1\">`index`</ph>.","needQuote":true,"needEscape":true,"source":"The new value of the permission entry at `index`."},{"pos":[15704,15798],"content":"Performs additional custom processes when removing a new permission entry from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs additional custom processes when removing a new permission entry from the collection.","pos":[0,94]}]},{"pos":[15958,16009],"content":"The zero-based index at which <ph id=\"ph1\">`value`</ph> can be found.","needQuote":true,"needEscape":true,"source":"The zero-based index at which `value` can be found."},{"pos":[16071,16115],"content":"The permission entry to remove from <ph id=\"ph1\">`index`</ph>.","needQuote":true,"needEscape":true,"source":"The permission entry to remove from `index`."},{"pos":[16763,16841],"content":"Performs additional custom processes before setting a value in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs additional custom processes before setting a value in the collection.","pos":[0,78]}]},{"pos":[17018,17072],"content":"The zero-based index at which <ph id=\"ph1\">`oldValue`</ph> can be found.","needQuote":true,"needEscape":true,"source":"The zero-based index at which `oldValue` can be found."},{"pos":[17137,17174],"content":"The value to replace with <ph id=\"ph1\">`newValue`</ph>.","needQuote":true,"needEscape":true,"source":"The value to replace with `newValue`."},{"pos":[17239,17288],"content":"The new value of the permission entry at <ph id=\"ph1\">`index`</ph>.","needQuote":true,"needEscape":true,"source":"The new value of the permission entry at `index`."},{"pos":[17954,18012],"content":"Removes a specified permission entry from this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a specified permission entry from this collection.","pos":[0,58]}]},{"pos":[18213,18244],"content":"The permission entry to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permission entry to remove.","pos":[0,31]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.EventLogPermissionEntryCollection\n  id: EventLogPermissionEntryCollection\n  children:\n  - System.Diagnostics.EventLogPermissionEntryCollection.Add(System.Diagnostics.EventLogPermissionEntry)\n  - System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntry[])\n  - System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntryCollection)\n  - System.Diagnostics.EventLogPermissionEntryCollection.Contains(System.Diagnostics.EventLogPermissionEntry)\n  - System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(System.Diagnostics.EventLogPermissionEntry[],System.Int32)\n  - System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(System.Diagnostics.EventLogPermissionEntry)\n  - System.Diagnostics.EventLogPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.EventLogPermissionEntry)\n  - System.Diagnostics.EventLogPermissionEntryCollection.Item(System.Int32)\n  - System.Diagnostics.EventLogPermissionEntryCollection.OnClear\n  - System.Diagnostics.EventLogPermissionEntryCollection.OnInsert(System.Int32,System.Object)\n  - System.Diagnostics.EventLogPermissionEntryCollection.OnRemove(System.Int32,System.Object)\n  - System.Diagnostics.EventLogPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)\n  - System.Diagnostics.EventLogPermissionEntryCollection.Remove(System.Diagnostics.EventLogPermissionEntry)\n  langs:\n  - csharp\n  name: EventLogPermissionEntryCollection\n  nameWithType: EventLogPermissionEntryCollection\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection\n  type: Class\n  summary: Contains a strongly typed collection of <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref> objects.\n  syntax:\n    content: 'public class EventLogPermissionEntryCollection : System.Collections.CollectionBase'\n  inheritance:\n  - System.Object\n  - System.Collections.CollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.CollectionBase.Capacity\n  - System.Collections.CollectionBase.Clear\n  - System.Collections.CollectionBase.Count\n  - System.Collections.CollectionBase.GetEnumerator\n  - System.Collections.CollectionBase.InnerList\n  - System.Collections.CollectionBase.List\n  - System.Collections.CollectionBase.OnClearComplete\n  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)\n  - System.Collections.CollectionBase.OnValidate(System.Object)\n  - System.Collections.CollectionBase.RemoveAt(System.Int32)\n  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot\n  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize\n  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly\n  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)\n  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.Add(System.Diagnostics.EventLogPermissionEntry)\n  id: Add(System.Diagnostics.EventLogPermissionEntry)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  langs:\n  - csharp\n  name: Add(EventLogPermissionEntry)\n  nameWithType: EventLogPermissionEntryCollection.Add(EventLogPermissionEntry)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.Add(EventLogPermissionEntry)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Adds a specified <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref> to this collection.\n  syntax:\n    content: public int Add (System.Diagnostics.EventLogPermissionEntry value);\n    parameters:\n    - id: value\n      type: System.Diagnostics.EventLogPermissionEntry\n      description: The <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref> to add.\n    return:\n      type: System.Int32\n      description: The zero-based index of the added <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref>.\n  overload: System.Diagnostics.EventLogPermissionEntryCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntry[])\n  id: AddRange(System.Diagnostics.EventLogPermissionEntry[])\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  langs:\n  - csharp\n  name: AddRange(EventLogPermissionEntry[])\n  nameWithType: EventLogPermissionEntryCollection.AddRange(EventLogPermissionEntry[])\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.AddRange(EventLogPermissionEntry[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Appends a set of specified permission entries to this collection.\n  syntax:\n    content: public void AddRange (System.Diagnostics.EventLogPermissionEntry[] value);\n    parameters:\n    - id: value\n      type: System.Diagnostics.EventLogPermissionEntry[]\n      description: An array of type <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref> objects that contains the permission entries to add.\n  overload: System.Diagnostics.EventLogPermissionEntryCollection.AddRange*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntryCollection)\n  id: AddRange(System.Diagnostics.EventLogPermissionEntryCollection)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  langs:\n  - csharp\n  name: AddRange(EventLogPermissionEntryCollection)\n  nameWithType: EventLogPermissionEntryCollection.AddRange(EventLogPermissionEntryCollection)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.AddRange(EventLogPermissionEntryCollection)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Appends a set of specified permission entries to this collection.\n  syntax:\n    content: public void AddRange (System.Diagnostics.EventLogPermissionEntryCollection value);\n    parameters:\n    - id: value\n      type: System.Diagnostics.EventLogPermissionEntryCollection\n      description: A <xref href=\"System.Diagnostics.EventLogPermissionEntryCollection\"></xref> that contains the permission entries to add.\n  overload: System.Diagnostics.EventLogPermissionEntryCollection.AddRange*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.Contains(System.Diagnostics.EventLogPermissionEntry)\n  id: Contains(System.Diagnostics.EventLogPermissionEntry)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  langs:\n  - csharp\n  name: Contains(EventLogPermissionEntry)\n  nameWithType: EventLogPermissionEntryCollection.Contains(EventLogPermissionEntry)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.Contains(EventLogPermissionEntry)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Determines whether this collection contains a specified <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref>.\n  syntax:\n    content: public bool Contains (System.Diagnostics.EventLogPermissionEntry value);\n    parameters:\n    - id: value\n      type: System.Diagnostics.EventLogPermissionEntry\n      description: The <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref> to find.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref> belongs to this collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.EventLogPermissionEntryCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(System.Diagnostics.EventLogPermissionEntry[],System.Int32)\n  id: CopyTo(System.Diagnostics.EventLogPermissionEntry[],System.Int32)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  langs:\n  - csharp\n  name: CopyTo(EventLogPermissionEntry[],Int32)\n  nameWithType: EventLogPermissionEntryCollection.CopyTo(EventLogPermissionEntry[],Int32)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(EventLogPermissionEntry[],Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Copies the permission entries from this collection to an array, starting at a particular index of the array.\n  syntax:\n    content: public void CopyTo (System.Diagnostics.EventLogPermissionEntry[] array, int index);\n    parameters:\n    - id: array\n      type: System.Diagnostics.EventLogPermissionEntry[]\n      description: An array of type <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref> that receives this collection's permission entries.\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which to begin copying the permission entries.\n  overload: System.Diagnostics.EventLogPermissionEntryCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(System.Diagnostics.EventLogPermissionEntry)\n  id: IndexOf(System.Diagnostics.EventLogPermissionEntry)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  langs:\n  - csharp\n  name: IndexOf(EventLogPermissionEntry)\n  nameWithType: EventLogPermissionEntryCollection.IndexOf(EventLogPermissionEntry)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(EventLogPermissionEntry)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Determines the index of a specified permission entry in this collection.\n  syntax:\n    content: public int IndexOf (System.Diagnostics.EventLogPermissionEntry value);\n    parameters:\n    - id: value\n      type: System.Diagnostics.EventLogPermissionEntry\n      description: The permission entry to search for.\n    return:\n      type: System.Int32\n      description: The zero-based index of the specified permission entry, or -1 if the permission entry was not found in the collection.\n  overload: System.Diagnostics.EventLogPermissionEntryCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.EventLogPermissionEntry)\n  id: Insert(System.Int32,System.Diagnostics.EventLogPermissionEntry)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  langs:\n  - csharp\n  name: Insert(Int32,EventLogPermissionEntry)\n  nameWithType: EventLogPermissionEntryCollection.Insert(Int32,EventLogPermissionEntry)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.Insert(Int32,EventLogPermissionEntry)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Inserts a permission entry into this collection at a specified index.\n  syntax:\n    content: public void Insert (int index, System.Diagnostics.EventLogPermissionEntry value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the collection at which to insert the permission entry.\n    - id: value\n      type: System.Diagnostics.EventLogPermissionEntry\n      description: The permission entry to insert into this collection.\n  overload: System.Diagnostics.EventLogPermissionEntryCollection.Insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: EventLogPermissionEntryCollection.Item(Int32)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets or sets the object at a specified index.\n  syntax:\n    content: public System.Diagnostics.EventLogPermissionEntry this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index into the collection.\n    return:\n      type: System.Diagnostics.EventLogPermissionEntry\n      description: The <xref href=\"System.Diagnostics.EventLogPermissionEntry\"></xref> that exists at the specified index.\n  overload: System.Diagnostics.EventLogPermissionEntryCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.OnClear\n  id: OnClear\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  langs:\n  - csharp\n  name: OnClear()\n  nameWithType: EventLogPermissionEntryCollection.OnClear()\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.OnClear()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Performs additional custom processes after clearing the contents of the collection.\n  syntax:\n    content: protected override void OnClear ();\n    parameters: []\n  overload: System.Diagnostics.EventLogPermissionEntryCollection.OnClear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.OnInsert(System.Int32,System.Object)\n  id: OnInsert(System.Int32,System.Object)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  langs:\n  - csharp\n  name: OnInsert(Int32,Object)\n  nameWithType: EventLogPermissionEntryCollection.OnInsert(Int32,Object)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.OnInsert(Int32,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Performs additional custom processes before a new permission entry is inserted into the collection.\n  syntax:\n    content: protected override void OnInsert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which to insert `value`.\n    - id: value\n      type: System.Object\n      description: The new value of the permission entry at `index`.\n  overload: System.Diagnostics.EventLogPermissionEntryCollection.OnInsert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.OnRemove(System.Int32,System.Object)\n  id: OnRemove(System.Int32,System.Object)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  langs:\n  - csharp\n  name: OnRemove(Int32,Object)\n  nameWithType: EventLogPermissionEntryCollection.OnRemove(Int32,Object)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.OnRemove(Int32,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Performs additional custom processes when removing a new permission entry from the collection.\n  syntax:\n    content: protected override void OnRemove (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which `value` can be found.\n    - id: value\n      type: System.Object\n      description: The permission entry to remove from `index`.\n  overload: System.Diagnostics.EventLogPermissionEntryCollection.OnRemove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)\n  id: OnSet(System.Int32,System.Object,System.Object)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  langs:\n  - csharp\n  name: OnSet(Int32,Object,Object)\n  nameWithType: EventLogPermissionEntryCollection.OnSet(Int32,Object,Object)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.OnSet(Int32,Object,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Performs additional custom processes before setting a value in the collection.\n  syntax:\n    content: protected override void OnSet (int index, object oldValue, object newValue);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which `oldValue` can be found.\n    - id: oldValue\n      type: System.Object\n      description: The value to replace with `newValue`.\n    - id: newValue\n      type: System.Object\n      description: The new value of the permission entry at `index`.\n  overload: System.Diagnostics.EventLogPermissionEntryCollection.OnSet*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.Remove(System.Diagnostics.EventLogPermissionEntry)\n  id: Remove(System.Diagnostics.EventLogPermissionEntry)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  langs:\n  - csharp\n  name: Remove(EventLogPermissionEntry)\n  nameWithType: EventLogPermissionEntryCollection.Remove(EventLogPermissionEntry)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.Remove(EventLogPermissionEntry)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Removes a specified permission entry from this collection.\n  syntax:\n    content: public void Remove (System.Diagnostics.EventLogPermissionEntry value);\n    parameters:\n    - id: value\n      type: System.Diagnostics.EventLogPermissionEntry\n      description: The permission entry to remove.\n  overload: System.Diagnostics.EventLogPermissionEntryCollection.Remove*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.CollectionBase\n  isExternal: false\n  name: System.Collections.CollectionBase\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.Add(System.Diagnostics.EventLogPermissionEntry)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: Add(EventLogPermissionEntry)\n  nameWithType: EventLogPermissionEntryCollection.Add(EventLogPermissionEntry)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.Add(EventLogPermissionEntry)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.EventLogPermissionEntry\n  parent: System.Diagnostics\n  isExternal: false\n  name: EventLogPermissionEntry\n  nameWithType: EventLogPermissionEntry\n  fullName: System.Diagnostics.EventLogPermissionEntry\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntry[])\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: AddRange(EventLogPermissionEntry[])\n  nameWithType: EventLogPermissionEntryCollection.AddRange(EventLogPermissionEntry[])\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.AddRange(EventLogPermissionEntry[])\n- uid: System.Diagnostics.EventLogPermissionEntry[]\n  parent: System.Diagnostics\n  isExternal: false\n  name: EventLogPermissionEntry\n  nameWithType: EventLogPermissionEntry\n  fullName: System.Diagnostics.EventLogPermissionEntry[]\n  spec.csharp:\n  - uid: System.Diagnostics.EventLogPermissionEntry\n    name: EventLogPermissionEntry\n    nameWithType: EventLogPermissionEntry\n    fullName: EventLogPermissionEntry[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntryCollection)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: AddRange(EventLogPermissionEntryCollection)\n  nameWithType: EventLogPermissionEntryCollection.AddRange(EventLogPermissionEntryCollection)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.AddRange(EventLogPermissionEntryCollection)\n- uid: System.Diagnostics.EventLogPermissionEntryCollection\n  parent: System.Diagnostics\n  isExternal: false\n  name: EventLogPermissionEntryCollection\n  nameWithType: EventLogPermissionEntryCollection\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.Contains(System.Diagnostics.EventLogPermissionEntry)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: Contains(EventLogPermissionEntry)\n  nameWithType: EventLogPermissionEntryCollection.Contains(EventLogPermissionEntry)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.Contains(EventLogPermissionEntry)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(System.Diagnostics.EventLogPermissionEntry[],System.Int32)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: CopyTo(EventLogPermissionEntry[],Int32)\n  nameWithType: EventLogPermissionEntryCollection.CopyTo(EventLogPermissionEntry[],Int32)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(EventLogPermissionEntry[],Int32)\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(System.Diagnostics.EventLogPermissionEntry)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: IndexOf(EventLogPermissionEntry)\n  nameWithType: EventLogPermissionEntryCollection.IndexOf(EventLogPermissionEntry)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(EventLogPermissionEntry)\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.EventLogPermissionEntry)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: Insert(Int32,EventLogPermissionEntry)\n  nameWithType: EventLogPermissionEntryCollection.Insert(Int32,EventLogPermissionEntry)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.Insert(Int32,EventLogPermissionEntry)\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.Item(System.Int32)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: EventLogPermissionEntryCollection.Item(Int32)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.Item(Int32)\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.OnClear\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: OnClear()\n  nameWithType: EventLogPermissionEntryCollection.OnClear()\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.OnClear()\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.OnInsert(System.Int32,System.Object)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: OnInsert(Int32,Object)\n  nameWithType: EventLogPermissionEntryCollection.OnInsert(Int32,Object)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.OnInsert(Int32,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.OnRemove(System.Int32,System.Object)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: OnRemove(Int32,Object)\n  nameWithType: EventLogPermissionEntryCollection.OnRemove(Int32,Object)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.OnRemove(Int32,Object)\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: OnSet(Int32,Object,Object)\n  nameWithType: EventLogPermissionEntryCollection.OnSet(Int32,Object,Object)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.OnSet(Int32,Object,Object)\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.Remove(System.Diagnostics.EventLogPermissionEntry)\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: Remove(EventLogPermissionEntry)\n  nameWithType: EventLogPermissionEntryCollection.Remove(EventLogPermissionEntry)\n  fullName: System.Diagnostics.EventLogPermissionEntryCollection.Remove(EventLogPermissionEntry)\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.Add*\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: Add\n  nameWithType: EventLogPermissionEntryCollection.Add\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.AddRange*\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: AddRange\n  nameWithType: EventLogPermissionEntryCollection.AddRange\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.Contains*\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: Contains\n  nameWithType: EventLogPermissionEntryCollection.Contains\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.CopyTo*\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: EventLogPermissionEntryCollection.CopyTo\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.IndexOf*\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: EventLogPermissionEntryCollection.IndexOf\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.Insert*\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: Insert\n  nameWithType: EventLogPermissionEntryCollection.Insert\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.Item*\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: Item\n  nameWithType: EventLogPermissionEntryCollection.Item\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.OnClear*\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: OnClear\n  nameWithType: EventLogPermissionEntryCollection.OnClear\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.OnInsert*\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: OnInsert\n  nameWithType: EventLogPermissionEntryCollection.OnInsert\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.OnRemove*\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: OnRemove\n  nameWithType: EventLogPermissionEntryCollection.OnRemove\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.OnSet*\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: OnSet\n  nameWithType: EventLogPermissionEntryCollection.OnSet\n- uid: System.Diagnostics.EventLogPermissionEntryCollection.Remove*\n  parent: System.Diagnostics.EventLogPermissionEntryCollection\n  isExternal: false\n  name: Remove\n  nameWithType: EventLogPermissionEntryCollection.Remove\n"}