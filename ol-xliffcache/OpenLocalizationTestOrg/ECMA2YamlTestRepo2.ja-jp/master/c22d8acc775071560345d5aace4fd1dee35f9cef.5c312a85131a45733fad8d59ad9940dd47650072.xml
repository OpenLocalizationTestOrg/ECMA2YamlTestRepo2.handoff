{"nodes":[{"pos":[789,924],"content":"Manages the definition of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_IEnumConnectionPoints\" name=\"IEnumConnectionPoints\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"Manages the definition of the <xref uid=\"langword_csharp_IEnumConnectionPoints\" name=\"IEnumConnectionPoints\" href=\"\"></xref> interface."},{"pos":[937,1597],"content":"For new development, use <xref:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints>.      > [!NOTE] >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.","needQuote":false,"needEscape":true,"nodes":[{"content":"For new development, use &lt;xref:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints&gt;.","pos":[0,94],"source":"For new development, use <xref:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Functions and objects in the &lt;xref:Microsoft.VisualBasic.Compatibility.VB6&gt; namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to <ph id=\"ph2\">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>.","pos":[100,320],"source":"      > [!NOTE] >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]."},{"content":"In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.","pos":[321,491],"source":" In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]."},{"content":"They are necessary only when the Visual Basic 6.0 code model differs significantly from the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> implementation.","pos":[492,657],"source":" They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation."}]},{"pos":[2747,2832],"content":"Creates a new enumerator that contains the same enumeration state as the current one.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new enumerator that contains the same enumeration state as the current one.","pos":[0,85]}]},{"pos":[3651,3770],"content":"When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.","pos":[0,119],"nodes":[{"content":"When this method returns, contains a reference to the newly created enumerator.","pos":[0,79]},{"content":"This parameter is passed uninitialized.","pos":[80,119]}]}]},{"pos":[4614,4680],"content":"Retrieves a specified number of items in the enumeration sequence.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a specified number of items in the enumeration sequence.","pos":[0,66]}]},{"pos":[5490,5611],"content":"The number of <bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> references to return in <ph id=\"ph1\">`cp`</ph>.","needQuote":true,"needEscape":true,"source":"The number of <xref href=\"Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint\"></xref> references to return in `cp`."},{"pos":[5715,5832],"content":"When this method returns, contains a reference to the enumerated connections. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a reference to the enumerated connections. This parameter is passed uninitialized.","pos":[0,117],"nodes":[{"content":"When this method returns, contains a reference to the enumerated connections.","pos":[0,77]},{"content":"This parameter is passed uninitialized.","pos":[78,117]}]}]},{"pos":[5896,5998],"content":"When this method returns, contains a reference to the actual number of connections enumerated in <ph id=\"ph1\">`cp`</ph>.","needQuote":true,"needEscape":true,"source":"When this method returns, contains a reference to the actual number of connections enumerated in `cp`."},{"pos":[6580,6629],"content":"Resets the enumeration sequence to the beginning.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resets the enumeration sequence to the beginning.","pos":[0,49]}]},{"pos":[7895,7957],"content":"Skips a specified number of items in the enumeration sequence.","needQuote":true,"needEscape":true,"nodes":[{"content":"Skips a specified number of items in the enumeration sequence.","pos":[0,62]}]},{"pos":[8682,8732],"content":"The number of elements to skip in the enumeration.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of elements to skip in the enumeration.","pos":[0,50]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints\n  id: IEnumConnectionPoints\n  children:\n  - Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Clone(Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints@)\n  - Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Next(System.Int32,Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint[]@,System.Int32@)\n  - Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Reset\n  - Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Skip(System.Int32)\n  langs:\n  - csharp\n  name: IEnumConnectionPoints\n  nameWithType: IEnumConnectionPoints\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints\n  type: Interface\n  summary: Manages the definition of the <xref uid=\"langword_csharp_IEnumConnectionPoints\" name=\"IEnumConnectionPoints\" href=\"\"></xref> interface.\n  remarks: \"For new development, use <xref:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints>.  \\n  \\n> [!NOTE]\\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862\")]\n\n      [System.Runtime.InteropServices.Guid(\"B196B285-BAB4-101A-B69C-00AA00341D07\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface IEnumConnectionPoints\n  implements: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Clone(Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints@)\n  id: Clone(Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints@)\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints\n  langs:\n  - csharp\n  name: Clone(IEnumConnectionPoints)\n  nameWithType: IEnumConnectionPoints.Clone(IEnumConnectionPoints)\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Clone(IEnumConnectionPoints)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic.Compatibility.Data\n  namespace: Microsoft.VisualBasic.Compatibility.VB6\n  summary: Creates a new enumerator that contains the same enumeration state as the current one.\n  remarks: >-\n    > [!NOTE]\n\n    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.\n  syntax:\n    content: public void Clone (out Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints ecp);\n    parameters:\n    - id: ecp\n      type: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints\n      description: When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.\n  overload: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Next(System.Int32,Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint[]@,System.Int32@)\n  id: Next(System.Int32,Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint[]@,System.Int32@)\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints\n  langs:\n  - csharp\n  name: Next(Int32,IConnectionPoint[],Int32)\n  nameWithType: IEnumConnectionPoints.Next(Int32,IConnectionPoint[],Int32)\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Next(Int32,IConnectionPoint[],Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic.Compatibility.Data\n  namespace: Microsoft.VisualBasic.Compatibility.VB6\n  summary: Retrieves a specified number of items in the enumeration sequence.\n  remarks: >-\n    > [!NOTE]\n\n    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.\n  syntax:\n    content: public void Next (int cConnections, out Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint[] cp, out int cFetched);\n    parameters:\n    - id: cConnections\n      type: System.Int32\n      description: The number of <xref href=\"Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint\"></xref> references to return in `cp`.\n    - id: cp\n      type: Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint[]\n      description: When this method returns, contains a reference to the enumerated connections. This parameter is passed uninitialized.\n    - id: cFetched\n      type: System.Int32\n      description: When this method returns, contains a reference to the actual number of connections enumerated in `cp`.\n  overload: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Next*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Reset\n  id: Reset\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: IEnumConnectionPoints.Reset()\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Reset()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic.Compatibility.Data\n  namespace: Microsoft.VisualBasic.Compatibility.VB6\n  summary: Resets the enumeration sequence to the beginning.\n  remarks: >-\n    > [!NOTE]\n\n    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.\n  syntax:\n    content: public void Reset ();\n    parameters: []\n  overload: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Reset*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Skip(System.Int32)\n  id: Skip(System.Int32)\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints\n  langs:\n  - csharp\n  name: Skip(Int32)\n  nameWithType: IEnumConnectionPoints.Skip(Int32)\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Skip(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic.Compatibility.Data\n  namespace: Microsoft.VisualBasic.Compatibility.VB6\n  summary: Skips a specified number of items in the enumeration sequence.\n  remarks: >-\n    > [!NOTE]\n\n    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.\n  syntax:\n    content: public void Skip (int cConnections);\n    parameters:\n    - id: cConnections\n      type: System.Int32\n      description: The number of elements to skip in the enumeration.\n  overload: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Skip*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Clone(Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints@)\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints\n  isExternal: false\n  name: Clone(IEnumConnectionPoints)\n  nameWithType: IEnumConnectionPoints.Clone(IEnumConnectionPoints)\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Clone(IEnumConnectionPoints)\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints\n  parent: Microsoft.VisualBasic.Compatibility.VB6\n  isExternal: false\n  name: IEnumConnectionPoints\n  nameWithType: IEnumConnectionPoints\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Next(System.Int32,Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint[]@,System.Int32@)\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints\n  isExternal: false\n  name: Next(Int32,IConnectionPoint[],Int32)\n  nameWithType: IEnumConnectionPoints.Next(Int32,IConnectionPoint[],Int32)\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Next(Int32,IConnectionPoint[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint[]\n  parent: Microsoft.VisualBasic.Compatibility.VB6\n  isExternal: false\n  name: IConnectionPoint\n  nameWithType: IConnectionPoint\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint[]\n  spec.csharp:\n  - uid: Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint\n    name: IConnectionPoint\n    nameWithType: IConnectionPoint\n    fullName: IConnectionPoint[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Reset\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints\n  isExternal: false\n  name: Reset()\n  nameWithType: IEnumConnectionPoints.Reset()\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Reset()\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Skip(System.Int32)\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints\n  isExternal: false\n  name: Skip(Int32)\n  nameWithType: IEnumConnectionPoints.Skip(Int32)\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Skip(Int32)\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Clone*\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints\n  isExternal: false\n  name: Clone\n  nameWithType: IEnumConnectionPoints.Clone\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Next*\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints\n  isExternal: false\n  name: Next\n  nameWithType: IEnumConnectionPoints.Next\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Reset*\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints\n  isExternal: false\n  name: Reset\n  nameWithType: IEnumConnectionPoints.Reset\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Skip*\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints\n  isExternal: false\n  name: Skip\n  nameWithType: IEnumConnectionPoints.Skip\n"}