{"nodes":[{"pos":[930,1044],"content":"Defines a type of text content in which measuring, hit testing and drawing of the entire content is done in whole.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines a type of text content in which measuring, hit testing and drawing of the entire content is done in whole.","pos":[0,114]}]},{"pos":[1056,1135],"content":"An example of a TextEmbeddedObject is a button in the middle of a line of text.","needQuote":true,"needEscape":true,"nodes":[{"content":"An example of a TextEmbeddedObject is a button in the middle of a line of text.","pos":[0,79]}]},{"pos":[2031,2147],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextEmbeddedObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.TextFormatting.TextEmbeddedObject\"></xref> class."},{"pos":[2767,2822],"content":"Gets the line breaking condition after the text object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the line breaking condition after the text object.","pos":[0,55]}]},{"pos":[2993,3071],"content":"An enumerated value of <bpt id=\"p1\">&lt;xref href=\"System.Windows.LineBreakCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An enumerated value of <xref href=\"System.Windows.LineBreakCondition\"></xref>."},{"pos":[3626,3682],"content":"Gets the line breaking condition before the text object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the line breaking condition before the text object.","pos":[0,56]}]},{"pos":[3854,3932],"content":"An enumerated value of <bpt id=\"p1\">&lt;xref href=\"System.Windows.LineBreakCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An enumerated value of <xref href=\"System.Windows.LineBreakCondition\"></xref>."},{"pos":[4634,4684],"content":"Gets the computed bounding box of the text object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the computed bounding box of the text object.","pos":[0,50]}]},{"pos":[4882,4975],"content":"A <xref:System.Boolean> value that determines if the text object is drawn from right to left.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt; value that determines if the text object is drawn from right to left.","pos":[0,93],"source":"A <xref:System.Boolean> value that determines if the text object is drawn from right to left."}]},{"pos":[5041,5154],"content":"A <xref:System.Boolean> value that determines if the text object is drawn with its side parallel to the baseline.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt; value that determines if the text object is drawn with its side parallel to the baseline.","pos":[0,113],"source":"A <xref:System.Boolean> value that determines if the text object is drawn with its side parallel to the baseline."}]},{"pos":[5218,5324],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Rect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the bounding box size of the text object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Rect\"></xref> value that represents the bounding box size of the text object."},{"pos":[6140,6162],"content":"Draws the text object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws the text object.","pos":[0,22]}]},{"pos":[6436,6534],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.DrawingContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use for rendering the text object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.DrawingContext\"></xref> to use for rendering the text object."},{"pos":[6604,6714],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the origin where the text object is drawn.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Point\"></xref> value that represents the origin where the text object is drawn."},{"pos":[6783,6876],"content":"A <xref:System.Boolean> value that determines if the text object is drawn from right to left.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt; value that determines if the text object is drawn from right to left.","pos":[0,93],"source":"A <xref:System.Boolean> value that determines if the text object is drawn from right to left."}]},{"pos":[6942,7055],"content":"A <xref:System.Boolean> value that determines if the text object is drawn with its side parallel to the baseline.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt; value that determines if the text object is drawn with its side parallel to the baseline.","pos":[0,113],"source":"A <xref:System.Boolean> value that determines if the text object is drawn with its side parallel to the baseline."}]},{"pos":[7631,7735],"content":"Get text object measurement metrics that will fit within the specified remaining width of the paragraph.","needQuote":true,"needEscape":true,"nodes":[{"content":"Get text object measurement metrics that will fit within the specified remaining width of the paragraph.","pos":[0,104]}]},{"pos":[7973,8042],"content":"A <xref:System.Double> that represents the remaining paragraph width.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the remaining paragraph width.","pos":[0,69],"source":"A <xref:System.Double> that represents the remaining paragraph width."}]},{"pos":[8148,8279],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the text object metrics.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics\"></xref> value that represents the text object metrics."},{"pos":[8835,8934],"content":"Determines whether the text object has a fixed size regardless of where it is placed within a line.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the text object has a fixed size regardless of where it is placed within a line.","pos":[0,99]}]},{"pos":[9059,9231],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the text object has a fixed size; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the text object has a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  id: TextEmbeddedObject\n  children:\n  - System.Windows.Media.TextFormatting.TextEmbeddedObject.#ctor\n  - System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakAfter\n  - System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakBefore\n  - System.Windows.Media.TextFormatting.TextEmbeddedObject.ComputeBoundingBox(System.Boolean,System.Boolean)\n  - System.Windows.Media.TextFormatting.TextEmbeddedObject.Draw(System.Windows.Media.DrawingContext,System.Windows.Point,System.Boolean,System.Boolean)\n  - System.Windows.Media.TextFormatting.TextEmbeddedObject.Format(System.Double)\n  - System.Windows.Media.TextFormatting.TextEmbeddedObject.HasFixedSize\n  langs:\n  - csharp\n  name: TextEmbeddedObject\n  nameWithType: TextEmbeddedObject\n  fullName: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  type: Class\n  summary: Defines a type of text content in which measuring, hit testing and drawing of the entire content is done in whole.\n  remarks: An example of a TextEmbeddedObject is a button in the middle of a line of text.\n  syntax:\n    content: 'public abstract class TextEmbeddedObject : System.Windows.Media.TextFormatting.TextRun'\n  inheritance:\n  - System.Object\n  - System.Windows.Media.TextFormatting.TextRun\n  implements: []\n  inheritedMembers:\n  - System.Windows.Media.TextFormatting.TextRun.CharacterBufferReference\n  - System.Windows.Media.TextFormatting.TextRun.Length\n  - System.Windows.Media.TextFormatting.TextRun.Properties\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  langs:\n  - csharp\n  name: TextEmbeddedObject()\n  nameWithType: TextEmbeddedObject.TextEmbeddedObject()\n  fullName: System.Windows.Media.TextFormatting.TextEmbeddedObject.TextEmbeddedObject()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.TextFormatting.TextEmbeddedObject\"></xref> class.\n  syntax:\n    content: protected TextEmbeddedObject ();\n    parameters: []\n  overload: System.Windows.Media.TextFormatting.TextEmbeddedObject.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakAfter\n  id: BreakAfter\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  langs:\n  - csharp\n  name: BreakAfter\n  nameWithType: TextEmbeddedObject.BreakAfter\n  fullName: System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakAfter\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the line breaking condition after the text object.\n  syntax:\n    content: public abstract System.Windows.LineBreakCondition BreakAfter { get; }\n    return:\n      type: System.Windows.LineBreakCondition\n      description: An enumerated value of <xref href=\"System.Windows.LineBreakCondition\"></xref>.\n  overload: System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakAfter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakBefore\n  id: BreakBefore\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  langs:\n  - csharp\n  name: BreakBefore\n  nameWithType: TextEmbeddedObject.BreakBefore\n  fullName: System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakBefore\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the line breaking condition before the text object.\n  syntax:\n    content: public abstract System.Windows.LineBreakCondition BreakBefore { get; }\n    return:\n      type: System.Windows.LineBreakCondition\n      description: An enumerated value of <xref href=\"System.Windows.LineBreakCondition\"></xref>.\n  overload: System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakBefore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.ComputeBoundingBox(System.Boolean,System.Boolean)\n  id: ComputeBoundingBox(System.Boolean,System.Boolean)\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  langs:\n  - csharp\n  name: ComputeBoundingBox(Boolean,Boolean)\n  nameWithType: TextEmbeddedObject.ComputeBoundingBox(Boolean,Boolean)\n  fullName: System.Windows.Media.TextFormatting.TextEmbeddedObject.ComputeBoundingBox(Boolean,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the computed bounding box of the text object.\n  syntax:\n    content: public abstract System.Windows.Rect ComputeBoundingBox (bool rightToLeft, bool sideways);\n    parameters:\n    - id: rightToLeft\n      type: System.Boolean\n      description: A <xref:System.Boolean> value that determines if the text object is drawn from right to left.\n    - id: sideways\n      type: System.Boolean\n      description: A <xref:System.Boolean> value that determines if the text object is drawn with its side parallel to the baseline.\n    return:\n      type: System.Windows.Rect\n      description: A <xref href=\"System.Windows.Rect\"></xref> value that represents the bounding box size of the text object.\n  overload: System.Windows.Media.TextFormatting.TextEmbeddedObject.ComputeBoundingBox*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.Draw(System.Windows.Media.DrawingContext,System.Windows.Point,System.Boolean,System.Boolean)\n  id: Draw(System.Windows.Media.DrawingContext,System.Windows.Point,System.Boolean,System.Boolean)\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  langs:\n  - csharp\n  name: Draw(DrawingContext,Point,Boolean,Boolean)\n  nameWithType: TextEmbeddedObject.Draw(DrawingContext,Point,Boolean,Boolean)\n  fullName: System.Windows.Media.TextFormatting.TextEmbeddedObject.Draw(DrawingContext,Point,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Draws the text object.\n  syntax:\n    content: public abstract void Draw (System.Windows.Media.DrawingContext drawingContext, System.Windows.Point origin, bool rightToLeft, bool sideways);\n    parameters:\n    - id: drawingContext\n      type: System.Windows.Media.DrawingContext\n      description: The <xref href=\"System.Windows.Media.DrawingContext\"></xref> to use for rendering the text object.\n    - id: origin\n      type: System.Windows.Point\n      description: The <xref href=\"System.Windows.Point\"></xref> value that represents the origin where the text object is drawn.\n    - id: rightToLeft\n      type: System.Boolean\n      description: A <xref:System.Boolean> value that determines if the text object is drawn from right to left.\n    - id: sideways\n      type: System.Boolean\n      description: A <xref:System.Boolean> value that determines if the text object is drawn with its side parallel to the baseline.\n  overload: System.Windows.Media.TextFormatting.TextEmbeddedObject.Draw*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.Format(System.Double)\n  id: Format(System.Double)\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  langs:\n  - csharp\n  name: Format(Double)\n  nameWithType: TextEmbeddedObject.Format(Double)\n  fullName: System.Windows.Media.TextFormatting.TextEmbeddedObject.Format(Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Get text object measurement metrics that will fit within the specified remaining width of the paragraph.\n  syntax:\n    content: public abstract System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics Format (double remainingParagraphWidth);\n    parameters:\n    - id: remainingParagraphWidth\n      type: System.Double\n      description: A <xref:System.Double> that represents the remaining paragraph width.\n    return:\n      type: System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics\n      description: A <xref href=\"System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics\"></xref> value that represents the text object metrics.\n  overload: System.Windows.Media.TextFormatting.TextEmbeddedObject.Format*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.HasFixedSize\n  id: HasFixedSize\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  langs:\n  - csharp\n  name: HasFixedSize\n  nameWithType: TextEmbeddedObject.HasFixedSize\n  fullName: System.Windows.Media.TextFormatting.TextEmbeddedObject.HasFixedSize\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Determines whether the text object has a fixed size regardless of where it is placed within a line.\n  syntax:\n    content: public abstract bool HasFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the text object has a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.TextFormatting.TextEmbeddedObject.HasFixedSize*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Media.TextFormatting.TextRun\n  isExternal: false\n  name: System.Windows.Media.TextFormatting.TextRun\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.#ctor\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  isExternal: false\n  name: TextEmbeddedObject()\n  nameWithType: TextEmbeddedObject.TextEmbeddedObject()\n  fullName: System.Windows.Media.TextFormatting.TextEmbeddedObject.TextEmbeddedObject()\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakAfter\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  isExternal: false\n  name: BreakAfter\n  nameWithType: TextEmbeddedObject.BreakAfter\n  fullName: System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakAfter\n- uid: System.Windows.LineBreakCondition\n  parent: System.Windows\n  isExternal: false\n  name: LineBreakCondition\n  nameWithType: LineBreakCondition\n  fullName: System.Windows.LineBreakCondition\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakBefore\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  isExternal: false\n  name: BreakBefore\n  nameWithType: TextEmbeddedObject.BreakBefore\n  fullName: System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakBefore\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.ComputeBoundingBox(System.Boolean,System.Boolean)\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  isExternal: false\n  name: ComputeBoundingBox(Boolean,Boolean)\n  nameWithType: TextEmbeddedObject.ComputeBoundingBox(Boolean,Boolean)\n  fullName: System.Windows.Media.TextFormatting.TextEmbeddedObject.ComputeBoundingBox(Boolean,Boolean)\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: false\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.Draw(System.Windows.Media.DrawingContext,System.Windows.Point,System.Boolean,System.Boolean)\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  isExternal: false\n  name: Draw(DrawingContext,Point,Boolean,Boolean)\n  nameWithType: TextEmbeddedObject.Draw(DrawingContext,Point,Boolean,Boolean)\n  fullName: System.Windows.Media.TextFormatting.TextEmbeddedObject.Draw(DrawingContext,Point,Boolean,Boolean)\n- uid: System.Windows.Media.DrawingContext\n  parent: System.Windows.Media\n  isExternal: false\n  name: DrawingContext\n  nameWithType: DrawingContext\n  fullName: System.Windows.Media.DrawingContext\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.Format(System.Double)\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  isExternal: false\n  name: Format(Double)\n  nameWithType: TextEmbeddedObject.Format(Double)\n  fullName: System.Windows.Media.TextFormatting.TextEmbeddedObject.Format(Double)\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics\n  parent: System.Windows.Media.TextFormatting\n  isExternal: false\n  name: TextEmbeddedObjectMetrics\n  nameWithType: TextEmbeddedObjectMetrics\n  fullName: System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.HasFixedSize\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  isExternal: false\n  name: HasFixedSize\n  nameWithType: TextEmbeddedObject.HasFixedSize\n  fullName: System.Windows.Media.TextFormatting.TextEmbeddedObject.HasFixedSize\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.#ctor*\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  isExternal: false\n  name: TextEmbeddedObject\n  nameWithType: TextEmbeddedObject.TextEmbeddedObject\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakAfter*\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  isExternal: false\n  name: BreakAfter\n  nameWithType: TextEmbeddedObject.BreakAfter\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakBefore*\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  isExternal: false\n  name: BreakBefore\n  nameWithType: TextEmbeddedObject.BreakBefore\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.ComputeBoundingBox*\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  isExternal: false\n  name: ComputeBoundingBox\n  nameWithType: TextEmbeddedObject.ComputeBoundingBox\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.Draw*\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  isExternal: false\n  name: Draw\n  nameWithType: TextEmbeddedObject.Draw\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.Format*\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  isExternal: false\n  name: Format\n  nameWithType: TextEmbeddedObject.Format\n- uid: System.Windows.Media.TextFormatting.TextEmbeddedObject.HasFixedSize*\n  parent: System.Windows.Media.TextFormatting.TextEmbeddedObject\n  isExternal: false\n  name: HasFixedSize\n  nameWithType: TextEmbeddedObject.HasFixedSize\n"}