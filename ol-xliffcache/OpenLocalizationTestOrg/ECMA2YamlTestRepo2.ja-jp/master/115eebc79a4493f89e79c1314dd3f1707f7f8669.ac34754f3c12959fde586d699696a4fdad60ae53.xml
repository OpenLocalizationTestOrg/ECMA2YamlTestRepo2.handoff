{"nodes":[{"pos":[4855,5170],"content":"Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs). This class is the abstract base class for the <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> and <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> classes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs).","pos":[0,109]},{"content":"This class is the abstract base class for the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> classes.","pos":[110,315],"source":" This class is the abstract base class for the <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> and <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> classes."}]},{"pos":[5722,5828],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> class."},{"pos":[6583,6689],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> class."},{"pos":[6946,7117],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>of the new <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref>of the new <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> instance."},{"pos":[7724,7830],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> class."},{"pos":[7994,8161],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the new <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is a container object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a container object."},{"pos":[8223,8334],"content":"True if the new <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is a directory object.","needQuote":true,"needEscape":true,"source":"True if the new <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a directory object."},{"pos":[8846,8992],"content":"Gets the &lt;xref:System.Type&gt; of the securable object associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the <xref:System.Type> of the securable object associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"pos":[9117,9244],"content":"The type of the securable object associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The type of the securable object associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"pos":[10459,10587],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values."},{"pos":[11088,11245],"content":"The identity to which the access rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity to which the access rule applies.","pos":[0,46]},{"content":"It must be an object that can be cast as a <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[48,157],"source":"  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}]},{"pos":[11311,11461],"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[0,150],"nodes":[{"content":"The access mask of this rule.","pos":[0,29]},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[30,150]}]}]},{"pos":[11530,11585],"content":"true if this rule is inherited from a parent container.","needQuote":true,"needEscape":true,"nodes":[{"content":"true if this rule is inherited from a parent container.","pos":[0,55]}]},{"pos":[11691,11747],"content":"Specifies the inheritance properties of the access rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the inheritance properties of the access rule.","pos":[0,56]}]},{"pos":[11853,12058],"content":"Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether inherited access rules are automatically propagated.","pos":[0,70]},{"content":"The propagation flags are ignored if <ph id=\"ph1\">`inheritanceFlags`</ph> is set to <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[71,205],"source":" The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>."}]},{"pos":[12153,12193],"content":"Specifies the valid access control type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the valid access control type.","pos":[0,40]}]},{"pos":[12278,12376],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that this method creates.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates."},{"pos":[12920,13102],"content":"Gets or sets a Boolean value that specifies whether the access rules associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object have been modified.","needQuote":true,"needEscape":true,"source":"Gets or sets a Boolean value that specifies whether the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified."},{"pos":[13233,13502],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the access rules associated with this <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object have been modified; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14023,14323],"content":"Gets the <xref:System.Type> of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. The <xref:System.Type> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Type&gt; of the object associated with the access rules of this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,156],"source":"Gets the <xref:System.Type> of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"content":"The &lt;xref:System.Type&gt; object must be an object that can be cast as a <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[157,300],"source":" The <xref:System.Type> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}]},{"pos":[14447,14584],"content":"The type of the object associated with the access rules of this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The type of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"pos":[15145,15323],"content":"Gets a Boolean value that specifies whether the access rules associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object are in canonical order.","needQuote":true,"needEscape":true,"source":"Gets a Boolean value that specifies whether the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object are in canonical order."},{"pos":[15450,15629],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the access rules are in canonical order; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the access rules are in canonical order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16199,16395],"content":"Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is protected.","needQuote":true,"needEscape":true,"source":"Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is protected."},{"pos":[16522,16683],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the DACL is protected; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is protected; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17248,17425],"content":"Gets a Boolean value that specifies whether the audit rules associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object are in canonical order.","needQuote":true,"needEscape":true,"source":"Gets a Boolean value that specifies whether the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object are in canonical order."},{"pos":[17551,17729],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the audit rules are in canonical order; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the audit rules are in canonical order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18293,18482],"content":"Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is protected.","needQuote":true,"needEscape":true,"source":"Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is protected."},{"pos":[18608,18769],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the SACL is protected; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is protected; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19951,20078],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values."},{"pos":[20571,20727],"content":"The identity to which the audit rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity to which the audit rule applies.","pos":[0,45]},{"content":"It must be an object that can be cast as a <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[47,156],"source":"  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}]},{"pos":[20793,20943],"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[0,150],"nodes":[{"content":"The access mask of this rule.","pos":[0,29]},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[30,150]}]}]},{"pos":[21012,21123],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this rule is inherited from a parent container.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this rule is inherited from a parent container."},{"pos":[21229,21284],"content":"Specifies the inheritance properties of the audit rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the inheritance properties of the audit rule.","pos":[0,55]}]},{"pos":[21390,21594],"content":"Specifies whether inherited audit rules are automatically propagated. The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether inherited audit rules are automatically propagated.","pos":[0,69]},{"content":"The propagation flags are ignored if <ph id=\"ph1\">`inheritanceFlags`</ph> is set to <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[70,204],"source":" The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>."}]},{"pos":[21683,21738],"content":"Specifies the conditions for which the rule is audited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the conditions for which the rule is audited.","pos":[0,55]}]},{"pos":[21822,21919],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that this method creates.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates."},{"pos":[22457,22638],"content":"Gets or sets a Boolean value that specifies whether the audit rules associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object have been modified.","needQuote":true,"needEscape":true,"source":"Gets or sets a Boolean value that specifies whether the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified."},{"pos":[22768,23036],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the audit rules associated with this <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object have been modified; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23551,23843],"content":"Gets the <xref:System.Type> object associated with the audit rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. The <xref:System.Type> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Type&gt; object associated with the audit rules of this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,148],"source":"Gets the <xref:System.Type> object associated with the audit rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"content":"The &lt;xref:System.Type&gt; object must be an object that can be cast as a <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[149,292],"source":" The <xref:System.Type> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}]},{"pos":[23966,24102],"content":"The type of the object associated with the audit rules of this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The type of the object associated with the audit rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"pos":[24629,24688],"content":"Gets the primary group associated with the specified owner.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the primary group associated with the specified owner.","pos":[0,59]}]},{"pos":[24871,24916],"content":"The owner for which to get the primary group.","needQuote":true,"needEscape":true,"nodes":[{"content":"The owner for which to get the primary group.","pos":[0,45]}]},{"pos":[25004,25058],"content":"The primary group associated with the specified owner.","needQuote":true,"needEscape":true,"nodes":[{"content":"The primary group associated with the specified owner.","pos":[0,54]}]},{"pos":[25580,25639],"content":"Gets the owner associated with the specified primary group.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the owner associated with the specified primary group.","pos":[0,59]}]},{"pos":[25822,25867],"content":"The primary group for which to get the owner.","needQuote":true,"needEscape":true,"nodes":[{"content":"The primary group for which to get the owner.","pos":[0,45]}]},{"pos":[25955,26001],"content":"The owner associated with the specified group.","needQuote":true,"needEscape":true,"nodes":[{"content":"The owner associated with the specified group.","pos":[0,46]}]},{"pos":[26185,26273],"content":"<ph id=\"ph1\">&lt;code&gt;targetType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[26368,26472],"content":"<ph id=\"ph1\">&lt;code&gt;targetType&lt;/code&gt;</ph> is not an <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> type.","needQuote":true,"needEscape":true,"source":"<code>targetType</code> is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> type."},{"pos":[26623,26679],"content":"Some or all identity references could not be translated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Some or all identity references could not be translated.","pos":[0,56]}]},{"pos":[26770,26802],"content":"A Win32 error code was returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Win32 error code was returned.","pos":[0,32]}]},{"pos":[27317,27483],"content":"Returns an array of byte values that represents the security descriptor information for this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns an array of byte values that represents the security descriptor information for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"pos":[27495,27632],"content":"This method returns the security descriptor information currently in memory. It does not retrieve information saved in permanent storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method returns the security descriptor information currently in memory. It does not retrieve information saved in permanent storage.","pos":[0,137],"nodes":[{"content":"This method returns the security descriptor information currently in memory.","pos":[0,76]},{"content":"It does not retrieve information saved in permanent storage.","pos":[77,137]}]}]},{"pos":[27782,28127],"content":"An array of byte values that represents the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. This method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no security information in this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of byte values that represents the security descriptor for this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,146],"source":"An array of byte values that represents the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"content":"This method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is no security information in this <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","pos":[147,345],"source":" This method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no security information in this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."}]},{"pos":[28908,29129],"content":"Returns the Security Descriptor Definition Language (SDDL) representation of the specified sections of the security descriptor associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns the Security Descriptor Definition Language (SDDL) representation of the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"pos":[29393,29502],"content":"Specifies which sections (access rules, audit rules, primary group, owner) of the security descriptor to get.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies which sections (access rules, audit rules, primary group, owner) of the security descriptor to get.","pos":[0,109]}]},{"pos":[29560,29731],"content":"The SDDL representation of the specified sections of the security descriptor associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The SDDL representation of the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"pos":[30257,30374],"content":"Gets or sets a Boolean value that specifies whether the group associated with the securable object has been modified.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that specifies whether the group associated with the securable object has been modified.","pos":[0,117]}]},{"pos":[30499,30703],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the group associated with the securable object has been modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the group associated with the securable object has been modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[31203,31347],"content":"Gets a Boolean value that specifies whether this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is a container object.","needQuote":true,"needEscape":true,"source":"Gets a Boolean value that specifies whether this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a container object."},{"pos":[31465,31703],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is a container object; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a container object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[32166,32310],"content":"Gets a Boolean value that specifies whether this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is a directory object.","needQuote":true,"needEscape":true,"source":"Gets a Boolean value that specifies whether this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a directory object."},{"pos":[32421,32659],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is a directory object; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a directory object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[33224,33468],"content":"Returns a Boolean value that specifies whether the security descriptor associated with this  <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object can be converted to the Security Descriptor Definition Language (SDDL) format.","needQuote":true,"needEscape":true,"source":"Returns a Boolean value that specifies whether the security descriptor associated with this  <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object can be converted to the Security Descriptor Definition Language (SDDL) format."},{"pos":[33618,33954],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the security descriptor associated with this  <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object can be converted to the Security Descriptor Definition Language (SDDL) format; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the security descriptor associated with this  <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object can be converted to the Security Descriptor Definition Language (SDDL) format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[34835,35012],"content":"Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"pos":[35024,35229],"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","needQuote":true,"needEscape":true,"nodes":[{"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","pos":[0,205]}]},{"pos":[35554,35592],"content":"The modification to apply to the DACL.","needQuote":true,"needEscape":true,"nodes":[{"content":"The modification to apply to the DACL.","pos":[0,38]}]},{"pos":[35680,35706],"content":"The access rule to modify.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to modify.","pos":[0,26]}]},{"pos":[35772,35945],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the DACL is successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[36004,36177],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the DACL is successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[37065,37242],"content":"Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"pos":[37254,37459],"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","needQuote":true,"needEscape":true,"nodes":[{"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","pos":[0,205]}]},{"pos":[37784,37822],"content":"The modification to apply to the DACL.","needQuote":true,"needEscape":true,"nodes":[{"content":"The modification to apply to the DACL.","pos":[0,38]}]},{"pos":[37910,37936],"content":"The access rule to modify.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to modify.","pos":[0,26]}]},{"pos":[38002,38175],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the DACL is successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[38234,38407],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the DACL is successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[39269,39439],"content":"Applies the specified modification to the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"pos":[39762,39800],"content":"The modification to apply to the SACL.","needQuote":true,"needEscape":true,"nodes":[{"content":"The modification to apply to the SACL.","pos":[0,38]}]},{"pos":[39887,39912],"content":"The audit rule to modify.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to modify.","pos":[0,25]}]},{"pos":[39978,40151],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the SACL is successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[40210,40383],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the SACL is successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[41260,41430],"content":"Applies the specified modification to the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"pos":[41753,41791],"content":"The modification to apply to the SACL.","needQuote":true,"needEscape":true,"nodes":[{"content":"The modification to apply to the SACL.","pos":[0,38]}]},{"pos":[41878,41903],"content":"The audit rule to modify.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to modify.","pos":[0,25]}]},{"pos":[41969,42142],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the SACL is successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[42201,42374],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the SACL is successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[42886,42990],"content":"Gets or sets a Boolean value that specifies whether the owner of the securable object has been modified.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that specifies whether the owner of the securable object has been modified.","pos":[0,104]}]},{"pos":[43115,43306],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the owner of the securable object has been modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the owner of the securable object has been modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[44076,44418],"content":"Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical. For more information, see Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves the specified sections of the security descriptor associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to permanent storage.","pos":[0,171],"source":"Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage."},{"content":"We recommend that the values of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">includeSections</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameters passed to the constructor and persist methods be identical.","pos":[172,307],"source":" We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical."},{"content":"For more information, see Remarks.","pos":[308,342]}]},{"pos":[44430,45422],"content":"When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.","needQuote":true,"needEscape":true,"nodes":[{"content":"When persisting a &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; object, if the value of the <ph id=\"ph1\">`includeSections`</ph> parameter passed to the &lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt; method is not identical to the value of the <ph id=\"ph2\">`includeSections`</ph> parameter passed to the constructor used to create that &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; object, sections of the persisted &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; object can contain unpredictable values.","pos":[0,499],"source":"When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values."},{"content":"For example, if a constructor is called with an <ph id=\"ph1\">`includeSections`</ph> value of &lt;xref:System.Security.AccessControl.AccessControlSections&gt;, and later a &lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt; method is called on that object with an <ph id=\"ph2\">`includeSections`</ph> value of &lt;xref:System.Security.AccessControl.AccessControlSections&gt;, the resulting persisted &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; object will contain unpredictable values for its audit rules, group, and owner.","pos":[500,992],"source":" For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner."}]},{"pos":[45704,45758],"content":"The handle used to retrieve the persisted information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The handle used to retrieve the persisted information.","pos":[0,54]}]},{"pos":[45868,46108],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AccessControlSections\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save."},{"pos":[46804,47146],"content":"Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical. For more information, see Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves the specified sections of the security descriptor associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to permanent storage.","pos":[0,171],"source":"Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage."},{"content":"We recommend that the values of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">includeSections</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameters passed to the constructor and persist methods be identical.","pos":[172,307],"source":" We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical."},{"content":"For more information, see Remarks.","pos":[308,342]}]},{"pos":[47158,48150],"content":"When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.","needQuote":true,"needEscape":true,"nodes":[{"content":"When persisting a &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; object, if the value of the <ph id=\"ph1\">`includeSections`</ph> parameter passed to the &lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt; method is not identical to the value of the <ph id=\"ph2\">`includeSections`</ph> parameter passed to the constructor used to create that &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; object, sections of the persisted &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; object can contain unpredictable values.","pos":[0,499],"source":"When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values."},{"content":"For example, if a constructor is called with an <ph id=\"ph1\">`includeSections`</ph> value of &lt;xref:System.Security.AccessControl.AccessControlSections&gt;, and later a &lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt; method is called on that object with an <ph id=\"ph2\">`includeSections`</ph> value of &lt;xref:System.Security.AccessControl.AccessControlSections&gt;, the resulting persisted &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; object will contain unpredictable values for its audit rules, group, and owner.","pos":[500,992],"source":" For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner."}]},{"pos":[48365,48417],"content":"The name used to retrieve the persisted information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name used to retrieve the persisted information.","pos":[0,52]}]},{"pos":[48527,48767],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AccessControlSections\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save."},{"pos":[49517,49859],"content":"Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical. For more information, see Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves the specified sections of the security descriptor associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to permanent storage.","pos":[0,171],"source":"Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage."},{"content":"We recommend that the values of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">includeSections</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameters passed to the constructor and persist methods be identical.","pos":[172,307],"source":" We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical."},{"content":"For more information, see Remarks.","pos":[308,342]}]},{"pos":[49871,50753],"content":"When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the Persist method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, and later a Persist method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.","needQuote":true,"needEscape":true,"nodes":[{"content":"When persisting a &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; object, if the value of the <ph id=\"ph1\">`includeSections`</ph> parameter passed to the Persist method is not identical to the value of the <ph id=\"ph2\">`includeSections`</ph> parameter passed to the constructor used to create that &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; object, sections of the persisted &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; object can contain unpredictable values.","pos":[0,444],"source":"When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the Persist method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values."},{"content":"For example, if a constructor is called with an <ph id=\"ph1\">`includeSections`</ph> value of &lt;xref:System.Security.AccessControl.AccessControlSections&gt;, and later a Persist method is called on that object with an <ph id=\"ph2\">`includeSections`</ph> value of &lt;xref:System.Security.AccessControl.AccessControlSections&gt;, the resulting persisted &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; object will contain unpredictable values for its audit rules, group, and owner.","pos":[445,882],"source":" For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, and later a Persist method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner."}]},{"pos":[51020,51160],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to enable the privilege that allows the caller to take ownership of the object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to enable the privilege that allows the caller to take ownership of the object."},{"pos":[51221,51273],"content":"The name used to retrieve the persisted information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name used to retrieve the persisted information.","pos":[0,52]}]},{"pos":[51383,51623],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AccessControlSections\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save."},{"pos":[52287,52407],"content":"Removes all access rules associated with the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Removes all access rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>."},{"pos":[52634,52740],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to remove all access rules.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all access rules."},{"pos":[52940,52984],"content":"All access rules are not in canonical order.","needQuote":true,"needEscape":true,"nodes":[{"content":"All access rules are not in canonical order.","pos":[0,44]}]},{"pos":[53560,53679],"content":"Removes all audit rules associated with the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Removes all audit rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>."},{"pos":[53905,54010],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to remove all audit rules.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all audit rules."},{"pos":[54209,54252],"content":"All audit rules are not in canonical order.","needQuote":true,"needEscape":true,"nodes":[{"content":"All audit rules are not in canonical order.","pos":[0,43]}]},{"pos":[54652,54752],"content":"Locks this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for read access.","needQuote":true,"needEscape":true,"source":"Locks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for read access."},{"pos":[55316,55418],"content":"Unlocks this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for read access.","needQuote":true,"needEscape":true,"source":"Unlocks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for read access."},{"pos":[56158,56380],"content":"Sets or removes protection of the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. Protected access rules cannot be modified by parent objects through inheritance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets or removes protection of the access rules associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,141],"source":"Sets or removes protection of the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"content":"Protected access rules cannot be modified by parent objects through inheritance.","pos":[142,222]}]},{"pos":[56570,56855],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to protect the access rules associated with this <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object from inheritance; <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> to allow inheritance.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to protect the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from inheritance; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to allow inheritance."},{"pos":[56932,57235],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to preserve inherited access rules; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to remove inherited access rules. This parameter is ignored if `isProtected` is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to preserve inherited access rules; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to remove inherited access rules.","pos":[0,193],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to preserve inherited access rules; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to remove inherited access rules."},{"content":"This parameter is ignored if <ph id=\"ph1\">`isProtected`</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[194,303],"source":" This parameter is ignored if `isProtected` is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[57442,57551],"content":"This method attempts to remove inherited rules from a non-canonical Discretionary Access Control List (DACL).","needQuote":true,"needEscape":true,"nodes":[{"content":"This method attempts to remove inherited rules from a non-canonical Discretionary Access Control List (DACL).","pos":[0,109]}]},{"pos":[58128,58348],"content":"Sets or removes protection of the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. Protected audit rules cannot be modified by parent objects through inheritance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets or removes protection of the audit rules associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,140],"source":"Sets or removes protection of the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"content":"Protected audit rules cannot be modified by parent objects through inheritance.","pos":[141,220]}]},{"pos":[58537,58821],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to protect the audit rules associated with this <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object from inheritance; <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> to allow inheritance.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to protect the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from inheritance; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to allow inheritance."},{"pos":[58898,59199],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to preserve inherited audit rules; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to remove inherited audit rules. This parameter is ignored if `isProtected` is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to preserve inherited audit rules; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to remove inherited audit rules.","pos":[0,191],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to preserve inherited audit rules; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to remove inherited audit rules."},{"content":"This parameter is ignored if <ph id=\"ph1\">`isProtected`</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[192,301],"source":" This parameter is ignored if `isProtected` is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[59405,59507],"content":"This method attempts to remove inherited rules from a non-canonical System Access Control List (SACL).","needQuote":true,"needEscape":true,"nodes":[{"content":"This method attempts to remove inherited rules from a non-canonical System Access Control List (SACL).","pos":[0,102]}]},{"pos":[60048,60193],"content":"Sets the primary group for the security descriptor associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Sets the primary group for the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"pos":[60404,60429],"content":"The primary group to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The primary group to set.","pos":[0,25]}]},{"pos":[61054,61191],"content":"Sets the owner for the security descriptor associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Sets the owner for the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"pos":[61402,61419],"content":"The owner to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The owner to set.","pos":[0,17]}]},{"pos":[62066,62217],"content":"Sets the security descriptor for this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from the specified array of byte values.","needQuote":true,"needEscape":true,"source":"Sets the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified array of byte values."},{"pos":[62230,62841],"content":"If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.       This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the security descriptor represented by the binary data contains <ph id=\"ph1\">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.","pos":[0,221],"source":"If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL."},{"content":"If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.","pos":[222,388]},{"content":"This can result in an application unintentionally allowing access to principals.","pos":[395,475]},{"content":"Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","pos":[476,609]}]},{"pos":[63013,63074],"content":"The array of bytes from which to set the security descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The array of bytes from which to set the security descriptor.","pos":[0,61]}]},{"pos":[63914,64091],"content":"Sets the specified sections of the security descriptor for this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from the specified array of byte values.","needQuote":true,"needEscape":true,"source":"Sets the specified sections of the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified array of byte values."},{"pos":[64104,64715],"content":"If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.       This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the security descriptor represented by the binary data contains <ph id=\"ph1\">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.","pos":[0,221],"source":"If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL."},{"content":"If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.","pos":[222,388]},{"content":"This can result in an application unintentionally allowing access to principals.","pos":[395,475]},{"content":"Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","pos":[476,609]}]},{"pos":[64956,65017],"content":"The array of bytes from which to set the security descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The array of bytes from which to set the security descriptor.","pos":[0,61]}]},{"pos":[65127,65224],"content":"The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.","pos":[0,97]}]},{"pos":[65884,66068],"content":"Sets the security descriptor for this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from the specified Security Descriptor Definition Language (SDDL) string.","needQuote":true,"needEscape":true,"source":"Sets the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified Security Descriptor Definition Language (SDDL) string."},{"pos":[66081,66692],"content":"If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.       This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the security descriptor represented by the SDDL string contains <ph id=\"ph1\">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.","pos":[0,221],"source":"If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL."},{"content":"If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.","pos":[222,388]},{"content":"This can result in an application unintentionally allowing access to principals.","pos":[395,475]},{"content":"Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","pos":[476,609]}]},{"pos":[66858,66916],"content":"The SDDL string from which to set the security descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SDDL string from which to set the security descriptor.","pos":[0,58]}]},{"pos":[67744,67954],"content":"Sets the specified sections of the security descriptor for this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from the specified Security Descriptor Definition Language (SDDL) string.","needQuote":true,"needEscape":true,"source":"Sets the specified sections of the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified Security Descriptor Definition Language (SDDL) string."},{"pos":[67967,68578],"content":"If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.       This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the security descriptor represented by the SDDL string contains <ph id=\"ph1\">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.","pos":[0,221],"source":"If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL."},{"content":"If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.","pos":[222,388]},{"content":"This can result in an application unintentionally allowing access to principals.","pos":[395,475]},{"content":"Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","pos":[476,609]}]},{"pos":[68813,68871],"content":"The SDDL string from which to set the security descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SDDL string from which to set the security descriptor.","pos":[0,58]}]},{"pos":[68981,69078],"content":"The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.","pos":[0,97]}]},{"pos":[69588,69689],"content":"Locks this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for write access.","needQuote":true,"needEscape":true,"source":"Locks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for write access."},{"pos":[70260,70363],"content":"Unlocks this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for write access.","needQuote":true,"needEscape":true,"source":"Unlocks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for write access."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.ObjectSecurity\n  id: ObjectSecurity\n  children:\n  - System.Security.AccessControl.ObjectSecurity.#ctor\n  - System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  - System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.AccessRightType\n  - System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  langs:\n  - csharp\n  name: ObjectSecurity\n  nameWithType: ObjectSecurity\n  fullName: System.Security.AccessControl.ObjectSecurity\n  type: Class\n  summary: Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs). This class is the abstract base class for the <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> and <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> classes.\n  syntax:\n    content: public abstract class ObjectSecurity\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.#ctor\n  id: '#ctor'\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ObjectSecurity()\n  nameWithType: ObjectSecurity.ObjectSecurity()\n  fullName: System.Security.AccessControl.ObjectSecurity.ObjectSecurity()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> class.\n  syntax:\n    content: protected ObjectSecurity ();\n    parameters: []\n  overload: System.Security.AccessControl.ObjectSecurity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  id: '#ctor(System.Security.AccessControl.CommonSecurityDescriptor)'\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ObjectSecurity(CommonSecurityDescriptor)\n  nameWithType: ObjectSecurity.ObjectSecurity(CommonSecurityDescriptor)\n  fullName: System.Security.AccessControl.ObjectSecurity.ObjectSecurity(CommonSecurityDescriptor)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> class.\n  syntax:\n    content: protected ObjectSecurity (System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);\n    parameters:\n    - id: securityDescriptor\n      type: System.Security.AccessControl.CommonSecurityDescriptor\n      description: The <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref>of the new <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> instance.\n  overload: System.Security.AccessControl.ObjectSecurity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)\n  id: '#ctor(System.Boolean,System.Boolean)'\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ObjectSecurity(Boolean,Boolean)\n  nameWithType: ObjectSecurity.ObjectSecurity(Boolean,Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ObjectSecurity(Boolean,Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> class.\n  syntax:\n    content: protected ObjectSecurity (bool isContainer, bool isDS);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a container object.\n    - id: isDS\n      type: System.Boolean\n      description: True if the new <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a directory object.\n  overload: System.Security.AccessControl.ObjectSecurity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  id: AccessRightType\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AccessRightType\n  nameWithType: ObjectSecurity.AccessRightType\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the <xref:System.Type> of the securable object associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  syntax:\n    content: public abstract Type AccessRightType { get; }\n    return:\n      type: System.Type\n      description: The type of the securable object associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  overload: System.Security.AccessControl.ObjectSecurity.AccessRightType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  nameWithType: ObjectSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values.\n  syntax:\n    content: public abstract System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: The identity to which the access rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.\n    - id: isInherited\n      type: System.Boolean\n      description: true if this rule is inherited from a parent container.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Specifies the inheritance properties of the access rule.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Specifies the valid access control type.\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates.\n  overload: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  id: AccessRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AccessRulesModified\n  nameWithType: ObjectSecurity.AccessRulesModified\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets a Boolean value that specifies whether the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified.\n  syntax:\n    content: protected bool AccessRulesModified { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.ObjectSecurity.AccessRulesModified*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  id: AccessRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AccessRuleType\n  nameWithType: ObjectSecurity.AccessRuleType\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the <xref:System.Type> of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. The <xref:System.Type> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  syntax:\n    content: public abstract Type AccessRuleType { get; }\n    return:\n      type: System.Type\n      description: The type of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  overload: System.Security.AccessControl.ObjectSecurity.AccessRuleType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  id: AreAccessRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AreAccessRulesCanonical\n  nameWithType: ObjectSecurity.AreAccessRulesCanonical\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a Boolean value that specifies whether the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object are in canonical order.\n  syntax:\n    content: public bool AreAccessRulesCanonical { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the access rules are in canonical order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  id: AreAccessRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AreAccessRulesProtected\n  nameWithType: ObjectSecurity.AreAccessRulesProtected\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is protected.\n  syntax:\n    content: public bool AreAccessRulesProtected { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is protected; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  id: AreAuditRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AreAuditRulesCanonical\n  nameWithType: ObjectSecurity.AreAuditRulesCanonical\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a Boolean value that specifies whether the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object are in canonical order.\n  syntax:\n    content: public bool AreAuditRulesCanonical { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the audit rules are in canonical order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  id: AreAuditRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AreAuditRulesProtected\n  nameWithType: ObjectSecurity.AreAuditRulesProtected\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is protected.\n  syntax:\n    content: public bool AreAuditRulesProtected { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is protected; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: ObjectSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values.\n  syntax:\n    content: public abstract System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: The identity to which the audit rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.\n    - id: isInherited\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this rule is inherited from a parent container.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Specifies the inheritance properties of the audit rule.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Specifies whether inherited audit rules are automatically propagated. The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: Specifies the conditions for which the rule is audited.\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates.\n  overload: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  id: AuditRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AuditRulesModified\n  nameWithType: ObjectSecurity.AuditRulesModified\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets a Boolean value that specifies whether the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified.\n  syntax:\n    content: protected bool AuditRulesModified { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.ObjectSecurity.AuditRulesModified*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  id: AuditRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AuditRuleType\n  nameWithType: ObjectSecurity.AuditRuleType\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the <xref:System.Type> object associated with the audit rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. The <xref:System.Type> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  syntax:\n    content: public abstract Type AuditRuleType { get; }\n    return:\n      type: System.Type\n      description: The type of the object associated with the audit rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  overload: System.Security.AccessControl.ObjectSecurity.AuditRuleType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  id: GetGroup(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: GetGroup(Type)\n  nameWithType: ObjectSecurity.GetGroup(Type)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetGroup(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the primary group associated with the specified owner.\n  syntax:\n    content: public System.Security.Principal.IdentityReference GetGroup (Type targetType);\n    parameters:\n    - id: targetType\n      type: System.Type\n      description: The owner for which to get the primary group.\n    return:\n      type: System.Security.Principal.IdentityReference\n      description: The primary group associated with the specified owner.\n  overload: System.Security.AccessControl.ObjectSecurity.GetGroup*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  id: GetOwner(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: GetOwner(Type)\n  nameWithType: ObjectSecurity.GetOwner(Type)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetOwner(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the owner associated with the specified primary group.\n  syntax:\n    content: public System.Security.Principal.IdentityReference GetOwner (Type targetType);\n    parameters:\n    - id: targetType\n      type: System.Type\n      description: The primary group for which to get the owner.\n    return:\n      type: System.Security.Principal.IdentityReference\n      description: The owner associated with the specified group.\n  overload: System.Security.AccessControl.ObjectSecurity.GetOwner*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetType</code> is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> type.\n  - type: System.Security.Principal.IdentityNotMappedException\n    commentId: T:System.Security.Principal.IdentityNotMappedException\n    description: Some or all identity references could not be translated.\n  - type: System.SystemException\n    commentId: T:System.SystemException\n    description: A Win32 error code was returned.\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  id: GetSecurityDescriptorBinaryForm\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: GetSecurityDescriptorBinaryForm()\n  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Returns an array of byte values that represents the security descriptor information for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  remarks: This method returns the security descriptor information currently in memory. It does not retrieve information saved in permanent storage.\n  syntax:\n    content: public byte[] GetSecurityDescriptorBinaryForm ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: An array of byte values that represents the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. This method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no security information in this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  overload: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  id: GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: GetSecurityDescriptorSddlForm(AccessControlSections)\n  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Returns the Security Descriptor Definition Language (SDDL) representation of the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  syntax:\n    content: public string GetSecurityDescriptorSddlForm (System.Security.AccessControl.AccessControlSections includeSections);\n    parameters:\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: Specifies which sections (access rules, audit rules, primary group, owner) of the security descriptor to get.\n    return:\n      type: System.String\n      description: The SDDL representation of the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  overload: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.GroupModified\n  id: GroupModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: GroupModified\n  nameWithType: ObjectSecurity.GroupModified\n  fullName: System.Security.AccessControl.ObjectSecurity.GroupModified\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets a Boolean value that specifies whether the group associated with the securable object has been modified.\n  syntax:\n    content: protected bool GroupModified { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the group associated with the securable object has been modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.ObjectSecurity.GroupModified*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.IsContainer\n  id: IsContainer\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: IsContainer\n  nameWithType: ObjectSecurity.IsContainer\n  fullName: System.Security.AccessControl.ObjectSecurity.IsContainer\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a Boolean value that specifies whether this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a container object.\n  syntax:\n    content: protected bool IsContainer { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a container object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.ObjectSecurity.IsContainer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.IsDS\n  id: IsDS\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: IsDS\n  nameWithType: ObjectSecurity.IsDS\n  fullName: System.Security.AccessControl.ObjectSecurity.IsDS\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a Boolean value that specifies whether this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a directory object.\n  syntax:\n    content: protected bool IsDS { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a directory object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.ObjectSecurity.IsDS*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  id: IsSddlConversionSupported\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: IsSddlConversionSupported()\n  nameWithType: ObjectSecurity.IsSddlConversionSupported()\n  fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Returns a Boolean value that specifies whether the security descriptor associated with this  <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object can be converted to the Security Descriptor Definition Language (SDDL) format.\n  syntax:\n    content: public static bool IsSddlConversionSupported ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the security descriptor associated with this  <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object can be converted to the Security Descriptor Definition Language (SDDL) format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  id: ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)\n  nameWithType: ObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  remarks: To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.\n  syntax:\n    content: protected abstract bool ModifyAccess (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The modification to apply to the DACL.\n    - id: rule\n      type: System.Security.AccessControl.AccessRule\n      description: The access rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.ObjectSecurity.ModifyAccess*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  id: ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ModifyAccessRule(AccessControlModification,AccessRule,Boolean)\n  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  remarks: To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.\n  syntax:\n    content: public virtual bool ModifyAccessRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The modification to apply to the DACL.\n    - id: rule\n      type: System.Security.AccessControl.AccessRule\n      description: The access rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  id: ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)\n  nameWithType: ObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  syntax:\n    content: protected abstract bool ModifyAudit (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The modification to apply to the SACL.\n    - id: rule\n      type: System.Security.AccessControl.AuditRule\n      description: The audit rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.ObjectSecurity.ModifyAudit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  id: ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ModifyAuditRule(AccessControlModification,AuditRule,Boolean)\n  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  syntax:\n    content: public virtual bool ModifyAuditRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The modification to apply to the SACL.\n    - id: rule\n      type: System.Security.AccessControl.AuditRule\n      description: The audit rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  id: OwnerModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: OwnerModified\n  nameWithType: ObjectSecurity.OwnerModified\n  fullName: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets a Boolean value that specifies whether the owner of the securable object has been modified.\n  syntax:\n    content: protected bool OwnerModified { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the owner of the securable object has been modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.ObjectSecurity.OwnerModified*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  id: Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: Persist(SafeHandle,AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(SafeHandle,AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.Persist(SafeHandle,AccessControlSections)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical. For more information, see Remarks.\n  remarks: When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.\n  syntax:\n    content: protected virtual void Persist (System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections);\n    parameters:\n    - id: handle\n      type: System.Runtime.InteropServices.SafeHandle\n      description: The handle used to retrieve the persisted information.\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.\n  overload: System.Security.AccessControl.ObjectSecurity.Persist*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  id: Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: Persist(String,AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(String,AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.Persist(String,AccessControlSections)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical. For more information, see Remarks.\n  remarks: When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.\n  syntax:\n    content: protected virtual void Persist (string name, System.Security.AccessControl.AccessControlSections includeSections);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name used to retrieve the persisted information.\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.\n  overload: System.Security.AccessControl.ObjectSecurity.Persist*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  id: Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: Persist(Boolean,String,AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(Boolean,String,AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.Persist(Boolean,String,AccessControlSections)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical. For more information, see Remarks.\n  remarks: When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the Persist method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, and later a Persist method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.\n  syntax:\n    content: protected virtual void Persist (bool enableOwnershipPrivilege, string name, System.Security.AccessControl.AccessControlSections includeSections);\n    parameters:\n    - id: enableOwnershipPrivilege\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to enable the privilege that allows the caller to take ownership of the object.\n    - id: name\n      type: System.String\n      description: The name used to retrieve the persisted information.\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.\n  overload: System.Security.AccessControl.ObjectSecurity.Persist*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  id: PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: PurgeAccessRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(IdentityReference)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>.\n  syntax:\n    content: public virtual void PurgeAccessRules (System.Security.Principal.IdentityReference identity);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all access rules.\n  overload: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: All access rules are not in canonical order.\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  id: PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: PurgeAuditRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(IdentityReference)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>.\n  syntax:\n    content: public virtual void PurgeAuditRules (System.Security.Principal.IdentityReference identity);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all audit rules.\n  overload: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: All audit rules are not in canonical order.\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n  id: ReadLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ReadLock()\n  nameWithType: ObjectSecurity.ReadLock()\n  fullName: System.Security.AccessControl.ObjectSecurity.ReadLock()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Locks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for read access.\n  syntax:\n    content: protected void ReadLock ();\n    parameters: []\n  overload: System.Security.AccessControl.ObjectSecurity.ReadLock*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  id: ReadUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ReadUnlock()\n  nameWithType: ObjectSecurity.ReadUnlock()\n  fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Unlocks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for read access.\n  syntax:\n    content: protected void ReadUnlock ();\n    parameters: []\n  overload: System.Security.AccessControl.ObjectSecurity.ReadUnlock*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  id: SetAccessRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: SetAccessRuleProtection(Boolean,Boolean)\n  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean,Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(Boolean,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets or removes protection of the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. Protected access rules cannot be modified by parent objects through inheritance.\n  syntax:\n    content: public void SetAccessRuleProtection (bool isProtected, bool preserveInheritance);\n    parameters:\n    - id: isProtected\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to protect the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from inheritance; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to allow inheritance.\n    - id: preserveInheritance\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to preserve inherited access rules; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to remove inherited access rules. This parameter is ignored if `isProtected` is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method attempts to remove inherited rules from a non-canonical Discretionary Access Control List (DACL).\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  id: SetAuditRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: SetAuditRuleProtection(Boolean,Boolean)\n  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean,Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(Boolean,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets or removes protection of the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. Protected audit rules cannot be modified by parent objects through inheritance.\n  syntax:\n    content: public void SetAuditRuleProtection (bool isProtected, bool preserveInheritance);\n    parameters:\n    - id: isProtected\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to protect the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from inheritance; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to allow inheritance.\n    - id: preserveInheritance\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to preserve inherited audit rules; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to remove inherited audit rules. This parameter is ignored if `isProtected` is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method attempts to remove inherited rules from a non-canonical System Access Control List (SACL).\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  id: SetGroup(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: SetGroup(IdentityReference)\n  nameWithType: ObjectSecurity.SetGroup(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetGroup(IdentityReference)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the primary group for the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  syntax:\n    content: public void SetGroup (System.Security.Principal.IdentityReference identity);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: The primary group to set.\n  overload: System.Security.AccessControl.ObjectSecurity.SetGroup*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  id: SetOwner(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: SetOwner(IdentityReference)\n  nameWithType: ObjectSecurity.SetOwner(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetOwner(IdentityReference)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the owner for the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  syntax:\n    content: public void SetOwner (System.Security.Principal.IdentityReference identity);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: The owner to set.\n  overload: System.Security.AccessControl.ObjectSecurity.SetOwner*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  id: SetSecurityDescriptorBinaryForm(System.Byte[])\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: SetSecurityDescriptorBinaryForm(Byte[])\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified array of byte values.\n  remarks: \"If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \\n  \\n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.\"\n  syntax:\n    content: public void SetSecurityDescriptorBinaryForm (byte[] binaryForm);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: The array of bytes from which to set the security descriptor.\n  overload: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  id: SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: SetSecurityDescriptorBinaryForm(Byte[],AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[],AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[],AccessControlSections)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the specified sections of the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified array of byte values.\n  remarks: \"If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \\n  \\n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.\"\n  syntax:\n    content: public void SetSecurityDescriptorBinaryForm (byte[] binaryForm, System.Security.AccessControl.AccessControlSections includeSections);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: The array of bytes from which to set the security descriptor.\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.\n  overload: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  id: SetSecurityDescriptorSddlForm(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: SetSecurityDescriptorSddlForm(String)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified Security Descriptor Definition Language (SDDL) string.\n  remarks: \"If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \\n  \\n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.\"\n  syntax:\n    content: public void SetSecurityDescriptorSddlForm (string sddlForm);\n    parameters:\n    - id: sddlForm\n      type: System.String\n      description: The SDDL string from which to set the security descriptor.\n  overload: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  id: SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: SetSecurityDescriptorSddlForm(String,AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String,AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(String,AccessControlSections)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the specified sections of the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified Security Descriptor Definition Language (SDDL) string.\n  remarks: \"If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \\n  \\n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.\"\n  syntax:\n    content: public void SetSecurityDescriptorSddlForm (string sddlForm, System.Security.AccessControl.AccessControlSections includeSections);\n    parameters:\n    - id: sddlForm\n      type: System.String\n      description: The SDDL string from which to set the security descriptor.\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.\n  overload: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n  id: WriteLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: WriteLock()\n  nameWithType: ObjectSecurity.WriteLock()\n  fullName: System.Security.AccessControl.ObjectSecurity.WriteLock()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Locks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for write access.\n  syntax:\n    content: protected void WriteLock ();\n    parameters: []\n  overload: System.Security.AccessControl.ObjectSecurity.WriteLock*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  id: WriteUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: WriteUnlock()\n  nameWithType: ObjectSecurity.WriteUnlock()\n  fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Unlocks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for write access.\n  syntax:\n    content: protected void WriteUnlock ();\n    parameters: []\n  overload: System.Security.AccessControl.ObjectSecurity.WriteUnlock*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.Principal.IdentityNotMappedException\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityNotMappedException\n  nameWithType: IdentityNotMappedException\n  fullName: System.Security.Principal.IdentityNotMappedException\n- uid: System.SystemException\n  parent: System\n  isExternal: false\n  name: SystemException\n  nameWithType: SystemException\n  fullName: System.SystemException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Security.AccessControl.ObjectSecurity.#ctor\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ObjectSecurity()\n  nameWithType: ObjectSecurity.ObjectSecurity()\n  fullName: System.Security.AccessControl.ObjectSecurity.ObjectSecurity()\n- uid: System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ObjectSecurity(CommonSecurityDescriptor)\n  nameWithType: ObjectSecurity.ObjectSecurity(CommonSecurityDescriptor)\n  fullName: System.Security.AccessControl.ObjectSecurity.ObjectSecurity(CommonSecurityDescriptor)\n- uid: System.Security.AccessControl.CommonSecurityDescriptor\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CommonSecurityDescriptor\n  nameWithType: CommonSecurityDescriptor\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor\n- uid: System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ObjectSecurity(Boolean,Boolean)\n  nameWithType: ObjectSecurity.ObjectSecurity(Boolean,Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ObjectSecurity(Boolean,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: ObjectSecurity.AccessRightType\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRightType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  nameWithType: ObjectSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  nameWithType: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRulesModified\n  nameWithType: ObjectSecurity.AccessRulesModified\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: ObjectSecurity.AccessRuleType\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesCanonical\n  nameWithType: ObjectSecurity.AreAccessRulesCanonical\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesProtected\n  nameWithType: ObjectSecurity.AreAccessRulesProtected\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesCanonical\n  nameWithType: ObjectSecurity.AreAuditRulesCanonical\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesProtected\n  nameWithType: ObjectSecurity.AreAuditRulesProtected\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: ObjectSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  nameWithType: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRulesModified\n  nameWithType: ObjectSecurity.AuditRulesModified\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: ObjectSecurity.AuditRuleType\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetGroup(Type)\n  nameWithType: ObjectSecurity.GetGroup(Type)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetGroup(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetOwner(Type)\n  nameWithType: ObjectSecurity.GetOwner(Type)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetOwner(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorBinaryForm()\n  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm()\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorSddlForm(AccessControlSections)\n  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.AccessControl.AccessControlSections\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlSections\n  nameWithType: AccessControlSections\n  fullName: System.Security.AccessControl.AccessControlSections\n- uid: System.Security.AccessControl.ObjectSecurity.GroupModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GroupModified\n  nameWithType: ObjectSecurity.GroupModified\n  fullName: System.Security.AccessControl.ObjectSecurity.GroupModified\n- uid: System.Security.AccessControl.ObjectSecurity.IsContainer\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsContainer\n  nameWithType: ObjectSecurity.IsContainer\n  fullName: System.Security.AccessControl.ObjectSecurity.IsContainer\n- uid: System.Security.AccessControl.ObjectSecurity.IsDS\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsDS\n  nameWithType: ObjectSecurity.IsDS\n  fullName: System.Security.AccessControl.ObjectSecurity.IsDS\n- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsSddlConversionSupported()\n  nameWithType: ObjectSecurity.IsSddlConversionSupported()\n  fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported()\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)\n  nameWithType: ObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)\n- uid: System.Security.AccessControl.AccessControlModification\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlModification\n  nameWithType: AccessControlModification\n  fullName: System.Security.AccessControl.AccessControlModification\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAccessRule(AccessControlModification,AccessRule,Boolean)\n  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)\n  nameWithType: ObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAuditRule(AccessControlModification,AuditRule,Boolean)\n  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: OwnerModified\n  nameWithType: ObjectSecurity.OwnerModified\n  fullName: System.Security.AccessControl.ObjectSecurity.OwnerModified\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist(SafeHandle,AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(SafeHandle,AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.Persist(SafeHandle,AccessControlSections)\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: SafeHandle\n  nameWithType: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist(String,AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(String,AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.Persist(String,AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist(Boolean,String,AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(Boolean,String,AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.Persist(Boolean,String,AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAccessRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAuditRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadLock()\n  nameWithType: ObjectSecurity.ReadLock()\n  fullName: System.Security.AccessControl.ObjectSecurity.ReadLock()\n- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadUnlock()\n  nameWithType: ObjectSecurity.ReadUnlock()\n  fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAccessRuleProtection(Boolean,Boolean)\n  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean,Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(Boolean,Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAuditRuleProtection(Boolean,Boolean)\n  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean,Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(Boolean,Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetGroup(IdentityReference)\n  nameWithType: ObjectSecurity.SetGroup(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetGroup(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetOwner(IdentityReference)\n  nameWithType: ObjectSecurity.SetOwner(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetOwner(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm(Byte[])\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm(Byte[],AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[],AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[],AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm(String)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm(String,AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String,AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(String,AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteLock()\n  nameWithType: ObjectSecurity.WriteLock()\n  fullName: System.Security.AccessControl.ObjectSecurity.WriteLock()\n- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteUnlock()\n  nameWithType: ObjectSecurity.WriteUnlock()\n  fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.#ctor*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ObjectSecurity\n  nameWithType: ObjectSecurity.ObjectSecurity\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: ObjectSecurity.AccessRightType\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRuleFactory\n  nameWithType: ObjectSecurity.AccessRuleFactory\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRulesModified\n  nameWithType: ObjectSecurity.AccessRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: ObjectSecurity.AccessRuleType\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesCanonical\n  nameWithType: ObjectSecurity.AreAccessRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesProtected\n  nameWithType: ObjectSecurity.AreAccessRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesCanonical\n  nameWithType: ObjectSecurity.AreAuditRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesProtected\n  nameWithType: ObjectSecurity.AreAuditRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRuleFactory\n  nameWithType: ObjectSecurity.AuditRuleFactory\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRulesModified\n  nameWithType: ObjectSecurity.AuditRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: ObjectSecurity.AuditRuleType\n- uid: System.Security.AccessControl.ObjectSecurity.GetGroup*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetGroup\n  nameWithType: ObjectSecurity.GetGroup\n- uid: System.Security.AccessControl.ObjectSecurity.GetOwner*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetOwner\n  nameWithType: ObjectSecurity.GetOwner\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorBinaryForm\n  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorSddlForm\n  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm\n- uid: System.Security.AccessControl.ObjectSecurity.GroupModified*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GroupModified\n  nameWithType: ObjectSecurity.GroupModified\n- uid: System.Security.AccessControl.ObjectSecurity.IsContainer*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsContainer\n  nameWithType: ObjectSecurity.IsContainer\n- uid: System.Security.AccessControl.ObjectSecurity.IsDS*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsDS\n  nameWithType: ObjectSecurity.IsDS\n- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsSddlConversionSupported\n  nameWithType: ObjectSecurity.IsSddlConversionSupported\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAccess\n  nameWithType: ObjectSecurity.ModifyAccess\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAccessRule\n  nameWithType: ObjectSecurity.ModifyAccessRule\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAudit\n  nameWithType: ObjectSecurity.ModifyAudit\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAuditRule\n  nameWithType: ObjectSecurity.ModifyAuditRule\n- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: OwnerModified\n  nameWithType: ObjectSecurity.OwnerModified\n- uid: System.Security.AccessControl.ObjectSecurity.Persist*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist\n  nameWithType: ObjectSecurity.Persist\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAccessRules\n  nameWithType: ObjectSecurity.PurgeAccessRules\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAuditRules\n  nameWithType: ObjectSecurity.PurgeAuditRules\n- uid: System.Security.AccessControl.ObjectSecurity.ReadLock*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadLock\n  nameWithType: ObjectSecurity.ReadLock\n- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadUnlock\n  nameWithType: ObjectSecurity.ReadUnlock\n- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAccessRuleProtection\n  nameWithType: ObjectSecurity.SetAccessRuleProtection\n- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAuditRuleProtection\n  nameWithType: ObjectSecurity.SetAuditRuleProtection\n- uid: System.Security.AccessControl.ObjectSecurity.SetGroup*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetGroup\n  nameWithType: ObjectSecurity.SetGroup\n- uid: System.Security.AccessControl.ObjectSecurity.SetOwner*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetOwner\n  nameWithType: ObjectSecurity.SetOwner\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm\n- uid: System.Security.AccessControl.ObjectSecurity.WriteLock*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteLock\n  nameWithType: ObjectSecurity.WriteLock\n- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteUnlock\n  nameWithType: ObjectSecurity.WriteUnlock\n"}