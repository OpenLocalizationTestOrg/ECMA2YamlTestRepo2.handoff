{"nodes":[{"pos":[398,469],"content":"Configures the location of a custom implementation of the role service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Configures the location of a custom implementation of the role service.","pos":[0,71]}]},{"pos":[482,2292],"content":"The RoleServiceManager class corresponds to the <xref:System.Web.UI.ScriptManager.RoleService%2A> property of the <xref:System.Web.UI.ScriptManager> or <xref:System.Web.UI.ScriptManagerProxy> control.       The role Web service is used by AJAX-enabled applications to retrieve role information for the current authenticated user by using an asynchronous Web service call. You can use RoleServiceManager to provide the path of an alternative implementation of the role Web service instead of using the built-in Web service.       To use the role service in your application, you must enable it in the configuration file and declare it in the page. If you use the built-in role Web service, you have to enable it, but you do not have to explicitly declare the role service manager in the page.       To create a custom role service, you must implement a Web service that has two methods: `GetRolesForCurrentUser` and `IsCurrentUserInRole`. These methods must have the same signature as the corresponding methods of the built-in role Web service.       The following example shows the basic class structure that must be implemented in a custom role Web service class.       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       To use a custom role Web service, you can add the service declaratively in markup by putting a `RoleService` element inside the <xref:System.Web.UI.ScriptManager> control, as shown in the following example.      ```   <asp:ScriptManager ID=\"SM1\" runat=\"server\">     <RoleService Path=\"MyRoleService.asmx\" LoadRoles=\"true\" />   </asp:ScriptManager>   ```       You can also programmatically set the <xref:System.Web.UI.RoleServiceManager.Path%2A> property to use a custom role Web service.","needQuote":false,"needEscape":true,"nodes":[{"content":"The RoleServiceManager class corresponds to the &lt;xref:System.Web.UI.ScriptManager.RoleService%2A&gt; property of the &lt;xref:System.Web.UI.ScriptManager&gt; or &lt;xref:System.Web.UI.ScriptManagerProxy&gt; control.","pos":[0,200],"source":"The RoleServiceManager class corresponds to the <xref:System.Web.UI.ScriptManager.RoleService%2A> property of the <xref:System.Web.UI.ScriptManager> or <xref:System.Web.UI.ScriptManagerProxy> control."},{"content":"The role Web service is used by AJAX-enabled applications to retrieve role information for the current authenticated user by using an asynchronous Web service call.","pos":[207,371]},{"content":"You can use RoleServiceManager to provide the path of an alternative implementation of the role Web service instead of using the built-in Web service.","pos":[372,522]},{"content":"To use the role service in your application, you must enable it in the configuration file and declare it in the page.","pos":[529,646]},{"content":"If you use the built-in role Web service, you have to enable it, but you do not have to explicitly declare the role service manager in the page.","pos":[647,791]},{"content":"To create a custom role service, you must implement a Web service that has two methods: <ph id=\"ph1\">`GetRolesForCurrentUser`</ph> and <ph id=\"ph2\">`IsCurrentUserInRole`</ph>.","pos":[798,937],"source":"       To create a custom role service, you must implement a Web service that has two methods: `GetRolesForCurrentUser` and `IsCurrentUserInRole`."},{"content":"These methods must have the same signature as the corresponding methods of the built-in role Web service.","pos":[938,1043]},{"content":"The following example shows the basic class structure that must be implemented in a custom role Web service class.","pos":[1050,1164]},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>XpsCreate#XpsCreateAddPkgContent<ept id=\"p2\">](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)</ept><ept id=\"p1\">]</ept>       To use a custom role Web service, you can add the service declaratively in markup by putting a <ph id=\"ph1\">`RoleService`</ph> element inside the &lt;xref:System.Web.UI.ScriptManager&gt; control, as shown in the following example.","pos":[1171,1500],"source":"[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       To use a custom role Web service, you can add the service declaratively in markup by putting a `RoleService` element inside the <xref:System.Web.UI.ScriptManager> control, as shown in the following example."},{"content":"<ph id=\"ph1\">```   &lt;asp:ScriptManager ID=\"SM1\" runat=\"server\"&gt;     &lt;RoleService Path=\"MyRoleService.asmx\" LoadRoles=\"true\" /&gt;   &lt;/asp:ScriptManager&gt;   ```</ph>       You can also programmatically set the &lt;xref:System.Web.UI.RoleServiceManager.Path%2A&gt; property to use a custom role Web service.","pos":[1506,1782],"source":"```   <asp:ScriptManager ID=\"SM1\" runat=\"server\">     <RoleService Path=\"MyRoleService.asmx\" LoadRoles=\"true\" />   </asp:ScriptManager>   ```       You can also programmatically set the <xref:System.Web.UI.RoleServiceManager.Path%2A> property to use a custom role Web service."}]},{"pos":[2986,3080],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.RoleServiceManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.RoleServiceManager\"></xref> class."},{"pos":[3587,3700],"content":"Gets or sets a value that indicates whether the list of roles for the currently logged-on user must be retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the list of roles for the currently logged-on user must be retrieved.","pos":[0,113]}]},{"pos":[3713,4639],"content":"If the LoadRoles property is set to `true`, the list of roles is retrieved by the <xref:System.Web.UI.RoleServiceManager> class by using the <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName> method. The list is then serialized into the page markup.      > [!NOTE] >  When LoadRoles is `true`, all the roles that the current authenticated user belongs to are sent to the browser. Because users can potentially see the role information, this can be a security issue.       The LoadRoles property can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. If LoadRoles is set to `true` for a proxy instance, the list of roles is retrieved and added to the page. If LoadRoles is `false`, the roles are not added to the page markup. In that case, you can use the  method to store role information in memory in the browser.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the LoadRoles property is set to <ph id=\"ph1\">`true`</ph>, the list of roles is retrieved by the &lt;xref:System.Web.UI.RoleServiceManager&gt; class by using the &lt;xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName&gt; method.","pos":[0,225],"source":"If the LoadRoles property is set to `true`, the list of roles is retrieved by the <xref:System.Web.UI.RoleServiceManager> class by using the <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName> method."},{"content":"The list is then serialized into the page markup.","pos":[226,275]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When LoadRoles is <ph id=\"ph2\">`true`</ph>, all the roles that the current authenticated user belongs to are sent to the browser.","pos":[281,405],"source":"      > [!NOTE] >  When LoadRoles is `true`, all the roles that the current authenticated user belongs to are sent to the browser."},{"content":"Because users can potentially see the role information, this can be a security issue.","pos":[406,491]},{"content":"The LoadRoles property can be specified in the &lt;xref:System.Web.UI.ScriptManager&gt; control or in an associated &lt;xref:System.Web.UI.ScriptManagerProxy&gt; control.","pos":[498,656],"source":"       The LoadRoles property can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control."},{"content":"If LoadRoles is set to <ph id=\"ph1\">`true`</ph> for a proxy instance, the list of roles is retrieved and added to the page.","pos":[657,762],"source":" If LoadRoles is set to `true` for a proxy instance, the list of roles is retrieved and added to the page."},{"content":"If LoadRoles is <ph id=\"ph1\">`false`</ph>, the roles are not added to the page markup.","pos":[763,831],"source":" If LoadRoles is `false`, the roles are not added to the page markup."},{"content":"In that case, you can use the  method to store role information in memory in the browser.","pos":[832,921]}]},{"pos":[4758,5012],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the list of roles must be retrieved; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the list of roles must be retrieved; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,175],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the list of roles must be retrieved; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[176,254],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[5426,5468],"content":"Gets or sets the path of the role service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the path of the role service.","pos":[0,42]}]},{"pos":[5481,6460],"content":"If the Path property is not set, the return value is <xref:System.String?displayProperty=fullName>. In that case, ASP.NET uses the built-in authentication Web service that corresponds to the following internal default path: ~/RolesService.svc. The same behavior occurs if you set Path to an empty string or to `null`.       Path can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. When Path is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following conditions are true:      -   If there are multiple proxy objects in the control hierarchy, Path does not have to be set for each proxy instance.      -   If Path is explicitly set for a proxy object, the value must be the same for all other proxy objects that this property is set for. If you set different paths for different proxy objects in the control hierarchy, an <xref:System.ArgumentException> exception is thrown.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the Path property is not set, the return value is &lt;xref:System.String?displayProperty=fullName&gt;.","pos":[0,99],"source":"If the Path property is not set, the return value is <xref:System.String?displayProperty=fullName>."},{"content":"In that case, ASP.NET uses the built-in authentication Web service that corresponds to the following internal default path: ~/RolesService.svc.","pos":[100,243]},{"content":"The same behavior occurs if you set Path to an empty string or to <ph id=\"ph1\">`null`</ph>.","pos":[244,317],"source":" The same behavior occurs if you set Path to an empty string or to `null`."},{"content":"Path can be specified in the &lt;xref:System.Web.UI.ScriptManager&gt; control or in an associated &lt;xref:System.Web.UI.ScriptManagerProxy&gt; control.","pos":[324,464],"source":"       Path can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control."},{"content":"When Path is set at the &lt;xref:System.Web.UI.ScriptManagerProxy&gt; level, the following conditions are true:      -   If there are multiple proxy objects in the control hierarchy, Path does not have to be set for each proxy instance.","pos":[465,695],"source":" When Path is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following conditions are true:      -   If there are multiple proxy objects in the control hierarchy, Path does not have to be set for each proxy instance."},{"content":"-   If Path is explicitly set for a proxy object, the value must be the same for all other proxy objects that this property is set for.","pos":[701,836]},{"content":"If you set different paths for different proxy objects in the control hierarchy, an &lt;xref:System.ArgumentException&gt; exception is thrown.","pos":[837,973],"source":" If you set different paths for different proxy objects in the control hierarchy, an <xref:System.ArgumentException> exception is thrown."}]},{"pos":[6575,6615],"content":"The path of the custom role Web service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path of the custom role Web service.","pos":[0,40]}]},{"pos":[6775,6834],"content":"More than one unique path was set in the control hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"More than one unique path was set in the control hierarchy.","pos":[0,59]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.RoleServiceManager\n  id: RoleServiceManager\n  children:\n  - System.Web.UI.RoleServiceManager.#ctor\n  - System.Web.UI.RoleServiceManager.LoadRoles\n  - System.Web.UI.RoleServiceManager.Path\n  langs:\n  - csharp\n  name: RoleServiceManager\n  nameWithType: RoleServiceManager\n  fullName: System.Web.UI.RoleServiceManager\n  type: Class\n  summary: Configures the location of a custom implementation of the role service.\n  remarks: \"The RoleServiceManager class corresponds to the <xref:System.Web.UI.ScriptManager.RoleService%2A> property of the <xref:System.Web.UI.ScriptManager> or <xref:System.Web.UI.ScriptManagerProxy> control.  \\n  \\n The role Web service is used by AJAX-enabled applications to retrieve role information for the current authenticated user by using an asynchronous Web service call. You can use RoleServiceManager to provide the path of an alternative implementation of the role Web service instead of using the built-in Web service.  \\n  \\n To use the role service in your application, you must enable it in the configuration file and declare it in the page. If you use the built-in role Web service, you have to enable it, but you do not have to explicitly declare the role service manager in the page.  \\n  \\n To create a custom role service, you must implement a Web service that has two methods: `GetRolesForCurrentUser` and `IsCurrentUserInRole`. These methods must have the same signature as the corresponding methods of the built-in role Web service.  \\n  \\n The following example shows the basic class structure that must be implemented in a custom role Web service class.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n To use a custom role Web service, you can add the service declaratively in markup by putting a `RoleService` element inside the <xref:System.Web.UI.ScriptManager> control, as shown in the following example.  \\n  \\n```  \\n<asp:ScriptManager ID=\\\"SM1\\\" runat=\\\"server\\\">  \\n  <RoleService Path=\\\"MyRoleService.asmx\\\" LoadRoles=\\\"true\\\" />  \\n</asp:ScriptManager>  \\n```  \\n  \\n You can also programmatically set the <xref:System.Web.UI.RoleServiceManager.Path%2A> property to use a custom role Web service.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultProperty(\"Path\")]\n\n      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]\n\n      public class RoleServiceManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.RoleServiceManager.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.RoleServiceManager\n  langs:\n  - csharp\n  name: RoleServiceManager()\n  nameWithType: RoleServiceManager.RoleServiceManager()\n  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.RoleServiceManager\"></xref> class.\n  syntax:\n    content: public RoleServiceManager ();\n    parameters: []\n  overload: System.Web.UI.RoleServiceManager.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.RoleServiceManager.LoadRoles\n  id: LoadRoles\n  parent: System.Web.UI.RoleServiceManager\n  langs:\n  - csharp\n  name: LoadRoles\n  nameWithType: RoleServiceManager.LoadRoles\n  fullName: System.Web.UI.RoleServiceManager.LoadRoles\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets a value that indicates whether the list of roles for the currently logged-on user must be retrieved.\n  remarks: \"If the LoadRoles property is set to `true`, the list of roles is retrieved by the <xref:System.Web.UI.RoleServiceManager> class by using the <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName> method. The list is then serialized into the page markup.  \\n  \\n> [!NOTE]\\n>  When LoadRoles is `true`, all the roles that the current authenticated user belongs to are sent to the browser. Because users can potentially see the role information, this can be a security issue.  \\n  \\n The LoadRoles property can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. If LoadRoles is set to `true` for a proxy instance, the list of roles is retrieved and added to the page. If LoadRoles is `false`, the roles are not added to the page markup. In that case, you can use the  method to store role information in memory in the browser.\"\n  syntax:\n    content: public bool LoadRoles { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the list of roles must be retrieved; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.RoleServiceManager.LoadRoles*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.RoleServiceManager.Path\n  id: Path\n  parent: System.Web.UI.RoleServiceManager\n  langs:\n  - csharp\n  name: Path\n  nameWithType: RoleServiceManager.Path\n  fullName: System.Web.UI.RoleServiceManager.Path\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets the path of the role service.\n  remarks: \"If the Path property is not set, the return value is <xref:System.String?displayProperty=fullName>. In that case, ASP.NET uses the built-in authentication Web service that corresponds to the following internal default path: ~/RolesService.svc. The same behavior occurs if you set Path to an empty string or to `null`.  \\n  \\n Path can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. When Path is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following conditions are true:  \\n  \\n-   If there are multiple proxy objects in the control hierarchy, Path does not have to be set for each proxy instance.  \\n  \\n-   If Path is explicitly set for a proxy object, the value must be the same for all other proxy objects that this property is set for. If you set different paths for different proxy objects in the control hierarchy, an <xref:System.ArgumentException> exception is thrown.\"\n  syntax:\n    content: public string Path { get; set; }\n    return:\n      type: System.String\n      description: The path of the custom role Web service.\n  overload: System.Web.UI.RoleServiceManager.Path*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: More than one unique path was set in the control hierarchy.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Web.UI.RoleServiceManager.#ctor\n  parent: System.Web.UI.RoleServiceManager\n  isExternal: false\n  name: RoleServiceManager()\n  nameWithType: RoleServiceManager.RoleServiceManager()\n  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()\n- uid: System.Web.UI.RoleServiceManager.LoadRoles\n  parent: System.Web.UI.RoleServiceManager\n  isExternal: false\n  name: LoadRoles\n  nameWithType: RoleServiceManager.LoadRoles\n  fullName: System.Web.UI.RoleServiceManager.LoadRoles\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.RoleServiceManager.Path\n  parent: System.Web.UI.RoleServiceManager\n  isExternal: false\n  name: Path\n  nameWithType: RoleServiceManager.Path\n  fullName: System.Web.UI.RoleServiceManager.Path\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.RoleServiceManager.#ctor*\n  parent: System.Web.UI.RoleServiceManager\n  isExternal: false\n  name: RoleServiceManager\n  nameWithType: RoleServiceManager.RoleServiceManager\n- uid: System.Web.UI.RoleServiceManager.LoadRoles*\n  parent: System.Web.UI.RoleServiceManager\n  isExternal: false\n  name: LoadRoles\n  nameWithType: RoleServiceManager.LoadRoles\n- uid: System.Web.UI.RoleServiceManager.Path*\n  parent: System.Web.UI.RoleServiceManager\n  isExternal: false\n  name: Path\n  nameWithType: RoleServiceManager.Path\n"}