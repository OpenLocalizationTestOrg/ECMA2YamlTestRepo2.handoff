{"nodes":[{"pos":[2350,2526],"content":"Represents a security descriptor. A security descriptor includes an owner, a primary group, a Discretionary Access Control List (DACL), and a System Access Control List (SACL).","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a security descriptor. A security descriptor includes an owner, a primary group, a Discretionary Access Control List (DACL), and a System Access Control List (SACL).","pos":[0,176],"nodes":[{"content":"Represents a security descriptor.","pos":[0,33]},{"content":"A security descriptor includes an owner, a primary group, a Discretionary Access Control List (DACL), and a System Access Control List (SACL).","pos":[34,176]}]}]},{"pos":[4005,4220],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class from the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.RawSecurityDescriptor\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> class from the specified <xref href=\"System.Security.AccessControl.RawSecurityDescriptor\"></xref> object."},{"pos":[4233,4920],"content":"If the underlying security descriptor from which the new <xref:System.Security.AccessControl.RawSecurityDescriptor> object is created contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.       This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the underlying security descriptor from which the new &lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt; object is created contains <ph id=\"ph1\">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.","pos":[0,297],"source":"If the underlying security descriptor from which the new <xref:System.Security.AccessControl.RawSecurityDescriptor> object is created contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL."},{"content":"If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.","pos":[298,464]},{"content":"This can result in an application unintentionally allowing access to principals.","pos":[471,551]},{"content":"Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","pos":[552,685]}]},{"pos":[5167,5297],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the new security descriptor is associated with a container object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new security descriptor is associated with a container object."},{"pos":[5359,5489],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the new security descriptor is associated with a directory object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new security descriptor is associated with a directory object."},{"pos":[5605,5801],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.RawSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from which to create the new <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.AccessControl.RawSecurityDescriptor\"></xref> object from which to create the new <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"pos":[6537,6726],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class from the specified Security Descriptor Definition Language (SDDL) string.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> class from the specified Security Descriptor Definition Language (SDDL) string."},{"pos":[6739,7426],"content":"If the underlying security descriptor from which the new <xref:System.Security.AccessControl.RawSecurityDescriptor> object is created contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.       This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the underlying security descriptor from which the new &lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt; object is created contains <ph id=\"ph1\">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.","pos":[0,297],"source":"If the underlying security descriptor from which the new <xref:System.Security.AccessControl.RawSecurityDescriptor> object is created contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL."},{"content":"If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.","pos":[298,464]},{"content":"This can result in an application unintentionally allowing access to principals.","pos":[471,551]},{"content":"Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","pos":[552,685]}]},{"pos":[7615,7745],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the new security descriptor is associated with a container object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new security descriptor is associated with a container object."},{"pos":[7807,7937],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the new security descriptor is associated with a directory object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new security descriptor is associated with a directory object."},{"pos":[8002,8130],"content":"The SDDL string from which to create the new <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The SDDL string from which to create the new <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"pos":[8910,9066],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class from the specified array of byte values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> class from the specified array of byte values."},{"pos":[9079,9765],"content":"If the underlying security descriptor from which the new <xref:System.Security.AccessControl.RawSecurityDescriptor> object is created contains `null` for its discretionary access control list (DACL),a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.       This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the underlying security descriptor from which the new &lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt; object is created contains <ph id=\"ph1\">`null`</ph> for its discretionary access control list (DACL),a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.","pos":[0,296],"source":"If the underlying security descriptor from which the new <xref:System.Security.AccessControl.RawSecurityDescriptor> object is created contains `null` for its discretionary access control list (DACL),a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL."},{"content":"If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.","pos":[297,463]},{"content":"This can result in an application unintentionally allowing access to principals.","pos":[470,550]},{"content":"Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","pos":[551,684]}]},{"pos":[9968,10098],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the new security descriptor is associated with a container object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new security descriptor is associated with a container object."},{"pos":[10160,10290],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the new security descriptor is associated with a directory object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new security descriptor is associated with a directory object."},{"pos":[10357,10494],"content":"The array of byte values from which to create the new <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The array of byte values from which to create the new <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"pos":[10556,10619],"content":"The offset in the <ph id=\"ph1\">`binaryForm`</ph> array at which to begin copying.","needQuote":true,"needEscape":true,"source":"The offset in the `binaryForm` array at which to begin copying."},{"pos":[11980,12127],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class from the specified information.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> class from the specified information."},{"pos":[12140,12827],"content":"If the underlying security descriptor from which the new <xref:System.Security.AccessControl.RawSecurityDescriptor> object is created contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.       This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the underlying security descriptor from which the new &lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt; object is created contains <ph id=\"ph1\">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.","pos":[0,297],"source":"If the underlying security descriptor from which the new <xref:System.Security.AccessControl.RawSecurityDescriptor> object is created contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL."},{"content":"If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.","pos":[298,464]},{"content":"This can result in an application unintentionally allowing access to principals.","pos":[471,551]},{"content":"Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","pos":[552,685]}]},{"pos":[13269,13399],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the new security descriptor is associated with a container object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new security descriptor is associated with a container object."},{"pos":[13461,13591],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the new security descriptor is associated with a directory object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new security descriptor is associated with a directory object."},{"pos":[13682,13804],"content":"Flags that specify behavior of the new <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Flags that specify behavior of the new <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"pos":[13897,14002],"content":"The owner for the new <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The owner for the new <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"pos":[14095,14208],"content":"The primary group for the new <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The primary group for the new <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"pos":[14300,14433],"content":"The System Access Control List (SACL) for the new <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The System Access Control List (SACL) for the new <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"pos":[14539,14679],"content":"The Discretionary Access Control List (DACL) for the new <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The Discretionary Access Control List (DACL) for the new <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"pos":[15347,15621],"content":"Sets the &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*&gt; property for this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance and sets the <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.ControlFlags\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> flag.","needQuote":true,"needEscape":true,"source":"Sets the <xref:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*> property for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> instance and sets the <xref href=\"System.Security.AccessControl.ControlFlags\"></xref> flag."},{"pos":[15633,15953],"content":"The constructor for the <xref:System.Security.AccessControl.DiscretionaryAcl> uses the <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A> and <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A> properties for this <xref:System.Security.AccessControl.CommonSecurityDescriptor>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The constructor for the &lt;xref:System.Security.AccessControl.DiscretionaryAcl&gt; uses the &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A&gt; and &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A&gt; properties for this &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor&gt;.","pos":[0,320],"source":"The constructor for the <xref:System.Security.AccessControl.DiscretionaryAcl> uses the <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A> and <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A> properties for this <xref:System.Security.AccessControl.CommonSecurityDescriptor>."}]},{"pos":[16117,16222],"content":"The revision level of the new <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The revision level of the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."},{"pos":[16285,16463],"content":"The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object can contain. This number is to be used only as a hint.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of Access Control Entries (ACEs) this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object can contain.","pos":[0,136],"source":"The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object can contain."},{"content":"This number is to be used only as a hint.","pos":[137,178]}]},{"pos":[17110,17377],"content":"Sets the &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*&gt; property for this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance and sets the <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.ControlFlags\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> flag.","needQuote":true,"needEscape":true,"source":"Sets the <xref:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*> property for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> instance and sets the <xref href=\"System.Security.AccessControl.ControlFlags\"></xref> flag."},{"pos":[17389,17702],"content":"The constructor for the <xref:System.Security.AccessControl.SystemAcl> uses the <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A> and <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A> properties for this <xref:System.Security.AccessControl.CommonSecurityDescriptor>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The constructor for the &lt;xref:System.Security.AccessControl.SystemAcl&gt; uses the &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A&gt; and &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A&gt; properties for this &lt;xref:System.Security.AccessControl.CommonSecurityDescriptor&gt;.","pos":[0,313],"source":"The constructor for the <xref:System.Security.AccessControl.SystemAcl> uses the <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A> and <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A> properties for this <xref:System.Security.AccessControl.CommonSecurityDescriptor>."}]},{"pos":[17859,17957],"content":"The revision level of the new <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.SystemAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The revision level of the new <xref href=\"System.Security.AccessControl.SystemAcl\"></xref> object."},{"pos":[18020,18032],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18586,18710],"content":"Gets values that specify behavior of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets values that specify behavior of the <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"pos":[18901,19040],"content":"One or more values of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ControlFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration combined with a logical OR operation.","needQuote":true,"needEscape":true,"source":"One or more values of the <xref href=\"System.Security.AccessControl.ControlFlags\"></xref> enumeration combined with a logical OR operation."},{"pos":[19614,19796],"content":"Gets or sets the discretionary access control list (DACL) for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object. The DACL contains access rules.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the discretionary access control list (DACL) for this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,150],"source":"Gets or sets the discretionary access control list (DACL) for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"content":"The DACL contains access rules.","pos":[151,182]}]},{"pos":[19809,20331],"content":"If this property is set to `null`, a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.       This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","needQuote":false,"needEscape":true,"nodes":[{"content":"If this property is set to <ph id=\"ph1\">`null`</ph>, a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.","pos":[0,132],"source":"If this property is set to `null`, a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL."},{"content":"If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.","pos":[133,299]},{"content":"This can result in an application unintentionally allowing access to principals.","pos":[306,386]},{"content":"Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","pos":[387,520]}]},{"pos":[20531,20632],"content":"The DACL for this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The DACL for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"pos":[21155,21278],"content":"Gets or sets the primary group for this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets or sets the primary group for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"pos":[21471,21581],"content":"The primary group for this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The primary group for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"pos":[22123,22304],"content":"Gets a Boolean value that specifies whether the object associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is a container object.","needQuote":true,"needEscape":true,"source":"Gets a Boolean value that specifies whether the object associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object is a container object."},{"pos":[22419,22695],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the object associated with this <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is a container object; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object is a container object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23323,23538],"content":"Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is in canonical order.","needQuote":true,"needEscape":true,"source":"Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object is in canonical order."},{"pos":[23669,23943],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the DACL associated with this <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is in canonical order; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object is in canonical order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24472,24653],"content":"Gets a Boolean value that specifies whether the object associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is a directory object.","needQuote":true,"needEscape":true,"source":"Gets a Boolean value that specifies whether the object associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object is a directory object."},{"pos":[24761,25037],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the object associated with this <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is a directory object; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object is a directory object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25623,25831],"content":"Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is in canonical order.","needQuote":true,"needEscape":true,"source":"Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object is in canonical order."},{"pos":[25955,26229],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the SACL associated with this <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is in canonical order; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object is in canonical order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[26756,26897],"content":"Gets or sets the owner of the object associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets or sets the owner of the object associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"pos":[27090,27218],"content":"The owner of the object associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The owner of the object associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"pos":[27945,28162],"content":"Removes all access rules for the specified security identifier from the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes all access rules for the specified security identifier from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"pos":[28174,28379],"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","needQuote":true,"needEscape":true,"nodes":[{"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","pos":[0,205]}]},{"pos":[28592,28649],"content":"The security identifier for which to remove access rules.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security identifier for which to remove access rules.","pos":[0,57]}]},{"pos":[29349,29558],"content":"Removes all audit rules for the specified security identifier from the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes all audit rules for the specified security identifier from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"pos":[29763,29819],"content":"The security identifier for which to remove audit rules.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security identifier for which to remove audit rules.","pos":[0,56]}]},{"pos":[30567,30829],"content":"Sets the inheritance protection for the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object. DACLs that are protected do not inherit access rules from parent containers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the inheritance protection for the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,185],"source":"Sets the inheritance protection for the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"content":"DACLs that are protected do not inherit access rules from parent containers.","pos":[186,262]}]},{"pos":[31025,31123],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to protect the DACL from inheritance.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to protect the DACL from inheritance."},{"pos":[31200,31415],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to keep inherited access rules in the DACL; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to remove inherited access rules from the DACL.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to keep inherited access rules in the DACL; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to remove inherited access rules from the DACL."},{"pos":[32147,32401],"content":"Sets the inheritance protection for the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object. SACLs that are protected do not inherit audit rules from parent containers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the inheritance protection for the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,178],"source":"Sets the inheritance protection for the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"content":"SACLs that are protected do not inherit audit rules from parent containers.","pos":[179,254]}]},{"pos":[32590,32688],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to protect the SACL from inheritance.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to protect the SACL from inheritance."},{"pos":[32765,32978],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to keep inherited audit rules in the SACL; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to remove inherited audit rules from the SACL.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to keep inherited audit rules in the SACL; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to remove inherited audit rules from the SACL."},{"pos":[33527,33701],"content":"Gets or sets the System Access Control List (SACL) for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object. The SACL contains audit rules.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the System Access Control List (SACL) for this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,143],"source":"Gets or sets the System Access Control List (SACL) for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."},{"content":"The SACL contains audit rules.","pos":[144,174]}]},{"pos":[33879,33980],"content":"The SACL for this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The SACL for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.CommonSecurityDescriptor\n  id: CommonSecurityDescriptor\n  children:\n  - System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)\n  - System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)\n  - System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)\n  - System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)\n  - System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)\n  - System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)\n  - System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags\n  - System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl\n  - System.Security.AccessControl.CommonSecurityDescriptor.Group\n  - System.Security.AccessControl.CommonSecurityDescriptor.IsContainer\n  - System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical\n  - System.Security.AccessControl.CommonSecurityDescriptor.IsDS\n  - System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical\n  - System.Security.AccessControl.CommonSecurityDescriptor.Owner\n  - System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)\n  - System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(System.Security.Principal.SecurityIdentifier)\n  - System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl\n  langs:\n  - csharp\n  name: CommonSecurityDescriptor\n  nameWithType: CommonSecurityDescriptor\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor\n  type: Class\n  summary: Represents a security descriptor. A security descriptor includes an owner, a primary group, a Discretionary Access Control List (DACL), and a System Access Control List (SACL).\n  syntax:\n    content: 'public sealed class CommonSecurityDescriptor : System.Security.AccessControl.GenericSecurityDescriptor'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.GenericSecurityDescriptor\n  implements: []\n  inheritedMembers:\n  - System.Security.AccessControl.GenericSecurityDescriptor.BinaryLength\n  - System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.GenericSecurityDescriptor.GetSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.GenericSecurityDescriptor.IsSddlConversionSupported\n  - System.Security.AccessControl.GenericSecurityDescriptor.Revision\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)\n  id: '#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)'\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)\n  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> class from the specified <xref href=\"System.Security.AccessControl.RawSecurityDescriptor\"></xref> object.\n  remarks: \"If the underlying security descriptor from which the new <xref:System.Security.AccessControl.RawSecurityDescriptor> object is created contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \\n  \\n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.\"\n  syntax:\n    content: public CommonSecurityDescriptor (bool isContainer, bool isDS, System.Security.AccessControl.RawSecurityDescriptor rawSecurityDescriptor);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new security descriptor is associated with a container object.\n    - id: isDS\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new security descriptor is associated with a directory object.\n    - id: rawSecurityDescriptor\n      type: System.Security.AccessControl.RawSecurityDescriptor\n      description: The <xref href=\"System.Security.AccessControl.RawSecurityDescriptor\"></xref> object from which to create the new <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)\n  id: '#ctor(System.Boolean,System.Boolean,System.String)'\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: CommonSecurityDescriptor(Boolean,Boolean,String)\n  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,String)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> class from the specified Security Descriptor Definition Language (SDDL) string.\n  remarks: \"If the underlying security descriptor from which the new <xref:System.Security.AccessControl.RawSecurityDescriptor> object is created contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \\n  \\n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.\"\n  syntax:\n    content: public CommonSecurityDescriptor (bool isContainer, bool isDS, string sddlForm);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new security descriptor is associated with a container object.\n    - id: isDS\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new security descriptor is associated with a directory object.\n    - id: sddlForm\n      type: System.String\n      description: The SDDL string from which to create the new <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)\n  id: '#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)'\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)\n  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> class from the specified array of byte values.\n  remarks: \"If the underlying security descriptor from which the new <xref:System.Security.AccessControl.RawSecurityDescriptor> object is created contains `null` for its discretionary access control list (DACL),a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \\n  \\n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.\"\n  syntax:\n    content: public CommonSecurityDescriptor (bool isContainer, bool isDS, byte[] binaryForm, int offset);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new security descriptor is associated with a container object.\n    - id: isDS\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new security descriptor is associated with a directory object.\n    - id: binaryForm\n      type: System.Byte[]\n      description: The array of byte values from which to create the new <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object.\n    - id: offset\n      type: System.Int32\n      description: The offset in the `binaryForm` array at which to begin copying.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)\n  id: '#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)'\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)\n  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> class from the specified information.\n  remarks: \"If the underlying security descriptor from which the new <xref:System.Security.AccessControl.RawSecurityDescriptor> object is created contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \\n  \\n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.\"\n  syntax:\n    content: public CommonSecurityDescriptor (bool isContainer, bool isDS, System.Security.AccessControl.ControlFlags flags, System.Security.Principal.SecurityIdentifier owner, System.Security.Principal.SecurityIdentifier group, System.Security.AccessControl.SystemAcl systemAcl, System.Security.AccessControl.DiscretionaryAcl discretionaryAcl);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new security descriptor is associated with a container object.\n    - id: isDS\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new security descriptor is associated with a directory object.\n    - id: flags\n      type: System.Security.AccessControl.ControlFlags\n      description: Flags that specify behavior of the new <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object.\n    - id: owner\n      type: System.Security.Principal.SecurityIdentifier\n      description: The owner for the new <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object.\n    - id: group\n      type: System.Security.Principal.SecurityIdentifier\n      description: The primary group for the new <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object.\n    - id: systemAcl\n      type: System.Security.AccessControl.SystemAcl\n      description: The System Access Control List (SACL) for the new <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object.\n    - id: discretionaryAcl\n      type: System.Security.AccessControl.DiscretionaryAcl\n      description: The Discretionary Access Control List (DACL) for the new <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)\n  id: AddDiscretionaryAcl(System.Byte,System.Int32)\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: AddDiscretionaryAcl(Byte,Int32)\n  nameWithType: CommonSecurityDescriptor.AddDiscretionaryAcl(Byte,Int32)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(Byte,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the <xref:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*> property for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> instance and sets the <xref href=\"System.Security.AccessControl.ControlFlags\"></xref> flag.\n  remarks: The constructor for the <xref:System.Security.AccessControl.DiscretionaryAcl> uses the <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A> and <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A> properties for this <xref:System.Security.AccessControl.CommonSecurityDescriptor>.\n  syntax:\n    content: public void AddDiscretionaryAcl (byte revision, int trusted);\n    parameters:\n    - id: revision\n      type: System.Byte\n      description: The revision level of the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.\n    - id: trusted\n      type: System.Int32\n      description: The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object can contain. This number is to be used only as a hint.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)\n  id: AddSystemAcl(System.Byte,System.Int32)\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: AddSystemAcl(Byte,Int32)\n  nameWithType: CommonSecurityDescriptor.AddSystemAcl(Byte,Int32)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(Byte,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the <xref:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*> property for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> instance and sets the <xref href=\"System.Security.AccessControl.ControlFlags\"></xref> flag.\n  remarks: The constructor for the <xref:System.Security.AccessControl.SystemAcl> uses the <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A> and <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A> properties for this <xref:System.Security.AccessControl.CommonSecurityDescriptor>.\n  syntax:\n    content: public void AddSystemAcl (byte revision, int trusted);\n    parameters:\n    - id: revision\n      type: System.Byte\n      description: The revision level of the new <xref href=\"System.Security.AccessControl.SystemAcl\"></xref> object.\n    - id: trusted\n      type: System.Int32\n      description: To be added.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags\n  id: ControlFlags\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: ControlFlags\n  nameWithType: CommonSecurityDescriptor.ControlFlags\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets values that specify behavior of the <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object.\n  syntax:\n    content: public override System.Security.AccessControl.ControlFlags ControlFlags { get; }\n    return:\n      type: System.Security.AccessControl.ControlFlags\n      description: One or more values of the <xref href=\"System.Security.AccessControl.ControlFlags\"></xref> enumeration combined with a logical OR operation.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl\n  id: DiscretionaryAcl\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: DiscretionaryAcl\n  nameWithType: CommonSecurityDescriptor.DiscretionaryAcl\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets the discretionary access control list (DACL) for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object. The DACL contains access rules.\n  remarks: \"If this property is set to `null`, a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \\n  \\n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.\"\n  syntax:\n    content: public System.Security.AccessControl.DiscretionaryAcl DiscretionaryAcl { get; set; }\n    return:\n      type: System.Security.AccessControl.DiscretionaryAcl\n      description: The DACL for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.Group\n  id: Group\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: Group\n  nameWithType: CommonSecurityDescriptor.Group\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.Group\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets the primary group for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object.\n  syntax:\n    content: public override System.Security.Principal.SecurityIdentifier Group { get; set; }\n    return:\n      type: System.Security.Principal.SecurityIdentifier\n      description: The primary group for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.Group*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer\n  id: IsContainer\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: IsContainer\n  nameWithType: CommonSecurityDescriptor.IsContainer\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a Boolean value that specifies whether the object associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object is a container object.\n  syntax:\n    content: public bool IsContainer { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object is a container object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical\n  id: IsDiscretionaryAclCanonical\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: IsDiscretionaryAclCanonical\n  nameWithType: CommonSecurityDescriptor.IsDiscretionaryAclCanonical\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object is in canonical order.\n  syntax:\n    content: public bool IsDiscretionaryAclCanonical { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object is in canonical order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDS\n  id: IsDS\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: IsDS\n  nameWithType: CommonSecurityDescriptor.IsDS\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsDS\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a Boolean value that specifies whether the object associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object is a directory object.\n  syntax:\n    content: public bool IsDS { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object is a directory object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.IsDS*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical\n  id: IsSystemAclCanonical\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: IsSystemAclCanonical\n  nameWithType: CommonSecurityDescriptor.IsSystemAclCanonical\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object is in canonical order.\n  syntax:\n    content: public bool IsSystemAclCanonical { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object is in canonical order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.Owner\n  id: Owner\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: Owner\n  nameWithType: CommonSecurityDescriptor.Owner\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.Owner\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets the owner of the object associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object.\n  syntax:\n    content: public override System.Security.Principal.SecurityIdentifier Owner { get; set; }\n    return:\n      type: System.Security.Principal.SecurityIdentifier\n      description: The owner of the object associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.Owner*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)\n  id: PurgeAccessControl(System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: PurgeAccessControl(SecurityIdentifier)\n  nameWithType: CommonSecurityDescriptor.PurgeAccessControl(SecurityIdentifier)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(SecurityIdentifier)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules for the specified security identifier from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object.\n  remarks: To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.\n  syntax:\n    content: public void PurgeAccessControl (System.Security.Principal.SecurityIdentifier sid);\n    parameters:\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The security identifier for which to remove access rules.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(System.Security.Principal.SecurityIdentifier)\n  id: PurgeAudit(System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: PurgeAudit(SecurityIdentifier)\n  nameWithType: CommonSecurityDescriptor.PurgeAudit(SecurityIdentifier)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(SecurityIdentifier)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules for the specified security identifier from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object.\n  syntax:\n    content: public void PurgeAudit (System.Security.Principal.SecurityIdentifier sid);\n    parameters:\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The security identifier for which to remove audit rules.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)\n  id: SetDiscretionaryAclProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: SetDiscretionaryAclProtection(Boolean,Boolean)\n  nameWithType: CommonSecurityDescriptor.SetDiscretionaryAclProtection(Boolean,Boolean)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(Boolean,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the inheritance protection for the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object. DACLs that are protected do not inherit access rules from parent containers.\n  syntax:\n    content: public void SetDiscretionaryAclProtection (bool isProtected, bool preserveInheritance);\n    parameters:\n    - id: isProtected\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to protect the DACL from inheritance.\n    - id: preserveInheritance\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to keep inherited access rules in the DACL; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to remove inherited access rules from the DACL.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)\n  id: SetSystemAclProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: SetSystemAclProtection(Boolean,Boolean)\n  nameWithType: CommonSecurityDescriptor.SetSystemAclProtection(Boolean,Boolean)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(Boolean,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the inheritance protection for the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object. SACLs that are protected do not inherit audit rules from parent containers.\n  syntax:\n    content: public void SetSystemAclProtection (bool isProtected, bool preserveInheritance);\n    parameters:\n    - id: isProtected\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to protect the SACL from inheritance.\n    - id: preserveInheritance\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to keep inherited audit rules in the SACL; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to remove inherited audit rules from the SACL.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl\n  id: SystemAcl\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  langs:\n  - csharp\n  name: SystemAcl\n  nameWithType: CommonSecurityDescriptor.SystemAcl\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets the System Access Control List (SACL) for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object. The SACL contains audit rules.\n  syntax:\n    content: public System.Security.AccessControl.SystemAcl SystemAcl { get; set; }\n    return:\n      type: System.Security.AccessControl.SystemAcl\n      description: The SACL for this <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> object.\n  overload: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.AccessControl.GenericSecurityDescriptor\n  isExternal: false\n  name: System.Security.AccessControl.GenericSecurityDescriptor\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)\n  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.RawSecurityDescriptor\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: RawSecurityDescriptor\n  nameWithType: RawSecurityDescriptor\n  fullName: System.Security.AccessControl.RawSecurityDescriptor\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: CommonSecurityDescriptor(Boolean,Boolean,String)\n  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,String)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)\n  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)\n  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)\n- uid: System.Security.AccessControl.ControlFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ControlFlags\n  nameWithType: ControlFlags\n  fullName: System.Security.AccessControl.ControlFlags\n- uid: System.Security.Principal.SecurityIdentifier\n  parent: System.Security.Principal\n  isExternal: false\n  name: SecurityIdentifier\n  nameWithType: SecurityIdentifier\n  fullName: System.Security.Principal.SecurityIdentifier\n- uid: System.Security.AccessControl.SystemAcl\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: SystemAcl\n  nameWithType: SystemAcl\n  fullName: System.Security.AccessControl.SystemAcl\n- uid: System.Security.AccessControl.DiscretionaryAcl\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: DiscretionaryAcl\n  nameWithType: DiscretionaryAcl\n  fullName: System.Security.AccessControl.DiscretionaryAcl\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: AddDiscretionaryAcl(Byte,Int32)\n  nameWithType: CommonSecurityDescriptor.AddDiscretionaryAcl(Byte,Int32)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(Byte,Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: AddSystemAcl(Byte,Int32)\n  nameWithType: CommonSecurityDescriptor.AddSystemAcl(Byte,Int32)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(Byte,Int32)\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: ControlFlags\n  nameWithType: CommonSecurityDescriptor.ControlFlags\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: DiscretionaryAcl\n  nameWithType: CommonSecurityDescriptor.DiscretionaryAcl\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.Group\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: Group\n  nameWithType: CommonSecurityDescriptor.Group\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.Group\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: IsContainer\n  nameWithType: CommonSecurityDescriptor.IsContainer\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: IsDiscretionaryAclCanonical\n  nameWithType: CommonSecurityDescriptor.IsDiscretionaryAclCanonical\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDS\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: IsDS\n  nameWithType: CommonSecurityDescriptor.IsDS\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsDS\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: IsSystemAclCanonical\n  nameWithType: CommonSecurityDescriptor.IsSystemAclCanonical\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.Owner\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: Owner\n  nameWithType: CommonSecurityDescriptor.Owner\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.Owner\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: PurgeAccessControl(SecurityIdentifier)\n  nameWithType: CommonSecurityDescriptor.PurgeAccessControl(SecurityIdentifier)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(SecurityIdentifier)\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: PurgeAudit(SecurityIdentifier)\n  nameWithType: CommonSecurityDescriptor.PurgeAudit(SecurityIdentifier)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(SecurityIdentifier)\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: SetDiscretionaryAclProtection(Boolean,Boolean)\n  nameWithType: CommonSecurityDescriptor.SetDiscretionaryAclProtection(Boolean,Boolean)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(Boolean,Boolean)\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: SetSystemAclProtection(Boolean,Boolean)\n  nameWithType: CommonSecurityDescriptor.SetSystemAclProtection(Boolean,Boolean)\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(Boolean,Boolean)\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: SystemAcl\n  nameWithType: CommonSecurityDescriptor.SystemAcl\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: CommonSecurityDescriptor\n  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl*\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: AddDiscretionaryAcl\n  nameWithType: CommonSecurityDescriptor.AddDiscretionaryAcl\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl*\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: AddSystemAcl\n  nameWithType: CommonSecurityDescriptor.AddSystemAcl\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags*\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: ControlFlags\n  nameWithType: CommonSecurityDescriptor.ControlFlags\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: DiscretionaryAcl\n  nameWithType: CommonSecurityDescriptor.DiscretionaryAcl\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.Group*\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: Group\n  nameWithType: CommonSecurityDescriptor.Group\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer*\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: IsContainer\n  nameWithType: CommonSecurityDescriptor.IsContainer\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical*\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: IsDiscretionaryAclCanonical\n  nameWithType: CommonSecurityDescriptor.IsDiscretionaryAclCanonical\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDS*\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: IsDS\n  nameWithType: CommonSecurityDescriptor.IsDS\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical*\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: IsSystemAclCanonical\n  nameWithType: CommonSecurityDescriptor.IsSystemAclCanonical\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.Owner*\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: Owner\n  nameWithType: CommonSecurityDescriptor.Owner\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl*\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: PurgeAccessControl\n  nameWithType: CommonSecurityDescriptor.PurgeAccessControl\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit*\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: PurgeAudit\n  nameWithType: CommonSecurityDescriptor.PurgeAudit\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection*\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: SetDiscretionaryAclProtection\n  nameWithType: CommonSecurityDescriptor.SetDiscretionaryAclProtection\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection*\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: SetSystemAclProtection\n  nameWithType: CommonSecurityDescriptor.SetSystemAclProtection\n- uid: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*\n  parent: System.Security.AccessControl.CommonSecurityDescriptor\n  isExternal: false\n  name: SystemAcl\n  nameWithType: CommonSecurityDescriptor.SystemAcl\n"}