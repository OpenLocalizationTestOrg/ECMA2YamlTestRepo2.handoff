{"nodes":[{"pos":[782,844],"content":"Activates SOAP-enabled COM+ application proxies from a client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Activates SOAP-enabled COM+ application proxies from a client.","pos":[0,62]}]},{"pos":[856,970],"content":"ClrObjectFactory is used internally by the .NET Framework. You do not need to use the class directly in your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"ClrObjectFactory is used internally by the .NET Framework. You do not need to use the class directly in your code.","pos":[0,114],"nodes":[{"content":"ClrObjectFactory is used internally by the .NET Framework.","pos":[0,58]},{"content":"You do not need to use the class directly in your code.","pos":[59,114]}]}]},{"pos":[1769,1882],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.Internal.ClrObjectFactory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.EnterpriseServices.Internal.ClrObjectFactory\"></xref> class."},{"pos":[2681,2772],"content":"Activates a remote assembly through .NET remoting, using the assembly's configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Activates a remote assembly through .NET remoting, using the assembly's configuration file.","pos":[0,91]}]},{"pos":[2966,3003],"content":"The name of the assembly to activate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the assembly to activate.","pos":[0,37]}]},{"pos":[3068,3101],"content":"The name of the type to activate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type to activate.","pos":[0,33]}]},{"pos":[3162,3171],"content":"Not used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not used.","pos":[0,9]}]},{"pos":[3229,3543],"content":"An instance of the &lt;xref:System.Object&gt; that represents the type, with culture, arguments, and binding and activation attributes set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">TypeName</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter is not found.","needQuote":true,"needEscape":true,"source":"An instance of the <xref:System.Object> that represents the type, with culture, arguments, and binding and activation attributes set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <code>TypeName</code> parameter is not found."},{"pos":[3754,3831],"content":"A caller in the call chain does not have permission to access unmanaged code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A caller in the call chain does not have permission to access unmanaged code.","pos":[0,77]}]},{"pos":[3964,3992],"content":"The class is not registered.","needQuote":true,"needEscape":true,"nodes":[{"content":"The class is not registered.","pos":[0,28]}]},{"pos":[4579,4764],"content":"Activates a remote assembly through .NET remoting, using the remote assembly's mailbox. Currently not implemented; throws a <xref:System.Runtime.InteropServices.COMException> if called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Activates a remote assembly through .NET remoting, using the remote assembly's mailbox. Currently not implemented; throws a <xref:System.Runtime.InteropServices.COMException> if called.","pos":[0,185],"nodes":[{"content":"Activates a remote assembly through .NET remoting, using the remote assembly's mailbox.","pos":[0,87]},{"content":"Currently not implemented; throws a &lt;xref:System.Runtime.InteropServices.COMException&gt; if called.","pos":[88,185],"source":" Currently not implemented; throws a <xref:System.Runtime.InteropServices.COMException> if called."}]}]},{"pos":[4776,4806],"content":"Throws an exception if called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Throws an exception if called.","pos":[0,30]}]},{"pos":[4972,5001],"content":"A mailbox on the Web service.","needQuote":true,"needEscape":true,"nodes":[{"content":"A mailbox on the Web service.","pos":[0,29]}]},{"pos":[5062,5071],"content":"Not used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not used.","pos":[0,9]}]},{"pos":[5129,5171],"content":"This method throws an exception if called.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method throws an exception if called.","pos":[0,42]}]},{"pos":[5401,5457],"content":"Simple Mail Transfer Protocol (SMTP) is not implemented.","needQuote":true,"needEscape":true,"nodes":[{"content":"Simple Mail Transfer Protocol (SMTP) is not implemented.","pos":[0,56]}]},{"pos":[6034,6135],"content":"Activates a remote assembly through .NET remoting, using the virtual root URL of the remote assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Activates a remote assembly through .NET remoting, using the virtual root URL of the remote assembly.","pos":[0,101]}]},{"pos":[6148,6725],"content":"CreateFromVroot appends the string \"?wsdl\" to `VrootUrl` and calls <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl%2A> to activate the remote object.       The version of SOAP used by .NET remoting is RPC/encoded, not document/literal, which is required for SOAP interoperability. Therefore, CreateFromVroot will not work with most ASMX Web services.       CreateFromVroot requires administrative privileges on the local computer the first time it is run, because it creates and installs a client proxy for communication with the remote assembly.","needQuote":false,"needEscape":true,"nodes":[{"content":"CreateFromVroot appends the string \"?wsdl\" to <ph id=\"ph1\">`VrootUrl`</ph> and calls &lt;xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl%2A&gt; to activate the remote object.","pos":[0,174],"source":"CreateFromVroot appends the string \"?wsdl\" to `VrootUrl` and calls <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl%2A> to activate the remote object."},{"content":"The version of SOAP used by .NET remoting is RPC/encoded, not document/literal, which is required for SOAP interoperability.","pos":[181,305]},{"content":"Therefore, CreateFromVroot will not work with most ASMX Web services.","pos":[306,375]},{"content":"CreateFromVroot requires administrative privileges on the local computer the first time it is run, because it creates and installs a client proxy for communication with the remote assembly.","pos":[382,571]}]},{"pos":[6892,6943],"content":"The virtual root URL of the object to be activated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual root URL of the object to be activated.","pos":[0,51]}]},{"pos":[7004,7013],"content":"Not used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not used.","pos":[0,9]}]},{"pos":[7071,7409],"content":"An instance of the &lt;xref:System.Object&gt; representing the type, with culture, arguments, and binding and activation attributes set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the assembly identified by the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">VrootUrl</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter is not found.","needQuote":true,"needEscape":true,"source":"An instance of the <xref:System.Object> representing the type, with culture, arguments, and binding and activation attributes set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the assembly identified by the <code>VrootUrl</code> parameter is not found."},{"pos":[7617,7694],"content":"A caller in the call chain does not have permission to access unmanaged code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A caller in the call chain does not have permission to access unmanaged code.","pos":[0,77]}]},{"pos":[7827,7864],"content":"The thread token could not be opened.","needQuote":true,"needEscape":true,"nodes":[{"content":"The thread token could not be opened.","pos":[0,37]}]},{"pos":[8436,8561],"content":"Activates a remote assembly through .NET remoting, using the Web Services Description Language (WSDL) of the XML Web service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Activates a remote assembly through .NET remoting, using the Web Services Description Language (WSDL) of the XML Web service.","pos":[0,125]}]},{"pos":[8574,9073],"content":"Processes the WSDL passed in and, if necessary, generates a proxy, then activates the remote object.       The version of SOAP used by .NET remoting is RPC/encoded, not document/literal, which is required for SOAP interoperability. Therefore, CreateFromWsdl will not work with most ASMX Web services.       CreateFromWsdl requires administrative privileges on the local computer the first time it is run, because it creates and installs a client proxy for communication with the remote assembly.","needQuote":false,"needEscape":true,"nodes":[{"content":"Processes the WSDL passed in and, if necessary, generates a proxy, then activates the remote object.       The version of SOAP used by .NET remoting is RPC/encoded, not document/literal, which is required for SOAP interoperability. Therefore, CreateFromWsdl will not work with most ASMX Web services.       CreateFromWsdl requires administrative privileges on the local computer the first time it is run, because it creates and installs a client proxy for communication with the remote assembly.","pos":[0,495],"nodes":[{"content":"Processes the WSDL passed in and, if necessary, generates a proxy, then activates the remote object.","pos":[0,100]},{"content":"The version of SOAP used by .NET remoting is RPC/encoded, not document/literal, which is required for SOAP interoperability.","pos":[107,231]},{"content":"Therefore, CreateFromWsdl will not work with most ASMX Web services.","pos":[232,300]},{"content":"CreateFromWsdl requires administrative privileges on the local computer the first time it is run, because it creates and installs a client proxy for communication with the remote assembly.","pos":[307,495]}]}]},{"pos":[9237,9269],"content":"The WSDL URL of the Web service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The WSDL URL of the Web service.","pos":[0,32]}]},{"pos":[9330,9339],"content":"Not used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not used.","pos":[0,9]}]},{"pos":[9397,9734],"content":"An instance of the &lt;xref:System.Object&gt; representing the type, with culture, arguments, and binding and activation attributes set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the assembly identified by the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">WsdlUrl</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter is not found.","needQuote":true,"needEscape":true,"source":"An instance of the <xref:System.Object> representing the type, with culture, arguments, and binding and activation attributes set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the assembly identified by the <code>WsdlUrl</code> parameter is not found."},{"pos":[9941,10018],"content":"A caller in the call chain does not have permission to access unmanaged code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A caller in the call chain does not have permission to access unmanaged code.","pos":[0,77]}]},{"pos":[10151,10188],"content":"The thread token could not be opened.","needQuote":true,"needEscape":true,"nodes":[{"content":"The thread token could not be opened.","pos":[0,37]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.EnterpriseServices.Internal.ClrObjectFactory\n  id: ClrObjectFactory\n  children:\n  - System.EnterpriseServices.Internal.ClrObjectFactory.#ctor\n  - System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)\n  - System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromMailbox(System.String,System.String)\n  - System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot(System.String,System.String)\n  - System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl(System.String,System.String)\n  langs:\n  - csharp\n  name: ClrObjectFactory\n  nameWithType: ClrObjectFactory\n  fullName: System.EnterpriseServices.Internal.ClrObjectFactory\n  type: Class\n  summary: Activates SOAP-enabled COM+ application proxies from a client.\n  remarks: ClrObjectFactory is used internally by the .NET Framework. You do not need to use the class directly in your code.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.Guid(\"ecabafd1-7f19-11d2-978e-0000f8757e2a\")]\n\n      public class ClrObjectFactory : System.EnterpriseServices.Internal.IClrObjectFactory\n  inheritance:\n  - System.Object\n  implements:\n  - System.EnterpriseServices.Internal.IClrObjectFactory\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.ClrObjectFactory.#ctor\n  id: '#ctor'\n  parent: System.EnterpriseServices.Internal.ClrObjectFactory\n  langs:\n  - csharp\n  name: ClrObjectFactory()\n  nameWithType: ClrObjectFactory.ClrObjectFactory()\n  fullName: System.EnterpriseServices.Internal.ClrObjectFactory.ClrObjectFactory()\n  type: Constructor\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Initializes a new instance of the <xref href=\"System.EnterpriseServices.Internal.ClrObjectFactory\"></xref> class.\n  syntax:\n    content: public ClrObjectFactory ();\n    parameters: []\n  overload: System.EnterpriseServices.Internal.ClrObjectFactory.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)\n  id: CreateFromAssembly(System.String,System.String,System.String)\n  parent: System.EnterpriseServices.Internal.ClrObjectFactory\n  langs:\n  - csharp\n  name: CreateFromAssembly(String,String,String)\n  nameWithType: ClrObjectFactory.CreateFromAssembly(String,String,String)\n  fullName: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromAssembly(String,String,String)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Activates a remote assembly through .NET remoting, using the assembly's configuration file.\n  syntax:\n    content: public object CreateFromAssembly (string AssemblyName, string TypeName, string Mode);\n    parameters:\n    - id: AssemblyName\n      type: System.String\n      description: The name of the assembly to activate.\n    - id: TypeName\n      type: System.String\n      description: The name of the type to activate.\n    - id: Mode\n      type: System.String\n      description: Not used.\n    return:\n      type: System.Object\n      description: An instance of the <xref:System.Object> that represents the type, with culture, arguments, and binding and activation attributes set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <code>TypeName</code> parameter is not found.\n  overload: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromAssembly*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: A caller in the call chain does not have permission to access unmanaged code.\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: The class is not registered.\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromMailbox(System.String,System.String)\n  id: CreateFromMailbox(System.String,System.String)\n  parent: System.EnterpriseServices.Internal.ClrObjectFactory\n  langs:\n  - csharp\n  name: CreateFromMailbox(String,String)\n  nameWithType: ClrObjectFactory.CreateFromMailbox(String,String)\n  fullName: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromMailbox(String,String)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Activates a remote assembly through .NET remoting, using the remote assembly's mailbox. Currently not implemented; throws a <xref:System.Runtime.InteropServices.COMException> if called.\n  remarks: Throws an exception if called.\n  syntax:\n    content: public object CreateFromMailbox (string Mailbox, string Mode);\n    parameters:\n    - id: Mailbox\n      type: System.String\n      description: A mailbox on the Web service.\n    - id: Mode\n      type: System.String\n      description: Not used.\n    return:\n      type: System.Object\n      description: This method throws an exception if called.\n  overload: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromMailbox*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: Simple Mail Transfer Protocol (SMTP) is not implemented.\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot(System.String,System.String)\n  id: CreateFromVroot(System.String,System.String)\n  parent: System.EnterpriseServices.Internal.ClrObjectFactory\n  langs:\n  - csharp\n  name: CreateFromVroot(String,String)\n  nameWithType: ClrObjectFactory.CreateFromVroot(String,String)\n  fullName: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot(String,String)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Activates a remote assembly through .NET remoting, using the virtual root URL of the remote assembly.\n  remarks: \"CreateFromVroot appends the string \\\"?wsdl\\\" to `VrootUrl` and calls <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl%2A> to activate the remote object.  \\n  \\n The version of SOAP used by .NET remoting is RPC/encoded, not document/literal, which is required for SOAP interoperability. Therefore, CreateFromVroot will not work with most ASMX Web services.  \\n  \\n CreateFromVroot requires administrative privileges on the local computer the first time it is run, because it creates and installs a client proxy for communication with the remote assembly.\"\n  syntax:\n    content: public object CreateFromVroot (string VrootUrl, string Mode);\n    parameters:\n    - id: VrootUrl\n      type: System.String\n      description: The virtual root URL of the object to be activated.\n    - id: Mode\n      type: System.String\n      description: Not used.\n    return:\n      type: System.Object\n      description: An instance of the <xref:System.Object> representing the type, with culture, arguments, and binding and activation attributes set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the assembly identified by the <code>VrootUrl</code> parameter is not found.\n  overload: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: A caller in the call chain does not have permission to access unmanaged code.\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: The thread token could not be opened.\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl(System.String,System.String)\n  id: CreateFromWsdl(System.String,System.String)\n  parent: System.EnterpriseServices.Internal.ClrObjectFactory\n  langs:\n  - csharp\n  name: CreateFromWsdl(String,String)\n  nameWithType: ClrObjectFactory.CreateFromWsdl(String,String)\n  fullName: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl(String,String)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Activates a remote assembly through .NET remoting, using the Web Services Description Language (WSDL) of the XML Web service.\n  remarks: \"Processes the WSDL passed in and, if necessary, generates a proxy, then activates the remote object.  \\n  \\n The version of SOAP used by .NET remoting is RPC/encoded, not document/literal, which is required for SOAP interoperability. Therefore, CreateFromWsdl will not work with most ASMX Web services.  \\n  \\n CreateFromWsdl requires administrative privileges on the local computer the first time it is run, because it creates and installs a client proxy for communication with the remote assembly.\"\n  syntax:\n    content: public object CreateFromWsdl (string WsdlUrl, string Mode);\n    parameters:\n    - id: WsdlUrl\n      type: System.String\n      description: The WSDL URL of the Web service.\n    - id: Mode\n      type: System.String\n      description: Not used.\n    return:\n      type: System.Object\n      description: An instance of the <xref:System.Object> representing the type, with culture, arguments, and binding and activation attributes set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the assembly identified by the <code>WsdlUrl</code> parameter is not found.\n  overload: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: A caller in the call chain does not have permission to access unmanaged code.\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: The thread token could not be opened.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.Runtime.InteropServices.COMException\n  isExternal: true\n  name: System.Runtime.InteropServices.COMException\n- uid: System.EnterpriseServices.Internal.ClrObjectFactory.#ctor\n  parent: System.EnterpriseServices.Internal.ClrObjectFactory\n  isExternal: false\n  name: ClrObjectFactory()\n  nameWithType: ClrObjectFactory.ClrObjectFactory()\n  fullName: System.EnterpriseServices.Internal.ClrObjectFactory.ClrObjectFactory()\n- uid: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)\n  parent: System.EnterpriseServices.Internal.ClrObjectFactory\n  isExternal: false\n  name: CreateFromAssembly(String,String,String)\n  nameWithType: ClrObjectFactory.CreateFromAssembly(String,String,String)\n  fullName: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromAssembly(String,String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromMailbox(System.String,System.String)\n  parent: System.EnterpriseServices.Internal.ClrObjectFactory\n  isExternal: false\n  name: CreateFromMailbox(String,String)\n  nameWithType: ClrObjectFactory.CreateFromMailbox(String,String)\n  fullName: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromMailbox(String,String)\n- uid: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot(System.String,System.String)\n  parent: System.EnterpriseServices.Internal.ClrObjectFactory\n  isExternal: false\n  name: CreateFromVroot(String,String)\n  nameWithType: ClrObjectFactory.CreateFromVroot(String,String)\n  fullName: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot(String,String)\n- uid: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl(System.String,System.String)\n  parent: System.EnterpriseServices.Internal.ClrObjectFactory\n  isExternal: false\n  name: CreateFromWsdl(String,String)\n  nameWithType: ClrObjectFactory.CreateFromWsdl(String,String)\n  fullName: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl(String,String)\n- uid: System.EnterpriseServices.Internal.ClrObjectFactory.#ctor*\n  parent: System.EnterpriseServices.Internal.ClrObjectFactory\n  isExternal: false\n  name: ClrObjectFactory\n  nameWithType: ClrObjectFactory.ClrObjectFactory\n- uid: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromAssembly*\n  parent: System.EnterpriseServices.Internal.ClrObjectFactory\n  isExternal: false\n  name: CreateFromAssembly\n  nameWithType: ClrObjectFactory.CreateFromAssembly\n- uid: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromMailbox*\n  parent: System.EnterpriseServices.Internal.ClrObjectFactory\n  isExternal: false\n  name: CreateFromMailbox\n  nameWithType: ClrObjectFactory.CreateFromMailbox\n- uid: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot*\n  parent: System.EnterpriseServices.Internal.ClrObjectFactory\n  isExternal: false\n  name: CreateFromVroot\n  nameWithType: ClrObjectFactory.CreateFromVroot\n- uid: System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl*\n  parent: System.EnterpriseServices.Internal.ClrObjectFactory\n  isExternal: false\n  name: CreateFromWsdl\n  nameWithType: ClrObjectFactory.CreateFromWsdl\n"}