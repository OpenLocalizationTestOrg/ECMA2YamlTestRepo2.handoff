{"nodes":[{"pos":[731,826],"content":"Provides a multilevel switch to control tracing and debug output without recompiling your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a multilevel switch to control tracing and debug output without recompiling your code.","pos":[0,95]}]},{"pos":[839,5000],"content":"You can use a trace switch to filter out messages based on their importance. The TraceSwitch class provides the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties to test the level of the switch. The <xref:System.Diagnostics.TraceSwitch.Level%2A> property gets or sets the switch's <xref:System.Diagnostics.TraceLevel>.       You can set the level of a TraceSwitch through the application configuration file and then use the configured TraceSwitch level in your application. Alternately, you can create a TraceSwitch in your code and set the level directly to instrument a specific section of code.       To configure a TraceSwitch, edit the   for your application. In this file, you can add or remove a switch, set a switch's value, or clear all the switches previously set by the application. The configuration file should be formatted like the following example:      ```   <configuration>     <system.diagnostics>       <switches>         <add name=\"mySwitch\" value=\"1\" />       </switches>     </system.diagnostics>   </configuration>   ```       This configuration section defines a TraceSwitch with the <xref:System.Diagnostics.Switch.DisplayName%2A> set to `mySwitch`, and the <xref:System.Diagnostics.TraceSwitch.Level%2A> set to 1, which corresponds to the enumeration value <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.      > [!NOTE] >  In the .NET Framework version 2.0, you can use text to specify the value for a switch. For example, `true` for a <xref:System.Diagnostics.BooleanSwitch> or the text representing an enumeration value, such as `Error` for a TraceSwitch. The line `<add name=\"mySwitch\" value=\"Error\" />` is equivalent to `<add name=\"mySwitch\" value=\"1\" />`.       In your application, you can use the configured switch level by creating a TraceSwitch with the same name, as shown in the following example:       [!code-vb[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_0_1.vb)]  [!code-cpp[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/cpp/t-system.diagnostics.tra_0_1.cpp)]  [!code-cs[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/csharp/t-system.diagnostics.tra_0_1.cs)]       By default, the switch <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set using the value specified in the configuration file. If the <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> constructor cannot find initial switch settings in the configuration file, the <xref:System.Diagnostics.TraceSwitch.Level%2A> of the new switch defaults to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.       You must enable tracing or debugging to use a switch. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.      -   To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.      -   To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file. In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.      > [!NOTE] >  These debug and trace compiler switches are not required when using the TraceSwitch class in isolation. They are only required in conjunction with <xref:System.Diagnostics.Trace> or <xref:System.Diagnostics.Debug> methods that are conditionally compiled.       For more information on instrumenting your application, see <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace>. For more information about configuring and using trace switches, see [Trace Switches](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  To improve performance, you can make TraceSwitch members `static` in your class.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can use a trace switch to filter out messages based on their importance.","pos":[0,76]},{"content":"The TraceSwitch class provides the &lt;xref:System.Diagnostics.TraceSwitch.TraceError%2A&gt;, &lt;xref:System.Diagnostics.TraceSwitch.TraceWarning%2A&gt;, &lt;xref:System.Diagnostics.TraceSwitch.TraceInfo%2A&gt;, and &lt;xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A&gt; properties to test the level of the switch.","pos":[77,373],"source":" The TraceSwitch class provides the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties to test the level of the switch."},{"content":"The &lt;xref:System.Diagnostics.TraceSwitch.Level%2A&gt; property gets or sets the switch's &lt;xref:System.Diagnostics.TraceLevel&gt;.","pos":[374,497],"source":" The <xref:System.Diagnostics.TraceSwitch.Level%2A> property gets or sets the switch's <xref:System.Diagnostics.TraceLevel>."},{"content":"You can set the level of a TraceSwitch through the application configuration file and then use the configured TraceSwitch level in your application.","pos":[504,652]},{"content":"Alternately, you can create a TraceSwitch in your code and set the level directly to instrument a specific section of code.","pos":[653,776]},{"content":"To configure a TraceSwitch, edit the   for your application.","pos":[783,843]},{"content":"In this file, you can add or remove a switch, set a switch's value, or clear all the switches previously set by the application.","pos":[844,972]},{"content":"The configuration file should be formatted like the following example:      <ph id=\"ph1\">```   &lt;configuration&gt;     &lt;system.diagnostics&gt;       &lt;switches&gt;         &lt;add name=\"mySwitch\" value=\"1\" /&gt;       &lt;/switches&gt;     &lt;/system.diagnostics&gt;   &lt;/configuration&gt;   ```</ph>       This configuration section defines a TraceSwitch with the &lt;xref:System.Diagnostics.Switch.DisplayName%2A&gt; set to <ph id=\"ph2\">`mySwitch`</ph>, and the &lt;xref:System.Diagnostics.TraceSwitch.Level%2A&gt; set to 1, which corresponds to the enumeration value &lt;xref:System.Diagnostics.TraceLevel?displayProperty=fullName&gt;.","pos":[973,1525],"source":" The configuration file should be formatted like the following example:      ```   <configuration>     <system.diagnostics>       <switches>         <add name=\"mySwitch\" value=\"1\" />       </switches>     </system.diagnostics>   </configuration>   ```       This configuration section defines a TraceSwitch with the <xref:System.Diagnostics.Switch.DisplayName%2A> set to `mySwitch`, and the <xref:System.Diagnostics.TraceSwitch.Level%2A> set to 1, which corresponds to the enumeration value <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In the .NET Framework version 2.0, you can use text to specify the value for a switch.","pos":[1531,1630],"source":"      > [!NOTE] >  In the .NET Framework version 2.0, you can use text to specify the value for a switch."},{"content":"For example, <ph id=\"ph1\">`true`</ph> for a &lt;xref:System.Diagnostics.BooleanSwitch&gt; or the text representing an enumeration value, such as <ph id=\"ph2\">`Error`</ph> for a TraceSwitch.","pos":[1631,1778],"source":" For example, `true` for a <xref:System.Diagnostics.BooleanSwitch> or the text representing an enumeration value, such as `Error` for a TraceSwitch."},{"content":"The line <ph id=\"ph1\">`&lt;add name=\"mySwitch\" value=\"Error\" /&gt;`</ph> is equivalent to <ph id=\"ph2\">`&lt;add name=\"mySwitch\" value=\"1\" /&gt;`</ph>.","pos":[1779,1881],"source":" The line `<add name=\"mySwitch\" value=\"Error\" />` is equivalent to `<add name=\"mySwitch\" value=\"1\" />`."},{"content":"In your application, you can use the configured switch level by creating a TraceSwitch with the same name, as shown in the following example:       <bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>Classic TraceSwitch.TraceError Example#3<ept id=\"p2\">](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_0_1.vb)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-cpp</bpt><bpt id=\"p4\">[</bpt>Classic TraceSwitch.TraceError Example#3<ept id=\"p4\">](~/add/codesnippet/cpp/t-system.diagnostics.tra_0_1.cpp)</ept><ept id=\"p3\">]</ept>  <bpt id=\"p5\">[!code-cs</bpt><bpt id=\"p6\">[</bpt>Classic TraceSwitch.TraceError Example#3<ept id=\"p6\">](~/add/codesnippet/csharp/t-system.diagnostics.tra_0_1.cs)</ept><ept id=\"p5\">]</ept>       By default, the switch &lt;xref:System.Diagnostics.TraceSwitch.Level%2A&gt; property is set using the value specified in the configuration file.","pos":[1888,2519],"source":"       In your application, you can use the configured switch level by creating a TraceSwitch with the same name, as shown in the following example:       [!code-vb[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_0_1.vb)]  [!code-cpp[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/cpp/t-system.diagnostics.tra_0_1.cpp)]  [!code-cs[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/csharp/t-system.diagnostics.tra_0_1.cs)]       By default, the switch <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set using the value specified in the configuration file."},{"content":"If the &lt;xref:System.Diagnostics.TraceSwitch.%23ctor%2A&gt; constructor cannot find initial switch settings in the configuration file, the &lt;xref:System.Diagnostics.TraceSwitch.Level%2A&gt; of the new switch defaults to &lt;xref:System.Diagnostics.TraceLevel?displayProperty=fullName&gt;.","pos":[2520,2794],"source":" If the <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> constructor cannot find initial switch settings in the configuration file, the <xref:System.Diagnostics.TraceSwitch.Level%2A> of the new switch defaults to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>."},{"content":"You must enable tracing or debugging to use a switch.","pos":[2801,2854]},{"content":"The following syntax is compiler specific.","pos":[2855,2897]},{"content":"If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.","pos":[2898,2995]},{"content":"-   To enable debugging in C#, add the <ph id=\"ph1\">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or add <ph id=\"ph2\">`#define DEBUG`</ph> to the top of your file.","pos":[3001,3160],"source":"      -   To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or add `#define DEBUG` to the top of your file."},{"content":"In Visual Basic, add the <ph id=\"ph1\">`/d:DEBUG=True`</ph> flag to the compiler command line.","pos":[3161,3236],"source":" In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line."},{"content":"-   To enable tracing in C#, add the <ph id=\"ph1\">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id=\"ph2\">`#define TRACE`</ph> to the top of your file.","pos":[3242,3399],"source":"      -   To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file."},{"content":"In Visual Basic, add the <ph id=\"ph1\">`/d:TRACE=True`</ph> flag to the compiler command line.","pos":[3400,3475],"source":" In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  These debug and trace compiler switches are not required when using the TraceSwitch class in isolation.","pos":[3481,3597],"source":"      > [!NOTE] >  These debug and trace compiler switches are not required when using the TraceSwitch class in isolation."},{"content":"They are only required in conjunction with &lt;xref:System.Diagnostics.Trace&gt; or &lt;xref:System.Diagnostics.Debug&gt; methods that are conditionally compiled.","pos":[3598,3748],"source":" They are only required in conjunction with <xref:System.Diagnostics.Trace> or <xref:System.Diagnostics.Debug> methods that are conditionally compiled."},{"content":"For more information on instrumenting your application, see &lt;xref:System.Diagnostics.Debug&gt; and &lt;xref:System.Diagnostics.Trace&gt;.","pos":[3755,3883],"source":"       For more information on instrumenting your application, see <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace>."},{"content":"For more information about configuring and using trace switches, see <bpt id=\"p1\">[</bpt>Trace Switches<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[3884,4009],"source":" For more information about configuring and using trace switches, see [Trace Switches](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To improve performance, you can make TraceSwitch members <ph id=\"ph2\">`static`</ph> in your class.","pos":[4015,4108],"source":"      > [!NOTE] >  To improve performance, you can make TraceSwitch members `static` in your class."}]},{"pos":[6877,7019],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.TraceSwitch\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, using the specified display name and description.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.TraceSwitch\"></xref> class, using the specified display name and description."},{"pos":[7032,9407],"content":"To set the level of your <xref:System.Diagnostics.TraceSwitch>, edit the configuration file that corresponds to the name of your application. In this file, you can add a switch and set its value, remove a switch, or clear all the switches previously set by the application. The configuration file should be formatted like the following example:      ```   <configuration>     <system.diagnostics>       <switches>         <add name=\"mySwitch\" value=\"1\" />       </switches>     </system.diagnostics>   </configuration>   ```      > [!NOTE] >  In the .NET Framework version 2.0, you can use text to specify the value for a switch. For example, `true` for a <xref:System.Diagnostics.BooleanSwitch> or the text representing an enumeration value, such as `Error` for a <xref:System.Diagnostics.TraceSwitch>. The line `<add name=\"mySwitch\" value=\"Error\" />` is equivalent to `<add name=\"mySwitch\" value=\"1\" />`.       In your application, you can use the configured switch level by creating a <xref:System.Diagnostics.TraceSwitch> with the same name, as shown in the following example:       [!code-vb[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_27_1.vb)]  [!code-cpp[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/cpp/m-system.diagnostics.tra_27_1.cpp)]  [!code-cs[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/csharp/m-system.diagnostics.tra_27_1.cs)]       When the <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> constructor cannot find initial switch settings in the configuration file, the <xref:System.Diagnostics.TraceSwitch.Level%2A> property of the new switch is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.       The <xref:System.Diagnostics.TraceSwitch> class provides the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties to test the <xref:System.Diagnostics.TraceSwitch.Level%2A> of the switch. The <xref:System.Diagnostics.TraceSwitch.Level%2A> property gets or sets the switch's <xref:System.Diagnostics.TraceLevel>.      > [!NOTE] >  To improve performance, you can make <xref:System.Diagnostics.TraceSwitch> members `static` in your class.","needQuote":false,"needEscape":true,"nodes":[{"content":"To set the level of your &lt;xref:System.Diagnostics.TraceSwitch&gt;, edit the configuration file that corresponds to the name of your application.","pos":[0,141],"source":"To set the level of your <xref:System.Diagnostics.TraceSwitch>, edit the configuration file that corresponds to the name of your application."},{"content":"In this file, you can add a switch and set its value, remove a switch, or clear all the switches previously set by the application.","pos":[142,273]},{"content":"The configuration file should be formatted like the following example:      <ph id=\"ph1\">```   &lt;configuration&gt;     &lt;system.diagnostics&gt;       &lt;switches&gt;         &lt;add name=\"mySwitch\" value=\"1\" /&gt;       &lt;/switches&gt;     &lt;/system.diagnostics&gt;   &lt;/configuration&gt;   ```</ph><ph id=\"ph2\">      &gt; </ph><ph id=\"ph3\">[!NOTE]</ph> &gt;  In the .NET Framework version 2.0, you can use text to specify the value for a switch.","pos":[274,629],"source":" The configuration file should be formatted like the following example:      ```   <configuration>     <system.diagnostics>       <switches>         <add name=\"mySwitch\" value=\"1\" />       </switches>     </system.diagnostics>   </configuration>   ```      > [!NOTE] >  In the .NET Framework version 2.0, you can use text to specify the value for a switch."},{"content":"For example, <ph id=\"ph1\">`true`</ph> for a &lt;xref:System.Diagnostics.BooleanSwitch&gt; or the text representing an enumeration value, such as <ph id=\"ph2\">`Error`</ph> for a &lt;xref:System.Diagnostics.TraceSwitch&gt;.","pos":[630,803],"source":" For example, `true` for a <xref:System.Diagnostics.BooleanSwitch> or the text representing an enumeration value, such as `Error` for a <xref:System.Diagnostics.TraceSwitch>."},{"content":"The line <ph id=\"ph1\">`&lt;add name=\"mySwitch\" value=\"Error\" /&gt;`</ph> is equivalent to <ph id=\"ph2\">`&lt;add name=\"mySwitch\" value=\"1\" /&gt;`</ph>.","pos":[804,906],"source":" The line `<add name=\"mySwitch\" value=\"Error\" />` is equivalent to `<add name=\"mySwitch\" value=\"1\" />`."},{"content":"In your application, you can use the configured switch level by creating a &lt;xref:System.Diagnostics.TraceSwitch&gt; with the same name, as shown in the following example:       <bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>Classic TraceSwitch.TraceError Example#3<ept id=\"p2\">](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_27_1.vb)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-cpp</bpt><bpt id=\"p4\">[</bpt>Classic TraceSwitch.TraceError Example#3<ept id=\"p4\">](~/add/codesnippet/cpp/m-system.diagnostics.tra_27_1.cpp)</ept><ept id=\"p3\">]</ept>  <bpt id=\"p5\">[!code-cs</bpt><bpt id=\"p6\">[</bpt>Classic TraceSwitch.TraceError Example#3<ept id=\"p6\">](~/add/codesnippet/csharp/m-system.diagnostics.tra_27_1.cs)</ept><ept id=\"p5\">]</ept>       When the &lt;xref:System.Diagnostics.TraceSwitch.%23ctor%2A&gt; constructor cannot find initial switch settings in the configuration file, the &lt;xref:System.Diagnostics.TraceSwitch.Level%2A&gt; property of the new switch is set to &lt;xref:System.Diagnostics.TraceLevel?displayProperty=fullName&gt;.","pos":[913,1718],"source":"       In your application, you can use the configured switch level by creating a <xref:System.Diagnostics.TraceSwitch> with the same name, as shown in the following example:       [!code-vb[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_27_1.vb)]  [!code-cpp[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/cpp/m-system.diagnostics.tra_27_1.cpp)]  [!code-cs[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/csharp/m-system.diagnostics.tra_27_1.cs)]       When the <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> constructor cannot find initial switch settings in the configuration file, the <xref:System.Diagnostics.TraceSwitch.Level%2A> property of the new switch is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>."},{"content":"The &lt;xref:System.Diagnostics.TraceSwitch&gt; class provides the &lt;xref:System.Diagnostics.TraceSwitch.TraceError%2A&gt;, &lt;xref:System.Diagnostics.TraceSwitch.TraceWarning%2A&gt;, &lt;xref:System.Diagnostics.TraceSwitch.TraceInfo%2A&gt;, and &lt;xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A&gt; properties to test the &lt;xref:System.Diagnostics.TraceSwitch.Level%2A&gt; of the switch.","pos":[1725,2088],"source":"       The <xref:System.Diagnostics.TraceSwitch> class provides the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties to test the <xref:System.Diagnostics.TraceSwitch.Level%2A> of the switch."},{"content":"The &lt;xref:System.Diagnostics.TraceSwitch.Level%2A&gt; property gets or sets the switch's &lt;xref:System.Diagnostics.TraceLevel&gt;.","pos":[2089,2212],"source":" The <xref:System.Diagnostics.TraceSwitch.Level%2A> property gets or sets the switch's <xref:System.Diagnostics.TraceLevel>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To improve performance, you can make &lt;xref:System.Diagnostics.TraceSwitch&gt; members <ph id=\"ph2\">`static`</ph> in your class.","pos":[2218,2337],"source":"      > [!NOTE] >  To improve performance, you can make <xref:System.Diagnostics.TraceSwitch> members `static` in your class."}]},{"pos":[10510,10550],"content":"The name to display on a user interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name to display on a user interface.","pos":[0,40]}]},{"pos":[10618,10648],"content":"The description of the switch.","needQuote":true,"needEscape":true,"nodes":[{"content":"The description of the switch.","pos":[0,30]}]},{"pos":[11213,11386],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.TraceSwitch\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, using the specified display name, description, and default value for the switch.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.TraceSwitch\"></xref> class, using the specified display name, description, and default value for the switch."},{"pos":[11398,11931],"content":"The `displayName` parameter is used to set the value of the <xref:System.Diagnostics.Switch.DisplayName%2A> property, the `description` parameter is use to set the value of the <xref:System.Diagnostics.Switch.Description%2A> property, and the `defaultSwitchValue` parameter is saved as a field and used to initialize the <xref:System.Diagnostics.Switch.Value%2A> property on first reference. See the <xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29> constructor for more information and a code example.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`displayName`</ph> parameter is used to set the value of the &lt;xref:System.Diagnostics.Switch.DisplayName%2A&gt; property, the <ph id=\"ph2\">`description`</ph> parameter is use to set the value of the &lt;xref:System.Diagnostics.Switch.Description%2A&gt; property, and the <ph id=\"ph3\">`defaultSwitchValue`</ph> parameter is saved as a field and used to initialize the &lt;xref:System.Diagnostics.Switch.Value%2A&gt; property on first reference.","pos":[0,391],"source":"The `displayName` parameter is used to set the value of the <xref:System.Diagnostics.Switch.DisplayName%2A> property, the `description` parameter is use to set the value of the <xref:System.Diagnostics.Switch.Description%2A> property, and the `defaultSwitchValue` parameter is saved as a field and used to initialize the <xref:System.Diagnostics.Switch.Value%2A> property on first reference."},{"content":"See the &lt;xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29&gt; constructor for more information and a code example.","pos":[392,533],"source":" See the <xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29> constructor for more information and a code example."}]},{"pos":[12126,12166],"content":"The name to display on a user interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name to display on a user interface.","pos":[0,40]}]},{"pos":[12234,12264],"content":"The description of the switch.","needQuote":true,"needEscape":true,"nodes":[{"content":"The description of the switch.","pos":[0,30]}]},{"pos":[12339,12371],"content":"The default value of the switch.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default value of the switch.","pos":[0,32]}]},{"pos":[12761,12837],"content":"Gets or sets the trace level that determines the messages the switch allows.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the trace level that determines the messages the switch allows.","pos":[0,76]}]},{"pos":[12850,14435],"content":"To set the level of your <xref:System.Diagnostics.TraceSwitch>, edit the configuration file that corresponds to the name of your application. In this file, you can add a switch and set its value, remove a switch, or clear all the switches previously set by the application. The configuration file should be formatted like the following example:      ```   <configuration>     <system.diagnostics>       <switches>         <add name=\"mySwitch\" value=\"0\" />         <add name=\"myNewSwitch\" value=\"3\" />         <remove name=\"mySwitch\" />         <clear/>       </switches>     </system.diagnostics>   </configuration>   ```      > [!NOTE] >  In the .NET Framework version 2.0, you can use text to specify the value for a switch. For example, `true` for a <xref:System.Diagnostics.BooleanSwitch> or the text representing an enumeration value, such as `Error` for a <xref:System.Diagnostics.TraceSwitch>. The line `<add name=\"mySwitch\" value=\"Error\" />` is equivalent to `<add name=\"mySwitch\" value=\"1\" />`.       When the <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> constructor cannot find initial switch settings in the configuration file, the Level property of the new switch is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.       Setting this property updates the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties to reflect the new value.","needQuote":false,"needEscape":true,"nodes":[{"content":"To set the level of your &lt;xref:System.Diagnostics.TraceSwitch&gt;, edit the configuration file that corresponds to the name of your application.","pos":[0,141],"source":"To set the level of your <xref:System.Diagnostics.TraceSwitch>, edit the configuration file that corresponds to the name of your application."},{"content":"In this file, you can add a switch and set its value, remove a switch, or clear all the switches previously set by the application.","pos":[142,273]},{"content":"The configuration file should be formatted like the following example:      <ph id=\"ph1\">```   &lt;configuration&gt;     &lt;system.diagnostics&gt;       &lt;switches&gt;         &lt;add name=\"mySwitch\" value=\"0\" /&gt;         &lt;add name=\"myNewSwitch\" value=\"3\" /&gt;         &lt;remove name=\"mySwitch\" /&gt;         &lt;clear/&gt;       &lt;/switches&gt;     &lt;/system.diagnostics&gt;   &lt;/configuration&gt;   ```</ph><ph id=\"ph2\">      &gt; </ph><ph id=\"ph3\">[!NOTE]</ph> &gt;  In the .NET Framework version 2.0, you can use text to specify the value for a switch.","pos":[274,726],"source":" The configuration file should be formatted like the following example:      ```   <configuration>     <system.diagnostics>       <switches>         <add name=\"mySwitch\" value=\"0\" />         <add name=\"myNewSwitch\" value=\"3\" />         <remove name=\"mySwitch\" />         <clear/>       </switches>     </system.diagnostics>   </configuration>   ```      > [!NOTE] >  In the .NET Framework version 2.0, you can use text to specify the value for a switch."},{"content":"For example, <ph id=\"ph1\">`true`</ph> for a &lt;xref:System.Diagnostics.BooleanSwitch&gt; or the text representing an enumeration value, such as <ph id=\"ph2\">`Error`</ph> for a &lt;xref:System.Diagnostics.TraceSwitch&gt;.","pos":[727,900],"source":" For example, `true` for a <xref:System.Diagnostics.BooleanSwitch> or the text representing an enumeration value, such as `Error` for a <xref:System.Diagnostics.TraceSwitch>."},{"content":"The line <ph id=\"ph1\">`&lt;add name=\"mySwitch\" value=\"Error\" /&gt;`</ph> is equivalent to <ph id=\"ph2\">`&lt;add name=\"mySwitch\" value=\"1\" /&gt;`</ph>.","pos":[901,1003],"source":" The line `<add name=\"mySwitch\" value=\"Error\" />` is equivalent to `<add name=\"mySwitch\" value=\"1\" />`."},{"content":"When the &lt;xref:System.Diagnostics.TraceSwitch.%23ctor%2A&gt; constructor cannot find initial switch settings in the configuration file, the Level property of the new switch is set to &lt;xref:System.Diagnostics.TraceLevel?displayProperty=fullName&gt;.","pos":[1010,1252],"source":"       When the <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> constructor cannot find initial switch settings in the configuration file, the Level property of the new switch is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>."},{"content":"Setting this property updates the &lt;xref:System.Diagnostics.TraceSwitch.TraceError%2A&gt;, &lt;xref:System.Diagnostics.TraceSwitch.TraceWarning%2A&gt;, &lt;xref:System.Diagnostics.TraceSwitch.TraceInfo%2A&gt;, and &lt;xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A&gt; properties to reflect the new value.","pos":[1259,1547],"source":"       Setting this property updates the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties to reflect the new value."}]},{"pos":[15424,15566],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.TraceLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that that specifies the level of messages that are allowed by the switch.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Diagnostics.TraceLevel\"></xref> values that that specifies the level of messages that are allowed by the switch."},{"pos":[15725,15830],"content":"Level is set to a value that is not one of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.TraceLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"Level is set to a value that is not one of the <xref href=\"System.Diagnostics.TraceLevel\"></xref> values."},{"pos":[16242,16289],"content":"Updates and corrects the level for this switch.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates and corrects the level for this switch.","pos":[0,47]}]},{"pos":[16302,16909],"content":"The OnSwitchSettingChanged method is used by the .NET framework to validate and correct the value of a switch initialized via a configuration file. A message is written to all trace listeners if the switch value specified in the configuration file is not defined by the <xref:System.Diagnostics.TraceLevel> enumeration and the switch is set to a defined value.       If you attempt in your code to set the <xref:System.Diagnostics.TraceSwitch.Level%2A> property to a value that is not defined by the <xref:System.Diagnostics.TraceLevel> enumeration, an <xref:System.ArgumentException> exception is thrown.","needQuote":false,"needEscape":true,"nodes":[{"content":"The OnSwitchSettingChanged method is used by the .NET framework to validate and correct the value of a switch initialized via a configuration file. A message is written to all trace listeners if the switch value specified in the configuration file is not defined by the <xref:System.Diagnostics.TraceLevel> enumeration and the switch is set to a defined value.       If you attempt in your code to set the <xref:System.Diagnostics.TraceSwitch.Level%2A> property to a value that is not defined by the <xref:System.Diagnostics.TraceLevel> enumeration, an <xref:System.ArgumentException> exception is thrown.","pos":[0,605],"nodes":[{"content":"The OnSwitchSettingChanged method is used by the .NET framework to validate and correct the value of a switch initialized via a configuration file.","pos":[0,147]},{"content":"A message is written to all trace listeners if the switch value specified in the configuration file is not defined by the &lt;xref:System.Diagnostics.TraceLevel&gt; enumeration and the switch is set to a defined value.","pos":[148,360],"source":" A message is written to all trace listeners if the switch value specified in the configuration file is not defined by the <xref:System.Diagnostics.TraceLevel> enumeration and the switch is set to a defined value."},{"content":"If you attempt in your code to set the &lt;xref:System.Diagnostics.TraceSwitch.Level%2A&gt; property to a value that is not defined by the &lt;xref:System.Diagnostics.TraceLevel&gt; enumeration, an &lt;xref:System.ArgumentException&gt; exception is thrown.","pos":[367,605],"source":"       If you attempt in your code to set the <xref:System.Diagnostics.TraceSwitch.Level%2A> property to a value that is not defined by the <xref:System.Diagnostics.TraceLevel> enumeration, an <xref:System.ArgumentException> exception is thrown."}]}]},{"pos":[17459,17607],"content":"Sets the &lt;xref:System.Diagnostics.Switch.SwitchSetting<bpt id=\"p1\">*</bpt>&gt; property to the integer equivalent of the &lt;xref:System.Diagnostics.Switch.Value<ept id=\"p1\">*</ept>&gt; property.","needQuote":true,"needEscape":true,"source":"Sets the <xref:System.Diagnostics.Switch.SwitchSetting*> property to the integer equivalent of the <xref:System.Diagnostics.Switch.Value*> property."},{"pos":[17619,17827],"content":"This method is called internally when the <xref:System.Diagnostics.Switch.Value%2A> property of the switch changes. The method ensures that the properties relating to the switch's value reflect the new value.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is called internally when the <xref:System.Diagnostics.Switch.Value%2A> property of the switch changes. The method ensures that the properties relating to the switch's value reflect the new value.","pos":[0,208],"nodes":[{"content":"This method is called internally when the &lt;xref:System.Diagnostics.Switch.Value%2A&gt; property of the switch changes.","pos":[0,115],"source":"This method is called internally when the <xref:System.Diagnostics.Switch.Value%2A> property of the switch changes."},{"content":"The method ensures that the properties relating to the switch's value reflect the new value.","pos":[116,208]}]}]},{"pos":[18336,18410],"content":"Gets a value indicating whether the switch allows error-handling messages.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the switch allows error-handling messages.","pos":[0,74]}]},{"pos":[18422,19030],"content":"You can use the TraceError, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties in conjunction with the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes to emit all messages with a specified importance or greater. When the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to the highest importance, <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, <xref:System.Diagnostics.TraceLevel> ,  only error-handling messages are emitted.","needQuote":true,"needEscape":true,"nodes":[{"content":"You can use the TraceError, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties in conjunction with the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes to emit all messages with a specified importance or greater. When the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to the highest importance, <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, <xref:System.Diagnostics.TraceLevel> ,  only error-handling messages are emitted.","pos":[0,608],"nodes":[{"content":"You can use the TraceError, &lt;xref:System.Diagnostics.TraceSwitch.TraceWarning%2A&gt;, &lt;xref:System.Diagnostics.TraceSwitch.TraceInfo%2A&gt;, and &lt;xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A&gt; properties in conjunction with the &lt;xref:System.Diagnostics.Debug&gt; and &lt;xref:System.Diagnostics.Trace&gt; classes to emit all messages with a specified importance or greater.","pos":[0,364],"source":"You can use the TraceError, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties in conjunction with the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes to emit all messages with a specified importance or greater."},{"content":"When the &lt;xref:System.Diagnostics.TraceSwitch.Level%2A&gt; property is set to the highest importance, &lt;xref:System.Diagnostics.TraceLevel?displayProperty=fullName&gt;, &lt;xref:System.Diagnostics.TraceLevel&gt; ,  only error-handling messages are emitted.","pos":[365,608],"source":" When the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to the highest importance, <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, <xref:System.Diagnostics.TraceLevel> ,  only error-handling messages are emitted."}]}]},{"pos":[20074,20491],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Diagnostics.TraceSwitch.Level*&gt; property is set to <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.TraceLevel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref href=\"System.Diagnostics.TraceLevel\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, <bpt id=\"p4\">&lt;xref href=\"System.Diagnostics.TraceLevel\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>, or <bpt id=\"p5\">&lt;xref href=\"System.Diagnostics.TraceLevel\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p6\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=\"System.Diagnostics.TraceLevel\"></xref>, <xref href=\"System.Diagnostics.TraceLevel\"></xref>, <xref href=\"System.Diagnostics.TraceLevel\"></xref>, or <xref href=\"System.Diagnostics.TraceLevel\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20906,20979],"content":"Gets a value indicating whether the switch allows informational messages.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the switch allows informational messages.","pos":[0,73]}]},{"pos":[20991,21568],"content":"You can use the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, TraceInfo, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties in conjunction with the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes to emit all messages with a specified importance or greater. When the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, informational messages, warnings, and error-handling messages are emitted.","needQuote":true,"needEscape":true,"nodes":[{"content":"You can use the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, TraceInfo, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties in conjunction with the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes to emit all messages with a specified importance or greater. When the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, informational messages, warnings, and error-handling messages are emitted.","pos":[0,577],"nodes":[{"content":"You can use the &lt;xref:System.Diagnostics.TraceSwitch.TraceError%2A&gt;, &lt;xref:System.Diagnostics.TraceSwitch.TraceWarning%2A&gt;, TraceInfo, and &lt;xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A&gt; properties in conjunction with the &lt;xref:System.Diagnostics.Debug&gt; and &lt;xref:System.Diagnostics.Trace&gt; classes to emit all messages with a specified importance or greater.","pos":[0,364],"source":"You can use the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, TraceInfo, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties in conjunction with the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes to emit all messages with a specified importance or greater."},{"content":"When the &lt;xref:System.Diagnostics.TraceSwitch.Level%2A&gt; property is set to &lt;xref:System.Diagnostics.TraceLevel?displayProperty=fullName&gt;, informational messages, warnings, and error-handling messages are emitted.","pos":[365,577],"source":" When the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, informational messages, warnings, and error-handling messages are emitted."}]}]},{"pos":[22608,22920],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Diagnostics.TraceSwitch.Level*&gt; property is set to <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.TraceLevel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or <bpt id=\"p3\">&lt;xref href=\"System.Diagnostics.TraceLevel\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=\"System.Diagnostics.TraceLevel\"></xref> or <xref href=\"System.Diagnostics.TraceLevel\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23349,23412],"content":"Gets a value indicating whether the switch allows all messages.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the switch allows all messages.","pos":[0,63]}]},{"pos":[23424,23978],"content":"You can use the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and TraceVerbose properties in conjunction with the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes to emit all messages with a specified importance or greater. When the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, all debugging and tracing messages are transmitted.","needQuote":true,"needEscape":true,"nodes":[{"content":"You can use the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and TraceVerbose properties in conjunction with the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes to emit all messages with a specified importance or greater. When the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, all debugging and tracing messages are transmitted.","pos":[0,554],"nodes":[{"content":"You can use the &lt;xref:System.Diagnostics.TraceSwitch.TraceError%2A&gt;, &lt;xref:System.Diagnostics.TraceSwitch.TraceWarning%2A&gt;, &lt;xref:System.Diagnostics.TraceSwitch.TraceInfo%2A&gt;, and TraceVerbose properties in conjunction with the &lt;xref:System.Diagnostics.Debug&gt; and &lt;xref:System.Diagnostics.Trace&gt; classes to emit all messages with a specified importance or greater.","pos":[0,364],"source":"You can use the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and TraceVerbose properties in conjunction with the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes to emit all messages with a specified importance or greater."},{"content":"When the &lt;xref:System.Diagnostics.TraceSwitch.Level%2A&gt; property is set to &lt;xref:System.Diagnostics.TraceLevel?displayProperty=fullName&gt;, all debugging and tracing messages are transmitted.","pos":[365,554],"source":" When the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, all debugging and tracing messages are transmitted."}]}]},{"pos":[24822,25080],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Diagnostics.TraceSwitch.Level*&gt; property is set to <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.TraceLevel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=\"System.Diagnostics.TraceLevel\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25512,25579],"content":"Gets a value indicating whether the switch allows warning messages.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the switch allows warning messages.","pos":[0,67]}]},{"pos":[25591,26143],"content":"You can use the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, TraceWarning, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties in conjunction with the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes to emit all messages with a specified importance or greater. When the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, warnings and error-handling messages are emitted.","needQuote":true,"needEscape":true,"nodes":[{"content":"You can use the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, TraceWarning, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties in conjunction with the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes to emit all messages with a specified importance or greater. When the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, warnings and error-handling messages are emitted.","pos":[0,552],"nodes":[{"content":"You can use the &lt;xref:System.Diagnostics.TraceSwitch.TraceError%2A&gt;, TraceWarning, &lt;xref:System.Diagnostics.TraceSwitch.TraceInfo%2A&gt;, and &lt;xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A&gt; properties in conjunction with the &lt;xref:System.Diagnostics.Debug&gt; and &lt;xref:System.Diagnostics.Trace&gt; classes to emit all messages with a specified importance or greater.","pos":[0,364],"source":"You can use the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, TraceWarning, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties in conjunction with the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes to emit all messages with a specified importance or greater."},{"content":"When the &lt;xref:System.Diagnostics.TraceSwitch.Level%2A&gt; property is set to &lt;xref:System.Diagnostics.TraceLevel?displayProperty=fullName&gt;, warnings and error-handling messages are emitted.","pos":[365,552],"source":" When the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, warnings and error-handling messages are emitted."}]}]},{"pos":[27197,27562],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Diagnostics.TraceSwitch.Level*&gt; property is set to <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.TraceLevel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref href=\"System.Diagnostics.TraceLevel\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, or <bpt id=\"p4\">&lt;xref href=\"System.Diagnostics.TraceLevel\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=\"System.Diagnostics.TraceLevel\"></xref>, <xref href=\"System.Diagnostics.TraceLevel\"></xref>, or <xref href=\"System.Diagnostics.TraceLevel\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.TraceSwitch\n  id: TraceSwitch\n  children:\n  - System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)\n  - System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)\n  - System.Diagnostics.TraceSwitch.Level\n  - System.Diagnostics.TraceSwitch.OnSwitchSettingChanged\n  - System.Diagnostics.TraceSwitch.OnValueChanged\n  - System.Diagnostics.TraceSwitch.TraceError\n  - System.Diagnostics.TraceSwitch.TraceInfo\n  - System.Diagnostics.TraceSwitch.TraceVerbose\n  - System.Diagnostics.TraceSwitch.TraceWarning\n  langs:\n  - csharp\n  name: TraceSwitch\n  nameWithType: TraceSwitch\n  fullName: System.Diagnostics.TraceSwitch\n  type: Class\n  summary: Provides a multilevel switch to control tracing and debug output without recompiling your code.\n  remarks: \"You can use a trace switch to filter out messages based on their importance. The TraceSwitch class provides the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties to test the level of the switch. The <xref:System.Diagnostics.TraceSwitch.Level%2A> property gets or sets the switch's <xref:System.Diagnostics.TraceLevel>.  \\n  \\n You can set the level of a TraceSwitch through the application configuration file and then use the configured TraceSwitch level in your application. Alternately, you can create a TraceSwitch in your code and set the level directly to instrument a specific section of code.  \\n  \\n To configure a TraceSwitch, edit the   for your application. In this file, you can add or remove a switch, set a switch's value, or clear all the switches previously set by the application. The configuration file should be formatted like the following example:  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <switches>  \\n      <add name=\\\"mySwitch\\\" value=\\\"1\\\" />  \\n    </switches>  \\n  </system.diagnostics>  \\n</configuration>  \\n```  \\n  \\n This configuration section defines a TraceSwitch with the <xref:System.Diagnostics.Switch.DisplayName%2A> set to `mySwitch`, and the <xref:System.Diagnostics.TraceSwitch.Level%2A> set to 1, which corresponds to the enumeration value <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \\n  \\n> [!NOTE]\\n>  In the .NET Framework version 2.0, you can use text to specify the value for a switch. For example, `true` for a <xref:System.Diagnostics.BooleanSwitch> or the text representing an enumeration value, such as `Error` for a TraceSwitch. The line `<add name=\\\"mySwitch\\\" value=\\\"Error\\\" />` is equivalent to `<add name=\\\"mySwitch\\\" value=\\\"1\\\" />`.  \\n  \\n In your application, you can use the configured switch level by creating a TraceSwitch with the same name, as shown in the following example:  \\n  \\n [!code-vb[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_0_1.vb)]\\n [!code-cpp[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/cpp/t-system.diagnostics.tra_0_1.cpp)]\\n [!code-cs[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/csharp/t-system.diagnostics.tra_0_1.cs)]  \\n  \\n By default, the switch <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set using the value specified in the configuration file. If the <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> constructor cannot find initial switch settings in the configuration file, the <xref:System.Diagnostics.TraceSwitch.Level%2A> of the new switch defaults to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \\n  \\n You must enable tracing or debugging to use a switch. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.  \\n  \\n-   To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.  \\n  \\n-   To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file. In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.  \\n  \\n> [!NOTE]\\n>  These debug and trace compiler switches are not required when using the TraceSwitch class in isolation. They are only required in conjunction with <xref:System.Diagnostics.Trace> or <xref:System.Diagnostics.Debug> methods that are conditionally compiled.  \\n  \\n For more information on instrumenting your application, see <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace>. For more information about configuring and using trace switches, see [Trace Switches](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  To improve performance, you can make TraceSwitch members `static` in your class.\"\n  example:\n  - \"The following code example creates a new TraceSwitch and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \\n  \\n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/t-system.diagnostics.tra_0_2.cs)]\\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/t-system.diagnostics.tra_0_2.cpp)]\\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_0_2.vb)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.SwitchLevel(typeof(System.Diagnostics.TraceLevel))]\n\n      public class TraceSwitch : System.Diagnostics.Switch\n  inheritance:\n  - System.Object\n  - System.Diagnostics.Switch\n  implements: []\n  inheritedMembers:\n  - System.Diagnostics.Switch.Attributes\n  - System.Diagnostics.Switch.Description\n  - System.Diagnostics.Switch.DisplayName\n  - System.Diagnostics.Switch.GetSupportedAttributes\n  - System.Diagnostics.Switch.SwitchSetting\n  - System.Diagnostics.Switch.Value\n  platform:\n  - net462\n- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  name: TraceSwitch(String,String)\n  nameWithType: TraceSwitch.TraceSwitch(String,String)\n  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.TraceSwitch\"></xref> class, using the specified display name and description.\n  remarks: \"To set the level of your <xref:System.Diagnostics.TraceSwitch>, edit the configuration file that corresponds to the name of your application. In this file, you can add a switch and set its value, remove a switch, or clear all the switches previously set by the application. The configuration file should be formatted like the following example:  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <switches>  \\n      <add name=\\\"mySwitch\\\" value=\\\"1\\\" />  \\n    </switches>  \\n  </system.diagnostics>  \\n</configuration>  \\n```  \\n  \\n> [!NOTE]\\n>  In the .NET Framework version 2.0, you can use text to specify the value for a switch. For example, `true` for a <xref:System.Diagnostics.BooleanSwitch> or the text representing an enumeration value, such as `Error` for a <xref:System.Diagnostics.TraceSwitch>. The line `<add name=\\\"mySwitch\\\" value=\\\"Error\\\" />` is equivalent to `<add name=\\\"mySwitch\\\" value=\\\"1\\\" />`.  \\n  \\n In your application, you can use the configured switch level by creating a <xref:System.Diagnostics.TraceSwitch> with the same name, as shown in the following example:  \\n  \\n [!code-vb[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_27_1.vb)]\\n [!code-cpp[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/cpp/m-system.diagnostics.tra_27_1.cpp)]\\n [!code-cs[Classic TraceSwitch.TraceError Example#3](~/add/codesnippet/csharp/m-system.diagnostics.tra_27_1.cs)]  \\n  \\n When the <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> constructor cannot find initial switch settings in the configuration file, the <xref:System.Diagnostics.TraceSwitch.Level%2A> property of the new switch is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \\n  \\n The <xref:System.Diagnostics.TraceSwitch> class provides the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties to test the <xref:System.Diagnostics.TraceSwitch.Level%2A> of the switch. The <xref:System.Diagnostics.TraceSwitch.Level%2A> property gets or sets the switch's <xref:System.Diagnostics.TraceLevel>.  \\n  \\n> [!NOTE]\\n>  To improve performance, you can make <xref:System.Diagnostics.TraceSwitch> members `static` in your class.\"\n  example:\n  - \"The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \\n  \\n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_27_2.cs)]\\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_27_2.cpp)]\\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_27_2.vb)]\"\n  syntax:\n    content: public TraceSwitch (string displayName, string description);\n    parameters:\n    - id: displayName\n      type: System.String\n      description: The name to display on a user interface.\n    - id: description\n      type: System.String\n      description: The description of the switch.\n  overload: System.Diagnostics.TraceSwitch.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String)'\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  name: TraceSwitch(String,String,String)\n  nameWithType: TraceSwitch.TraceSwitch(String,String,String)\n  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.TraceSwitch\"></xref> class, using the specified display name, description, and default value for the switch.\n  remarks: The `displayName` parameter is used to set the value of the <xref:System.Diagnostics.Switch.DisplayName%2A> property, the `description` parameter is use to set the value of the <xref:System.Diagnostics.Switch.Description%2A> property, and the `defaultSwitchValue` parameter is saved as a field and used to initialize the <xref:System.Diagnostics.Switch.Value%2A> property on first reference. See the <xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29> constructor for more information and a code example.\n  syntax:\n    content: public TraceSwitch (string displayName, string description, string defaultSwitchValue);\n    parameters:\n    - id: displayName\n      type: System.String\n      description: The name to display on a user interface.\n    - id: description\n      type: System.String\n      description: The description of the switch.\n    - id: defaultSwitchValue\n      type: System.String\n      description: The default value of the switch.\n  overload: System.Diagnostics.TraceSwitch.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.TraceSwitch.Level\n  id: Level\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  name: Level\n  nameWithType: TraceSwitch.Level\n  fullName: System.Diagnostics.TraceSwitch.Level\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets or sets the trace level that determines the messages the switch allows.\n  remarks: \"To set the level of your <xref:System.Diagnostics.TraceSwitch>, edit the configuration file that corresponds to the name of your application. In this file, you can add a switch and set its value, remove a switch, or clear all the switches previously set by the application. The configuration file should be formatted like the following example:  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <switches>  \\n      <add name=\\\"mySwitch\\\" value=\\\"0\\\" />  \\n      <add name=\\\"myNewSwitch\\\" value=\\\"3\\\" />  \\n      <remove name=\\\"mySwitch\\\" />  \\n      <clear/>  \\n    </switches>  \\n  </system.diagnostics>  \\n</configuration>  \\n```  \\n  \\n> [!NOTE]\\n>  In the .NET Framework version 2.0, you can use text to specify the value for a switch. For example, `true` for a <xref:System.Diagnostics.BooleanSwitch> or the text representing an enumeration value, such as `Error` for a <xref:System.Diagnostics.TraceSwitch>. The line `<add name=\\\"mySwitch\\\" value=\\\"Error\\\" />` is equivalent to `<add name=\\\"mySwitch\\\" value=\\\"1\\\" />`.  \\n  \\n When the <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> constructor cannot find initial switch settings in the configuration file, the Level property of the new switch is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \\n  \\n Setting this property updates the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties to reflect the new value.\"\n  example:\n  - \"The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the Level property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the Level is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \\n  \\n [!code-cpp[Classic TraceSwitch.Level Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_1_1.cpp)]\\n [!code-cs[Classic TraceSwitch.Level Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_1_1.cs)]\\n [!code-vb[Classic TraceSwitch.Level Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_1_1.vb)]\"\n  syntax:\n    content: public System.Diagnostics.TraceLevel Level { get; set; }\n    return:\n      type: System.Diagnostics.TraceLevel\n      description: One of the <xref href=\"System.Diagnostics.TraceLevel\"></xref> values that that specifies the level of messages that are allowed by the switch.\n  overload: System.Diagnostics.TraceSwitch.Level*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Level is set to a value that is not one of the <xref href=\"System.Diagnostics.TraceLevel\"></xref> values.\n  platform:\n  - net462\n- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged\n  id: OnSwitchSettingChanged\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  name: OnSwitchSettingChanged()\n  nameWithType: TraceSwitch.OnSwitchSettingChanged()\n  fullName: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Updates and corrects the level for this switch.\n  remarks: \"The OnSwitchSettingChanged method is used by the .NET framework to validate and correct the value of a switch initialized via a configuration file. A message is written to all trace listeners if the switch value specified in the configuration file is not defined by the <xref:System.Diagnostics.TraceLevel> enumeration and the switch is set to a defined value.  \\n  \\n If you attempt in your code to set the <xref:System.Diagnostics.TraceSwitch.Level%2A> property to a value that is not defined by the <xref:System.Diagnostics.TraceLevel> enumeration, an <xref:System.ArgumentException> exception is thrown.\"\n  syntax:\n    content: protected override void OnSwitchSettingChanged ();\n    parameters: []\n  overload: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.TraceSwitch.OnValueChanged\n  id: OnValueChanged\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  name: OnValueChanged()\n  nameWithType: TraceSwitch.OnValueChanged()\n  fullName: System.Diagnostics.TraceSwitch.OnValueChanged()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Sets the <xref:System.Diagnostics.Switch.SwitchSetting*> property to the integer equivalent of the <xref:System.Diagnostics.Switch.Value*> property.\n  remarks: This method is called internally when the <xref:System.Diagnostics.Switch.Value%2A> property of the switch changes. The method ensures that the properties relating to the switch's value reflect the new value.\n  syntax:\n    content: protected override void OnValueChanged ();\n    parameters: []\n  overload: System.Diagnostics.TraceSwitch.OnValueChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.TraceSwitch.TraceError\n  id: TraceError\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  name: TraceError\n  nameWithType: TraceSwitch.TraceError\n  fullName: System.Diagnostics.TraceSwitch.TraceError\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets a value indicating whether the switch allows error-handling messages.\n  remarks: You can use the TraceError, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties in conjunction with the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes to emit all messages with a specified importance or greater. When the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to the highest importance, <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, <xref:System.Diagnostics.TraceLevel> ,  only error-handling messages are emitted.\n  example:\n  - \"The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \\n  \\n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_5_1.cs)]\\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_5_1.cpp)]\\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_5_1.vb)]\"\n  syntax:\n    content: public bool TraceError { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=\"System.Diagnostics.TraceLevel\"></xref>, <xref href=\"System.Diagnostics.TraceLevel\"></xref>, <xref href=\"System.Diagnostics.TraceLevel\"></xref>, or <xref href=\"System.Diagnostics.TraceLevel\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.TraceSwitch.TraceError*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.TraceSwitch.TraceInfo\n  id: TraceInfo\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  name: TraceInfo\n  nameWithType: TraceSwitch.TraceInfo\n  fullName: System.Diagnostics.TraceSwitch.TraceInfo\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets a value indicating whether the switch allows informational messages.\n  remarks: You can use the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, TraceInfo, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties in conjunction with the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes to emit all messages with a specified importance or greater. When the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, informational messages, warnings, and error-handling messages are emitted.\n  example:\n  - \"The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \\n  \\n [!code-vb[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_8_1.vb)]\\n [!code-cs[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_8_1.cs)]\\n [!code-cpp[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_8_1.cpp)]\"\n  syntax:\n    content: public bool TraceInfo { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=\"System.Diagnostics.TraceLevel\"></xref> or <xref href=\"System.Diagnostics.TraceLevel\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.TraceSwitch.TraceInfo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.TraceSwitch.TraceVerbose\n  id: TraceVerbose\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  name: TraceVerbose\n  nameWithType: TraceSwitch.TraceVerbose\n  fullName: System.Diagnostics.TraceSwitch.TraceVerbose\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets a value indicating whether the switch allows all messages.\n  remarks: You can use the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and TraceVerbose properties in conjunction with the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes to emit all messages with a specified importance or greater. When the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, all debugging and tracing messages are transmitted.\n  example:\n  - \"The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes both error messages when the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \\n  \\n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_4_1.cs)]\\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_4_1.cpp)]\\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_4_1.vb)]\"\n  syntax:\n    content: public bool TraceVerbose { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=\"System.Diagnostics.TraceLevel\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.TraceSwitch.TraceVerbose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.TraceSwitch.TraceWarning\n  id: TraceWarning\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  name: TraceWarning\n  nameWithType: TraceSwitch.TraceWarning\n  fullName: System.Diagnostics.TraceSwitch.TraceWarning\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets a value indicating whether the switch allows warning messages.\n  remarks: You can use the <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, TraceWarning, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, and <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> properties in conjunction with the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes to emit all messages with a specified importance or greater. When the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, warnings and error-handling messages are emitted.\n  example:\n  - \"The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message when the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \\n  \\n [!code-cs[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_3_1.cs)]\\n [!code-cpp[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_3_1.cpp)]\\n [!code-vb[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_3_1.vb)]\"\n  syntax:\n    content: public bool TraceWarning { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=\"System.Diagnostics.TraceLevel\"></xref>, <xref href=\"System.Diagnostics.TraceLevel\"></xref>, or <xref href=\"System.Diagnostics.TraceLevel\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.TraceSwitch.TraceWarning*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Diagnostics.Switch\n  isExternal: false\n  name: System.Diagnostics.Switch\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)\n  parent: System.Diagnostics.TraceSwitch\n  isExternal: false\n  name: TraceSwitch(String,String)\n  nameWithType: TraceSwitch.TraceSwitch(String,String)\n  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)\n  parent: System.Diagnostics.TraceSwitch\n  isExternal: false\n  name: TraceSwitch(String,String,String)\n  nameWithType: TraceSwitch.TraceSwitch(String,String,String)\n  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String,String)\n- uid: System.Diagnostics.TraceSwitch.Level\n  parent: System.Diagnostics.TraceSwitch\n  isExternal: false\n  name: Level\n  nameWithType: TraceSwitch.Level\n  fullName: System.Diagnostics.TraceSwitch.Level\n- uid: System.Diagnostics.TraceLevel\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceLevel\n  nameWithType: TraceLevel\n  fullName: System.Diagnostics.TraceLevel\n- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged\n  parent: System.Diagnostics.TraceSwitch\n  isExternal: false\n  name: OnSwitchSettingChanged()\n  nameWithType: TraceSwitch.OnSwitchSettingChanged()\n  fullName: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged()\n- uid: System.Diagnostics.TraceSwitch.OnValueChanged\n  parent: System.Diagnostics.TraceSwitch\n  isExternal: false\n  name: OnValueChanged()\n  nameWithType: TraceSwitch.OnValueChanged()\n  fullName: System.Diagnostics.TraceSwitch.OnValueChanged()\n- uid: System.Diagnostics.TraceSwitch.TraceError\n  parent: System.Diagnostics.TraceSwitch\n  isExternal: false\n  name: TraceError\n  nameWithType: TraceSwitch.TraceError\n  fullName: System.Diagnostics.TraceSwitch.TraceError\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.TraceSwitch.TraceInfo\n  parent: System.Diagnostics.TraceSwitch\n  isExternal: false\n  name: TraceInfo\n  nameWithType: TraceSwitch.TraceInfo\n  fullName: System.Diagnostics.TraceSwitch.TraceInfo\n- uid: System.Diagnostics.TraceSwitch.TraceVerbose\n  parent: System.Diagnostics.TraceSwitch\n  isExternal: false\n  name: TraceVerbose\n  nameWithType: TraceSwitch.TraceVerbose\n  fullName: System.Diagnostics.TraceSwitch.TraceVerbose\n- uid: System.Diagnostics.TraceSwitch.TraceWarning\n  parent: System.Diagnostics.TraceSwitch\n  isExternal: false\n  name: TraceWarning\n  nameWithType: TraceSwitch.TraceWarning\n  fullName: System.Diagnostics.TraceSwitch.TraceWarning\n- uid: System.Diagnostics.TraceSwitch.#ctor*\n  parent: System.Diagnostics.TraceSwitch\n  isExternal: false\n  name: TraceSwitch\n  nameWithType: TraceSwitch.TraceSwitch\n- uid: System.Diagnostics.TraceSwitch.Level*\n  parent: System.Diagnostics.TraceSwitch\n  isExternal: false\n  name: Level\n  nameWithType: TraceSwitch.Level\n- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged*\n  parent: System.Diagnostics.TraceSwitch\n  isExternal: false\n  name: OnSwitchSettingChanged\n  nameWithType: TraceSwitch.OnSwitchSettingChanged\n- uid: System.Diagnostics.TraceSwitch.OnValueChanged*\n  parent: System.Diagnostics.TraceSwitch\n  isExternal: false\n  name: OnValueChanged\n  nameWithType: TraceSwitch.OnValueChanged\n- uid: System.Diagnostics.TraceSwitch.TraceError*\n  parent: System.Diagnostics.TraceSwitch\n  isExternal: false\n  name: TraceError\n  nameWithType: TraceSwitch.TraceError\n- uid: System.Diagnostics.TraceSwitch.TraceInfo*\n  parent: System.Diagnostics.TraceSwitch\n  isExternal: false\n  name: TraceInfo\n  nameWithType: TraceSwitch.TraceInfo\n- uid: System.Diagnostics.TraceSwitch.TraceVerbose*\n  parent: System.Diagnostics.TraceSwitch\n  isExternal: false\n  name: TraceVerbose\n  nameWithType: TraceSwitch.TraceVerbose\n- uid: System.Diagnostics.TraceSwitch.TraceWarning*\n  parent: System.Diagnostics.TraceSwitch\n  isExternal: false\n  name: TraceWarning\n  nameWithType: TraceSwitch.TraceWarning\n"}