{"nodes":[{"pos":[509,892],"content":"Specifies the type of instrumentation provided by a class.       Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.","needQuote":false,"needEscape":true,"nodes":[{"content":"Specifies the type of instrumentation provided by a class.","pos":[0,58]},{"content":"Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.","pos":[65,258]},{"content":"The <bpt id=\"p1\">[</bpt>MI APIs<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx)</ept> should be used for all new development.","pos":[259,381],"source":" The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development."}]},{"pos":[1777,1844],"content":"The class defines an abstract class for management instrumentation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The class defines an abstract class for management instrumentation.","pos":[0,67]}]},{"pos":[1974,1986],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2426,2483],"content":"The class provides events for management instrumentation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The class provides events for management instrumentation.","pos":[0,57]}]},{"pos":[2610,2622],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3077,3137],"content":"The class provides instances for management instrumentation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The class provides instances for management instrumentation.","pos":[0,60]}]},{"pos":[3267,3279],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Management.Instrumentation.InstrumentationType\n  id: InstrumentationType\n  children:\n  - System.Management.Instrumentation.InstrumentationType.Abstract\n  - System.Management.Instrumentation.InstrumentationType.Event\n  - System.Management.Instrumentation.InstrumentationType.Instance\n  langs:\n  - csharp\n  name: InstrumentationType\n  nameWithType: InstrumentationType\n  fullName: System.Management.Instrumentation.InstrumentationType\n  type: Enum\n  summary: \"Specifies the type of instrumentation provided by a class.  \\n  \\n Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.\"\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to create a management event class by using the InstrumentationType enumeration.  \\n  \\n [!code-cs[wminet_InstrumentationType#1](~/add/codesnippet/csharp/t-system.management.inst_1.cs)]\\n [!code-vb[wminet_InstrumentationType#1](~/add/codesnippet/visualbasic/t-system.management.inst_1.vb)]\"\n  syntax:\n    content: public enum InstrumentationType\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Management.Instrumentation.InstrumentationType.Abstract\n  id: Abstract\n  parent: System.Management.Instrumentation.InstrumentationType\n  langs:\n  - csharp\n  name: Abstract\n  nameWithType: InstrumentationType.Abstract\n  fullName: System.Management.Instrumentation.InstrumentationType.Abstract\n  type: Field\n  assemblies:\n  - System.Management\n  namespace: System.Management.Instrumentation\n  summary: The class defines an abstract class for management instrumentation.\n  syntax:\n    content: Abstract\n    return:\n      type: System.Management.Instrumentation.InstrumentationType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Management.Instrumentation.InstrumentationType.Event\n  id: Event\n  parent: System.Management.Instrumentation.InstrumentationType\n  langs:\n  - csharp\n  name: Event\n  nameWithType: InstrumentationType.Event\n  fullName: System.Management.Instrumentation.InstrumentationType.Event\n  type: Field\n  assemblies:\n  - System.Management\n  namespace: System.Management.Instrumentation\n  summary: The class provides events for management instrumentation.\n  syntax:\n    content: Event\n    return:\n      type: System.Management.Instrumentation.InstrumentationType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Management.Instrumentation.InstrumentationType.Instance\n  id: Instance\n  parent: System.Management.Instrumentation.InstrumentationType\n  langs:\n  - csharp\n  name: Instance\n  nameWithType: InstrumentationType.Instance\n  fullName: System.Management.Instrumentation.InstrumentationType.Instance\n  type: Field\n  assemblies:\n  - System.Management\n  namespace: System.Management.Instrumentation\n  summary: The class provides instances for management instrumentation.\n  syntax:\n    content: Instance\n    return:\n      type: System.Management.Instrumentation.InstrumentationType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Management.Instrumentation.InstrumentationType.Abstract\n  parent: System.Management.Instrumentation.InstrumentationType\n  isExternal: false\n  name: Abstract\n  nameWithType: InstrumentationType.Abstract\n  fullName: System.Management.Instrumentation.InstrumentationType.Abstract\n- uid: System.Management.Instrumentation.InstrumentationType\n  parent: System.Management.Instrumentation\n  isExternal: false\n  name: InstrumentationType\n  nameWithType: InstrumentationType\n  fullName: System.Management.Instrumentation.InstrumentationType\n- uid: System.Management.Instrumentation.InstrumentationType.Event\n  parent: System.Management.Instrumentation.InstrumentationType\n  isExternal: false\n  name: Event\n  nameWithType: InstrumentationType.Event\n  fullName: System.Management.Instrumentation.InstrumentationType.Event\n- uid: System.Management.Instrumentation.InstrumentationType.Instance\n  parent: System.Management.Instrumentation.InstrumentationType\n  isExternal: false\n  name: Instance\n  nameWithType: InstrumentationType.Instance\n  fullName: System.Management.Instrumentation.InstrumentationType.Instance\n"}