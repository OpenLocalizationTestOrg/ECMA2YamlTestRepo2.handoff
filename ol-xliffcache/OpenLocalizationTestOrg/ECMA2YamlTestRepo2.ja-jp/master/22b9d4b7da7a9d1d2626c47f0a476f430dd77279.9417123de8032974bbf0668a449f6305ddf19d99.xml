{"nodes":[{"pos":[641,755],"content":"Represents information used to configure <xref:System.Net.Sockets.Socket> objects. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents information used to configure <xref:System.Net.Sockets.Socket> objects. This class cannot be inherited.","pos":[0,114],"nodes":[{"content":"Represents information used to configure &lt;xref:System.Net.Sockets.Socket&gt; objects.","pos":[0,82],"source":"Represents information used to configure <xref:System.Net.Sockets.Socket> objects."},{"content":"This class cannot be inherited.","pos":[83,114]}]}]},{"pos":[4486,4586],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Configuration.SocketElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Configuration.SocketElement\"></xref> class."},{"pos":[4598,4900],"content":"This constructor adds the <xref:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept%2A> and <xref:System.Net.Configuration.ConnectionManagementElement.MaxConnection%2A> properties to the <xref:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept%2A> collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"This constructor adds the &lt;xref:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept%2A&gt; and &lt;xref:System.Net.Configuration.ConnectionManagementElement.MaxConnection%2A&gt; properties to the &lt;xref:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept%2A&gt; collection.","pos":[0,302],"source":"This constructor adds the <xref:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept%2A> and <xref:System.Net.Configuration.ConnectionManagementElement.MaxConnection%2A> properties to the <xref:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept%2A> collection."}]},{"pos":[5537,5642],"content":"Gets or sets a Boolean value that specifies whether completion ports are used when accepting connections.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that specifies whether completion ports are used when accepting connections.","pos":[0,105]}]},{"pos":[5784,5944],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use completion ports; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use completion ports; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6547,6649],"content":"Gets or sets a Boolean value that specifies whether completion ports are used when making connections.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that specifies whether completion ports are used when making connections.","pos":[0,102]}]},{"pos":[6792,6952],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use completion ports; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use completion ports; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7471,7597],"content":"Gets or sets a value that specifies the default <bpt id=\"p1\">&lt;xref href=\"System.Net.Sockets.IPProtectionLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use for a socket.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that specifies the default <xref href=\"System.Net.Sockets.IPProtectionLevel\"></xref> to use for a socket."},{"pos":[7609,8336],"content":"The IPProtectionLevel property enables configuration of a restriction for an IPv6 socket to a specified scope, such as addresses with the same link local or site local prefix. This option enables applications to place access restrictions on IPv6 sockets. Such restrictions enable an application running on a private LAN to simply and robustly harden itself against external attacks. This option widens or narrows the scope of a listening socket, enabling unrestricted access from public and private users when appropriate, or restricting access only to the same site, as required. This option has three defined protection levels specified in the <xref:System.Net.Sockets.IPProtectionLevel?displayProperty=fullName> enumeration.","needQuote":true,"needEscape":true,"nodes":[{"content":"The IPProtectionLevel property enables configuration of a restriction for an IPv6 socket to a specified scope, such as addresses with the same link local or site local prefix. This option enables applications to place access restrictions on IPv6 sockets. Such restrictions enable an application running on a private LAN to simply and robustly harden itself against external attacks. This option widens or narrows the scope of a listening socket, enabling unrestricted access from public and private users when appropriate, or restricting access only to the same site, as required. This option has three defined protection levels specified in the <xref:System.Net.Sockets.IPProtectionLevel?displayProperty=fullName> enumeration.","pos":[0,727],"nodes":[{"content":"The IPProtectionLevel property enables configuration of a restriction for an IPv6 socket to a specified scope, such as addresses with the same link local or site local prefix.","pos":[0,175]},{"content":"This option enables applications to place access restrictions on IPv6 sockets.","pos":[176,254]},{"content":"Such restrictions enable an application running on a private LAN to simply and robustly harden itself against external attacks.","pos":[255,382]},{"content":"This option widens or narrows the scope of a listening socket, enabling unrestricted access from public and private users when appropriate, or restricting access only to the same site, as required.","pos":[383,580]},{"content":"This option has three defined protection levels specified in the &lt;xref:System.Net.Sockets.IPProtectionLevel?displayProperty=fullName&gt; enumeration.","pos":[581,727],"source":" This option has three defined protection levels specified in the <xref:System.Net.Sockets.IPProtectionLevel?displayProperty=fullName> enumeration."}]}]},{"pos":[8516,8616],"content":"The value of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Sockets.IPProtectionLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the current instance.","needQuote":true,"needEscape":true,"source":"The value of the <xref href=\"System.Net.Sockets.IPProtectionLevel\"></xref> for the current instance."},{"pos":[9851,9863],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Configuration.SocketElement\n  id: SocketElement\n  children:\n  - System.Net.Configuration.SocketElement.#ctor\n  - System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept\n  - System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect\n  - System.Net.Configuration.SocketElement.IPProtectionLevel\n  - System.Net.Configuration.SocketElement.PostDeserialize\n  - System.Net.Configuration.SocketElement.Properties\n  langs:\n  - csharp\n  name: SocketElement\n  nameWithType: SocketElement\n  fullName: System.Net.Configuration.SocketElement\n  type: Class\n  summary: Represents information used to configure <xref:System.Net.Sockets.Socket> objects. This class cannot be inherited.\n  remarks: \"This class corresponds to the [\\\\&lt;socket\\\\&gt; Element (Network Settings)](../Topic/%3Csocket%3E%20Element%20\\\\(Network%20Settings\\\\).md) configuration element.  \\n  \\n This class provides programmatic access to information that can be stored in configuration files.  \\n  \\n This class is used to specify whether completion ports are used for connecting, whether completion ports are used for accepting connections, and the default IP protection level for an IPv6 socket.\"\n  syntax:\n    content: 'public sealed class SocketElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.Net.Configuration.SocketElement.#ctor\n  id: '#ctor'\n  parent: System.Net.Configuration.SocketElement\n  langs:\n  - csharp\n  name: SocketElement()\n  nameWithType: SocketElement.SocketElement()\n  fullName: System.Net.Configuration.SocketElement.SocketElement()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Net.Configuration.SocketElement\"></xref> class.\n  remarks: This constructor adds the <xref:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept%2A> and <xref:System.Net.Configuration.ConnectionManagementElement.MaxConnection%2A> properties to the <xref:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept%2A> collection.\n  syntax:\n    content: public SocketElement ();\n    parameters: []\n  overload: System.Net.Configuration.SocketElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept\n  id: AlwaysUseCompletionPortsForAccept\n  parent: System.Net.Configuration.SocketElement\n  langs:\n  - csharp\n  name: AlwaysUseCompletionPortsForAccept\n  nameWithType: SocketElement.AlwaysUseCompletionPortsForAccept\n  fullName: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets a Boolean value that specifies whether completion ports are used when accepting connections.\n  syntax:\n    content: public bool AlwaysUseCompletionPortsForAccept { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use completion ports; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect\n  id: AlwaysUseCompletionPortsForConnect\n  parent: System.Net.Configuration.SocketElement\n  langs:\n  - csharp\n  name: AlwaysUseCompletionPortsForConnect\n  nameWithType: SocketElement.AlwaysUseCompletionPortsForConnect\n  fullName: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets a Boolean value that specifies whether completion ports are used when making connections.\n  syntax:\n    content: public bool AlwaysUseCompletionPortsForConnect { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use completion ports; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.SocketElement.IPProtectionLevel\n  id: IPProtectionLevel\n  parent: System.Net.Configuration.SocketElement\n  langs:\n  - csharp\n  name: IPProtectionLevel\n  nameWithType: SocketElement.IPProtectionLevel\n  fullName: System.Net.Configuration.SocketElement.IPProtectionLevel\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets a value that specifies the default <xref href=\"System.Net.Sockets.IPProtectionLevel\"></xref> to use for a socket.\n  remarks: The IPProtectionLevel property enables configuration of a restriction for an IPv6 socket to a specified scope, such as addresses with the same link local or site local prefix. This option enables applications to place access restrictions on IPv6 sockets. Such restrictions enable an application running on a private LAN to simply and robustly harden itself against external attacks. This option widens or narrows the scope of a listening socket, enabling unrestricted access from public and private users when appropriate, or restricting access only to the same site, as required. This option has three defined protection levels specified in the <xref:System.Net.Sockets.IPProtectionLevel?displayProperty=fullName> enumeration.\n  syntax:\n    content: public System.Net.Sockets.IPProtectionLevel IPProtectionLevel { get; set; }\n    return:\n      type: System.Net.Sockets.IPProtectionLevel\n      description: The value of the <xref href=\"System.Net.Sockets.IPProtectionLevel\"></xref> for the current instance.\n  overload: System.Net.Configuration.SocketElement.IPProtectionLevel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.SocketElement.PostDeserialize\n  id: PostDeserialize\n  parent: System.Net.Configuration.SocketElement\n  langs:\n  - csharp\n  name: PostDeserialize()\n  nameWithType: SocketElement.PostDeserialize()\n  fullName: System.Net.Configuration.SocketElement.PostDeserialize()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  syntax:\n    content: protected override void PostDeserialize ();\n    parameters: []\n  overload: System.Net.Configuration.SocketElement.PostDeserialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.SocketElement.Properties\n  id: Properties\n  parent: System.Net.Configuration.SocketElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: SocketElement.Properties\n  fullName: System.Net.Configuration.SocketElement.Properties\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.Net.Configuration.SocketElement.Properties*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.Net.Configuration.SocketElement.#ctor\n  parent: System.Net.Configuration.SocketElement\n  isExternal: false\n  name: SocketElement()\n  nameWithType: SocketElement.SocketElement()\n  fullName: System.Net.Configuration.SocketElement.SocketElement()\n- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept\n  parent: System.Net.Configuration.SocketElement\n  isExternal: false\n  name: AlwaysUseCompletionPortsForAccept\n  nameWithType: SocketElement.AlwaysUseCompletionPortsForAccept\n  fullName: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect\n  parent: System.Net.Configuration.SocketElement\n  isExternal: false\n  name: AlwaysUseCompletionPortsForConnect\n  nameWithType: SocketElement.AlwaysUseCompletionPortsForConnect\n  fullName: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect\n- uid: System.Net.Configuration.SocketElement.IPProtectionLevel\n  parent: System.Net.Configuration.SocketElement\n  isExternal: false\n  name: IPProtectionLevel\n  nameWithType: SocketElement.IPProtectionLevel\n  fullName: System.Net.Configuration.SocketElement.IPProtectionLevel\n- uid: System.Net.Sockets.IPProtectionLevel\n  parent: System.Net.Sockets\n  isExternal: false\n  name: IPProtectionLevel\n  nameWithType: IPProtectionLevel\n  fullName: System.Net.Sockets.IPProtectionLevel\n- uid: System.Net.Configuration.SocketElement.PostDeserialize\n  parent: System.Net.Configuration.SocketElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: SocketElement.PostDeserialize()\n  fullName: System.Net.Configuration.SocketElement.PostDeserialize()\n- uid: System.Net.Configuration.SocketElement.Properties\n  parent: System.Net.Configuration.SocketElement\n  isExternal: false\n  name: Properties\n  nameWithType: SocketElement.Properties\n  fullName: System.Net.Configuration.SocketElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Net.Configuration.SocketElement.#ctor*\n  parent: System.Net.Configuration.SocketElement\n  isExternal: false\n  name: SocketElement\n  nameWithType: SocketElement.SocketElement\n- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept*\n  parent: System.Net.Configuration.SocketElement\n  isExternal: false\n  name: AlwaysUseCompletionPortsForAccept\n  nameWithType: SocketElement.AlwaysUseCompletionPortsForAccept\n- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect*\n  parent: System.Net.Configuration.SocketElement\n  isExternal: false\n  name: AlwaysUseCompletionPortsForConnect\n  nameWithType: SocketElement.AlwaysUseCompletionPortsForConnect\n- uid: System.Net.Configuration.SocketElement.IPProtectionLevel*\n  parent: System.Net.Configuration.SocketElement\n  isExternal: false\n  name: IPProtectionLevel\n  nameWithType: SocketElement.IPProtectionLevel\n- uid: System.Net.Configuration.SocketElement.PostDeserialize*\n  parent: System.Net.Configuration.SocketElement\n  isExternal: false\n  name: PostDeserialize\n  nameWithType: SocketElement.PostDeserialize\n- uid: System.Net.Configuration.SocketElement.Properties*\n  parent: System.Net.Configuration.SocketElement\n  isExternal: false\n  name: Properties\n  nameWithType: SocketElement.Properties\n"}