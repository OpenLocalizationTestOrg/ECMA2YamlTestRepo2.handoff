{"nodes":[{"pos":[524,550],"content":"Generates IDs for objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates IDs for objects.","pos":[0,26]}]},{"pos":[563,1657],"content":"The ObjectIDGenerator keeps track of previously identified objects. When you ask for the ID of an object, the ObjectIDGenerator knows whether to return the existing ID, or generate and remember a new ID.       The IDs are unique for the life of the ObjectIDGenerator instance. Generally, a ObjectIDGenerator life lasts as long as the <xref:System.Runtime.Serialization.Formatter> that created it. Object IDs have meaning only within a given serialized stream, and are used for tracking which objects have references to others within the serialized object graph.       Using a hash table, the ObjectIDGenerator retains which ID is assigned to which object. The object references, which uniquely identify each object, are addresses in the runtime garbage-collected heap. Object reference values can change during serialization, but the table is updated automatically so the information is correct.       Object IDs are 64-bit numbers. Allocation starts from one, so zero is never a valid object ID. A formatter can choose a zero value to represent an object reference whose value is `null`.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ObjectIDGenerator keeps track of previously identified objects.","pos":[0,67]},{"content":"When you ask for the ID of an object, the ObjectIDGenerator knows whether to return the existing ID, or generate and remember a new ID.","pos":[68,203]},{"content":"The IDs are unique for the life of the ObjectIDGenerator instance.","pos":[210,276]},{"content":"Generally, a ObjectIDGenerator life lasts as long as the &lt;xref:System.Runtime.Serialization.Formatter&gt; that created it.","pos":[277,396],"source":" Generally, a ObjectIDGenerator life lasts as long as the <xref:System.Runtime.Serialization.Formatter> that created it."},{"content":"Object IDs have meaning only within a given serialized stream, and are used for tracking which objects have references to others within the serialized object graph.","pos":[397,561]},{"content":"Using a hash table, the ObjectIDGenerator retains which ID is assigned to which object.","pos":[568,655]},{"content":"The object references, which uniquely identify each object, are addresses in the runtime garbage-collected heap.","pos":[656,768]},{"content":"Object reference values can change during serialization, but the table is updated automatically so the information is correct.","pos":[769,895]},{"content":"Object IDs are 64-bit numbers.","pos":[902,932]},{"content":"Allocation starts from one, so zero is never a valid object ID.","pos":[933,996]},{"content":"A formatter can choose a zero value to represent an object reference whose value is <ph id=\"ph1\">`null`</ph>.","pos":[997,1088],"source":" A formatter can choose a zero value to represent an object reference whose value is `null`."}]},{"pos":[2287,2395],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"></xref> class."},{"pos":[3046,3238],"content":"Returns the ID for the specified object, generating a new ID if the specified object has not already been identified by the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the ID for the specified object, generating a new ID if the specified object has not already been identified by the <xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"></xref>."},{"pos":[3397,3427],"content":"The object you want an ID for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object you want an ID for.","pos":[0,30]}]},{"pos":[3494,3739],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <ph id=\"ph1\">`obj`</ph> was not previously known to the <bpt id=\"p2\">&lt;xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if `obj` was not previously known to the <xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3796,4078],"content":"The object's ID is used for serialization. <code>firstTime</code> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this is the first time the object has been identified; otherwise, it is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object's ID is used for serialization.","pos":[0,42]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">firstTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if this is the first time the object has been identified; otherwise, it is set to <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[43,282],"source":"<code>firstTime</code> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this is the first time the object has been identified; otherwise, it is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[4261,4356],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>obj</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4505,4626],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has been asked to keep track of too many objects.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"></xref> has been asked to keep track of too many objects."},{"pos":[5123,5184],"content":"Determines whether an object has already been assigned an ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether an object has already been assigned an ID.","pos":[0,61]}]},{"pos":[5196,5578],"content":"If the object has already been assigned an ID, the ID is returned and `firstTime` is set to `false`; otherwise, zero is returned and `firstTime` is set to `true`. HasId differs from <xref:System.Runtime.Serialization.ObjectIDGenerator.GetId%2A> in that it never creates an ID for an object that has not already been seen by the <xref:System.Runtime.Serialization.ObjectIDGenerator>.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the object has already been assigned an ID, the ID is returned and <ph id=\"ph1\">`firstTime`</ph> is set to <ph id=\"ph2\">`false`</ph>; otherwise, zero is returned and <ph id=\"ph3\">`firstTime`</ph> is set to <ph id=\"ph4\">`true`</ph>.","pos":[0,162],"source":"If the object has already been assigned an ID, the ID is returned and `firstTime` is set to `false`; otherwise, zero is returned and `firstTime` is set to `true`."},{"content":"HasId differs from &lt;xref:System.Runtime.Serialization.ObjectIDGenerator.GetId%2A&gt; in that it never creates an ID for an object that has not already been seen by the &lt;xref:System.Runtime.Serialization.ObjectIDGenerator&gt;.","pos":[163,382],"source":" HasId differs from <xref:System.Runtime.Serialization.ObjectIDGenerator.GetId%2A> in that it never creates an ID for an object that has not already been seen by the <xref:System.Runtime.Serialization.ObjectIDGenerator>."}]},{"pos":[5737,5767],"content":"The object you are asking for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object you are asking for.","pos":[0,30]}]},{"pos":[5834,6079],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <ph id=\"ph1\">`obj`</ph> was not previously known to the <bpt id=\"p2\">&lt;xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if `obj` was not previously known to the <xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6136,6282],"content":"The object ID of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> if previously known to the <bpt id=\"p2\">&lt;xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, zero.","needQuote":true,"needEscape":true,"source":"The object ID of <code>obj</code> if previously known to the <xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"></xref>; otherwise, zero."},{"pos":[6465,6560],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>obj</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Serialization.ObjectIDGenerator\n  id: ObjectIDGenerator\n  children:\n  - System.Runtime.Serialization.ObjectIDGenerator.#ctor\n  - System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)\n  - System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)\n  langs:\n  - csharp\n  name: ObjectIDGenerator\n  nameWithType: ObjectIDGenerator\n  fullName: System.Runtime.Serialization.ObjectIDGenerator\n  type: Class\n  summary: Generates IDs for objects.\n  remarks: \"The ObjectIDGenerator keeps track of previously identified objects. When you ask for the ID of an object, the ObjectIDGenerator knows whether to return the existing ID, or generate and remember a new ID.  \\n  \\n The IDs are unique for the life of the ObjectIDGenerator instance. Generally, a ObjectIDGenerator life lasts as long as the <xref:System.Runtime.Serialization.Formatter> that created it. Object IDs have meaning only within a given serialized stream, and are used for tracking which objects have references to others within the serialized object graph.  \\n  \\n Using a hash table, the ObjectIDGenerator retains which ID is assigned to which object. The object references, which uniquely identify each object, are addresses in the runtime garbage-collected heap. Object reference values can change during serialization, but the table is updated automatically so the information is correct.  \\n  \\n Object IDs are 64-bit numbers. Allocation starts from one, so zero is never a valid object ID. A formatter can choose a zero value to represent an object reference whose value is `null`.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class ObjectIDGenerator\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Runtime.Serialization.ObjectIDGenerator.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Serialization.ObjectIDGenerator\n  langs:\n  - csharp\n  name: ObjectIDGenerator()\n  nameWithType: ObjectIDGenerator.ObjectIDGenerator()\n  fullName: System.Runtime.Serialization.ObjectIDGenerator.ObjectIDGenerator()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"></xref> class.\n  syntax:\n    content: public ObjectIDGenerator ();\n    parameters: []\n  overload: System.Runtime.Serialization.ObjectIDGenerator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)\n  id: GetId(System.Object,System.Boolean@)\n  parent: System.Runtime.Serialization.ObjectIDGenerator\n  langs:\n  - csharp\n  name: GetId(Object,Boolean)\n  nameWithType: ObjectIDGenerator.GetId(Object,Boolean)\n  fullName: System.Runtime.Serialization.ObjectIDGenerator.GetId(Object,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Serialization\n  summary: Returns the ID for the specified object, generating a new ID if the specified object has not already been identified by the <xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"></xref>.\n  syntax:\n    content: public virtual long GetId (object obj, out bool firstTime);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object you want an ID for.\n    - id: firstTime\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if `obj` was not previously known to the <xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Int64\n      description: The object's ID is used for serialization. <code>firstTime</code> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this is the first time the object has been identified; otherwise, it is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.Serialization.ObjectIDGenerator.GetId*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>obj</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: The <xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"></xref> has been asked to keep track of too many objects.\n  platform:\n  - net462\n- uid: System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)\n  id: HasId(System.Object,System.Boolean@)\n  parent: System.Runtime.Serialization.ObjectIDGenerator\n  langs:\n  - csharp\n  name: HasId(Object,Boolean)\n  nameWithType: ObjectIDGenerator.HasId(Object,Boolean)\n  fullName: System.Runtime.Serialization.ObjectIDGenerator.HasId(Object,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Serialization\n  summary: Determines whether an object has already been assigned an ID.\n  remarks: If the object has already been assigned an ID, the ID is returned and `firstTime` is set to `false`; otherwise, zero is returned and `firstTime` is set to `true`. HasId differs from <xref:System.Runtime.Serialization.ObjectIDGenerator.GetId%2A> in that it never creates an ID for an object that has not already been seen by the <xref:System.Runtime.Serialization.ObjectIDGenerator>.\n  syntax:\n    content: public virtual long HasId (object obj, out bool firstTime);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object you are asking for.\n    - id: firstTime\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if `obj` was not previously known to the <xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Int64\n      description: The object ID of <code>obj</code> if previously known to the <xref href=\"System.Runtime.Serialization.ObjectIDGenerator\"></xref>; otherwise, zero.\n  overload: System.Runtime.Serialization.ObjectIDGenerator.HasId*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>obj</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Runtime.Serialization.SerializationException\n  isExternal: true\n  name: System.Runtime.Serialization.SerializationException\n- uid: System.Runtime.Serialization.ObjectIDGenerator.#ctor\n  parent: System.Runtime.Serialization.ObjectIDGenerator\n  isExternal: false\n  name: ObjectIDGenerator()\n  nameWithType: ObjectIDGenerator.ObjectIDGenerator()\n  fullName: System.Runtime.Serialization.ObjectIDGenerator.ObjectIDGenerator()\n- uid: System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)\n  parent: System.Runtime.Serialization.ObjectIDGenerator\n  isExternal: false\n  name: GetId(Object,Boolean)\n  nameWithType: ObjectIDGenerator.GetId(Object,Boolean)\n  fullName: System.Runtime.Serialization.ObjectIDGenerator.GetId(Object,Boolean)\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)\n  parent: System.Runtime.Serialization.ObjectIDGenerator\n  isExternal: false\n  name: HasId(Object,Boolean)\n  nameWithType: ObjectIDGenerator.HasId(Object,Boolean)\n  fullName: System.Runtime.Serialization.ObjectIDGenerator.HasId(Object,Boolean)\n- uid: System.Runtime.Serialization.ObjectIDGenerator.#ctor*\n  parent: System.Runtime.Serialization.ObjectIDGenerator\n  isExternal: false\n  name: ObjectIDGenerator\n  nameWithType: ObjectIDGenerator.ObjectIDGenerator\n- uid: System.Runtime.Serialization.ObjectIDGenerator.GetId*\n  parent: System.Runtime.Serialization.ObjectIDGenerator\n  isExternal: false\n  name: GetId\n  nameWithType: ObjectIDGenerator.GetId\n- uid: System.Runtime.Serialization.ObjectIDGenerator.HasId*\n  parent: System.Runtime.Serialization.ObjectIDGenerator\n  isExternal: false\n  name: HasId\n  nameWithType: ObjectIDGenerator.HasId\n"}