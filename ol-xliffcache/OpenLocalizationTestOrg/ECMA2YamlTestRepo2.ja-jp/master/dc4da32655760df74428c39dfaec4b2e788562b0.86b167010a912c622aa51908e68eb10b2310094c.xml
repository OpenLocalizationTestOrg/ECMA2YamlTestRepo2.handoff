{"nodes":[{"pos":[7601,7707],"content":"Provides methods used to paint common Windows controls and their elements. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides methods used to paint common Windows controls and their elements. This class cannot be inherited.","pos":[0,106],"nodes":[{"content":"Provides methods used to paint common Windows controls and their elements.","pos":[0,74]},{"content":"This class cannot be inherited.","pos":[75,106]}]}]},{"pos":[7719,8277],"content":"The methods contained in the ControlPaint class enable you to draw your own controls or elements of controls. You can control the drawing of your own controls if the <xref:System.Windows.Forms.ControlStyles> bit is set to `true` for the control. You can get or set the style bits by calling the <xref:System.Windows.Forms.Control.GetStyle%2A> or <xref:System.Windows.Forms.Control.SetStyle%2A> methods. You can set multiple style bits for any control. The <xref:System.Windows.Forms.ControlStyles> enumeration members can be combined with bitwise operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"The methods contained in the ControlPaint class enable you to draw your own controls or elements of controls.","pos":[0,109]},{"content":"You can control the drawing of your own controls if the &lt;xref:System.Windows.Forms.ControlStyles&gt; bit is set to <ph id=\"ph1\">`true`</ph> for the control.","pos":[110,245],"source":" You can control the drawing of your own controls if the <xref:System.Windows.Forms.ControlStyles> bit is set to `true` for the control."},{"content":"You can get or set the style bits by calling the &lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt; or &lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt; methods.","pos":[246,402],"source":" You can get or set the style bits by calling the <xref:System.Windows.Forms.Control.GetStyle%2A> or <xref:System.Windows.Forms.Control.SetStyle%2A> methods."},{"content":"You can set multiple style bits for any control.","pos":[403,451]},{"content":"The &lt;xref:System.Windows.Forms.ControlStyles&gt; enumeration members can be combined with bitwise operations.","pos":[452,558],"source":" The <xref:System.Windows.Forms.ControlStyles> enumeration members can be combined with bitwise operations."}]},{"pos":[9241,9324],"content":"Gets the color to use as the <xref:System.Drawing.SystemColors.ControlDark*> color.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the color to use as the &lt;xref:System.Drawing.SystemColors.ControlDark*&gt; color.","pos":[0,83],"source":"Gets the color to use as the <xref:System.Drawing.SystemColors.ControlDark*> color."}]},{"pos":[9336,9631],"content":"If the user has enabled the <xref:System.Windows.Forms.SystemInformation.HighContrast%2A> mode, this property is set to <xref:System.Drawing.SystemColors.WindowFrame%2A?displayProperty=fullName>; otherwise, it is set to <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the user has enabled the &lt;xref:System.Windows.Forms.SystemInformation.HighContrast%2A&gt; mode, this property is set to &lt;xref:System.Drawing.SystemColors.WindowFrame%2A?displayProperty=fullName&gt;; otherwise, it is set to &lt;xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=fullName&gt;.","pos":[0,295],"source":"If the user has enabled the <xref:System.Windows.Forms.SystemInformation.HighContrast%2A> mode, this property is set to <xref:System.Drawing.SystemColors.WindowFrame%2A?displayProperty=fullName>; otherwise, it is set to <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=fullName>."}]},{"pos":[9783,9897],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use as the &lt;xref:System.Drawing.SystemColors.ControlDark*&gt; color.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> to use as the <xref:System.Drawing.SystemColors.ControlDark*> color."},{"pos":[10523,10553],"content":"Creates a 16-bit color bitmap.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a 16-bit color bitmap.","pos":[0,30]}]},{"pos":[10768,10825],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Bitmap\"></xref> to create."},{"pos":[10899,10963],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the background.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> of the background."},{"pos":[11021,11083],"content":"An <xref:System.IntPtr> representing the handle to the bitmap.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IntPtr&gt; representing the handle to the bitmap.","pos":[0,62],"source":"An <xref:System.IntPtr> representing the handle to the bitmap."}]},{"pos":[11717,11817],"content":"Creates a Win32 <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_HBITMAP\" name=\"HBITMAP\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> out of the image.","needQuote":true,"needEscape":true,"source":"Creates a Win32 <xref uid=\"langword_csharp_HBITMAP\" name=\"HBITMAP\" href=\"\"></xref> out of the image."},{"pos":[11829,11969],"content":"You are responsible for de-allocating the `HBITMAP`. If the image uses transparency, the background will be filled with the specified color.","needQuote":true,"needEscape":true,"nodes":[{"content":"You are responsible for de-allocating the <ph id=\"ph1\">`HBITMAP`</ph>.","pos":[0,52],"source":"You are responsible for de-allocating the `HBITMAP`."},{"content":"If the image uses transparency, the background will be filled with the specified color.","pos":[53,140]}]},{"pos":[12178,12235],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Bitmap\"></xref> to create."},{"pos":[12306,12339],"content":"A pointer to the monochrome mask.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to the monochrome mask.","pos":[0,33]}]},{"pos":[12397,12459],"content":"An <xref:System.IntPtr> representing the handle to the bitmap.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IntPtr&gt; representing the handle to the bitmap.","pos":[0,62],"source":"An <xref:System.IntPtr> representing the handle to the bitmap."}]},{"pos":[13083,13191],"content":"Creates a color mask for the specified bitmap that indicates which color should be displayed as transparent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a color mask for the specified bitmap that indicates which color should be displayed as transparent.","pos":[0,108]}]},{"pos":[13203,13252],"content":"You are responsible for de-allocating the bitmap.","needQuote":true,"needEscape":true,"nodes":[{"content":"You are responsible for de-allocating the bitmap.","pos":[0,49]}]},{"pos":[13445,13528],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create the transparency mask for.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Bitmap\"></xref> to create the transparency mask for."},{"pos":[13586,13652],"content":"The handle to the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> mask.","needQuote":true,"needEscape":true,"source":"The handle to the <xref href=\"System.Drawing.Bitmap\"></xref> mask."},{"pos":[14153,14226],"content":"Creates a new dark color object for the control from the specified color.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new dark color object for the control from the specified color.","pos":[0,73]}]},{"pos":[14238,14496],"content":"If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is decreased.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the specified &lt;xref:System.Drawing.Color&gt; is one of the &lt;xref:System.Drawing.SystemColors&gt;, the color is converted to a &lt;xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=fullName&gt; color; otherwise, the color's luminosity value is decreased.","pos":[0,258],"source":"If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is decreased."}]},{"pos":[14682,14743],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be darkened.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> to be darkened."},{"pos":[14808,14898],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dark color on the control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Color\"></xref> that represents the dark color on the control."},{"pos":[15423,15539],"content":"Creates a new dark color object for the control from the specified color and darkens it by the specified percentage.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new dark color object for the control from the specified color and darkens it by the specified percentage.","pos":[0,116]}]},{"pos":[15551,15809],"content":"If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is decreased.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the specified &lt;xref:System.Drawing.Color&gt; is one of the &lt;xref:System.Drawing.SystemColors&gt;, the color is converted to a &lt;xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=fullName&gt; color; otherwise, the color's luminosity value is decreased.","pos":[0,258],"source":"If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is decreased."}]},{"pos":[16017,16078],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be darkened.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> to be darkened."},{"pos":[16149,16230],"content":"The percentage to darken the specified <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The percentage to darken the specified <xref href=\"System.Drawing.Color\"></xref>."},{"pos":[16295,16384],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represent the dark color on the control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Color\"></xref> that represent the dark color on the control."},{"pos":[16880,16953],"content":"Creates a new dark color object for the control from the specified color.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new dark color object for the control from the specified color.","pos":[0,73]}]},{"pos":[16965,17229],"content":"If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to the <xref:System.Drawing.SystemColors.ControlDarkDark%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is increased.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the specified &lt;xref:System.Drawing.Color&gt; is one of the &lt;xref:System.Drawing.SystemColors&gt;, the color is converted to the &lt;xref:System.Drawing.SystemColors.ControlDarkDark%2A?displayProperty=fullName&gt; color; otherwise, the color's luminosity value is increased.","pos":[0,264],"source":"If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to the <xref:System.Drawing.SystemColors.ControlDarkDark%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is increased."}]},{"pos":[17419,17480],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be darkened.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> to be darkened."},{"pos":[17545,17635],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dark color on the control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Color\"></xref> that represents the dark color on the control."},{"pos":[18432,18576],"content":"Draws a border with the specified style and color, on the specified graphics surface, and within the specified bounds on a button-style control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a border with the specified style and color, on the specified graphics surface, and within the specified bounds on a button-style control.","pos":[0,144]}]},{"pos":[19630,19690],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[19764,19859],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the border.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the border."},{"pos":[19928,19988],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the border.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> of the border."},{"pos":[20075,20192],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonBorderStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the style of the border.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.ButtonBorderStyle\"></xref> values that specifies the style of the border."},{"pos":[21743,21905],"content":"Draws a border on a button-style control with the specified styles, colors, and border widths; on the specified graphics surface; and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a border on a button-style control with the specified styles, colors, and border widths; on the specified graphics surface; and within the specified bounds.","pos":[0,162]}]},{"pos":[23279,23339],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[23413,23508],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the border.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the border."},{"pos":[23581,23653],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the left of the border.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> of the left of the border."},{"pos":[23718,23747],"content":"The width of the left border.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the left border.","pos":[0,29]}]},{"pos":[23838,23960],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonBorderStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the style of the left border.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.ButtonBorderStyle\"></xref> values that specifies the style of the left border."},{"pos":[24032,24103],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the top of the border.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> of the top of the border."},{"pos":[24167,24195],"content":"The width of the top border.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the top border.","pos":[0,28]}]},{"pos":[24285,24406],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonBorderStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the style of the top border.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.ButtonBorderStyle\"></xref> values that specifies the style of the top border."},{"pos":[24480,24553],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the right of the border.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> of the right of the border."},{"pos":[24619,24649],"content":"The width of the right border.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the right border.","pos":[0,30]}]},{"pos":[24741,24864],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonBorderStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the style of the right border.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.ButtonBorderStyle\"></xref> values that specifies the style of the right border."},{"pos":[24939,25013],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the bottom of the border.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> of the bottom of the border."},{"pos":[25080,25111],"content":"The width of the bottom border.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the bottom border.","pos":[0,31]}]},{"pos":[25204,25328],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonBorderStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the style of the bottom border.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.ButtonBorderStyle\"></xref> values that specifies the style of the bottom border."},{"pos":[25945,26063],"content":"Draws a three-dimensional style border on the specified graphics surface and within the specified bounds on a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a three-dimensional style border on the specified graphics surface and within the specified bounds on a control.","pos":[0,118]}]},{"pos":[26075,26190],"content":"The <xref:System.Windows.Forms.Border3DStyle?displayProperty=fullName> style is used by default to draw the border.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Forms.Border3DStyle?displayProperty=fullName&gt; style is used by default to draw the border.","pos":[0,115],"source":"The <xref:System.Windows.Forms.Border3DStyle?displayProperty=fullName> style is used by default to draw the border."}]},{"pos":[27117,27177],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[27254,27349],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the border.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the border."},{"pos":[28080,28225],"content":"Draws a three-dimensional style border with the specified style, on the specified graphics surface, and within the specified bounds on a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a three-dimensional style border with the specified style, on the specified graphics surface, and within the specified bounds on a control.","pos":[0,145]}]},{"pos":[29252,29312],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[29389,29484],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the border.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the border."},{"pos":[29567,29680],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Border3DStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the style of the border.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.Border3DStyle\"></xref> values that specifies the style of the border."},{"pos":[30518,30673],"content":"Draws a three-dimensional style border with the specified style, on the specified graphics surface and sides, and within the specified bounds on a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a three-dimensional style border with the specified style, on the specified graphics surface and sides, and within the specified bounds on a control.","pos":[0,155]}]},{"pos":[31741,31801],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[31878,31973],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the border.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the border."},{"pos":[32056,32169],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Border3DStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the style of the border.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.Border3DStyle\"></xref> values that specifies the style of the border."},{"pos":[32251,32387],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Border3DSide\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the side of the rectangle to draw the border on.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.Border3DSide\"></xref> values that specifies the side of the rectangle to draw the border on."},{"pos":[33102,33220],"content":"Draws a three-dimensional style border on the specified graphics surface and within the specified bounds on a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a three-dimensional style border on the specified graphics surface and within the specified bounds on a control.","pos":[0,118]}]},{"pos":[33232,33347],"content":"The <xref:System.Windows.Forms.Border3DStyle?displayProperty=fullName> style is used by default to draw the border.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Forms.Border3DStyle?displayProperty=fullName&gt; style is used by default to draw the border.","pos":[0,115],"source":"The <xref:System.Windows.Forms.Border3DStyle?displayProperty=fullName> style is used by default to draw the border."}]},{"pos":[34319,34379],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[34436,34493],"content":"The x-coordinate of the top left of the border rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the top left of the border rectangle.","pos":[0,57]}]},{"pos":[34550,34607],"content":"The y-coordinate of the top left of the border rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the top left of the border rectangle.","pos":[0,57]}]},{"pos":[34668,34702],"content":"The width of the border rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the border rectangle.","pos":[0,34]}]},{"pos":[34764,34799],"content":"The height of the border rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the border rectangle.","pos":[0,35]}]},{"pos":[35626,35771],"content":"Draws a three-dimensional style border with the specified style, on the specified graphics surface, and within the specified bounds on a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a three-dimensional style border with the specified style, on the specified graphics surface, and within the specified bounds on a control.","pos":[0,145]}]},{"pos":[36799,36859],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[36916,36973],"content":"The x-coordinate of the top left of the border rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the top left of the border rectangle.","pos":[0,57]}]},{"pos":[37030,37087],"content":"The y-coordinate of the top left of the border rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the top left of the border rectangle.","pos":[0,57]}]},{"pos":[37148,37182],"content":"The width of the border rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the border rectangle.","pos":[0,34]}]},{"pos":[37244,37279],"content":"The height of the border rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the border rectangle.","pos":[0,35]}]},{"pos":[37362,37475],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Border3DStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the style of the border.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.Border3DStyle\"></xref> values that specifies the style of the border."},{"pos":[38409,38563],"content":"Draws a three-dimensional style border with the specified style, on the specified graphics surface and side, and within the specified bounds on a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a three-dimensional style border with the specified style, on the specified graphics surface and side, and within the specified bounds on a control.","pos":[0,154]}]},{"pos":[39632,39692],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[39749,39806],"content":"The x-coordinate of the top left of the border rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the top left of the border rectangle.","pos":[0,57]}]},{"pos":[39863,39920],"content":"The y-coordinate of the top left of the border rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the top left of the border rectangle.","pos":[0,57]}]},{"pos":[39981,40015],"content":"The width of the border rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the border rectangle.","pos":[0,34]}]},{"pos":[40077,40112],"content":"The height of the border rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the border rectangle.","pos":[0,35]}]},{"pos":[40195,40308],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Border3DStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the style of the border.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.Border3DStyle\"></xref> values that specifies the style of the border."},{"pos":[40390,40488],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Border3DSide\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the rectangle to draw the border on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Forms.Border3DSide\"></xref> of the rectangle to draw the border on."},{"pos":[41199,41313],"content":"Draws a button control in the specified state, on the specified graphics surface, and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a button control in the specified state, on the specified graphics surface, and within the specified bounds.","pos":[0,114]}]},{"pos":[41569,41629],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[41706,41801],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the button.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the button."},{"pos":[41882,42019],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the state to draw the button in.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the button in."},{"pos":[42824,42938],"content":"Draws a button control in the specified state, on the specified graphics surface, and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a button control in the specified state, on the specified graphics surface, and within the specified bounds.","pos":[0,114]}]},{"pos":[43491,43551],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[43608,43675],"content":"The x-coordinate of the upper left corner of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the upper left corner of the drawing rectangle.","pos":[0,67]}]},{"pos":[43732,43799],"content":"The y-coordinate of the upper left corner of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the upper left corner of the drawing rectangle.","pos":[0,67]}]},{"pos":[43860,43884],"content":"The width of the button.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the button.","pos":[0,24]}]},{"pos":[43946,43971],"content":"The height of the button.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the button.","pos":[0,25]}]},{"pos":[44052,44189],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the state to draw the button in.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the button in."},{"pos":[45045,45179],"content":"Draws the specified caption button control in the specified state, on the specified graphics surface, and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws the specified caption button control in the specified state, on the specified graphics surface, and within the specified bounds.","pos":[0,134]}]},{"pos":[46316,46376],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[46453,46556],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the caption button.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the caption button."},{"pos":[46640,46764],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CaptionButton\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the type of caption button to draw.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.CaptionButton\"></xref> values that specifies the type of caption button to draw."},{"pos":[46845,46982],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the state to draw the button in.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the button in."},{"pos":[47941,48075],"content":"Draws the specified caption button control in the specified state, on the specified graphics surface, and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws the specified caption button control in the specified state, on the specified graphics surface, and within the specified bounds.","pos":[0,134]}]},{"pos":[49285,49345],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[49402,49460],"content":"The x-coordinate of the top left of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the top left of the drawing rectangle.","pos":[0,58]}]},{"pos":[49517,49575],"content":"The y-coordinate of the top left of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the top left of the drawing rectangle.","pos":[0,58]}]},{"pos":[49636,49671],"content":"The width of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the drawing rectangle.","pos":[0,35]}]},{"pos":[49733,49769],"content":"The height of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the drawing rectangle.","pos":[0,36]}]},{"pos":[49853,49977],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CaptionButton\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the type of caption button to draw.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.CaptionButton\"></xref> values that specifies the type of caption button to draw."},{"pos":[50058,50195],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the state to draw the button in.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the button in."},{"pos":[50921,51038],"content":"Draws a check box control in the specified state, on the specified graphics surface, and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a check box control in the specified state, on the specified graphics surface, and within the specified bounds.","pos":[0,117]}]},{"pos":[51296,51356],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[51433,51531],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the check box.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the check box."},{"pos":[51612,51752],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the state to draw the check box in.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the check box in."},{"pos":[52569,52686],"content":"Draws a check box control in the specified state, on the specified graphics surface, and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a check box control in the specified state, on the specified graphics surface, and within the specified bounds.","pos":[0,117]}]},{"pos":[52945,53005],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[53062,53129],"content":"The x-coordinate of the upper left corner of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the upper left corner of the drawing rectangle.","pos":[0,67]}]},{"pos":[53186,53253],"content":"The y-coordinate of the upper left corner of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the upper left corner of the drawing rectangle.","pos":[0,67]}]},{"pos":[53314,53341],"content":"The width of the check box.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the check box.","pos":[0,27]}]},{"pos":[53403,53431],"content":"The height of the check box.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the check box.","pos":[0,28]}]},{"pos":[53512,53652],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the state to draw the check box in.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the check box in."},{"pos":[54388,54527],"content":"Draws a drop-down button on a combo box control in the specified state, on the specified graphics surface, and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a drop-down button on a combo box control in the specified state, on the specified graphics surface, and within the specified bounds.","pos":[0,139]}]},{"pos":[54788,54848],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[54925,55023],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the combo box.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the combo box."},{"pos":[55104,55244],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the state to draw the combo box in.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the combo box in."},{"pos":[56079,56218],"content":"Draws a drop-down button on a combo box control in the specified state, on the specified graphics surface, and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a drop-down button on a combo box control in the specified state, on the specified graphics surface, and within the specified bounds.","pos":[0,139]}]},{"pos":[56480,56540],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[56597,56654],"content":"The x-coordinate of the top left of the border rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the top left of the border rectangle.","pos":[0,57]}]},{"pos":[56711,56768],"content":"The y-coordinate of the top left of the border rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the top left of the border rectangle.","pos":[0,57]}]},{"pos":[56829,56856],"content":"The width of the combo box.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the combo box.","pos":[0,27]}]},{"pos":[56918,56946],"content":"The height of the combo box.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the combo box.","pos":[0,28]}]},{"pos":[57027,57167],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the state to draw the combo box in.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the combo box in."},{"pos":[57844,57954],"content":"Draws a container control grab handle glyph on the specified graphics surface and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a container control grab handle glyph on the specified graphics surface and within the specified bounds.","pos":[0,110]}]},{"pos":[57966,58146],"content":"Grab handles are used by containers to indicate to the user that the user can directly manipulate the containers. The manipulation can consist of actions such as sizing and moving.","needQuote":true,"needEscape":true,"nodes":[{"content":"Grab handles are used by containers to indicate to the user that the user can directly manipulate the containers. The manipulation can consist of actions such as sizing and moving.","pos":[0,180],"nodes":[{"content":"Grab handles are used by containers to indicate to the user that the user can directly manipulate the containers.","pos":[0,113]},{"content":"The manipulation can consist of actions such as sizing and moving.","pos":[114,180]}]}]},{"pos":[58372,58432],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[58506,58612],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the grab handle glyph.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the grab handle glyph."},{"pos":[59272,59362],"content":"Draws a focus rectangle on the specified graphics surface and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a focus rectangle on the specified graphics surface and within the specified bounds.","pos":[0,90]}]},{"pos":[59374,59488],"content":"A focus rectangle is a dotted rectangle that Windows uses to indicate what control has the current keyboard focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"A focus rectangle is a dotted rectangle that Windows uses to indicate what control has the current keyboard focus.","pos":[0,114]}]},{"pos":[60401,60461],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[60538,60644],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the grab handle glyph.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the grab handle glyph."},{"pos":[61419,61509],"content":"Draws a focus rectangle on the specified graphics surface and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a focus rectangle on the specified graphics surface and within the specified bounds.","pos":[0,90]}]},{"pos":[61521,61635],"content":"A focus rectangle is a dotted rectangle that Windows uses to indicate what control has the current keyboard focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"A focus rectangle is a dotted rectangle that Windows uses to indicate what control has the current keyboard focus.","pos":[0,114]}]},{"pos":[62654,62714],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[62791,62897],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the grab handle glyph.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the grab handle glyph."},{"pos":[62970,63090],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is the foreground color of the object to draw the focus rectangle on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> that is the foreground color of the object to draw the focus rectangle on."},{"pos":[63163,63283],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is the background color of the object to draw the focus rectangle on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> that is the background color of the object to draw the focus rectangle on."},{"pos":[64026,64172],"content":"Draws a standard selection grab handle glyph on the specified graphics surface, within the specified bounds, and in the specified state and style.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a standard selection grab handle glyph on the specified graphics surface, within the specified bounds, and in the specified state and style.","pos":[0,146]}]},{"pos":[64184,64357],"content":"Grab handles are used by objects to indicate to the user that the user can directly manipulate the object. The manipulation can consist of actions such as sizing and moving.","needQuote":true,"needEscape":true,"nodes":[{"content":"Grab handles are used by objects to indicate to the user that the user can directly manipulate the object. The manipulation can consist of actions such as sizing and moving.","pos":[0,173],"nodes":[{"content":"Grab handles are used by objects to indicate to the user that the user can directly manipulate the object.","pos":[0,106]},{"content":"The manipulation can consist of actions such as sizing and moving.","pos":[107,173]}]}]},{"pos":[64605,64665],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[64742,64848],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the grab handle glyph.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the grab handle glyph."},{"pos":[64913,65093],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw the handle as a primary grab handle; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to draw the handle as a primary grab handle; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[65158,65333],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw the handle in an enabled state; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to draw the handle in an enabled state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[66049,66199],"content":"Draws a grid of one-pixel dots with the specified spacing, within the specified bounds, on the specified graphics surface, and in the specified color.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a grid of one-pixel dots with the specified spacing, within the specified bounds, on the specified graphics surface, and in the specified color.","pos":[0,150]}]},{"pos":[66211,66343],"content":"The <ph id=\"ph1\">`backColor`</ph> parameter is used to calculate the fill color of the dots so that the grid is always visible against the background.","needQuote":true,"needEscape":true,"source":"The `backColor` parameter is used to calculate the fill color of the dots so that the grid is always visible against the background."},{"pos":[66623,66683],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[66755,66848],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the grid.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the grid."},{"pos":[66928,67038],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specified the height and width between the dots of the grid.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Size\"></xref> that specified the height and width between the dots of the grid."},{"pos":[67111,67191],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the background behind the grid.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> of the background behind the grid."},{"pos":[67959,68005],"content":"Draws the specified image in a disabled state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws the specified image in a disabled state.","pos":[0,46]}]},{"pos":[68017,68154],"content":"The <ph id=\"ph1\">`background`</ph> parameter is used to calculate the fill color of the disabled image so that it is always visible against the background.","needQuote":true,"needEscape":true,"source":"The `background` parameter is used to calculate the fill color of the disabled image so that it is always visible against the background."},{"pos":[68416,68476],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[68545,68599],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Image\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Image\"></xref> to draw."},{"pos":[68656,68709],"content":"The x-coordinate of the top left of the border image.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the top left of the border image.","pos":[0,53]}]},{"pos":[68766,68819],"content":"The y-coordinate of the top left of the border image.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the top left of the border image.","pos":[0,53]}]},{"pos":[68893,68974],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the background behind the image.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> of the background behind the image."},{"pos":[69667,69848],"content":"Draws a locked selection frame on the screen within the specified bounds and on the specified graphics surface. Specifies whether to draw the frame with the primary selected colors.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a locked selection frame on the screen within the specified bounds and on the specified graphics surface. Specifies whether to draw the frame with the primary selected colors.","pos":[0,181],"nodes":[{"content":"Draws a locked selection frame on the screen within the specified bounds and on the specified graphics surface.","pos":[0,111]},{"content":"Specifies whether to draw the frame with the primary selected colors.","pos":[112,181]}]}]},{"pos":[70083,70143],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[70220,70314],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the frame.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the frame."},{"pos":[70379,70581],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw this frame with the colors used for the primary selection; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to draw this frame with the colors used for the primary selection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[71300,71411],"content":"Draws the specified menu glyph on a menu item control within the specified bounds and on the specified surface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws the specified menu glyph on a menu item control within the specified bounds and on the specified surface.","pos":[0,111]}]},{"pos":[71423,71864],"content":"When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove. For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When owner-drawing &lt;xref:System.Windows.Forms.MenuItem&gt; controls, you need to verify property values to determine the correct glyph to draw or remove.","pos":[0,150],"source":"When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove."},{"content":"For example, when the &lt;xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName&gt; property is set to <ph id=\"ph1\">`true`</ph>, you must call the &lt;xref:System.Windows.Forms.MenuGlyph&gt; value of &lt;xref:System.Windows.Forms.MenuGlyph&gt; to draw a check mark on the &lt;xref:System.Windows.Forms.MenuItem&gt;.","pos":[151,441],"source":" For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>."}]},{"pos":[72121,72181],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[72258,72352],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the glyph.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the glyph."},{"pos":[72431,72534],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MenuGlyph\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the image to draw.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.MenuGlyph\"></xref> values that specifies the image to draw."},{"pos":[73371,73707],"content":"Draws the specified menu glyph on a menu item control within the specified bounds and on the specified surface, replacing &lt;xref:System.Drawing.Color.White<bpt id=\"p1\">*</bpt>&gt; with the color specified in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">backColor</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter and replacing &lt;xref:System.Drawing.Color.Black<ept id=\"p1\">*</ept>&gt; with the color specified in the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">foreColor</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"Draws the specified menu glyph on a menu item control within the specified bounds and on the specified surface, replacing <xref:System.Drawing.Color.White*> with the color specified in the <code>backColor</code> parameter and replacing <xref:System.Drawing.Color.Black*> with the color specified in the <code>foreColor</code> parameter."},{"pos":[73719,74160],"content":"When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove. For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When owner-drawing &lt;xref:System.Windows.Forms.MenuItem&gt; controls, you need to verify property values to determine the correct glyph to draw or remove.","pos":[0,150],"source":"When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove."},{"content":"For example, when the &lt;xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName&gt; property is set to <ph id=\"ph1\">`true`</ph>, you must call the &lt;xref:System.Windows.Forms.MenuGlyph&gt; value of &lt;xref:System.Windows.Forms.MenuGlyph&gt; to draw a check mark on the &lt;xref:System.Windows.Forms.MenuItem&gt;.","pos":[151,441],"source":" For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>."}]},{"pos":[74481,74541],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[74618,74712],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the glyph.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the glyph."},{"pos":[74791,74894],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MenuGlyph\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the image to draw.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.MenuGlyph\"></xref> values that specifies the image to draw."},{"pos":[74967,75050],"content":"The color that replaces <xref:System.Drawing.Color.White*> as the foreground color.","needQuote":true,"needEscape":true,"nodes":[{"content":"The color that replaces &lt;xref:System.Drawing.Color.White*&gt; as the foreground color.","pos":[0,83],"source":"The color that replaces <xref:System.Drawing.Color.White*> as the foreground color."}]},{"pos":[75123,75206],"content":"The color that replaces <xref:System.Drawing.Color.Black*> as the background color.","needQuote":true,"needEscape":true,"nodes":[{"content":"The color that replaces &lt;xref:System.Drawing.Color.Black*&gt; as the background color.","pos":[0,83],"source":"The color that replaces <xref:System.Drawing.Color.Black*> as the background color."}]},{"pos":[76019,76128],"content":"Draws the specified menu glyph on a menu item control with the specified bounds and on the specified surface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws the specified menu glyph on a menu item control with the specified bounds and on the specified surface.","pos":[0,109]}]},{"pos":[76140,76574],"content":"When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove. For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName> property is set to true, you call the <xref:System.Windows.Forms.MenuGlyph> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove. For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName> property is set to true, you call the <xref:System.Windows.Forms.MenuGlyph> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>.","pos":[0,434],"nodes":[{"content":"When owner-drawing &lt;xref:System.Windows.Forms.MenuItem&gt; controls, you need to verify property values to determine the correct glyph to draw or remove.","pos":[0,150],"source":"When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove."},{"content":"For example, when the &lt;xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName&gt; property is set to true, you call the &lt;xref:System.Windows.Forms.MenuGlyph&gt; value of &lt;xref:System.Windows.Forms.MenuGlyph&gt; to draw a check mark on the &lt;xref:System.Windows.Forms.MenuItem&gt;.","pos":[151,434],"source":" For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName> property is set to true, you call the <xref:System.Windows.Forms.MenuGlyph> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>."}]}]},{"pos":[76832,76892],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[76949,77016],"content":"The x-coordinate of the upper left corner of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the upper left corner of the drawing rectangle.","pos":[0,67]}]},{"pos":[77073,77140],"content":"The y-coordinate of the upper left corner of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the upper left corner of the drawing rectangle.","pos":[0,67]}]},{"pos":[77201,77229],"content":"The width of the menu glyph.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the menu glyph.","pos":[0,28]}]},{"pos":[77291,77320],"content":"The height of the menu glyph.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the menu glyph.","pos":[0,29]}]},{"pos":[77399,77502],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MenuGlyph\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the image to draw.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.MenuGlyph\"></xref> values that specifies the image to draw."},{"pos":[78435,78791],"content":"Draws the specified menu glyph on a menu item control within the specified coordinates, height, and width on the specified surface, replacing &lt;xref:System.Drawing.Color.White<bpt id=\"p1\">*</bpt>&gt; with the color specified in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">backColor</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter and replacing &lt;xref:System.Drawing.Color.Black<ept id=\"p1\">*</ept>&gt; with the color specified in the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">foreColor</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"Draws the specified menu glyph on a menu item control within the specified coordinates, height, and width on the specified surface, replacing <xref:System.Drawing.Color.White*> with the color specified in the <code>backColor</code> parameter and replacing <xref:System.Drawing.Color.Black*> with the color specified in the <code>foreColor</code> parameter."},{"pos":[78803,79244],"content":"When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove. For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When owner-drawing &lt;xref:System.Windows.Forms.MenuItem&gt; controls, you need to verify property values to determine the correct glyph to draw or remove.","pos":[0,150],"source":"When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove."},{"content":"For example, when the &lt;xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName&gt; property is set to <ph id=\"ph1\">`true`</ph>, you must call the &lt;xref:System.Windows.Forms.MenuGlyph&gt; value of &lt;xref:System.Windows.Forms.MenuGlyph&gt; to draw a check mark on the &lt;xref:System.Windows.Forms.MenuItem&gt;.","pos":[151,441],"source":" For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>."}]},{"pos":[79566,79626],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[79683,79750],"content":"The x-coordinate of the upper left corner of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the upper left corner of the drawing rectangle.","pos":[0,67]}]},{"pos":[79807,79874],"content":"The y-coordinate of the upper left corner of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the upper left corner of the drawing rectangle.","pos":[0,67]}]},{"pos":[79935,79963],"content":"The width of the menu glyph.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the menu glyph.","pos":[0,28]}]},{"pos":[80025,80054],"content":"The height of the menu glyph.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the menu glyph.","pos":[0,29]}]},{"pos":[80133,80236],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MenuGlyph\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the image to draw.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.MenuGlyph\"></xref> values that specifies the image to draw."},{"pos":[80309,80392],"content":"The color that replaces <xref:System.Drawing.Color.White*> as the foreground color.","needQuote":true,"needEscape":true,"nodes":[{"content":"The color that replaces &lt;xref:System.Drawing.Color.White*&gt; as the foreground color.","pos":[0,83],"source":"The color that replaces <xref:System.Drawing.Color.White*> as the foreground color."}]},{"pos":[80465,80548],"content":"The color that replaces <xref:System.Drawing.Color.Black*> as the background color.","needQuote":true,"needEscape":true,"nodes":[{"content":"The color that replaces &lt;xref:System.Drawing.Color.Black*&gt; as the background color.","pos":[0,83],"source":"The color that replaces <xref:System.Drawing.Color.Black*> as the background color."}]},{"pos":[81295,81424],"content":"Draws a three-state check box control in the specified state, on the specified graphics surface, and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a three-state check box control in the specified state, on the specified graphics surface, and within the specified bounds.","pos":[0,129]}]},{"pos":[81687,81747],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[81824,81922],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the check box.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the check box."},{"pos":[82003,82143],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the state to draw the check box in.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the check box in."},{"pos":[82990,83119],"content":"Draws a three-state check box control in the specified state, on the specified graphics surface, and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a three-state check box control in the specified state, on the specified graphics surface, and within the specified bounds.","pos":[0,129]}]},{"pos":[83383,83443],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[83500,83567],"content":"The x-coordinate of the upper left corner of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the upper left corner of the drawing rectangle.","pos":[0,67]}]},{"pos":[83624,83691],"content":"The y-coordinate of the upper left corner of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the upper left corner of the drawing rectangle.","pos":[0,67]}]},{"pos":[83752,83779],"content":"The width of the check box.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the check box.","pos":[0,27]}]},{"pos":[83841,83869],"content":"The height of the check box.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the check box.","pos":[0,28]}]},{"pos":[83950,84090],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the state to draw the check box in.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the check box in."},{"pos":[84831,84951],"content":"Draws a radio button control in the specified state, on the specified graphics surface, and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a radio button control in the specified state, on the specified graphics surface, and within the specified bounds.","pos":[0,120]}]},{"pos":[85212,85272],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[85349,85450],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the radio button.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the radio button."},{"pos":[85531,85674],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the state to draw the radio button in.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the radio button in."},{"pos":[86509,86629],"content":"Draws a radio button control in the specified state, on the specified graphics surface, and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a radio button control in the specified state, on the specified graphics surface, and within the specified bounds.","pos":[0,120]}]},{"pos":[86891,86951],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[87008,87075],"content":"The x-coordinate of the upper left corner of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the upper left corner of the drawing rectangle.","pos":[0,67]}]},{"pos":[87132,87199],"content":"The y-coordinate of the upper left corner of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the upper left corner of the drawing rectangle.","pos":[0,67]}]},{"pos":[87260,87290],"content":"The width of the radio button.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the radio button.","pos":[0,30]}]},{"pos":[87352,87383],"content":"The height of the radio button.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the radio button.","pos":[0,31]}]},{"pos":[87464,87607],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the state to draw the radio button in.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the radio button in."},{"pos":[88346,88478],"content":"Draws a reversible frame on the screen within the specified bounds, with the specified background color, and in the specified state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a reversible frame on the screen within the specified bounds, with the specified background color, and in the specified state.","pos":[0,132]}]},{"pos":[88491,88858],"content":"The `backColor` parameter is used to calculate the fill color of the frame so that it is always visible against the background.       The results of this method can be reversed by drawing the same frame again. Drawing a frame using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`backColor`</ph> parameter is used to calculate the fill color of the frame so that it is always visible against the background.","pos":[0,127],"source":"The `backColor` parameter is used to calculate the fill color of the frame so that it is always visible against the background."},{"content":"The results of this method can be reversed by drawing the same frame again.","pos":[134,209]},{"content":"Drawing a frame using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors.","pos":[210,365]}]},{"pos":[89940,90069],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the rectangle to draw, in screen coordinates.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the rectangle to draw, in screen coordinates."},{"pos":[90142,90223],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the background behind the frame.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> of the background behind the frame."},{"pos":[90303,90412],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.FrameStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the style of the frame.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.FrameStyle\"></xref> values that specifies the style of the frame."},{"pos":[91093,91219],"content":"Draws a reversible line on the screen within the specified starting and ending points and with the specified background color.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a reversible line on the screen within the specified starting and ending points and with the specified background color.","pos":[0,126]}]},{"pos":[91232,91596],"content":"The `backColor` parameter is used to calculate the fill color of the line so that it is always visible against the background.       The results of this method can be reversed by drawing the same line again. Drawing a line using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`backColor`</ph> parameter is used to calculate the fill color of the line so that it is always visible against the background.","pos":[0,126],"source":"The `backColor` parameter is used to calculate the fill color of the line so that it is always visible against the background."},{"content":"The results of this method can be reversed by drawing the same line again.","pos":[133,207]},{"content":"Drawing a line using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors.","pos":[208,362]}]},{"pos":[92497,92587],"content":"The starting <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the line, in screen coordinates.","needQuote":true,"needEscape":true,"source":"The starting <xref href=\"System.Drawing.Point\"></xref> of the line, in screen coordinates."},{"pos":[92654,92742],"content":"The ending <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the line, in screen coordinates.","needQuote":true,"needEscape":true,"source":"The ending <xref href=\"System.Drawing.Point\"></xref> of the line, in screen coordinates."},{"pos":[92815,92895],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the background behind the line.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> of the background behind the line."},{"pos":[93749,93898],"content":"Draws the specified scroll button on a scroll bar control in the specified state, on the specified graphics surface, and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws the specified scroll button on a scroll bar control in the specified state, on the specified graphics surface, and within the specified bounds.","pos":[0,149]}]},{"pos":[94202,94262],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[94339,94433],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the glyph.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the glyph."},{"pos":[94516,94637],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ScrollButton\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the type of scroll arrow to draw.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.ScrollButton\"></xref> values that specifies the type of scroll arrow to draw."},{"pos":[94718,94862],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the state to draw the scroll button in.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the scroll button in."},{"pos":[95810,95959],"content":"Draws the specified scroll button on a scroll bar control in the specified state, on the specified graphics surface, and within the specified bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws the specified scroll button on a scroll bar control in the specified state, on the specified graphics surface, and within the specified bounds.","pos":[0,149]}]},{"pos":[96264,96324],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[96381,96448],"content":"The x-coordinate of the upper left corner of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the upper left corner of the drawing rectangle.","pos":[0,67]}]},{"pos":[96505,96572],"content":"The y-coordinate of the upper left corner of the drawing rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the upper left corner of the drawing rectangle.","pos":[0,67]}]},{"pos":[96633,96664],"content":"The width of the scroll button.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the scroll button.","pos":[0,31]}]},{"pos":[96726,96758],"content":"The height of the scroll button.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the scroll button.","pos":[0,32]}]},{"pos":[96841,96962],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ScrollButton\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the type of scroll arrow to draw.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.ScrollButton\"></xref> values that specifies the type of scroll arrow to draw."},{"pos":[97043,97187],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the state to draw the scroll button in.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the scroll button in."},{"pos":[98034,98213],"content":"Draws a standard selection frame in the specified state, on the specified graphics surface, with the specified inner and outer dimensions, and with the specified background color.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a standard selection frame in the specified state, on the specified graphics surface, with the specified inner and outer dimensions, and with the specified background color.","pos":[0,179]}]},{"pos":[98226,98710],"content":"A selection frame is a frame that is drawn around a selected component at design time.       The `backColor` parameter is used to calculate the fill color of the frame so that it is always visible against the background.       If the `active` parameter is set to `true`, the selection frame is drawn as a set of hatch marks indicating that the component has been activated; otherwise, the selection frame is drawn with a dotted pattern or nothing, depending on the implementation.","needQuote":false,"needEscape":true,"nodes":[{"content":"A selection frame is a frame that is drawn around a selected component at design time.","pos":[0,86]},{"content":"The <ph id=\"ph1\">`backColor`</ph> parameter is used to calculate the fill color of the frame so that it is always visible against the background.","pos":[93,220],"source":"       The `backColor` parameter is used to calculate the fill color of the frame so that it is always visible against the background."},{"content":"If the <ph id=\"ph1\">`active`</ph> parameter is set to <ph id=\"ph2\">`true`</ph>, the selection frame is drawn as a set of hatch marks indicating that the component has been activated; otherwise, the selection frame is drawn with a dotted pattern or nothing, depending on the implementation.","pos":[227,480],"source":"       If the `active` parameter is set to `true`, the selection frame is drawn as a set of hatch marks indicating that the component has been activated; otherwise, the selection frame is drawn with a dotted pattern or nothing, depending on the implementation."}]},{"pos":[99019,99079],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[99143,99326],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw the selection frame in an active state; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to draw the selection frame in an active state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[99405,99513],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the outer boundary of the selection frame.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the outer boundary of the selection frame."},{"pos":[99591,99699],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the inner boundary of the selection frame.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the inner boundary of the selection frame."},{"pos":[99772,99853],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the background behind the frame.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> of the background behind the frame."},{"pos":[100538,100651],"content":"Draws a size grip on a form with the specified bounds and background color and on the specified graphics surface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a size grip on a form with the specified bounds and background color and on the specified graphics surface.","pos":[0,113]}]},{"pos":[100664,100935],"content":"The `backColor` parameter is used to calculate the color of the size grip so that it is always visible against the background.       When you define a sizable window, you can include a size grip. A size grip is a special handle that enables the user to resize a window.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`backColor`</ph> parameter is used to calculate the color of the size grip so that it is always visible against the background.","pos":[0,126],"source":"The `backColor` parameter is used to calculate the color of the size grip so that it is always visible against the background."},{"content":"When you define a sizable window, you can include a size grip.","pos":[133,195]},{"content":"A size grip is a special handle that enables the user to resize a window.","pos":[196,269]}]},{"pos":[101183,101243],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[101316,101426],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the background used to determine the colors of the size grip.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> of the background used to determine the colors of the size grip."},{"pos":[101500,101598],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the size grip.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the size grip."},{"pos":[102373,102486],"content":"Draws a size grip on a form with the specified bounds and background color and on the specified graphics surface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a size grip on a form with the specified bounds and background color and on the specified graphics surface.","pos":[0,113]}]},{"pos":[102499,102770],"content":"The `backColor` parameter is used to calculate the color of the size grip so that it is always visible against the background.       When you define a sizable window, you can include a size grip. A size grip is a special handle that enables the user to resize a window.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`backColor`</ph> parameter is used to calculate the color of the size grip so that it is always visible against the background.","pos":[0,126],"source":"The `backColor` parameter is used to calculate the color of the size grip so that it is always visible against the background."},{"content":"When you define a sizable window, you can include a size grip.","pos":[133,195]},{"content":"A size grip is a special handle that enables the user to resize a window.","pos":[196,269]}]},{"pos":[103022,103082],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[103155,103265],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the background used to determine the colors of the size grip.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> of the background used to determine the colors of the size grip."},{"pos":[103322,103381],"content":"The x-coordinate of the upper left corner of the size grip.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the upper left corner of the size grip.","pos":[0,59]}]},{"pos":[103438,103497],"content":"The y-coordinate of the upper left corner of the size grip.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the upper left corner of the size grip.","pos":[0,59]}]},{"pos":[103558,103585],"content":"The width of the size grip.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the size grip.","pos":[0,27]}]},{"pos":[103647,103675],"content":"The height of the size grip.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the size grip.","pos":[0,28]}]},{"pos":[104588,104744],"content":"Draws the specified string in a disabled state on the specified graphics surface; within the specified bounds; and in the specified font, color, and format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws the specified string in a disabled state on the specified graphics surface; within the specified bounds; and in the specified font, color, and format.","pos":[0,156]}]},{"pos":[105075,105135],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[105193,105212],"content":"The string to draw.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to draw.","pos":[0,19]}]},{"pos":[105279,105348],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Font\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw the string with.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Font\"></xref> to draw the string with."},{"pos":[105417,105499],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the background behind the string.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> of the background behind the string."},{"pos":[105583,105679],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the string.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.RectangleF\"></xref> that represents the dimensions of the string."},{"pos":[105756,105832],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.StringFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to apply to the string.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.StringFormat\"></xref> to apply to the string."},{"pos":[106803,107045],"content":"Draws the specified string in a disabled state on the specified graphics surface, within the specified bounds, and in the specified font, color, and format, using the specified GDI-based <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TextRenderer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Draws the specified string in a disabled state on the specified graphics surface, within the specified bounds, and in the specified font, color, and format, using the specified GDI-based <xref href=\"System.Windows.Forms.TextRenderer\"></xref>."},{"pos":[107384,107453],"content":"The GDI-based <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TextRenderer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The GDI-based <xref href=\"System.Windows.Forms.TextRenderer\"></xref>."},{"pos":[107511,107530],"content":"The string to draw.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to draw.","pos":[0,19]}]},{"pos":[107597,107666],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Font\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw the string with.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Font\"></xref> to draw the string with."},{"pos":[107735,107817],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the background behind the string.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> of the background behind the string."},{"pos":[107900,107996],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the string.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.RectangleF\"></xref> that represents the dimensions of the string."},{"pos":[108082,108158],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.StringFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to apply to the string.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.StringFormat\"></xref> to apply to the string."},{"pos":[108828,108887],"content":"Draws a border in the style appropriate for disabled items.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a border in the style appropriate for disabled items.","pos":[0,59]}]},{"pos":[109111,109171],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to draw on."},{"pos":[109245,109340],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the border.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the border."},{"pos":[110008,110059],"content":"Draws a filled, reversible rectangle on the screen.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a filled, reversible rectangle on the screen.","pos":[0,51]}]},{"pos":[110072,110451],"content":"The `backColor` parameter is used to calculate the fill color of the rectangle so that it is always visible against the background.       The results of this method can be reversed by drawing the same rectangle again. Drawing a rectangle using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`backColor`</ph> parameter is used to calculate the fill color of the rectangle so that it is always visible against the background.","pos":[0,131],"source":"The `backColor` parameter is used to calculate the fill color of the rectangle so that it is always visible against the background."},{"content":"The results of this method can be reversed by drawing the same rectangle again.","pos":[138,217]},{"content":"Drawing a rectangle using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors.","pos":[218,377]}]},{"pos":[111269,111398],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the dimensions of the rectangle to fill, in screen coordinates.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the rectangle to fill, in screen coordinates."},{"pos":[111471,111551],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the background behind the fill.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> of the background behind the fill."},{"pos":[112051,112125],"content":"Creates a new light color object for the control from the specified color.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new light color object for the control from the specified color.","pos":[0,74]}]},{"pos":[112137,112396],"content":"If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is decreased.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the specified &lt;xref:System.Drawing.Color&gt; is one of the &lt;xref:System.Drawing.SystemColors&gt;, the color is converted to a &lt;xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=fullName&gt; color; otherwise, the color's luminosity value is decreased.","pos":[0,259],"source":"If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is decreased."}]},{"pos":[112583,112645],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be lightened.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> to be lightened."},{"pos":[112710,112801],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the light color on the control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Color\"></xref> that represents the light color on the control."},{"pos":[113332,113450],"content":"Creates a new light color object for the control from the specified color and lightens it by the specified percentage.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new light color object for the control from the specified color and lightens it by the specified percentage.","pos":[0,118]}]},{"pos":[113462,113721],"content":"If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is decreased.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the specified &lt;xref:System.Drawing.Color&gt; is one of the &lt;xref:System.Drawing.SystemColors&gt;, the color is converted to a &lt;xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=fullName&gt; color; otherwise, the color's luminosity value is decreased.","pos":[0,259],"source":"If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is decreased."}]},{"pos":[113932,113994],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be lightened.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> to be lightened."},{"pos":[114067,114149],"content":"The percentage to lighten the specified <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The percentage to lighten the specified <xref href=\"System.Drawing.Color\"></xref>."},{"pos":[114214,114305],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the light color on the control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Color\"></xref> that represents the light color on the control."},{"pos":[114812,114886],"content":"Creates a new light color object for the control from the specified color.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new light color object for the control from the specified color.","pos":[0,74]}]},{"pos":[114898,115164],"content":"If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to the <xref:System.Drawing.SystemColors.ControlLightLight%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is increased.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the specified &lt;xref:System.Drawing.Color&gt; is one of the &lt;xref:System.Drawing.SystemColors&gt;, the color is converted to the &lt;xref:System.Drawing.SystemColors.ControlLightLight%2A?displayProperty=fullName&gt; color; otherwise, the color's luminosity value is increased.","pos":[0,266],"source":"If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to the <xref:System.Drawing.SystemColors.ControlLightLight%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is increased."}]},{"pos":[115356,115418],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be lightened.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Color\"></xref> to be lightened."},{"pos":[115483,115574],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the light color on the control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Color\"></xref> that represents the light color on the control."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.ControlPaint\n  id: ControlPaint\n  children:\n  - System.Windows.Forms.ControlPaint.ContrastControlDark\n  - System.Windows.Forms.ControlPaint.CreateHBitmap16Bit(System.Drawing.Bitmap,System.Drawing.Color)\n  - System.Windows.Forms.ControlPaint.CreateHBitmapColorMask(System.Drawing.Bitmap,System.IntPtr)\n  - System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask(System.Drawing.Bitmap)\n  - System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color)\n  - System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color,System.Single)\n  - System.Windows.Forms.ControlPaint.DarkDark(System.Drawing.Color)\n  - System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.ButtonBorderStyle)\n  - System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle)\n  - System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle)\n  - System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle)\n  - System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)\n  - System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle)\n  - System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)\n  - System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  - System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  - System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)\n  - System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)\n  - System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  - System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  - System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  - System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  - System.Windows.Forms.ControlPaint.DrawContainerGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle)\n  - System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)\n  - System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)\n  - System.Windows.Forms.ControlPaint.DrawGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean)\n  - System.Windows.Forms.ControlPaint.DrawGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Color)\n  - System.Windows.Forms.ControlPaint.DrawImageDisabled(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)\n  - System.Windows.Forms.ControlPaint.DrawLockedFrame(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)\n  - System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph)\n  - System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)\n  - System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph)\n  - System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)\n  - System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  - System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  - System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  - System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  - System.Windows.Forms.ControlPaint.DrawReversibleFrame(System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.FrameStyle)\n  - System.Windows.Forms.ControlPaint.DrawReversibleLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color)\n  - System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)\n  - System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)\n  - System.Windows.Forms.ControlPaint.DrawSelectionFrame(System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color)\n  - System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle)\n  - System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)\n  - System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Windows.Forms.TextFormatFlags)\n  - System.Windows.Forms.ControlPaint.DrawVisualStyleBorder(System.Drawing.Graphics,System.Drawing.Rectangle)\n  - System.Windows.Forms.ControlPaint.FillReversibleRectangle(System.Drawing.Rectangle,System.Drawing.Color)\n  - System.Windows.Forms.ControlPaint.Light(System.Drawing.Color)\n  - System.Windows.Forms.ControlPaint.Light(System.Drawing.Color,System.Single)\n  - System.Windows.Forms.ControlPaint.LightLight(System.Drawing.Color)\n  langs:\n  - csharp\n  name: ControlPaint\n  nameWithType: ControlPaint\n  fullName: System.Windows.Forms.ControlPaint\n  type: Class\n  summary: Provides methods used to paint common Windows controls and their elements. This class cannot be inherited.\n  remarks: The methods contained in the ControlPaint class enable you to draw your own controls or elements of controls. You can control the drawing of your own controls if the <xref:System.Windows.Forms.ControlStyles> bit is set to `true` for the control. You can get or set the style bits by calling the <xref:System.Windows.Forms.Control.GetStyle%2A> or <xref:System.Windows.Forms.Control.SetStyle%2A> methods. You can set multiple style bits for any control. The <xref:System.Windows.Forms.ControlStyles> enumeration members can be combined with bitwise operations.\n  example:\n  - \"The following code example uses one of the ControlPaint constructors to draw a flat <xref:System.Windows.Forms.Button> control.  \\n  \\n [!code-cs[ButtonState#2](~/add/codesnippet/csharp/t-system.windows.forms.c_11_1.cs)]\\n [!code-vb[ButtonState#2](~/add/codesnippet/visualbasic/t-system.windows.forms.c_11_1.vb)]\\n [!code-cpp[ButtonState#2](~/add/codesnippet/cpp/t-system.windows.forms.c_11_1.cpp)]\"\n  syntax:\n    content: public sealed class ControlPaint\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.ContrastControlDark\n  id: ContrastControlDark\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: ContrastControlDark\n  nameWithType: ControlPaint.ContrastControlDark\n  fullName: System.Windows.Forms.ControlPaint.ContrastControlDark\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the color to use as the <xref:System.Drawing.SystemColors.ControlDark*> color.\n  remarks: If the user has enabled the <xref:System.Windows.Forms.SystemInformation.HighContrast%2A> mode, this property is set to <xref:System.Drawing.SystemColors.WindowFrame%2A?displayProperty=fullName>; otherwise, it is set to <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=fullName>.\n  syntax:\n    content: public static System.Drawing.Color ContrastControlDark { get; }\n    return:\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> to use as the <xref:System.Drawing.SystemColors.ControlDark*> color.\n  overload: System.Windows.Forms.ControlPaint.ContrastControlDark*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.CreateHBitmap16Bit(System.Drawing.Bitmap,System.Drawing.Color)\n  id: CreateHBitmap16Bit(System.Drawing.Bitmap,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: CreateHBitmap16Bit(Bitmap,Color)\n  nameWithType: ControlPaint.CreateHBitmap16Bit(Bitmap,Color)\n  fullName: System.Windows.Forms.ControlPaint.CreateHBitmap16Bit(Bitmap,Color)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates a 16-bit color bitmap.\n  syntax:\n    content: public static IntPtr CreateHBitmap16Bit (System.Drawing.Bitmap bitmap, System.Drawing.Color background);\n    parameters:\n    - id: bitmap\n      type: System.Drawing.Bitmap\n      description: The <xref href=\"System.Drawing.Bitmap\"></xref> to create.\n    - id: background\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> of the background.\n    return:\n      type: System.IntPtr\n      description: An <xref:System.IntPtr> representing the handle to the bitmap.\n  overload: System.Windows.Forms.ControlPaint.CreateHBitmap16Bit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.CreateHBitmapColorMask(System.Drawing.Bitmap,System.IntPtr)\n  id: CreateHBitmapColorMask(System.Drawing.Bitmap,System.IntPtr)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: CreateHBitmapColorMask(Bitmap,IntPtr)\n  nameWithType: ControlPaint.CreateHBitmapColorMask(Bitmap,IntPtr)\n  fullName: System.Windows.Forms.ControlPaint.CreateHBitmapColorMask(Bitmap,IntPtr)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates a Win32 <xref uid=\"langword_csharp_HBITMAP\" name=\"HBITMAP\" href=\"\"></xref> out of the image.\n  remarks: You are responsible for de-allocating the `HBITMAP`. If the image uses transparency, the background will be filled with the specified color.\n  syntax:\n    content: public static IntPtr CreateHBitmapColorMask (System.Drawing.Bitmap bitmap, IntPtr monochromeMask);\n    parameters:\n    - id: bitmap\n      type: System.Drawing.Bitmap\n      description: The <xref href=\"System.Drawing.Bitmap\"></xref> to create.\n    - id: monochromeMask\n      type: System.IntPtr\n      description: A pointer to the monochrome mask.\n    return:\n      type: System.IntPtr\n      description: An <xref:System.IntPtr> representing the handle to the bitmap.\n  overload: System.Windows.Forms.ControlPaint.CreateHBitmapColorMask*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask(System.Drawing.Bitmap)\n  id: CreateHBitmapTransparencyMask(System.Drawing.Bitmap)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: CreateHBitmapTransparencyMask(Bitmap)\n  nameWithType: ControlPaint.CreateHBitmapTransparencyMask(Bitmap)\n  fullName: System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask(Bitmap)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates a color mask for the specified bitmap that indicates which color should be displayed as transparent.\n  remarks: You are responsible for de-allocating the bitmap.\n  syntax:\n    content: public static IntPtr CreateHBitmapTransparencyMask (System.Drawing.Bitmap bitmap);\n    parameters:\n    - id: bitmap\n      type: System.Drawing.Bitmap\n      description: The <xref href=\"System.Drawing.Bitmap\"></xref> to create the transparency mask for.\n    return:\n      type: System.IntPtr\n      description: The handle to the <xref href=\"System.Drawing.Bitmap\"></xref> mask.\n  overload: System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color)\n  id: Dark(System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: Dark(Color)\n  nameWithType: ControlPaint.Dark(Color)\n  fullName: System.Windows.Forms.ControlPaint.Dark(Color)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates a new dark color object for the control from the specified color.\n  remarks: If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is decreased.\n  syntax:\n    content: public static System.Drawing.Color Dark (System.Drawing.Color baseColor);\n    parameters:\n    - id: baseColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> to be darkened.\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represents the dark color on the control.\n  overload: System.Windows.Forms.ControlPaint.Dark*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color,System.Single)\n  id: Dark(System.Drawing.Color,System.Single)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: Dark(Color,Single)\n  nameWithType: ControlPaint.Dark(Color,Single)\n  fullName: System.Windows.Forms.ControlPaint.Dark(Color,Single)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates a new dark color object for the control from the specified color and darkens it by the specified percentage.\n  remarks: If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is decreased.\n  syntax:\n    content: public static System.Drawing.Color Dark (System.Drawing.Color baseColor, float percOfDarkDark);\n    parameters:\n    - id: baseColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> to be darkened.\n    - id: percOfDarkDark\n      type: System.Single\n      description: The percentage to darken the specified <xref href=\"System.Drawing.Color\"></xref>.\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represent the dark color on the control.\n  overload: System.Windows.Forms.ControlPaint.Dark*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DarkDark(System.Drawing.Color)\n  id: DarkDark(System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DarkDark(Color)\n  nameWithType: ControlPaint.DarkDark(Color)\n  fullName: System.Windows.Forms.ControlPaint.DarkDark(Color)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates a new dark color object for the control from the specified color.\n  remarks: If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to the <xref:System.Drawing.SystemColors.ControlDarkDark%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is increased.\n  syntax:\n    content: public static System.Drawing.Color DarkDark (System.Drawing.Color baseColor);\n    parameters:\n    - id: baseColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> to be darkened.\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represents the dark color on the control.\n  overload: System.Windows.Forms.ControlPaint.DarkDark*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.ButtonBorderStyle)\n  id: DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.ButtonBorderStyle)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawBorder(Graphics,Rectangle,Color,ButtonBorderStyle)\n  nameWithType: ControlPaint.DrawBorder(Graphics,Rectangle,Color,ButtonBorderStyle)\n  fullName: System.Windows.Forms.ControlPaint.DrawBorder(Graphics,Rectangle,Color,ButtonBorderStyle)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a border with the specified style and color, on the specified graphics surface, and within the specified bounds on a button-style control.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods. To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/cpp/cc6d0e3e-2961-4c4b-9743-_1.cpp)]\\n [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/visualbasic/cc6d0e3e-2961-4c4b-9743-_1.vb)]\\n [!code-cs[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/csharp/cc6d0e3e-2961-4c4b-9743-_1.cs)]\"\n  syntax:\n    content: public static void DrawBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds, System.Drawing.Color color, System.Windows.Forms.ButtonBorderStyle style);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: bounds\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the border.\n    - id: color\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> of the border.\n    - id: style\n      type: System.Windows.Forms.ButtonBorderStyle\n      description: One of the <xref href=\"System.Windows.Forms.ButtonBorderStyle\"></xref> values that specifies the style of the border.\n  overload: System.Windows.Forms.ControlPaint.DrawBorder*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle)\n  id: DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawBorder(Graphics,Rectangle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle)\n  nameWithType: ControlPaint.DrawBorder(Graphics,Rectangle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle)\n  fullName: System.Windows.Forms.ControlPaint.DrawBorder(Graphics,Rectangle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a border on a button-style control with the specified styles, colors, and border widths; on the specified graphics surface; and within the specified bounds.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods. To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/cpp/64eea492-703b-4fc4-9757-_1.cpp)]\\n [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/visualbasic/64eea492-703b-4fc4-9757-_1.vb)]\\n [!code-cs[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/csharp/64eea492-703b-4fc4-9757-_1.cs)]\"\n  syntax:\n    content: public static void DrawBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds, System.Drawing.Color leftColor, int leftWidth, System.Windows.Forms.ButtonBorderStyle leftStyle, System.Drawing.Color topColor, int topWidth, System.Windows.Forms.ButtonBorderStyle topStyle, System.Drawing.Color rightColor, int rightWidth, System.Windows.Forms.ButtonBorderStyle rightStyle, System.Drawing.Color bottomColor, int bottomWidth, System.Windows.Forms.ButtonBorderStyle bottomStyle);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: bounds\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the border.\n    - id: leftColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> of the left of the border.\n    - id: leftWidth\n      type: System.Int32\n      description: The width of the left border.\n    - id: leftStyle\n      type: System.Windows.Forms.ButtonBorderStyle\n      description: One of the <xref href=\"System.Windows.Forms.ButtonBorderStyle\"></xref> values that specifies the style of the left border.\n    - id: topColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> of the top of the border.\n    - id: topWidth\n      type: System.Int32\n      description: The width of the top border.\n    - id: topStyle\n      type: System.Windows.Forms.ButtonBorderStyle\n      description: One of the <xref href=\"System.Windows.Forms.ButtonBorderStyle\"></xref> values that specifies the style of the top border.\n    - id: rightColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> of the right of the border.\n    - id: rightWidth\n      type: System.Int32\n      description: The width of the right border.\n    - id: rightStyle\n      type: System.Windows.Forms.ButtonBorderStyle\n      description: One of the <xref href=\"System.Windows.Forms.ButtonBorderStyle\"></xref> values that specifies the style of the right border.\n    - id: bottomColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> of the bottom of the border.\n    - id: bottomWidth\n      type: System.Int32\n      description: The width of the bottom border.\n    - id: bottomStyle\n      type: System.Windows.Forms.ButtonBorderStyle\n      description: One of the <xref href=\"System.Windows.Forms.ButtonBorderStyle\"></xref> values that specifies the style of the bottom border.\n  overload: System.Windows.Forms.ControlPaint.DrawBorder*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle)\n  id: DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawBorder3D(Graphics,Rectangle)\n  nameWithType: ControlPaint.DrawBorder3D(Graphics,Rectangle)\n  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Rectangle)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a three-dimensional style border on the specified graphics surface and within the specified bounds on a control.\n  remarks: The <xref:System.Windows.Forms.Border3DStyle?displayProperty=fullName> style is used by default to draw the border.\n  example:\n  - \"The following code example demonstrates the use of one of the DrawBorder3D methods. To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/cpp/b906e340-a237-41a6-b278-_1.cpp)]\\n [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/visualbasic/b906e340-a237-41a6-b278-_1.vb)]\\n [!code-cs[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/csharp/b906e340-a237-41a6-b278-_1.cs)]\"\n  syntax:\n    content: public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the border.\n  overload: System.Windows.Forms.ControlPaint.DrawBorder3D*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle)\n  id: DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawBorder3D(Graphics,Rectangle,Border3DStyle)\n  nameWithType: ControlPaint.DrawBorder3D(Graphics,Rectangle,Border3DStyle)\n  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Rectangle,Border3DStyle)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a three-dimensional style border with the specified style, on the specified graphics surface, and within the specified bounds on a control.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods. To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/cpp/85d5ee3c-d367-492f-8b37-_1.cpp)]\\n [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/visualbasic/85d5ee3c-d367-492f-8b37-_1.vb)]\\n [!code-cs[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/csharp/85d5ee3c-d367-492f-8b37-_1.cs)]\"\n  syntax:\n    content: public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.Border3DStyle style);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the border.\n    - id: style\n      type: System.Windows.Forms.Border3DStyle\n      description: One of the <xref href=\"System.Windows.Forms.Border3DStyle\"></xref> values that specifies the style of the border.\n  overload: System.Windows.Forms.ControlPaint.DrawBorder3D*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)\n  id: DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawBorder3D(Graphics,Rectangle,Border3DStyle,Border3DSide)\n  nameWithType: ControlPaint.DrawBorder3D(Graphics,Rectangle,Border3DStyle,Border3DSide)\n  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Rectangle,Border3DStyle,Border3DSide)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a three-dimensional style border with the specified style, on the specified graphics surface and sides, and within the specified bounds on a control.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods. To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/cpp/d65a87bc-f407-4afc-b213-_1.cpp)]\\n [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/visualbasic/d65a87bc-f407-4afc-b213-_1.vb)]\\n [!code-cs[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/csharp/d65a87bc-f407-4afc-b213-_1.cs)]\"\n  syntax:\n    content: public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.Border3DStyle style, System.Windows.Forms.Border3DSide sides);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the border.\n    - id: style\n      type: System.Windows.Forms.Border3DStyle\n      description: One of the <xref href=\"System.Windows.Forms.Border3DStyle\"></xref> values that specifies the style of the border.\n    - id: sides\n      type: System.Windows.Forms.Border3DSide\n      description: One of the <xref href=\"System.Windows.Forms.Border3DSide\"></xref> values that specifies the side of the rectangle to draw the border on.\n  overload: System.Windows.Forms.ControlPaint.DrawBorder3D*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawBorder3D(Graphics,Int32,Int32,Int32,Int32)\n  nameWithType: ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32)\n  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a three-dimensional style border on the specified graphics surface and within the specified bounds on a control.\n  remarks: The <xref:System.Windows.Forms.Border3DStyle?displayProperty=fullName> style is used by default to draw the border.\n  example:\n  - \"The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods. To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/cpp/d991b3c5-c5fb-4e0b-a08a-_1.cpp)]\\n [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/visualbasic/d991b3c5-c5fb-4e0b-a08a-_1.vb)]\\n [!code-cs[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/csharp/d991b3c5-c5fb-4e0b-a08a-_1.cs)]\"\n  syntax:\n    content: public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of the top left of the border rectangle.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of the top left of the border rectangle.\n    - id: width\n      type: System.Int32\n      description: The width of the border rectangle.\n    - id: height\n      type: System.Int32\n      description: The height of the border rectangle.\n  overload: System.Windows.Forms.ControlPaint.DrawBorder3D*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle)\n  id: DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle)\n  nameWithType: ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle)\n  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a three-dimensional style border with the specified style, on the specified graphics surface, and within the specified bounds on a control.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods. To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/cpp/a6b15ad3-2d4f-400c-addf-_1.cpp)]\\n [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/visualbasic/a6b15ad3-2d4f-400c-addf-_1.vb)]\\n [!code-cs[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/csharp/a6b15ad3-2d4f-400c-addf-_1.cs)]\"\n  syntax:\n    content: public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.Border3DStyle style);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of the top left of the border rectangle.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of the top left of the border rectangle.\n    - id: width\n      type: System.Int32\n      description: The width of the border rectangle.\n    - id: height\n      type: System.Int32\n      description: The height of the border rectangle.\n    - id: style\n      type: System.Windows.Forms.Border3DStyle\n      description: One of the <xref href=\"System.Windows.Forms.Border3DStyle\"></xref> values that specifies the style of the border.\n  overload: System.Windows.Forms.ControlPaint.DrawBorder3D*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)\n  id: DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle,Border3DSide)\n  nameWithType: ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle,Border3DSide)\n  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle,Border3DSide)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a three-dimensional style border with the specified style, on the specified graphics surface and side, and within the specified bounds on a control.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods. To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/cpp/583dbfc9-5548-498e-b2d2-_1.cpp)]\\n [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/visualbasic/583dbfc9-5548-498e-b2d2-_1.vb)]\\n [!code-cs[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/csharp/583dbfc9-5548-498e-b2d2-_1.cs)]\"\n  syntax:\n    content: public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.Border3DStyle style, System.Windows.Forms.Border3DSide sides);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of the top left of the border rectangle.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of the top left of the border rectangle.\n    - id: width\n      type: System.Int32\n      description: The width of the border rectangle.\n    - id: height\n      type: System.Int32\n      description: The height of the border rectangle.\n    - id: style\n      type: System.Windows.Forms.Border3DStyle\n      description: One of the <xref href=\"System.Windows.Forms.Border3DStyle\"></xref> values that specifies the style of the border.\n    - id: sides\n      type: System.Windows.Forms.Border3DSide\n      description: The <xref href=\"System.Windows.Forms.Border3DSide\"></xref> of the rectangle to draw the border on.\n  overload: System.Windows.Forms.ControlPaint.DrawBorder3D*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  id: DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawButton(Graphics,Rectangle,ButtonState)\n  nameWithType: ControlPaint.DrawButton(Graphics,Rectangle,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawButton(Graphics,Rectangle,ButtonState)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a button control in the specified state, on the specified graphics surface, and within the specified bounds.\n  syntax:\n    content: public static void DrawButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the button.\n    - id: state\n      type: System.Windows.Forms.ButtonState\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the button in.\n  overload: System.Windows.Forms.ControlPaint.DrawButton*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  id: DrawButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  nameWithType: ControlPaint.DrawButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a button control in the specified state, on the specified graphics surface, and within the specified bounds.\n  remarks: ''\n  example:\n  - >-\n    [!code-cs[ButtonState#2](~/add/codesnippet/csharp/a2ff305b-bc06-44a2-8b27-_1.cs)]\n     [!code-vb[ButtonState#2](~/add/codesnippet/visualbasic/a2ff305b-bc06-44a2-8b27-_1.vb)]\n     [!code-cpp[ButtonState#2](~/add/codesnippet/cpp/a2ff305b-bc06-44a2-8b27-_1.cpp)]\n  syntax:\n    content: public static void DrawButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of the upper left corner of the drawing rectangle.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of the upper left corner of the drawing rectangle.\n    - id: width\n      type: System.Int32\n      description: The width of the button.\n    - id: height\n      type: System.Int32\n      description: The height of the button.\n    - id: state\n      type: System.Windows.Forms.ButtonState\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the button in.\n  overload: System.Windows.Forms.ControlPaint.DrawButton*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)\n  id: DrawCaptionButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawCaptionButton(Graphics,Rectangle,CaptionButton,ButtonState)\n  nameWithType: ControlPaint.DrawCaptionButton(Graphics,Rectangle,CaptionButton,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawCaptionButton(Graphics,Rectangle,CaptionButton,ButtonState)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws the specified caption button control in the specified state, on the specified graphics surface, and within the specified bounds.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of the DrawCaptionButton method and the <xref:System.Windows.Forms.CaptionButton> enumeration. To run this example, paste the following code in a form containing a Button named `Button1`. The form should import the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the button's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlPaintMembers#1](~/add/codesnippet/cpp/557d559e-60e6-477f-98b7-_1.cpp)]\\n [!code-vb[System.Windows.Forms.ControlPaintMembers#1](~/add/codesnippet/visualbasic/557d559e-60e6-477f-98b7-_1.vb)]\\n [!code-cs[System.Windows.Forms.ControlPaintMembers#1](~/add/codesnippet/csharp/557d559e-60e6-477f-98b7-_1.cs)]\"\n  syntax:\n    content: public static void DrawCaptionButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.CaptionButton button, System.Windows.Forms.ButtonState state);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the caption button.\n    - id: button\n      type: System.Windows.Forms.CaptionButton\n      description: One of the <xref href=\"System.Windows.Forms.CaptionButton\"></xref> values that specifies the type of caption button to draw.\n    - id: state\n      type: System.Windows.Forms.ButtonState\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the button in.\n  overload: System.Windows.Forms.ControlPaint.DrawCaptionButton*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)\n  id: DrawCaptionButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawCaptionButton(Graphics,Int32,Int32,Int32,Int32,CaptionButton,ButtonState)\n  nameWithType: ControlPaint.DrawCaptionButton(Graphics,Int32,Int32,Int32,Int32,CaptionButton,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawCaptionButton(Graphics,Int32,Int32,Int32,Int32,CaptionButton,ButtonState)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws the specified caption button control in the specified state, on the specified graphics surface, and within the specified bounds.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Windows.Forms.ControlPaint.DrawCaptionButton%2A> method and the <xref:System.Windows.Forms.CaptionButton> enumeration. To run this example, paste the following code in a form containing a <xref:System.Windows.Forms.Button> named `Button1`. The form should import the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the button's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlPaintMembers#1](~/add/codesnippet/cpp/7e5c38fb-727e-4f02-85c3-_1.cpp)]\\n [!code-vb[System.Windows.Forms.ControlPaintMembers#1](~/add/codesnippet/visualbasic/7e5c38fb-727e-4f02-85c3-_1.vb)]\\n [!code-cs[System.Windows.Forms.ControlPaintMembers#1](~/add/codesnippet/csharp/7e5c38fb-727e-4f02-85c3-_1.cs)]\"\n  syntax:\n    content: public static void DrawCaptionButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.CaptionButton button, System.Windows.Forms.ButtonState state);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of the top left of the drawing rectangle.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of the top left of the drawing rectangle.\n    - id: width\n      type: System.Int32\n      description: The width of the drawing rectangle.\n    - id: height\n      type: System.Int32\n      description: The height of the drawing rectangle.\n    - id: button\n      type: System.Windows.Forms.CaptionButton\n      description: One of the <xref href=\"System.Windows.Forms.CaptionButton\"></xref> values that specifies the type of caption button to draw.\n    - id: state\n      type: System.Windows.Forms.ButtonState\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the button in.\n  overload: System.Windows.Forms.ControlPaint.DrawCaptionButton*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  id: DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawCheckBox(Graphics,Rectangle,ButtonState)\n  nameWithType: ControlPaint.DrawCheckBox(Graphics,Rectangle,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawCheckBox(Graphics,Rectangle,ButtonState)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a check box control in the specified state, on the specified graphics surface, and within the specified bounds.\n  syntax:\n    content: public static void DrawCheckBox (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the check box.\n    - id: state\n      type: System.Windows.Forms.ButtonState\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the check box in.\n  overload: System.Windows.Forms.ControlPaint.DrawCheckBox*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  id: DrawCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  nameWithType: ControlPaint.DrawCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a check box control in the specified state, on the specified graphics surface, and within the specified bounds.\n  syntax:\n    content: public static void DrawCheckBox (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of the upper left corner of the drawing rectangle.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of the upper left corner of the drawing rectangle.\n    - id: width\n      type: System.Int32\n      description: The width of the check box.\n    - id: height\n      type: System.Int32\n      description: The height of the check box.\n    - id: state\n      type: System.Windows.Forms.ButtonState\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the check box in.\n  overload: System.Windows.Forms.ControlPaint.DrawCheckBox*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  id: DrawComboButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawComboButton(Graphics,Rectangle,ButtonState)\n  nameWithType: ControlPaint.DrawComboButton(Graphics,Rectangle,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawComboButton(Graphics,Rectangle,ButtonState)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a drop-down button on a combo box control in the specified state, on the specified graphics surface, and within the specified bounds.\n  syntax:\n    content: public static void DrawComboButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the combo box.\n    - id: state\n      type: System.Windows.Forms.ButtonState\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the combo box in.\n  overload: System.Windows.Forms.ControlPaint.DrawComboButton*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  id: DrawComboButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawComboButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  nameWithType: ControlPaint.DrawComboButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawComboButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a drop-down button on a combo box control in the specified state, on the specified graphics surface, and within the specified bounds.\n  syntax:\n    content: public static void DrawComboButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of the top left of the border rectangle.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of the top left of the border rectangle.\n    - id: width\n      type: System.Int32\n      description: The width of the combo box.\n    - id: height\n      type: System.Int32\n      description: The height of the combo box.\n    - id: state\n      type: System.Windows.Forms.ButtonState\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the combo box in.\n  overload: System.Windows.Forms.ControlPaint.DrawComboButton*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawContainerGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle)\n  id: DrawContainerGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawContainerGrabHandle(Graphics,Rectangle)\n  nameWithType: ControlPaint.DrawContainerGrabHandle(Graphics,Rectangle)\n  fullName: System.Windows.Forms.ControlPaint.DrawContainerGrabHandle(Graphics,Rectangle)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a container control grab handle glyph on the specified graphics surface and within the specified bounds.\n  remarks: Grab handles are used by containers to indicate to the user that the user can directly manipulate the containers. The manipulation can consist of actions such as sizing and moving.\n  syntax:\n    content: public static void DrawContainerGrabHandle (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: bounds\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the grab handle glyph.\n  overload: System.Windows.Forms.ControlPaint.DrawContainerGrabHandle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)\n  id: DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawFocusRectangle(Graphics,Rectangle)\n  nameWithType: ControlPaint.DrawFocusRectangle(Graphics,Rectangle)\n  fullName: System.Windows.Forms.ControlPaint.DrawFocusRectangle(Graphics,Rectangle)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a focus rectangle on the specified graphics surface and within the specified bounds.\n  remarks: A focus rectangle is a dotted rectangle that Windows uses to indicate what control has the current keyboard focus.\n  example:\n  - \"The following code example demonstrates using the DrawFocusRectangle method and the <xref:System.Windows.Forms.Control.Handle%2A?displayProperty=fullName> property. To run this example, paste the following code in a form. Add two buttons named `Button1` and `Button2` to the form and ensure all events are connected to their event handlers.  \\n  \\n [!code-vb[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/visualbasic/36084c50-977a-4441-b9ae-_1.vb)]\\n [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/cpp/36084c50-977a-4441-b9ae-_1.cpp)]\\n [!code-cs[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/csharp/36084c50-977a-4441-b9ae-_1.cs)]\"\n  syntax:\n    content: public static void DrawFocusRectangle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the grab handle glyph.\n  overload: System.Windows.Forms.ControlPaint.DrawFocusRectangle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)\n  id: DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawFocusRectangle(Graphics,Rectangle,Color,Color)\n  nameWithType: ControlPaint.DrawFocusRectangle(Graphics,Rectangle,Color,Color)\n  fullName: System.Windows.Forms.ControlPaint.DrawFocusRectangle(Graphics,Rectangle,Color,Color)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a focus rectangle on the specified graphics surface and within the specified bounds.\n  remarks: A focus rectangle is a dotted rectangle that Windows uses to indicate what control has the current keyboard focus.\n  example:\n  - \"The following code example demonstrates using the <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A> method and the <xref:System.Windows.Forms.Control.Handle%2A?displayProperty=fullName> property. To run this example, paste the following code in a form. Add two buttons named `Button1` and Button2 to the form and ensure all events are connected to their event handlers.  \\n  \\n [!code-vb[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/visualbasic/a69c559a-f64e-4e3f-94ab-_1.vb)]\\n [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/cpp/a69c559a-f64e-4e3f-94ab-_1.cpp)]\\n [!code-cs[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/csharp/a69c559a-f64e-4e3f-94ab-_1.cs)]\"\n  syntax:\n    content: public static void DrawFocusRectangle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Drawing.Color foreColor, System.Drawing.Color backColor);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the grab handle glyph.\n    - id: foreColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> that is the foreground color of the object to draw the focus rectangle on.\n    - id: backColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> that is the background color of the object to draw the focus rectangle on.\n  overload: System.Windows.Forms.ControlPaint.DrawFocusRectangle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean)\n  id: DrawGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawGrabHandle(Graphics,Rectangle,Boolean,Boolean)\n  nameWithType: ControlPaint.DrawGrabHandle(Graphics,Rectangle,Boolean,Boolean)\n  fullName: System.Windows.Forms.ControlPaint.DrawGrabHandle(Graphics,Rectangle,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a standard selection grab handle glyph on the specified graphics surface, within the specified bounds, and in the specified state and style.\n  remarks: Grab handles are used by objects to indicate to the user that the user can directly manipulate the object. The manipulation can consist of actions such as sizing and moving.\n  syntax:\n    content: public static void DrawGrabHandle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, bool primary, bool enabled);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the grab handle glyph.\n    - id: primary\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to draw the handle as a primary grab handle; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: enabled\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to draw the handle in an enabled state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.ControlPaint.DrawGrabHandle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Color)\n  id: DrawGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawGrid(Graphics,Rectangle,Size,Color)\n  nameWithType: ControlPaint.DrawGrid(Graphics,Rectangle,Size,Color)\n  fullName: System.Windows.Forms.ControlPaint.DrawGrid(Graphics,Rectangle,Size,Color)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a grid of one-pixel dots with the specified spacing, within the specified bounds, on the specified graphics surface, and in the specified color.\n  remarks: The `backColor` parameter is used to calculate the fill color of the dots so that the grid is always visible against the background.\n  syntax:\n    content: public static void DrawGrid (System.Drawing.Graphics graphics, System.Drawing.Rectangle area, System.Drawing.Size pixelsBetweenDots, System.Drawing.Color backColor);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: area\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the grid.\n    - id: pixelsBetweenDots\n      type: System.Drawing.Size\n      description: The <xref href=\"System.Drawing.Size\"></xref> that specified the height and width between the dots of the grid.\n    - id: backColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> of the background behind the grid.\n  overload: System.Windows.Forms.ControlPaint.DrawGrid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawImageDisabled(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)\n  id: DrawImageDisabled(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawImageDisabled(Graphics,Image,Int32,Int32,Color)\n  nameWithType: ControlPaint.DrawImageDisabled(Graphics,Image,Int32,Int32,Color)\n  fullName: System.Windows.Forms.ControlPaint.DrawImageDisabled(Graphics,Image,Int32,Int32,Color)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws the specified image in a disabled state.\n  remarks: The `background` parameter is used to calculate the fill color of the disabled image so that it is always visible against the background.\n  syntax:\n    content: public static void DrawImageDisabled (System.Drawing.Graphics graphics, System.Drawing.Image image, int x, int y, System.Drawing.Color background);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: image\n      type: System.Drawing.Image\n      description: The <xref href=\"System.Drawing.Image\"></xref> to draw.\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of the top left of the border image.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of the top left of the border image.\n    - id: background\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> of the background behind the image.\n  overload: System.Windows.Forms.ControlPaint.DrawImageDisabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawLockedFrame(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)\n  id: DrawLockedFrame(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawLockedFrame(Graphics,Rectangle,Boolean)\n  nameWithType: ControlPaint.DrawLockedFrame(Graphics,Rectangle,Boolean)\n  fullName: System.Windows.Forms.ControlPaint.DrawLockedFrame(Graphics,Rectangle,Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a locked selection frame on the screen within the specified bounds and on the specified graphics surface. Specifies whether to draw the frame with the primary selected colors.\n  syntax:\n    content: public static void DrawLockedFrame (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, bool primary);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the frame.\n    - id: primary\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to draw this frame with the colors used for the primary selection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.ControlPaint.DrawLockedFrame*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph)\n  id: DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawMenuGlyph(Graphics,Rectangle,MenuGlyph)\n  nameWithType: ControlPaint.DrawMenuGlyph(Graphics,Rectangle,MenuGlyph)\n  fullName: System.Windows.Forms.ControlPaint.DrawMenuGlyph(Graphics,Rectangle,MenuGlyph)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws the specified menu glyph on a menu item control within the specified bounds and on the specified surface.\n  remarks: When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove. For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>.\n  syntax:\n    content: public static void DrawMenuGlyph (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.MenuGlyph glyph);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the glyph.\n    - id: glyph\n      type: System.Windows.Forms.MenuGlyph\n      description: One of the <xref href=\"System.Windows.Forms.MenuGlyph\"></xref> values that specifies the image to draw.\n  overload: System.Windows.Forms.ControlPaint.DrawMenuGlyph*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)\n  id: DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawMenuGlyph(Graphics,Rectangle,MenuGlyph,Color,Color)\n  nameWithType: ControlPaint.DrawMenuGlyph(Graphics,Rectangle,MenuGlyph,Color,Color)\n  fullName: System.Windows.Forms.ControlPaint.DrawMenuGlyph(Graphics,Rectangle,MenuGlyph,Color,Color)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws the specified menu glyph on a menu item control within the specified bounds and on the specified surface, replacing <xref:System.Drawing.Color.White*> with the color specified in the <code>backColor</code> parameter and replacing <xref:System.Drawing.Color.Black*> with the color specified in the <code>foreColor</code> parameter.\n  remarks: When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove. For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>.\n  syntax:\n    content: public static void DrawMenuGlyph (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.MenuGlyph glyph, System.Drawing.Color foreColor, System.Drawing.Color backColor);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the glyph.\n    - id: glyph\n      type: System.Windows.Forms.MenuGlyph\n      description: One of the <xref href=\"System.Windows.Forms.MenuGlyph\"></xref> values that specifies the image to draw.\n    - id: foreColor\n      type: System.Drawing.Color\n      description: The color that replaces <xref:System.Drawing.Color.White*> as the foreground color.\n    - id: backColor\n      type: System.Drawing.Color\n      description: The color that replaces <xref:System.Drawing.Color.Black*> as the background color.\n  overload: System.Windows.Forms.ControlPaint.DrawMenuGlyph*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph)\n  id: DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph)\n  nameWithType: ControlPaint.DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph)\n  fullName: System.Windows.Forms.ControlPaint.DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws the specified menu glyph on a menu item control with the specified bounds and on the specified surface.\n  remarks: When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove. For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName> property is set to true, you call the <xref:System.Windows.Forms.MenuGlyph> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>.\n  syntax:\n    content: public static void DrawMenuGlyph (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.MenuGlyph glyph);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of the upper left corner of the drawing rectangle.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of the upper left corner of the drawing rectangle.\n    - id: width\n      type: System.Int32\n      description: The width of the menu glyph.\n    - id: height\n      type: System.Int32\n      description: The height of the menu glyph.\n    - id: glyph\n      type: System.Windows.Forms.MenuGlyph\n      description: One of the <xref href=\"System.Windows.Forms.MenuGlyph\"></xref> values that specifies the image to draw.\n  overload: System.Windows.Forms.ControlPaint.DrawMenuGlyph*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)\n  id: DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph,Color,Color)\n  nameWithType: ControlPaint.DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph,Color,Color)\n  fullName: System.Windows.Forms.ControlPaint.DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph,Color,Color)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws the specified menu glyph on a menu item control within the specified coordinates, height, and width on the specified surface, replacing <xref:System.Drawing.Color.White*> with the color specified in the <code>backColor</code> parameter and replacing <xref:System.Drawing.Color.Black*> with the color specified in the <code>foreColor</code> parameter.\n  remarks: When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove. For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>.\n  syntax:\n    content: public static void DrawMenuGlyph (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.MenuGlyph glyph, System.Drawing.Color foreColor, System.Drawing.Color backColor);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of the upper left corner of the drawing rectangle.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of the upper left corner of the drawing rectangle.\n    - id: width\n      type: System.Int32\n      description: The width of the menu glyph.\n    - id: height\n      type: System.Int32\n      description: The height of the menu glyph.\n    - id: glyph\n      type: System.Windows.Forms.MenuGlyph\n      description: One of the <xref href=\"System.Windows.Forms.MenuGlyph\"></xref> values that specifies the image to draw.\n    - id: foreColor\n      type: System.Drawing.Color\n      description: The color that replaces <xref:System.Drawing.Color.White*> as the foreground color.\n    - id: backColor\n      type: System.Drawing.Color\n      description: The color that replaces <xref:System.Drawing.Color.Black*> as the background color.\n  overload: System.Windows.Forms.ControlPaint.DrawMenuGlyph*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  id: DrawMixedCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawMixedCheckBox(Graphics,Rectangle,ButtonState)\n  nameWithType: ControlPaint.DrawMixedCheckBox(Graphics,Rectangle,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawMixedCheckBox(Graphics,Rectangle,ButtonState)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a three-state check box control in the specified state, on the specified graphics surface, and within the specified bounds.\n  syntax:\n    content: public static void DrawMixedCheckBox (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the check box.\n    - id: state\n      type: System.Windows.Forms.ButtonState\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the check box in.\n  overload: System.Windows.Forms.ControlPaint.DrawMixedCheckBox*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  id: DrawMixedCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawMixedCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  nameWithType: ControlPaint.DrawMixedCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawMixedCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a three-state check box control in the specified state, on the specified graphics surface, and within the specified bounds.\n  syntax:\n    content: public static void DrawMixedCheckBox (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of the upper left corner of the drawing rectangle.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of the upper left corner of the drawing rectangle.\n    - id: width\n      type: System.Int32\n      description: The width of the check box.\n    - id: height\n      type: System.Int32\n      description: The height of the check box.\n    - id: state\n      type: System.Windows.Forms.ButtonState\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the check box in.\n  overload: System.Windows.Forms.ControlPaint.DrawMixedCheckBox*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  id: DrawRadioButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawRadioButton(Graphics,Rectangle,ButtonState)\n  nameWithType: ControlPaint.DrawRadioButton(Graphics,Rectangle,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawRadioButton(Graphics,Rectangle,ButtonState)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a radio button control in the specified state, on the specified graphics surface, and within the specified bounds.\n  syntax:\n    content: public static void DrawRadioButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the radio button.\n    - id: state\n      type: System.Windows.Forms.ButtonState\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the radio button in.\n  overload: System.Windows.Forms.ControlPaint.DrawRadioButton*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  id: DrawRadioButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawRadioButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  nameWithType: ControlPaint.DrawRadioButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawRadioButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a radio button control in the specified state, on the specified graphics surface, and within the specified bounds.\n  syntax:\n    content: public static void DrawRadioButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of the upper left corner of the drawing rectangle.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of the upper left corner of the drawing rectangle.\n    - id: width\n      type: System.Int32\n      description: The width of the radio button.\n    - id: height\n      type: System.Int32\n      description: The height of the radio button.\n    - id: state\n      type: System.Windows.Forms.ButtonState\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the radio button in.\n  overload: System.Windows.Forms.ControlPaint.DrawRadioButton*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawReversibleFrame(System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.FrameStyle)\n  id: DrawReversibleFrame(System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.FrameStyle)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawReversibleFrame(Rectangle,Color,FrameStyle)\n  nameWithType: ControlPaint.DrawReversibleFrame(Rectangle,Color,FrameStyle)\n  fullName: System.Windows.Forms.ControlPaint.DrawReversibleFrame(Rectangle,Color,FrameStyle)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a reversible frame on the screen within the specified bounds, with the specified background color, and in the specified state.\n  remarks: \"The `backColor` parameter is used to calculate the fill color of the frame so that it is always visible against the background.  \\n  \\n The results of this method can be reversed by drawing the same frame again. Drawing a frame using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.RectangleToScreen%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=fullName>, and the DrawReversibleFrame members. To run the example, paste the following code in a form called `Form1` containing several controls. This example requires that the mouse events are connected to the event handlers defined in the example.  \\n  \\n [!code-cs[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/csharp/6607ae2e-2ccb-4180-80fa-_1.cs)]\\n [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/cpp/6607ae2e-2ccb-4180-80fa-_1.cpp)]\\n [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/visualbasic/6607ae2e-2ccb-4180-80fa-_1.vb)]\"\n  syntax:\n    content: public static void DrawReversibleFrame (System.Drawing.Rectangle rectangle, System.Drawing.Color backColor, System.Windows.Forms.FrameStyle style);\n    parameters:\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the rectangle to draw, in screen coordinates.\n    - id: backColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> of the background behind the frame.\n    - id: style\n      type: System.Windows.Forms.FrameStyle\n      description: One of the <xref href=\"System.Windows.Forms.FrameStyle\"></xref> values that specifies the style of the frame.\n  overload: System.Windows.Forms.ControlPaint.DrawReversibleFrame*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawReversibleLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color)\n  id: DrawReversibleLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawReversibleLine(Point,Point,Color)\n  nameWithType: ControlPaint.DrawReversibleLine(Point,Point,Color)\n  fullName: System.Windows.Forms.ControlPaint.DrawReversibleLine(Point,Point,Color)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a reversible line on the screen within the specified starting and ending points and with the specified background color.\n  remarks: \"The `backColor` parameter is used to calculate the fill color of the line so that it is always visible against the background.  \\n  \\n The results of this method can be reversed by drawing the same line again. Drawing a line using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors.\"\n  example:\n  - \"The following code example demonstrates using the DrawReversibleLine and <xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=fullName> methods. To run the example, paste the following code in a form. Add a button named `Button3` to the form and ensure all events are connected to their event handlers.  \\n  \\n [!code-vb[System.Windows.Forms.ControlPaint1#3](~/add/codesnippet/visualbasic/0bedfc01-f152-4be8-90d9-_1.vb)]\\n [!code-cpp[System.Windows.Forms.ControlPaint1#3](~/add/codesnippet/cpp/0bedfc01-f152-4be8-90d9-_1.cpp)]\\n [!code-cs[System.Windows.Forms.ControlPaint1#3](~/add/codesnippet/csharp/0bedfc01-f152-4be8-90d9-_1.cs)]\"\n  syntax:\n    content: public static void DrawReversibleLine (System.Drawing.Point start, System.Drawing.Point end, System.Drawing.Color backColor);\n    parameters:\n    - id: start\n      type: System.Drawing.Point\n      description: The starting <xref href=\"System.Drawing.Point\"></xref> of the line, in screen coordinates.\n    - id: end\n      type: System.Drawing.Point\n      description: The ending <xref href=\"System.Drawing.Point\"></xref> of the line, in screen coordinates.\n    - id: backColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> of the background behind the line.\n  overload: System.Windows.Forms.ControlPaint.DrawReversibleLine*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)\n  id: DrawScrollButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawScrollButton(Graphics,Rectangle,ScrollButton,ButtonState)\n  nameWithType: ControlPaint.DrawScrollButton(Graphics,Rectangle,ScrollButton,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawScrollButton(Graphics,Rectangle,ScrollButton,ButtonState)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws the specified scroll button on a scroll bar control in the specified state, on the specified graphics surface, and within the specified bounds.\n  syntax:\n    content: public static void DrawScrollButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ScrollButton button, System.Windows.Forms.ButtonState state);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the glyph.\n    - id: button\n      type: System.Windows.Forms.ScrollButton\n      description: One of the <xref href=\"System.Windows.Forms.ScrollButton\"></xref> values that specifies the type of scroll arrow to draw.\n    - id: state\n      type: System.Windows.Forms.ButtonState\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the scroll button in.\n  overload: System.Windows.Forms.ControlPaint.DrawScrollButton*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)\n  id: DrawScrollButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawScrollButton(Graphics,Int32,Int32,Int32,Int32,ScrollButton,ButtonState)\n  nameWithType: ControlPaint.DrawScrollButton(Graphics,Int32,Int32,Int32,Int32,ScrollButton,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawScrollButton(Graphics,Int32,Int32,Int32,Int32,ScrollButton,ButtonState)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws the specified scroll button on a scroll bar control in the specified state, on the specified graphics surface, and within the specified bounds.\n  syntax:\n    content: public static void DrawScrollButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ScrollButton button, System.Windows.Forms.ButtonState state);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of the upper left corner of the drawing rectangle.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of the upper left corner of the drawing rectangle.\n    - id: width\n      type: System.Int32\n      description: The width of the scroll button.\n    - id: height\n      type: System.Int32\n      description: The height of the scroll button.\n    - id: button\n      type: System.Windows.Forms.ScrollButton\n      description: One of the <xref href=\"System.Windows.Forms.ScrollButton\"></xref> values that specifies the type of scroll arrow to draw.\n    - id: state\n      type: System.Windows.Forms.ButtonState\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.ButtonState\"></xref> values that specifies the state to draw the scroll button in.\n  overload: System.Windows.Forms.ControlPaint.DrawScrollButton*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawSelectionFrame(System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color)\n  id: DrawSelectionFrame(System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawSelectionFrame(Graphics,Boolean,Rectangle,Rectangle,Color)\n  nameWithType: ControlPaint.DrawSelectionFrame(Graphics,Boolean,Rectangle,Rectangle,Color)\n  fullName: System.Windows.Forms.ControlPaint.DrawSelectionFrame(Graphics,Boolean,Rectangle,Rectangle,Color)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a standard selection frame in the specified state, on the specified graphics surface, with the specified inner and outer dimensions, and with the specified background color.\n  remarks: \"A selection frame is a frame that is drawn around a selected component at design time.  \\n  \\n The `backColor` parameter is used to calculate the fill color of the frame so that it is always visible against the background.  \\n  \\n If the `active` parameter is set to `true`, the selection frame is drawn as a set of hatch marks indicating that the component has been activated; otherwise, the selection frame is drawn with a dotted pattern or nothing, depending on the implementation.\"\n  syntax:\n    content: public static void DrawSelectionFrame (System.Drawing.Graphics graphics, bool active, System.Drawing.Rectangle outsideRect, System.Drawing.Rectangle insideRect, System.Drawing.Color backColor);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: active\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to draw the selection frame in an active state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: outsideRect\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the outer boundary of the selection frame.\n    - id: insideRect\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the inner boundary of the selection frame.\n    - id: backColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> of the background behind the frame.\n  overload: System.Windows.Forms.ControlPaint.DrawSelectionFrame*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle)\n  id: DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawSizeGrip(Graphics,Color,Rectangle)\n  nameWithType: ControlPaint.DrawSizeGrip(Graphics,Color,Rectangle)\n  fullName: System.Windows.Forms.ControlPaint.DrawSizeGrip(Graphics,Color,Rectangle)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a size grip on a form with the specified bounds and background color and on the specified graphics surface.\n  remarks: \"The `backColor` parameter is used to calculate the color of the size grip so that it is always visible against the background.  \\n  \\n When you define a sizable window, you can include a size grip. A size grip is a special handle that enables the user to resize a window.\"\n  syntax:\n    content: public static void DrawSizeGrip (System.Drawing.Graphics graphics, System.Drawing.Color backColor, System.Drawing.Rectangle bounds);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: backColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> of the background used to determine the colors of the size grip.\n    - id: bounds\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the size grip.\n  overload: System.Windows.Forms.ControlPaint.DrawSizeGrip*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawSizeGrip(Graphics,Color,Int32,Int32,Int32,Int32)\n  nameWithType: ControlPaint.DrawSizeGrip(Graphics,Color,Int32,Int32,Int32,Int32)\n  fullName: System.Windows.Forms.ControlPaint.DrawSizeGrip(Graphics,Color,Int32,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a size grip on a form with the specified bounds and background color and on the specified graphics surface.\n  remarks: \"The `backColor` parameter is used to calculate the color of the size grip so that it is always visible against the background.  \\n  \\n When you define a sizable window, you can include a size grip. A size grip is a special handle that enables the user to resize a window.\"\n  syntax:\n    content: public static void DrawSizeGrip (System.Drawing.Graphics graphics, System.Drawing.Color backColor, int x, int y, int width, int height);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: backColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> of the background used to determine the colors of the size grip.\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of the upper left corner of the size grip.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of the upper left corner of the size grip.\n    - id: width\n      type: System.Int32\n      description: The width of the size grip.\n    - id: height\n      type: System.Int32\n      description: The height of the size grip.\n  overload: System.Windows.Forms.ControlPaint.DrawSizeGrip*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)\n  id: DrawStringDisabled(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawStringDisabled(Graphics,String,Font,Color,RectangleF,StringFormat)\n  nameWithType: ControlPaint.DrawStringDisabled(Graphics,String,Font,Color,RectangleF,StringFormat)\n  fullName: System.Windows.Forms.ControlPaint.DrawStringDisabled(Graphics,String,Font,Color,RectangleF,StringFormat)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws the specified string in a disabled state on the specified graphics surface; within the specified bounds; and in the specified font, color, and format.\n  syntax:\n    content: public static void DrawStringDisabled (System.Drawing.Graphics graphics, string s, System.Drawing.Font font, System.Drawing.Color color, System.Drawing.RectangleF layoutRectangle, System.Drawing.StringFormat format);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: s\n      type: System.String\n      description: The string to draw.\n    - id: font\n      type: System.Drawing.Font\n      description: The <xref href=\"System.Drawing.Font\"></xref> to draw the string with.\n    - id: color\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> of the background behind the string.\n    - id: layoutRectangle\n      type: System.Drawing.RectangleF\n      description: The <xref href=\"System.Drawing.RectangleF\"></xref> that represents the dimensions of the string.\n    - id: format\n      type: System.Drawing.StringFormat\n      description: The <xref href=\"System.Drawing.StringFormat\"></xref> to apply to the string.\n  overload: System.Windows.Forms.ControlPaint.DrawStringDisabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Windows.Forms.TextFormatFlags)\n  id: DrawStringDisabled(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Windows.Forms.TextFormatFlags)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawStringDisabled(IDeviceContext,String,Font,Color,Rectangle,TextFormatFlags)\n  nameWithType: ControlPaint.DrawStringDisabled(IDeviceContext,String,Font,Color,Rectangle,TextFormatFlags)\n  fullName: System.Windows.Forms.ControlPaint.DrawStringDisabled(IDeviceContext,String,Font,Color,Rectangle,TextFormatFlags)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws the specified string in a disabled state on the specified graphics surface, within the specified bounds, and in the specified font, color, and format, using the specified GDI-based <xref href=\"System.Windows.Forms.TextRenderer\"></xref>.\n  syntax:\n    content: public static void DrawStringDisabled (System.Drawing.IDeviceContext dc, string s, System.Drawing.Font font, System.Drawing.Color color, System.Drawing.Rectangle layoutRectangle, System.Windows.Forms.TextFormatFlags format);\n    parameters:\n    - id: dc\n      type: System.Drawing.IDeviceContext\n      description: The GDI-based <xref href=\"System.Windows.Forms.TextRenderer\"></xref>.\n    - id: s\n      type: System.String\n      description: The string to draw.\n    - id: font\n      type: System.Drawing.Font\n      description: The <xref href=\"System.Drawing.Font\"></xref> to draw the string with.\n    - id: color\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> of the background behind the string.\n    - id: layoutRectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.RectangleF\"></xref> that represents the dimensions of the string.\n    - id: format\n      type: System.Windows.Forms.TextFormatFlags\n      description: The <xref href=\"System.Drawing.StringFormat\"></xref> to apply to the string.\n  overload: System.Windows.Forms.ControlPaint.DrawStringDisabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.DrawVisualStyleBorder(System.Drawing.Graphics,System.Drawing.Rectangle)\n  id: DrawVisualStyleBorder(System.Drawing.Graphics,System.Drawing.Rectangle)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: DrawVisualStyleBorder(Graphics,Rectangle)\n  nameWithType: ControlPaint.DrawVisualStyleBorder(Graphics,Rectangle)\n  fullName: System.Windows.Forms.ControlPaint.DrawVisualStyleBorder(Graphics,Rectangle)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a border in the style appropriate for disabled items.\n  syntax:\n    content: public static void DrawVisualStyleBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds);\n    parameters:\n    - id: graphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to draw on.\n    - id: bounds\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the border.\n  overload: System.Windows.Forms.ControlPaint.DrawVisualStyleBorder*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.FillReversibleRectangle(System.Drawing.Rectangle,System.Drawing.Color)\n  id: FillReversibleRectangle(System.Drawing.Rectangle,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: FillReversibleRectangle(Rectangle,Color)\n  nameWithType: ControlPaint.FillReversibleRectangle(Rectangle,Color)\n  fullName: System.Windows.Forms.ControlPaint.FillReversibleRectangle(Rectangle,Color)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Draws a filled, reversible rectangle on the screen.\n  remarks: \"The `backColor` parameter is used to calculate the fill color of the rectangle so that it is always visible against the background.  \\n  \\n The results of this method can be reversed by drawing the same rectangle again. Drawing a rectangle using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors.\"\n  example:\n  - \"The following code example demonstrates using the FillReversibleRectangle method. To run the example, paste the following code in a form. Add a button named `Button2` to the form and ensure all events are connected to their event handlers.  \\n  \\n [!code-vb[System.Windows.Forms.ControlPaint1#1](~/add/codesnippet/visualbasic/b8d430b4-e39e-4a64-a0d6-_1.vb)]\\n [!code-cpp[System.Windows.Forms.ControlPaint1#1](~/add/codesnippet/cpp/b8d430b4-e39e-4a64-a0d6-_1.cpp)]\\n [!code-cs[System.Windows.Forms.ControlPaint1#1](~/add/codesnippet/csharp/b8d430b4-e39e-4a64-a0d6-_1.cs)]\"\n  syntax:\n    content: public static void FillReversibleRectangle (System.Drawing.Rectangle rectangle, System.Drawing.Color backColor);\n    parameters:\n    - id: rectangle\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the dimensions of the rectangle to fill, in screen coordinates.\n    - id: backColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> of the background behind the fill.\n  overload: System.Windows.Forms.ControlPaint.FillReversibleRectangle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.Light(System.Drawing.Color)\n  id: Light(System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: Light(Color)\n  nameWithType: ControlPaint.Light(Color)\n  fullName: System.Windows.Forms.ControlPaint.Light(Color)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates a new light color object for the control from the specified color.\n  remarks: If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is decreased.\n  syntax:\n    content: public static System.Drawing.Color Light (System.Drawing.Color baseColor);\n    parameters:\n    - id: baseColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> to be lightened.\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represents the light color on the control.\n  overload: System.Windows.Forms.ControlPaint.Light*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.Light(System.Drawing.Color,System.Single)\n  id: Light(System.Drawing.Color,System.Single)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: Light(Color,Single)\n  nameWithType: ControlPaint.Light(Color,Single)\n  fullName: System.Windows.Forms.ControlPaint.Light(Color,Single)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates a new light color object for the control from the specified color and lightens it by the specified percentage.\n  remarks: If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is decreased.\n  syntax:\n    content: public static System.Drawing.Color Light (System.Drawing.Color baseColor, float percOfLightLight);\n    parameters:\n    - id: baseColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> to be lightened.\n    - id: percOfLightLight\n      type: System.Single\n      description: The percentage to lighten the specified <xref href=\"System.Drawing.Color\"></xref>.\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represents the light color on the control.\n  overload: System.Windows.Forms.ControlPaint.Light*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlPaint.LightLight(System.Drawing.Color)\n  id: LightLight(System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  langs:\n  - csharp\n  name: LightLight(Color)\n  nameWithType: ControlPaint.LightLight(Color)\n  fullName: System.Windows.Forms.ControlPaint.LightLight(Color)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates a new light color object for the control from the specified color.\n  remarks: If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to the <xref:System.Drawing.SystemColors.ControlLightLight%2A?displayProperty=fullName> color; otherwise, the color's luminosity value is increased.\n  syntax:\n    content: public static System.Drawing.Color LightLight (System.Drawing.Color baseColor);\n    parameters:\n    - id: baseColor\n      type: System.Drawing.Color\n      description: The <xref href=\"System.Drawing.Color\"></xref> to be lightened.\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represents the light color on the control.\n  overload: System.Windows.Forms.ControlPaint.LightLight*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Forms.ControlPaint.ContrastControlDark\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: ContrastControlDark\n  nameWithType: ControlPaint.ContrastControlDark\n  fullName: System.Windows.Forms.ControlPaint.ContrastControlDark\n- uid: System.Drawing.Color\n  parent: System.Drawing\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Drawing.Color\n- uid: System.Windows.Forms.ControlPaint.CreateHBitmap16Bit(System.Drawing.Bitmap,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: CreateHBitmap16Bit(Bitmap,Color)\n  nameWithType: ControlPaint.CreateHBitmap16Bit(Bitmap,Color)\n  fullName: System.Windows.Forms.ControlPaint.CreateHBitmap16Bit(Bitmap,Color)\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Drawing.Bitmap\n  parent: System.Drawing\n  isExternal: false\n  name: Bitmap\n  nameWithType: Bitmap\n  fullName: System.Drawing.Bitmap\n- uid: System.Windows.Forms.ControlPaint.CreateHBitmapColorMask(System.Drawing.Bitmap,System.IntPtr)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: CreateHBitmapColorMask(Bitmap,IntPtr)\n  nameWithType: ControlPaint.CreateHBitmapColorMask(Bitmap,IntPtr)\n  fullName: System.Windows.Forms.ControlPaint.CreateHBitmapColorMask(Bitmap,IntPtr)\n- uid: System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask(System.Drawing.Bitmap)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: CreateHBitmapTransparencyMask(Bitmap)\n  nameWithType: ControlPaint.CreateHBitmapTransparencyMask(Bitmap)\n  fullName: System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask(Bitmap)\n- uid: System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: Dark(Color)\n  nameWithType: ControlPaint.Dark(Color)\n  fullName: System.Windows.Forms.ControlPaint.Dark(Color)\n- uid: System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color,System.Single)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: Dark(Color,Single)\n  nameWithType: ControlPaint.Dark(Color,Single)\n  fullName: System.Windows.Forms.ControlPaint.Dark(Color,Single)\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Windows.Forms.ControlPaint.DarkDark(System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DarkDark(Color)\n  nameWithType: ControlPaint.DarkDark(Color)\n  fullName: System.Windows.Forms.ControlPaint.DarkDark(Color)\n- uid: System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.ButtonBorderStyle)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawBorder(Graphics,Rectangle,Color,ButtonBorderStyle)\n  nameWithType: ControlPaint.DrawBorder(Graphics,Rectangle,Color,ButtonBorderStyle)\n  fullName: System.Windows.Forms.ControlPaint.DrawBorder(Graphics,Rectangle,Color,ButtonBorderStyle)\n- uid: System.Drawing.Graphics\n  parent: System.Drawing\n  isExternal: false\n  name: Graphics\n  nameWithType: Graphics\n  fullName: System.Drawing.Graphics\n- uid: System.Drawing.Rectangle\n  parent: System.Drawing\n  isExternal: false\n  name: Rectangle\n  nameWithType: Rectangle\n  fullName: System.Drawing.Rectangle\n- uid: System.Windows.Forms.ButtonBorderStyle\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ButtonBorderStyle\n  nameWithType: ButtonBorderStyle\n  fullName: System.Windows.Forms.ButtonBorderStyle\n- uid: System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawBorder(Graphics,Rectangle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle)\n  nameWithType: ControlPaint.DrawBorder(Graphics,Rectangle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle)\n  fullName: System.Windows.Forms.ControlPaint.DrawBorder(Graphics,Rectangle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawBorder3D(Graphics,Rectangle)\n  nameWithType: ControlPaint.DrawBorder3D(Graphics,Rectangle)\n  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Rectangle)\n- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawBorder3D(Graphics,Rectangle,Border3DStyle)\n  nameWithType: ControlPaint.DrawBorder3D(Graphics,Rectangle,Border3DStyle)\n  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Rectangle,Border3DStyle)\n- uid: System.Windows.Forms.Border3DStyle\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Border3DStyle\n  nameWithType: Border3DStyle\n  fullName: System.Windows.Forms.Border3DStyle\n- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawBorder3D(Graphics,Rectangle,Border3DStyle,Border3DSide)\n  nameWithType: ControlPaint.DrawBorder3D(Graphics,Rectangle,Border3DStyle,Border3DSide)\n  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Rectangle,Border3DStyle,Border3DSide)\n- uid: System.Windows.Forms.Border3DSide\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Border3DSide\n  nameWithType: Border3DSide\n  fullName: System.Windows.Forms.Border3DSide\n- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawBorder3D(Graphics,Int32,Int32,Int32,Int32)\n  nameWithType: ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32)\n  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32)\n- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle)\n  nameWithType: ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle)\n  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle)\n- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle,Border3DSide)\n  nameWithType: ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle,Border3DSide)\n  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle,Border3DSide)\n- uid: System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawButton(Graphics,Rectangle,ButtonState)\n  nameWithType: ControlPaint.DrawButton(Graphics,Rectangle,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawButton(Graphics,Rectangle,ButtonState)\n- uid: System.Windows.Forms.ButtonState\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ButtonState\n  nameWithType: ButtonState\n  fullName: System.Windows.Forms.ButtonState\n- uid: System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  nameWithType: ControlPaint.DrawButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n- uid: System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawCaptionButton(Graphics,Rectangle,CaptionButton,ButtonState)\n  nameWithType: ControlPaint.DrawCaptionButton(Graphics,Rectangle,CaptionButton,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawCaptionButton(Graphics,Rectangle,CaptionButton,ButtonState)\n- uid: System.Windows.Forms.CaptionButton\n  parent: System.Windows.Forms\n  isExternal: false\n  name: CaptionButton\n  nameWithType: CaptionButton\n  fullName: System.Windows.Forms.CaptionButton\n- uid: System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawCaptionButton(Graphics,Int32,Int32,Int32,Int32,CaptionButton,ButtonState)\n  nameWithType: ControlPaint.DrawCaptionButton(Graphics,Int32,Int32,Int32,Int32,CaptionButton,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawCaptionButton(Graphics,Int32,Int32,Int32,Int32,CaptionButton,ButtonState)\n- uid: System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawCheckBox(Graphics,Rectangle,ButtonState)\n  nameWithType: ControlPaint.DrawCheckBox(Graphics,Rectangle,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawCheckBox(Graphics,Rectangle,ButtonState)\n- uid: System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  nameWithType: ControlPaint.DrawCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n- uid: System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawComboButton(Graphics,Rectangle,ButtonState)\n  nameWithType: ControlPaint.DrawComboButton(Graphics,Rectangle,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawComboButton(Graphics,Rectangle,ButtonState)\n- uid: System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawComboButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  nameWithType: ControlPaint.DrawComboButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawComboButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n- uid: System.Windows.Forms.ControlPaint.DrawContainerGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawContainerGrabHandle(Graphics,Rectangle)\n  nameWithType: ControlPaint.DrawContainerGrabHandle(Graphics,Rectangle)\n  fullName: System.Windows.Forms.ControlPaint.DrawContainerGrabHandle(Graphics,Rectangle)\n- uid: System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawFocusRectangle(Graphics,Rectangle)\n  nameWithType: ControlPaint.DrawFocusRectangle(Graphics,Rectangle)\n  fullName: System.Windows.Forms.ControlPaint.DrawFocusRectangle(Graphics,Rectangle)\n- uid: System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawFocusRectangle(Graphics,Rectangle,Color,Color)\n  nameWithType: ControlPaint.DrawFocusRectangle(Graphics,Rectangle,Color,Color)\n  fullName: System.Windows.Forms.ControlPaint.DrawFocusRectangle(Graphics,Rectangle,Color,Color)\n- uid: System.Windows.Forms.ControlPaint.DrawGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawGrabHandle(Graphics,Rectangle,Boolean,Boolean)\n  nameWithType: ControlPaint.DrawGrabHandle(Graphics,Rectangle,Boolean,Boolean)\n  fullName: System.Windows.Forms.ControlPaint.DrawGrabHandle(Graphics,Rectangle,Boolean,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.ControlPaint.DrawGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawGrid(Graphics,Rectangle,Size,Color)\n  nameWithType: ControlPaint.DrawGrid(Graphics,Rectangle,Size,Color)\n  fullName: System.Windows.Forms.ControlPaint.DrawGrid(Graphics,Rectangle,Size,Color)\n- uid: System.Drawing.Size\n  parent: System.Drawing\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Drawing.Size\n- uid: System.Windows.Forms.ControlPaint.DrawImageDisabled(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawImageDisabled(Graphics,Image,Int32,Int32,Color)\n  nameWithType: ControlPaint.DrawImageDisabled(Graphics,Image,Int32,Int32,Color)\n  fullName: System.Windows.Forms.ControlPaint.DrawImageDisabled(Graphics,Image,Int32,Int32,Color)\n- uid: System.Drawing.Image\n  parent: System.Drawing\n  isExternal: false\n  name: Image\n  nameWithType: Image\n  fullName: System.Drawing.Image\n- uid: System.Windows.Forms.ControlPaint.DrawLockedFrame(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawLockedFrame(Graphics,Rectangle,Boolean)\n  nameWithType: ControlPaint.DrawLockedFrame(Graphics,Rectangle,Boolean)\n  fullName: System.Windows.Forms.ControlPaint.DrawLockedFrame(Graphics,Rectangle,Boolean)\n- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawMenuGlyph(Graphics,Rectangle,MenuGlyph)\n  nameWithType: ControlPaint.DrawMenuGlyph(Graphics,Rectangle,MenuGlyph)\n  fullName: System.Windows.Forms.ControlPaint.DrawMenuGlyph(Graphics,Rectangle,MenuGlyph)\n- uid: System.Windows.Forms.MenuGlyph\n  parent: System.Windows.Forms\n  isExternal: false\n  name: MenuGlyph\n  nameWithType: MenuGlyph\n  fullName: System.Windows.Forms.MenuGlyph\n- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawMenuGlyph(Graphics,Rectangle,MenuGlyph,Color,Color)\n  nameWithType: ControlPaint.DrawMenuGlyph(Graphics,Rectangle,MenuGlyph,Color,Color)\n  fullName: System.Windows.Forms.ControlPaint.DrawMenuGlyph(Graphics,Rectangle,MenuGlyph,Color,Color)\n- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph)\n  nameWithType: ControlPaint.DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph)\n  fullName: System.Windows.Forms.ControlPaint.DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph)\n- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph,Color,Color)\n  nameWithType: ControlPaint.DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph,Color,Color)\n  fullName: System.Windows.Forms.ControlPaint.DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph,Color,Color)\n- uid: System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawMixedCheckBox(Graphics,Rectangle,ButtonState)\n  nameWithType: ControlPaint.DrawMixedCheckBox(Graphics,Rectangle,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawMixedCheckBox(Graphics,Rectangle,ButtonState)\n- uid: System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawMixedCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  nameWithType: ControlPaint.DrawMixedCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawMixedCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n- uid: System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawRadioButton(Graphics,Rectangle,ButtonState)\n  nameWithType: ControlPaint.DrawRadioButton(Graphics,Rectangle,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawRadioButton(Graphics,Rectangle,ButtonState)\n- uid: System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawRadioButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  nameWithType: ControlPaint.DrawRadioButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawRadioButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)\n- uid: System.Windows.Forms.ControlPaint.DrawReversibleFrame(System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.FrameStyle)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawReversibleFrame(Rectangle,Color,FrameStyle)\n  nameWithType: ControlPaint.DrawReversibleFrame(Rectangle,Color,FrameStyle)\n  fullName: System.Windows.Forms.ControlPaint.DrawReversibleFrame(Rectangle,Color,FrameStyle)\n- uid: System.Windows.Forms.FrameStyle\n  parent: System.Windows.Forms\n  isExternal: false\n  name: FrameStyle\n  nameWithType: FrameStyle\n  fullName: System.Windows.Forms.FrameStyle\n- uid: System.Windows.Forms.ControlPaint.DrawReversibleLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawReversibleLine(Point,Point,Color)\n  nameWithType: ControlPaint.DrawReversibleLine(Point,Point,Color)\n  fullName: System.Windows.Forms.ControlPaint.DrawReversibleLine(Point,Point,Color)\n- uid: System.Drawing.Point\n  parent: System.Drawing\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Drawing.Point\n- uid: System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawScrollButton(Graphics,Rectangle,ScrollButton,ButtonState)\n  nameWithType: ControlPaint.DrawScrollButton(Graphics,Rectangle,ScrollButton,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawScrollButton(Graphics,Rectangle,ScrollButton,ButtonState)\n- uid: System.Windows.Forms.ScrollButton\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ScrollButton\n  nameWithType: ScrollButton\n  fullName: System.Windows.Forms.ScrollButton\n- uid: System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawScrollButton(Graphics,Int32,Int32,Int32,Int32,ScrollButton,ButtonState)\n  nameWithType: ControlPaint.DrawScrollButton(Graphics,Int32,Int32,Int32,Int32,ScrollButton,ButtonState)\n  fullName: System.Windows.Forms.ControlPaint.DrawScrollButton(Graphics,Int32,Int32,Int32,Int32,ScrollButton,ButtonState)\n- uid: System.Windows.Forms.ControlPaint.DrawSelectionFrame(System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawSelectionFrame(Graphics,Boolean,Rectangle,Rectangle,Color)\n  nameWithType: ControlPaint.DrawSelectionFrame(Graphics,Boolean,Rectangle,Rectangle,Color)\n  fullName: System.Windows.Forms.ControlPaint.DrawSelectionFrame(Graphics,Boolean,Rectangle,Rectangle,Color)\n- uid: System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawSizeGrip(Graphics,Color,Rectangle)\n  nameWithType: ControlPaint.DrawSizeGrip(Graphics,Color,Rectangle)\n  fullName: System.Windows.Forms.ControlPaint.DrawSizeGrip(Graphics,Color,Rectangle)\n- uid: System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawSizeGrip(Graphics,Color,Int32,Int32,Int32,Int32)\n  nameWithType: ControlPaint.DrawSizeGrip(Graphics,Color,Int32,Int32,Int32,Int32)\n  fullName: System.Windows.Forms.ControlPaint.DrawSizeGrip(Graphics,Color,Int32,Int32,Int32,Int32)\n- uid: System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawStringDisabled(Graphics,String,Font,Color,RectangleF,StringFormat)\n  nameWithType: ControlPaint.DrawStringDisabled(Graphics,String,Font,Color,RectangleF,StringFormat)\n  fullName: System.Windows.Forms.ControlPaint.DrawStringDisabled(Graphics,String,Font,Color,RectangleF,StringFormat)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Drawing.Font\n  parent: System.Drawing\n  isExternal: false\n  name: Font\n  nameWithType: Font\n  fullName: System.Drawing.Font\n- uid: System.Drawing.RectangleF\n  parent: System.Drawing\n  isExternal: false\n  name: RectangleF\n  nameWithType: RectangleF\n  fullName: System.Drawing.RectangleF\n- uid: System.Drawing.StringFormat\n  parent: System.Drawing\n  isExternal: false\n  name: StringFormat\n  nameWithType: StringFormat\n  fullName: System.Drawing.StringFormat\n- uid: System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Windows.Forms.TextFormatFlags)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawStringDisabled(IDeviceContext,String,Font,Color,Rectangle,TextFormatFlags)\n  nameWithType: ControlPaint.DrawStringDisabled(IDeviceContext,String,Font,Color,Rectangle,TextFormatFlags)\n  fullName: System.Windows.Forms.ControlPaint.DrawStringDisabled(IDeviceContext,String,Font,Color,Rectangle,TextFormatFlags)\n- uid: System.Drawing.IDeviceContext\n  parent: System.Drawing\n  isExternal: false\n  name: IDeviceContext\n  nameWithType: IDeviceContext\n  fullName: System.Drawing.IDeviceContext\n- uid: System.Windows.Forms.TextFormatFlags\n  parent: System.Windows.Forms\n  isExternal: false\n  name: TextFormatFlags\n  nameWithType: TextFormatFlags\n  fullName: System.Windows.Forms.TextFormatFlags\n- uid: System.Windows.Forms.ControlPaint.DrawVisualStyleBorder(System.Drawing.Graphics,System.Drawing.Rectangle)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawVisualStyleBorder(Graphics,Rectangle)\n  nameWithType: ControlPaint.DrawVisualStyleBorder(Graphics,Rectangle)\n  fullName: System.Windows.Forms.ControlPaint.DrawVisualStyleBorder(Graphics,Rectangle)\n- uid: System.Windows.Forms.ControlPaint.FillReversibleRectangle(System.Drawing.Rectangle,System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: FillReversibleRectangle(Rectangle,Color)\n  nameWithType: ControlPaint.FillReversibleRectangle(Rectangle,Color)\n  fullName: System.Windows.Forms.ControlPaint.FillReversibleRectangle(Rectangle,Color)\n- uid: System.Windows.Forms.ControlPaint.Light(System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: Light(Color)\n  nameWithType: ControlPaint.Light(Color)\n  fullName: System.Windows.Forms.ControlPaint.Light(Color)\n- uid: System.Windows.Forms.ControlPaint.Light(System.Drawing.Color,System.Single)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: Light(Color,Single)\n  nameWithType: ControlPaint.Light(Color,Single)\n  fullName: System.Windows.Forms.ControlPaint.Light(Color,Single)\n- uid: System.Windows.Forms.ControlPaint.LightLight(System.Drawing.Color)\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: LightLight(Color)\n  nameWithType: ControlPaint.LightLight(Color)\n  fullName: System.Windows.Forms.ControlPaint.LightLight(Color)\n- uid: System.Windows.Forms.ControlPaint.ContrastControlDark*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: ContrastControlDark\n  nameWithType: ControlPaint.ContrastControlDark\n- uid: System.Windows.Forms.ControlPaint.CreateHBitmap16Bit*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: CreateHBitmap16Bit\n  nameWithType: ControlPaint.CreateHBitmap16Bit\n- uid: System.Windows.Forms.ControlPaint.CreateHBitmapColorMask*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: CreateHBitmapColorMask\n  nameWithType: ControlPaint.CreateHBitmapColorMask\n- uid: System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: CreateHBitmapTransparencyMask\n  nameWithType: ControlPaint.CreateHBitmapTransparencyMask\n- uid: System.Windows.Forms.ControlPaint.Dark*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: Dark\n  nameWithType: ControlPaint.Dark\n- uid: System.Windows.Forms.ControlPaint.DarkDark*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DarkDark\n  nameWithType: ControlPaint.DarkDark\n- uid: System.Windows.Forms.ControlPaint.DrawBorder*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawBorder\n  nameWithType: ControlPaint.DrawBorder\n- uid: System.Windows.Forms.ControlPaint.DrawBorder3D*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawBorder3D\n  nameWithType: ControlPaint.DrawBorder3D\n- uid: System.Windows.Forms.ControlPaint.DrawButton*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawButton\n  nameWithType: ControlPaint.DrawButton\n- uid: System.Windows.Forms.ControlPaint.DrawCaptionButton*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawCaptionButton\n  nameWithType: ControlPaint.DrawCaptionButton\n- uid: System.Windows.Forms.ControlPaint.DrawCheckBox*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawCheckBox\n  nameWithType: ControlPaint.DrawCheckBox\n- uid: System.Windows.Forms.ControlPaint.DrawComboButton*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawComboButton\n  nameWithType: ControlPaint.DrawComboButton\n- uid: System.Windows.Forms.ControlPaint.DrawContainerGrabHandle*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawContainerGrabHandle\n  nameWithType: ControlPaint.DrawContainerGrabHandle\n- uid: System.Windows.Forms.ControlPaint.DrawFocusRectangle*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawFocusRectangle\n  nameWithType: ControlPaint.DrawFocusRectangle\n- uid: System.Windows.Forms.ControlPaint.DrawGrabHandle*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawGrabHandle\n  nameWithType: ControlPaint.DrawGrabHandle\n- uid: System.Windows.Forms.ControlPaint.DrawGrid*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawGrid\n  nameWithType: ControlPaint.DrawGrid\n- uid: System.Windows.Forms.ControlPaint.DrawImageDisabled*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawImageDisabled\n  nameWithType: ControlPaint.DrawImageDisabled\n- uid: System.Windows.Forms.ControlPaint.DrawLockedFrame*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawLockedFrame\n  nameWithType: ControlPaint.DrawLockedFrame\n- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawMenuGlyph\n  nameWithType: ControlPaint.DrawMenuGlyph\n- uid: System.Windows.Forms.ControlPaint.DrawMixedCheckBox*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawMixedCheckBox\n  nameWithType: ControlPaint.DrawMixedCheckBox\n- uid: System.Windows.Forms.ControlPaint.DrawRadioButton*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawRadioButton\n  nameWithType: ControlPaint.DrawRadioButton\n- uid: System.Windows.Forms.ControlPaint.DrawReversibleFrame*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawReversibleFrame\n  nameWithType: ControlPaint.DrawReversibleFrame\n- uid: System.Windows.Forms.ControlPaint.DrawReversibleLine*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawReversibleLine\n  nameWithType: ControlPaint.DrawReversibleLine\n- uid: System.Windows.Forms.ControlPaint.DrawScrollButton*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawScrollButton\n  nameWithType: ControlPaint.DrawScrollButton\n- uid: System.Windows.Forms.ControlPaint.DrawSelectionFrame*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawSelectionFrame\n  nameWithType: ControlPaint.DrawSelectionFrame\n- uid: System.Windows.Forms.ControlPaint.DrawSizeGrip*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawSizeGrip\n  nameWithType: ControlPaint.DrawSizeGrip\n- uid: System.Windows.Forms.ControlPaint.DrawStringDisabled*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawStringDisabled\n  nameWithType: ControlPaint.DrawStringDisabled\n- uid: System.Windows.Forms.ControlPaint.DrawVisualStyleBorder*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: DrawVisualStyleBorder\n  nameWithType: ControlPaint.DrawVisualStyleBorder\n- uid: System.Windows.Forms.ControlPaint.FillReversibleRectangle*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: FillReversibleRectangle\n  nameWithType: ControlPaint.FillReversibleRectangle\n- uid: System.Windows.Forms.ControlPaint.Light*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: Light\n  nameWithType: ControlPaint.Light\n- uid: System.Windows.Forms.ControlPaint.LightLight*\n  parent: System.Windows.Forms.ControlPaint\n  isExternal: false\n  name: LightLight\n  nameWithType: ControlPaint.LightLight\n"}