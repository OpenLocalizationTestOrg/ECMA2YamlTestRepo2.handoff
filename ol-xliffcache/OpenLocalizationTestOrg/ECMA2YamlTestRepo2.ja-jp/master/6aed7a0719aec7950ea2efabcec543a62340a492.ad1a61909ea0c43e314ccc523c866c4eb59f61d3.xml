{"nodes":[{"pos":[629,936],"content":"Specifies which properties should be reported by type descriptors, specifically the <xref:System.ComponentModel.TypeDescriptor.GetProperties*> method. This enumeration is used to specify the value of the &lt;xref:System.ComponentModel.PropertyFilterAttribute.Filter%2A?displayProperty=fullName&gt; property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies which properties should be reported by type descriptors, specifically the <xref:System.ComponentModel.TypeDescriptor.GetProperties*> method. This enumeration is used to specify the value of the &lt;xref:System.ComponentModel.PropertyFilterAttribute.Filter%2A?displayProperty=fullName&gt; property.","pos":[0,307],"nodes":[{"content":"Specifies which properties should be reported by type descriptors, specifically the &lt;xref:System.ComponentModel.TypeDescriptor.GetProperties*&gt; method.","pos":[0,150],"source":"Specifies which properties should be reported by type descriptors, specifically the <xref:System.ComponentModel.TypeDescriptor.GetProperties*> method."},{"content":"This enumeration is used to specify the value of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.ComponentModel.PropertyFilterAttribute.Filter%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property.","pos":[151,307],"source":" This enumeration is used to specify the value of the &lt;xref:System.ComponentModel.PropertyFilterAttribute.Filter%2A?displayProperty=fullName&gt; property."}]}]},{"pos":[949,2092],"content":"This filter mechanism is only implemented by the custom <xref:System.ComponentModel.DependencyPropertyDescriptor> for <xref:System.Windows.DependencyObject>.       Invalid and Valid are relevant only for attached properties. The validity of a property is determined by working with the following attributes: <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> , <xref:System.Windows.AttachedPropertyBrowsableForTypeAttribute>, <xref:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute> which define the intended scope of the attached property in the object tree once the [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] is loaded. Designer applications that populate property grids and include attached properties in the grid must examine the value or presence of these attributes and the relative position of the current element versus either a parent or child element that \"owns\" the attached property. The owner-setter relationship together with the attribute values and PropertyFilterOptions will define whether a given attached property that is set on an element is valid or invalid.","needQuote":false,"needEscape":true,"nodes":[{"content":"This filter mechanism is only implemented by the custom &lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt; for &lt;xref:System.Windows.DependencyObject&gt;.","pos":[0,157],"source":"This filter mechanism is only implemented by the custom <xref:System.ComponentModel.DependencyPropertyDescriptor> for <xref:System.Windows.DependencyObject>."},{"content":"Invalid and Valid are relevant only for attached properties.","pos":[164,224]},{"content":"The validity of a property is determined by working with the following attributes: &lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute&gt; , &lt;xref:System.Windows.AttachedPropertyBrowsableForTypeAttribute&gt;, &lt;xref:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&gt; which define the intended scope of the attached property in the object tree once the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> is loaded.","pos":[225,681],"source":" The validity of a property is determined by working with the following attributes: <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> , <xref:System.Windows.AttachedPropertyBrowsableForTypeAttribute>, <xref:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute> which define the intended scope of the attached property in the object tree once the [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] is loaded."},{"content":"Designer applications that populate property grids and include attached properties in the grid must examine the value or presence of these attributes and the relative position of the current element versus either a parent or child element that \"owns\" the attached property.","pos":[682,955]},{"content":"The owner-setter relationship together with the attribute values and PropertyFilterOptions will define whether a given attached property that is set on an element is valid or invalid.","pos":[956,1139]}]},{"pos":[2579,2601],"content":"Return all properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"Return all properties.","pos":[0,22]}]},{"pos":[2716,2728],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3132,3233],"content":"Return only those properties that are not valid given the current context of the object. See Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"Return only those properties that are not valid given the current context of the object. See Remarks.","pos":[0,101],"nodes":[{"content":"Return only those properties that are not valid given the current context of the object.","pos":[0,88]},{"content":"See Remarks.","pos":[89,101]}]}]},{"pos":[3352,3364],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3753,3773],"content":"Return no properties","needQuote":true,"needEscape":true,"nodes":[{"content":"Return no properties","pos":[0,20]}]},{"pos":[3889,3901],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4315,4381],"content":"Return only those properties that have local values currently set.","needQuote":true,"needEscape":true,"nodes":[{"content":"Return only those properties that have local values currently set.","pos":[0,66]}]},{"pos":[4502,4514],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4938,5100],"content":"Return only those properties whose local values are not set, or do not have properties set in an external expression store (such as binding or deferred resource).","needQuote":true,"needEscape":true,"nodes":[{"content":"Return only those properties whose local values are not set, or do not have properties set in an external expression store (such as binding or deferred resource).","pos":[0,162]}]},{"pos":[5223,5235],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5629,5712],"content":"Return any property that is valid on the  object in the current scope. See Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"Return any property that is valid on the  object in the current scope. See Remarks.","pos":[0,83],"nodes":[{"content":"Return any property that is valid on the  object in the current scope.","pos":[0,70]},{"content":"See Remarks.","pos":[71,83]}]}]},{"pos":[5829,5841],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.PropertyFilterOptions\n  id: PropertyFilterOptions\n  children:\n  - System.ComponentModel.PropertyFilterOptions.All\n  - System.ComponentModel.PropertyFilterOptions.Invalid\n  - System.ComponentModel.PropertyFilterOptions.None\n  - System.ComponentModel.PropertyFilterOptions.SetValues\n  - System.ComponentModel.PropertyFilterOptions.UnsetValues\n  - System.ComponentModel.PropertyFilterOptions.Valid\n  langs:\n  - csharp\n  name: PropertyFilterOptions\n  nameWithType: PropertyFilterOptions\n  fullName: System.ComponentModel.PropertyFilterOptions\n  type: Enum\n  summary: Specifies which properties should be reported by type descriptors, specifically the <xref:System.ComponentModel.TypeDescriptor.GetProperties*> method. This enumeration is used to specify the value of the &lt;xref:System.ComponentModel.PropertyFilterAttribute.Filter%2A?displayProperty=fullName&gt; property.\n  remarks: \"This filter mechanism is only implemented by the custom <xref:System.ComponentModel.DependencyPropertyDescriptor> for <xref:System.Windows.DependencyObject>.  \\n  \\n Invalid and Valid are relevant only for attached properties. The validity of a property is determined by working with the following attributes: <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> , <xref:System.Windows.AttachedPropertyBrowsableForTypeAttribute>, <xref:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute> which define the intended scope of the attached property in the object tree once the [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] is loaded. Designer applications that populate property grids and include attached properties in the grid must examine the value or presence of these attributes and the relative position of the current element versus either a parent or child element that \\\"owns\\\" the attached property. The owner-setter relationship together with the attribute values and PropertyFilterOptions will define whether a given attached property that is set on an element is valid or invalid.\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      public enum PropertyFilterOptions\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.ComponentModel.PropertyFilterOptions.All\n  id: All\n  parent: System.ComponentModel.PropertyFilterOptions\n  langs:\n  - csharp\n  name: All\n  nameWithType: PropertyFilterOptions.All\n  fullName: System.ComponentModel.PropertyFilterOptions.All\n  type: Field\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Return all properties.\n  syntax:\n    content: All\n    return:\n      type: System.ComponentModel.PropertyFilterOptions\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.PropertyFilterOptions.Invalid\n  id: Invalid\n  parent: System.ComponentModel.PropertyFilterOptions\n  langs:\n  - csharp\n  name: Invalid\n  nameWithType: PropertyFilterOptions.Invalid\n  fullName: System.ComponentModel.PropertyFilterOptions.Invalid\n  type: Field\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Return only those properties that are not valid given the current context of the object. See Remarks.\n  syntax:\n    content: Invalid\n    return:\n      type: System.ComponentModel.PropertyFilterOptions\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.PropertyFilterOptions.None\n  id: None\n  parent: System.ComponentModel.PropertyFilterOptions\n  langs:\n  - csharp\n  name: None\n  nameWithType: PropertyFilterOptions.None\n  fullName: System.ComponentModel.PropertyFilterOptions.None\n  type: Field\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Return no properties\n  syntax:\n    content: None\n    return:\n      type: System.ComponentModel.PropertyFilterOptions\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.PropertyFilterOptions.SetValues\n  id: SetValues\n  parent: System.ComponentModel.PropertyFilterOptions\n  langs:\n  - csharp\n  name: SetValues\n  nameWithType: PropertyFilterOptions.SetValues\n  fullName: System.ComponentModel.PropertyFilterOptions.SetValues\n  type: Field\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Return only those properties that have local values currently set.\n  syntax:\n    content: SetValues\n    return:\n      type: System.ComponentModel.PropertyFilterOptions\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.PropertyFilterOptions.UnsetValues\n  id: UnsetValues\n  parent: System.ComponentModel.PropertyFilterOptions\n  langs:\n  - csharp\n  name: UnsetValues\n  nameWithType: PropertyFilterOptions.UnsetValues\n  fullName: System.ComponentModel.PropertyFilterOptions.UnsetValues\n  type: Field\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Return only those properties whose local values are not set, or do not have properties set in an external expression store (such as binding or deferred resource).\n  syntax:\n    content: UnsetValues\n    return:\n      type: System.ComponentModel.PropertyFilterOptions\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.PropertyFilterOptions.Valid\n  id: Valid\n  parent: System.ComponentModel.PropertyFilterOptions\n  langs:\n  - csharp\n  name: Valid\n  nameWithType: PropertyFilterOptions.Valid\n  fullName: System.ComponentModel.PropertyFilterOptions.Valid\n  type: Field\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Return any property that is valid on the  object in the current scope. See Remarks.\n  syntax:\n    content: Valid\n    return:\n      type: System.ComponentModel.PropertyFilterOptions\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.ComponentModel.PropertyFilterOptions.All\n  parent: System.ComponentModel.PropertyFilterOptions\n  isExternal: false\n  name: All\n  nameWithType: PropertyFilterOptions.All\n  fullName: System.ComponentModel.PropertyFilterOptions.All\n- uid: System.ComponentModel.PropertyFilterOptions\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyFilterOptions\n  nameWithType: PropertyFilterOptions\n  fullName: System.ComponentModel.PropertyFilterOptions\n- uid: System.ComponentModel.PropertyFilterOptions.Invalid\n  parent: System.ComponentModel.PropertyFilterOptions\n  isExternal: false\n  name: Invalid\n  nameWithType: PropertyFilterOptions.Invalid\n  fullName: System.ComponentModel.PropertyFilterOptions.Invalid\n- uid: System.ComponentModel.PropertyFilterOptions.None\n  parent: System.ComponentModel.PropertyFilterOptions\n  isExternal: false\n  name: None\n  nameWithType: PropertyFilterOptions.None\n  fullName: System.ComponentModel.PropertyFilterOptions.None\n- uid: System.ComponentModel.PropertyFilterOptions.SetValues\n  parent: System.ComponentModel.PropertyFilterOptions\n  isExternal: false\n  name: SetValues\n  nameWithType: PropertyFilterOptions.SetValues\n  fullName: System.ComponentModel.PropertyFilterOptions.SetValues\n- uid: System.ComponentModel.PropertyFilterOptions.UnsetValues\n  parent: System.ComponentModel.PropertyFilterOptions\n  isExternal: false\n  name: UnsetValues\n  nameWithType: PropertyFilterOptions.UnsetValues\n  fullName: System.ComponentModel.PropertyFilterOptions.UnsetValues\n- uid: System.ComponentModel.PropertyFilterOptions.Valid\n  parent: System.ComponentModel.PropertyFilterOptions\n  isExternal: false\n  name: Valid\n  nameWithType: PropertyFilterOptions.Valid\n  fullName: System.ComponentModel.PropertyFilterOptions.Valid\n"}