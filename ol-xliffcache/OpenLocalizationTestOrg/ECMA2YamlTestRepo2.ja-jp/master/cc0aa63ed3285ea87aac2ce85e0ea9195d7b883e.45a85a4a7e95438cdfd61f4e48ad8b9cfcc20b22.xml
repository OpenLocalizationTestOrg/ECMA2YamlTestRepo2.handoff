{"nodes":[{"pos":[1025,1063],"content":"Used for weakly typed query scenarios.","needQuote":true,"needEscape":true,"nodes":[{"content":"Used for weakly typed query scenarios.","pos":[0,38]}]},{"pos":[1075,1149],"content":"For more information about methods, see <xref:System.Data.Linq.Table%601>.","needQuote":true,"needEscape":true,"nodes":[{"content":"For more information about methods, see &lt;xref:System.Data.Linq.Table%601&gt;.","pos":[0,74],"source":"For more information about methods, see <xref:System.Data.Linq.Table%601>."}]},{"pos":[1693,1792],"content":"Attaches an entity to the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in an unmodified state.","needQuote":true,"needEscape":true,"source":"Attaches an entity to the <xref href=\"System.Data.Linq.DataContext\"></xref> in an unmodified state."},{"pos":[1804,1971],"content":"For more information about how to use this method, see <bpt id=\"p1\">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."},{"pos":[2109,2135],"content":"The entity to be attached.","needQuote":true,"needEscape":true,"nodes":[{"content":"The entity to be attached.","pos":[0,26]}]},{"pos":[2612,2748],"content":"Attaches all entities of a collection to the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in either a modified or unmodified state.","needQuote":true,"needEscape":true,"source":"Attaches all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state."},{"pos":[2760,2927],"content":"For more information about how to use this method, see <bpt id=\"p1\">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."},{"pos":[3082,3109],"content":"The collection of entities.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of entities.","pos":[0,27]}]},{"pos":[3177,3273],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to attach the entities as modified.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to attach the entities as modified."},{"pos":[3745,3915],"content":"Attaches an entity to the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in either a modified or unmodified state by specifying both the entity and its original state.","needQuote":true,"needEscape":true,"source":"Attaches an entity to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state by specifying both the entity and its original state."},{"pos":[3927,4094],"content":"For more information about how to use this method, see <bpt id=\"p1\">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."},{"pos":[4249,4275],"content":"The entity to be attached.","needQuote":true,"needEscape":true,"nodes":[{"content":"The entity to be attached.","pos":[0,26]}]},{"pos":[4340,4427],"content":"An instance of the same entity type with data members that contain the original values.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the same entity type with data members that contain the original values.","pos":[0,87]}]},{"pos":[4914,5050],"content":"Attaches all entities of a collection to the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in either a modified or unmodified state.","needQuote":true,"needEscape":true,"source":"Attaches all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state."},{"pos":[5062,5229],"content":"For more information about how to use this method, see <bpt id=\"p1\">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."},{"pos":[5415,5442],"content":"The collection of entities.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of entities.","pos":[0,27]}]},{"pos":[5986,6122],"content":"Attaches all entities of a collection to the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in either a modified or unmodified state.","needQuote":true,"needEscape":true,"source":"Attaches all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state."},{"pos":[6134,6301],"content":"For more information about how to use this method, see <bpt id=\"p1\">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."},{"pos":[6504,6531],"content":"The collection of entities.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of entities.","pos":[0,27]}]},{"pos":[6599,6695],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to attach the entities as modified.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to attach the entities as modified."},{"pos":[7074,7214],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that has been used to retrieve this <bpt id=\"p2\">&lt;xref href=\"System.Data.Linq.ITable\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.Linq.DataContext\"></xref> that has been used to retrieve this <xref href=\"System.Data.Linq.ITable\"></xref>."},{"pos":[7363,7483],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to retrieve the <bpt id=\"p2\">&lt;xref href=\"System.Data.Linq.ITable\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.Linq.DataContext\"></xref> used to retrieve the <xref href=\"System.Data.Linq.ITable\"></xref>."},{"pos":[8011,8143],"content":"Puts all entities from the collection into a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_pending delete\" name=\"pending delete\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> state.","needQuote":true,"needEscape":true,"source":"Puts all entities from the collection into a <xref uid=\"langword_csharp_pending delete\" name=\"pending delete\" href=\"\"></xref> state."},{"pos":[8155,8260],"content":"Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Call &lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt; to perform the actual deletion in the database.","pos":[0,105],"source":"Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database."}]},{"pos":[8454,8502],"content":"The collection from which all items are removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection from which all items are removed.","pos":[0,48]}]},{"pos":[8976,9101],"content":"Puts an entity from this table into a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_pending delete\" name=\"pending delete\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> state.","needQuote":true,"needEscape":true,"source":"Puts an entity from this table into a <xref uid=\"langword_csharp_pending delete\" name=\"pending delete\" href=\"\"></xref> state."},{"pos":[9113,9285],"content":"Disconnected entities must be attached before they can be deleted. Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Disconnected entities must be attached before they can be deleted. Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database.","pos":[0,172],"nodes":[{"content":"Disconnected entities must be attached before they can be deleted.","pos":[0,66]},{"content":"Call &lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt; to perform the actual deletion in the database.","pos":[67,172],"source":" Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database."}]}]},{"pos":[9431,9456],"content":"The entity to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The entity to be removed.","pos":[0,25]}]},{"pos":[9947,10031],"content":"Returns an array of modified members that contain their current and original values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an array of modified members that contain their current and original values.","pos":[0,84]}]},{"pos":[10214,10253],"content":"The entity from which to get the array.","needQuote":true,"needEscape":true,"nodes":[{"content":"The entity from which to get the array.","pos":[0,39]}]},{"pos":[10335,10419],"content":"Returns an array of modified members that contain their current and original values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an array of modified members that contain their current and original values.","pos":[0,84]}]},{"pos":[10934,10960],"content":"Retrieves original values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves original values.","pos":[0,26]}]},{"pos":[10973,11311],"content":"Note the following:      -   The entity argument must be non-null. Otherwise, a null argument exception is thrown.      -   In the case of the strongly typed (`TEntity`) method, the type must be mapped and must be an entity type. That is, it must have object ID information in its mapping. Otherwise, a wrong type exception is thrown.","needQuote":false,"needEscape":true,"nodes":[{"content":"Note the following:      -   The entity argument must be non-null.","pos":[0,66]},{"content":"Otherwise, a null argument exception is thrown.","pos":[67,114]},{"content":"-   In the case of the strongly typed (<ph id=\"ph1\">`TEntity`</ph>) method, the type must be mapped and must be an entity type.","pos":[120,229],"source":"      -   In the case of the strongly typed (`TEntity`) method, the type must be mapped and must be an entity type."},{"content":"That is, it must have object ID information in its mapping.","pos":[230,289]},{"content":"Otherwise, a wrong type exception is thrown.","pos":[290,334]}]},{"pos":[11468,11519],"content":"The entity whose original value is to be retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The entity whose original value is to be retrieved.","pos":[0,51]}]},{"pos":[11577,11990],"content":"A copy of the original entity. The value is null if the entity passed in is not tracked. Disconnected entities sent back by a client must be attached before the <xref href=\"System.Data.Linq.DataContext\"></xref> can begin to track their state. The \"original state\" of a newly attached entity is established based on values supplied by the client. The data context does not track the state of disconnected entities.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the original entity.","pos":[0,30]},{"content":"The value is null if the entity passed in is not tracked.","pos":[31,88]},{"content":"Disconnected entities sent back by a client must be attached before the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can begin to track their state.","pos":[89,242],"source":" Disconnected entities sent back by a client must be attached before the <xref href=\"System.Data.Linq.DataContext\"></xref> can begin to track their state."},{"content":"The \"original state\" of a newly attached entity is established based on values supplied by the client.","pos":[243,345]},{"content":"The data context does not track the state of disconnected entities.","pos":[346,413]}]},{"pos":[12533,12716],"content":"Adds all entities of a collection to the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_pending insert\" name=\"pending insert\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> state.","needQuote":true,"needEscape":true,"source":"Adds all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in a <xref uid=\"langword_csharp_pending insert\" name=\"pending insert\" href=\"\"></xref> state."},{"pos":[12728,12836],"content":"Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual insertion into the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Call &lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt; to perform the actual insertion into the database.","pos":[0,108],"source":"Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual insertion into the database."}]},{"pos":[13030,13050],"content":"The entities to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The entities to add.","pos":[0,20]}]},{"pos":[13524,13645],"content":"Adds an entity in a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_pending insert\" name=\"pending insert\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> state to this table.","needQuote":true,"needEscape":true,"source":"Adds an entity in a <xref uid=\"langword_csharp_pending insert\" name=\"pending insert\" href=\"\"></xref> state to this table."},{"pos":[13657,13765],"content":"Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual insertion into the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Call &lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt; to perform the actual insertion into the database.","pos":[0,108],"source":"Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual insertion into the database."}]},{"pos":[13911,13934],"content":"The entity to be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The entity to be added.","pos":[0,23]}]},{"pos":[14333,14461],"content":"Indicates if the type of the entities contained in this <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.ITable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance has a primary key.","needQuote":true,"needEscape":true,"source":"Indicates if the type of the entities contained in this <xref href=\"System.Data.Linq.ITable\"></xref> instance has a primary key."},{"pos":[14575,14709],"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the entity type does not have a primary key; otherwise, false.","needQuote":true,"needEscape":true,"source":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the entity type does not have a primary key; otherwise, false."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.ITable\n  id: ITable\n  children:\n  - System.Data.Linq.ITable.Attach(System.Object)\n  - System.Data.Linq.ITable.Attach(System.Object,System.Boolean)\n  - System.Data.Linq.ITable.Attach(System.Object,System.Object)\n  - System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)\n  - System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)\n  - System.Data.Linq.ITable.Context\n  - System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)\n  - System.Data.Linq.ITable.DeleteOnSubmit(System.Object)\n  - System.Data.Linq.ITable.GetModifiedMembers(System.Object)\n  - System.Data.Linq.ITable.GetOriginalEntityState(System.Object)\n  - System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)\n  - System.Data.Linq.ITable.InsertOnSubmit(System.Object)\n  - System.Data.Linq.ITable.IsReadOnly\n  langs:\n  - csharp\n  name: ITable\n  nameWithType: ITable\n  fullName: System.Data.Linq.ITable\n  type: Interface\n  summary: Used for weakly typed query scenarios.\n  remarks: For more information about methods, see <xref:System.Data.Linq.Table%601>.\n  syntax:\n    content: 'public interface ITable : System.Collections.IEnumerable, System.Linq.IQueryable'\n  implements:\n  - System.Collections.IEnumerable\n  - System.Linq.IQueryable\n  platform:\n  - net462\n- uid: System.Data.Linq.ITable.Attach(System.Object)\n  id: Attach(System.Object)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: Attach(Object)\n  nameWithType: ITable.Attach(Object)\n  fullName: System.Data.Linq.ITable.Attach(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Attaches an entity to the <xref href=\"System.Data.Linq.DataContext\"></xref> in an unmodified state.\n  remarks: For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public void Attach (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: The entity to be attached.\n  overload: System.Data.Linq.ITable.Attach*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.ITable.Attach(System.Object,System.Boolean)\n  id: Attach(System.Object,System.Boolean)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: Attach(Object,Boolean)\n  nameWithType: ITable.Attach(Object,Boolean)\n  fullName: System.Data.Linq.ITable.Attach(Object,Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Attaches all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state.\n  remarks: For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public void Attach (object entity, bool asModified);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: The collection of entities.\n    - id: asModified\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to attach the entities as modified.\n  overload: System.Data.Linq.ITable.Attach*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.ITable.Attach(System.Object,System.Object)\n  id: Attach(System.Object,System.Object)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: Attach(Object,Object)\n  nameWithType: ITable.Attach(Object,Object)\n  fullName: System.Data.Linq.ITable.Attach(Object,Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Attaches an entity to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state by specifying both the entity and its original state.\n  remarks: For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public void Attach (object entity, object original);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: The entity to be attached.\n    - id: original\n      type: System.Object\n      description: An instance of the same entity type with data members that contain the original values.\n  overload: System.Data.Linq.ITable.Attach*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)\n  id: AttachAll(System.Collections.IEnumerable)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: AttachAll(IEnumerable)\n  nameWithType: ITable.AttachAll(IEnumerable)\n  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Attaches all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state.\n  remarks: For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public void AttachAll (System.Collections.IEnumerable entities);\n    parameters:\n    - id: entities\n      type: System.Collections.IEnumerable\n      description: The collection of entities.\n  overload: System.Data.Linq.ITable.AttachAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)\n  id: AttachAll(System.Collections.IEnumerable,System.Boolean)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: AttachAll(IEnumerable,Boolean)\n  nameWithType: ITable.AttachAll(IEnumerable,Boolean)\n  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Attaches all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state.\n  remarks: For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public void AttachAll (System.Collections.IEnumerable entities, bool asModified);\n    parameters:\n    - id: entities\n      type: System.Collections.IEnumerable\n      description: The collection of entities.\n    - id: asModified\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to attach the entities as modified.\n  overload: System.Data.Linq.ITable.AttachAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.ITable.Context\n  id: Context\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: Context\n  nameWithType: ITable.Context\n  fullName: System.Data.Linq.ITable.Context\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets the <xref href=\"System.Data.Linq.DataContext\"></xref> that has been used to retrieve this <xref href=\"System.Data.Linq.ITable\"></xref>.\n  syntax:\n    content: public System.Data.Linq.DataContext Context { get; }\n    return:\n      type: System.Data.Linq.DataContext\n      description: The <xref href=\"System.Data.Linq.DataContext\"></xref> used to retrieve the <xref href=\"System.Data.Linq.ITable\"></xref>.\n  overload: System.Data.Linq.ITable.Context*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)\n  id: DeleteAllOnSubmit(System.Collections.IEnumerable)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: DeleteAllOnSubmit(IEnumerable)\n  nameWithType: ITable.DeleteAllOnSubmit(IEnumerable)\n  fullName: System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Puts all entities from the collection into a <xref uid=\"langword_csharp_pending delete\" name=\"pending delete\" href=\"\"></xref> state.\n  remarks: Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database.\n  syntax:\n    content: public void DeleteAllOnSubmit (System.Collections.IEnumerable entities);\n    parameters:\n    - id: entities\n      type: System.Collections.IEnumerable\n      description: The collection from which all items are removed.\n  overload: System.Data.Linq.ITable.DeleteAllOnSubmit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.ITable.DeleteOnSubmit(System.Object)\n  id: DeleteOnSubmit(System.Object)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: DeleteOnSubmit(Object)\n  nameWithType: ITable.DeleteOnSubmit(Object)\n  fullName: System.Data.Linq.ITable.DeleteOnSubmit(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Puts an entity from this table into a <xref uid=\"langword_csharp_pending delete\" name=\"pending delete\" href=\"\"></xref> state.\n  remarks: Disconnected entities must be attached before they can be deleted. Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database.\n  syntax:\n    content: public void DeleteOnSubmit (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: The entity to be removed.\n  overload: System.Data.Linq.ITable.DeleteOnSubmit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.ITable.GetModifiedMembers(System.Object)\n  id: GetModifiedMembers(System.Object)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: GetModifiedMembers(Object)\n  nameWithType: ITable.GetModifiedMembers(Object)\n  fullName: System.Data.Linq.ITable.GetModifiedMembers(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Returns an array of modified members that contain their current and original values.\n  syntax:\n    content: public System.Data.Linq.ModifiedMemberInfo[] GetModifiedMembers (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: The entity from which to get the array.\n    return:\n      type: System.Data.Linq.ModifiedMemberInfo[]\n      description: Returns an array of modified members that contain their current and original values.\n  overload: System.Data.Linq.ITable.GetModifiedMembers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.ITable.GetOriginalEntityState(System.Object)\n  id: GetOriginalEntityState(System.Object)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: GetOriginalEntityState(Object)\n  nameWithType: ITable.GetOriginalEntityState(Object)\n  fullName: System.Data.Linq.ITable.GetOriginalEntityState(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Retrieves original values.\n  remarks: \"Note the following:  \\n  \\n-   The entity argument must be non-null. Otherwise, a null argument exception is thrown.  \\n  \\n-   In the case of the strongly typed (`TEntity`) method, the type must be mapped and must be an entity type. That is, it must have object ID information in its mapping. Otherwise, a wrong type exception is thrown.\"\n  syntax:\n    content: public object GetOriginalEntityState (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: The entity whose original value is to be retrieved.\n    return:\n      type: System.Object\n      description: A copy of the original entity. The value is null if the entity passed in is not tracked. Disconnected entities sent back by a client must be attached before the <xref href=\"System.Data.Linq.DataContext\"></xref> can begin to track their state. The \"original state\" of a newly attached entity is established based on values supplied by the client. The data context does not track the state of disconnected entities.\n  overload: System.Data.Linq.ITable.GetOriginalEntityState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)\n  id: InsertAllOnSubmit(System.Collections.IEnumerable)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: InsertAllOnSubmit(IEnumerable)\n  nameWithType: ITable.InsertAllOnSubmit(IEnumerable)\n  fullName: System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Adds all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in a <xref uid=\"langword_csharp_pending insert\" name=\"pending insert\" href=\"\"></xref> state.\n  remarks: Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual insertion into the database.\n  syntax:\n    content: public void InsertAllOnSubmit (System.Collections.IEnumerable entities);\n    parameters:\n    - id: entities\n      type: System.Collections.IEnumerable\n      description: The entities to add.\n  overload: System.Data.Linq.ITable.InsertAllOnSubmit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.ITable.InsertOnSubmit(System.Object)\n  id: InsertOnSubmit(System.Object)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: InsertOnSubmit(Object)\n  nameWithType: ITable.InsertOnSubmit(Object)\n  fullName: System.Data.Linq.ITable.InsertOnSubmit(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Adds an entity in a <xref uid=\"langword_csharp_pending insert\" name=\"pending insert\" href=\"\"></xref> state to this table.\n  remarks: Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual insertion into the database.\n  syntax:\n    content: public void InsertOnSubmit (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: The entity to be added.\n  overload: System.Data.Linq.ITable.InsertOnSubmit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.ITable.IsReadOnly\n  id: IsReadOnly\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: ITable.IsReadOnly\n  fullName: System.Data.Linq.ITable.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Indicates if the type of the entities contained in this <xref href=\"System.Data.Linq.ITable\"></xref> instance has a primary key.\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the entity type does not have a primary key; otherwise, false.\n  overload: System.Data.Linq.ITable.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Linq.ITable.Attach(System.Object)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: Attach(Object)\n  nameWithType: ITable.Attach(Object)\n  fullName: System.Data.Linq.ITable.Attach(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Linq.ITable.Attach(System.Object,System.Boolean)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: Attach(Object,Boolean)\n  nameWithType: ITable.Attach(Object,Boolean)\n  fullName: System.Data.Linq.ITable.Attach(Object,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.ITable.Attach(System.Object,System.Object)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: Attach(Object,Object)\n  nameWithType: ITable.Attach(Object,Object)\n  fullName: System.Data.Linq.ITable.Attach(Object,Object)\n- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: AttachAll(IEnumerable)\n  nameWithType: ITable.AttachAll(IEnumerable)\n  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: AttachAll(IEnumerable,Boolean)\n  nameWithType: ITable.AttachAll(IEnumerable,Boolean)\n  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)\n- uid: System.Data.Linq.ITable.Context\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: Context\n  nameWithType: ITable.Context\n  fullName: System.Data.Linq.ITable.Context\n- uid: System.Data.Linq.DataContext\n  parent: System.Data.Linq\n  isExternal: false\n  name: DataContext\n  nameWithType: DataContext\n  fullName: System.Data.Linq.DataContext\n- uid: System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: DeleteAllOnSubmit(IEnumerable)\n  nameWithType: ITable.DeleteAllOnSubmit(IEnumerable)\n  fullName: System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)\n- uid: System.Data.Linq.ITable.DeleteOnSubmit(System.Object)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: DeleteOnSubmit(Object)\n  nameWithType: ITable.DeleteOnSubmit(Object)\n  fullName: System.Data.Linq.ITable.DeleteOnSubmit(Object)\n- uid: System.Data.Linq.ITable.GetModifiedMembers(System.Object)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: GetModifiedMembers(Object)\n  nameWithType: ITable.GetModifiedMembers(Object)\n  fullName: System.Data.Linq.ITable.GetModifiedMembers(Object)\n- uid: System.Data.Linq.ModifiedMemberInfo[]\n  parent: System.Data.Linq\n  isExternal: false\n  name: ModifiedMemberInfo\n  nameWithType: ModifiedMemberInfo\n  fullName: System.Data.Linq.ModifiedMemberInfo[]\n  spec.csharp:\n  - uid: System.Data.Linq.ModifiedMemberInfo\n    name: ModifiedMemberInfo\n    nameWithType: ModifiedMemberInfo\n    fullName: ModifiedMemberInfo[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Linq.ITable.GetOriginalEntityState(System.Object)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: GetOriginalEntityState(Object)\n  nameWithType: ITable.GetOriginalEntityState(Object)\n  fullName: System.Data.Linq.ITable.GetOriginalEntityState(Object)\n- uid: System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: InsertAllOnSubmit(IEnumerable)\n  nameWithType: ITable.InsertAllOnSubmit(IEnumerable)\n  fullName: System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)\n- uid: System.Data.Linq.ITable.InsertOnSubmit(System.Object)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: InsertOnSubmit(Object)\n  nameWithType: ITable.InsertOnSubmit(Object)\n  fullName: System.Data.Linq.ITable.InsertOnSubmit(Object)\n- uid: System.Data.Linq.ITable.IsReadOnly\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ITable.IsReadOnly\n  fullName: System.Data.Linq.ITable.IsReadOnly\n- uid: System.Data.Linq.ITable.Attach*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: Attach\n  nameWithType: ITable.Attach\n- uid: System.Data.Linq.ITable.AttachAll*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: AttachAll\n  nameWithType: ITable.AttachAll\n- uid: System.Data.Linq.ITable.Context*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: Context\n  nameWithType: ITable.Context\n- uid: System.Data.Linq.ITable.DeleteAllOnSubmit*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: DeleteAllOnSubmit\n  nameWithType: ITable.DeleteAllOnSubmit\n- uid: System.Data.Linq.ITable.DeleteOnSubmit*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: DeleteOnSubmit\n  nameWithType: ITable.DeleteOnSubmit\n- uid: System.Data.Linq.ITable.GetModifiedMembers*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: GetModifiedMembers\n  nameWithType: ITable.GetModifiedMembers\n- uid: System.Data.Linq.ITable.GetOriginalEntityState*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: GetOriginalEntityState\n  nameWithType: ITable.GetOriginalEntityState\n- uid: System.Data.Linq.ITable.InsertAllOnSubmit*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: InsertAllOnSubmit\n  nameWithType: ITable.InsertAllOnSubmit\n- uid: System.Data.Linq.ITable.InsertOnSubmit*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: InsertOnSubmit\n  nameWithType: ITable.InsertOnSubmit\n- uid: System.Data.Linq.ITable.IsReadOnly*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ITable.IsReadOnly\n"}