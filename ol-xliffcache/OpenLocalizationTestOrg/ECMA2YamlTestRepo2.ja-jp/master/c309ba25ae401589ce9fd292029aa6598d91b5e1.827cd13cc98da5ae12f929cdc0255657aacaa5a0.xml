{"nodes":[{"pos":[1903,1963],"content":"Represents the access control and audit security for a pipe.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the access control and audit security for a pipe.","pos":[0,60]}]},{"pos":[1976,3330],"content":"The PipeSecurity class specifies the access rights for a pipe and how access attempts are audited.  This class represents access and audit rights as a set of rules. Each access rule is represented by a <xref:System.IO.Pipes.PipeAccessRule> object, while each audit rule is represented by a <xref:System.IO.Pipes.PipeAuditRule> object.       The PipeSecurity class is an abstraction of the underlying Microsoft Windows file security system. In this system, each pipe has a discretionary access control list (DACL), which controls access to the pipe, and a system access control list (SACL), which specifies the access control attempts that are audited.  The <xref:System.IO.Pipes.PipeAccessRule> and <xref:System.IO.Pipes.PipeAuditRule> classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs.       The PipeSecurity class hides many of the details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.       Use the PipeSecurity class to retrieve, add, or change the access rules that represent the DACL and SACL of a pipe.       To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method. To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"The PipeSecurity class specifies the access rights for a pipe and how access attempts are audited.  This class represents access and audit rights as a set of rules. Each access rule is represented by a <xref:System.IO.Pipes.PipeAccessRule> object, while each audit rule is represented by a <xref:System.IO.Pipes.PipeAuditRule> object.       The PipeSecurity class is an abstraction of the underlying Microsoft Windows file security system. In this system, each pipe has a discretionary access control list (DACL), which controls access to the pipe, and a system access control list (SACL), which specifies the access control attempts that are audited.  The <xref:System.IO.Pipes.PipeAccessRule> and <xref:System.IO.Pipes.PipeAuditRule> classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs.       The PipeSecurity class hides many of the details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.       Use the PipeSecurity class to retrieve, add, or change the access rules that represent the DACL and SACL of a pipe.       To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method. To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.","pos":[0,1346],"nodes":[{"content":"The PipeSecurity class specifies the access rights for a pipe and how access attempts are audited.","pos":[0,98]},{"content":"This class represents access and audit rights as a set of rules.","pos":[100,164]},{"content":"Each access rule is represented by a &lt;xref:System.IO.Pipes.PipeAccessRule&gt; object, while each audit rule is represented by a &lt;xref:System.IO.Pipes.PipeAuditRule&gt; object.","pos":[165,334],"source":" Each access rule is represented by a <xref:System.IO.Pipes.PipeAccessRule> object, while each audit rule is represented by a <xref:System.IO.Pipes.PipeAuditRule> object."},{"content":"The PipeSecurity class is an abstraction of the underlying Microsoft Windows file security system.","pos":[341,439]},{"content":"In this system, each pipe has a discretionary access control list (DACL), which controls access to the pipe, and a system access control list (SACL), which specifies the access control attempts that are audited.","pos":[440,651]},{"content":"The &lt;xref:System.IO.Pipes.PipeAccessRule&gt; and &lt;xref:System.IO.Pipes.PipeAuditRule&gt; classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs.","pos":[653,828],"source":"  The <xref:System.IO.Pipes.PipeAccessRule> and <xref:System.IO.Pipes.PipeAuditRule> classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs."},{"content":"The PipeSecurity class hides many of the details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.","pos":[835,962]},{"content":"Use the PipeSecurity class to retrieve, add, or change the access rules that represent the DACL and SACL of a pipe.","pos":[969,1084]},{"content":"To persist new or changed access or audit rules to a pipe, use the &lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt; method.","pos":[1091,1219],"source":"       To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method."},{"content":"To retrieve access or audit rules from an existing file, use the &lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt; method.","pos":[1220,1346],"source":" To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method."}]}]},{"pos":[9411,9501],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> class."},{"pos":[9514,10256],"content":"This constructor creates an empty <xref:System.IO.Pipes.PipeSecurity> object that is not based on an existing pipe. You can then populate the object with access control information and apply it to a pipe.       You can add access or audit rules to the <xref:System.IO.Pipes.PipeSecurity> object using the <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method. You can remove access or audit rules using the <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method.       To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method. To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"This constructor creates an empty <xref:System.IO.Pipes.PipeSecurity> object that is not based on an existing pipe. You can then populate the object with access control information and apply it to a pipe.       You can add access or audit rules to the <xref:System.IO.Pipes.PipeSecurity> object using the <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method. You can remove access or audit rules using the <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method.       To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method. To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.","pos":[0,738],"nodes":[{"content":"This constructor creates an empty &lt;xref:System.IO.Pipes.PipeSecurity&gt; object that is not based on an existing pipe.","pos":[0,115],"source":"This constructor creates an empty <xref:System.IO.Pipes.PipeSecurity> object that is not based on an existing pipe."},{"content":"You can then populate the object with access control information and apply it to a pipe.","pos":[116,204]},{"content":"You can add access or audit rules to the &lt;xref:System.IO.Pipes.PipeSecurity&gt; object using the &lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt; method.","pos":[211,365],"source":"       You can add access or audit rules to the <xref:System.IO.Pipes.PipeSecurity> object using the <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method."},{"content":"You can remove access or audit rules using the &lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt; method.","pos":[366,476],"source":" You can remove access or audit rules using the <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method."},{"content":"To persist new or changed access or audit rules to a pipe, use the &lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt; method.","pos":[483,611],"source":"       To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method."},{"content":"To retrieve access or audit rules from an existing file, use the &lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt; method.","pos":[612,738],"source":" To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method."}]}]},{"pos":[10758,10903],"content":"Gets the &lt;xref:System.Type&gt; of the securable object that is associated with the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the <xref:System.Type> of the securable object that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."},{"pos":[10915,11335],"content":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","pos":[0,420],"nodes":[{"content":"Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt; property and return the type they use to represent access rights.","pos":[0,236],"source":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights."},{"content":"When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","pos":[237,420]}]}]},{"pos":[11460,11586],"content":"The type of the securable object that is associated with the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The type of the securable object that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."},{"pos":[12724,12852],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values."},{"pos":[12864,12993],"content":"The recommended way to create access control rules is to use the constructors of the <xref:System.IO.Pipes.PipeAccessRule> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The recommended way to create access control rules is to use the constructors of the &lt;xref:System.IO.Pipes.PipeAccessRule&gt; class.","pos":[0,129],"source":"The recommended way to create access control rules is to use the constructors of the <xref:System.IO.Pipes.PipeAccessRule> class."}]},{"pos":[13494,13656],"content":"The identity that the access rule applies to. It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity that the access rule applies to.","pos":[0,45]},{"content":"It must be an object that can be cast as a <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[46,162],"source":" It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}]},{"pos":[13722,13871],"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators","needQuote":true,"needEscape":true,"nodes":[{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators","pos":[0,149],"nodes":[{"content":"The access mask of this rule.","pos":[0,29]},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators","pos":[30,149]}]}]},{"pos":[13940,14068],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this rule is inherited from a parent container; otherwise false.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this rule is inherited from a parent container; otherwise false."},{"pos":[14174,14321],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the inheritance properties of the access rule.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies the inheritance properties of the access rule."},{"pos":[14427,14723],"content":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.PropagationFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies whether inherited access rules are automatically propagated.","pos":[0,161],"source":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies whether inherited access rules are automatically propagated."},{"content":"The propagation flags are ignored if <ph id=\"ph1\">`inheritanceFlags`</ph> is set to <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[162,296],"source":" The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>."}]},{"pos":[14818,14858],"content":"Specifies the valid access control type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the valid access control type.","pos":[0,40]}]},{"pos":[14943,15041],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that this method creates.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates."},{"pos":[15230,15365],"content":"<ph id=\"ph1\">&lt;code&gt;accessMask&lt;/code&gt;</ph>, <ph id=\"ph2\">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>, <ph id=\"ph3\">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>, or <ph id=\"ph4\">&lt;code&gt;type&lt;/code&gt;</ph> specifies an invalid value.","needQuote":true,"needEscape":true,"source":"<code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>type</code> specifies an invalid value."},{"pos":[15469,15624],"content":"<code>identityReference</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>accessMask</code> is zero.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;identityReference&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,95],"source":"<code>identityReference</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;accessMask&lt;/code&gt;</ph> is zero.","pos":[102,145],"source":"       -or-       <code>accessMask</code> is zero."}]},{"pos":[15720,16013],"content":"<ph id=\"ph1\">&lt;code&gt;identityReference&lt;/code&gt;</ph> is neither of type <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> nor of a type, such as <bpt id=\"p2\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, that can be converted to type <bpt id=\"p3\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>identityReference</code> is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> nor of a type, such as <xref href=\"System.Security.Principal.NTAccount\"></xref>, that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."},{"pos":[16378,16533],"content":"Gets the &lt;xref:System.Type&gt; of the object that is associated with the access rules of the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the <xref:System.Type> of the object that is associated with the access rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."},{"pos":[16545,16964],"content":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","pos":[0,419],"nodes":[{"content":"Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt; property and return the type they use to represent access rights.","pos":[0,235],"source":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rights."},{"content":"When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","pos":[236,419]}]}]},{"pos":[17088,17224],"content":"The type of the object that is associated with the access rules of the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The type of the object that is associated with the access rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."},{"pos":[17768,17929],"content":"Adds an access rule to the Discretionary Access Control List (DACL) that is associated with the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Adds an access rule to the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."},{"pos":[17942,18446],"content":"The AddAccessRule method adds a new rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains.If an access control list (ACL) already exists for the specified rule, the AddAccessRule method will still add the rule, with one exception: a <xref:System.IO.Pipes.PipeAccessRule> object that is created using the <xref:System.Security.AccessControl.AccessControlType> value supersedes an object that is created using the <xref:System.Security.AccessControl.AccessControlType> value.","needQuote":false,"needEscape":true,"nodes":[{"content":"The AddAccessRule method adds a new rule to the list of rules that a &lt;xref:System.IO.Pipes.PipeSecurity&gt; object contains.If an access control list (ACL) already exists for the specified rule, the AddAccessRule method will still add the rule, with one exception: a &lt;xref:System.IO.Pipes.PipeAccessRule&gt; object that is created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value supersedes an object that is created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value.","pos":[0,504],"source":"The AddAccessRule method adds a new rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains.If an access control list (ACL) already exists for the specified rule, the AddAccessRule method will still add the rule, with one exception: a <xref:System.IO.Pipes.PipeAccessRule> object that is created using the <xref:System.Security.AccessControl.AccessControlType> value supersedes an object that is created using the <xref:System.Security.AccessControl.AccessControlType> value."}]},{"pos":[18629,18652],"content":"The access rule to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to add.","pos":[0,23]}]},{"pos":[18825,18921],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[19381,19533],"content":"Adds an audit rule to the System Access Control List (SACL)that is associated with the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Adds an audit rule to the System Access Control List (SACL)that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."},{"pos":[19546,19785],"content":"The AddAuditRule method adds a new audit rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains.       If an audit rule already exists for the specified rule, the AddAuditRule method will still add the rule.","needQuote":false,"needEscape":true,"nodes":[{"content":"The AddAuditRule method adds a new audit rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains.       If an audit rule already exists for the specified rule, the AddAuditRule method will still add the rule.","pos":[0,237],"nodes":[{"content":"The AddAuditRule method adds a new audit rule to the list of rules that a &lt;xref:System.IO.Pipes.PipeSecurity&gt; object contains.","pos":[0,126],"source":"The AddAuditRule method adds a new audit rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains."},{"content":"If an audit rule already exists for the specified rule, the AddAuditRule method will still add the rule.","pos":[133,237]}]}]},{"pos":[19965,19987],"content":"The audit rule to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to add.","pos":[0,22]}]},{"pos":[20159,20255],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[21278,21405],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values."},{"pos":[21417,21536],"content":"The recommended way to create audit rules is to use the constructors of the <xref:System.IO.Pipes.PipeAuditRule> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The recommended way to create audit rules is to use the constructors of the &lt;xref:System.IO.Pipes.PipeAuditRule&gt; class.","pos":[0,119],"source":"The recommended way to create audit rules is to use the constructors of the <xref:System.IO.Pipes.PipeAuditRule> class."}]},{"pos":[22036,22198],"content":"The identity that the access rule applies to. It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity that the access rule applies to.","pos":[0,45]},{"content":"It must be an object that can be cast as a <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[46,162],"source":" It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}]},{"pos":[22264,22413],"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators","needQuote":true,"needEscape":true,"nodes":[{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators","pos":[0,149],"nodes":[{"content":"The access mask of this rule.","pos":[0,29]},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators","pos":[30,149]}]}]},{"pos":[22482,22612],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this rule is inherited from a parent container; otherwise, false..","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this rule is inherited from a parent container; otherwise, false.."},{"pos":[22718,22865],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the inheritance properties of the access rule.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies the inheritance properties of the access rule."},{"pos":[22971,23267],"content":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.PropagationFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies whether inherited access rules are automatically propagated.","pos":[0,161],"source":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies whether inherited access rules are automatically propagated."},{"content":"The propagation flags are ignored if <ph id=\"ph1\">`inheritanceFlags`</ph> is set to <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[162,296],"source":" The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>."}]},{"pos":[23356,23481],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AuditFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the valid access control type.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> values that specifies the valid access control type."},{"pos":[23565,23662],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that this method creates.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates."},{"pos":[23850,23999],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">accessMask</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">inheritanceFlags</ph><ept id=\"p2\">&lt;/code&gt;</ept>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">propagationFlags</ph><ept id=\"p3\">&lt;/code&gt;</ept>, or <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">flags</ph><ept id=\"p4\">&lt;/code&gt;</ept> properties specify an invalid value.","needQuote":true,"needEscape":true,"source":"The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value."},{"pos":[24103,24284],"content":"The <code>identityReference</code> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The <code>accessMask</code> property is zero.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">identityReference</ph><ept id=\"p1\">&lt;/code&gt;</ept> property is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,108],"source":"The <code>identityReference</code> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">accessMask</ph><ept id=\"p1\">&lt;/code&gt;</ept> property is zero.","pos":[115,171],"source":"       -or-       The <code>accessMask</code> property is zero."}]},{"pos":[24380,24686],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">identityReference</ph><ept id=\"p1\">&lt;/code&gt;</ept> property is neither of type <bpt id=\"p2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> nor of a type, such as <bpt id=\"p3\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, that can be converted to type <bpt id=\"p4\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>identityReference</code> property is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> nor of a type, such as <xref href=\"System.Security.Principal.NTAccount\"></xref>, that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."},{"pos":[25046,25185],"content":"Gets the &lt;xref:System.Type&gt; object associated with the audit rules of the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the <xref:System.Type> object associated with the audit rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."},{"pos":[25197,25615],"content":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","pos":[0,418],"nodes":[{"content":"Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt; property and return the type they use to represent access rights.","pos":[0,234],"source":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent access rights."},{"content":"When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","pos":[235,418]}]}]},{"pos":[25738,25873],"content":"The type of the object that is associated with the audit rules of the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The type of the object that is associated with the audit rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."},{"pos":[26396,26566],"content":"Saves the specified sections of the security descriptor that is associated with the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to permanent storage.","needQuote":true,"needEscape":true,"source":"Saves the specified sections of the security descriptor that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object to permanent storage."},{"pos":[26771,26899],"content":"The handle of the securable object that the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is associated with.","needQuote":true,"needEscape":true,"source":"The handle of the securable object that the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object is associated with."},{"pos":[27348,27518],"content":"Saves the specified sections of the security descriptor that is associated with the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to permanent storage.","needQuote":true,"needEscape":true,"source":"Saves the specified sections of the security descriptor that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object to permanent storage."},{"pos":[27656,27782],"content":"The name of the securable object that the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is associated with.","needQuote":true,"needEscape":true,"source":"The name of the securable object that the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object is associated with."},{"pos":[28334,28500],"content":"Removes an access rule from the Discretionary Access Control List (DACL) that is associated with the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes an access rule from the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."},{"pos":[28512,29287],"content":"The RemoveAccessRule method removes either all matching <xref:System.Security.AccessControl.AccessControlType> access rules or all matching <xref:System.Security.AccessControl.AccessControlType> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object. For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType> value, the <xref:System.IO.Pipes.PipeAccessRights> value, and a user account. The RemoveAccessRule method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights> value or the <xref:System.IO.Pipes.PipeAccessRights> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The RemoveAccessRule method removes either all matching <xref:System.Security.AccessControl.AccessControlType> access rules or all matching <xref:System.Security.AccessControl.AccessControlType> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object. For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType> value, the <xref:System.IO.Pipes.PipeAccessRights> value, and a user account. The RemoveAccessRule method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights> value or the <xref:System.IO.Pipes.PipeAccessRights> value.","pos":[0,775],"nodes":[{"content":"The RemoveAccessRule method removes either all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules or all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules from the current &lt;xref:System.IO.Pipes.PipeSecurity&gt; object.","pos":[0,268],"source":"The RemoveAccessRule method removes either all matching <xref:System.Security.AccessControl.AccessControlType> access rules or all matching <xref:System.Security.AccessControl.AccessControlType> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object."},{"content":"For example, you can use this method to remove all &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules for a user by passing a &lt;xref:System.IO.Pipes.PipeAccessRule&gt; object created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value, the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, and a user account.","pos":[269,607],"source":" For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType> value, the <xref:System.IO.Pipes.PipeAccessRights> value, and a user account."},{"content":"The RemoveAccessRule method removes any deny rules that specify the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value or the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value.","pos":[608,775],"source":" The RemoveAccessRule method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights> value or the <xref:System.IO.Pipes.PipeAccessRights> value."}]}]},{"pos":[29472,29498],"content":"The access rule to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to remove.","pos":[0,26]}]},{"pos":[29557,29724],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the operation is successful; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[29900,29996],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[30521,30698],"content":"Removes the specified access rule from the Discretionary Access Control List (DACL) that is associated with the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes the specified access rule from the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."},{"pos":[30710,31563],"content":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType> access rules or all matching <xref:System.Security.AccessControl.AccessControlType> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object. For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType> value, the <xref:System.IO.Pipes.PipeAccessRights> value, and a user account. The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights> value or the <xref:System.IO.Pipes.PipeAccessRights> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType> access rules or all matching <xref:System.Security.AccessControl.AccessControlType> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object. For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType> value, the <xref:System.IO.Pipes.PipeAccessRights> value, and a user account. The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights> value or the <xref:System.IO.Pipes.PipeAccessRights> value.","pos":[0,853],"nodes":[{"content":"The &lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt; method removes either all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules or all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules from the current &lt;xref:System.IO.Pipes.PipeSecurity&gt; object.","pos":[0,307],"source":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType> access rules or all matching <xref:System.Security.AccessControl.AccessControlType> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object."},{"content":"For example, you can use this method to remove all &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules for a user by passing a &lt;xref:System.IO.Pipes.PipeAccessRule&gt; object created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value, the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, and a user account.","pos":[308,646],"source":" For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType> value, the <xref:System.IO.Pipes.PipeAccessRights> value, and a user account."},{"content":"The &lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt; method removes any deny rules that specify the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value or the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value.","pos":[647,853],"source":" The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights> value or the <xref:System.IO.Pipes.PipeAccessRights> value."}]}]},{"pos":[31756,31782],"content":"The access rule to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to remove.","pos":[0,26]}]},{"pos":[31966,32062],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[32537,32695],"content":"Removes an audit rule from the System Access Control List (SACL) that is associated with the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes an audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."},{"pos":[32707,33540],"content":"The RemoveAuditRule method removes either all matching <xref:System.Security.AccessControl.AccessControlType> audit rules or all matching <xref:System.Security.AccessControl.AccessControlType> audit rules from the current <xref:System.IO.Pipes.PipeSecurity> object.  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType> audit rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType> value, the <xref:System.Security.AccessControl.AuditFlags> value, and a user account.  When you do this, the RemoveAuditRule method removes any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags> value or the <xref:System.Security.AccessControl.AuditFlags> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The RemoveAuditRule method removes either all matching <xref:System.Security.AccessControl.AccessControlType> audit rules or all matching <xref:System.Security.AccessControl.AccessControlType> audit rules from the current <xref:System.IO.Pipes.PipeSecurity> object.  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType> audit rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType> value, the <xref:System.Security.AccessControl.AuditFlags> value, and a user account.  When you do this, the RemoveAuditRule method removes any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags> value or the <xref:System.Security.AccessControl.AuditFlags> value.","pos":[0,833],"nodes":[{"content":"The RemoveAuditRule method removes either all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rules or all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rules from the current &lt;xref:System.IO.Pipes.PipeSecurity&gt; object.","pos":[0,265],"source":"The RemoveAuditRule method removes either all matching <xref:System.Security.AccessControl.AccessControlType> audit rules or all matching <xref:System.Security.AccessControl.AccessControlType> audit rules from the current <xref:System.IO.Pipes.PipeSecurity> object."},{"content":"For example, you can use this method to remove all &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rules for a user by passing a &lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt; object created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value, the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value, and a user account.","pos":[267,631],"source":"  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType> audit rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType> value, the <xref:System.Security.AccessControl.AuditFlags> value, and a user account."},{"content":"When you do this, the RemoveAuditRule method removes any deny rules that specify the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value or the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value.","pos":[633,833],"source":"  When you do this, the RemoveAuditRule method removes any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags> value or the <xref:System.Security.AccessControl.AuditFlags> value."}]}]},{"pos":[33722,33747],"content":"The audit rule to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]},{"pos":[33806,33971],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the audit rule was removed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the audit rule was removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>"},{"pos":[34146,34242],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[34732,34959],"content":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) that is associated with the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."},{"pos":[34971,35147],"content":"The RemoveAuditRuleAll method removes all audit rules for the specified user.  It ignores all values in the <xref:System.IO.Pipes.PipeAuditRule> object except the user account.","needQuote":true,"needEscape":true,"nodes":[{"content":"The RemoveAuditRuleAll method removes all audit rules for the specified user.  It ignores all values in the <xref:System.IO.Pipes.PipeAuditRule> object except the user account.","pos":[0,176],"nodes":[{"content":"The RemoveAuditRuleAll method removes all audit rules for the specified user.","pos":[0,77]},{"content":"It ignores all values in the &lt;xref:System.IO.Pipes.PipeAuditRule&gt; object except the user account.","pos":[79,176],"source":"  It ignores all values in the <xref:System.IO.Pipes.PipeAuditRule> object except the user account."}]}]},{"pos":[35332,35357],"content":"The audit rule to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]},{"pos":[35535,35631],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[36146,36315],"content":"Removes the specified audit rule from the System Access Control List (SACL) that is associated with the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes the specified audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."},{"pos":[36327,37244],"content":"The RemoveAuditRuleSpecific method removes the specified matching <xref:System.Security.AccessControl.AccessControlType> audit rule or the specified matching <xref:System.Security.AccessControl.AccessControlType> audit rule from the current <xref:System.IO.Pipes.PipeSecurity> object.  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType> audit rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType> value, the <xref:System.Security.AccessControl.AuditFlags> value, and a user account.  When you do this, the RemoveAuditRuleSpecific method removes only a deny rule that specifies the <xref:System.Security.AccessControl.AuditFlags> value.  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The RemoveAuditRuleSpecific method removes the specified matching <xref:System.Security.AccessControl.AccessControlType> audit rule or the specified matching <xref:System.Security.AccessControl.AccessControlType> audit rule from the current <xref:System.IO.Pipes.PipeSecurity> object.  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType> audit rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType> value, the <xref:System.Security.AccessControl.AuditFlags> value, and a user account.  When you do this, the RemoveAuditRuleSpecific method removes only a deny rule that specifies the <xref:System.Security.AccessControl.AuditFlags> value.  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags> value.","pos":[0,917],"nodes":[{"content":"The RemoveAuditRuleSpecific method removes the specified matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rule or the specified matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rule from the current &lt;xref:System.IO.Pipes.PipeSecurity&gt; object.","pos":[0,284],"source":"The RemoveAuditRuleSpecific method removes the specified matching <xref:System.Security.AccessControl.AccessControlType> audit rule or the specified matching <xref:System.Security.AccessControl.AccessControlType> audit rule from the current <xref:System.IO.Pipes.PipeSecurity> object."},{"content":"For example, you can use this method to remove a specified &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rule for a user by passing a &lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt; object created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value, the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value, and a user account.","pos":[286,657],"source":"  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType> audit rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType> value, the <xref:System.Security.AccessControl.AuditFlags> value, and a user account."},{"content":"When you do this, the RemoveAuditRuleSpecific method removes only a deny rule that specifies the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value.","pos":[659,810],"source":"  When you do this, the RemoveAuditRuleSpecific method removes only a deny rule that specifies the <xref:System.Security.AccessControl.AuditFlags> value."},{"content":"It does not remove any deny rules that specify the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value.","pos":[812,917],"source":"  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags> value."}]}]},{"pos":[37434,37459],"content":"The audit rule to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]},{"pos":[37642,37738],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[38218,38424],"content":"Removes all access rules in the Discretionary Access Control List (DACL) that is associated with the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and then adds the specified access rule.","needQuote":true,"needEscape":true,"source":"Removes all access rules in the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object and then adds the specified access rule."},{"pos":[38436,39014],"content":"The ResetAccessRule method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights> value and the ResetAccessRule method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will be overwritten.  If the ResetAccessRule method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will also be overwritten.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ResetAccessRule method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <ph id=\"ph1\">`rule`</ph> parameter.","pos":[0,147],"source":"The ResetAccessRule method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the `rule` parameter."},{"content":"For example, if the <ph id=\"ph1\">`rule`</ph> parameter specifies a &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value and the ResetAccessRule method finds an identical ACL rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will be overwritten.","pos":[149,408],"source":"  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights> value and the ResetAccessRule method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will be overwritten."},{"content":"If the ResetAccessRule method finds an identical ACL rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will also be overwritten.","pos":[410,578],"source":"  If the ResetAccessRule method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will also be overwritten."}]},{"pos":[39198,39221],"content":"The access rule to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to add.","pos":[0,23]}]},{"pos":[39396,39492],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[39962,40123],"content":"Sets an access rule in the Discretionary Access Control List (DACL) that is associated with the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Sets an access rule in the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."},{"pos":[40135,40759],"content":"The SetAccessRule method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights> value and the SetAccessRule method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will be overwritten.  If the SetAccessRule method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will not be overwritten.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SetAccessRule method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value of the <ph id=\"ph1\">`rule`</ph> parameter.","pos":[0,198],"source":"The SetAccessRule method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter."},{"content":"For example, if the <ph id=\"ph1\">`rule`</ph> parameter specifies a &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value and the SetAccessRule method finds an identical ACL rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will be overwritten.","pos":[200,457],"source":"  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights> value and the SetAccessRule method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will be overwritten."},{"content":"If the SetAccessRule method finds an identical ACL rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will not be overwritten.","pos":[459,624],"source":"  If the SetAccessRule method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will not be overwritten."}]},{"pos":[40941,40957],"content":"The rule to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rule to set.","pos":[0,16]}]},{"pos":[41130,41226],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[41686,41839],"content":"Sets an audit rule in the System Access Control List (SACL) that is associated with the current <bpt id=\"p1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Sets an audit rule in the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."},{"pos":[41851,42458],"content":"The SetAuditRule method adds the specified audit rule or overwrites any identical audit rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights> value and the SetAuditRule method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will be overwritten.  If the SetAuditRule method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will not be overwritten.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SetAuditRule method adds the specified audit rule or overwrites any identical audit rules that match the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value of the <ph id=\"ph1\">`rule`</ph> parameter.","pos":[0,179],"source":"The SetAuditRule method adds the specified audit rule or overwrites any identical audit rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter."},{"content":"For example, if the <ph id=\"ph1\">`rule`</ph> parameter specifies a &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value and the SetAuditRule method finds an identical audit rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will be overwritten.","pos":[181,439],"source":"  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights> value and the SetAuditRule method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will be overwritten."},{"content":"If the SetAuditRule method finds an identical audit rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will not be overwritten.","pos":[441,607],"source":"  If the SetAuditRule method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will not be overwritten."}]},{"pos":[42637,42653],"content":"The rule to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rule to set.","pos":[0,16]}]},{"pos":[42825,42921],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Pipes.PipeSecurity\n  id: PipeSecurity\n  children:\n  - System.IO.Pipes.PipeSecurity.#ctor\n  - System.IO.Pipes.PipeSecurity.AccessRightType\n  - System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.IO.Pipes.PipeSecurity.AccessRuleType\n  - System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)\n  - System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)\n  - System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.IO.Pipes.PipeSecurity.AuditRuleType\n  - System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)\n  - System.IO.Pipes.PipeSecurity.Persist(System.String)\n  - System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)\n  - System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)\n  - System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)\n  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)\n  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)\n  - System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)\n  - System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)\n  - System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)\n  langs:\n  - csharp\n  name: PipeSecurity\n  nameWithType: PipeSecurity\n  fullName: System.IO.Pipes.PipeSecurity\n  type: Class\n  summary: Represents the access control and audit security for a pipe.\n  remarks: \"The PipeSecurity class specifies the access rights for a pipe and how access attempts are audited.  This class represents access and audit rights as a set of rules. Each access rule is represented by a <xref:System.IO.Pipes.PipeAccessRule> object, while each audit rule is represented by a <xref:System.IO.Pipes.PipeAuditRule> object.  \\n  \\n The PipeSecurity class is an abstraction of the underlying Microsoft Windows file security system. In this system, each pipe has a discretionary access control list (DACL), which controls access to the pipe, and a system access control list (SACL), which specifies the access control attempts that are audited.  The <xref:System.IO.Pipes.PipeAccessRule> and <xref:System.IO.Pipes.PipeAuditRule> classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs.  \\n  \\n The PipeSecurity class hides many of the details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.  \\n  \\n Use the PipeSecurity class to retrieve, add, or change the access rules that represent the DACL and SACL of a pipe.  \\n  \\n To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method. To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.\"\n  syntax:\n    content: 'public class PipeSecurity : System.Security.AccessControl.NativeObjectSecurity'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.ObjectSecurity\n  - System.Security.AccessControl.CommonObjectSecurity\n  - System.Security.AccessControl.NativeObjectSecurity\n  implements: []\n  inheritedMembers:\n  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.#ctor\n  id: '#ctor'\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: PipeSecurity()\n  nameWithType: PipeSecurity.PipeSecurity()\n  fullName: System.IO.Pipes.PipeSecurity.PipeSecurity()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> class.\n  remarks: \"This constructor creates an empty <xref:System.IO.Pipes.PipeSecurity> object that is not based on an existing pipe. You can then populate the object with access control information and apply it to a pipe.  \\n  \\n You can add access or audit rules to the <xref:System.IO.Pipes.PipeSecurity> object using the <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method. You can remove access or audit rules using the <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method.  \\n  \\n To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method. To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.\"\n  syntax:\n    content: public PipeSecurity ();\n    parameters: []\n  overload: System.IO.Pipes.PipeSecurity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.AccessRightType\n  id: AccessRightType\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: AccessRightType\n  nameWithType: PipeSecurity.AccessRightType\n  fullName: System.IO.Pipes.PipeSecurity.AccessRightType\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Gets the <xref:System.Type> of the securable object that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.\n  syntax:\n    content: public override Type AccessRightType { get; }\n    return:\n      type: System.Type\n      description: The type of the securable object that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  overload: System.IO.Pipes.PipeSecurity.AccessRightType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  nameWithType: PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  fullName: System.IO.Pipes.PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values.\n  remarks: The recommended way to create access control rules is to use the constructors of the <xref:System.IO.Pipes.PipeAccessRule> class.\n  syntax:\n    content: public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: The identity that the access rule applies to. It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators\n    - id: isInherited\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this rule is inherited from a parent container; otherwise false.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies the inheritance properties of the access rule.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Specifies the valid access control type.\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates.\n  overload: System.IO.Pipes.PipeSecurity.AccessRuleFactory*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>type</code> specifies an invalid value.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>identityReference</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>accessMask</code> is zero.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>identityReference</code> is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> nor of a type, such as <xref href=\"System.Security.Principal.NTAccount\"></xref>, that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.AccessRuleType\n  id: AccessRuleType\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: AccessRuleType\n  nameWithType: PipeSecurity.AccessRuleType\n  fullName: System.IO.Pipes.PipeSecurity.AccessRuleType\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Gets the <xref:System.Type> of the object that is associated with the access rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.\n  syntax:\n    content: public override Type AccessRuleType { get; }\n    return:\n      type: System.Type\n      description: The type of the object that is associated with the access rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  overload: System.IO.Pipes.PipeSecurity.AccessRuleType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)\n  id: AddAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: AddAccessRule(PipeAccessRule)\n  nameWithType: PipeSecurity.AddAccessRule(PipeAccessRule)\n  fullName: System.IO.Pipes.PipeSecurity.AddAccessRule(PipeAccessRule)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Adds an access rule to the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: 'The AddAccessRule method adds a new rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains.If an access control list (ACL) already exists for the specified rule, the AddAccessRule method will still add the rule, with one exception: a <xref:System.IO.Pipes.PipeAccessRule> object that is created using the <xref:System.Security.AccessControl.AccessControlType> value supersedes an object that is created using the <xref:System.Security.AccessControl.AccessControlType> value.'\n  syntax:\n    content: public void AddAccessRule (System.IO.Pipes.PipeAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAccessRule\n      description: The access rule to add.\n  overload: System.IO.Pipes.PipeSecurity.AddAccessRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)\n  id: AddAuditRule(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: AddAuditRule(PipeAuditRule)\n  nameWithType: PipeSecurity.AddAuditRule(PipeAuditRule)\n  fullName: System.IO.Pipes.PipeSecurity.AddAuditRule(PipeAuditRule)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Adds an audit rule to the System Access Control List (SACL)that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: \"The AddAuditRule method adds a new audit rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains.  \\n  \\n If an audit rule already exists for the specified rule, the AddAuditRule method will still add the rule.\"\n  syntax:\n    content: public void AddAuditRule (System.IO.Pipes.PipeAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAuditRule\n      description: The audit rule to add.\n  overload: System.IO.Pipes.PipeSecurity.AddAuditRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.IO.Pipes.PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values.\n  remarks: The recommended way to create audit rules is to use the constructors of the <xref:System.IO.Pipes.PipeAuditRule> class.\n  syntax:\n    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: The identity that the access rule applies to. It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators\n    - id: isInherited\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this rule is inherited from a parent container; otherwise, false..\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies the inheritance properties of the access rule.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: One of the <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> values that specifies the valid access control type.\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates.\n  overload: System.IO.Pipes.PipeSecurity.AuditRuleFactory*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>identityReference</code> property is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <code>accessMask</code> property is zero.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>identityReference</code> property is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> nor of a type, such as <xref href=\"System.Security.Principal.NTAccount\"></xref>, that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.AuditRuleType\n  id: AuditRuleType\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: AuditRuleType\n  nameWithType: PipeSecurity.AuditRuleType\n  fullName: System.IO.Pipes.PipeSecurity.AuditRuleType\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Gets the <xref:System.Type> object associated with the audit rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.\n  syntax:\n    content: public override Type AuditRuleType { get; }\n    return:\n      type: System.Type\n      description: The type of the object that is associated with the audit rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  overload: System.IO.Pipes.PipeSecurity.AuditRuleType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)\n  id: Persist(System.Runtime.InteropServices.SafeHandle)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: Persist(SafeHandle)\n  nameWithType: PipeSecurity.Persist(SafeHandle)\n  fullName: System.IO.Pipes.PipeSecurity.Persist(SafeHandle)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Saves the specified sections of the security descriptor that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object to permanent storage.\n  syntax:\n    content: protected void Persist (System.Runtime.InteropServices.SafeHandle handle);\n    parameters:\n    - id: handle\n      type: System.Runtime.InteropServices.SafeHandle\n      description: The handle of the securable object that the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object is associated with.\n  overload: System.IO.Pipes.PipeSecurity.Persist*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.Persist(System.String)\n  id: Persist(System.String)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: Persist(String)\n  nameWithType: PipeSecurity.Persist(String)\n  fullName: System.IO.Pipes.PipeSecurity.Persist(String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Saves the specified sections of the security descriptor that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object to permanent storage.\n  syntax:\n    content: protected void Persist (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the securable object that the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object is associated with.\n  overload: System.IO.Pipes.PipeSecurity.Persist*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)\n  id: RemoveAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: RemoveAccessRule(PipeAccessRule)\n  nameWithType: PipeSecurity.RemoveAccessRule(PipeAccessRule)\n  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRule(PipeAccessRule)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Removes an access rule from the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: The RemoveAccessRule method removes either all matching <xref:System.Security.AccessControl.AccessControlType> access rules or all matching <xref:System.Security.AccessControl.AccessControlType> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object. For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType> value, the <xref:System.IO.Pipes.PipeAccessRights> value, and a user account. The RemoveAccessRule method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights> value or the <xref:System.IO.Pipes.PipeAccessRights> value.\n  syntax:\n    content: public bool RemoveAccessRule (System.IO.Pipes.PipeAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAccessRule\n      description: The access rule to remove.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IO.Pipes.PipeSecurity.RemoveAccessRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)\n  id: RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: RemoveAccessRuleSpecific(PipeAccessRule)\n  nameWithType: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)\n  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Removes the specified access rule from the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType> access rules or all matching <xref:System.Security.AccessControl.AccessControlType> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object. For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType> value, the <xref:System.IO.Pipes.PipeAccessRights> value, and a user account. The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights> value or the <xref:System.IO.Pipes.PipeAccessRights> value.\n  syntax:\n    content: public void RemoveAccessRuleSpecific (System.IO.Pipes.PipeAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAccessRule\n      description: The access rule to remove.\n  overload: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)\n  id: RemoveAuditRule(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRule(PipeAuditRule)\n  nameWithType: PipeSecurity.RemoveAuditRule(PipeAuditRule)\n  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRule(PipeAuditRule)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Removes an audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: The RemoveAuditRule method removes either all matching <xref:System.Security.AccessControl.AccessControlType> audit rules or all matching <xref:System.Security.AccessControl.AccessControlType> audit rules from the current <xref:System.IO.Pipes.PipeSecurity> object.  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType> audit rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType> value, the <xref:System.Security.AccessControl.AuditFlags> value, and a user account.  When you do this, the RemoveAuditRule method removes any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags> value or the <xref:System.Security.AccessControl.AuditFlags> value.\n  syntax:\n    content: public bool RemoveAuditRule (System.IO.Pipes.PipeAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAuditRule\n      description: The audit rule to remove.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the audit rule was removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>\n  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)\n  id: RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleAll(PipeAuditRule)\n  nameWithType: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)\n  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: The RemoveAuditRuleAll method removes all audit rules for the specified user.  It ignores all values in the <xref:System.IO.Pipes.PipeAuditRule> object except the user account.\n  syntax:\n    content: public void RemoveAuditRuleAll (System.IO.Pipes.PipeAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAuditRule\n      description: The audit rule to remove.\n  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)\n  id: RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleSpecific(PipeAuditRule)\n  nameWithType: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)\n  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Removes the specified audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: The RemoveAuditRuleSpecific method removes the specified matching <xref:System.Security.AccessControl.AccessControlType> audit rule or the specified matching <xref:System.Security.AccessControl.AccessControlType> audit rule from the current <xref:System.IO.Pipes.PipeSecurity> object.  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType> audit rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType> value, the <xref:System.Security.AccessControl.AuditFlags> value, and a user account.  When you do this, the RemoveAuditRuleSpecific method removes only a deny rule that specifies the <xref:System.Security.AccessControl.AuditFlags> value.  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags> value.\n  syntax:\n    content: public void RemoveAuditRuleSpecific (System.IO.Pipes.PipeAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAuditRule\n      description: The audit rule to remove.\n  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)\n  id: ResetAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: ResetAccessRule(PipeAccessRule)\n  nameWithType: PipeSecurity.ResetAccessRule(PipeAccessRule)\n  fullName: System.IO.Pipes.PipeSecurity.ResetAccessRule(PipeAccessRule)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Removes all access rules in the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object and then adds the specified access rule.\n  remarks: The ResetAccessRule method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights> value and the ResetAccessRule method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will be overwritten.  If the ResetAccessRule method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will also be overwritten.\n  syntax:\n    content: public void ResetAccessRule (System.IO.Pipes.PipeAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAccessRule\n      description: The access rule to add.\n  overload: System.IO.Pipes.PipeSecurity.ResetAccessRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)\n  id: SetAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: SetAccessRule(PipeAccessRule)\n  nameWithType: PipeSecurity.SetAccessRule(PipeAccessRule)\n  fullName: System.IO.Pipes.PipeSecurity.SetAccessRule(PipeAccessRule)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Sets an access rule in the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: The SetAccessRule method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights> value and the SetAccessRule method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will be overwritten.  If the SetAccessRule method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will not be overwritten.\n  syntax:\n    content: public void SetAccessRule (System.IO.Pipes.PipeAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAccessRule\n      description: The rule to set.\n  overload: System.IO.Pipes.PipeSecurity.SetAccessRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)\n  id: SetAuditRule(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: SetAuditRule(PipeAuditRule)\n  nameWithType: PipeSecurity.SetAuditRule(PipeAuditRule)\n  fullName: System.IO.Pipes.PipeSecurity.SetAuditRule(PipeAuditRule)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Sets an audit rule in the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: The SetAuditRule method adds the specified audit rule or overwrites any identical audit rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights> value and the SetAuditRule method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will be overwritten.  If the SetAuditRule method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights> value, the identical rule will not be overwritten.\n  syntax:\n    content: public void SetAuditRule (System.IO.Pipes.PipeAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAuditRule\n      description: The rule to set.\n  overload: System.IO.Pipes.PipeSecurity.SetAuditRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: System.Security.AccessControl.NativeObjectSecurity\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.IO.Pipes.PipeSecurity.#ctor\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: PipeSecurity()\n  nameWithType: PipeSecurity.PipeSecurity()\n  fullName: System.IO.Pipes.PipeSecurity.PipeSecurity()\n- uid: System.IO.Pipes.PipeSecurity.AccessRightType\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: PipeSecurity.AccessRightType\n  fullName: System.IO.Pipes.PipeSecurity.AccessRightType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  nameWithType: PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  fullName: System.IO.Pipes.PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  nameWithType: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.IO.Pipes.PipeSecurity.AccessRuleType\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: PipeSecurity.AccessRuleType\n  fullName: System.IO.Pipes.PipeSecurity.AccessRuleType\n- uid: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AddAccessRule(PipeAccessRule)\n  nameWithType: PipeSecurity.AddAccessRule(PipeAccessRule)\n  fullName: System.IO.Pipes.PipeSecurity.AddAccessRule(PipeAccessRule)\n- uid: System.IO.Pipes.PipeAccessRule\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeAccessRule\n  nameWithType: PipeAccessRule\n  fullName: System.IO.Pipes.PipeAccessRule\n- uid: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AddAuditRule(PipeAuditRule)\n  nameWithType: PipeSecurity.AddAuditRule(PipeAuditRule)\n  fullName: System.IO.Pipes.PipeSecurity.AddAuditRule(PipeAuditRule)\n- uid: System.IO.Pipes.PipeAuditRule\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeAuditRule\n  nameWithType: PipeAuditRule\n  fullName: System.IO.Pipes.PipeAuditRule\n- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.IO.Pipes.PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  nameWithType: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.IO.Pipes.PipeSecurity.AuditRuleType\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: PipeSecurity.AuditRuleType\n  fullName: System.IO.Pipes.PipeSecurity.AuditRuleType\n- uid: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: Persist(SafeHandle)\n  nameWithType: PipeSecurity.Persist(SafeHandle)\n  fullName: System.IO.Pipes.PipeSecurity.Persist(SafeHandle)\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: SafeHandle\n  nameWithType: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n- uid: System.IO.Pipes.PipeSecurity.Persist(System.String)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: Persist(String)\n  nameWithType: PipeSecurity.Persist(String)\n  fullName: System.IO.Pipes.PipeSecurity.Persist(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAccessRule(PipeAccessRule)\n  nameWithType: PipeSecurity.RemoveAccessRule(PipeAccessRule)\n  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRule(PipeAccessRule)\n- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(PipeAccessRule)\n  nameWithType: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)\n  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAuditRule(PipeAuditRule)\n  nameWithType: PipeSecurity.RemoveAuditRule(PipeAuditRule)\n  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRule(PipeAuditRule)\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll(PipeAuditRule)\n  nameWithType: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)\n  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(PipeAuditRule)\n  nameWithType: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)\n  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)\n- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: ResetAccessRule(PipeAccessRule)\n  nameWithType: PipeSecurity.ResetAccessRule(PipeAccessRule)\n  fullName: System.IO.Pipes.PipeSecurity.ResetAccessRule(PipeAccessRule)\n- uid: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: SetAccessRule(PipeAccessRule)\n  nameWithType: PipeSecurity.SetAccessRule(PipeAccessRule)\n  fullName: System.IO.Pipes.PipeSecurity.SetAccessRule(PipeAccessRule)\n- uid: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: SetAuditRule(PipeAuditRule)\n  nameWithType: PipeSecurity.SetAuditRule(PipeAuditRule)\n  fullName: System.IO.Pipes.PipeSecurity.SetAuditRule(PipeAuditRule)\n- uid: System.IO.Pipes.PipeSecurity.#ctor*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: PipeSecurity\n  nameWithType: PipeSecurity.PipeSecurity\n- uid: System.IO.Pipes.PipeSecurity.AccessRightType*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: PipeSecurity.AccessRightType\n- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AccessRuleFactory\n  nameWithType: PipeSecurity.AccessRuleFactory\n- uid: System.IO.Pipes.PipeSecurity.AccessRuleType*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: PipeSecurity.AccessRuleType\n- uid: System.IO.Pipes.PipeSecurity.AddAccessRule*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AddAccessRule\n  nameWithType: PipeSecurity.AddAccessRule\n- uid: System.IO.Pipes.PipeSecurity.AddAuditRule*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AddAuditRule\n  nameWithType: PipeSecurity.AddAuditRule\n- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AuditRuleFactory\n  nameWithType: PipeSecurity.AuditRuleFactory\n- uid: System.IO.Pipes.PipeSecurity.AuditRuleType*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: PipeSecurity.AuditRuleType\n- uid: System.IO.Pipes.PipeSecurity.Persist*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: Persist\n  nameWithType: PipeSecurity.Persist\n- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAccessRule\n  nameWithType: PipeSecurity.RemoveAccessRule\n- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific\n  nameWithType: PipeSecurity.RemoveAccessRuleSpecific\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAuditRule\n  nameWithType: PipeSecurity.RemoveAuditRule\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll\n  nameWithType: PipeSecurity.RemoveAuditRuleAll\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific\n  nameWithType: PipeSecurity.RemoveAuditRuleSpecific\n- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: ResetAccessRule\n  nameWithType: PipeSecurity.ResetAccessRule\n- uid: System.IO.Pipes.PipeSecurity.SetAccessRule*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: SetAccessRule\n  nameWithType: PipeSecurity.SetAccessRule\n- uid: System.IO.Pipes.PipeSecurity.SetAuditRule*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: SetAuditRule\n  nameWithType: PipeSecurity.SetAuditRule\n"}