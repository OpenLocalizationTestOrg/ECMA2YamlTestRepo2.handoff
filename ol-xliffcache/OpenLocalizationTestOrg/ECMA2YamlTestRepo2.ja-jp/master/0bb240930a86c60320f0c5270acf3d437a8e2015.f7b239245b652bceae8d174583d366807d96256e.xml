{"nodes":[{"pos":[724,832],"content":"Configures the code-access security level that is applied to an application. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Configures the code-access security level that is applied to an application. This class cannot be inherited.","pos":[0,108],"nodes":[{"content":"Configures the code-access security level that is applied to an application.","pos":[0,76]},{"content":"This class cannot be inherited.","pos":[77,108]}]}]},{"pos":[844,1147],"content":"The TrustSection class lets you programmatically access and modify the configuration file `<trust>` section. The `<trust>` section configures the code-access-security permissions set that is used to run a particular application. This section can be declared at the machine, site, and application levels.","needQuote":true,"needEscape":true,"nodes":[{"content":"The TrustSection class lets you programmatically access and modify the configuration file <ph id=\"ph1\">`&lt;trust&gt;`</ph> section.","pos":[0,108],"source":"The TrustSection class lets you programmatically access and modify the configuration file `<trust>` section."},{"content":"The <ph id=\"ph1\">`&lt;trust&gt;`</ph> section configures the code-access-security permissions set that is used to run a particular application.","pos":[109,228],"source":" The `<trust>` section configures the code-access-security permissions set that is used to run a particular application."},{"content":"This section can be declared at the machine, site, and application levels.","pos":[229,303]}]},{"pos":[6183,6305],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.TrustSection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using default settings.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Configuration.TrustSection\"></xref> class using default settings."},{"pos":[6318,6915],"content":"The TrustSection constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.TrustSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.       The following table shows the default settings that are used for the TrustSection constructor.      |Setting|Default value|   |-------------|-------------------|   |<xref:System.Web.Configuration.TrustSection.Level%2A>|`Full`|   |<xref:System.Web.Configuration.TrustSection.OriginUrl%2A>|`\"\"`|","needQuote":false,"needEscape":true,"nodes":[{"content":"The TrustSection constructor is not intended to be used directly from your code.","pos":[0,80]},{"content":"It is called by the ASP.NET configuration system.","pos":[81,130]},{"content":"You obtain an instance of the &lt;xref:System.Web.Configuration.TrustSection&gt; class by using the &lt;xref:System.Configuration.Configuration.GetSection%2A&gt; method.","pos":[131,288],"source":" You obtain an instance of the <xref:System.Web.Configuration.TrustSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method."},{"content":"The following table shows the default settings that are used for the TrustSection constructor.","pos":[295,389]},{"content":"|Setting|Default value|   |-------------|-------------------|   |&lt;xref:System.Web.Configuration.TrustSection.Level%2A&gt;|<ph id=\"ph1\">`Full`</ph>|   |&lt;xref:System.Web.Configuration.TrustSection.OriginUrl%2A&gt;|<ph id=\"ph2\">`\"\"`</ph><ph id=\"ph3\">|</ph>","pos":[395,588],"source":"      |Setting|Default value|   |-------------|-------------------|   |<xref:System.Web.Configuration.TrustSection.Level%2A>|`Full`|   |<xref:System.Web.Configuration.TrustSection.OriginUrl%2A>|`\"\"`|"}]},{"pos":[7536,7592],"content":"Gets or sets the custom security-policy resolution type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the custom security-policy resolution type.","pos":[0,56]}]},{"pos":[7605,7951],"content":"If HostSecurityPolicyResolverType is an empty string, the application uses ASP.NET default policy to determine an assembly's permissions. The default policy for evaluating permissions grants full trust to the Global Assembly Cache (GAC) assemblies and partial trust to the other assemblies.       This attribute cannot be set to a `null` value.","needQuote":false,"needEscape":true,"nodes":[{"content":"If HostSecurityPolicyResolverType is an empty string, the application uses ASP.NET default policy to determine an assembly's permissions.","pos":[0,137]},{"content":"The default policy for evaluating permissions grants full trust to the Global Assembly Cache (GAC) assemblies and partial trust to the other assemblies.","pos":[138,290]},{"content":"This attribute cannot be set to a <ph id=\"ph1\">`null`</ph> value.","pos":[297,344],"source":"       This attribute cannot be set to a `null` value."}]},{"pos":[8092,8135],"content":"The custom security-policy resolution type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The custom security-policy resolution type.","pos":[0,43]}]},{"pos":[8634,8720],"content":"Gets or set a value that indicates whether the legacy code access security is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or set a value that indicates whether the legacy code access security is enabled.","pos":[0,86]}]},{"pos":[8733,10595],"content":"When legacy code access security is enabled, the following security rules apply:      -   Code access security (CAS) policy is established from the combination of machine policy and the specified ASP.NET partial trust policy file.      -   Partial trust application domains revert to being full trust at the application domain level.      -   The legacy partial trust files located in the CONFIG directory in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] install directory are used instead of the new partial trust configuration files that are located in the same directory. The legacy files include the membership conditions that were found in the [!INCLUDE[net_v11_long](~/add/includes/net-v11-long-md.md)] or [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)] versions of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)].      -   Additional membership conditions to evaluate permissions are applied, as defined in ASP.NET partial trust files. The CONFIG directory that ships with the [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] release contains legacy partial-trust policy files. The names of these files include the string \"legacy\" and contain the [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)] sections. These sections contain non-empty membership conditions that are needed to evaluating CAS policy against assemblies.      -   If the ASP.NET application is running in partial trust and the security policy file for the trust level maps to one of the default partial trust configuration files, ASP.NET automatically chooses the corresponding legacy configuration file. For example, if the security policy would ordinarily be loaded from Web_mediumtrust.config, then in legacy mode ASP.NET will instead load security policy from Legacy.web_mediumtrust.config.","needQuote":false,"needEscape":true,"nodes":[{"content":"When legacy code access security is enabled, the following security rules apply:      -   Code access security (CAS) policy is established from the combination of machine policy and the specified ASP.NET partial trust policy file.","pos":[0,230]},{"content":"-   Partial trust application domains revert to being full trust at the application domain level.","pos":[236,333]},{"content":"-   The legacy partial trust files located in the CONFIG directory in the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> install directory are used instead of the new partial trust configuration files that are located in the same directory.","pos":[339,590],"source":"      -   The legacy partial trust files located in the CONFIG directory in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] install directory are used instead of the new partial trust configuration files that are located in the same directory."},{"content":"The legacy files include the membership conditions that were found in the <ph id=\"ph1\">[!INCLUDE[net_v11_long](~/add/includes/net-v11-long-md.md)]</ph> or <ph id=\"ph2\">[!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]</ph> versions of the <ph id=\"ph3\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.","pos":[591,870],"source":" The legacy files include the membership conditions that were found in the [!INCLUDE[net_v11_long](~/add/includes/net-v11-long-md.md)] or [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)] versions of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]."},{"content":"-   Additional membership conditions to evaluate permissions are applied, as defined in ASP.NET partial trust files.","pos":[876,992]},{"content":"The CONFIG directory that ships with the <ph id=\"ph1\">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> release contains legacy partial-trust policy files.","pos":[993,1147],"source":" The CONFIG directory that ships with the [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] release contains legacy partial-trust policy files."},{"content":"The names of these files include the string \"legacy\" and contain the <ph id=\"ph1\">[!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]</ph> sections.","pos":[1148,1294],"source":" The names of these files include the string \"legacy\" and contain the [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)] sections."},{"content":"These sections contain non-empty membership conditions that are needed to evaluating CAS policy against assemblies.","pos":[1295,1410]},{"content":"-   If the ASP.NET application is running in partial trust and the security policy file for the trust level maps to one of the default partial trust configuration files, ASP.NET automatically chooses the corresponding legacy configuration file.","pos":[1416,1660]},{"content":"For example, if the security policy would ordinarily be loaded from Web_mediumtrust.config, then in legacy mode ASP.NET will instead load security policy from Legacy.web_mediumtrust.config.","pos":[1661,1850]}]},{"pos":[10719,10976],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if legacy code access security is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if legacy code access security is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,178],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if legacy code access security is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[179,257],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[11414,11495],"content":"Gets or sets the name of the security level under which the application will run.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the security level under which the application will run.","pos":[0,81]}]},{"pos":[11508,11884],"content":"The Level property specifies the security level under which the application will be run. The default is `\"Full\"`.       There are five available trust levels:      -   Full      -   High      -   Medium      -   Low      -   Minimal       The named levels correspond to the security levels that are defined in the `<trustLevel>` element for `<securityPolicy>`.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Level property specifies the security level under which the application will be run.","pos":[0,88]},{"content":"The default is <ph id=\"ph1\">`\"Full\"`</ph>.","pos":[89,113],"source":" The default is `\"Full\"`."},{"content":"There are five available trust levels:      -   Full      -   High      -   Medium      -   Low      -   Minimal       The named levels correspond to the security levels that are defined in the <ph id=\"ph1\">`&lt;trustLevel&gt;`</ph> element for <ph id=\"ph2\">`&lt;securityPolicy&gt;`</ph>.","pos":[120,360],"source":"       There are five available trust levels:      -   Full      -   High      -   Medium      -   Low      -   Minimal       The named levels correspond to the security levels that are defined in the `<trustLevel>` element for `<securityPolicy>`."}]},{"pos":[12442,12571],"content":"The name of the trust level. The default is <xref uid=\"langword_csharp_&quot;Full&quot;\" name=\"&quot;Full&quot;\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the trust level.","pos":[0,28]},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;quot;Full&amp;quot;\" name=\"&amp;quot;Full&amp;quot;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[29,129],"source":" The default is <xref uid=\"langword_csharp_&quot;Full&quot;\" name=\"&quot;Full&quot;\" href=\"\"></xref>."}]},{"pos":[13020,13067],"content":"Specifies the URL of origin for an application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the URL of origin for an application.","pos":[0,47]}]},{"pos":[13079,13579],"content":"The OriginUrl property specifies the URL of origin for an application. If present, this can be used for some permissions, such as those associated with the <xref:System.Net.WebRequest> class. This enables you to specify a single URL that is used to create permission through a <xref:System.Net.WebPermission> instance. This permission then grants ASP.NET code that has partial trust the right to make HTTP calls (for example, a Web service call) to that URL. The value must be a well-formed HTTP URL.","needQuote":true,"needEscape":true,"nodes":[{"content":"The OriginUrl property specifies the URL of origin for an application. If present, this can be used for some permissions, such as those associated with the <xref:System.Net.WebRequest> class. This enables you to specify a single URL that is used to create permission through a <xref:System.Net.WebPermission> instance. This permission then grants ASP.NET code that has partial trust the right to make HTTP calls (for example, a Web service call) to that URL. The value must be a well-formed HTTP URL.","pos":[0,500],"nodes":[{"content":"The OriginUrl property specifies the URL of origin for an application.","pos":[0,70]},{"content":"If present, this can be used for some permissions, such as those associated with the &lt;xref:System.Net.WebRequest&gt; class.","pos":[71,191],"source":" If present, this can be used for some permissions, such as those associated with the <xref:System.Net.WebRequest> class."},{"content":"This enables you to specify a single URL that is used to create permission through a &lt;xref:System.Net.WebPermission&gt; instance.","pos":[192,318],"source":" This enables you to specify a single URL that is used to create permission through a <xref:System.Net.WebPermission> instance."},{"content":"This permission then grants ASP.NET code that has partial trust the right to make HTTP calls (for example, a Web service call) to that URL.","pos":[319,458]},{"content":"The value must be a well-formed HTTP URL.","pos":[459,500]}]}]},{"pos":[14144,14223],"content":"A well-formed HTTP URL or an empty string (\"\"). The default is an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"A well-formed HTTP URL or an empty string (\"\"). The default is an empty string.","pos":[0,79],"nodes":[{"content":"A well-formed HTTP URL or an empty string (\"\").","pos":[0,47]},{"content":"The default is an empty string.","pos":[48,79]}]}]},{"pos":[14716,14760],"content":"Gets or sets the name of the permission set.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the permission set.","pos":[0,44]}]},{"pos":[14773,15184],"content":"The PermissionSetName property enables you to define in a partial trust configuration file the named permission set that is used during the initialization of an application domain.       By default, the PermissionSetName property is \"ASP.Net\" This is the name of the permission set that is used to initialize the application domain.       This attribute cannot be set to an empty string or a `null` value.","needQuote":false,"needEscape":true,"nodes":[{"content":"The PermissionSetName property enables you to define in a partial trust configuration file the named permission set that is used during the initialization of an application domain.","pos":[0,180]},{"content":"By default, the PermissionSetName property is \"ASP.Net\" This is the name of the permission set that is used to initialize the application domain.","pos":[187,332]},{"content":"This attribute cannot be set to an empty string or a <ph id=\"ph1\">`null`</ph> value.","pos":[339,405],"source":"       This attribute cannot be set to an empty string or a `null` value."}]},{"pos":[15312,15343],"content":"The name of the permission set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the permission set.","pos":[0,31]}]},{"pos":[15919,16112],"content":"Gets or set a value that indicates whether page requests are automatically restricted to the permissions that are configured in the trust policy file that is applied to the ASP.NET application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or set a value that indicates whether page requests are automatically restricted to the permissions that are configured in the trust policy file that is applied to the ASP.NET application.","pos":[0,193]}]},{"pos":[16253,16494],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if requests are automatically restricted to the permissions that are configured in the trust policy file; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if requests are automatically restricted to the permissions that are configured in the trust policy file; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17175,17187],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Configuration.TrustSection\n  id: TrustSection\n  children:\n  - System.Web.Configuration.TrustSection.#ctor\n  - System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType\n  - System.Web.Configuration.TrustSection.LegacyCasModel\n  - System.Web.Configuration.TrustSection.Level\n  - System.Web.Configuration.TrustSection.OriginUrl\n  - System.Web.Configuration.TrustSection.PermissionSetName\n  - System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust\n  - System.Web.Configuration.TrustSection.Properties\n  langs:\n  - csharp\n  name: TrustSection\n  nameWithType: TrustSection\n  fullName: System.Web.Configuration.TrustSection\n  type: Class\n  summary: Configures the code-access security level that is applied to an application. This class cannot be inherited.\n  remarks: The TrustSection class lets you programmatically access and modify the configuration file `<trust>` section. The `<trust>` section configures the code-access-security permissions set that is used to run a particular application. This section can be declared at the machine, site, and application levels.\n  example:\n  - \"This section provides two code examples. The first demonstrates how to declaratively specify values for several properties of the TrustSection class. The second demonstrates how to use the TrustSection type.  \\n  \\n The following configuration file example shows how to declaratively specify values for several properties of the TrustSection class.  \\n  \\n```  \\n<system.web>  \\n  <trust level=\\\"Full\\\" originUrl=\\\"\\\"/>  \\n</system.web>  \\n```  \\n  \\n The following code example demonstrates how to use the TrustSection type.  \\n  \\n [!code-cs[System.Web.Configuration.TrustSection#1](~/add/codesnippet/csharp/t-system.web.configurati_21_1.cs)]\\n [!code-vb[System.Web.Configuration.TrustSection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_21_1.vb)]\"\n  syntax:\n    content: 'public sealed class TrustSection : System.Configuration.ConfigurationSection'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.Configuration.ConfigurationSection\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)\n  - System.Configuration.ConfigurationSection.GetRuntimeObject\n  - System.Configuration.ConfigurationSection.IsModified\n  - System.Configuration.ConfigurationSection.ResetModified\n  - System.Configuration.ConfigurationSection.SectionInformation\n  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)\n  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)\n  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)\n  platform:\n  - net462\n- uid: System.Web.Configuration.TrustSection.#ctor\n  id: '#ctor'\n  parent: System.Web.Configuration.TrustSection\n  langs:\n  - csharp\n  name: TrustSection()\n  nameWithType: TrustSection.TrustSection()\n  fullName: System.Web.Configuration.TrustSection.TrustSection()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Web.Configuration.TrustSection\"></xref> class using default settings.\n  remarks: \"The TrustSection constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.TrustSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.  \\n  \\n The following table shows the default settings that are used for the TrustSection constructor.  \\n  \\n|Setting|Default value|  \\n|-------------|-------------------|  \\n|<xref:System.Web.Configuration.TrustSection.Level%2A>|`Full`|  \\n|<xref:System.Web.Configuration.TrustSection.OriginUrl%2A>|`\\\"\\\"`|\"\n  syntax:\n    content: public TrustSection ();\n    parameters: []\n  overload: System.Web.Configuration.TrustSection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType\n  id: HostSecurityPolicyResolverType\n  parent: System.Web.Configuration.TrustSection\n  langs:\n  - csharp\n  name: HostSecurityPolicyResolverType\n  nameWithType: TrustSection.HostSecurityPolicyResolverType\n  fullName: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the custom security-policy resolution type.\n  remarks: \"If HostSecurityPolicyResolverType is an empty string, the application uses ASP.NET default policy to determine an assembly's permissions. The default policy for evaluating permissions grants full trust to the Global Assembly Cache (GAC) assemblies and partial trust to the other assemblies.  \\n  \\n This attribute cannot be set to a `null` value.\"\n  syntax:\n    content: public string HostSecurityPolicyResolverType { get; set; }\n    return:\n      type: System.String\n      description: The custom security-policy resolution type.\n  overload: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.TrustSection.LegacyCasModel\n  id: LegacyCasModel\n  parent: System.Web.Configuration.TrustSection\n  langs:\n  - csharp\n  name: LegacyCasModel\n  nameWithType: TrustSection.LegacyCasModel\n  fullName: System.Web.Configuration.TrustSection.LegacyCasModel\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or set a value that indicates whether the legacy code access security is enabled.\n  remarks: \"When legacy code access security is enabled, the following security rules apply:  \\n  \\n-   Code access security (CAS) policy is established from the combination of machine policy and the specified ASP.NET partial trust policy file.  \\n  \\n-   Partial trust application domains revert to being full trust at the application domain level.  \\n  \\n-   The legacy partial trust files located in the CONFIG directory in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] install directory are used instead of the new partial trust configuration files that are located in the same directory. The legacy files include the membership conditions that were found in the [!INCLUDE[net_v11_long](~/add/includes/net-v11-long-md.md)] or [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)] versions of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)].  \\n  \\n-   Additional membership conditions to evaluate permissions are applied, as defined in ASP.NET partial trust files. The CONFIG directory that ships with the [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] release contains legacy partial-trust policy files. The names of these files include the string \\\"legacy\\\" and contain the [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)] sections. These sections contain non-empty membership conditions that are needed to evaluating CAS policy against assemblies.  \\n  \\n-   If the ASP.NET application is running in partial trust and the security policy file for the trust level maps to one of the default partial trust configuration files, ASP.NET automatically chooses the corresponding legacy configuration file. For example, if the security policy would ordinarily be loaded from Web_mediumtrust.config, then in legacy mode ASP.NET will instead load security policy from Legacy.web_mediumtrust.config.\"\n  syntax:\n    content: public bool LegacyCasModel { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if legacy code access security is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Configuration.TrustSection.LegacyCasModel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.TrustSection.Level\n  id: Level\n  parent: System.Web.Configuration.TrustSection\n  langs:\n  - csharp\n  name: Level\n  nameWithType: TrustSection.Level\n  fullName: System.Web.Configuration.TrustSection.Level\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the name of the security level under which the application will run.\n  remarks: \"The Level property specifies the security level under which the application will be run. The default is `\\\"Full\\\"`.  \\n  \\n There are five available trust levels:  \\n  \\n-   Full  \\n  \\n-   High  \\n  \\n-   Medium  \\n  \\n-   Low  \\n  \\n-   Minimal  \\n  \\n The named levels correspond to the security levels that are defined in the `<trustLevel>` element for `<securityPolicy>`.\"\n  example:\n  - \"The following code example demonstrates how to use the Level property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.TrustSection> class.  \\n  \\n [!code-cs[System.Web.Configuration.TrustSection#2](~/add/codesnippet/csharp/p-system.web.configurati_147_1.cs)]\\n [!code-vb[System.Web.Configuration.TrustSection#2](~/add/codesnippet/visualbasic/p-system.web.configurati_147_1.vb)]\"\n  syntax:\n    content: public string Level { get; set; }\n    return:\n      type: System.String\n      description: The name of the trust level. The default is <xref uid=\"langword_csharp_&quot;Full&quot;\" name=\"&quot;Full&quot;\" href=\"\"></xref>.\n  overload: System.Web.Configuration.TrustSection.Level*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.TrustSection.OriginUrl\n  id: OriginUrl\n  parent: System.Web.Configuration.TrustSection\n  langs:\n  - csharp\n  name: OriginUrl\n  nameWithType: TrustSection.OriginUrl\n  fullName: System.Web.Configuration.TrustSection.OriginUrl\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Specifies the URL of origin for an application.\n  remarks: The OriginUrl property specifies the URL of origin for an application. If present, this can be used for some permissions, such as those associated with the <xref:System.Net.WebRequest> class. This enables you to specify a single URL that is used to create permission through a <xref:System.Net.WebPermission> instance. This permission then grants ASP.NET code that has partial trust the right to make HTTP calls (for example, a Web service call) to that URL. The value must be a well-formed HTTP URL.\n  example:\n  - \"The following code example demonstrates how to use the OriginUrl property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.TrustSection> class.  \\n  \\n [!code-cs[System.Web.Configuration.TrustSection#3](~/add/codesnippet/csharp/p-system.web.configurati_332_1.cs)]\\n [!code-vb[System.Web.Configuration.TrustSection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_332_1.vb)]\"\n  syntax:\n    content: public string OriginUrl { get; set; }\n    return:\n      type: System.String\n      description: A well-formed HTTP URL or an empty string (\"\"). The default is an empty string.\n  overload: System.Web.Configuration.TrustSection.OriginUrl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.TrustSection.PermissionSetName\n  id: PermissionSetName\n  parent: System.Web.Configuration.TrustSection\n  langs:\n  - csharp\n  name: PermissionSetName\n  nameWithType: TrustSection.PermissionSetName\n  fullName: System.Web.Configuration.TrustSection.PermissionSetName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the name of the permission set.\n  remarks: \"The PermissionSetName property enables you to define in a partial trust configuration file the named permission set that is used during the initialization of an application domain.  \\n  \\n By default, the PermissionSetName property is \\\"ASP.Net\\\" This is the name of the permission set that is used to initialize the application domain.  \\n  \\n This attribute cannot be set to an empty string or a `null` value.\"\n  syntax:\n    content: public string PermissionSetName { get; set; }\n    return:\n      type: System.String\n      description: The name of the permission set.\n  overload: System.Web.Configuration.TrustSection.PermissionSetName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust\n  id: ProcessRequestInApplicationTrust\n  parent: System.Web.Configuration.TrustSection\n  langs:\n  - csharp\n  name: ProcessRequestInApplicationTrust\n  nameWithType: TrustSection.ProcessRequestInApplicationTrust\n  fullName: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or set a value that indicates whether page requests are automatically restricted to the permissions that are configured in the trust policy file that is applied to the ASP.NET application.\n  syntax:\n    content: public bool ProcessRequestInApplicationTrust { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if requests are automatically restricted to the permissions that are configured in the trust policy file; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.TrustSection.Properties\n  id: Properties\n  parent: System.Web.Configuration.TrustSection\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: TrustSection.Properties\n  fullName: System.Web.Configuration.TrustSection.Properties\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.Web.Configuration.TrustSection.Properties*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: System.Configuration.ConfigurationSection\n- uid: System.Web.Configuration.TrustSection.#ctor\n  parent: System.Web.Configuration.TrustSection\n  isExternal: false\n  name: TrustSection()\n  nameWithType: TrustSection.TrustSection()\n  fullName: System.Web.Configuration.TrustSection.TrustSection()\n- uid: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType\n  parent: System.Web.Configuration.TrustSection\n  isExternal: false\n  name: HostSecurityPolicyResolverType\n  nameWithType: TrustSection.HostSecurityPolicyResolverType\n  fullName: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Configuration.TrustSection.LegacyCasModel\n  parent: System.Web.Configuration.TrustSection\n  isExternal: false\n  name: LegacyCasModel\n  nameWithType: TrustSection.LegacyCasModel\n  fullName: System.Web.Configuration.TrustSection.LegacyCasModel\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Configuration.TrustSection.Level\n  parent: System.Web.Configuration.TrustSection\n  isExternal: false\n  name: Level\n  nameWithType: TrustSection.Level\n  fullName: System.Web.Configuration.TrustSection.Level\n- uid: System.Web.Configuration.TrustSection.OriginUrl\n  parent: System.Web.Configuration.TrustSection\n  isExternal: false\n  name: OriginUrl\n  nameWithType: TrustSection.OriginUrl\n  fullName: System.Web.Configuration.TrustSection.OriginUrl\n- uid: System.Web.Configuration.TrustSection.PermissionSetName\n  parent: System.Web.Configuration.TrustSection\n  isExternal: false\n  name: PermissionSetName\n  nameWithType: TrustSection.PermissionSetName\n  fullName: System.Web.Configuration.TrustSection.PermissionSetName\n- uid: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust\n  parent: System.Web.Configuration.TrustSection\n  isExternal: false\n  name: ProcessRequestInApplicationTrust\n  nameWithType: TrustSection.ProcessRequestInApplicationTrust\n  fullName: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust\n- uid: System.Web.Configuration.TrustSection.Properties\n  parent: System.Web.Configuration.TrustSection\n  isExternal: false\n  name: Properties\n  nameWithType: TrustSection.Properties\n  fullName: System.Web.Configuration.TrustSection.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Web.Configuration.TrustSection.#ctor*\n  parent: System.Web.Configuration.TrustSection\n  isExternal: false\n  name: TrustSection\n  nameWithType: TrustSection.TrustSection\n- uid: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType*\n  parent: System.Web.Configuration.TrustSection\n  isExternal: false\n  name: HostSecurityPolicyResolverType\n  nameWithType: TrustSection.HostSecurityPolicyResolverType\n- uid: System.Web.Configuration.TrustSection.LegacyCasModel*\n  parent: System.Web.Configuration.TrustSection\n  isExternal: false\n  name: LegacyCasModel\n  nameWithType: TrustSection.LegacyCasModel\n- uid: System.Web.Configuration.TrustSection.Level*\n  parent: System.Web.Configuration.TrustSection\n  isExternal: false\n  name: Level\n  nameWithType: TrustSection.Level\n- uid: System.Web.Configuration.TrustSection.OriginUrl*\n  parent: System.Web.Configuration.TrustSection\n  isExternal: false\n  name: OriginUrl\n  nameWithType: TrustSection.OriginUrl\n- uid: System.Web.Configuration.TrustSection.PermissionSetName*\n  parent: System.Web.Configuration.TrustSection\n  isExternal: false\n  name: PermissionSetName\n  nameWithType: TrustSection.PermissionSetName\n- uid: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust*\n  parent: System.Web.Configuration.TrustSection\n  isExternal: false\n  name: ProcessRequestInApplicationTrust\n  nameWithType: TrustSection.ProcessRequestInApplicationTrust\n- uid: System.Web.Configuration.TrustSection.Properties*\n  parent: System.Web.Configuration.TrustSection\n  isExternal: false\n  name: Properties\n  nameWithType: TrustSection.Properties\n"}