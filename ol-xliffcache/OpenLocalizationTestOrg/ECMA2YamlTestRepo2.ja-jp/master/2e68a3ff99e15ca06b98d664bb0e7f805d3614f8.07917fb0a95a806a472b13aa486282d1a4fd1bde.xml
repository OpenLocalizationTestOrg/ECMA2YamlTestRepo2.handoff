{"nodes":[{"pos":[661,721],"content":"Describes desired rotation behavior of an inertia processor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Describes desired rotation behavior of an inertia processor.","pos":[0,60]}]},{"pos":[1523,1645],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.Manipulations.InertiaRotationBehavior2D\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Input.Manipulations.InertiaRotationBehavior2D\"></xref> class."},{"pos":[2362,2444],"content":"Gets or sets the desired angular deceleration, in radians per millisecond squared.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the desired angular deceleration, in radians per millisecond squared.","pos":[0,82]}]},{"pos":[2457,3224],"content":"This property represents the desired angular deceleration to be used during the inertia operation. This property value is mutually exclusive with the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> property; setting this property will set <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> to `NaN`. The default value for both this property and <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> is `NaN`. You must set one or the other property before inertia processing starts.       DesiredDeceleration must be a finite, non-negative number.       This property cannot be set while the inertia processor is running; otherwise, an exception is thrown.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property represents the desired angular deceleration to be used during the inertia operation.","pos":[0,98]},{"content":"This property value is mutually exclusive with the &lt;xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A&gt; property; setting this property will set &lt;xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A&gt; to <ph id=\"ph1\">`NaN`</ph>.","pos":[99,374],"source":" This property value is mutually exclusive with the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> property; setting this property will set <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> to `NaN`."},{"content":"The default value for both this property and &lt;xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A&gt; is <ph id=\"ph1\">`NaN`</ph>.","pos":[375,516],"source":" The default value for both this property and <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> is `NaN`."},{"content":"You must set one or the other property before inertia processing starts.","pos":[517,589]},{"content":"DesiredDeceleration must be a finite, non-negative number.","pos":[596,654]},{"content":"This property cannot be set while the inertia processor is running; otherwise, an exception is thrown.","pos":[661,763]}]},{"pos":[3353,3422],"content":"The desired angular deceleration, in radians per millisecond squared.","needQuote":true,"needEscape":true,"nodes":[{"content":"The desired angular deceleration, in radians per millisecond squared.","pos":[0,69]}]},{"pos":[4054,4100],"content":"Gets or sets the desired rotation, in radians.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the desired rotation, in radians.","pos":[0,46]}]},{"pos":[4113,5012],"content":"This property represents the desired ending rotation of the inertia operation. This property value is mutually exclusive with the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> property; setting this property will set <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> to `NaN`. The default value for both this property and <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> is `NaN`. You must set one or the other property before inertia processing starts.       DesiredRotation must be a finite, non-negative number. The direction of rotation is determined by the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity%2A> property.       This property cannot be set while the inertia processor is running; otherwise, an exception is thrown.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property represents the desired ending rotation of the inertia operation.","pos":[0,78]},{"content":"This property value is mutually exclusive with the &lt;xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A&gt; property; setting this property will set &lt;xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A&gt; to <ph id=\"ph1\">`NaN`</ph>.","pos":[79,362],"source":" This property value is mutually exclusive with the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> property; setting this property will set <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> to `NaN`."},{"content":"The default value for both this property and &lt;xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A&gt; is <ph id=\"ph1\">`NaN`</ph>.","pos":[363,508],"source":" The default value for both this property and <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> is `NaN`."},{"content":"You must set one or the other property before inertia processing starts.","pos":[509,581]},{"content":"DesiredRotation must be a finite, non-negative number.","pos":[588,642]},{"content":"The direction of rotation is determined by the &lt;xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity%2A&gt; property.","pos":[643,786],"source":" The direction of rotation is determined by the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity%2A> property."},{"content":"This property cannot be set while the inertia processor is running; otherwise, an exception is thrown.","pos":[793,895]}]},{"pos":[5488,5521],"content":"The desired rotation, in radians.","needQuote":true,"needEscape":true,"nodes":[{"content":"The desired rotation, in radians.","pos":[0,33]}]},{"pos":[6149,6222],"content":"Gets or sets the initial rotational velocity, in radians per millisecond.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the initial rotational velocity, in radians per millisecond.","pos":[0,73]}]},{"pos":[6235,6510],"content":"The default value for this property is `NaN`. Leaving this property unchanged from the default or setting this property to zero (0) will disable rotational inertia.       This property cannot be set while the inertia processor is running; otherwise, an exception is thrown.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default value for this property is <ph id=\"ph1\">`NaN`</ph>.","pos":[0,45],"source":"The default value for this property is `NaN`."},{"content":"Leaving this property unchanged from the default or setting this property to zero (0) will disable rotational inertia.","pos":[46,164]},{"content":"This property cannot be set while the inertia processor is running; otherwise, an exception is thrown.","pos":[171,273]}]},{"pos":[6635,6695],"content":"The initial rotational velocity, in radians per millisecond.","needQuote":true,"needEscape":true,"nodes":[{"content":"The initial rotational velocity, in radians per millisecond.","pos":[0,60]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.Manipulations.InertiaRotationBehavior2D\n  id: InertiaRotationBehavior2D\n  children:\n  - System.Windows.Input.Manipulations.InertiaRotationBehavior2D.#ctor\n  - System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration\n  - System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation\n  - System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity\n  langs:\n  - csharp\n  name: InertiaRotationBehavior2D\n  nameWithType: InertiaRotationBehavior2D\n  fullName: System.Windows.Input.Manipulations.InertiaRotationBehavior2D\n  type: Class\n  summary: Describes desired rotation behavior of an inertia processor.\n  syntax:\n    content: 'public sealed class InertiaRotationBehavior2D : System.Windows.Input.Manipulations.InertiaParameters2D'\n  inheritance:\n  - System.Object\n  - System.Windows.Input.Manipulations.InertiaParameters2D\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.#ctor\n  id: '#ctor'\n  parent: System.Windows.Input.Manipulations.InertiaRotationBehavior2D\n  langs:\n  - csharp\n  name: InertiaRotationBehavior2D()\n  nameWithType: InertiaRotationBehavior2D.InertiaRotationBehavior2D()\n  fullName: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InertiaRotationBehavior2D()\n  type: Constructor\n  assemblies:\n  - System.Windows.Input.Manipulations\n  namespace: System.Windows.Input.Manipulations\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.Manipulations.InertiaRotationBehavior2D\"></xref> class.\n  syntax:\n    content: public InertiaRotationBehavior2D ();\n    parameters: []\n  overload: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration\n  id: DesiredDeceleration\n  parent: System.Windows.Input.Manipulations.InertiaRotationBehavior2D\n  langs:\n  - csharp\n  name: DesiredDeceleration\n  nameWithType: InertiaRotationBehavior2D.DesiredDeceleration\n  fullName: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration\n  type: Property\n  assemblies:\n  - System.Windows.Input.Manipulations\n  namespace: System.Windows.Input.Manipulations\n  summary: Gets or sets the desired angular deceleration, in radians per millisecond squared.\n  remarks: \"This property represents the desired angular deceleration to be used during the inertia operation. This property value is mutually exclusive with the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> property; setting this property will set <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> to `NaN`. The default value for both this property and <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> is `NaN`. You must set one or the other property before inertia processing starts.  \\n  \\n DesiredDeceleration must be a finite, non-negative number.  \\n  \\n This property cannot be set while the inertia processor is running; otherwise, an exception is thrown.\"\n  syntax:\n    content: public float DesiredDeceleration { get; set; }\n    return:\n      type: System.Single\n      description: The desired angular deceleration, in radians per millisecond squared.\n  overload: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation\n  id: DesiredRotation\n  parent: System.Windows.Input.Manipulations.InertiaRotationBehavior2D\n  langs:\n  - csharp\n  name: DesiredRotation\n  nameWithType: InertiaRotationBehavior2D.DesiredRotation\n  fullName: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation\n  type: Property\n  assemblies:\n  - System.Windows.Input.Manipulations\n  namespace: System.Windows.Input.Manipulations\n  summary: Gets or sets the desired rotation, in radians.\n  remarks: \"This property represents the desired ending rotation of the inertia operation. This property value is mutually exclusive with the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> property; setting this property will set <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> to `NaN`. The default value for both this property and <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> is `NaN`. You must set one or the other property before inertia processing starts.  \\n  \\n DesiredRotation must be a finite, non-negative number. The direction of rotation is determined by the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity%2A> property.  \\n  \\n This property cannot be set while the inertia processor is running; otherwise, an exception is thrown.\"\n  example:\n  - \"In the following example, the DesiredRotation property is set to enable inertia processing to rotate an object three-and-one-half times from its starting orientation.  \\n  \\n [!code-cs[ManipulationAPI#_ManipulationItem_SetDesiredRotation](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_setdesiredrotation)]\"\n  syntax:\n    content: public float DesiredRotation { get; set; }\n    return:\n      type: System.Single\n      description: The desired rotation, in radians.\n  overload: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity\n  id: InitialVelocity\n  parent: System.Windows.Input.Manipulations.InertiaRotationBehavior2D\n  langs:\n  - csharp\n  name: InitialVelocity\n  nameWithType: InertiaRotationBehavior2D.InitialVelocity\n  fullName: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity\n  type: Property\n  assemblies:\n  - System.Windows.Input.Manipulations\n  namespace: System.Windows.Input.Manipulations\n  summary: Gets or sets the initial rotational velocity, in radians per millisecond.\n  remarks: \"The default value for this property is `NaN`. Leaving this property unchanged from the default or setting this property to zero (0) will disable rotational inertia.  \\n  \\n This property cannot be set while the inertia processor is running; otherwise, an exception is thrown.\"\n  syntax:\n    content: public float InitialVelocity { get; set; }\n    return:\n      type: System.Single\n      description: The initial rotational velocity, in radians per millisecond.\n  overload: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Input.Manipulations.InertiaParameters2D\n  isExternal: false\n  name: System.Windows.Input.Manipulations.InertiaParameters2D\n- uid: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.#ctor\n  parent: System.Windows.Input.Manipulations.InertiaRotationBehavior2D\n  isExternal: false\n  name: InertiaRotationBehavior2D()\n  nameWithType: InertiaRotationBehavior2D.InertiaRotationBehavior2D()\n  fullName: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InertiaRotationBehavior2D()\n- uid: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration\n  parent: System.Windows.Input.Manipulations.InertiaRotationBehavior2D\n  isExternal: false\n  name: DesiredDeceleration\n  nameWithType: InertiaRotationBehavior2D.DesiredDeceleration\n  fullName: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation\n  parent: System.Windows.Input.Manipulations.InertiaRotationBehavior2D\n  isExternal: false\n  name: DesiredRotation\n  nameWithType: InertiaRotationBehavior2D.DesiredRotation\n  fullName: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation\n- uid: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity\n  parent: System.Windows.Input.Manipulations.InertiaRotationBehavior2D\n  isExternal: false\n  name: InitialVelocity\n  nameWithType: InertiaRotationBehavior2D.InitialVelocity\n  fullName: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity\n- uid: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.#ctor*\n  parent: System.Windows.Input.Manipulations.InertiaRotationBehavior2D\n  isExternal: false\n  name: InertiaRotationBehavior2D\n  nameWithType: InertiaRotationBehavior2D.InertiaRotationBehavior2D\n- uid: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration*\n  parent: System.Windows.Input.Manipulations.InertiaRotationBehavior2D\n  isExternal: false\n  name: DesiredDeceleration\n  nameWithType: InertiaRotationBehavior2D.DesiredDeceleration\n- uid: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation*\n  parent: System.Windows.Input.Manipulations.InertiaRotationBehavior2D\n  isExternal: false\n  name: DesiredRotation\n  nameWithType: InertiaRotationBehavior2D.DesiredRotation\n- uid: System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity*\n  parent: System.Windows.Input.Manipulations.InertiaRotationBehavior2D\n  isExternal: false\n  name: InitialVelocity\n  nameWithType: InertiaRotationBehavior2D.InitialVelocity\n"}