{"nodes":[{"pos":[1223,1349],"content":"Represents a collection of provider objects that inherit from <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Provider.ProviderBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Represents a collection of provider objects that inherit from <xref href=\"System.Configuration.Provider.ProviderBase\"></xref>."},{"pos":[1361,1495],"content":"The ProviderCollection class utilizes an underlying <xref:System.Collections.Hashtable> object to store the provider name/value pairs.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ProviderCollection class utilizes an underlying &lt;xref:System.Collections.Hashtable&gt; object to store the provider name/value pairs.","pos":[0,134],"source":"The ProviderCollection class utilizes an underlying <xref:System.Collections.Hashtable> object to store the provider name/value pairs."}]},{"pos":[2149,2259],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Provider.ProviderCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.Provider.ProviderCollection\"></xref> class."},{"pos":[2271,2418],"content":"The ProviderCollection constructor initializes the underlying <xref:System.Collections.Hashtable> object used to store the items of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ProviderCollection constructor initializes the underlying &lt;xref:System.Collections.Hashtable&gt; object used to store the items of the collection.","pos":[0,147],"source":"The ProviderCollection constructor initializes the underlying <xref:System.Collections.Hashtable> object used to store the items of the collection."}]},{"pos":[3102,3136],"content":"Adds a provider to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a provider to the collection.","pos":[0,34]}]},{"pos":[3148,3562],"content":"The Add method first checks for any exceptions (as listed in the Exceptions section), and then calls the <xref:System.Collections.Hashtable.Add%2A?displayProperty=fullName> method. It passes in the object referenced by the `provider` parameter as well as the <xref:System.Configuration.Provider.ProviderBase.Name%2A> property of the provider to be used as the key in the <xref:System.Collections.Hashtable> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Add method first checks for any exceptions (as listed in the Exceptions section), and then calls the &lt;xref:System.Collections.Hashtable.Add%2A?displayProperty=fullName&gt; method.","pos":[0,180],"source":"The Add method first checks for any exceptions (as listed in the Exceptions section), and then calls the <xref:System.Collections.Hashtable.Add%2A?displayProperty=fullName> method."},{"content":"It passes in the object referenced by the <ph id=\"ph1\">`provider`</ph> parameter as well as the &lt;xref:System.Configuration.Provider.ProviderBase.Name%2A&gt; property of the provider to be used as the key in the &lt;xref:System.Collections.Hashtable&gt; object.","pos":[181,414],"source":" It passes in the object referenced by the `provider` parameter as well as the <xref:System.Configuration.Provider.ProviderBase.Name%2A> property of the provider to be used as the key in the <xref:System.Collections.Hashtable> object."}]},{"pos":[3774,3799],"content":"The provider to be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider to be added.","pos":[0,25]}]},{"pos":[3982,4010],"content":"The collection is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection is read-only.","pos":[0,28]}]},{"pos":[4113,4199],"content":"<ph id=\"ph1\">&lt;code&gt;provider&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>provider</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5004,5042],"content":"Removes all items from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all items from the collection.","pos":[0,38]}]},{"pos":[5291,5326],"content":"The collection is set to read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection is set to read-only.","pos":[0,35]}]},{"pos":[5922,6011],"content":"Copies the contents of the collection to the given array starting at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the contents of the collection to the given array starting at the specified index.","pos":[0,89]}]},{"pos":[6023,6095],"content":"The array into which the items are copied must have zero-based indexing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The array into which the items are copied must have zero-based indexing.","pos":[0,72]}]},{"pos":[6311,6363],"content":"The array to copy the elements of the collection to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The array to copy the elements of the collection to.","pos":[0,52]}]},{"pos":[6424,6495],"content":"The index of the collection item at which to start the copying process.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the collection item at which to start the copying process.","pos":[0,71]}]},{"pos":[6990,7037],"content":"Gets the number of providers in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of providers in the collection.","pos":[0,47]}]},{"pos":[7143,7185],"content":"The number of providers in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of providers in the collection.","pos":[0,42]}]},{"pos":[7723,7843],"content":"Returns an object that implements the <xref:System.Collections.IEnumerator> interface to iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an object that implements the &lt;xref:System.Collections.IEnumerator&gt; interface to iterate through the collection.","pos":[0,120],"source":"Returns an object that implements the <xref:System.Collections.IEnumerator> interface to iterate through the collection."}]},{"pos":[7855,8112],"content":"The <xref:System.Configuration.Provider.ProviderCollection> class stores its collection in a <xref:System.Collections.Hashtable> object. The GetEnumerator method calls the <xref:System.Collections.Hashtable.GetEnumerator%2A?displayProperty=fullName> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Configuration.Provider.ProviderCollection> class stores its collection in a <xref:System.Collections.Hashtable> object. The GetEnumerator method calls the <xref:System.Collections.Hashtable.GetEnumerator%2A?displayProperty=fullName> method.","pos":[0,257],"nodes":[{"content":"The &lt;xref:System.Configuration.Provider.ProviderCollection&gt; class stores its collection in a &lt;xref:System.Collections.Hashtable&gt; object.","pos":[0,136],"source":"The <xref:System.Configuration.Provider.ProviderCollection> class stores its collection in a <xref:System.Collections.Hashtable> object."},{"content":"The GetEnumerator method calls the &lt;xref:System.Collections.Hashtable.GetEnumerator%2A?displayProperty=fullName&gt; method.","pos":[137,257],"source":" The GetEnumerator method calls the <xref:System.Collections.Hashtable.GetEnumerator%2A?displayProperty=fullName> method."}]}]},{"pos":[8285,8383],"content":"An object that implements <xref:System.Collections.IEnumerator> to iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that implements &lt;xref:System.Collections.IEnumerator&gt; to iterate through the collection.","pos":[0,98],"source":"An object that implements <xref:System.Collections.IEnumerator> to iterate through the collection."}]},{"pos":[8930,9017],"content":"Gets a value indicating whether access to the collection is synchronized (thread safe).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether access to the collection is synchronized (thread safe).","pos":[0,87]}]},{"pos":[9029,9118],"content":"This property is included to fulfill the <xref:System.Collections.ICollection> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is included to fulfill the &lt;xref:System.Collections.ICollection&gt; interface.","pos":[0,89],"source":"This property is included to fulfill the <xref:System.Collections.ICollection> interface."}]},{"pos":[9236,9312],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in all cases.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases."},{"pos":[9864,9906],"content":"Gets the provider with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the provider with the specified name.","pos":[0,42]}]},{"pos":[10083,10127],"content":"The key by which the provider is identified.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key by which the provider is identified.","pos":[0,44]}]},{"pos":[10214,10251],"content":"The provider with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider with the specified name.","pos":[0,37]}]},{"pos":[10801,10840],"content":"Removes a provider from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a provider from the collection.","pos":[0,39]}]},{"pos":[10974,11013],"content":"The name of the provider to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the provider to be removed.","pos":[0,39]}]},{"pos":[11199,11240],"content":"The collection has been set to read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection has been set to read-only.","pos":[0,41]}]},{"pos":[11683,11719],"content":"Sets the collection to be read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the collection to be read-only.","pos":[0,36]}]},{"pos":[11732,12306],"content":"The <xref:System.Configuration.Provider.ProviderCollection> class is read/write by default. The SetReadOnly method makes the collection read-only. After a collection is set to read-only, some method calls (such as <xref:System.Configuration.Provider.ProviderCollection.Remove%2A> and <xref:System.Configuration.Provider.ProviderCollection.Add%2A> will result in an exception.       Note that most provider-based features will set their <xref:System.Configuration.Provider.ProviderCollection> object to read-only after creating instances of all of the configured providers.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <xref:System.Configuration.Provider.ProviderCollection> class is read/write by default. The SetReadOnly method makes the collection read-only. After a collection is set to read-only, some method calls (such as <xref:System.Configuration.Provider.ProviderCollection.Remove%2A> and <xref:System.Configuration.Provider.ProviderCollection.Add%2A> will result in an exception.       Note that most provider-based features will set their <xref:System.Configuration.Provider.ProviderCollection> object to read-only after creating instances of all of the configured providers.","pos":[0,572],"nodes":[{"content":"The &lt;xref:System.Configuration.Provider.ProviderCollection&gt; class is read/write by default.","pos":[0,91],"source":"The <xref:System.Configuration.Provider.ProviderCollection> class is read/write by default."},{"content":"The SetReadOnly method makes the collection read-only.","pos":[92,146]},{"content":"After a collection is set to read-only, some method calls (such as &lt;xref:System.Configuration.Provider.ProviderCollection.Remove%2A&gt; and &lt;xref:System.Configuration.Provider.ProviderCollection.Add%2A&gt; will result in an exception.","pos":[147,375],"source":" After a collection is set to read-only, some method calls (such as <xref:System.Configuration.Provider.ProviderCollection.Remove%2A> and <xref:System.Configuration.Provider.ProviderCollection.Add%2A> will result in an exception."},{"content":"Note that most provider-based features will set their &lt;xref:System.Configuration.Provider.ProviderCollection&gt; object to read-only after creating instances of all of the configured providers.","pos":[382,572],"source":"       Note that most provider-based features will set their <xref:System.Configuration.Provider.ProviderCollection> object to read-only after creating instances of all of the configured providers."}]}]},{"pos":[12892,12916],"content":"Gets the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the current object.","pos":[0,24]}]},{"pos":[12928,13017],"content":"This property is included to fulfill the <xref:System.Collections.ICollection> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is included to fulfill the &lt;xref:System.Collections.ICollection&gt; interface.","pos":[0,89],"source":"This property is included to fulfill the <xref:System.Collections.ICollection> interface."}]},{"pos":[13130,13149],"content":"The current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object.","pos":[0,19]}]},{"pos":[13911,14058],"content":"Copies the elements of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Provider.ProviderCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to an array, starting at a particular array index.","needQuote":true,"needEscape":true,"source":"Copies the elements of the <xref href=\"System.Configuration.Provider.ProviderCollection\"></xref> to an array, starting at a particular array index."},{"pos":[14070,14249],"content":"This member is an explicit interface member implementation. It can be used only when the ICollection.CopyTo instance is cast to an <xref:System.Collections.ICollection> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the ICollection.CopyTo instance is cast to an <xref:System.Collections.ICollection> interface.","pos":[0,179],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the ICollection.CopyTo instance is cast to an &lt;xref:System.Collections.ICollection&gt; interface.","pos":[60,179],"source":" It can be used only when the ICollection.CopyTo instance is cast to an <xref:System.Collections.ICollection> interface."}]}]},{"pos":[14399,14451],"content":"The array to copy the elements of the collection to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The array to copy the elements of the collection to.","pos":[0,52]}]},{"pos":[14512,14600],"content":"The index of the array at which to start copying provider instances from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the array at which to start copying provider instances from the collection.","pos":[0,88]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.Provider.ProviderCollection\n  id: ProviderCollection\n  children:\n  - System.Configuration.Provider.ProviderCollection.#ctor\n  - System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)\n  - System.Configuration.Provider.ProviderCollection.Clear\n  - System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)\n  - System.Configuration.Provider.ProviderCollection.Count\n  - System.Configuration.Provider.ProviderCollection.GetEnumerator\n  - System.Configuration.Provider.ProviderCollection.IsSynchronized\n  - System.Configuration.Provider.ProviderCollection.Item(System.String)\n  - System.Configuration.Provider.ProviderCollection.Remove(System.String)\n  - System.Configuration.Provider.ProviderCollection.SetReadOnly\n  - System.Configuration.Provider.ProviderCollection.SyncRoot\n  - System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  langs:\n  - csharp\n  name: ProviderCollection\n  nameWithType: ProviderCollection\n  fullName: System.Configuration.Provider.ProviderCollection\n  type: Class\n  summary: Represents a collection of provider objects that inherit from <xref href=\"System.Configuration.Provider.ProviderBase\"></xref>.\n  remarks: The ProviderCollection class utilizes an underlying <xref:System.Collections.Hashtable> object to store the provider name/value pairs.\n  syntax:\n    content: 'public class ProviderCollection : System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Configuration.Provider.ProviderCollection.#ctor\n  id: '#ctor'\n  parent: System.Configuration.Provider.ProviderCollection\n  langs:\n  - csharp\n  name: ProviderCollection()\n  nameWithType: ProviderCollection.ProviderCollection()\n  fullName: System.Configuration.Provider.ProviderCollection.ProviderCollection()\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Provider\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.Provider.ProviderCollection\"></xref> class.\n  remarks: The ProviderCollection constructor initializes the underlying <xref:System.Collections.Hashtable> object used to store the items of the collection.\n  syntax:\n    content: public ProviderCollection ();\n    parameters: []\n  overload: System.Configuration.Provider.ProviderCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)\n  id: Add(System.Configuration.Provider.ProviderBase)\n  parent: System.Configuration.Provider.ProviderCollection\n  langs:\n  - csharp\n  name: Add(ProviderBase)\n  nameWithType: ProviderCollection.Add(ProviderBase)\n  fullName: System.Configuration.Provider.ProviderCollection.Add(ProviderBase)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Provider\n  summary: Adds a provider to the collection.\n  remarks: The Add method first checks for any exceptions (as listed in the Exceptions section), and then calls the <xref:System.Collections.Hashtable.Add%2A?displayProperty=fullName> method. It passes in the object referenced by the `provider` parameter as well as the <xref:System.Configuration.Provider.ProviderBase.Name%2A> property of the provider to be used as the key in the <xref:System.Collections.Hashtable> object.\n  syntax:\n    content: public virtual void Add (System.Configuration.Provider.ProviderBase provider);\n    parameters:\n    - id: provider\n      type: System.Configuration.Provider.ProviderBase\n      description: The provider to be added.\n  overload: System.Configuration.Provider.ProviderCollection.Add*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The collection is read-only.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>provider</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <xref:System.Configuration.Provider.ProviderBase.Name*> of <code>provider</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n The length of the <xref:System.Configuration.Provider.ProviderBase.Name*> of <code>provider</code> is less than 1.\"\n  platform:\n  - net462\n- uid: System.Configuration.Provider.ProviderCollection.Clear\n  id: Clear\n  parent: System.Configuration.Provider.ProviderCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: ProviderCollection.Clear()\n  fullName: System.Configuration.Provider.ProviderCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Provider\n  summary: Removes all items from the collection.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Configuration.Provider.ProviderCollection.Clear*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The collection is set to read-only.\n  platform:\n  - net462\n- uid: System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)\n  id: CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)\n  parent: System.Configuration.Provider.ProviderCollection\n  langs:\n  - csharp\n  name: CopyTo(ProviderBase[],Int32)\n  nameWithType: ProviderCollection.CopyTo(ProviderBase[],Int32)\n  fullName: System.Configuration.Provider.ProviderCollection.CopyTo(ProviderBase[],Int32)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Provider\n  summary: Copies the contents of the collection to the given array starting at the specified index.\n  remarks: The array into which the items are copied must have zero-based indexing.\n  syntax:\n    content: public void CopyTo (System.Configuration.Provider.ProviderBase[] array, int index);\n    parameters:\n    - id: array\n      type: System.Configuration.Provider.ProviderBase[]\n      description: The array to copy the elements of the collection to.\n    - id: index\n      type: System.Int32\n      description: The index of the collection item at which to start the copying process.\n  overload: System.Configuration.Provider.ProviderCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Provider.ProviderCollection.Count\n  id: Count\n  parent: System.Configuration.Provider.ProviderCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ProviderCollection.Count\n  fullName: System.Configuration.Provider.ProviderCollection.Count\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Provider\n  summary: Gets the number of providers in the collection.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of providers in the collection.\n  overload: System.Configuration.Provider.ProviderCollection.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Provider.ProviderCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Configuration.Provider.ProviderCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ProviderCollection.GetEnumerator()\n  fullName: System.Configuration.Provider.ProviderCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Provider\n  summary: Returns an object that implements the <xref:System.Collections.IEnumerator> interface to iterate through the collection.\n  remarks: The <xref:System.Configuration.Provider.ProviderCollection> class stores its collection in a <xref:System.Collections.Hashtable> object. The GetEnumerator method calls the <xref:System.Collections.Hashtable.GetEnumerator%2A?displayProperty=fullName> method.\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An object that implements <xref:System.Collections.IEnumerator> to iterate through the collection.\n  overload: System.Configuration.Provider.ProviderCollection.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Provider.ProviderCollection.IsSynchronized\n  id: IsSynchronized\n  parent: System.Configuration.Provider.ProviderCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: ProviderCollection.IsSynchronized\n  fullName: System.Configuration.Provider.ProviderCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Provider\n  summary: Gets a value indicating whether access to the collection is synchronized (thread safe).\n  remarks: This property is included to fulfill the <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases.\n  overload: System.Configuration.Provider.ProviderCollection.IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Provider.ProviderCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.Configuration.Provider.ProviderCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: ProviderCollection.Item(String)\n  fullName: System.Configuration.Provider.ProviderCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Provider\n  summary: Gets the provider with the specified name.\n  syntax:\n    content: public System.Configuration.Provider.ProviderBase this[string name] { get; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The key by which the provider is identified.\n    return:\n      type: System.Configuration.Provider.ProviderBase\n      description: The provider with the specified name.\n  overload: System.Configuration.Provider.ProviderCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Provider.ProviderCollection.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Configuration.Provider.ProviderCollection\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: ProviderCollection.Remove(String)\n  fullName: System.Configuration.Provider.ProviderCollection.Remove(String)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Provider\n  summary: Removes a provider from the collection.\n  syntax:\n    content: public void Remove (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the provider to be removed.\n  overload: System.Configuration.Provider.ProviderCollection.Remove*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The collection has been set to read-only.\n  platform:\n  - net462\n- uid: System.Configuration.Provider.ProviderCollection.SetReadOnly\n  id: SetReadOnly\n  parent: System.Configuration.Provider.ProviderCollection\n  langs:\n  - csharp\n  name: SetReadOnly()\n  nameWithType: ProviderCollection.SetReadOnly()\n  fullName: System.Configuration.Provider.ProviderCollection.SetReadOnly()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Provider\n  summary: Sets the collection to be read-only.\n  remarks: \"The <xref:System.Configuration.Provider.ProviderCollection> class is read/write by default. The SetReadOnly method makes the collection read-only. After a collection is set to read-only, some method calls (such as <xref:System.Configuration.Provider.ProviderCollection.Remove%2A> and <xref:System.Configuration.Provider.ProviderCollection.Add%2A> will result in an exception.  \\n  \\n Note that most provider-based features will set their <xref:System.Configuration.Provider.ProviderCollection> object to read-only after creating instances of all of the configured providers.\"\n  syntax:\n    content: public void SetReadOnly ();\n    parameters: []\n  overload: System.Configuration.Provider.ProviderCollection.SetReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Provider.ProviderCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Configuration.Provider.ProviderCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: ProviderCollection.SyncRoot\n  fullName: System.Configuration.Provider.ProviderCollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Provider\n  summary: Gets the current object.\n  remarks: This property is included to fulfill the <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: The current object.\n  overload: System.Configuration.Provider.ProviderCollection.SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Configuration.Provider.ProviderCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ProviderCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Configuration.Provider.ProviderCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Provider\n  summary: Copies the elements of the <xref href=\"System.Configuration.Provider.ProviderCollection\"></xref> to an array, starting at a particular array index.\n  remarks: This member is an explicit interface member implementation. It can be used only when the ICollection.CopyTo instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The array to copy the elements of the collection to.\n    - id: index\n      type: System.Int32\n      description: The index of the array at which to start copying provider instances from the collection.\n  overload: System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Configuration.Provider.ProviderCollection.#ctor\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: ProviderCollection()\n  nameWithType: ProviderCollection.ProviderCollection()\n  fullName: System.Configuration.Provider.ProviderCollection.ProviderCollection()\n- uid: System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: Add(ProviderBase)\n  nameWithType: ProviderCollection.Add(ProviderBase)\n  fullName: System.Configuration.Provider.ProviderCollection.Add(ProviderBase)\n- uid: System.Configuration.Provider.ProviderBase\n  parent: System.Configuration.Provider\n  isExternal: false\n  name: ProviderBase\n  nameWithType: ProviderBase\n  fullName: System.Configuration.Provider.ProviderBase\n- uid: System.Configuration.Provider.ProviderCollection.Clear\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: ProviderCollection.Clear()\n  fullName: System.Configuration.Provider.ProviderCollection.Clear()\n- uid: System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: CopyTo(ProviderBase[],Int32)\n  nameWithType: ProviderCollection.CopyTo(ProviderBase[],Int32)\n  fullName: System.Configuration.Provider.ProviderCollection.CopyTo(ProviderBase[],Int32)\n- uid: System.Configuration.Provider.ProviderBase[]\n  parent: System.Configuration.Provider\n  isExternal: false\n  name: ProviderBase\n  nameWithType: ProviderBase\n  fullName: System.Configuration.Provider.ProviderBase[]\n  spec.csharp:\n  - uid: System.Configuration.Provider.ProviderBase\n    name: ProviderBase\n    nameWithType: ProviderBase\n    fullName: ProviderBase[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Configuration.Provider.ProviderCollection.Count\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: Count\n  nameWithType: ProviderCollection.Count\n  fullName: System.Configuration.Provider.ProviderCollection.Count\n- uid: System.Configuration.Provider.ProviderCollection.GetEnumerator\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ProviderCollection.GetEnumerator()\n  fullName: System.Configuration.Provider.ProviderCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Configuration.Provider.ProviderCollection.IsSynchronized\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: ProviderCollection.IsSynchronized\n  fullName: System.Configuration.Provider.ProviderCollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.Provider.ProviderCollection.Item(System.String)\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: ProviderCollection.Item(String)\n  fullName: System.Configuration.Provider.ProviderCollection.Item(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.Provider.ProviderCollection.Remove(System.String)\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: Remove(String)\n  nameWithType: ProviderCollection.Remove(String)\n  fullName: System.Configuration.Provider.ProviderCollection.Remove(String)\n- uid: System.Configuration.Provider.ProviderCollection.SetReadOnly\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ProviderCollection.SetReadOnly()\n  fullName: System.Configuration.Provider.ProviderCollection.SetReadOnly()\n- uid: System.Configuration.Provider.ProviderCollection.SyncRoot\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: ProviderCollection.SyncRoot\n  fullName: System.Configuration.Provider.ProviderCollection.SyncRoot\n- uid: System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ProviderCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Configuration.Provider.ProviderCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Configuration.Provider.ProviderCollection.#ctor*\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: ProviderCollection\n  nameWithType: ProviderCollection.ProviderCollection\n- uid: System.Configuration.Provider.ProviderCollection.Add*\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: Add\n  nameWithType: ProviderCollection.Add\n- uid: System.Configuration.Provider.ProviderCollection.Clear*\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: Clear\n  nameWithType: ProviderCollection.Clear\n- uid: System.Configuration.Provider.ProviderCollection.CopyTo*\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: ProviderCollection.CopyTo\n- uid: System.Configuration.Provider.ProviderCollection.Count*\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: Count\n  nameWithType: ProviderCollection.Count\n- uid: System.Configuration.Provider.ProviderCollection.GetEnumerator*\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: ProviderCollection.GetEnumerator\n- uid: System.Configuration.Provider.ProviderCollection.IsSynchronized*\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: ProviderCollection.IsSynchronized\n- uid: System.Configuration.Provider.ProviderCollection.Item*\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: Item\n  nameWithType: ProviderCollection.Item\n- uid: System.Configuration.Provider.ProviderCollection.Remove*\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: Remove\n  nameWithType: ProviderCollection.Remove\n- uid: System.Configuration.Provider.ProviderCollection.SetReadOnly*\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: SetReadOnly\n  nameWithType: ProviderCollection.SetReadOnly\n- uid: System.Configuration.Provider.ProviderCollection.SyncRoot*\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: ProviderCollection.SyncRoot\n- uid: System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo*\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: ProviderCollection.System.Collections.ICollection.CopyTo\n"}