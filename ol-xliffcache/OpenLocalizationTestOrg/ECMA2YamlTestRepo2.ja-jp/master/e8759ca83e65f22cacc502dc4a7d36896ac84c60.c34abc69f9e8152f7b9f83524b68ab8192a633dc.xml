{"nodes":[{"pos":[967,1105],"content":"Represents a civic address. A civic address can include fields such as street address, postal code, state/province, and country or region.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a civic address. A civic address can include fields such as street address, postal code, state/province, and country or region.","pos":[0,138],"nodes":[{"content":"Represents a civic address.","pos":[0,27]},{"content":"A civic address can include fields such as street address, postal code, state/province, and country or region.","pos":[28,138]}]}]},{"pos":[1118,1865],"content":"A civic address for a location can be obtained from a <xref:System.Device.Location.GeoCoordinate> by using a class that implements <xref:System.Device.Location.ICivicAddressResolver>.       The <xref:System.Device.Location.CivicAddressResolver> class provides a default implementation that returns the civic address that corresponds to a <xref:System.Device.Location.GeoCoordinate>, if the location source provides both coordinate data as well as civic address data.       <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> returns a CivicAddress for the current location.  If the location source is unable to resolve the coordinate position to a civic address, <xref:System.Device.Location.CivicAddress.Unknown> is returned.","needQuote":false,"needEscape":true,"nodes":[{"content":"A civic address for a location can be obtained from a <xref:System.Device.Location.GeoCoordinate> by using a class that implements <xref:System.Device.Location.ICivicAddressResolver>.       The <xref:System.Device.Location.CivicAddressResolver> class provides a default implementation that returns the civic address that corresponds to a <xref:System.Device.Location.GeoCoordinate>, if the location source provides both coordinate data as well as civic address data.       <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> returns a CivicAddress for the current location.  If the location source is unable to resolve the coordinate position to a civic address, <xref:System.Device.Location.CivicAddress.Unknown> is returned.","pos":[0,743],"nodes":[{"content":"A civic address for a location can be obtained from a &lt;xref:System.Device.Location.GeoCoordinate&gt; by using a class that implements &lt;xref:System.Device.Location.ICivicAddressResolver&gt;.","pos":[0,183],"source":"A civic address for a location can be obtained from a <xref:System.Device.Location.GeoCoordinate> by using a class that implements <xref:System.Device.Location.ICivicAddressResolver>."},{"content":"The &lt;xref:System.Device.Location.CivicAddressResolver&gt; class provides a default implementation that returns the civic address that corresponds to a &lt;xref:System.Device.Location.GeoCoordinate&gt;, if the location source provides both coordinate data as well as civic address data.","pos":[190,466],"source":"       The <xref:System.Device.Location.CivicAddressResolver> class provides a default implementation that returns the civic address that corresponds to a <xref:System.Device.Location.GeoCoordinate>, if the location source provides both coordinate data as well as civic address data."},{"content":"&lt;xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A&gt; returns a CivicAddress for the current location.","pos":[473,590],"source":"       <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> returns a CivicAddress for the current location."},{"content":"If the location source is unable to resolve the coordinate position to a civic address, &lt;xref:System.Device.Location.CivicAddress.Unknown&gt; is returned.","pos":[592,743],"source":"  If the location source is unable to resolve the coordinate position to a civic address, <xref:System.Device.Location.CivicAddress.Unknown> is returned."}]}]},{"pos":[3248,3345],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.CivicAddress\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Device.Location.CivicAddress\"></xref> class."},{"pos":[3357,3414],"content":"All fields are initialized to <xref:System.String.Empty>.","needQuote":true,"needEscape":true,"nodes":[{"content":"All fields are initialized to &lt;xref:System.String.Empty&gt;.","pos":[0,57],"source":"All fields are initialized to <xref:System.String.Empty>."}]},{"pos":[4325,4448],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.CivicAddress\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using address information.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Device.Location.CivicAddress\"></xref> class using address information."},{"pos":[4732,4789],"content":"A string containing the first line of the street address.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing the first line of the street address.","pos":[0,57]}]},{"pos":[4858,4916],"content":"A string containing the second line of the street address.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing the second line of the street address.","pos":[0,58]}]},{"pos":[4981,5029],"content":"A string containing the building name or number.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing the building name or number.","pos":[0,48]}]},{"pos":[5090,5119],"content":"A string containing the city.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing the city.","pos":[0,29]}]},{"pos":[5189,5231],"content":"A string containing the country or region.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing the country or region.","pos":[0,42]}]},{"pos":[5298,5335],"content":"A string containing the floor number.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing the floor number.","pos":[0,37]}]},{"pos":[5402,5438],"content":"A string containing the postal code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing the postal code.","pos":[0,36]}]},{"pos":[5508,5550],"content":"A string containing the state or province.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing the state or province.","pos":[0,42]}]},{"pos":[5714,5764],"content":"At least one parameter must be a non-empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"At least one parameter must be a non-empty string.","pos":[0,50]}]},{"pos":[6149,6192],"content":"Gets or sets the first line of the address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the first line of the address.","pos":[0,43]}]},{"pos":[6314,6411],"content":"Returns the first line of the address. If the data is not provided, returns <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the first line of the address. If the data is not provided, returns <xref:System.String>.","pos":[0,97],"nodes":[{"content":"Returns the first line of the address.","pos":[0,38]},{"content":"If the data is not provided, returns &lt;xref:System.String&gt;.","pos":[39,97],"source":" If the data is not provided, returns <xref:System.String>."}]}]},{"pos":[6875,6919],"content":"Gets or sets the second line of the address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the second line of the address.","pos":[0,44]}]},{"pos":[7041,7145],"content":"Returns the second line of the address. If the data is not provided, returns <xref:System.String.Empty.>","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the second line of the address. If the data is not provided, returns <xref:System.String.Empty.>","pos":[0,104],"nodes":[{"content":"Returns the second line of the address.","pos":[0,39]},{"content":"If the data is not provided, returns &lt;xref:System.String.Empty.&gt;","pos":[40,104],"source":" If the data is not provided, returns <xref:System.String.Empty.>"}]}]},{"pos":[7589,7630],"content":"Gets or sets the building name or number.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the building name or number.","pos":[0,41]}]},{"pos":[7748,7843],"content":"Returns the building name or number. If the data is not provided, returns <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the building name or number. If the data is not provided, returns <xref:System.String>.","pos":[0,95],"nodes":[{"content":"Returns the building name or number.","pos":[0,36]},{"content":"If the data is not provided, returns &lt;xref:System.String&gt;.","pos":[37,95],"source":" If the data is not provided, returns <xref:System.String>."}]}]},{"pos":[8263,8297],"content":"Gets or sets the name of the city.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the city.","pos":[0,34]}]},{"pos":[8411,8499],"content":"Returns the name of the city. If the data is not provided, returns <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the name of the city. If the data is not provided, returns <xref:System.String>.","pos":[0,88],"nodes":[{"content":"Returns the name of the city.","pos":[0,29]},{"content":"If the data is not provided, returns &lt;xref:System.String&gt;.","pos":[30,88],"source":" If the data is not provided, returns <xref:System.String>."}]}]},{"pos":[8960,9011],"content":"Gets or sets the country or region of the location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the country or region of the location.","pos":[0,51]}]},{"pos":[9023,9108],"content":"The country or region is typically represented by a two-letter ISO-3166 country code.","needQuote":true,"needEscape":true,"nodes":[{"content":"The country or region is typically represented by a two-letter ISO-3166 country code.","pos":[0,85]}]},{"pos":[9231,9325],"content":"Returns the country or region code. If the data is not provided, returns <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the country or region code. If the data is not provided, returns <xref:System.String>.","pos":[0,94],"nodes":[{"content":"Returns the country or region code.","pos":[0,35]},{"content":"If the data is not provided, returns &lt;xref:System.String&gt;.","pos":[36,94],"source":" If the data is not provided, returns <xref:System.String>."}]}]},{"pos":[9780,9825],"content":"Gets or sets the floor level of the location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the floor level of the location.","pos":[0,45]}]},{"pos":[9945,10051],"content":"Returns a string that contains the floor level. If the data is not provided, returns <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string that contains the floor level. If the data is not provided, returns <xref:System.String>.","pos":[0,106],"nodes":[{"content":"Returns a string that contains the floor level.","pos":[0,47]},{"content":"If the data is not provided, returns &lt;xref:System.String&gt;.","pos":[48,106],"source":" If the data is not provided, returns <xref:System.String>."}]}]},{"pos":[10498,10609],"content":"Gets a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.CivicAddress\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contains data.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether the <xref href=\"System.Device.Location.CivicAddress\"></xref> contains data."},{"pos":[11268,11545],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Device.Location.CivicAddress\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is equal to <bpt id=\"p3\">&lt;xref href=\"System.Device.Location.CivicAddress.Unknown\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Device.Location.CivicAddress\"></xref> is equal to <xref href=\"System.Device.Location.CivicAddress.Unknown\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11996,12041],"content":"Gets or sets the postal code of the location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the postal code of the location.","pos":[0,45]}]},{"pos":[12161,12260],"content":"Returns the postal code of the location. If the data is not provided, returns <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the postal code of the location. If the data is not provided, returns <xref:System.String>.","pos":[0,99],"nodes":[{"content":"Returns the postal code of the location.","pos":[0,40]},{"content":"If the data is not provided, returns &lt;xref:System.String&gt;.","pos":[41,99],"source":" If the data is not provided, returns <xref:System.String>."}]}]},{"pos":[12727,12778],"content":"Gets or sets the state or province of the location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the state or province of the location.","pos":[0,51]}]},{"pos":[12901,13006],"content":"Returns the state or province of the location. If the data is not provided, returns <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the state or province of the location. If the data is not provided, returns <xref:System.String>.","pos":[0,105],"nodes":[{"content":"Returns the state or province of the location.","pos":[0,46]},{"content":"If the data is not provided, returns &lt;xref:System.String&gt;.","pos":[47,105],"source":" If the data is not provided, returns <xref:System.String>."}]}]},{"pos":[13443,13535],"content":"Represents a <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.CivicAddress\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains no data.","needQuote":true,"needEscape":true,"source":"Represents a <xref href=\"System.Device.Location.CivicAddress\"></xref> that contains no data."},{"pos":[13547,13684],"content":"Use <xref:System.Device.Location.CivicAddress.IsUnknown%2A> to verify whether a <xref:System.Device.Location.CivicAddress> contains data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use &lt;xref:System.Device.Location.CivicAddress.IsUnknown%2A&gt; to verify whether a &lt;xref:System.Device.Location.CivicAddress&gt; contains data.","pos":[0,137],"source":"Use <xref:System.Device.Location.CivicAddress.IsUnknown%2A> to verify whether a <xref:System.Device.Location.CivicAddress> contains data."}]},{"pos":[14433,14445],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Device.Location.CivicAddress\n  id: CivicAddress\n  children:\n  - System.Device.Location.CivicAddress.#ctor\n  - System.Device.Location.CivicAddress.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)\n  - System.Device.Location.CivicAddress.AddressLine1\n  - System.Device.Location.CivicAddress.AddressLine2\n  - System.Device.Location.CivicAddress.Building\n  - System.Device.Location.CivicAddress.City\n  - System.Device.Location.CivicAddress.CountryRegion\n  - System.Device.Location.CivicAddress.FloorLevel\n  - System.Device.Location.CivicAddress.IsUnknown\n  - System.Device.Location.CivicAddress.PostalCode\n  - System.Device.Location.CivicAddress.StateProvince\n  - System.Device.Location.CivicAddress.Unknown\n  langs:\n  - csharp\n  name: CivicAddress\n  nameWithType: CivicAddress\n  fullName: System.Device.Location.CivicAddress\n  type: Class\n  summary: Represents a civic address. A civic address can include fields such as street address, postal code, state/province, and country or region.\n  remarks: \"A civic address for a location can be obtained from a <xref:System.Device.Location.GeoCoordinate> by using a class that implements <xref:System.Device.Location.ICivicAddressResolver>.  \\n  \\n The <xref:System.Device.Location.CivicAddressResolver> class provides a default implementation that returns the civic address that corresponds to a <xref:System.Device.Location.GeoCoordinate>, if the location source provides both coordinate data as well as civic address data.  \\n  \\n <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> returns a CivicAddress for the current location.  If the location source is unable to resolve the coordinate position to a civic address, <xref:System.Device.Location.CivicAddress.Unknown> is returned.\"\n  example:\n  - \"The following example shows how to resolve a CivicAddress from a <xref:System.Device.Location.GeoCoordinate> location synchronously.  \\n  \\n [!code-cs[System.Device.Location.ResolveCivicAddressSync#1](~/add/codesnippet/csharp/resolveaddresssync/resolvecivicaddresssync.cs#1)]\\n [!code-vb[System.Device.Location.ResolveCivicAddressSync#1](~/add/codesnippet/visualbasic/resolvecivicaddresssync/resolvecivicaddresssync.vb#1)]  \\n  \\n The following example shows how to resolve a CivicAddress from a <xref:System.Device.Location.GeoCoordinate> location asynchronously.  \\n  \\n [!code-cs[System.Device.Location.ResolveCivicAddressAsync#1](~/add/codesnippet/csharp/resolveaddressasync/resolvecivicaddressasync.cs#1)]\\n [!code-vb[System.Device.Location.ResolveCivicAddressAsync#1](~/add/codesnippet/visualbasic/resolvecivicaddressasync/resolvecivicaddressasync.vb#1)]\"\n  syntax:\n    content: public class CivicAddress\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Device.Location.CivicAddress.#ctor\n  id: '#ctor'\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: CivicAddress()\n  nameWithType: CivicAddress.CivicAddress()\n  fullName: System.Device.Location.CivicAddress.CivicAddress()\n  type: Constructor\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Initializes a new instance of the <xref href=\"System.Device.Location.CivicAddress\"></xref> class.\n  remarks: All fields are initialized to <xref:System.String.Empty>.\n  syntax:\n    content: public CivicAddress ();\n    parameters: []\n  overload: System.Device.Location.CivicAddress.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.CivicAddress.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)'\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: CivicAddress(String,String,String,String,String,String,String,String)\n  nameWithType: CivicAddress.CivicAddress(String,String,String,String,String,String,String,String)\n  fullName: System.Device.Location.CivicAddress.CivicAddress(String,String,String,String,String,String,String,String)\n  type: Constructor\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Initializes a new instance of the <xref href=\"System.Device.Location.CivicAddress\"></xref> class using address information.\n  syntax:\n    content: public CivicAddress (string addressLine1, string addressLine2, string building, string city, string countryRegion, string floorLevel, string postalCode, string stateProvince);\n    parameters:\n    - id: addressLine1\n      type: System.String\n      description: A string containing the first line of the street address.\n    - id: addressLine2\n      type: System.String\n      description: A string containing the second line of the street address.\n    - id: building\n      type: System.String\n      description: A string containing the building name or number.\n    - id: city\n      type: System.String\n      description: A string containing the city.\n    - id: countryRegion\n      type: System.String\n      description: A string containing the country or region.\n    - id: floorLevel\n      type: System.String\n      description: A string containing the floor number.\n    - id: postalCode\n      type: System.String\n      description: A string containing the postal code.\n    - id: stateProvince\n      type: System.String\n      description: A string containing the state or province.\n  overload: System.Device.Location.CivicAddress.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: At least one parameter must be a non-empty string.\n  platform:\n  - net462\n- uid: System.Device.Location.CivicAddress.AddressLine1\n  id: AddressLine1\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: AddressLine1\n  nameWithType: CivicAddress.AddressLine1\n  fullName: System.Device.Location.CivicAddress.AddressLine1\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the first line of the address.\n  syntax:\n    content: public string AddressLine1 { get; set; }\n    return:\n      type: System.String\n      description: Returns the first line of the address. If the data is not provided, returns <xref:System.String>.\n  overload: System.Device.Location.CivicAddress.AddressLine1*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.CivicAddress.AddressLine2\n  id: AddressLine2\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: AddressLine2\n  nameWithType: CivicAddress.AddressLine2\n  fullName: System.Device.Location.CivicAddress.AddressLine2\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the second line of the address.\n  syntax:\n    content: public string AddressLine2 { get; set; }\n    return:\n      type: System.String\n      description: Returns the second line of the address. If the data is not provided, returns <xref:System.String.Empty.>\n  overload: System.Device.Location.CivicAddress.AddressLine2*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.CivicAddress.Building\n  id: Building\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: Building\n  nameWithType: CivicAddress.Building\n  fullName: System.Device.Location.CivicAddress.Building\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the building name or number.\n  syntax:\n    content: public string Building { get; set; }\n    return:\n      type: System.String\n      description: Returns the building name or number. If the data is not provided, returns <xref:System.String>.\n  overload: System.Device.Location.CivicAddress.Building*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.CivicAddress.City\n  id: City\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: City\n  nameWithType: CivicAddress.City\n  fullName: System.Device.Location.CivicAddress.City\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the name of the city.\n  syntax:\n    content: public string City { get; set; }\n    return:\n      type: System.String\n      description: Returns the name of the city. If the data is not provided, returns <xref:System.String>.\n  overload: System.Device.Location.CivicAddress.City*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.CivicAddress.CountryRegion\n  id: CountryRegion\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: CountryRegion\n  nameWithType: CivicAddress.CountryRegion\n  fullName: System.Device.Location.CivicAddress.CountryRegion\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the country or region of the location.\n  remarks: The country or region is typically represented by a two-letter ISO-3166 country code.\n  syntax:\n    content: public string CountryRegion { get; set; }\n    return:\n      type: System.String\n      description: Returns the country or region code. If the data is not provided, returns <xref:System.String>.\n  overload: System.Device.Location.CivicAddress.CountryRegion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.CivicAddress.FloorLevel\n  id: FloorLevel\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: FloorLevel\n  nameWithType: CivicAddress.FloorLevel\n  fullName: System.Device.Location.CivicAddress.FloorLevel\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the floor level of the location.\n  syntax:\n    content: public string FloorLevel { get; set; }\n    return:\n      type: System.String\n      description: Returns a string that contains the floor level. If the data is not provided, returns <xref:System.String>.\n  overload: System.Device.Location.CivicAddress.FloorLevel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.CivicAddress.IsUnknown\n  id: IsUnknown\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: IsUnknown\n  nameWithType: CivicAddress.IsUnknown\n  fullName: System.Device.Location.CivicAddress.IsUnknown\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets a value that indicates whether the <xref href=\"System.Device.Location.CivicAddress\"></xref> contains data.\n  remarks: ''\n  example:\n  - \"The following example uses IsUnknown to check the <xref:System.Device.Location.CivicAddress> that is returned from <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> before the civic address is printed out.  \\n  \\n [!code-cs[System.Device.Location.ResolveCivicAddressSync#2](~/add/codesnippet/csharp/resolveaddresssync/resolvecivicaddresssync.cs#2)]\\n [!code-vb[System.Device.Location.ResolveCivicAddressSync#2](~/add/codesnippet/visualbasic/resolvecivicaddresssync/resolvecivicaddresssync.vb#2)]\"\n  syntax:\n    content: public bool IsUnknown { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Device.Location.CivicAddress\"></xref> is equal to <xref href=\"System.Device.Location.CivicAddress.Unknown\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Device.Location.CivicAddress.IsUnknown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.CivicAddress.PostalCode\n  id: PostalCode\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: PostalCode\n  nameWithType: CivicAddress.PostalCode\n  fullName: System.Device.Location.CivicAddress.PostalCode\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the postal code of the location.\n  syntax:\n    content: public string PostalCode { get; set; }\n    return:\n      type: System.String\n      description: Returns the postal code of the location. If the data is not provided, returns <xref:System.String>.\n  overload: System.Device.Location.CivicAddress.PostalCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.CivicAddress.StateProvince\n  id: StateProvince\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: StateProvince\n  nameWithType: CivicAddress.StateProvince\n  fullName: System.Device.Location.CivicAddress.StateProvince\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the state or province of the location.\n  syntax:\n    content: public string StateProvince { get; set; }\n    return:\n      type: System.String\n      description: Returns the state or province of the location. If the data is not provided, returns <xref:System.String>.\n  overload: System.Device.Location.CivicAddress.StateProvince*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.CivicAddress.Unknown\n  id: Unknown\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: Unknown\n  nameWithType: CivicAddress.Unknown\n  fullName: System.Device.Location.CivicAddress.Unknown\n  type: Field\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Represents a <xref href=\"System.Device.Location.CivicAddress\"></xref> that contains no data.\n  remarks: Use <xref:System.Device.Location.CivicAddress.IsUnknown%2A> to verify whether a <xref:System.Device.Location.CivicAddress> contains data.\n  example:\n  - \"The following example uses <xref:System.Device.Location.CivicAddress.IsUnknown%2A> to check the <xref:System.Device.Location.CivicAddress> that is returned from <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> before the civic address is printed out.  \\n  \\n [!code-cs[System.Device.Location.ResolveCivicAddressSync#2](~/add/codesnippet/csharp/resolveaddresssync/resolvecivicaddresssync.cs#2)]\\n [!code-vb[System.Device.Location.ResolveCivicAddressSync#2](~/add/codesnippet/visualbasic/resolvecivicaddresssync/resolvecivicaddresssync.vb#2)]\"\n  syntax:\n    content: public static readonly System.Device.Location.CivicAddress Unknown;\n    return:\n      type: System.Device.Location.CivicAddress\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Device.Location.CivicAddress.#ctor\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: CivicAddress()\n  nameWithType: CivicAddress.CivicAddress()\n  fullName: System.Device.Location.CivicAddress.CivicAddress()\n- uid: System.Device.Location.CivicAddress.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: CivicAddress(String,String,String,String,String,String,String,String)\n  nameWithType: CivicAddress.CivicAddress(String,String,String,String,String,String,String,String)\n  fullName: System.Device.Location.CivicAddress.CivicAddress(String,String,String,String,String,String,String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Device.Location.CivicAddress.AddressLine1\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: AddressLine1\n  nameWithType: CivicAddress.AddressLine1\n  fullName: System.Device.Location.CivicAddress.AddressLine1\n- uid: System.Device.Location.CivicAddress.AddressLine2\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: AddressLine2\n  nameWithType: CivicAddress.AddressLine2\n  fullName: System.Device.Location.CivicAddress.AddressLine2\n- uid: System.Device.Location.CivicAddress.Building\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: Building\n  nameWithType: CivicAddress.Building\n  fullName: System.Device.Location.CivicAddress.Building\n- uid: System.Device.Location.CivicAddress.City\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: City\n  nameWithType: CivicAddress.City\n  fullName: System.Device.Location.CivicAddress.City\n- uid: System.Device.Location.CivicAddress.CountryRegion\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: CountryRegion\n  nameWithType: CivicAddress.CountryRegion\n  fullName: System.Device.Location.CivicAddress.CountryRegion\n- uid: System.Device.Location.CivicAddress.FloorLevel\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: FloorLevel\n  nameWithType: CivicAddress.FloorLevel\n  fullName: System.Device.Location.CivicAddress.FloorLevel\n- uid: System.Device.Location.CivicAddress.IsUnknown\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: IsUnknown\n  nameWithType: CivicAddress.IsUnknown\n  fullName: System.Device.Location.CivicAddress.IsUnknown\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Device.Location.CivicAddress.PostalCode\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: PostalCode\n  nameWithType: CivicAddress.PostalCode\n  fullName: System.Device.Location.CivicAddress.PostalCode\n- uid: System.Device.Location.CivicAddress.StateProvince\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: StateProvince\n  nameWithType: CivicAddress.StateProvince\n  fullName: System.Device.Location.CivicAddress.StateProvince\n- uid: System.Device.Location.CivicAddress.Unknown\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: Unknown\n  nameWithType: CivicAddress.Unknown\n  fullName: System.Device.Location.CivicAddress.Unknown\n- uid: System.Device.Location.CivicAddress\n  parent: System.Device.Location\n  isExternal: false\n  name: CivicAddress\n  nameWithType: CivicAddress\n  fullName: System.Device.Location.CivicAddress\n- uid: System.Device.Location.CivicAddress.#ctor*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: CivicAddress\n  nameWithType: CivicAddress.CivicAddress\n- uid: System.Device.Location.CivicAddress.AddressLine1*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: AddressLine1\n  nameWithType: CivicAddress.AddressLine1\n- uid: System.Device.Location.CivicAddress.AddressLine2*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: AddressLine2\n  nameWithType: CivicAddress.AddressLine2\n- uid: System.Device.Location.CivicAddress.Building*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: Building\n  nameWithType: CivicAddress.Building\n- uid: System.Device.Location.CivicAddress.City*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: City\n  nameWithType: CivicAddress.City\n- uid: System.Device.Location.CivicAddress.CountryRegion*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: CountryRegion\n  nameWithType: CivicAddress.CountryRegion\n- uid: System.Device.Location.CivicAddress.FloorLevel*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: FloorLevel\n  nameWithType: CivicAddress.FloorLevel\n- uid: System.Device.Location.CivicAddress.IsUnknown*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: IsUnknown\n  nameWithType: CivicAddress.IsUnknown\n- uid: System.Device.Location.CivicAddress.PostalCode*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: PostalCode\n  nameWithType: CivicAddress.PostalCode\n- uid: System.Device.Location.CivicAddress.StateProvince*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: StateProvince\n  nameWithType: CivicAddress.StateProvince\n"}