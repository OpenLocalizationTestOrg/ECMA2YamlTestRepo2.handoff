{"nodes":[{"pos":[3361,3542],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that processes security tokens of type <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that processes security tokens of type <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>."},{"pos":[13648,13824],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the default cookie transforms and token lifetime.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> class that uses the default cookie transforms and token lifetime."},{"pos":[13836,14201],"content":"The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> properties are initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt; and &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt; properties are initialized to &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt; and &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms&gt;.","pos":[0,365],"source":"The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> properties are initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>."}]},{"pos":[15171,15330],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the specified cookie transforms.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> class that uses the specified cookie transforms."},{"pos":[15342,15532],"content":"The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt; property is initialized to &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;.","pos":[0,190],"source":"The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>."}]},{"pos":[15849,16004],"content":"The transforms to apply when encoding or decoding the cookie. Sets the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transforms to apply when encoding or decoding the cookie. Sets the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*> property.","pos":[0,155],"nodes":[{"content":"The transforms to apply when encoding or decoding the cookie.","pos":[0,61]},{"content":"Sets the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*&gt; property.","pos":[62,155],"source":" Sets the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*> property."}]}]},{"pos":[16196,16284],"content":"<ph id=\"ph1\">&lt;code&gt;transforms&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>transforms</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[17140,17318],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the specified cookie transforms and token lifetime.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> class that uses the specified cookie transforms and token lifetime."},{"pos":[17659,17814],"content":"The transforms to apply when encoding or decoding the cookie. Sets the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transforms to apply when encoding or decoding the cookie. Sets the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*> property.","pos":[0,155],"nodes":[{"content":"The transforms to apply when encoding or decoding the cookie.","pos":[0,61]},{"content":"Sets the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*&gt; property.","pos":[62,155],"source":" Sets the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*> property."}]}]},{"pos":[17886,18016],"content":"The default lifetime for a token. Sets the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default lifetime for a token. Sets the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime*> property.","pos":[0,130],"nodes":[{"content":"The default lifetime for a token.","pos":[0,33]},{"content":"Sets the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime*&gt; property.","pos":[34,130],"source":" Sets the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime*> property."}]}]},{"pos":[18208,18296],"content":"<ph id=\"ph1\">&lt;code&gt;transforms&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>transforms</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[18407,18518],"content":"<ph id=\"ph1\">&lt;code&gt;tokenLifetime&lt;/code&gt;</ph> is less than or equal to <ph id=\"ph2\">&amp;lt;</ph>xref:System.TimeSpan.Zero?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>tokenLifetime</code> is less than or equal to &lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;."},{"pos":[19111,19283],"content":"Applies the transforms specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*> property to either encode or decode the specified cookie.","needQuote":true,"needEscape":true,"nodes":[{"content":"Applies the transforms specified by the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*&gt; property to either encode or decode the specified cookie.","pos":[0,172],"source":"Applies the transforms specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*> property to either encode or decode the specified cookie."}]},{"pos":[19296,19763],"content":"When encoding a cookie transforms are applied in the order in which they appear in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property. When decoding a cookie, they are applied in the reverse order.       Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and [qualifyHint=False&autoUpgrade=True](~/add/includes/ajax-current-ext-md.md) methods to encode and decode the cookie material.","needQuote":false,"needEscape":true,"nodes":[{"content":"When encoding a cookie transforms are applied in the order in which they appear in the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt; property.","pos":[0,173],"source":"When encoding a cookie transforms are applied in the order in which they appear in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property."},{"content":"When decoding a cookie, they are applied in the reverse order.","pos":[174,236]},{"content":"Called from the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt; and <bpt id=\"p1\">[</bpt>qualifyHint=False&amp;autoUpgrade=True<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> methods to encode and decode the cookie material.","pos":[243,465],"source":"       Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and [qualifyHint=False&autoUpgrade=True](~/add/includes/ajax-current-ext-md.md) methods to encode and decode the cookie material."}]},{"pos":[19939,19975],"content":"The cookie that will be transformed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cookie that will be transformed.","pos":[0,36]}]},{"pos":[20041,20230],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the cookie should be encoded; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the cookie should be decoded.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the cookie should be encoded; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the cookie should be decoded."},{"pos":[20288,20318],"content":"The encoded or decoded cookie.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encoded or decoded cookie.","pos":[0,30]}]},{"pos":[20528,20680],"content":"The &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[21227,21421],"content":"Returns a value that indicates whether the reader is positioned at a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;wsc:SecurityContextToken&amp;gt;\" name=\"&amp;lt;wsc:SecurityContextToken&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the reader is positioned at a <xref uid=\"langword_csharp_&lt;wsc:SecurityContextToken&gt;\" name=\"&lt;wsc:SecurityContextToken&gt;\" href=\"\"></xref> element."},{"pos":[21595,21871],"content":"The <xref:System.Xml.XmlReader> over the incoming <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref>. The reader should be positioned at a <xref uid=\"langword_csharp_&lt;wsc:SecurityContextToken&gt;\" name=\"&lt;wsc:SecurityContextToken&gt;\" href=\"\"></xref> element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Xml.XmlReader&gt; over the incoming <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,113],"source":"The <xref:System.Xml.XmlReader> over the incoming <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref>."},{"content":"The reader should be positioned at a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;wsc:SecurityContextToken&amp;gt;\" name=\"&amp;lt;wsc:SecurityContextToken&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","pos":[114,276],"source":" The reader should be positioned at a <xref uid=\"langword_csharp_&lt;wsc:SecurityContextToken&gt;\" name=\"&lt;wsc:SecurityContextToken&gt;\" href=\"\"></xref> element."}]},{"pos":[21930,22217],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the reader points to a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;wsc:SecurityContextToken&amp;gt;\" name=\"&amp;lt;wsc:SecurityContextToken&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the reader points to a <xref uid=\"langword_csharp_&lt;wsc:SecurityContextToken&gt;\" name=\"&lt;wsc:SecurityContextToken&gt;\" href=\"\"></xref> element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22416,22500],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[22992,23149],"content":"Gets a value that indicates whether this handler supports validation of tokens of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>."},{"pos":[23278,23606],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the handler supports validation of tokens of type <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,259],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[260,328],"source":" Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[24186,24330],"content":"Gets a value that indicates whether this handler can write tokens of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>."},{"pos":[24456,24771],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the handler can write tokens of type <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,246],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[247,315],"source":" Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[25368,25405],"content":"Gets the name for the cookie element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name for the cookie element.","pos":[0,37]}]},{"pos":[25417,25701],"content":"This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the element under which the encoded token material should be written or read.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is used in the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt; and &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt; methods to determine the element under which the encoded token material should be written or read.","pos":[0,284],"source":"This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the element under which the encoded token material should be written or read."}]},{"pos":[25831,25901],"content":"The name for the cookie element. The default element name is “Cookie”.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name for the cookie element. The default element name is “Cookie”.","pos":[0,70],"nodes":[{"content":"The name for the cookie element.","pos":[0,32]},{"content":"The default element name is “Cookie”.","pos":[33,70]}]}]},{"pos":[26492,26534],"content":"Gets the namespace for the cookie element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the namespace for the cookie element.","pos":[0,42]}]},{"pos":[26546,26847],"content":"This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the namespace of the element under which the encoded token material should be written or read.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is used in the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt; and &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt; methods to determine the namespace of the element under which the encoded token material should be written or read.","pos":[0,301],"source":"This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the namespace of the element under which the encoded token material should be written or read."}]},{"pos":[26975,27089],"content":"The namespace for the cookie element. The default namespace is “http://schemas.microsoft.com/ws/2006/05/security”.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace for the cookie element. The default namespace is “http://schemas.microsoft.com/ws/2006/05/security”.","pos":[0,114],"nodes":[{"content":"The namespace for the cookie element.","pos":[0,37]},{"content":"The default namespace is “http://schemas.microsoft.com/ws/2006/05/security”.","pos":[38,114]}]}]},{"pos":[28078,28245],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> based on the specified claims principal and time range during which the token is valid.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> based on the specified claims principal and time range during which the token is valid."},{"pos":[28591,28612],"content":"The claims principal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The claims principal.","pos":[0,21]}]},{"pos":[28676,28708],"content":"A caller-defined context string.","needQuote":true,"needEscape":true,"nodes":[{"content":"A caller-defined context string.","pos":[0,32]}]},{"pos":[28775,28835],"content":"The identifier of the endpoint to which the token is scoped.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the endpoint to which the token is scoped.","pos":[0,60]}]},{"pos":[28903,28953],"content":"The time instant at which the token becomes valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time instant at which the token becomes valid.","pos":[0,50]}]},{"pos":[29019,29077],"content":"The time instant after which the token is no longer valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time instant after which the token is no longer valid.","pos":[0,58]}]},{"pos":[29170,29301],"content":"The session security token that was created. The properties on the new session token are set according to the specified parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The session security token that was created. The properties on the new session token are set according to the specified parameters.","pos":[0,131],"nodes":[{"content":"The session security token that was created.","pos":[0,44]},{"content":"The properties on the new session token are set according to the specified parameters.","pos":[45,131]}]}]},{"pos":[29514,29601],"content":"<ph id=\"ph1\">&lt;code&gt;principal&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>principal</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[29712,29860],"content":"The &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[30506,30571],"content":"Creates a security token based on the specified token descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a security token based on the specified token descriptor.","pos":[0,65]}]},{"pos":[30584,31346],"content":"Creates and returns a session security token by using the following properties in the token descriptor: <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=fullName>, and <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=fullName>. If the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=fullName> property is set `true` on the token handler configuration specified by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property, the bootstrap context is created from the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=fullName> property and is saved in the session token.","needQuote":false,"needEscape":true,"nodes":[{"content":"Creates and returns a session security token by using the following properties in the token descriptor: &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=fullName&gt;, and &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=fullName&gt;.","pos":[0,300],"source":"Creates and returns a session security token by using the following properties in the token descriptor: <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=fullName>, and <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=fullName>."},{"content":"If the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=fullName&gt; property is set <ph id=\"ph1\">`true`</ph> on the token handler configuration specified by the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt; property, the bootstrap context is created from the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=fullName&gt; property and is saved in the session token.","pos":[301,762],"source":" If the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=fullName> property is set `true` on the token handler configuration specified by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property, the bootstrap context is created from the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=fullName> property and is saved in the session token."}]},{"pos":[31637,31689],"content":"The token descriptor from which to create the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token descriptor from which to create the token.","pos":[0,52]}]},{"pos":[31775,31910],"content":"The security token that was created. This will be an instance of <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security token that was created.","pos":[0,36]},{"content":"This will be an instance of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[37,135],"source":" This will be an instance of <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>."}]},{"pos":[32108,32201],"content":"<ph id=\"ph1\">&lt;code&gt;tokenDescriptor&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>tokenDescriptor</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[32312,32460],"content":"The &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[32984,33226],"content":"A read only collection that contains the list of default transforms to be applied to cookies, the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.DeflateCookieTransform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.ProtectedDataCookieTransform\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A read only collection that contains the list of default transforms to be applied to cookies, the <xref href=\"System.IdentityModel.DeflateCookieTransform\"></xref> and the <xref href=\"System.IdentityModel.ProtectedDataCookieTransform\"></xref>."},{"pos":[33517,33529],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34030,34100],"content":"A constant that specifies the default lifetime for cookies, ten hours.","needQuote":true,"needEscape":true,"nodes":[{"content":"A constant that specifies the default lifetime for cookies, ten hours.","pos":[0,70]}]},{"pos":[34232,34244],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34773,34805],"content":"Gets the default token lifetime.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default token lifetime.","pos":[0,32]}]},{"pos":[34941,35069],"content":"The default token lifetime. Always <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default token lifetime.","pos":[0,27]},{"content":"Always <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[28,128],"source":" Always <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime\"></xref>."}]},{"pos":[35707,35790],"content":"Gets the token type URIs for the token types that can be processed by this handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the token type URIs for the token types that can be processed by this handler.","pos":[0,83]}]},{"pos":[35803,36044],"content":"The following type URIs are supported: \"http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation\", \"http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct\", and \"http://schemas.xmlsoap.org/ws/2005/02/sc/sct\".","needQuote":false,"needEscape":true,"nodes":[{"content":"The following type URIs are supported: \"http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation\", \"http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct\", and \"http://schemas.xmlsoap.org/ws/2005/02/sc/sct\".","pos":[0,241]}]},{"pos":[36200,36285],"content":"The token type identifier URIs for token types that can be processed by this handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token type identifier URIs for token types that can be processed by this handler.","pos":[0,85]}]},{"pos":[37007,37043],"content":"Loads custom configuration from XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"Loads custom configuration from XML.","pos":[0,36]}]},{"pos":[37055,37444],"content":"Called by the configuration infrastructure to initialize the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> instance. Initializes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property from the `lifetime` attribute of the [\\&lt;sessionTokenRequirement\\&gt;](../Topic/%3CsessionTokenRequirement%3E.md) element in the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called by the configuration infrastructure to initialize the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt; instance.","pos":[0,133],"source":"Called by the configuration infrastructure to initialize the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> instance."},{"content":"Initializes the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt; property from the <ph id=\"ph1\">`lifetime`</ph> attribute of the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&amp;</ph>lt;sessionTokenRequirement<ph id=\"ph3\">\\&amp;</ph>gt;<ept id=\"p1\">](../Topic/%3CsessionTokenRequirement%3E.md)</ept> element in the configuration file.","pos":[134,389],"source":" Initializes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property from the `lifetime` attribute of the [\\&lt;sessionTokenRequirement\\&gt;](../Topic/%3CsessionTokenRequirement%3E.md) element in the configuration file."}]},{"pos":[37661,37695],"content":"The custom configuration elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"The custom configuration elements.","pos":[0,34]}]},{"pos":[37905,38003],"content":"<ph id=\"ph1\">&lt;code&gt;customConfigElements&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>customConfigElements</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[38114,38824],"content":"The configuration specified by <code>customConfigElements</code> is not valid. For example, it does not contain a <xref uid=\"langword_csharp_&lt;sessionTokenRequirement&gt;\" name=\"&lt;sessionTokenRequirement&gt;\" href=\"\"></xref> element, it contains more than one <xref uid=\"langword_csharp_&lt;sessionTokenRequirement&gt;\" name=\"&lt;sessionTokenRequirement&gt;\" href=\"\"></xref> element, a valid <xref:System.TimeSpan> value cannot be read from the <xref uid=\"langword_csharp_lifetime\" name=\"lifetime\" href=\"\"></xref> attribute, or the <xref uid=\"langword_csharp_lifetime\" name=\"lifetime\" href=\"\"></xref> attribute specifies a value that is less than &lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">customConfigElements</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not valid.","pos":[0,78],"source":"The configuration specified by <code>customConfigElements</code> is not valid."},{"content":"For example, it does not contain a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;sessionTokenRequirement&amp;gt;\" name=\"&amp;lt;sessionTokenRequirement&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element, it contains more than one <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;sessionTokenRequirement&amp;gt;\" name=\"&amp;lt;sessionTokenRequirement&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element, a valid &lt;xref:System.TimeSpan&gt; value cannot be read from the <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_lifetime\" name=\"lifetime\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> attribute, or the <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_lifetime\" name=\"lifetime\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> attribute specifies a value that is less than <ph id=\"ph1\">&amp;lt;</ph>xref:System.TimeSpan.Zero?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[79,710],"source":" For example, it does not contain a <xref uid=\"langword_csharp_&lt;sessionTokenRequirement&gt;\" name=\"&lt;sessionTokenRequirement&gt;\" href=\"\"></xref> element, it contains more than one <xref uid=\"langword_csharp_&lt;sessionTokenRequirement&gt;\" name=\"&lt;sessionTokenRequirement&gt;\" href=\"\"></xref> element, a valid <xref:System.TimeSpan> value cannot be read from the <xref uid=\"langword_csharp_lifetime\" name=\"lifetime\" href=\"\"></xref> attribute, or the <xref uid=\"langword_csharp_lifetime\" name=\"lifetime\" href=\"\"></xref> attribute specifies a value that is less than &lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;."}]},{"pos":[39356,39467],"content":"Reads the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using the specified XML reader.","needQuote":true,"needEscape":true,"source":"Reads the <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> using the specified XML reader."},{"pos":[39480,39887],"content":"The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.       The default implementation invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=fullName> method using a default token resolver.","needQuote":false,"needEscape":true,"nodes":[{"content":"The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 <ph id=\"ph1\">`&lt;wsc:SecurityContextToken&gt;`</ph> element.","pos":[0,142],"source":"The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element."},{"content":"The default implementation invokes the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=fullName&gt; method using a default token resolver.","pos":[149,405],"source":"       The default implementation invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=fullName> method using a default token resolver."}]},{"pos":[40096,40209],"content":"The &lt;xref:System.Xml.XmlReader&gt; over the incoming <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.XmlReader> over the incoming <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref>."},{"pos":[40295,40422],"content":"The session security token that was read, an instance of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The session security token that was read, an instance of <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>."},{"pos":[40618,40702],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[40849,41045],"content":"The reader is not positioned at a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or the <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> cannot be read.","needQuote":true,"needEscape":true,"source":"The reader is not positioned at a <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> or the <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> cannot be read."},{"pos":[41726,41867],"content":"Reads the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from a stream of bytes by using the specified token resolver.","needQuote":true,"needEscape":true,"source":"Reads the <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> from a stream of bytes by using the specified token resolver."},{"pos":[41879,42172],"content":"The default implementation creates an <xref:System.Xml.XmlDictionaryReader> over the token and invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=fullName> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default implementation creates an &lt;xref:System.Xml.XmlDictionaryReader&gt; over the token and invokes the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=fullName&gt; method.","pos":[0,293],"source":"The default implementation creates an <xref:System.Xml.XmlDictionaryReader> over the token and invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=fullName> method."}]},{"pos":[42424,42468],"content":"The stream of bytes that contains the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The stream of bytes that contains the token.","pos":[0,44]}]},{"pos":[42577,42603],"content":"The token resolver to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token resolver to use.","pos":[0,26]}]},{"pos":[42689,42777],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that was read.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> that was read."},{"pos":[43577,43707],"content":"Reads the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using the specified XML reader and token resolver.","needQuote":true,"needEscape":true,"source":"Reads the <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> using the specified XML reader and token resolver."},{"pos":[43720,44767],"content":"The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.       If the token material is cached, it is read from the token cache, which is an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> class. Otherwise, the token material is read from the child element of the `<wsc:SecurityContextToken>` element that is specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties and the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method is invoked to decode the cookie.       For more information about how session tokens are serialized into a `<SecurityContextToken` element, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 <ph id=\"ph1\">`&lt;wsc:SecurityContextToken&gt;`</ph> element.","pos":[0,142],"source":"The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element."},{"content":"If the token material is cached, it is read from the token cache, which is an instance of the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt; class.","pos":[149,310],"source":"       If the token material is cached, it is read from the token cache, which is an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> class."},{"content":"Otherwise, the token material is read from the child element of the <ph id=\"ph1\">`&lt;wsc:SecurityContextToken&gt;`</ph> element that is specified by the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt; and &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt; properties and the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt; method is invoked to decode the cookie.","pos":[311,751],"source":" Otherwise, the token material is read from the child element of the `<wsc:SecurityContextToken>` element that is specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties and the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method is invoked to decode the cookie."},{"content":"For more information about how session tokens are serialized into a <ph id=\"ph1\">`&lt;SecurityContextToken`</ph> element, see the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName&gt; method.","pos":[758,1043],"source":"       For more information about how session tokens are serialized into a `<SecurityContextToken` element, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method."}]},{"pos":[45044,45157],"content":"The &lt;xref:System.Xml.XmlReader&gt; over the incoming <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.XmlReader> over the incoming <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref>."},{"pos":[45266,45441],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can used to resolve the <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that can used to resolve the <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>."},{"pos":[45527,45654],"content":"The session security token that was read, an instance of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The session security token that was read, an instance of <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>."},{"pos":[45851,46060],"content":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>tokenResolver</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,84],"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;tokenResolver&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[91,193],"source":"       -or-       <code>tokenResolver</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[46208,46404],"content":"The reader is not positioned at a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or the <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> cannot be read.","needQuote":true,"needEscape":true,"source":"The reader is not positioned at a <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> or the <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> cannot be read."},{"pos":[47125,47177],"content":"Sets the transforms that will be applied to cookies.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the transforms that will be applied to cookies.","pos":[0,52]}]},{"pos":[47190,47706],"content":"Sets the list of transforms returned by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property. Transforms will be applied in the order in which they appear in the list when encoding a cookie and in the reverse order when decoding a cookie.      > [!WARNING] >  If the `transforms` parameter is `null`, an exception will be thrown from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method when it is called to encode or decode the cookie.","needQuote":false,"needEscape":true,"nodes":[{"content":"Sets the list of transforms returned by the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt; property.","pos":[0,130],"source":"Sets the list of transforms returned by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property."},{"content":"Transforms will be applied in the order in which they appear in the list when encoding a cookie and in the reverse order when decoding a cookie.","pos":[131,275]},{"content":"&gt; <ph id=\"ph1\">[!WARNING]</ph> &gt;  If the <ph id=\"ph2\">`transforms`</ph> parameter is <ph id=\"ph3\">`null`</ph>, an exception will be thrown from the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt; method when it is called to encode or decode the cookie.","pos":[281,513],"source":"      > [!WARNING] >  If the `transforms` parameter is `null`, an exception will be thrown from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method when it is called to encode or decode the cookie."}]},{"pos":[47996,48018],"content":"The transforms to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transforms to use.","pos":[0,22]}]},{"pos":[48595,48627],"content":"Gets or sets the token lifetime.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the token lifetime.","pos":[0,32]}]},{"pos":[48639,48972],"content":"By default, if the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&amp;</ph>lt;sessionTokenRequirement<ph id=\"ph2\">\\&amp;</ph>gt;<ept id=\"p1\">](../Topic/%3CsessionTokenRequirement%3E.md)</ept> element is specified in the configuration file, the TokenLifetime property is initialized to the value of the <ph id=\"ph3\">`lifetime`</ph> attribute by the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt; method.","needQuote":true,"needEscape":true,"source":"By default, if the [\\&lt;sessionTokenRequirement\\&gt;](../Topic/%3CsessionTokenRequirement%3E.md) element is specified in the configuration file, the TokenLifetime property is initialized to the value of the `lifetime` attribute by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method."},{"pos":[49107,49235],"content":"The token lifetime. The default is <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token lifetime.","pos":[0,19]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[20,128],"source":" The default is <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime\"></xref>."}]},{"pos":[49427,49499],"content":"An attempt to set a time span that is less than or equal to zero occurs.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt to set a time span that is less than or equal to zero occurs.","pos":[0,72]}]},{"pos":[49956,50012],"content":"Gets the type of the tokens that this handler processes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of the tokens that this handler processes.","pos":[0,56]}]},{"pos":[50131,50227],"content":"The &lt;xref:System.Type&gt; of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Type> of <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>."},{"pos":[50785,50840],"content":"Gets the transforms that will be applied to the cookie.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the transforms that will be applied to the cookie.","pos":[0,55]}]},{"pos":[50852,50975],"content":"The transforms are applied in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transforms are applied in the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt; method.","pos":[0,123],"source":"The transforms are applied in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method."}]},{"pos":[51245,51303],"content":"The list of transforms that will be applied to the cookie.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of transforms that will be applied to the cookie.","pos":[0,58]}]},{"pos":[52051,52387],"content":"Determines whether the session associated with the specified token is still valid. Validity is determined by checking the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom*> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo*> properties of the specified token. An exception is thrown if the session is no longer valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the session associated with the specified token is still valid.","pos":[0,82]},{"content":"Validity is determined by checking the &lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo<ept id=\"p1\">*</ept>&gt; properties of the specified token.","pos":[83,278],"source":" Validity is determined by checking the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom*> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo*> properties of the specified token."},{"content":"An exception is thrown if the session is no longer valid.","pos":[279,336]}]},{"pos":[52400,52868],"content":"The token is not valid if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property is set to a value that occurs later than <xref:System.DateTime.UtcNow%2A>, or if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property is set to a value that occurs earlier than <xref:System.DateTime.UtcNow%2A>.       Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> methods to validate the session.","needQuote":false,"needEscape":true,"nodes":[{"content":"The token is not valid if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property is set to a value that occurs later than <xref:System.DateTime.UtcNow%2A>, or if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property is set to a value that occurs earlier than <xref:System.DateTime.UtcNow%2A>.       Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> methods to validate the session.","pos":[0,466],"nodes":[{"content":"The token is not valid if its &lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A&gt; property is set to a value that occurs later than &lt;xref:System.DateTime.UtcNow%2A&gt;, or if its &lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt; property is set to a value that occurs earlier than &lt;xref:System.DateTime.UtcNow%2A&gt;.","pos":[0,331],"source":"The token is not valid if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property is set to a value that occurs later than <xref:System.DateTime.UtcNow%2A>, or if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property is set to a value that occurs earlier than <xref:System.DateTime.UtcNow%2A>."},{"content":"Called from the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A&gt; methods to validate the session.","pos":[338,466],"source":"       Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> methods to validate the session."}]}]},{"pos":[53118,53142],"content":"The token to be checked.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token to be checked.","pos":[0,24]}]},{"pos":[53344,53435],"content":"<ph id=\"ph1\">&lt;code&gt;securityToken&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>securityToken</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[53546,53694],"content":"The &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[53863,53994],"content":"The &lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom<bpt id=\"p1\">*</bpt>&gt; property of the token is later than &lt;xref:System.DateTime.UtcNow<ept id=\"p1\">*</ept>&gt;.","needQuote":true,"needEscape":true,"source":"The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom*> property of the token is later than <xref:System.DateTime.UtcNow*>."},{"pos":[54155,54286],"content":"The &lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo<bpt id=\"p1\">*</bpt>&gt; property of the token is earlier than &lt;xref:System.DateTime.UtcNow<ept id=\"p1\">*</ept>&gt;.","needQuote":true,"needEscape":true,"source":"The <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo*> property of the token is earlier than <xref:System.DateTime.UtcNow*>."},{"pos":[54892,54945],"content":"Validates the specified token and returns its claims.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates the specified token and returns its claims.","pos":[0,53]}]},{"pos":[54957,55080],"content":"Invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> method to validate the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invokes the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A&gt; method to validate the token.","pos":[0,123],"source":"Invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> method to validate the token."}]},{"pos":[55379,55500],"content":"The token to be validated. Must be assignable from <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token to be validated.","pos":[0,26]},{"content":"Must be assignable from <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[27,121],"source":" Must be assignable from <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>."}]},{"pos":[55633,55680],"content":"The identities that are contained in the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identities that are contained in the token.","pos":[0,47]}]},{"pos":[56090,56202],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is not assignable from <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>."},{"pos":[56892,56953],"content":"Validates the specified session token and returns its claims.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates the specified session token and returns its claims.","pos":[0,61]}]},{"pos":[56966,57712],"content":"Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method; otherwise, throws a <xref:System.IdentityModel.Tokens.SecurityTokenException>.      > [!IMPORTANT] >  Session tokens that have an <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property that is `null` or empty are considered to be globally scoped. This presents a potential security risk. For this reason you should make sure that the <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property is set in your session tokens.","needQuote":false,"needEscape":true,"nodes":[{"content":"Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName&gt; method; otherwise, throws a &lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt;.","pos":[0,354],"source":"Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method; otherwise, throws a <xref:System.IdentityModel.Tokens.SecurityTokenException>."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  Session tokens that have an &lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt; property that is <ph id=\"ph2\">`null`</ph> or empty are considered to be globally scoped.","pos":[360,546],"source":"      > [!IMPORTANT] >  Session tokens that have an <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property that is `null` or empty are considered to be globally scoped."},{"content":"This presents a potential security risk.","pos":[547,587]},{"content":"For this reason you should make sure that the &lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt; property is set in your session tokens.","pos":[588,743],"source":" For this reason you should make sure that the <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property is set in your session tokens."}]},{"pos":[58044,58165],"content":"The token to be validated. Must be assignable from <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token to be validated.","pos":[0,26]},{"content":"Must be assignable from <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[27,121],"source":" Must be assignable from <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>."}]},{"pos":[58232,58292],"content":"The identifier of the endpoint to which the token is scoped.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the endpoint to which the token is scoped.","pos":[0,60]}]},{"pos":[58425,58472],"content":"The identities that are contained in the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identities that are contained in the token.","pos":[0,47]}]},{"pos":[58673,58878],"content":"<code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>endpointId</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,83],"source":"<code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;endpointId&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[90,189],"source":"       -or-       <code>endpointId</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[58990,59102],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is not assignable from <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>."},{"pos":[59249,59518],"content":"The &lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId*&gt; property of the specified token is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or empty and its value is different than that specified by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">endpointId</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId*> property of the specified token is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or empty and its value is different than that specified by the <code>endpointId</code> parameter."},{"pos":[60144,60193],"content":"Serializes the specified token into a byte array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serializes the specified token into a byte array.","pos":[0,49]}]},{"pos":[60205,60529],"content":"Serializes the specified token by creating and XML writer over a <xref:System.IO.MemoryStream> and invoking the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method. See that overload for more details.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serializes the specified token by creating and XML writer over a <xref:System.IO.MemoryStream> and invoking the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method. See that overload for more details.","pos":[0,324],"nodes":[{"content":"Serializes the specified token by creating and XML writer over a &lt;xref:System.IO.MemoryStream&gt; and invoking the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName&gt; method.","pos":[0,288],"source":"Serializes the specified token by creating and XML writer over a <xref:System.IO.MemoryStream> and invoking the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method."},{"content":"See that overload for more details.","pos":[289,324]}]}]},{"pos":[60770,60789],"content":"The token to write.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token to write.","pos":[0,19]}]},{"pos":[60847,60869],"content":"An encoded byte array.","needQuote":true,"needEscape":true,"nodes":[{"content":"An encoded byte array.","pos":[0,22]}]},{"pos":[61066,61156],"content":"<ph id=\"ph1\">&lt;code&gt;sessiontoken&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>sessiontoken</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[61819,61884],"content":"Serializes the specified token by using the specified XML writer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serializes the specified token by using the specified XML writer.","pos":[0,65]}]},{"pos":[61896,63433],"content":"The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element, depending on the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=fullName> property. The <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=fullName> property is serialized as the `Id` attribute. The <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName> property is serialized as the `<Identifier>` child element. If not `null` the <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName> property is serialized as an `<Instance>` element. Finally, if the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> property is `false`, the entire token is serialized into binary array which is passed to the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method to be encoded. The encoded token is then written as a base64 encoded value to the element and namespace specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties. If the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> property is `true`, the token is not serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id=\"ph1\">`&lt;wsc:SecurityContextToken&gt;`</ph> element, depending on the value of the &lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=fullName&gt; property.","pos":[0,318],"source":"The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element, depending on the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=fullName> property."},{"content":"The &lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=fullName&gt; property is serialized as the <ph id=\"ph1\">`Id`</ph> attribute.","pos":[319,455],"source":" The <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=fullName> property is serialized as the `Id` attribute."},{"content":"The &lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName&gt; property is serialized as the <ph id=\"ph1\">`&lt;Identifier&gt;`</ph> child element.","pos":[456,613],"source":" The <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName> property is serialized as the `<Identifier>` child element."},{"content":"If not <ph id=\"ph1\">`null`</ph> the &lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName&gt; property is serialized as an <ph id=\"ph2\">`&lt;Instance&gt;`</ph> element.","pos":[614,780],"source":" If not `null` the <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName> property is serialized as an `<Instance>` element."},{"content":"Finally, if the &lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName&gt; property is <ph id=\"ph1\">`false`</ph>, the entire token is serialized into binary array which is passed to the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt; method to be encoded.","pos":[781,1093],"source":" Finally, if the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> property is `false`, the entire token is serialized into binary array which is passed to the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method to be encoded."},{"content":"The encoded token is then written as a base64 encoded value to the element and namespace specified by the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt; and &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt; properties.","pos":[1094,1381],"source":" The encoded token is then written as a base64 encoded value to the element and namespace specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties."},{"content":"If the &lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName&gt; property is <ph id=\"ph1\">`true`</ph>, the token is not serialized.","pos":[1382,1537],"source":" If the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> property is `true`, the token is not serialized."}]},{"pos":[63654,63703],"content":"The XML writer with which to serialize the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML writer with which to serialize the token.","pos":[0,49]}]},{"pos":[63793,63902],"content":"The token to serialize. An instance of <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token to serialize.","pos":[0,23]},{"content":"An instance of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[24,109],"source":" An instance of <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>."}]},{"pos":[64100,64301],"content":"<code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,84],"source":"<code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[91,185],"source":"       -or-       <code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[64414,64733],"content":"<code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.       -or-       The <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion*> of the token specifies a version of WS-Secure Conversation that is not supported by the handler.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is not assignable from <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,112],"source":"<code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>."},{"content":"-or-       The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion*&gt;</ph> of the token specifies a version of WS-Secure Conversation that is not supported by the handler.","pos":[119,313],"source":"       -or-       The <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion*> of the token specifies a version of WS-Secure Conversation that is not supported by the handler."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  id: SessionSecurityTokenHandler\n  children:\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  langs:\n  - csharp\n  name: SessionSecurityTokenHandler\n  nameWithType: SessionSecurityTokenHandler\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  type: Class\n  summary: A <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that processes security tokens of type <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.\n  remarks: \"The SessionSecurityTokenHandler class serializes, deserializes, and validates session tokens. Session tokens are tokens of type <xref:System.IdentityModel.Tokens.SessionSecurityToken>. The SessionSecurityTokenHandler class serializes the tokens to and from cookie format. By default, the class serializes tokens into WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elements. Session tokens are used by the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> (WSFAM) and the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) to store information about a session, this is primarily the <xref:System.Security.Claims.ClaimsPrincipal> associated with the authenticated user and the session start and expiration times.  \\n  \\n In passive scenarios, the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> calls into the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) from the authentication pipeline to create a session token from the <xref:System.Security.Claims.ClaimsPrincipal> that represents the authenticated user. The SAM uses its configured SessionSecurityTokenHandler to create the token and to serialize it into a cookie (and to deserialize the token from a cookie on subsequent requests). The SAM uses an instance of its configured <xref:System.IdentityModel.Services.CookieHandler> class to write the cookie back to the HTTP Response. This cookie is then returned to the client and on subsequent requests the client can present the cookie rather than making a round trip back to the identity provider to re-obtain a security token. For more information about how sessions operate with WIF, see [WIF Session Management](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  The \\\\<securityTokenHandlers> configuration element can be used to specify a SessionSecurityTokenHandler that has the responsibility for securing the application’s sessions. Developers should use caution when changing this configuration setting, as a misconfigured system could result in application compromise. For example, specifying a derived  HYPERLINK \\\"http://msdn.microsoft.com/en-us/library/hh193426%28v=vs.110%29.aspx\\\" \\\\t \\\"_blank\\\" SessionSecurityTokenHandler and passing an empty Transforms (CookieTransform) collection to the base, would result in the users identity being serialized into a cookie that was not protected. This could allow an attacker to modify the identity and therefore change access privileges.  \\n  \\n If the session token is in reference mode, that is, its <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> property is `true`, the session token handler only serializes properties of the session token that are needed to regenerate its key in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>. In the default case, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class is used to represent cache keys, and the token handler writes the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName> and <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName> properties of the token. If the session token is not in reference mode, that is, the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> property is `false`, then, in addition to the properties mentioned previously, the handler invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method on a byte array serialized from the token and stores the resulting value in the cookie as well. For more details about how the token is serialized, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method.  \\n  \\n The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property gets the list of transforms that are applied to the session token in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method. All transforms derive from the <xref:System.IdentityModel.CookieTransform> class. In the default case the <xref:System.IdentityModel.DeflateCookieTransform> and the <xref:System.IdentityModel.ProtectedDataCookieTransform> are applied. The <xref:System.IdentityModel.ProtectedDataCookieTransform> uses the Data Protection API (DPAPI) to protect the cookie material. DPAPI uses a key that is specific to the computer on which it is running in its protection algorithms. For this reason, the default session token handler is not usable in Web farm scenarios because, in such scenarios, tokens written on one computer may need to be read on another computer. You can use many strategies to circumvent this issue. For example, you can:  \\n  \\n-   Replace the default SessionSecurityTokenHandler with the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>. The <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> enables you to specify signing and encryption keys under the ASP.NET `<machineKey>` element in the configuration file.  \\n  \\n-   Provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=fullName> event in the global.asax.cs file and replace the default session token handler with an instance of SessionSecurityTokenHandler that has a list of transforms that includes the <xref:System.IdentityModel.RsaSignatureCookieTransform> and the <xref:System.IdentityModel.RsaEncryptionCookieTransform>. You can create the new instance by invoking one of the constructors that takes a list of transforms.  \\n  \\n-   Derive a custom transform from the <xref:System.IdentityModel.CookieTransform> base class and use the method above to include it in the list of transforms to be applied.  \\n  \\n-   Derive a custom token handler from SessionSecurityTokenHandler and implement your own mechanism.  \\n  \\n For more information about using sessions in Web farm scenarios, see [WIF and Web Farms](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The SessionSecurityTokenHandler is included in the default token handler collection; however, you can replace it with a custom session token handler by first specifying a [\\\\&lt;remove\\\\&gt;](../Topic/%3Cremove%3E.md) element under the [\\\\&lt;securityTokenHandlers\\\\&gt;](../Topic/%3CsecurityTokenHandlers%3E.md) element to remove the default handler from the collection and then adding your custom token handler using the [\\\\&lt;add\\\\&gt;](../Topic/%3Cadd%3E.md) element. By default, you can specify the default token lifetime by including the [\\\\&lt;sessionTokenRequirement\\\\&gt;](../Topic/%3CsessionTokenRequirement%3E.md) element under the `<add>` element. You can design a custom token handler to take custom configuration elements under the `<add>` element by overriding the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method to provide the logic to process them.\"\n  example:\n  - \"The following XML shows how to replace the default session security token handler in a token handler collection with an instance of the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> class in configuration.  \\n  \\n```xml  \\n<securityTokenHandlers>  \\n  <remove type=\\\"System.IdentityModel.Tokens.SessionSecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\\\" />  \\n  <add type=\\\"System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\\\" />  \\n</securityTokenHandlers>  \\n```\"\n  syntax:\n    content: 'public class SessionSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityTokenHandler\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: SessionSecurityTokenHandler()\n  nameWithType: SessionSecurityTokenHandler.SessionSecurityTokenHandler()\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.SessionSecurityTokenHandler()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> class that uses the default cookie transforms and token lifetime.\n  remarks: The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> properties are initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>.\n  syntax:\n    content: public SessionSecurityTokenHandler ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})\n  id: '#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})'\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>)\n  nameWithType: SessionSecurityTokenHandler.SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> class that uses the specified cookie transforms.\n  remarks: The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>.\n  syntax:\n    content: public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.CookieTransform> transforms);\n    parameters:\n    - id: transforms\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform}\n      description: The transforms to apply when encoding or decoding the cookie. Sets the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*> property.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>transforms</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)\n  id: '#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)'\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>,TimeSpan)\n  nameWithType: SessionSecurityTokenHandler.SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>,TimeSpan)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>,TimeSpan)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> class that uses the specified cookie transforms and token lifetime.\n  syntax:\n    content: public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.CookieTransform> transforms, TimeSpan tokenLifetime);\n    parameters:\n    - id: transforms\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform}\n      description: The transforms to apply when encoding or decoding the cookie. Sets the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*> property.\n    - id: tokenLifetime\n      type: System.TimeSpan\n      description: The default lifetime for a token. Sets the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime*> property.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>transforms</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>tokenLifetime</code> is less than or equal to &lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)\n  id: ApplyTransforms(System.Byte[],System.Boolean)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: ApplyTransforms(Byte[],Boolean)\n  nameWithType: SessionSecurityTokenHandler.ApplyTransforms(Byte[],Boolean)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(Byte[],Boolean)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Applies the transforms specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*> property to either encode or decode the specified cookie.\n  remarks: \"When encoding a cookie transforms are applied in the order in which they appear in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property. When decoding a cookie, they are applied in the reverse order.  \\n  \\n Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and [qualifyHint=False&autoUpgrade=True](~/add/includes/ajax-current-ext-md.md) methods to encode and decode the cookie material.\"\n  syntax:\n    content: protected virtual byte[] ApplyTransforms (byte[] cookie, bool outbound);\n    parameters:\n    - id: cookie\n      type: System.Byte[]\n      description: The cookie that will be transformed.\n    - id: outbound\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the cookie should be encoded; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the cookie should be decoded.\n    return:\n      type: System.Byte[]\n      description: The encoded or decoded cookie.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  id: CanReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: CanReadToken(XmlReader)\n  nameWithType: SessionSecurityTokenHandler.CanReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the reader is positioned at a <xref uid=\"langword_csharp_&lt;wsc:SecurityContextToken&gt;\" name=\"&lt;wsc:SecurityContextToken&gt;\" href=\"\"></xref> element.\n  syntax:\n    content: public override bool CanReadToken (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: The <xref:System.Xml.XmlReader> over the incoming <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref>. The reader should be positioned at a <xref uid=\"langword_csharp_&lt;wsc:SecurityContextToken&gt;\" name=\"&lt;wsc:SecurityContextToken&gt;\" href=\"\"></xref> element.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the reader points to a <xref uid=\"langword_csharp_&lt;wsc:SecurityContextToken&gt;\" name=\"&lt;wsc:SecurityContextToken&gt;\" href=\"\"></xref> element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken\n  id: CanValidateToken\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: CanValidateToken\n  nameWithType: SessionSecurityTokenHandler.CanValidateToken\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether this handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.\n  syntax:\n    content: public override bool CanValidateToken { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken\n  id: CanWriteToken\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: CanWriteToken\n  nameWithType: SessionSecurityTokenHandler.CanWriteToken\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether this handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.\n  syntax:\n    content: public override bool CanWriteToken { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName\n  id: CookieElementName\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: CookieElementName\n  nameWithType: SessionSecurityTokenHandler.CookieElementName\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the name for the cookie element.\n  remarks: This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the element under which the encoded token material should be written or read.\n  syntax:\n    content: public virtual string CookieElementName { get; }\n    return:\n      type: System.String\n      description: The name for the cookie element. The default element name is “Cookie”.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace\n  id: CookieNamespace\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: CookieNamespace\n  nameWithType: SessionSecurityTokenHandler.CookieNamespace\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the namespace for the cookie element.\n  remarks: This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the namespace of the element under which the encoded token material should be written or read.\n  syntax:\n    content: public virtual string CookieNamespace { get; }\n    return:\n      type: System.String\n      description: The namespace for the cookie element. The default namespace is “http://schemas.microsoft.com/ws/2006/05/security”.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)\n  id: CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: CreateSessionSecurityToken(ClaimsPrincipal,String,String,DateTime,DateTime)\n  nameWithType: SessionSecurityTokenHandler.CreateSessionSecurityToken(ClaimsPrincipal,String,String,DateTime,DateTime)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(ClaimsPrincipal,String,String,DateTime,DateTime)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Creates a <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> based on the specified claims principal and time range during which the token is valid.\n  syntax:\n    content: public virtual System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken (System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, DateTime validFrom, DateTime validTo);\n    parameters:\n    - id: principal\n      type: System.Security.Claims.ClaimsPrincipal\n      description: The claims principal.\n    - id: context\n      type: System.String\n      description: A caller-defined context string.\n    - id: endpointId\n      type: System.String\n      description: The identifier of the endpoint to which the token is scoped.\n    - id: validFrom\n      type: System.DateTime\n      description: The time instant at which the token becomes valid.\n    - id: validTo\n      type: System.DateTime\n      description: The time instant after which the token is no longer valid.\n    return:\n      type: System.IdentityModel.Tokens.SessionSecurityToken\n      description: The session security token that was created. The properties on the new session token are set according to the specified parameters.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>principal</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  id: CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: CreateToken(SecurityTokenDescriptor)\n  nameWithType: SessionSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Creates a security token based on the specified token descriptor.\n  remarks: 'Creates and returns a session security token by using the following properties in the token descriptor: <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=fullName>, and <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=fullName>. If the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=fullName> property is set `true` on the token handler configuration specified by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property, the bootstrap context is created from the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=fullName> property and is saved in the session token.'\n  syntax:\n    content: public override System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);\n    parameters:\n    - id: tokenDescriptor\n      type: System.IdentityModel.Tokens.SecurityTokenDescriptor\n      description: The token descriptor from which to create the token.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The security token that was created. This will be an instance of <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>tokenDescriptor</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms\n  id: DefaultCookieTransforms\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: DefaultCookieTransforms\n  nameWithType: SessionSecurityTokenHandler.DefaultCookieTransforms\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: A read only collection that contains the list of default transforms to be applied to cookies, the <xref href=\"System.IdentityModel.DeflateCookieTransform\"></xref> and the <xref href=\"System.IdentityModel.ProtectedDataCookieTransform\"></xref>.\n  syntax:\n    content: public static readonly System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.CookieTransform> DefaultCookieTransforms;\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime\n  id: DefaultLifetime\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: DefaultLifetime\n  nameWithType: SessionSecurityTokenHandler.DefaultLifetime\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: A constant that specifies the default lifetime for cookies, ten hours.\n  syntax:\n    content: public static readonly TimeSpan DefaultLifetime;\n    return:\n      type: System.TimeSpan\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime\n  id: DefaultTokenLifetime\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: DefaultTokenLifetime\n  nameWithType: SessionSecurityTokenHandler.DefaultTokenLifetime\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the default token lifetime.\n  syntax:\n    content: public static TimeSpan DefaultTokenLifetime { get; }\n    return:\n      type: System.TimeSpan\n      description: The default token lifetime. Always <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime\"></xref>.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers\n  id: GetTokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: GetTokenTypeIdentifiers()\n  nameWithType: SessionSecurityTokenHandler.GetTokenTypeIdentifiers()\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the token type URIs for the token types that can be processed by this handler.\n  remarks: 'The following type URIs are supported: \"http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation\", \"http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct\", and \"http://schemas.xmlsoap.org/ws/2005/02/sc/sct\".'\n  syntax:\n    content: public override string[] GetTokenTypeIdentifiers ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: The token type identifier URIs for token types that can be processed by this handler.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  id: LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: SessionSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Loads custom configuration from XML.\n  remarks: Called by the configuration infrastructure to initialize the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> instance. Initializes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property from the `lifetime` attribute of the [\\&lt;sessionTokenRequirement\\&gt;](../Topic/%3CsessionTokenRequirement%3E.md) element in the configuration file.\n  syntax:\n    content: public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);\n    parameters:\n    - id: customConfigElements\n      type: System.Xml.XmlNodeList\n      description: The custom configuration elements.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>customConfigElements</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The configuration specified by <code>customConfigElements</code> is not valid. For example, it does not contain a <xref uid=\"langword_csharp_&lt;sessionTokenRequirement&gt;\" name=\"&lt;sessionTokenRequirement&gt;\" href=\"\"></xref> element, it contains more than one <xref uid=\"langword_csharp_&lt;sessionTokenRequirement&gt;\" name=\"&lt;sessionTokenRequirement&gt;\" href=\"\"></xref> element, a valid <xref:System.TimeSpan> value cannot be read from the <xref uid=\"langword_csharp_lifetime\" name=\"lifetime\" href=\"\"></xref> attribute, or the <xref uid=\"langword_csharp_lifetime\" name=\"lifetime\" href=\"\"></xref> attribute specifies a value that is less than &lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  id: ReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: ReadToken(XmlReader)\n  nameWithType: SessionSecurityTokenHandler.ReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Reads the <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> using the specified XML reader.\n  remarks: \"The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.  \\n  \\n The default implementation invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=fullName> method using a default token resolver.\"\n  syntax:\n    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: The <xref:System.Xml.XmlReader> over the incoming <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref>.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The session security token that was read, an instance of <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IdentityModel.Tokens.SecurityTokenException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenException\n    description: The reader is not positioned at a <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> or the <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> cannot be read.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)\n  id: ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: ReadToken(Byte[],SecurityTokenResolver)\n  nameWithType: SessionSecurityTokenHandler.ReadToken(Byte[],SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(Byte[],SecurityTokenResolver)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Reads the <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> from a stream of bytes by using the specified token resolver.\n  remarks: The default implementation creates an <xref:System.Xml.XmlDictionaryReader> over the token and invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=fullName> method.\n  syntax:\n    content: public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (byte[] token, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);\n    parameters:\n    - id: token\n      type: System.Byte[]\n      description: The stream of bytes that contains the token.\n    - id: tokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: The token resolver to use.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> that was read.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  id: ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: ReadToken(XmlReader,SecurityTokenResolver)\n  nameWithType: SessionSecurityTokenHandler.ReadToken(XmlReader,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(XmlReader,SecurityTokenResolver)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Reads the <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> using the specified XML reader and token resolver.\n  remarks: \"The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.  \\n  \\n If the token material is cached, it is read from the token cache, which is an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> class. Otherwise, the token material is read from the child element of the `<wsc:SecurityContextToken>` element that is specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties and the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method is invoked to decode the cookie.  \\n  \\n For more information about how session tokens are serialized into a `<SecurityContextToken` element, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method.\"\n  syntax:\n    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: The <xref:System.Xml.XmlReader> over the incoming <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref>.\n    - id: tokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that can used to resolve the <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The session security token that was read, an instance of <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>reader</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>tokenResolver</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.IdentityModel.Tokens.SecurityTokenException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenException\n    description: The reader is not positioned at a <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> or the <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> cannot be read.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})\n  id: SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: SetTransforms(IEnumerable<CookieTransform>)\n  nameWithType: SessionSecurityTokenHandler.SetTransforms(IEnumerable<CookieTransform>)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(IEnumerable<CookieTransform>)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Sets the transforms that will be applied to cookies.\n  remarks: \"Sets the list of transforms returned by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property. Transforms will be applied in the order in which they appear in the list when encoding a cookie and in the reverse order when decoding a cookie.  \\n  \\n> [!WARNING]\\n>  If the `transforms` parameter is `null`, an exception will be thrown from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method when it is called to encode or decode the cookie.\"\n  syntax:\n    content: protected void SetTransforms (System.Collections.Generic.IEnumerable<System.IdentityModel.CookieTransform> transforms);\n    parameters:\n    - id: transforms\n      type: System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform}\n      description: The transforms to use.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime\n  id: TokenLifetime\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: TokenLifetime\n  nameWithType: SessionSecurityTokenHandler.TokenLifetime\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets the token lifetime.\n  remarks: By default, if the [\\&lt;sessionTokenRequirement\\&gt;](../Topic/%3CsessionTokenRequirement%3E.md) element is specified in the configuration file, the TokenLifetime property is initialized to the value of the `lifetime` attribute by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method.\n  syntax:\n    content: public virtual TimeSpan TokenLifetime { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The token lifetime. The default is <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime\"></xref>.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An attempt to set a time span that is less than or equal to zero occurs.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType\n  id: TokenType\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: TokenType\n  nameWithType: SessionSecurityTokenHandler.TokenType\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the type of the tokens that this handler processes.\n  syntax:\n    content: public override Type TokenType { get; }\n    return:\n      type: System.Type\n      description: The <xref:System.Type> of <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms\n  id: Transforms\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: Transforms\n  nameWithType: SessionSecurityTokenHandler.Transforms\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the transforms that will be applied to the cookie.\n  remarks: The transforms are applied in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.CookieTransform> Transforms { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform}\n      description: The list of transforms that will be applied to the cookie.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)\n  id: ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: ValidateSession(SessionSecurityToken)\n  nameWithType: SessionSecurityTokenHandler.ValidateSession(SessionSecurityToken)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(SessionSecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Determines whether the session associated with the specified token is still valid. Validity is determined by checking the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom*> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo*> properties of the specified token. An exception is thrown if the session is no longer valid.\n  remarks: \"The token is not valid if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property is set to a value that occurs later than <xref:System.DateTime.UtcNow%2A>, or if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property is set to a value that occurs earlier than <xref:System.DateTime.UtcNow%2A>.  \\n  \\n Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> methods to validate the session.\"\n  syntax:\n    content: protected virtual void ValidateSession (System.IdentityModel.Tokens.SessionSecurityToken securityToken);\n    parameters:\n    - id: securityToken\n      type: System.IdentityModel.Tokens.SessionSecurityToken\n      description: The token to be checked.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>securityToken</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IdentityModel.Tokens.SecurityTokenNotYetValidException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException\n    description: The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom*> property of the token is later than <xref:System.DateTime.UtcNow*>.\n  - type: System.IdentityModel.Tokens.SecurityTokenExpiredException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenExpiredException\n    description: The <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo*> property of the token is earlier than <xref:System.DateTime.UtcNow*>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: ValidateToken(SecurityToken)\n  nameWithType: SessionSecurityTokenHandler.ValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Validates the specified token and returns its claims.\n  remarks: Invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> method to validate the token.\n  syntax:\n    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The token to be validated. Must be assignable from <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n      description: The identities that are contained in the token.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: >-\n      <code>token</code>\n          <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)\n  id: ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: ValidateToken(SessionSecurityToken,String)\n  nameWithType: SessionSecurityTokenHandler.ValidateToken(SessionSecurityToken,String)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(SessionSecurityToken,String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Validates the specified session token and returns its claims.\n  remarks: \"Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method; otherwise, throws a <xref:System.IdentityModel.Tokens.SecurityTokenException>.  \\n  \\n> [!IMPORTANT]\\n>  Session tokens that have an <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property that is `null` or empty are considered to be globally scoped. This presents a potential security risk. For this reason you should make sure that the <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property is set in your session tokens.\"\n  syntax:\n    content: public virtual System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SessionSecurityToken\n      description: The token to be validated. Must be assignable from <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.\n    - id: endpointId\n      type: System.String\n      description: The identifier of the endpoint to which the token is scoped.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n      description: The identities that are contained in the token.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>token</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>endpointId</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.\n  - type: System.IdentityModel.Tokens.SecurityTokenException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenException\n    description: The <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId*> property of the specified token is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or empty and its value is different than that specified by the <code>endpointId</code> parameter.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)\n  id: WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: WriteToken(SessionSecurityToken)\n  nameWithType: SessionSecurityTokenHandler.WriteToken(SessionSecurityToken)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(SessionSecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Serializes the specified token into a byte array.\n  remarks: Serializes the specified token by creating and XML writer over a <xref:System.IO.MemoryStream> and invoking the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method. See that overload for more details.\n  syntax:\n    content: public virtual byte[] WriteToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);\n    parameters:\n    - id: sessionToken\n      type: System.IdentityModel.Tokens.SessionSecurityToken\n      description: The token to write.\n    return:\n      type: System.Byte[]\n      description: An encoded byte array.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>sessiontoken</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: WriteToken(XmlWriter,SecurityToken)\n  nameWithType: SessionSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Serializes the specified token by using the specified XML writer.\n  remarks: The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element, depending on the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=fullName> property. The <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=fullName> property is serialized as the `Id` attribute. The <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName> property is serialized as the `<Identifier>` child element. If not `null` the <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName> property is serialized as an `<Instance>` element. Finally, if the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> property is `false`, the entire token is serialized into binary array which is passed to the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method to be encoded. The encoded token is then written as a base64 encoded value to the element and namespace specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties. If the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> property is `true`, the token is not serialized.\n  syntax:\n    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: The XML writer with which to serialize the token.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The token to serialize. An instance of <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>writer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>token</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<code>token</code> is not assignable from <xref href=\\\"System.IdentityModel.Tokens.SessionSecurityToken\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion*> of the token specifies a version of WS-Secure Conversation that is not supported by the handler.\"\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: System.IdentityModel.Tokens.SecurityTokenHandler\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.IdentityModel.Tokens.SecurityTokenException\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenException\n  nameWithType: SecurityTokenException\n  fullName: System.IdentityModel.Tokens.SecurityTokenException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.IdentityModel.Tokens.SecurityTokenNotYetValidException\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenNotYetValidException\n  nameWithType: SecurityTokenNotYetValidException\n  fullName: System.IdentityModel.Tokens.SecurityTokenNotYetValidException\n- uid: System.IdentityModel.Tokens.SecurityTokenExpiredException\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenExpiredException\n  nameWithType: SecurityTokenExpiredException\n  fullName: System.IdentityModel.Tokens.SecurityTokenExpiredException\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: SessionSecurityTokenHandler()\n  nameWithType: SessionSecurityTokenHandler.SessionSecurityTokenHandler()\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.SessionSecurityTokenHandler()\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>)\n  nameWithType: SessionSecurityTokenHandler.SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<CookieTransform>\n  nameWithType: ReadOnlyCollection<CookieTransform>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.CookieTransform>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.IdentityModel.CookieTransform>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.CookieTransform\n    name: CookieTransform\n    nameWithType: CookieTransform\n    fullName: CookieTransform\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>,TimeSpan)\n  nameWithType: SessionSecurityTokenHandler.SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>,TimeSpan)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>,TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ApplyTransforms(Byte[],Boolean)\n  nameWithType: SessionSecurityTokenHandler.ApplyTransforms(Byte[],Boolean)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(Byte[],Boolean)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CanReadToken(XmlReader)\n  nameWithType: SessionSecurityTokenHandler.CanReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(XmlReader)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: SessionSecurityTokenHandler.CanValidateToken\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CanWriteToken\n  nameWithType: SessionSecurityTokenHandler.CanWriteToken\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CookieElementName\n  nameWithType: SessionSecurityTokenHandler.CookieElementName\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CookieNamespace\n  nameWithType: SessionSecurityTokenHandler.CookieNamespace\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CreateSessionSecurityToken(ClaimsPrincipal,String,String,DateTime,DateTime)\n  nameWithType: SessionSecurityTokenHandler.CreateSessionSecurityToken(ClaimsPrincipal,String,String,DateTime,DateTime)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(ClaimsPrincipal,String,String,DateTime,DateTime)\n- uid: System.IdentityModel.Tokens.SessionSecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SessionSecurityToken\n  nameWithType: SessionSecurityToken\n  fullName: System.IdentityModel.Tokens.SessionSecurityToken\n- uid: System.Security.Claims.ClaimsPrincipal\n  parent: System.Security.Claims\n  isExternal: false\n  name: ClaimsPrincipal\n  nameWithType: ClaimsPrincipal\n  fullName: System.Security.Claims.ClaimsPrincipal\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CreateToken(SecurityTokenDescriptor)\n  nameWithType: SessionSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenDescriptor\n  nameWithType: SecurityTokenDescriptor\n  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: DefaultCookieTransforms\n  nameWithType: SessionSecurityTokenHandler.DefaultCookieTransforms\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: DefaultLifetime\n  nameWithType: SessionSecurityTokenHandler.DefaultLifetime\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: DefaultTokenLifetime\n  nameWithType: SessionSecurityTokenHandler.DefaultTokenLifetime\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: GetTokenTypeIdentifiers()\n  nameWithType: SessionSecurityTokenHandler.GetTokenTypeIdentifiers()\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers()\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: SessionSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n- uid: System.Xml.XmlNodeList\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeList\n  nameWithType: XmlNodeList\n  fullName: System.Xml.XmlNodeList\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ReadToken(XmlReader)\n  nameWithType: SessionSecurityTokenHandler.ReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(XmlReader)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ReadToken(Byte[],SecurityTokenResolver)\n  nameWithType: SessionSecurityTokenHandler.ReadToken(Byte[],SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(Byte[],SecurityTokenResolver)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenResolver\n  nameWithType: SecurityTokenResolver\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ReadToken(XmlReader,SecurityTokenResolver)\n  nameWithType: SessionSecurityTokenHandler.ReadToken(XmlReader,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(XmlReader,SecurityTokenResolver)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: SetTransforms(IEnumerable<CookieTransform>)\n  nameWithType: SessionSecurityTokenHandler.SetTransforms(IEnumerable<CookieTransform>)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(IEnumerable<CookieTransform>)\n- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<CookieTransform>\n  nameWithType: IEnumerable<CookieTransform>\n  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.CookieTransform>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.IdentityModel.CookieTransform>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.CookieTransform\n    name: CookieTransform\n    nameWithType: CookieTransform\n    fullName: CookieTransform\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: TokenLifetime\n  nameWithType: SessionSecurityTokenHandler.TokenLifetime\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: TokenType\n  nameWithType: SessionSecurityTokenHandler.TokenType\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: Transforms\n  nameWithType: SessionSecurityTokenHandler.Transforms\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ValidateSession(SessionSecurityToken)\n  nameWithType: SessionSecurityTokenHandler.ValidateSession(SessionSecurityToken)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(SessionSecurityToken)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ValidateToken(SecurityToken)\n  nameWithType: SessionSecurityTokenHandler.ValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(SecurityToken)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<ClaimsIdentity>\n  nameWithType: ReadOnlyCollection<ClaimsIdentity>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Claims.ClaimsIdentity\n    name: ClaimsIdentity\n    nameWithType: ClaimsIdentity\n    fullName: ClaimsIdentity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ValidateToken(SessionSecurityToken,String)\n  nameWithType: SessionSecurityTokenHandler.ValidateToken(SessionSecurityToken,String)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(SessionSecurityToken,String)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: WriteToken(SessionSecurityToken)\n  nameWithType: SessionSecurityTokenHandler.WriteToken(SessionSecurityToken)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(SessionSecurityToken)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: WriteToken(XmlWriter,SecurityToken)\n  nameWithType: SessionSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: SessionSecurityTokenHandler\n  nameWithType: SessionSecurityTokenHandler.SessionSecurityTokenHandler\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ApplyTransforms\n  nameWithType: SessionSecurityTokenHandler.ApplyTransforms\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CanReadToken\n  nameWithType: SessionSecurityTokenHandler.CanReadToken\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: SessionSecurityTokenHandler.CanValidateToken\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CanWriteToken\n  nameWithType: SessionSecurityTokenHandler.CanWriteToken\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CookieElementName\n  nameWithType: SessionSecurityTokenHandler.CookieElementName\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CookieNamespace\n  nameWithType: SessionSecurityTokenHandler.CookieNamespace\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CreateSessionSecurityToken\n  nameWithType: SessionSecurityTokenHandler.CreateSessionSecurityToken\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CreateToken\n  nameWithType: SessionSecurityTokenHandler.CreateToken\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: DefaultTokenLifetime\n  nameWithType: SessionSecurityTokenHandler.DefaultTokenLifetime\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: GetTokenTypeIdentifiers\n  nameWithType: SessionSecurityTokenHandler.GetTokenTypeIdentifiers\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: LoadCustomConfiguration\n  nameWithType: SessionSecurityTokenHandler.LoadCustomConfiguration\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ReadToken\n  nameWithType: SessionSecurityTokenHandler.ReadToken\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: SetTransforms\n  nameWithType: SessionSecurityTokenHandler.SetTransforms\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: TokenLifetime\n  nameWithType: SessionSecurityTokenHandler.TokenLifetime\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: TokenType\n  nameWithType: SessionSecurityTokenHandler.TokenType\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: Transforms\n  nameWithType: SessionSecurityTokenHandler.Transforms\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ValidateSession\n  nameWithType: SessionSecurityTokenHandler.ValidateSession\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ValidateToken\n  nameWithType: SessionSecurityTokenHandler.ValidateToken\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: WriteToken\n  nameWithType: SessionSecurityTokenHandler.WriteToken\n"}