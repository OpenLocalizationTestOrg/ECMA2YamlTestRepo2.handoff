{"nodes":[{"pos":[469,880],"content":"The ManagementTask attribute indicates that the target method implements a WMI method.       Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ManagementTask attribute indicates that the target method implements a WMI method.","pos":[0,86]},{"content":"Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.","pos":[93,286]},{"content":"The <bpt id=\"p1\">[</bpt>MI APIs<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx)</ept> should be used for all new development.","pos":[287,409],"source":" The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development."}]},{"pos":[894,1582],"content":"By default, the WMI method name will be the name of the target method. The parent class of this attribute, <xref:System.Management.Instrumentation.ManagementMemberAttribute>, includes a Name parameter. You can use that parameter to change the name of the method that is exposed through WMI without changing your internal method name.       The method must be public and it may be static. It can include any combination of [in], [out], [in/out], array or object reference parameters. Array parameters cannot be multidimensional or jagged because of limitations imposed by WMI.       The return type of the method can be: void, scalar, string, datetime or object. It cannot be an array.","needQuote":false,"needEscape":true,"nodes":[{"content":"By default, the WMI method name will be the name of the target method. The parent class of this attribute, <xref:System.Management.Instrumentation.ManagementMemberAttribute>, includes a Name parameter. You can use that parameter to change the name of the method that is exposed through WMI without changing your internal method name.       The method must be public and it may be static. It can include any combination of [in], [out], [in/out], array or object reference parameters. Array parameters cannot be multidimensional or jagged because of limitations imposed by WMI.       The return type of the method can be: void, scalar, string, datetime or object. It cannot be an array.","pos":[0,684],"nodes":[{"content":"By default, the WMI method name will be the name of the target method.","pos":[0,70]},{"content":"The parent class of this attribute, &lt;xref:System.Management.Instrumentation.ManagementMemberAttribute&gt;, includes a Name parameter.","pos":[71,201],"source":" The parent class of this attribute, <xref:System.Management.Instrumentation.ManagementMemberAttribute>, includes a Name parameter."},{"content":"You can use that parameter to change the name of the method that is exposed through WMI without changing your internal method name.","pos":[202,333]},{"content":"The method must be public and it may be static.","pos":[340,387]},{"content":"It can include any combination of [in], [out], [in/out], array or object reference parameters.","pos":[388,482]},{"content":"Array parameters cannot be multidimensional or jagged because of limitations imposed by WMI.","pos":[483,575]},{"content":"The return type of the method can be: void, scalar, string, datetime or object.","pos":[582,661]},{"content":"It cannot be an array.","pos":[662,684]}]}]},{"pos":[2987,3109],"content":"Initializes a new instance of the <xref:System.Management.ManagementTaskAttribute> class. This is the default constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the <xref:System.Management.ManagementTaskAttribute> class. This is the default constructor.","pos":[0,122],"nodes":[{"content":"Initializes a new instance of the &lt;xref:System.Management.ManagementTaskAttribute&gt; class.","pos":[0,89],"source":"Initializes a new instance of the <xref:System.Management.ManagementTaskAttribute> class."},{"content":"This is the default constructor.","pos":[90,122]}]}]},{"pos":[3721,3851],"content":"Gets or sets a value that defines the type of output that the method that is marked with the ManagementTask attribute will output.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that defines the type of output that the method that is marked with the ManagementTask attribute will output.","pos":[0,130]}]},{"pos":[3863,4033],"content":"If the returned type is <xref:System.Object?displayProperty=fullName>, then the output should be treated as a value of type <xref:System.Object?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the returned type is &lt;xref:System.Object?displayProperty=fullName&gt;, then the output should be treated as a value of type &lt;xref:System.Object?displayProperty=fullName&gt;.","pos":[0,170],"source":"If the returned type is <xref:System.Object?displayProperty=fullName>, then the output should be treated as a value of type <xref:System.Object?displayProperty=fullName>."}]},{"pos":[4145,4283],"content":"A <xref:System.Type> value that indicates the type of output that the method that is marked with the ManagementTask attribute will output.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; value that indicates the type of output that the method that is marked with the ManagementTask attribute will output.","pos":[0,138],"source":"A <xref:System.Type> value that indicates the type of output that the method that is marked with the ManagementTask attribute will output."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Management.Instrumentation.ManagementTaskAttribute\n  id: ManagementTaskAttribute\n  children:\n  - System.Management.Instrumentation.ManagementTaskAttribute.#ctor\n  - System.Management.Instrumentation.ManagementTaskAttribute.Schema\n  langs:\n  - csharp\n  name: ManagementTaskAttribute\n  nameWithType: ManagementTaskAttribute\n  fullName: System.Management.Instrumentation.ManagementTaskAttribute\n  type: Class\n  summary: \"The ManagementTask attribute indicates that the target method implements a WMI method.  \\n  \\n Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.\"\n  remarks: \"By default, the WMI method name will be the name of the target method. The parent class of this attribute, <xref:System.Management.Instrumentation.ManagementMemberAttribute>, includes a Name parameter. You can use that parameter to change the name of the method that is exposed through WMI without changing your internal method name.  \\n  \\n The method must be public and it may be static. It can include any combination of [in], [out], [in/out], array or object reference parameters. Array parameters cannot be multidimensional or jagged because of limitations imposed by WMI.  \\n  \\n The return type of the method can be: void, scalar, string, datetime or object. It cannot be an array.\"\n  example:\n  - \"The following example shows how to mark a method with the ManagementTask attribute to expose the method to WMI. The method will show up in WMI as ResetCounters.  \\n  \\n [C#]  \\n  \\n```  \\n// Use the ManagementTask attribute to specify that a method  \\n// is exposed to WMI through this provider. Consumers will be  \\n// able to execute this method through WMI.  \\n[ManagementTask]  \\npublic void ResetCounters()  \\n{  \\n    counter.Reset();  \\n```  \\n  \\n }\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false)]\n\n      public sealed class ManagementTaskAttribute : System.Management.Instrumentation.ManagementMemberAttribute\n  inheritance:\n  - System.Attribute\n  - System.Management.Instrumentation.ManagementMemberAttribute\n  implements: []\n  inheritedMembers:\n  - System.Management.Instrumentation.ManagementMemberAttribute.Name\n  platform:\n  - net462\n- uid: System.Management.Instrumentation.ManagementTaskAttribute.#ctor\n  id: '#ctor'\n  parent: System.Management.Instrumentation.ManagementTaskAttribute\n  langs:\n  - csharp\n  name: ManagementTaskAttribute()\n  nameWithType: ManagementTaskAttribute.ManagementTaskAttribute()\n  fullName: System.Management.Instrumentation.ManagementTaskAttribute.ManagementTaskAttribute()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Management.Instrumentation\n  summary: Initializes a new instance of the <xref:System.Management.ManagementTaskAttribute> class. This is the default constructor.\n  syntax:\n    content: public ManagementTaskAttribute ();\n    parameters: []\n  overload: System.Management.Instrumentation.ManagementTaskAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Management.Instrumentation.ManagementTaskAttribute.Schema\n  id: Schema\n  parent: System.Management.Instrumentation.ManagementTaskAttribute\n  langs:\n  - csharp\n  name: Schema\n  nameWithType: ManagementTaskAttribute.Schema\n  fullName: System.Management.Instrumentation.ManagementTaskAttribute.Schema\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Management.Instrumentation\n  summary: Gets or sets a value that defines the type of output that the method that is marked with the ManagementTask attribute will output.\n  remarks: If the returned type is <xref:System.Object?displayProperty=fullName>, then the output should be treated as a value of type <xref:System.Object?displayProperty=fullName>.\n  syntax:\n    content: public Type Schema { get; set; }\n    return:\n      type: System.Type\n      description: A <xref:System.Type> value that indicates the type of output that the method that is marked with the ManagementTask attribute will output.\n  overload: System.Management.Instrumentation.ManagementTaskAttribute.Schema*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Management.Instrumentation.ManagementMemberAttribute\n  isExternal: false\n  name: System.Management.Instrumentation.ManagementMemberAttribute\n- uid: System.Management.Instrumentation.ManagementTaskAttribute.#ctor\n  parent: System.Management.Instrumentation.ManagementTaskAttribute\n  isExternal: false\n  name: ManagementTaskAttribute()\n  nameWithType: ManagementTaskAttribute.ManagementTaskAttribute()\n  fullName: System.Management.Instrumentation.ManagementTaskAttribute.ManagementTaskAttribute()\n- uid: System.Management.Instrumentation.ManagementTaskAttribute.Schema\n  parent: System.Management.Instrumentation.ManagementTaskAttribute\n  isExternal: false\n  name: Schema\n  nameWithType: ManagementTaskAttribute.Schema\n  fullName: System.Management.Instrumentation.ManagementTaskAttribute.Schema\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Management.Instrumentation.ManagementTaskAttribute.#ctor*\n  parent: System.Management.Instrumentation.ManagementTaskAttribute\n  isExternal: false\n  name: ManagementTaskAttribute\n  nameWithType: ManagementTaskAttribute.ManagementTaskAttribute\n- uid: System.Management.Instrumentation.ManagementTaskAttribute.Schema*\n  parent: System.Management.Instrumentation.ManagementTaskAttribute\n  isExternal: false\n  name: Schema\n  nameWithType: ManagementTaskAttribute.Schema\n"}