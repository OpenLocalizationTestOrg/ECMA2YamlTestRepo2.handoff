{"nodes":[{"pos":[868,1116],"content":"Serves as a partial implementation of the abstract <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and serves as a base class for the <bpt id=\"p2\">&lt;xref href=\"System.Web.XmlSiteMapProvider\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class, which is the default site map provider in ASP.NET.","needQuote":true,"needEscape":true,"source":"Serves as a partial implementation of the abstract <xref href=\"System.Web.SiteMapProvider\"></xref> class and serves as a base class for the <xref href=\"System.Web.XmlSiteMapProvider\"></xref> class, which is the default site map provider in ASP.NET."},{"pos":[1129,6619],"content":"The StaticSiteMapProvider class is a partial implementation of the abstract <xref:System.Web.SiteMapProvider> class and supplies two additional methods: <xref:System.Web.StaticSiteMapProvider.AddNode%2A> and <xref:System.Web.StaticSiteMapProvider.RemoveNode%2A>, as well as the abstract <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> and protected <xref:System.Web.StaticSiteMapProvider.Clear%2A> methods.       The StaticSiteMapProvider class supports writing a site map provider (for example, an <xref:System.Web.XmlSiteMapProvider>) that translates a site map that is stored in persistent storage to one that is stored in memory. The StaticSiteMapProvider class provides basic implementations for storing and retrieving <xref:System.Web.SiteMapNode> objects.       The <xref:System.Web.SiteMapProvider> and StaticSiteMapProvider classes support the concept of a site map provider hierarchy, where a site map provider can have a hierarchical relationship with other site map providers. This pattern is implemented with the <xref:System.Web.SiteMapProvider.RootProvider%2A> and <xref:System.Web.SiteMapProvider.ParentProvider%2A> properties.       The StaticSiteMapProvider class stores its <xref:System.Web.SiteMapNode> objects in hash tables and internally uses the <xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName> property of the pages, represented by site map nodes, as keys. (If a site map node does not specify a URL, it is tracked using an automatically generated unique key.) As a result, you cannot have site map nodes wherein a site map node with the same URL is used more than once. For example, attempting to load the site map node illustrated in the following code example with the <xref:System.Web.XmlSiteMapProvider> class, which is the default ASP.NET site map provider, or any site map provider that is derived from the  StaticSiteMapProvider class will not work because the AboutUs.aspx page is used more than once.      ```   <sitemap>     <sitemapnode title=\"Home\" description=\"Home\" url=\"default.aspx\" >       <sitemapnode title=\"Catalog\" description=\"Our catalog\" url=\"catalog.aspx\"/>       <sitemapnode title=\"About Us\" description=\"All about our company\" url=\"aboutus.aspx\"/>       <sitemapnode title=\"Driving Directions\" description=\"Directions to our store\" url=\"aboutus.aspx\"/>     </sitemapnode>   </sitemap>   ```       If you are extending the StaticSiteMapProvider class, the three most important methods are the <xref:System.Web.SiteMapProvider.GetRootNodeCore%2A>, <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>, and <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> methods. The <xref:System.Web.StaticSiteMapProvider.Clear%2A> and <xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A> methods have default implementations that are sufficient for most custom site map provider implementations.       The <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method is called to initialize derived site map providers, including any resources that are required to load site map data, but it does attempt to build the site map node in memory. If your derived class is using files to store site map data, any file initialization can be performed here. If the site map node uses some other type of data store, such as a relational database, initializing a connection might be performed here. Additional attributes, such as file names or connection strings that are placed on the site map provider element in the configuration are processed by the ASP.NET configuration system and passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method with the `attributes` parameter.       The <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method must be overridden by all classes that are derived from the StaticSiteMapProvider class and is called to load the site map node from persistent storage and convert it to an internal representation. The <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method is called internally in many of the default member implementations of the StaticSiteMapProvider and <xref:System.Web.XmlSiteMapProvider> classes. If you implement your own site map provider, ensure that site map data processing occurs once and subsequent calls to the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method return immediately, if site map information has already been loaded. When you implement the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method, ensure it is thread safe, as multiple concurrent page requests can result indirectly in multiple calls to load site map information. The site map infrastructure supports displaying site map information based on the user's role. Depending on the <xref:System.Web.SiteMapNode.Roles%2A> property that are supported by the individual <xref:System.Web.SiteMapNode> objects, a different navigation structure can exist for different users. The default implementations of the site map node retrieval members of the StaticSiteMapProvider class perform security trimming automatically by calling the <xref:System.Web.SiteMapProvider.IsAccessibleToUser%2A> method.       The <xref:System.Web.StaticSiteMapProvider.AddNode%2A>, <xref:System.Web.StaticSiteMapProvider.Clear%2A> and <xref:System.Web.StaticSiteMapProvider.RemoveNode%2A> methods manipulate the internal collections that are used to track site map nodes in a thread-safe manner.","needQuote":false,"needEscape":true,"nodes":[{"content":"The StaticSiteMapProvider class is a partial implementation of the abstract &lt;xref:System.Web.SiteMapProvider&gt; class and supplies two additional methods: &lt;xref:System.Web.StaticSiteMapProvider.AddNode%2A&gt; and &lt;xref:System.Web.StaticSiteMapProvider.RemoveNode%2A&gt;, as well as the abstract &lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt; and protected &lt;xref:System.Web.StaticSiteMapProvider.Clear%2A&gt; methods.","pos":[0,414],"source":"The StaticSiteMapProvider class is a partial implementation of the abstract <xref:System.Web.SiteMapProvider> class and supplies two additional methods: <xref:System.Web.StaticSiteMapProvider.AddNode%2A> and <xref:System.Web.StaticSiteMapProvider.RemoveNode%2A>, as well as the abstract <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> and protected <xref:System.Web.StaticSiteMapProvider.Clear%2A> methods."},{"content":"The StaticSiteMapProvider class supports writing a site map provider (for example, an &lt;xref:System.Web.XmlSiteMapProvider&gt;) that translates a site map that is stored in persistent storage to one that is stored in memory.","pos":[421,641],"source":"       The StaticSiteMapProvider class supports writing a site map provider (for example, an <xref:System.Web.XmlSiteMapProvider>) that translates a site map that is stored in persistent storage to one that is stored in memory."},{"content":"The StaticSiteMapProvider class provides basic implementations for storing and retrieving &lt;xref:System.Web.SiteMapNode&gt; objects.","pos":[642,770],"source":" The StaticSiteMapProvider class provides basic implementations for storing and retrieving <xref:System.Web.SiteMapNode> objects."},{"content":"The &lt;xref:System.Web.SiteMapProvider&gt; and StaticSiteMapProvider classes support the concept of a site map provider hierarchy, where a site map provider can have a hierarchical relationship with other site map providers.","pos":[777,996],"source":"       The <xref:System.Web.SiteMapProvider> and StaticSiteMapProvider classes support the concept of a site map provider hierarchy, where a site map provider can have a hierarchical relationship with other site map providers."},{"content":"This pattern is implemented with the &lt;xref:System.Web.SiteMapProvider.RootProvider%2A&gt; and &lt;xref:System.Web.SiteMapProvider.ParentProvider%2A&gt; properties.","pos":[997,1151],"source":" This pattern is implemented with the <xref:System.Web.SiteMapProvider.RootProvider%2A> and <xref:System.Web.SiteMapProvider.ParentProvider%2A> properties."},{"content":"The StaticSiteMapProvider class stores its &lt;xref:System.Web.SiteMapNode&gt; objects in hash tables and internally uses the &lt;xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName&gt; property of the pages, represented by site map nodes, as keys.","pos":[1158,1402],"source":"       The StaticSiteMapProvider class stores its <xref:System.Web.SiteMapNode> objects in hash tables and internally uses the <xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName> property of the pages, represented by site map nodes, as keys."},{"content":"(If a site map node does not specify a URL, it is tracked using an automatically generated unique key.) As a result, you cannot have site map nodes wherein a site map node with the same URL is used more than once.","pos":[1403,1616]},{"content":"For example, attempting to load the site map node illustrated in the following code example with the &lt;xref:System.Web.XmlSiteMapProvider&gt; class, which is the default ASP.NET site map provider, or any site map provider that is derived from the  StaticSiteMapProvider class will not work because the AboutUs.aspx page is used more than once.","pos":[1617,1956],"source":" For example, attempting to load the site map node illustrated in the following code example with the <xref:System.Web.XmlSiteMapProvider> class, which is the default ASP.NET site map provider, or any site map provider that is derived from the  StaticSiteMapProvider class will not work because the AboutUs.aspx page is used more than once."},{"content":"<ph id=\"ph1\">```   &lt;sitemap&gt;     &lt;sitemapnode title=\"Home\" description=\"Home\" url=\"default.aspx\" &gt;       &lt;sitemapnode title=\"Catalog\" description=\"Our catalog\" url=\"catalog.aspx\"/&gt;       &lt;sitemapnode title=\"About Us\" description=\"All about our company\" url=\"aboutus.aspx\"/&gt;       &lt;sitemapnode title=\"Driving Directions\" description=\"Directions to our store\" url=\"aboutus.aspx\"/&gt;     &lt;/sitemapnode&gt;   &lt;/sitemap&gt;   ```</ph>       If you are extending the StaticSiteMapProvider class, the three most important methods are the &lt;xref:System.Web.SiteMapProvider.GetRootNodeCore%2A&gt;, &lt;xref:System.Configuration.Provider.ProviderBase.Initialize%2A&gt;, and &lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt; methods.","pos":[1962,2654],"source":"```   <sitemap>     <sitemapnode title=\"Home\" description=\"Home\" url=\"default.aspx\" >       <sitemapnode title=\"Catalog\" description=\"Our catalog\" url=\"catalog.aspx\"/>       <sitemapnode title=\"About Us\" description=\"All about our company\" url=\"aboutus.aspx\"/>       <sitemapnode title=\"Driving Directions\" description=\"Directions to our store\" url=\"aboutus.aspx\"/>     </sitemapnode>   </sitemap>   ```       If you are extending the StaticSiteMapProvider class, the three most important methods are the <xref:System.Web.SiteMapProvider.GetRootNodeCore%2A>, <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>, and <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> methods."},{"content":"The &lt;xref:System.Web.StaticSiteMapProvider.Clear%2A&gt; and &lt;xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A&gt; methods have default implementations that are sufficient for most custom site map provider implementations.","pos":[2655,2878],"source":" The <xref:System.Web.StaticSiteMapProvider.Clear%2A> and <xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A> methods have default implementations that are sufficient for most custom site map provider implementations."},{"content":"The &lt;xref:System.Configuration.Provider.ProviderBase.Initialize%2A&gt; method is called to initialize derived site map providers, including any resources that are required to load site map data, but it does attempt to build the site map node in memory.","pos":[2885,3134],"source":"       The <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method is called to initialize derived site map providers, including any resources that are required to load site map data, but it does attempt to build the site map node in memory."},{"content":"If your derived class is using files to store site map data, any file initialization can be performed here.","pos":[3135,3242]},{"content":"If the site map node uses some other type of data store, such as a relational database, initializing a connection might be performed here.","pos":[3243,3381]},{"content":"Additional attributes, such as file names or connection strings that are placed on the site map provider element in the configuration are processed by the ASP.NET configuration system and passed to the &lt;xref:System.Configuration.Provider.ProviderBase.Initialize%2A&gt; method with the <ph id=\"ph1\">`attributes`</ph> parameter.","pos":[3382,3687],"source":" Additional attributes, such as file names or connection strings that are placed on the site map provider element in the configuration are processed by the ASP.NET configuration system and passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method with the `attributes` parameter."},{"content":"The &lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt; method must be overridden by all classes that are derived from the StaticSiteMapProvider class and is called to load the site map node from persistent storage and convert it to an internal representation.","pos":[3694,3958],"source":"       The <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method must be overridden by all classes that are derived from the StaticSiteMapProvider class and is called to load the site map node from persistent storage and convert it to an internal representation."},{"content":"The &lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt; method is called internally in many of the default member implementations of the StaticSiteMapProvider and &lt;xref:System.Web.XmlSiteMapProvider&gt; classes.","pos":[3959,4171],"source":" The <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method is called internally in many of the default member implementations of the StaticSiteMapProvider and <xref:System.Web.XmlSiteMapProvider> classes."},{"content":"If you implement your own site map provider, ensure that site map data processing occurs once and subsequent calls to the &lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt; method return immediately, if site map information has already been loaded.","pos":[4172,4425],"source":" If you implement your own site map provider, ensure that site map data processing occurs once and subsequent calls to the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method return immediately, if site map information has already been loaded."},{"content":"When you implement the &lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt; method, ensure it is thread safe, as multiple concurrent page requests can result indirectly in multiple calls to load site map information.","pos":[4426,4645],"source":" When you implement the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method, ensure it is thread safe, as multiple concurrent page requests can result indirectly in multiple calls to load site map information."},{"content":"The site map infrastructure supports displaying site map information based on the user's role.","pos":[4646,4740]},{"content":"Depending on the &lt;xref:System.Web.SiteMapNode.Roles%2A&gt; property that are supported by the individual &lt;xref:System.Web.SiteMapNode&gt; objects, a different navigation structure can exist for different users.","pos":[4741,4945],"source":" Depending on the <xref:System.Web.SiteMapNode.Roles%2A> property that are supported by the individual <xref:System.Web.SiteMapNode> objects, a different navigation structure can exist for different users."},{"content":"The default implementations of the site map node retrieval members of the StaticSiteMapProvider class perform security trimming automatically by calling the &lt;xref:System.Web.SiteMapProvider.IsAccessibleToUser%2A&gt; method.","pos":[4946,5166],"source":" The default implementations of the site map node retrieval members of the StaticSiteMapProvider class perform security trimming automatically by calling the <xref:System.Web.SiteMapProvider.IsAccessibleToUser%2A> method."},{"content":"The &lt;xref:System.Web.StaticSiteMapProvider.AddNode%2A&gt;, &lt;xref:System.Web.StaticSiteMapProvider.Clear%2A&gt; and &lt;xref:System.Web.StaticSiteMapProvider.RemoveNode%2A&gt; methods manipulate the internal collections that are used to track site map nodes in a thread-safe manner.","pos":[5173,5442],"source":"       The <xref:System.Web.StaticSiteMapProvider.AddNode%2A>, <xref:System.Web.StaticSiteMapProvider.Clear%2A> and <xref:System.Web.StaticSiteMapProvider.RemoveNode%2A> methods manipulate the internal collections that are used to track site map nodes in a thread-safe manner."}]},{"pos":[10690,10784],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.StaticSiteMapProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.StaticSiteMapProvider\"></xref> class."},{"pos":[10797,10978],"content":"**Note** This class is not instantiated directly. This constructor is called from the constructor of classes that are derived from the <xref:System.Web.StaticSiteMapProvider> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> This class is not instantiated directly.","pos":[0,49],"source":"**Note** This class is not instantiated directly."},{"content":"This constructor is called from the constructor of classes that are derived from the &lt;xref:System.Web.StaticSiteMapProvider&gt; class.","pos":[50,181],"source":" This constructor is called from the constructor of classes that are derived from the <xref:System.Web.StaticSiteMapProvider> class."}]},{"pos":[11638,11861],"content":"Adds a <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the collections that are maintained by the site map provider and establishes a parent/child relationship between the <bpt id=\"p2\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Adds a <xref href=\"System.Web.SiteMapNode\"></xref> to the collections that are maintained by the site map provider and establishes a parent/child relationship between the <xref href=\"System.Web.SiteMapNode\"></xref> objects."},{"pos":[11874,13578],"content":"The site map node that is identified by the `node` parameter is added to an internal collection and a parent-child relationship is created between it and the site map node that is identified by the `parentNode` parameter.       The URL for a site map node might be interpreted when it is added to the internal collections. Application-relative and relative URLs are expanded to application-absolute virtual paths, which are then used internally to store and access the individual instances of the <xref:System.Web.SiteMapNode> class. Other URLs, such as physical paths, paths with protocols in them, and UNC paths, are not interpreted.       The <xref:System.Web.XmlSiteMapProvider> class, which is derived from the <xref:System.Web.StaticSiteMapProvider> class, and is the default site map provider for ASP.NET, uses the <xref:System.Web.SiteMapNode.Url%2A> property of a <xref:System.Web.SiteMapNode> object as a lookup key in its internal collections, by default. If the <xref:System.Web.SiteMapNode.Url%2A> property of the <xref:System.Web.SiteMapNode> is set, it must be unique within the scope of the site map provider. The <xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A> method attempts to retrieve site map nodes based on their <xref:System.Web.SiteMapNode.Url%2A> property. Otherwise, you can use the <xref:System.Web.SiteMapNode.Key%2A> property and the corresponding <xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A> method to retrieve site map nodes. If no <xref:System.Web.SiteMapNode.Url%2A> or <xref:System.Web.SiteMapNode.Key%2A> is specified, the site map provider automatically generates a <xref:System.Web.SiteMapNode.Key%2A> to track the site map nodes.","needQuote":false,"needEscape":true,"nodes":[{"content":"The site map node that is identified by the <ph id=\"ph1\">`node`</ph> parameter is added to an internal collection and a parent-child relationship is created between it and the site map node that is identified by the <ph id=\"ph2\">`parentNode`</ph> parameter.","pos":[0,221],"source":"The site map node that is identified by the `node` parameter is added to an internal collection and a parent-child relationship is created between it and the site map node that is identified by the `parentNode` parameter."},{"content":"The URL for a site map node might be interpreted when it is added to the internal collections.","pos":[228,322]},{"content":"Application-relative and relative URLs are expanded to application-absolute virtual paths, which are then used internally to store and access the individual instances of the &lt;xref:System.Web.SiteMapNode&gt; class.","pos":[323,533],"source":" Application-relative and relative URLs are expanded to application-absolute virtual paths, which are then used internally to store and access the individual instances of the <xref:System.Web.SiteMapNode> class."},{"content":"Other URLs, such as physical paths, paths with protocols in them, and UNC paths, are not interpreted.","pos":[534,635]},{"content":"The &lt;xref:System.Web.XmlSiteMapProvider&gt; class, which is derived from the &lt;xref:System.Web.StaticSiteMapProvider&gt; class, and is the default site map provider for ASP.NET, uses the &lt;xref:System.Web.SiteMapNode.Url%2A&gt; property of a &lt;xref:System.Web.SiteMapNode&gt; object as a lookup key in its internal collections, by default.","pos":[642,966],"source":"       The <xref:System.Web.XmlSiteMapProvider> class, which is derived from the <xref:System.Web.StaticSiteMapProvider> class, and is the default site map provider for ASP.NET, uses the <xref:System.Web.SiteMapNode.Url%2A> property of a <xref:System.Web.SiteMapNode> object as a lookup key in its internal collections, by default."},{"content":"If the &lt;xref:System.Web.SiteMapNode.Url%2A&gt; property of the &lt;xref:System.Web.SiteMapNode&gt; is set, it must be unique within the scope of the site map provider.","pos":[967,1125],"source":" If the <xref:System.Web.SiteMapNode.Url%2A> property of the <xref:System.Web.SiteMapNode> is set, it must be unique within the scope of the site map provider."},{"content":"The &lt;xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A&gt; method attempts to retrieve site map nodes based on their &lt;xref:System.Web.SiteMapNode.Url%2A&gt; property.","pos":[1126,1293],"source":" The <xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A> method attempts to retrieve site map nodes based on their <xref:System.Web.SiteMapNode.Url%2A> property."},{"content":"Otherwise, you can use the &lt;xref:System.Web.SiteMapNode.Key%2A&gt; property and the corresponding &lt;xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A&gt; method to retrieve site map nodes.","pos":[1294,1489],"source":" Otherwise, you can use the <xref:System.Web.SiteMapNode.Key%2A> property and the corresponding <xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A> method to retrieve site map nodes."},{"content":"If no &lt;xref:System.Web.SiteMapNode.Url%2A&gt; or &lt;xref:System.Web.SiteMapNode.Key%2A&gt; is specified, the site map provider automatically generates a &lt;xref:System.Web.SiteMapNode.Key%2A&gt; to track the site map nodes.","pos":[1490,1700],"source":" If no <xref:System.Web.SiteMapNode.Url%2A> or <xref:System.Web.SiteMapNode.Key%2A> is specified, the site map provider automatically generates a <xref:System.Web.SiteMapNode.Key%2A> to track the site map nodes."}]},{"pos":[13786,13866],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add to the site map provider.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.SiteMapNode\"></xref> to add to the site map provider."},{"pos":[13942,14016],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> under which to add <ph id=\"ph1\">`node`</ph>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.SiteMapNode\"></xref> under which to add `node`."},{"pos":[14187,14269],"content":"<ph id=\"ph1\">&lt;code&gt;node&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>node</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14380,14675],"content":"The &lt;xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName&gt; or &lt;xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName&gt; is already registered with the <xref href=\"System.Web.StaticSiteMapProvider\"></xref>. A site map node must be made up of pages with unique URLs or keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> or <ph id=\"ph3\">&amp;lt;</ph>xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName<ph id=\"ph4\">&amp;gt;</ph> is already registered with the <bpt id=\"p1\">&lt;xref href=\"System.Web.StaticSiteMapProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,228],"source":"The &lt;xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName&gt; or &lt;xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName&gt; is already registered with the <xref href=\"System.Web.StaticSiteMapProvider\"></xref>."},{"content":"A site map node must be made up of pages with unique URLs or keys.","pos":[229,295]}]},{"pos":[15049,15164],"content":"When overridden in a derived class, loads the site map information from persistent storage and builds it in memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, loads the site map information from persistent storage and builds it in memory.","pos":[0,115]}]},{"pos":[15176,15562],"content":"The BuildSiteMap method is the one abstract member of the <xref:System.Web.StaticSiteMapProvider> class. The BuildSiteMap method is called to load and build the site map node from persistent storage. When you implement the BuildSiteMap method, ensure that it is thread-safe, because multiple concurrent page requests can result indirectly in multiple calls to load site map information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The BuildSiteMap method is the one abstract member of the <xref:System.Web.StaticSiteMapProvider> class. The BuildSiteMap method is called to load and build the site map node from persistent storage. When you implement the BuildSiteMap method, ensure that it is thread-safe, because multiple concurrent page requests can result indirectly in multiple calls to load site map information.","pos":[0,386],"nodes":[{"content":"The BuildSiteMap method is the one abstract member of the &lt;xref:System.Web.StaticSiteMapProvider&gt; class.","pos":[0,104],"source":"The BuildSiteMap method is the one abstract member of the <xref:System.Web.StaticSiteMapProvider> class."},{"content":"The BuildSiteMap method is called to load and build the site map node from persistent storage.","pos":[105,199]},{"content":"When you implement the BuildSiteMap method, ensure that it is thread-safe, because multiple concurrent page requests can result indirectly in multiple calls to load site map information.","pos":[200,386]}]}]},{"pos":[16608,16698],"content":"The root <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the site map navigation structure.","needQuote":true,"needEscape":true,"source":"The root <xref href=\"System.Web.SiteMapNode\"></xref> of the site map navigation structure."},{"pos":[17113,17279],"content":"Removes all elements in the collections of child and parent site map nodes that the <bpt id=\"p1\">&lt;xref href=\"System.Web.StaticSiteMapProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> tracks as part of its state.","needQuote":true,"needEscape":true,"source":"Removes all elements in the collections of child and parent site map nodes that the <xref href=\"System.Web.StaticSiteMapProvider\"></xref> tracks as part of its state."},{"pos":[17292,17750],"content":"Classes that are derived from the <xref:System.Web.StaticSiteMapProvider> class can override the Clear method to perform additional cleanup, depending on what state the derived classes maintain.       The Clear method does not reset state that is initialized during the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method—it resets only state that is initialized during the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"Classes that are derived from the <xref:System.Web.StaticSiteMapProvider> class can override the Clear method to perform additional cleanup, depending on what state the derived classes maintain.       The Clear method does not reset state that is initialized during the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method—it resets only state that is initialized during the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method.","pos":[0,456],"nodes":[{"content":"Classes that are derived from the &lt;xref:System.Web.StaticSiteMapProvider&gt; class can override the Clear method to perform additional cleanup, depending on what state the derived classes maintain.","pos":[0,194],"source":"Classes that are derived from the <xref:System.Web.StaticSiteMapProvider> class can override the Clear method to perform additional cleanup, depending on what state the derived classes maintain."},{"content":"The Clear method does not reset state that is initialized during the &lt;xref:System.Configuration.Provider.ProviderBase.Initialize%2A&gt; method—it resets only state that is initialized during the &lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt; method.","pos":[201,456],"source":"       The Clear method does not reset state that is initialized during the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method—it resets only state that is initialized during the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method."}]}]},{"pos":[18979,19088],"content":"Retrieves a <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the page at the specified URL.","needQuote":true,"needEscape":true,"source":"Retrieves a <xref href=\"System.Web.SiteMapNode\"></xref> object that represents the page at the specified URL."},{"pos":[19101,20419],"content":"The provided URL is typically a virtual or absolute URL. It can also be a URL that uses ASP.NET application-relative syntax, such as `\"~/``apprelativedirectory``\"`. The <xref:System.Web.StaticSiteMapProvider> class automatically normalizes application-relative raw URLs to an absolute virtual path.       The <xref:System.Web.XmlSiteMapProvider> object, which is derived from the <xref:System.Web.StaticSiteMapProvider> and is the default site map provider for ASP.NET, uses the <xref:System.Web.SiteMapNode.Url%2A> property of a <xref:System.Web.SiteMapNode> object as a lookup key in its internal collections, by default. If the <xref:System.Web.SiteMapNode.Url%2A> property of the <xref:System.Web.SiteMapNode> is set, it must be unique within the scope of the site map provider. The FindSiteMapNode method attempts to retrieve site map nodes based on their <xref:System.Web.SiteMapNode.Url%2A>. Otherwise, you can use the <xref:System.Web.SiteMapNode.Key%2A> property and the corresponding <xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A> method to retrieve site map nodes. If no <xref:System.Web.SiteMapNode.Url%2A> or <xref:System.Web.SiteMapNode.Key%2A> is specified, the site map provider automatically generates a <xref:System.Web.SiteMapNode.Key%2A> property to track the site map nodes.","needQuote":false,"needEscape":true,"nodes":[{"content":"The provided URL is typically a virtual or absolute URL.","pos":[0,56]},{"content":"It can also be a URL that uses ASP.NET application-relative syntax, such as <ph id=\"ph1\">`\"~/``apprelativedirectory``\"`</ph>.","pos":[57,164],"source":" It can also be a URL that uses ASP.NET application-relative syntax, such as `\"~/``apprelativedirectory``\"`."},{"content":"The &lt;xref:System.Web.StaticSiteMapProvider&gt; class automatically normalizes application-relative raw URLs to an absolute virtual path.","pos":[165,298],"source":" The <xref:System.Web.StaticSiteMapProvider> class automatically normalizes application-relative raw URLs to an absolute virtual path."},{"content":"The &lt;xref:System.Web.XmlSiteMapProvider&gt; object, which is derived from the &lt;xref:System.Web.StaticSiteMapProvider&gt; and is the default site map provider for ASP.NET, uses the &lt;xref:System.Web.SiteMapNode.Url%2A&gt; property of a &lt;xref:System.Web.SiteMapNode&gt; object as a lookup key in its internal collections, by default.","pos":[305,623],"source":"       The <xref:System.Web.XmlSiteMapProvider> object, which is derived from the <xref:System.Web.StaticSiteMapProvider> and is the default site map provider for ASP.NET, uses the <xref:System.Web.SiteMapNode.Url%2A> property of a <xref:System.Web.SiteMapNode> object as a lookup key in its internal collections, by default."},{"content":"If the &lt;xref:System.Web.SiteMapNode.Url%2A&gt; property of the &lt;xref:System.Web.SiteMapNode&gt; is set, it must be unique within the scope of the site map provider.","pos":[624,782],"source":" If the <xref:System.Web.SiteMapNode.Url%2A> property of the <xref:System.Web.SiteMapNode> is set, it must be unique within the scope of the site map provider."},{"content":"The FindSiteMapNode method attempts to retrieve site map nodes based on their &lt;xref:System.Web.SiteMapNode.Url%2A&gt;.","pos":[783,898],"source":" The FindSiteMapNode method attempts to retrieve site map nodes based on their <xref:System.Web.SiteMapNode.Url%2A>."},{"content":"Otherwise, you can use the &lt;xref:System.Web.SiteMapNode.Key%2A&gt; property and the corresponding &lt;xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A&gt; method to retrieve site map nodes.","pos":[899,1094],"source":" Otherwise, you can use the <xref:System.Web.SiteMapNode.Key%2A> property and the corresponding <xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A> method to retrieve site map nodes."},{"content":"If no &lt;xref:System.Web.SiteMapNode.Url%2A&gt; or &lt;xref:System.Web.SiteMapNode.Key%2A&gt; is specified, the site map provider automatically generates a &lt;xref:System.Web.SiteMapNode.Key%2A&gt; property to track the site map nodes.","pos":[1095,1314],"source":" If no <xref:System.Web.SiteMapNode.Url%2A> or <xref:System.Web.SiteMapNode.Key%2A> is specified, the site map provider automatically generates a <xref:System.Web.SiteMapNode.Key%2A> property to track the site map nodes."}]},{"pos":[20594,20693],"content":"A URL that identifies the page for which to retrieve a <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A URL that identifies the page for which to retrieve a <xref href=\"System.Web.SiteMapNode\"></xref>."},{"pos":[20760,20982],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the page identified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">rawURL</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, if no corresponding site map node is found.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the page identified by <code>rawURL</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if no corresponding site map node is found."},{"pos":[21161,21245],"content":"<ph id=\"ph1\">&lt;code&gt;rawURL&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>rawURL</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[21717,21805],"content":"Retrieves a <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object based on a specified key.","needQuote":true,"needEscape":true,"source":"Retrieves a <xref href=\"System.Web.SiteMapNode\"></xref> object based on a specified key."},{"pos":[21818,24121],"content":"The FindSiteMapNodeFromKey method retrieves a site map node from an internal <xref:System.Collections.Hashtable> object based on `key`.       The <xref:System.Web.XmlSiteMapProvider> object, which is derived from the <xref:System.Web.StaticSiteMapProvider> class and is the default site map provider for ASP.NET, uses the <xref:System.Web.SiteMapNode.Url%2A> property of a <xref:System.Web.SiteMapNode> object as a lookup key in its internal collections, by default. If the <xref:System.Web.SiteMapNode.Url%2A> property of the <xref:System.Web.SiteMapNode> is set, it must be unique within the scope of the site map provider. The <xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A> method attempts to retrieve site map nodes based on their <xref:System.Web.SiteMapNode.Url%2A>. Otherwise, you can use the <xref:System.Web.SiteMapNode.Key%2A> property and the corresponding FindSiteMapNodeFromKey method to retrieve site map nodes.       The <xref:System.Web.StaticSiteMapProvider> has a default implementation that looks up instances of the <xref:System.Web.SiteMapNode> class based on the `key` parameter. If a site map provider implementer used the <xref:System.Web.StaticSiteMapProvider.AddNode%2A> method, the <xref:System.Web.StaticSiteMapProvider> already will have stored a reference to each <xref:System.Web.SiteMapNode> based on the value of the <xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName> property. By default, the <xref:System.Web.XmlSiteMapProvider> generates GUIDs for instances of the <xref:System.Web.SiteMapNode> class that do not have a value for the <xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName> property.  Custom site map provider implementers must provide their own mechanism for generating unique values of the <xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName> property in the event that an instance of the <xref:System.Web.SiteMapNode> class does not have a value for the <xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName> property.       The <xref:System.Web.SiteMapProvider> and <xref:System.Web.XmlSiteMapProvider> classes, which are the default site map provider implementation for ASP.NET, use the URL of a <xref:System.Web.SiteMapNode> object as a key in the various collections that the classes maintain.","needQuote":false,"needEscape":true,"nodes":[{"content":"The FindSiteMapNodeFromKey method retrieves a site map node from an internal &lt;xref:System.Collections.Hashtable&gt; object based on <ph id=\"ph1\">`key`</ph>.","pos":[0,135],"source":"The FindSiteMapNodeFromKey method retrieves a site map node from an internal <xref:System.Collections.Hashtable> object based on `key`."},{"content":"The &lt;xref:System.Web.XmlSiteMapProvider&gt; object, which is derived from the &lt;xref:System.Web.StaticSiteMapProvider&gt; class and is the default site map provider for ASP.NET, uses the &lt;xref:System.Web.SiteMapNode.Url%2A&gt; property of a &lt;xref:System.Web.SiteMapNode&gt; object as a lookup key in its internal collections, by default.","pos":[142,466],"source":"       The <xref:System.Web.XmlSiteMapProvider> object, which is derived from the <xref:System.Web.StaticSiteMapProvider> class and is the default site map provider for ASP.NET, uses the <xref:System.Web.SiteMapNode.Url%2A> property of a <xref:System.Web.SiteMapNode> object as a lookup key in its internal collections, by default."},{"content":"If the &lt;xref:System.Web.SiteMapNode.Url%2A&gt; property of the &lt;xref:System.Web.SiteMapNode&gt; is set, it must be unique within the scope of the site map provider.","pos":[467,625],"source":" If the <xref:System.Web.SiteMapNode.Url%2A> property of the <xref:System.Web.SiteMapNode> is set, it must be unique within the scope of the site map provider."},{"content":"The &lt;xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A&gt; method attempts to retrieve site map nodes based on their &lt;xref:System.Web.SiteMapNode.Url%2A&gt;.","pos":[626,784],"source":" The <xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A> method attempts to retrieve site map nodes based on their <xref:System.Web.SiteMapNode.Url%2A>."},{"content":"Otherwise, you can use the &lt;xref:System.Web.SiteMapNode.Key%2A&gt; property and the corresponding FindSiteMapNodeFromKey method to retrieve site map nodes.","pos":[785,937],"source":" Otherwise, you can use the <xref:System.Web.SiteMapNode.Key%2A> property and the corresponding FindSiteMapNodeFromKey method to retrieve site map nodes."},{"content":"The &lt;xref:System.Web.StaticSiteMapProvider&gt; has a default implementation that looks up instances of the &lt;xref:System.Web.SiteMapNode&gt; class based on the <ph id=\"ph1\">`key`</ph> parameter.","pos":[944,1113],"source":"       The <xref:System.Web.StaticSiteMapProvider> has a default implementation that looks up instances of the <xref:System.Web.SiteMapNode> class based on the `key` parameter."},{"content":"If a site map provider implementer used the &lt;xref:System.Web.StaticSiteMapProvider.AddNode%2A&gt; method, the &lt;xref:System.Web.StaticSiteMapProvider&gt; already will have stored a reference to each &lt;xref:System.Web.SiteMapNode&gt; based on the value of the &lt;xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName&gt; property.","pos":[1114,1433],"source":" If a site map provider implementer used the <xref:System.Web.StaticSiteMapProvider.AddNode%2A> method, the <xref:System.Web.StaticSiteMapProvider> already will have stored a reference to each <xref:System.Web.SiteMapNode> based on the value of the <xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName> property."},{"content":"By default, the &lt;xref:System.Web.XmlSiteMapProvider&gt; generates GUIDs for instances of the &lt;xref:System.Web.SiteMapNode&gt; class that do not have a value for the &lt;xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName&gt; property.","pos":[1434,1664],"source":" By default, the <xref:System.Web.XmlSiteMapProvider> generates GUIDs for instances of the <xref:System.Web.SiteMapNode> class that do not have a value for the <xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName> property."},{"content":"Custom site map provider implementers must provide their own mechanism for generating unique values of the &lt;xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName&gt; property in the event that an instance of the &lt;xref:System.Web.SiteMapNode&gt; class does not have a value for the &lt;xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName&gt; property.","pos":[1666,2018],"source":"  Custom site map provider implementers must provide their own mechanism for generating unique values of the <xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName> property in the event that an instance of the <xref:System.Web.SiteMapNode> class does not have a value for the <xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName> property."},{"content":"The &lt;xref:System.Web.SiteMapProvider&gt; and &lt;xref:System.Web.XmlSiteMapProvider&gt; classes, which are the default site map provider implementation for ASP.NET, use the URL of a &lt;xref:System.Web.SiteMapNode&gt; object as a key in the various collections that the classes maintain.","pos":[2025,2297],"source":"       The <xref:System.Web.SiteMapProvider> and <xref:System.Web.XmlSiteMapProvider> classes, which are the default site map provider implementation for ASP.NET, use the URL of a <xref:System.Web.SiteMapNode> object as a key in the various collections that the classes maintain."}]},{"pos":[24297,24378],"content":"A lookup key with which a <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is created.","needQuote":true,"needEscape":true,"source":"A lookup key with which a <xref href=\"System.Web.SiteMapNode\"></xref> is created."},{"pos":[24445,24797],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the page identified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, if security trimming is enabled and the site map node cannot be shown to the current user or the site map node is not found in the site map node collection by <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph2\">key</ph><ept id=\"p4\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the page identified by <code>key</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if security trimming is enabled and the site map node cannot be shown to the current user or the site map node is not found in the site map node collection by <code>key</code>."},{"pos":[25343,25443],"content":"Retrieves the child site map nodes of a specific <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Retrieves the child site map nodes of a specific <xref href=\"System.Web.SiteMapNode\"></xref> object."},{"pos":[25456,26222],"content":"The <xref:System.Web.SiteMapNode> objects delegate to the site map provider to keep track of their child and parent site map nodes. As a result, classes that implement a site map provider for a hierarchical site map structure, such as <xref:System.Web.StaticSiteMapProvider>, and use <xref:System.Web.SiteMapNode> objects to represent site map nodes, must track the hierarchical relationships of all site map nodes in order to be able to navigate an entire hierarchical tree.       The GetChildNodes method calls the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method internally to retrieve read-only <xref:System.Web.SiteMapNodeCollection> collection of site map nodes that are relative to the specified site map node and relevant to the current user.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <xref:System.Web.SiteMapNode> objects delegate to the site map provider to keep track of their child and parent site map nodes. As a result, classes that implement a site map provider for a hierarchical site map structure, such as <xref:System.Web.StaticSiteMapProvider>, and use <xref:System.Web.SiteMapNode> objects to represent site map nodes, must track the hierarchical relationships of all site map nodes in order to be able to navigate an entire hierarchical tree.       The GetChildNodes method calls the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method internally to retrieve read-only <xref:System.Web.SiteMapNodeCollection> collection of site map nodes that are relative to the specified site map node and relevant to the current user.","pos":[0,764],"nodes":[{"content":"The &lt;xref:System.Web.SiteMapNode&gt; objects delegate to the site map provider to keep track of their child and parent site map nodes.","pos":[0,131],"source":"The <xref:System.Web.SiteMapNode> objects delegate to the site map provider to keep track of their child and parent site map nodes."},{"content":"As a result, classes that implement a site map provider for a hierarchical site map structure, such as &lt;xref:System.Web.StaticSiteMapProvider&gt;, and use &lt;xref:System.Web.SiteMapNode&gt; objects to represent site map nodes, must track the hierarchical relationships of all site map nodes in order to be able to navigate an entire hierarchical tree.","pos":[132,475],"source":" As a result, classes that implement a site map provider for a hierarchical site map structure, such as <xref:System.Web.StaticSiteMapProvider>, and use <xref:System.Web.SiteMapNode> objects to represent site map nodes, must track the hierarchical relationships of all site map nodes in order to be able to navigate an entire hierarchical tree."},{"content":"The GetChildNodes method calls the &lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt; method internally to retrieve read-only &lt;xref:System.Web.SiteMapNodeCollection&gt; collection of site map nodes that are relative to the specified site map node and relevant to the current user.","pos":[482,764],"source":"       The GetChildNodes method calls the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method internally to retrieve read-only <xref:System.Web.SiteMapNodeCollection> collection of site map nodes that are relative to the specified site map node and relevant to the current user."}]}]},{"pos":[26426,26521],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to retrieve all child site map nodes.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.SiteMapNode\"></xref> for which to retrieve all child site map nodes."},{"pos":[26598,26836],"content":"A read-only <xref href=\"System.Web.SiteMapNodeCollection\"></xref> that contains the child site map nodes of <code>node</code>. If security trimming is enabled, the collection contains only site map nodes that the user is permitted to see.","needQuote":true,"needEscape":true,"nodes":[{"content":"A read-only <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the child site map nodes of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">node</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","pos":[0,126],"source":"A read-only <xref href=\"System.Web.SiteMapNodeCollection\"></xref> that contains the child site map nodes of <code>node</code>."},{"content":"If security trimming is enabled, the collection contains only site map nodes that the user is permitted to see.","pos":[127,238]}]},{"pos":[27013,27095],"content":"<ph id=\"ph1\">&lt;code&gt;node&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>node</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[27555,27655],"content":"Retrieves the parent site map node of a specific <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Retrieves the parent site map node of a specific <xref href=\"System.Web.SiteMapNode\"></xref> object."},{"pos":[27668,28943],"content":"The <xref:System.Web.SiteMapNode> objects delegate to the site map provider to keep track of their child and parent site map nodes. As a result, classes that implement a site map provider for a hierarchical site map structure, such as the <xref:System.Web.StaticSiteMapProvider> class, and use <xref:System.Web.SiteMapNode> objects to represent site map nodes, must track the hierarchical relationships of all site map nodes in order to be able to navigate an entire hierarchical tree.       If a <xref:System.Web.SiteMapNode.ParentNode%2A> property is not found, the <xref:System.Web.StaticSiteMapProvider> class detects whether the current site map provider has a <xref:System.Web.SiteMapProvider.ParentProvider%2A> property. If so, the site map provider calls the GetParentNode property for the parent site map provider. This enables the scenario where the parent site map node of a site map node is maintained by a different site map provider.       The GetParentNode method calls the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method internally to retrieve the <xref:System.Web.SiteMapNode> that represents the parent of the specified site map node. If security trimming is enabled, the site map node is returned only if the user is permitted to see it.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <xref:System.Web.SiteMapNode> objects delegate to the site map provider to keep track of their child and parent site map nodes. As a result, classes that implement a site map provider for a hierarchical site map structure, such as the <xref:System.Web.StaticSiteMapProvider> class, and use <xref:System.Web.SiteMapNode> objects to represent site map nodes, must track the hierarchical relationships of all site map nodes in order to be able to navigate an entire hierarchical tree.       If a <xref:System.Web.SiteMapNode.ParentNode%2A> property is not found, the <xref:System.Web.StaticSiteMapProvider> class detects whether the current site map provider has a <xref:System.Web.SiteMapProvider.ParentProvider%2A> property. If so, the site map provider calls the GetParentNode property for the parent site map provider. This enables the scenario where the parent site map node of a site map node is maintained by a different site map provider.       The GetParentNode method calls the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method internally to retrieve the <xref:System.Web.SiteMapNode> that represents the parent of the specified site map node. If security trimming is enabled, the site map node is returned only if the user is permitted to see it.","pos":[0,1271],"nodes":[{"content":"The &lt;xref:System.Web.SiteMapNode&gt; objects delegate to the site map provider to keep track of their child and parent site map nodes.","pos":[0,131],"source":"The <xref:System.Web.SiteMapNode> objects delegate to the site map provider to keep track of their child and parent site map nodes."},{"content":"As a result, classes that implement a site map provider for a hierarchical site map structure, such as the &lt;xref:System.Web.StaticSiteMapProvider&gt; class, and use &lt;xref:System.Web.SiteMapNode&gt; objects to represent site map nodes, must track the hierarchical relationships of all site map nodes in order to be able to navigate an entire hierarchical tree.","pos":[132,485],"source":" As a result, classes that implement a site map provider for a hierarchical site map structure, such as the <xref:System.Web.StaticSiteMapProvider> class, and use <xref:System.Web.SiteMapNode> objects to represent site map nodes, must track the hierarchical relationships of all site map nodes in order to be able to navigate an entire hierarchical tree."},{"content":"If a &lt;xref:System.Web.SiteMapNode.ParentNode%2A&gt; property is not found, the &lt;xref:System.Web.StaticSiteMapProvider&gt; class detects whether the current site map provider has a &lt;xref:System.Web.SiteMapProvider.ParentProvider%2A&gt; property.","pos":[492,727],"source":"       If a <xref:System.Web.SiteMapNode.ParentNode%2A> property is not found, the <xref:System.Web.StaticSiteMapProvider> class detects whether the current site map provider has a <xref:System.Web.SiteMapProvider.ParentProvider%2A> property."},{"content":"If so, the site map provider calls the GetParentNode property for the parent site map provider.","pos":[728,823]},{"content":"This enables the scenario where the parent site map node of a site map node is maintained by a different site map provider.","pos":[824,947]},{"content":"The GetParentNode method calls the &lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt; method internally to retrieve the &lt;xref:System.Web.SiteMapNode&gt; that represents the parent of the specified site map node.","pos":[954,1167],"source":"       The GetParentNode method calls the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method internally to retrieve the <xref:System.Web.SiteMapNode> that represents the parent of the specified site map node."},{"content":"If security trimming is enabled, the site map node is returned only if the user is permitted to see it.","pos":[1168,1271]}]}]},{"pos":[29137,29232],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to retrieve the parent site map node.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.SiteMapNode\"></xref> for which to retrieve the parent site map node."},{"pos":[29299,29602],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the parent of the specified <bpt id=\"p2\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, if no parent site map node exists or the user is not permitted to see the parent site map node.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the parent of the specified <xref href=\"System.Web.SiteMapNode\"></xref>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if no parent site map node exists or the user is not permitted to see the parent site map node."},{"pos":[29779,29861],"content":"<ph id=\"ph1\">&lt;code&gt;node&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>node</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[30306,30456],"content":"Removes the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from all site map node collections that are tracked by the site map provider.","needQuote":true,"needEscape":true,"source":"Removes the specified <xref href=\"System.Web.SiteMapNode\"></xref> object from all site map node collections that are tracked by the site map provider."},{"pos":[30631,30694],"content":"The site map node to remove from the site map node collections.","needQuote":true,"needEscape":true,"nodes":[{"content":"The site map node to remove from the site map node collections.","pos":[0,63]}]},{"pos":[30868,30950],"content":"<ph id=\"ph1\">&lt;code&gt;node&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>node</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.StaticSiteMapProvider\n  id: StaticSiteMapProvider\n  children:\n  - System.Web.StaticSiteMapProvider.#ctor\n  - System.Web.StaticSiteMapProvider.AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)\n  - System.Web.StaticSiteMapProvider.BuildSiteMap\n  - System.Web.StaticSiteMapProvider.Clear\n  - System.Web.StaticSiteMapProvider.FindSiteMapNode(System.String)\n  - System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey(System.String)\n  - System.Web.StaticSiteMapProvider.GetChildNodes(System.Web.SiteMapNode)\n  - System.Web.StaticSiteMapProvider.GetParentNode(System.Web.SiteMapNode)\n  - System.Web.StaticSiteMapProvider.RemoveNode(System.Web.SiteMapNode)\n  langs:\n  - csharp\n  name: StaticSiteMapProvider\n  nameWithType: StaticSiteMapProvider\n  fullName: System.Web.StaticSiteMapProvider\n  type: Class\n  summary: Serves as a partial implementation of the abstract <xref href=\"System.Web.SiteMapProvider\"></xref> class and serves as a base class for the <xref href=\"System.Web.XmlSiteMapProvider\"></xref> class, which is the default site map provider in ASP.NET.\n  remarks: \"The StaticSiteMapProvider class is a partial implementation of the abstract <xref:System.Web.SiteMapProvider> class and supplies two additional methods: <xref:System.Web.StaticSiteMapProvider.AddNode%2A> and <xref:System.Web.StaticSiteMapProvider.RemoveNode%2A>, as well as the abstract <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> and protected <xref:System.Web.StaticSiteMapProvider.Clear%2A> methods.  \\n  \\n The StaticSiteMapProvider class supports writing a site map provider (for example, an <xref:System.Web.XmlSiteMapProvider>) that translates a site map that is stored in persistent storage to one that is stored in memory. The StaticSiteMapProvider class provides basic implementations for storing and retrieving <xref:System.Web.SiteMapNode> objects.  \\n  \\n The <xref:System.Web.SiteMapProvider> and StaticSiteMapProvider classes support the concept of a site map provider hierarchy, where a site map provider can have a hierarchical relationship with other site map providers. This pattern is implemented with the <xref:System.Web.SiteMapProvider.RootProvider%2A> and <xref:System.Web.SiteMapProvider.ParentProvider%2A> properties.  \\n  \\n The StaticSiteMapProvider class stores its <xref:System.Web.SiteMapNode> objects in hash tables and internally uses the <xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName> property of the pages, represented by site map nodes, as keys. (If a site map node does not specify a URL, it is tracked using an automatically generated unique key.) As a result, you cannot have site map nodes wherein a site map node with the same URL is used more than once. For example, attempting to load the site map node illustrated in the following code example with the <xref:System.Web.XmlSiteMapProvider> class, which is the default ASP.NET site map provider, or any site map provider that is derived from the  StaticSiteMapProvider class will not work because the AboutUs.aspx page is used more than once.  \\n  \\n```  \\n<sitemap>  \\n  <sitemapnode title=\\\"Home\\\" description=\\\"Home\\\" url=\\\"default.aspx\\\" >  \\n    <sitemapnode title=\\\"Catalog\\\" description=\\\"Our catalog\\\" url=\\\"catalog.aspx\\\"/>  \\n    <sitemapnode title=\\\"About Us\\\" description=\\\"All about our company\\\" url=\\\"aboutus.aspx\\\"/>  \\n    <sitemapnode title=\\\"Driving Directions\\\" description=\\\"Directions to our store\\\" url=\\\"aboutus.aspx\\\"/>  \\n  </sitemapnode>  \\n</sitemap>  \\n```  \\n  \\n If you are extending the StaticSiteMapProvider class, the three most important methods are the <xref:System.Web.SiteMapProvider.GetRootNodeCore%2A>, <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>, and <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> methods. The <xref:System.Web.StaticSiteMapProvider.Clear%2A> and <xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A> methods have default implementations that are sufficient for most custom site map provider implementations.  \\n  \\n The <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method is called to initialize derived site map providers, including any resources that are required to load site map data, but it does attempt to build the site map node in memory. If your derived class is using files to store site map data, any file initialization can be performed here. If the site map node uses some other type of data store, such as a relational database, initializing a connection might be performed here. Additional attributes, such as file names or connection strings that are placed on the site map provider element in the configuration are processed by the ASP.NET configuration system and passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method with the `attributes` parameter.  \\n  \\n The <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method must be overridden by all classes that are derived from the StaticSiteMapProvider class and is called to load the site map node from persistent storage and convert it to an internal representation. The <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method is called internally in many of the default member implementations of the StaticSiteMapProvider and <xref:System.Web.XmlSiteMapProvider> classes. If you implement your own site map provider, ensure that site map data processing occurs once and subsequent calls to the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method return immediately, if site map information has already been loaded. When you implement the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method, ensure it is thread safe, as multiple concurrent page requests can result indirectly in multiple calls to load site map information. The site map infrastructure supports displaying site map information based on the user's role. Depending on the <xref:System.Web.SiteMapNode.Roles%2A> property that are supported by the individual <xref:System.Web.SiteMapNode> objects, a different navigation structure can exist for different users. The default implementations of the site map node retrieval members of the StaticSiteMapProvider class perform security trimming automatically by calling the <xref:System.Web.SiteMapProvider.IsAccessibleToUser%2A> method.  \\n  \\n The <xref:System.Web.StaticSiteMapProvider.AddNode%2A>, <xref:System.Web.StaticSiteMapProvider.Clear%2A> and <xref:System.Web.StaticSiteMapProvider.RemoveNode%2A> methods manipulate the internal collections that are used to track site map nodes in a thread-safe manner.\"\n  example:\n  - \"The following code example demonstrates how you to extend the StaticSiteMapProvider class to use Microsoft Access as a site map provider. The `AccessSiteMapProvider` class is a site map provider that supports only a simple, one-level-deep hierarchy. The table that the site map data is stored in has the following structure:  \\n  \\n```  \\nNODEID URL            NAME       PARENTNODEID  \\n ---------------------------------------------  \\n 1      default.aspx   Default    <NULL>  \\n 2      catalog.aspx   Catalog    1  \\n 3      aboutus.aspx   Contact Us 1  \\n...  \\n```  \\n  \\n The `AccessSiteMapProvider` class is derived from the StaticSiteMapProvider class and retrieves its information from a Microsoft Access database using basic SQL queries and the <xref:System.Data.OleDb.OleDbCommand> and <xref:System.Data.OleDb.OleDbDataReader> objects.  \\n  \\n [!code-cs[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#1](~/add/codesnippet/csharp/t-system.web.staticsitem_1.cs)]\\n [!code-vb[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#1](~/add/codesnippet/visualbasic/t-system.web.staticsitem_1.vb)]\\n [!code-cpp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#1](~/add/codesnippet/cpp/t-system.web.staticsitem_1.cpp)]  \\n  \\n Finally, the `AccessSiteMapProvider` is configured as the default provider in the following Web.config file.  \\n  \\n```  \\n<configuration>  \\n  <system.web>  \\n    <siteMap defaultProvider=\\\"AccessSiteMapProvider\\\">  \\n     <providers>  \\n       <add   \\n         name=\\\"AccessSiteMapProvider\\\"  \\n         type=\\\"Samples.AspNet.AccessSiteMapProvider,Samples.AspNet \\\"  \\n         accessSiteMapConnectionString=\\\"PROVIDER=MICROSOFT.JET.OLEDB.4.0;DATA SOURCE=sitemap.mdb \\\"/>  \\n     </providers>   \\n    </siteMap>  \\n  </system.web>  \\n</configuration>  \\n```\"\n  syntax:\n    content: 'public abstract class StaticSiteMapProvider : System.Web.SiteMapProvider'\n  inheritance:\n  - System.Object\n  - System.Configuration.Provider.ProviderBase\n  - System.Web.SiteMapProvider\n  implements: []\n  inheritedMembers:\n  - System.Configuration.Provider.ProviderBase.Description\n  - System.Configuration.Provider.ProviderBase.Name\n  - System.Web.SiteMapProvider.AddNode(System.Web.SiteMapNode)\n  - System.Web.SiteMapProvider.CurrentNode\n  - System.Web.SiteMapProvider.EnableLocalization\n  - System.Web.SiteMapProvider.FindSiteMapNode(System.Web.HttpContext)\n  - System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes(System.Int32)\n  - System.Web.SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes(System.Int32,System.Int32)\n  - System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(System.Int32,System.Int32)\n  - System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent(System.Web.SiteMapNode,System.Int32,System.Int32)\n  - System.Web.SiteMapProvider.GetRootNodeCore\n  - System.Web.SiteMapProvider.GetRootNodeCoreFromProvider(System.Web.SiteMapProvider)\n  - System.Web.SiteMapProvider.HintAncestorNodes(System.Web.SiteMapNode,System.Int32)\n  - System.Web.SiteMapProvider.HintNeighborhoodNodes(System.Web.SiteMapNode,System.Int32,System.Int32)\n  - System.Web.SiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  - System.Web.SiteMapProvider.IsAccessibleToUser(System.Web.HttpContext,System.Web.SiteMapNode)\n  - System.Web.SiteMapProvider.ParentProvider\n  - System.Web.SiteMapProvider.ResolveSiteMapNode(System.Web.HttpContext)\n  - System.Web.SiteMapProvider.ResourceKey\n  - System.Web.SiteMapProvider.RootNode\n  - System.Web.SiteMapProvider.RootProvider\n  - System.Web.SiteMapProvider.SecurityTrimmingEnabled\n  - System.Web.SiteMapProvider.SiteMapResolve\n  platform:\n  - net462\n- uid: System.Web.StaticSiteMapProvider.#ctor\n  id: '#ctor'\n  parent: System.Web.StaticSiteMapProvider\n  langs:\n  - csharp\n  name: StaticSiteMapProvider()\n  nameWithType: StaticSiteMapProvider.StaticSiteMapProvider()\n  fullName: System.Web.StaticSiteMapProvider.StaticSiteMapProvider()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Initializes a new instance of the <xref href=\"System.Web.StaticSiteMapProvider\"></xref> class.\n  remarks: '**Note** This class is not instantiated directly. This constructor is called from the constructor of classes that are derived from the <xref:System.Web.StaticSiteMapProvider> class.'\n  syntax:\n    content: protected StaticSiteMapProvider ();\n    parameters: []\n  overload: System.Web.StaticSiteMapProvider.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.StaticSiteMapProvider.AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)\n  id: AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)\n  parent: System.Web.StaticSiteMapProvider\n  langs:\n  - csharp\n  name: AddNode(SiteMapNode,SiteMapNode)\n  nameWithType: StaticSiteMapProvider.AddNode(SiteMapNode,SiteMapNode)\n  fullName: System.Web.StaticSiteMapProvider.AddNode(SiteMapNode,SiteMapNode)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds a <xref href=\"System.Web.SiteMapNode\"></xref> to the collections that are maintained by the site map provider and establishes a parent/child relationship between the <xref href=\"System.Web.SiteMapNode\"></xref> objects.\n  remarks: \"The site map node that is identified by the `node` parameter is added to an internal collection and a parent-child relationship is created between it and the site map node that is identified by the `parentNode` parameter.  \\n  \\n The URL for a site map node might be interpreted when it is added to the internal collections. Application-relative and relative URLs are expanded to application-absolute virtual paths, which are then used internally to store and access the individual instances of the <xref:System.Web.SiteMapNode> class. Other URLs, such as physical paths, paths with protocols in them, and UNC paths, are not interpreted.  \\n  \\n The <xref:System.Web.XmlSiteMapProvider> class, which is derived from the <xref:System.Web.StaticSiteMapProvider> class, and is the default site map provider for ASP.NET, uses the <xref:System.Web.SiteMapNode.Url%2A> property of a <xref:System.Web.SiteMapNode> object as a lookup key in its internal collections, by default. If the <xref:System.Web.SiteMapNode.Url%2A> property of the <xref:System.Web.SiteMapNode> is set, it must be unique within the scope of the site map provider. The <xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A> method attempts to retrieve site map nodes based on their <xref:System.Web.SiteMapNode.Url%2A> property. Otherwise, you can use the <xref:System.Web.SiteMapNode.Key%2A> property and the corresponding <xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A> method to retrieve site map nodes. If no <xref:System.Web.SiteMapNode.Url%2A> or <xref:System.Web.SiteMapNode.Key%2A> is specified, the site map provider automatically generates a <xref:System.Web.SiteMapNode.Key%2A> to track the site map nodes.\"\n  syntax:\n    content: protected override void AddNode (System.Web.SiteMapNode node, System.Web.SiteMapNode parentNode);\n    parameters:\n    - id: node\n      type: System.Web.SiteMapNode\n      description: The <xref href=\"System.Web.SiteMapNode\"></xref> to add to the site map provider.\n    - id: parentNode\n      type: System.Web.SiteMapNode\n      description: The <xref href=\"System.Web.SiteMapNode\"></xref> under which to add `node`.\n  overload: System.Web.StaticSiteMapProvider.AddNode*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>node</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The &lt;xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName&gt; or &lt;xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName&gt; is already registered with the <xref href=\"System.Web.StaticSiteMapProvider\"></xref>. A site map node must be made up of pages with unique URLs or keys.\n  platform:\n  - net462\n- uid: System.Web.StaticSiteMapProvider.BuildSiteMap\n  id: BuildSiteMap\n  parent: System.Web.StaticSiteMapProvider\n  langs:\n  - csharp\n  name: BuildSiteMap()\n  nameWithType: StaticSiteMapProvider.BuildSiteMap()\n  fullName: System.Web.StaticSiteMapProvider.BuildSiteMap()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, loads the site map information from persistent storage and builds it in memory.\n  remarks: The BuildSiteMap method is the one abstract member of the <xref:System.Web.StaticSiteMapProvider> class. The BuildSiteMap method is called to load and build the site map node from persistent storage. When you implement the BuildSiteMap method, ensure that it is thread-safe, because multiple concurrent page requests can result indirectly in multiple calls to load site map information.\n  example:\n  - \"The following code example demonstrates how to implement the BuildSiteMap method to retrieve data from a Microsoft Access database and build <xref:System.Web.SiteMapNode> objects that are added to the <xref:System.Web.SiteMapNode.ChildNodes%2A> collection of the root site map node. Finally, the <xref:System.Web.SiteMapProvider.RootNode%2A> property  is returned to the caller.  \\n  \\n This code example is part of a larger example provided for the <xref:System.Web.StaticSiteMapProvider> class.  \\n  \\n [!code-cs[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#4](~/add/codesnippet/csharp/m-system.web.staticsitem_0_1.cs)]\\n [!code-vb[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#4](~/add/codesnippet/visualbasic/m-system.web.staticsitem_0_1.vb)]\\n [!code-cpp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#4](~/add/codesnippet/cpp/m-system.web.staticsitem_0_1.cpp)]\"\n  syntax:\n    content: public abstract System.Web.SiteMapNode BuildSiteMap ();\n    parameters: []\n    return:\n      type: System.Web.SiteMapNode\n      description: The root <xref href=\"System.Web.SiteMapNode\"></xref> of the site map navigation structure.\n  overload: System.Web.StaticSiteMapProvider.BuildSiteMap*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.StaticSiteMapProvider.Clear\n  id: Clear\n  parent: System.Web.StaticSiteMapProvider\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: StaticSiteMapProvider.Clear()\n  fullName: System.Web.StaticSiteMapProvider.Clear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Removes all elements in the collections of child and parent site map nodes that the <xref href=\"System.Web.StaticSiteMapProvider\"></xref> tracks as part of its state.\n  remarks: \"Classes that are derived from the <xref:System.Web.StaticSiteMapProvider> class can override the Clear method to perform additional cleanup, depending on what state the derived classes maintain.  \\n  \\n The Clear method does not reset state that is initialized during the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method—it resets only state that is initialized during the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method.\"\n  example:\n  - \"The following code example demonstrates how to override the Clear method to perform additional cleanup of state that is maintained by the class.  \\n  \\n This code example is part of a larger example provided for the <xref:System.Web.StaticSiteMapProvider> class.  \\n  \\n [!code-cs[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#3](~/add/codesnippet/csharp/m-system.web.staticsitem_1_1.cs)]\\n [!code-vb[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#3](~/add/codesnippet/visualbasic/m-system.web.staticsitem_1_1.vb)]\\n [!code-cpp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#3](~/add/codesnippet/cpp/m-system.web.staticsitem_1_1.cpp)]\"\n  syntax:\n    content: protected virtual void Clear ();\n    parameters: []\n  overload: System.Web.StaticSiteMapProvider.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.StaticSiteMapProvider.FindSiteMapNode(System.String)\n  id: FindSiteMapNode(System.String)\n  parent: System.Web.StaticSiteMapProvider\n  langs:\n  - csharp\n  name: FindSiteMapNode(String)\n  nameWithType: StaticSiteMapProvider.FindSiteMapNode(String)\n  fullName: System.Web.StaticSiteMapProvider.FindSiteMapNode(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Retrieves a <xref href=\"System.Web.SiteMapNode\"></xref> object that represents the page at the specified URL.\n  remarks: \"The provided URL is typically a virtual or absolute URL. It can also be a URL that uses ASP.NET application-relative syntax, such as `\\\"~/``apprelativedirectory``\\\"`. The <xref:System.Web.StaticSiteMapProvider> class automatically normalizes application-relative raw URLs to an absolute virtual path.  \\n  \\n The <xref:System.Web.XmlSiteMapProvider> object, which is derived from the <xref:System.Web.StaticSiteMapProvider> and is the default site map provider for ASP.NET, uses the <xref:System.Web.SiteMapNode.Url%2A> property of a <xref:System.Web.SiteMapNode> object as a lookup key in its internal collections, by default. If the <xref:System.Web.SiteMapNode.Url%2A> property of the <xref:System.Web.SiteMapNode> is set, it must be unique within the scope of the site map provider. The FindSiteMapNode method attempts to retrieve site map nodes based on their <xref:System.Web.SiteMapNode.Url%2A>. Otherwise, you can use the <xref:System.Web.SiteMapNode.Key%2A> property and the corresponding <xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A> method to retrieve site map nodes. If no <xref:System.Web.SiteMapNode.Url%2A> or <xref:System.Web.SiteMapNode.Key%2A> is specified, the site map provider automatically generates a <xref:System.Web.SiteMapNode.Key%2A> property to track the site map nodes.\"\n  syntax:\n    content: public override System.Web.SiteMapNode FindSiteMapNode (string rawUrl);\n    parameters:\n    - id: rawUrl\n      type: System.String\n      description: A URL that identifies the page for which to retrieve a <xref href=\"System.Web.SiteMapNode\"></xref>.\n    return:\n      type: System.Web.SiteMapNode\n      description: A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the page identified by <code>rawURL</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if no corresponding site map node is found.\n  overload: System.Web.StaticSiteMapProvider.FindSiteMapNode*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>rawURL</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey(System.String)\n  id: FindSiteMapNodeFromKey(System.String)\n  parent: System.Web.StaticSiteMapProvider\n  langs:\n  - csharp\n  name: FindSiteMapNodeFromKey(String)\n  nameWithType: StaticSiteMapProvider.FindSiteMapNodeFromKey(String)\n  fullName: System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Retrieves a <xref href=\"System.Web.SiteMapNode\"></xref> object based on a specified key.\n  remarks: \"The FindSiteMapNodeFromKey method retrieves a site map node from an internal <xref:System.Collections.Hashtable> object based on `key`.  \\n  \\n The <xref:System.Web.XmlSiteMapProvider> object, which is derived from the <xref:System.Web.StaticSiteMapProvider> class and is the default site map provider for ASP.NET, uses the <xref:System.Web.SiteMapNode.Url%2A> property of a <xref:System.Web.SiteMapNode> object as a lookup key in its internal collections, by default. If the <xref:System.Web.SiteMapNode.Url%2A> property of the <xref:System.Web.SiteMapNode> is set, it must be unique within the scope of the site map provider. The <xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A> method attempts to retrieve site map nodes based on their <xref:System.Web.SiteMapNode.Url%2A>. Otherwise, you can use the <xref:System.Web.SiteMapNode.Key%2A> property and the corresponding FindSiteMapNodeFromKey method to retrieve site map nodes.  \\n  \\n The <xref:System.Web.StaticSiteMapProvider> has a default implementation that looks up instances of the <xref:System.Web.SiteMapNode> class based on the `key` parameter. If a site map provider implementer used the <xref:System.Web.StaticSiteMapProvider.AddNode%2A> method, the <xref:System.Web.StaticSiteMapProvider> already will have stored a reference to each <xref:System.Web.SiteMapNode> based on the value of the <xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName> property. By default, the <xref:System.Web.XmlSiteMapProvider> generates GUIDs for instances of the <xref:System.Web.SiteMapNode> class that do not have a value for the <xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName> property.  Custom site map provider implementers must provide their own mechanism for generating unique values of the <xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName> property in the event that an instance of the <xref:System.Web.SiteMapNode> class does not have a value for the <xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName> property.  \\n  \\n The <xref:System.Web.SiteMapProvider> and <xref:System.Web.XmlSiteMapProvider> classes, which are the default site map provider implementation for ASP.NET, use the URL of a <xref:System.Web.SiteMapNode> object as a key in the various collections that the classes maintain.\"\n  syntax:\n    content: public override System.Web.SiteMapNode FindSiteMapNodeFromKey (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: A lookup key with which a <xref href=\"System.Web.SiteMapNode\"></xref> is created.\n    return:\n      type: System.Web.SiteMapNode\n      description: A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the page identified by <code>key</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if security trimming is enabled and the site map node cannot be shown to the current user or the site map node is not found in the site map node collection by <code>key</code>.\n  overload: System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.StaticSiteMapProvider.GetChildNodes(System.Web.SiteMapNode)\n  id: GetChildNodes(System.Web.SiteMapNode)\n  parent: System.Web.StaticSiteMapProvider\n  langs:\n  - csharp\n  name: GetChildNodes(SiteMapNode)\n  nameWithType: StaticSiteMapProvider.GetChildNodes(SiteMapNode)\n  fullName: System.Web.StaticSiteMapProvider.GetChildNodes(SiteMapNode)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Retrieves the child site map nodes of a specific <xref href=\"System.Web.SiteMapNode\"></xref> object.\n  remarks: \"The <xref:System.Web.SiteMapNode> objects delegate to the site map provider to keep track of their child and parent site map nodes. As a result, classes that implement a site map provider for a hierarchical site map structure, such as <xref:System.Web.StaticSiteMapProvider>, and use <xref:System.Web.SiteMapNode> objects to represent site map nodes, must track the hierarchical relationships of all site map nodes in order to be able to navigate an entire hierarchical tree.  \\n  \\n The GetChildNodes method calls the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method internally to retrieve read-only <xref:System.Web.SiteMapNodeCollection> collection of site map nodes that are relative to the specified site map node and relevant to the current user.\"\n  syntax:\n    content: public override System.Web.SiteMapNodeCollection GetChildNodes (System.Web.SiteMapNode node);\n    parameters:\n    - id: node\n      type: System.Web.SiteMapNode\n      description: The <xref href=\"System.Web.SiteMapNode\"></xref> for which to retrieve all child site map nodes.\n    return:\n      type: System.Web.SiteMapNodeCollection\n      description: A read-only <xref href=\"System.Web.SiteMapNodeCollection\"></xref> that contains the child site map nodes of <code>node</code>. If security trimming is enabled, the collection contains only site map nodes that the user is permitted to see.\n  overload: System.Web.StaticSiteMapProvider.GetChildNodes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>node</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.StaticSiteMapProvider.GetParentNode(System.Web.SiteMapNode)\n  id: GetParentNode(System.Web.SiteMapNode)\n  parent: System.Web.StaticSiteMapProvider\n  langs:\n  - csharp\n  name: GetParentNode(SiteMapNode)\n  nameWithType: StaticSiteMapProvider.GetParentNode(SiteMapNode)\n  fullName: System.Web.StaticSiteMapProvider.GetParentNode(SiteMapNode)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Retrieves the parent site map node of a specific <xref href=\"System.Web.SiteMapNode\"></xref> object.\n  remarks: \"The <xref:System.Web.SiteMapNode> objects delegate to the site map provider to keep track of their child and parent site map nodes. As a result, classes that implement a site map provider for a hierarchical site map structure, such as the <xref:System.Web.StaticSiteMapProvider> class, and use <xref:System.Web.SiteMapNode> objects to represent site map nodes, must track the hierarchical relationships of all site map nodes in order to be able to navigate an entire hierarchical tree.  \\n  \\n If a <xref:System.Web.SiteMapNode.ParentNode%2A> property is not found, the <xref:System.Web.StaticSiteMapProvider> class detects whether the current site map provider has a <xref:System.Web.SiteMapProvider.ParentProvider%2A> property. If so, the site map provider calls the GetParentNode property for the parent site map provider. This enables the scenario where the parent site map node of a site map node is maintained by a different site map provider.  \\n  \\n The GetParentNode method calls the <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A> method internally to retrieve the <xref:System.Web.SiteMapNode> that represents the parent of the specified site map node. If security trimming is enabled, the site map node is returned only if the user is permitted to see it.\"\n  syntax:\n    content: public override System.Web.SiteMapNode GetParentNode (System.Web.SiteMapNode node);\n    parameters:\n    - id: node\n      type: System.Web.SiteMapNode\n      description: The <xref href=\"System.Web.SiteMapNode\"></xref> for which to retrieve the parent site map node.\n    return:\n      type: System.Web.SiteMapNode\n      description: A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the parent of the specified <xref href=\"System.Web.SiteMapNode\"></xref>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if no parent site map node exists or the user is not permitted to see the parent site map node.\n  overload: System.Web.StaticSiteMapProvider.GetParentNode*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>node</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.StaticSiteMapProvider.RemoveNode(System.Web.SiteMapNode)\n  id: RemoveNode(System.Web.SiteMapNode)\n  parent: System.Web.StaticSiteMapProvider\n  langs:\n  - csharp\n  name: RemoveNode(SiteMapNode)\n  nameWithType: StaticSiteMapProvider.RemoveNode(SiteMapNode)\n  fullName: System.Web.StaticSiteMapProvider.RemoveNode(SiteMapNode)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Removes the specified <xref href=\"System.Web.SiteMapNode\"></xref> object from all site map node collections that are tracked by the site map provider.\n  syntax:\n    content: protected override void RemoveNode (System.Web.SiteMapNode node);\n    parameters:\n    - id: node\n      type: System.Web.SiteMapNode\n      description: The site map node to remove from the site map node collections.\n  overload: System.Web.StaticSiteMapProvider.RemoveNode*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>node</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Web.SiteMapProvider\n  isExternal: false\n  name: System.Web.SiteMapProvider\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Web.StaticSiteMapProvider.#ctor\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: StaticSiteMapProvider()\n  nameWithType: StaticSiteMapProvider.StaticSiteMapProvider()\n  fullName: System.Web.StaticSiteMapProvider.StaticSiteMapProvider()\n- uid: System.Web.StaticSiteMapProvider.AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: AddNode(SiteMapNode,SiteMapNode)\n  nameWithType: StaticSiteMapProvider.AddNode(SiteMapNode,SiteMapNode)\n  fullName: System.Web.StaticSiteMapProvider.AddNode(SiteMapNode,SiteMapNode)\n- uid: System.Web.SiteMapNode\n  parent: System.Web\n  isExternal: false\n  name: SiteMapNode\n  nameWithType: SiteMapNode\n  fullName: System.Web.SiteMapNode\n- uid: System.Web.StaticSiteMapProvider.BuildSiteMap\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: BuildSiteMap()\n  nameWithType: StaticSiteMapProvider.BuildSiteMap()\n  fullName: System.Web.StaticSiteMapProvider.BuildSiteMap()\n- uid: System.Web.StaticSiteMapProvider.Clear\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: Clear()\n  nameWithType: StaticSiteMapProvider.Clear()\n  fullName: System.Web.StaticSiteMapProvider.Clear()\n- uid: System.Web.StaticSiteMapProvider.FindSiteMapNode(System.String)\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: FindSiteMapNode(String)\n  nameWithType: StaticSiteMapProvider.FindSiteMapNode(String)\n  fullName: System.Web.StaticSiteMapProvider.FindSiteMapNode(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey(System.String)\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: FindSiteMapNodeFromKey(String)\n  nameWithType: StaticSiteMapProvider.FindSiteMapNodeFromKey(String)\n  fullName: System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey(String)\n- uid: System.Web.StaticSiteMapProvider.GetChildNodes(System.Web.SiteMapNode)\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: GetChildNodes(SiteMapNode)\n  nameWithType: StaticSiteMapProvider.GetChildNodes(SiteMapNode)\n  fullName: System.Web.StaticSiteMapProvider.GetChildNodes(SiteMapNode)\n- uid: System.Web.SiteMapNodeCollection\n  parent: System.Web\n  isExternal: false\n  name: SiteMapNodeCollection\n  nameWithType: SiteMapNodeCollection\n  fullName: System.Web.SiteMapNodeCollection\n- uid: System.Web.StaticSiteMapProvider.GetParentNode(System.Web.SiteMapNode)\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: GetParentNode(SiteMapNode)\n  nameWithType: StaticSiteMapProvider.GetParentNode(SiteMapNode)\n  fullName: System.Web.StaticSiteMapProvider.GetParentNode(SiteMapNode)\n- uid: System.Web.StaticSiteMapProvider.RemoveNode(System.Web.SiteMapNode)\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: RemoveNode(SiteMapNode)\n  nameWithType: StaticSiteMapProvider.RemoveNode(SiteMapNode)\n  fullName: System.Web.StaticSiteMapProvider.RemoveNode(SiteMapNode)\n- uid: System.Web.StaticSiteMapProvider.#ctor*\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: StaticSiteMapProvider\n  nameWithType: StaticSiteMapProvider.StaticSiteMapProvider\n- uid: System.Web.StaticSiteMapProvider.AddNode*\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: AddNode\n  nameWithType: StaticSiteMapProvider.AddNode\n- uid: System.Web.StaticSiteMapProvider.BuildSiteMap*\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: BuildSiteMap\n  nameWithType: StaticSiteMapProvider.BuildSiteMap\n- uid: System.Web.StaticSiteMapProvider.Clear*\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: Clear\n  nameWithType: StaticSiteMapProvider.Clear\n- uid: System.Web.StaticSiteMapProvider.FindSiteMapNode*\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: FindSiteMapNode\n  nameWithType: StaticSiteMapProvider.FindSiteMapNode\n- uid: System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey*\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: FindSiteMapNodeFromKey\n  nameWithType: StaticSiteMapProvider.FindSiteMapNodeFromKey\n- uid: System.Web.StaticSiteMapProvider.GetChildNodes*\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: GetChildNodes\n  nameWithType: StaticSiteMapProvider.GetChildNodes\n- uid: System.Web.StaticSiteMapProvider.GetParentNode*\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: GetParentNode\n  nameWithType: StaticSiteMapProvider.GetParentNode\n- uid: System.Web.StaticSiteMapProvider.RemoveNode*\n  parent: System.Web.StaticSiteMapProvider\n  isExternal: false\n  name: RemoveNode\n  nameWithType: StaticSiteMapProvider.RemoveNode\n"}