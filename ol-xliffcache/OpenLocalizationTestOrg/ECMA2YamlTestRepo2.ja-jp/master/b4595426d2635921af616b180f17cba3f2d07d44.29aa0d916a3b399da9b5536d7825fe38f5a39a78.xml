{"nodes":[{"pos":[1985,2066],"content":"Represents an SQL statement or stored procedure to execute against a data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an SQL statement or stored procedure to execute against a data source.","pos":[0,81]}]},{"pos":[2079,3458],"content":"When an instance of OleDbCommand is created, the read/write properties are set to their initial values. For a list of these values, see the OleDbCommand constructor.       OleDbCommand features the following methods executing commands at a data source:      |Item|Description|   |----------|-----------------|   |<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>|Executes commands that return rows. <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> may not have the effect that you want if used to execute commands such as SQL SET statements.|   |<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>|Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.|   |<xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>|Retrieves a single value, for example, an aggregate value from a database.|       You can reset the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property and reuse the OleDbCommand object. However, you must close the <xref:System.Data.OleDb.OleDbDataReader> before you can execute a new or previous command.       If a fatal <xref:System.Data.OleDb.OleDbException> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an OleDbCommand, the <xref:System.Data.OleDb.OleDbConnection>, the connection may be closed. However, the user can reopen the connection and continue.","needQuote":false,"needEscape":true,"nodes":[{"content":"When an instance of OleDbCommand is created, the read/write properties are set to their initial values. For a list of these values, see the OleDbCommand constructor.       OleDbCommand features the following methods executing commands at a data source:      |Item|Description|   |----------|-----------------|   |<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>|Executes commands that return rows. <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> may not have the effect that you want if used to execute commands such as SQL SET statements.|   |<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>|Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.|   |<xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>|Retrieves a single value, for example, an aggregate value from a database.|       You can reset the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property and reuse the OleDbCommand object. However, you must close the <xref:System.Data.OleDb.OleDbDataReader> before you can execute a new or previous command.       If a fatal <xref:System.Data.OleDb.OleDbException> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an OleDbCommand, the <xref:System.Data.OleDb.OleDbConnection>, the connection may be closed. However, the user can reopen the connection and continue.","pos":[0,1367],"nodes":[{"content":"When an instance of OleDbCommand is created, the read/write properties are set to their initial values.","pos":[0,103]},{"content":"For a list of these values, see the OleDbCommand constructor.","pos":[104,165]},{"content":"OleDbCommand features the following methods executing commands at a data source:      |Item|Description|   |----------|-----------------|   |&lt;xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A&gt;|Executes commands that return rows.","pos":[172,403],"source":"       OleDbCommand features the following methods executing commands at a data source:      |Item|Description|   |----------|-----------------|   |<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>|Executes commands that return rows."},{"content":"&lt;xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A&gt; may not have the effect that you want if used to execute commands such as SQL SET statements.|   |&lt;xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A&gt;|Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.|   |&lt;xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A&gt;|Retrieves a single value, for example, an aggregate value from a database.|       You can reset the &lt;xref:System.Data.OleDb.OleDbCommand.CommandText%2A&gt; property and reuse the OleDbCommand object.","pos":[404,943],"source":" <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> may not have the effect that you want if used to execute commands such as SQL SET statements.|   |<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>|Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.|   |<xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>|Retrieves a single value, for example, an aggregate value from a database.|       You can reset the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property and reuse the OleDbCommand object."},{"content":"However, you must close the &lt;xref:System.Data.OleDb.OleDbDataReader&gt; before you can execute a new or previous command.","pos":[944,1062],"source":" However, you must close the <xref:System.Data.OleDb.OleDbDataReader> before you can execute a new or previous command."},{"content":"If a fatal &lt;xref:System.Data.OleDb.OleDbException&gt; (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an OleDbCommand, the &lt;xref:System.Data.OleDb.OleDbConnection&gt;, the connection may be closed.","pos":[1069,1309],"source":"       If a fatal <xref:System.Data.OleDb.OleDbException> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an OleDbCommand, the <xref:System.Data.OleDb.OleDbConnection>, the connection may be closed."},{"content":"However, the user can reopen the connection and continue.","pos":[1310,1367]}]}]},{"pos":[6787,6879],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> class."},{"pos":[6892,7413],"content":"The base constructor initializes all fields to their default values. The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.      |Properties|Initial Value|   |----------------|-------------------|   |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|empty string (\"\")|   |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|30|   |<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>|`Text`|   |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|null|","needQuote":false,"needEscape":true,"nodes":[{"content":"The base constructor initializes all fields to their default values.","pos":[0,68]},{"content":"The following table shows initial property values for an instance of &lt;xref:System.Data.OleDb.OleDbCommand&gt;.","pos":[69,176],"source":" The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>."},{"content":"|Properties|Initial Value|   |----------------|-------------------|   |&lt;xref:System.Data.OleDb.OleDbCommand.CommandText%2A&gt;|empty string (\"\")|   |&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;|30|   |&lt;xref:System.Data.OleDb.OleDbCommand.CommandType%2A&gt;|<ph id=\"ph1\">`Text`</ph>|   |&lt;xref:System.Data.OleDb.OleDbCommand.Connection%2A&gt;|null|","pos":[182,512],"source":"      |Properties|Initial Value|   |----------------|-------------------|   |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|empty string (\"\")|   |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|30|   |<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>|`Text`|   |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|null|"}]},{"pos":[8337,8456],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the text of the query.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> class with the text of the query."},{"pos":[8469,8903],"content":"The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.      |Properties|Initial Value|   |----------------|-------------------|   |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|   |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|30|   |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|   |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|null|","needQuote":false,"needEscape":true,"nodes":[{"content":"The following table shows initial property values for an instance of &lt;xref:System.Data.OleDb.OleDbCommand&gt;.","pos":[0,107],"source":"The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>."},{"content":"|Properties|Initial Value|   |----------------|-------------------|   |&lt;xref:System.Data.OleDb.OleDbCommand.CommandText%2A&gt;|<ph id=\"ph1\">`cmdText`</ph>|   |&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;|30|   |&lt;xref:System.Data.IDbCommand.CommandType%2A&gt;|<ph id=\"ph2\">`Text`</ph>|   |&lt;xref:System.Data.OleDb.OleDbCommand.Connection%2A&gt;|null|","pos":[113,427],"source":"      |Properties|Initial Value|   |----------------|-------------------|   |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|   |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|30|   |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|   |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|null|"}]},{"pos":[9429,9451],"content":"The text of the query.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text of the query.","pos":[0,22]}]},{"pos":[10042,10223],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the text of the query and an <bpt id=\"p2\">&lt;xref href=\"System.Data.OleDb.OleDbConnection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> class with the text of the query and an <xref href=\"System.Data.OleDb.OleDbConnection\"></xref>."},{"pos":[10236,10856],"content":"The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.      |Properties|Initial Value|   |----------------|-------------------|   |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|   |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|30|   |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|   |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|A new <xref:System.Data.OleDb.OleDbConnection> that is the value for the `connection` parameter.|       You can change the value for any of these parameters by setting the related property.","needQuote":false,"needEscape":true,"nodes":[{"content":"The following table shows initial property values for an instance of &lt;xref:System.Data.OleDb.OleDbCommand&gt;.","pos":[0,107],"source":"The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>."},{"content":"|Properties|Initial Value|   |----------------|-------------------|   |&lt;xref:System.Data.OleDb.OleDbCommand.CommandText%2A&gt;|<ph id=\"ph1\">`cmdText`</ph>|   |&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;|30|   |&lt;xref:System.Data.IDbCommand.CommandType%2A&gt;|<ph id=\"ph2\">`Text`</ph>|   |&lt;xref:System.Data.OleDb.OleDbCommand.Connection%2A&gt;|A new &lt;xref:System.Data.OleDb.OleDbConnection&gt; that is the value for the <ph id=\"ph3\">`connection`</ph> parameter.|       You can change the value for any of these parameters by setting the related property.","pos":[113,611],"source":"      |Properties|Initial Value|   |----------------|-------------------|   |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|   |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|30|   |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|   |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|A new <xref:System.Data.OleDb.OleDbConnection> that is the value for the `connection` parameter.|       You can change the value for any of these parameters by setting the related property."}]},{"pos":[11422,11444],"content":"The text of the query.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text of the query.","pos":[0,22]}]},{"pos":[11531,11637],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the connection to a data source.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> that represents the connection to a data source."},{"pos":[12349,12587],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the text of the query, an <bpt id=\"p2\">&lt;xref href=\"System.Data.OleDb.OleDbConnection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, and the &lt;xref:System.Data.OleDb.OleDbCommand.Transaction*&gt;.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> class with the text of the query, an <xref href=\"System.Data.OleDb.OleDbConnection\"></xref>, and the <xref:System.Data.OleDb.OleDbCommand.Transaction*>."},{"pos":[12600,13220],"content":"The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.      |Properties|Initial Value|   |----------------|-------------------|   |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|   |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|30|   |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|   |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|A new <xref:System.Data.OleDb.OleDbConnection> that is the value for the `connection` parameter.|       You can change the value for any of these parameters by setting the related property.","needQuote":false,"needEscape":true,"nodes":[{"content":"The following table shows initial property values for an instance of &lt;xref:System.Data.OleDb.OleDbCommand&gt;.","pos":[0,107],"source":"The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>."},{"content":"|Properties|Initial Value|   |----------------|-------------------|   |&lt;xref:System.Data.OleDb.OleDbCommand.CommandText%2A&gt;|<ph id=\"ph1\">`cmdText`</ph>|   |&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;|30|   |&lt;xref:System.Data.IDbCommand.CommandType%2A&gt;|<ph id=\"ph2\">`Text`</ph>|   |&lt;xref:System.Data.OleDb.OleDbCommand.Connection%2A&gt;|A new &lt;xref:System.Data.OleDb.OleDbConnection&gt; that is the value for the <ph id=\"ph3\">`connection`</ph> parameter.|       You can change the value for any of these parameters by setting the related property.","pos":[113,611],"source":"      |Properties|Initial Value|   |----------------|-------------------|   |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|   |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|30|   |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|   |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|A new <xref:System.Data.OleDb.OleDbConnection> that is the value for the `connection` parameter.|       You can change the value for any of these parameters by setting the related property."}]},{"pos":[13818,13840],"content":"The text of the query.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text of the query.","pos":[0,22]}]},{"pos":[13927,14033],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the connection to a data source.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> that represents the connection to a data source."},{"pos":[14122,14212],"content":"The transaction in which the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> executes.","needQuote":true,"needEscape":true,"source":"The transaction in which the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> executes."},{"pos":[14616,14704],"content":"Tries to cancel the execution of an <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Tries to cancel the execution of an <xref href=\"System.Data.OleDb.OleDbCommand\"></xref>."},{"pos":[14716,14865],"content":"If there is nothing to cancel, nothing occurs. However, if there is a command in process, and the attempt to cancel fails, no exception is generated.","needQuote":true,"needEscape":true,"nodes":[{"content":"If there is nothing to cancel, nothing occurs. However, if there is a command in process, and the attempt to cancel fails, no exception is generated.","pos":[0,149],"nodes":[{"content":"If there is nothing to cancel, nothing occurs.","pos":[0,46]},{"content":"However, if there is a command in process, and the attempt to cancel fails, no exception is generated.","pos":[47,149]}]}]},{"pos":[15853,15965],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is a copy of the current instance.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> object that is a copy of the current instance."},{"pos":[16130,16227],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is a copy of this instance.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> object that is a copy of this instance."},{"pos":[16652,16733],"content":"Gets or sets the SQL statement or stored procedure to execute at the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the SQL statement or stored procedure to execute at the data source.","pos":[0,81]}]},{"pos":[16746,18605],"content":"When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property should be set to the name of the stored procedure. The user may be required to use escape character syntax if the stored procedure name contains any special characters. The command executes this stored procedure when you call one of the `Execute` methods.       When <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `TableDirect`, the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property should be set to the name of the table or tables to be accessed. The user may be required to use escape character syntax if any of the named tables contain any special characters. All rows and columns of the named table or tables will be returned when you call one of the `Execute` methods.       You cannot set the <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>, and CommandText properties if the current connection is performing an execute or fetch operation.       The OLE DB.NET Provider does not support named parameters for passing parameters to an SQL Statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `Text`. In this case, the question mark (?) placeholder must be used. For example:       `SELECT * FROM Customers WHERE CustomerID = ?`       Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter.       For more information, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"When the &lt;xref:System.Data.OleDb.OleDbCommand.CommandType%2A&gt; property is set to <ph id=\"ph1\">`StoredProcedure`</ph>, the &lt;xref:System.Data.OleDb.OleDbCommand.CommandType%2A&gt; property should be set to the name of the stored procedure.","pos":[0,216],"source":"When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property should be set to the name of the stored procedure."},{"content":"The user may be required to use escape character syntax if the stored procedure name contains any special characters.","pos":[217,334]},{"content":"The command executes this stored procedure when you call one of the <ph id=\"ph1\">`Execute`</ph> methods.","pos":[335,421],"source":" The command executes this stored procedure when you call one of the `Execute` methods."},{"content":"When &lt;xref:System.Data.OleDb.OleDbCommand.CommandType%2A&gt; is set to <ph id=\"ph1\">`TableDirect`</ph>, the &lt;xref:System.Data.OleDb.OleDbCommand.CommandType%2A&gt; property should be set to the name of the table or tables to be accessed.","pos":[428,641],"source":"       When <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `TableDirect`, the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property should be set to the name of the table or tables to be accessed."},{"content":"The user may be required to use escape character syntax if any of the named tables contain any special characters.","pos":[642,756]},{"content":"All rows and columns of the named table or tables will be returned when you call one of the <ph id=\"ph1\">`Execute`</ph> methods.","pos":[757,867],"source":" All rows and columns of the named table or tables will be returned when you call one of the `Execute` methods."},{"content":"You cannot set the &lt;xref:System.Data.OleDb.OleDbCommand.Connection%2A&gt;, &lt;xref:System.Data.OleDb.OleDbCommand.CommandType%2A&gt;, and CommandText properties if the current connection is performing an execute or fetch operation.","pos":[874,1097],"source":"       You cannot set the <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>, and CommandText properties if the current connection is performing an execute or fetch operation."},{"content":"The OLE DB.NET Provider does not support named parameters for passing parameters to an SQL Statement or a stored procedure called by an &lt;xref:System.Data.OleDb.OleDbCommand&gt; when &lt;xref:System.Data.OleDb.OleDbCommand.CommandType%2A&gt; is set to <ph id=\"ph1\">`Text`</ph>.","pos":[1104,1353],"source":"       The OLE DB.NET Provider does not support named parameters for passing parameters to an SQL Statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `Text`."},{"content":"In this case, the question mark (?) placeholder must be used.","pos":[1354,1415]},{"content":"For example:       <ph id=\"ph1\">`SELECT * FROM Customers WHERE CustomerID = ?`</ph>       Therefore, the order in which &lt;xref:System.Data.OleDb.OleDbParameter&gt; objects are added to the &lt;xref:System.Data.OleDb.OleDbParameterCollection&gt; must directly correspond to the position of the question mark placeholder for the parameter.","pos":[1416,1725],"source":" For example:       `SELECT * FROM Customers WHERE CustomerID = ?`       Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Configuring Parameters and Parameter Data Types<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1732,1847],"source":"       For more information, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[19116,19203],"content":"The SQL statement or stored procedure to execute. The default value is an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SQL statement or stored procedure to execute. The default value is an empty string.","pos":[0,87],"nodes":[{"content":"The SQL statement or stored procedure to execute.","pos":[0,49]},{"content":"The default value is an empty string.","pos":[50,87]}]}]},{"pos":[19649,19751],"content":"Gets or sets the wait time before terminating an attempt to execute a command and generating an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the wait time before terminating an attempt to execute a command and generating an error.","pos":[0,102]}]},{"pos":[19763,19901],"content":"A value of 0 indicates no limit, and should be avoided in a CommandTimeout because an attempt to execute a command will wait indefinitely.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value of 0 indicates no limit, and should be avoided in a CommandTimeout because an attempt to execute a command will wait indefinitely.","pos":[0,138]}]},{"pos":[20030,20114],"content":"The time (in seconds) to wait for the command to execute. The default is 30 seconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time (in seconds) to wait for the command to execute. The default is 30 seconds.","pos":[0,84],"nodes":[{"content":"The time (in seconds) to wait for the command to execute.","pos":[0,57]},{"content":"The default is 30 seconds.","pos":[58,84]}]}]},{"pos":[20548,20667],"content":"Gets or sets a value that indicates how the <xref:System.Data.OleDb.OleDbCommand.CommandText*> property is interpreted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates how the &lt;xref:System.Data.OleDb.OleDbCommand.CommandText*&gt; property is interpreted.","pos":[0,119],"source":"Gets or sets a value that indicates how the <xref:System.Data.OleDb.OleDbCommand.CommandText*> property is interpreted."}]},{"pos":[20680,21880],"content":"When you set the CommandType property to `StoredProcedure`, you should set the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property to the name of the stored procedure. The command executes this stored procedure when you call one of the Execute methods.       The <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, CommandType and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.       The OLE DB .NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when CommandType is set to Text. In this case, the question mark (?) placeholder must be used. For example:       `SELECT * FROM Customers WHERE CustomerID = ?`       Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter. For more information, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"When you set the CommandType property to <ph id=\"ph1\">`StoredProcedure`</ph>, you should set the &lt;xref:System.Data.OleDb.OleDbCommand.CommandText%2A&gt; property to the name of the stored procedure.","pos":[0,177],"source":"When you set the CommandType property to `StoredProcedure`, you should set the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property to the name of the stored procedure."},{"content":"The command executes this stored procedure when you call one of the Execute methods.","pos":[178,262]},{"content":"The &lt;xref:System.Data.OleDb.OleDbCommand.Connection%2A&gt;, CommandType and &lt;xref:System.Data.OleDb.OleDbCommand.CommandText%2A&gt; properties cannot be set if the current connection is performing an execute or fetch operation.","pos":[269,490],"source":"       The <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, CommandType and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation."},{"content":"The OLE DB .NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an &lt;xref:System.Data.OleDb.OleDbCommand&gt; when CommandType is set to Text.","pos":[497,704],"source":"       The OLE DB .NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when CommandType is set to Text."},{"content":"In this case, the question mark (?) placeholder must be used.","pos":[705,766]},{"content":"For example:       <ph id=\"ph1\">`SELECT * FROM Customers WHERE CustomerID = ?`</ph>       Therefore, the order in which &lt;xref:System.Data.OleDb.OleDbParameter&gt; objects are added to the &lt;xref:System.Data.OleDb.OleDbParameterCollection&gt; must directly correspond to the position of the question mark placeholder for the parameter.","pos":[767,1076],"source":" For example:       `SELECT * FROM Customers WHERE CustomerID = ?`       Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Configuring Parameters and Parameter Data Types<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1077,1192],"source":" For more information, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[22038,22089],"content":"One of the CommandType values. The default is Text.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the CommandType values. The default is Text.","pos":[0,51],"nodes":[{"content":"One of the CommandType values.","pos":[0,30]},{"content":"The default is Text.","pos":[31,51]}]}]},{"pos":[22254,22292],"content":"The value was not a valid CommandType.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value was not a valid CommandType.","pos":[0,38]}]},{"pos":[22645,22798],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used by this instance of the <bpt id=\"p2\">&lt;xref href=\"System.Data.OleDb.OleDbCommand\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> used by this instance of the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref>."},{"pos":[22811,23451],"content":"You cannot set the Connection, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.       If you set Connection while a transaction is in progress and the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated. If the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property is not null and the transaction has already been committed or rolled back, <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> is set to null.","needQuote":false,"needEscape":true,"nodes":[{"content":"You cannot set the Connection, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.       If you set Connection while a transaction is in progress and the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated. If the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property is not null and the transaction has already been committed or rolled back, <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> is set to null.","pos":[0,638],"nodes":[{"content":"You cannot set the Connection, &lt;xref:System.Data.OleDb.OleDbCommand.CommandType%2A&gt; and &lt;xref:System.Data.OleDb.OleDbCommand.CommandText%2A&gt; properties if the current connection is performing an execute or fetch operation.","pos":[0,222],"source":"You cannot set the Connection, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation."},{"content":"If you set Connection while a transaction is in progress and the &lt;xref:System.Data.OleDb.OleDbCommand.Transaction%2A&gt; property is not null, an &lt;xref:System.InvalidOperationException&gt; is generated.","pos":[229,425],"source":"       If you set Connection while a transaction is in progress and the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated."},{"content":"If the &lt;xref:System.Data.OleDb.OleDbCommand.Transaction%2A&gt; property is not null and the transaction has already been committed or rolled back, &lt;xref:System.Data.OleDb.OleDbCommand.Transaction%2A&gt; is set to null.","pos":[426,638],"source":" If the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property is not null and the transaction has already been committed or rolled back, <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> is set to null."}]}]},{"pos":[23995,24110],"content":"The connection to a data source. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection to a data source.","pos":[0,32]},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[33,115],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[24290,24362],"content":"The Connection property was changed while a transaction was in progress.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Connection property was changed while a transaction was in progress.","pos":[0,72]}]},{"pos":[24931,24943],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25404,25494],"content":"Creates a new instance of an <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Creates a new instance of an <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> object."},{"pos":[25506,25613],"content":"The CreateParameter method is a strongly typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CreateParameter method is a strongly typed version of &lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;.","pos":[0,107],"source":"The CreateParameter method is a strongly typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>."}]},{"pos":[25792,25856],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> object."},{"pos":[26461,26473],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27142,27154],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27773,27785],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28248,28376],"content":"Gets or sets a value that indicates whether the command object should be visible in a customized Windows Forms Designer control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the command object should be visible in a customized Windows Forms Designer control.","pos":[0,128]}]},{"pos":[28511,28669],"content":"A value that indicates whether the command object should be visible in a control. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that indicates whether the command object should be visible in a control.","pos":[0,81]},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[82,158],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[29287,29299],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30090,30102],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30178,30190],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30653,30781],"content":"Executes an SQL statement against the <xref:System.Data.OleDb.OleDbCommand.Connection*> and returns the number of rows affected.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes an SQL statement against the &lt;xref:System.Data.OleDb.OleDbCommand.Connection*&gt; and returns the number of rows affected.","pos":[0,128],"source":"Executes an SQL statement against the <xref:System.Data.OleDb.OleDbCommand.Connection*> and returns the number of rows affected."}]},{"pos":[30794,31446],"content":"You can use the ExecuteNonQuery to perform catalog operations, for example, to query the structure of a database or to create database objects such as tables, or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.       Although the ExecuteNonQuery returns no rows, any output parameters or return values mapped to parameters are populated with data.       For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value is -1. If a rollback occurs, the return value is also -1.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can use the ExecuteNonQuery to perform catalog operations, for example, to query the structure of a database or to create database objects such as tables, or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.       Although the ExecuteNonQuery returns no rows, any output parameters or return values mapped to parameters are populated with data.       For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value is -1. If a rollback occurs, the return value is also -1.","pos":[0,648],"nodes":[{"content":"You can use the ExecuteNonQuery to perform catalog operations, for example, to query the structure of a database or to create database objects such as tables, or to change the data in a database without using a &lt;xref:System.Data.DataSet&gt; by executing UPDATE, INSERT, or DELETE statements.","pos":[0,288],"source":"You can use the ExecuteNonQuery to perform catalog operations, for example, to query the structure of a database or to create database objects such as tables, or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements."},{"content":"Although the ExecuteNonQuery returns no rows, any output parameters or return values mapped to parameters are populated with data.","pos":[295,425]},{"content":"For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.","pos":[432,538]},{"content":"For all other types of statements, the return value is -1.","pos":[539,597]},{"content":"If a rollback occurs, the return value is also -1.","pos":[598,648]}]}]},{"pos":[32125,32153],"content":"The number of rows affected.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of rows affected.","pos":[0,28]}]},{"pos":[32339,32572],"content":"The connection does not exist.       -or-       The connection is not open.       -or-       Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.","needQuote":false,"needEscape":true,"nodes":[{"content":"The connection does not exist.       -or-       The connection is not open.       -or-       Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.","pos":[0,225],"nodes":[{"content":"The connection does not exist.","pos":[0,30]},{"content":"-or-       The connection is not open.","pos":[37,75]},{"content":"-or-       Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.","pos":[82,225]}]}]},{"pos":[32945,33132],"content":"Sends the &lt;xref:System.Data.OleDb.OleDbCommand.CommandText<bpt id=\"p1\">*</bpt>&gt; to the &lt;xref:System.Data.OleDb.OleDbCommand.Connection<ept id=\"p1\">*</ept>&gt; and builds an <bpt id=\"p2\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Sends the <xref:System.Data.OleDb.OleDbCommand.CommandText*> to the <xref:System.Data.OleDb.OleDbCommand.Connection*> and builds an <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref>."},{"pos":[33145,33711],"content":"When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property should be set to the name of the stored procedure. The command executes this stored procedure when you call ExecuteReader.       Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the <xref:System.Data.OleDb.OleDbDataReader> object. You must also close the <xref:System.Data.OleDb.OleDbDataReader> object if you plan to reuse an <xref:System.Data.OleDb.OleDbCommand> object.","needQuote":false,"needEscape":true,"nodes":[{"content":"When the &lt;xref:System.Data.OleDb.OleDbCommand.CommandType%2A&gt; property is set to <ph id=\"ph1\">`StoredProcedure`</ph>, the &lt;xref:System.Data.OleDb.OleDbCommand.CommandText%2A&gt; property should be set to the name of the stored procedure.","pos":[0,216],"source":"When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property should be set to the name of the stored procedure."},{"content":"The command executes this stored procedure when you call ExecuteReader.","pos":[217,288]},{"content":"Before you close the &lt;xref:System.Data.OleDb.OleDbConnection&gt;, first close the &lt;xref:System.Data.OleDb.OleDbDataReader&gt; object.","pos":[295,422],"source":"       Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the <xref:System.Data.OleDb.OleDbDataReader> object."},{"content":"You must also close the &lt;xref:System.Data.OleDb.OleDbDataReader&gt; object if you plan to reuse an &lt;xref:System.Data.OleDb.OleDbCommand&gt; object.","pos":[423,564],"source":" You must also close the <xref:System.Data.OleDb.OleDbDataReader> object if you plan to reuse an <xref:System.Data.OleDb.OleDbCommand> object."}]},{"pos":[34370,34435],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> object."},{"pos":[34618,34750],"content":"Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.","pos":[0,132]}]},{"pos":[35225,35486],"content":"Sends the &lt;xref:System.Data.OleDb.OleDbCommand.CommandText<bpt id=\"p1\">*</bpt>&gt; to the &lt;xref:System.Data.OleDb.OleDbCommand.Connection<ept id=\"p1\">*</ept>&gt;, and builds an <bpt id=\"p2\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> using one of the <bpt id=\"p3\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"Sends the <xref:System.Data.OleDb.OleDbCommand.CommandText*> to the <xref:System.Data.OleDb.OleDbCommand.Connection*>, and builds an <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> using one of the <xref href=\"System.Data.CommandBehavior\"></xref> values."},{"pos":[35499,37050],"content":"When you specify <xref:System.Data.CommandBehavior> with the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method of the <xref:System.Data.OleDb.OleDbCommand> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB **IRow** interface if it is available. Otherwise, it uses the **IRowset** interface. If your SQL statement is expected to return only a single row, specifying <xref:System.Data.CommandBehavior> can also improve application performance.       When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property should be set to the name of the stored procedure. The command executes this stored procedure when you call <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>.       The <xref:System.Data.OleDb.OleDbDataReader> supports a special mode that enables large binary values to be read efficiently. For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.       Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the <xref:System.Data.OleDb.OleDbDataReader> object. You must also close the <xref:System.Data.OleDb.OleDbDataReader> object if you plan to reuse an <xref:System.Data.OleDb.OleDbCommand> object. If the <xref:System.Data.OleDb.OleDbDataReader> is created with <xref:System.Data.CommandBehavior> set to `CloseConnection`, closing the <xref:System.Data.OleDb.OleDbDataReader> closes the connection automatically.","needQuote":false,"needEscape":true,"nodes":[{"content":"When you specify &lt;xref:System.Data.CommandBehavior&gt; with the &lt;xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A&gt; method of the &lt;xref:System.Data.OleDb.OleDbCommand&gt; object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB <bpt id=\"p1\">**</bpt>IRow<ept id=\"p1\">**</ept> interface if it is available.","pos":[0,292],"source":"When you specify <xref:System.Data.CommandBehavior> with the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method of the <xref:System.Data.OleDb.OleDbCommand> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB **IRow** interface if it is available."},{"content":"Otherwise, it uses the <bpt id=\"p1\">**</bpt>IRowset<ept id=\"p1\">**</ept> interface.","pos":[293,338],"source":" Otherwise, it uses the **IRowset** interface."},{"content":"If your SQL statement is expected to return only a single row, specifying &lt;xref:System.Data.CommandBehavior&gt; can also improve application performance.","pos":[339,489],"source":" If your SQL statement is expected to return only a single row, specifying <xref:System.Data.CommandBehavior> can also improve application performance."},{"content":"When the &lt;xref:System.Data.OleDb.OleDbCommand.CommandType%2A&gt; property is set to <ph id=\"ph1\">`StoredProcedure`</ph>, the &lt;xref:System.Data.OleDb.OleDbCommand.CommandText%2A&gt; property should be set to the name of the stored procedure.","pos":[496,712],"source":"       When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property should be set to the name of the stored procedure."},{"content":"The command executes this stored procedure when you call &lt;xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A&gt;.","pos":[713,825],"source":" The command executes this stored procedure when you call <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>."},{"content":"The &lt;xref:System.Data.OleDb.OleDbDataReader&gt; supports a special mode that enables large binary values to be read efficiently.","pos":[832,957],"source":"       The <xref:System.Data.OleDb.OleDbDataReader> supports a special mode that enables large binary values to be read efficiently."},{"content":"For more information, see the <ph id=\"ph1\">`SequentialAccess`</ph> setting for &lt;xref:System.Data.CommandBehavior&gt;.","pos":[958,1054],"source":" For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>."},{"content":"Before you close the &lt;xref:System.Data.OleDb.OleDbConnection&gt;, first close the &lt;xref:System.Data.OleDb.OleDbDataReader&gt; object.","pos":[1061,1188],"source":"       Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the <xref:System.Data.OleDb.OleDbDataReader> object."},{"content":"You must also close the &lt;xref:System.Data.OleDb.OleDbDataReader&gt; object if you plan to reuse an &lt;xref:System.Data.OleDb.OleDbCommand&gt; object.","pos":[1189,1330],"source":" You must also close the <xref:System.Data.OleDb.OleDbDataReader> object if you plan to reuse an <xref:System.Data.OleDb.OleDbCommand> object."},{"content":"If the &lt;xref:System.Data.OleDb.OleDbDataReader&gt; is created with &lt;xref:System.Data.CommandBehavior&gt; set to <ph id=\"ph1\">`CloseConnection`</ph>, closing the &lt;xref:System.Data.OleDb.OleDbDataReader&gt; closes the connection automatically.","pos":[1331,1545],"source":" If the <xref:System.Data.OleDb.OleDbDataReader> is created with <xref:System.Data.CommandBehavior> set to `CloseConnection`, closing the <xref:System.Data.OleDb.OleDbDataReader> closes the connection automatically."}]},{"pos":[37814,37881],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.CommandBehavior\"></xref> values."},{"pos":[37959,38024],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> object."},{"pos":[38207,38339],"content":"Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.","pos":[0,132]}]},{"pos":[38711,38857],"content":"Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.","pos":[0,146],"nodes":[{"content":"Executes the query, and returns the first column of the first row in the result set returned by the query.","pos":[0,106]},{"content":"Additional columns or rows are ignored.","pos":[107,146]}]}]},{"pos":[38870,39432],"content":"Use the ExecuteScalar method to retrieve a single value, for example, an aggregate value, from a data source. This requires less code than using the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method, and then performing the operations that are required to generate the single value using the data returned by an <xref:System.Data.OleDb.OleDbDataReader>.       A typical ExecuteScalar query can be formatted as in the following C# example:      ```   CommandText = \"SELECT COUNT(*) FROM region\";   Int32 count = (int32) ExecuteScalar();   ```","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the ExecuteScalar method to retrieve a single value, for example, an aggregate value, from a data source.","pos":[0,109]},{"content":"This requires less code than using the &lt;xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A&gt; method, and then performing the operations that are required to generate the single value using the data returned by an &lt;xref:System.Data.OleDb.OleDbDataReader&gt;.","pos":[110,365],"source":" This requires less code than using the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method, and then performing the operations that are required to generate the single value using the data returned by an <xref:System.Data.OleDb.OleDbDataReader>."},{"content":"A typical ExecuteScalar query can be formatted as in the following C# example:      <ph id=\"ph1\">```   CommandText = \"SELECT COUNT(*) FROM region\";   Int32 count = (int32) ExecuteScalar();   ```</ph>","pos":[372,553],"source":"       A typical ExecuteScalar query can be formatted as in the following C# example:      ```   CommandText = \"SELECT COUNT(*) FROM region\";   Int32 count = (int32) ExecuteScalar();   ```"}]},{"pos":[40090,40190],"content":"The first column of the first row in the result set, or a null reference if the result set is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first column of the first row in the result set, or a null reference if the result set is empty.","pos":[0,100]}]},{"pos":[40373,40505],"content":"Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.","pos":[0,132]}]},{"pos":[40858,40931],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameterCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.OleDb.OleDbParameterCollection\"></xref>."},{"pos":[40944,41851],"content":"The OLE DB .NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `Text`. In this case, the question mark (?) placeholder must be used. For example:       `SELECT * FROM Customers WHERE CustomerID = ?`       Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter in the command text.      > [!NOTE] >  If the parameters in the collection do not match the requirements of the query to be executed, an error may result.       For more information, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The OLE DB .NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an &lt;xref:System.Data.OleDb.OleDbCommand&gt; when &lt;xref:System.Data.OleDb.OleDbCommand.CommandType%2A&gt; is set to <ph id=\"ph1\">`Text`</ph>.","pos":[0,250],"source":"The OLE DB .NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `Text`."},{"content":"In this case, the question mark (?) placeholder must be used.","pos":[251,312]},{"content":"For example:       <ph id=\"ph1\">`SELECT * FROM Customers WHERE CustomerID = ?`</ph>       Therefore, the order in which &lt;xref:System.Data.OleDb.OleDbParameter&gt; objects are added to the &lt;xref:System.Data.OleDb.OleDbParameterCollection&gt; must directly correspond to the position of the question mark placeholder for the parameter in the command text.","pos":[313,642],"source":" For example:       `SELECT * FROM Customers WHERE CustomerID = ?`       Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter in the command text."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the parameters in the collection do not match the requirements of the query to be executed, an error may result.","pos":[648,776],"source":"      > [!NOTE] >  If the parameters in the collection do not match the requirements of the query to be executed, an error may result."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Configuring Parameters and Parameter Data Types<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[783,898],"source":"       For more information, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[42605,42697],"content":"The parameters of the SQL statement or stored procedure. The default is an empty collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameters of the SQL statement or stored procedure. The default is an empty collection.","pos":[0,92],"nodes":[{"content":"The parameters of the SQL statement or stored procedure.","pos":[0,56]},{"content":"The default is an empty collection.","pos":[57,92]}]}]},{"pos":[43111,43186],"content":"Creates a prepared (or compiled) version of the command on the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a prepared (or compiled) version of the command on the data source.","pos":[0,75]}]},{"pos":[43199,44192],"content":"If the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `TableDirect`, Prepare does nothing. If <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `StoredProcedure`, the call to Prepare should succeed, although it may cause a no-op.       Before you call Prepare, specify the data type of each parameter in the statement to be prepared. For each parameter that has a variable length data type, you must set the **Size** property to the maximum size needed. Prepare returns an error if these conditions are not met.       If you call an `Execute` method after you call Prepare, any parameter value that is larger than the value specified by the **Size** property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.       Output parameters (whether prepared or not) must have a user-specified data type. If you specify a variable length data type, you must also specify the maximum **Size**.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the &lt;xref:System.Data.OleDb.OleDbCommand.CommandType%2A&gt; property is set to <ph id=\"ph1\">`TableDirect`</ph>, Prepare does nothing.","pos":[0,115],"source":"If the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `TableDirect`, Prepare does nothing."},{"content":"If &lt;xref:System.Data.OleDb.OleDbCommand.CommandType%2A&gt; is set to <ph id=\"ph1\">`StoredProcedure`</ph>, the call to Prepare should succeed, although it may cause a no-op.","pos":[116,267],"source":" If <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `StoredProcedure`, the call to Prepare should succeed, although it may cause a no-op."},{"content":"Before you call Prepare, specify the data type of each parameter in the statement to be prepared.","pos":[274,371]},{"content":"For each parameter that has a variable length data type, you must set the <bpt id=\"p1\">**</bpt>Size<ept id=\"p1\">**</ept> property to the maximum size needed.","pos":[372,491],"source":" For each parameter that has a variable length data type, you must set the **Size** property to the maximum size needed."},{"content":"Prepare returns an error if these conditions are not met.","pos":[492,549]},{"content":"If you call an <ph id=\"ph1\">`Execute`</ph> method after you call Prepare, any parameter value that is larger than the value specified by the <bpt id=\"p1\">**</bpt>Size<ept id=\"p1\">**</ept> property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.","pos":[556,811],"source":"       If you call an `Execute` method after you call Prepare, any parameter value that is larger than the value specified by the **Size** property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned."},{"content":"Output parameters (whether prepared or not) must have a user-specified data type.","pos":[818,899]},{"content":"If you specify a variable length data type, you must also specify the maximum <bpt id=\"p1\">**</bpt>Size<ept id=\"p1\">**</ept>.","pos":[900,987],"source":" If you specify a variable length data type, you must also specify the maximum **Size**."}]},{"pos":[44978,45131],"content":"The &lt;xref:System.Data.OleDb.OleDbCommand.Connection<bpt id=\"p1\">*</bpt>&gt; is not set.       -or-       The &lt;xref:System.Data.OleDb.OleDbCommand.Connection<ept id=\"p1\">*</ept>&gt; is not open.","needQuote":false,"needEscape":true,"source":"The <xref:System.Data.OleDb.OleDbCommand.Connection*> is not set.       -or-       The <xref:System.Data.OleDb.OleDbCommand.Connection*> is not open."},{"pos":[45534,45629],"content":"Resets the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout*> property to the default value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resets the &lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout*&gt; property to the default value.","pos":[0,95],"source":"Resets the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout*> property to the default value."}]},{"pos":[45641,45736],"content":"The default value of the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> is 30 seconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default value of the &lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt; is 30 seconds.","pos":[0,95],"source":"The default value of the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> is 30 seconds."}]},{"pos":[46396,46512],"content":"For a description of this member, see &lt;xref:System.Data.IDbCommand.ExecuteReader%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.Data.IDbCommand.ExecuteReader%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,116],"source":"For a description of this member, see &lt;xref:System.Data.IDbCommand.ExecuteReader%2A?displayProperty=fullName&gt;."}]},{"pos":[46524,46714],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.","pos":[0,190],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Data.OleDb.OleDbCommand&gt; instance is cast to an &lt;xref:System.Data.IDbCommand&gt; interface.","pos":[60,190],"source":" It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface."}]}]},{"pos":[46877,46932],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.IDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.IDataReader\"></xref> object."},{"pos":[47634,47877],"content":"Executes the &lt;xref:System.Data.IDbCommand.CommandText<bpt id=\"p1\">*</bpt>&gt; against the &lt;xref:System.Data.IDbCommand.Connection<ept id=\"p1\">*</ept>&gt;, and builds an <bpt id=\"p2\">&lt;xref href=\"System.Data.IDataReader\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> using one of the <bpt id=\"p3\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"Executes the <xref:System.Data.IDbCommand.CommandText*> against the <xref:System.Data.IDbCommand.Connection*>, and builds an <xref href=\"System.Data.IDataReader\"></xref> using one of the <xref href=\"System.Data.CommandBehavior\"></xref> values."},{"pos":[47890,48174],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.       For a description of this member, see <xref:System.Data.IDbCommand.ExecuteReader%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.       For a description of this member, see <xref:System.Data.IDbCommand.ExecuteReader%2A>.","pos":[0,282],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Data.OleDb.OleDbCommand&gt; instance is cast to an &lt;xref:System.Data.IDbCommand&gt; interface.","pos":[60,190],"source":" It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface."},{"content":"For a description of this member, see &lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;.","pos":[197,282],"source":"       For a description of this member, see <xref:System.Data.IDbCommand.ExecuteReader%2A>."}]}]},{"pos":[48382,48449],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.CommandBehavior\"></xref> values."},{"pos":[48517,48644],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.IDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> built using one of the <bpt id=\"p2\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.IDataReader\"></xref> built using one of the <xref href=\"System.Data.CommandBehavior\"></xref> values."},{"pos":[49178,49281],"content":"For a description of this member, see &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.ICloneable.Clone%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,103],"source":"For a description of this member, see &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."}]},{"pos":[49293,49478],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.ICloneable> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.ICloneable> interface.","pos":[0,185],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Data.OleDb.OleDbCommand&gt; instance is cast to an &lt;xref:System.ICloneable&gt; interface.","pos":[60,185],"source":" It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.ICloneable> interface."}]}]},{"pos":[49606,49665],"content":"A new <xref:System.Object> that is a copy of this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new &lt;xref:System.Object&gt; that is a copy of this instance.","pos":[0,59],"source":"A new <xref:System.Object> that is a copy of this instance."}]},{"pos":[50108,50259],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbTransaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> within which the <bpt id=\"p2\">&lt;xref href=\"System.Data.OleDb.OleDbCommand\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> executes.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.OleDb.OleDbTransaction\"></xref> within which the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> executes."},{"pos":[50271,50693],"content":"You cannot set the Transaction property if it is already set to a specific value, and the command is in the process of executing. If you set the transaction property to an <xref:System.Data.OleDb.OleDbTransaction> object that is not connected to the same <xref:System.Data.OleDb.OleDbConnection> as the <xref:System.Data.OleDb.OleDbCommand> object, an exception is thrown the next time that you try to execute a statement.","needQuote":true,"needEscape":true,"nodes":[{"content":"You cannot set the Transaction property if it is already set to a specific value, and the command is in the process of executing. If you set the transaction property to an <xref:System.Data.OleDb.OleDbTransaction> object that is not connected to the same <xref:System.Data.OleDb.OleDbConnection> as the <xref:System.Data.OleDb.OleDbCommand> object, an exception is thrown the next time that you try to execute a statement.","pos":[0,422],"nodes":[{"content":"You cannot set the Transaction property if it is already set to a specific value, and the command is in the process of executing.","pos":[0,129]},{"content":"If you set the transaction property to an &lt;xref:System.Data.OleDb.OleDbTransaction&gt; object that is not connected to the same &lt;xref:System.Data.OleDb.OleDbConnection&gt; as the &lt;xref:System.Data.OleDb.OleDbCommand&gt; object, an exception is thrown the next time that you try to execute a statement.","pos":[130,422],"source":" If you set the transaction property to an <xref:System.Data.OleDb.OleDbTransaction> object that is not connected to the same <xref:System.Data.OleDb.OleDbConnection> as the <xref:System.Data.OleDb.OleDbCommand> object, an exception is thrown the next time that you try to execute a statement."}]}]},{"pos":[50863,51006],"content":"The <xref href=\"System.Data.OleDb.OleDbTransaction\"></xref>. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbTransaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,60],"source":"The <xref href=\"System.Data.OleDb.OleDbTransaction\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[61,143],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[51462,51707],"content":"Gets or sets how command results are applied to the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when used by the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Update\" name=\"Update\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> method of the <bpt id=\"p3\">&lt;xref href=\"System.Data.OleDb.OleDbDataAdapter\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets how command results are applied to the <xref href=\"System.Data.DataRow\"></xref> when used by the <xref uid=\"langword_csharp_Update\" name=\"Update\" href=\"\"></xref> method of the <xref href=\"System.Data.OleDb.OleDbDataAdapter\"></xref>."},{"pos":[51720,52049],"content":"The default UpdatedRowSource value is Both unless the command is automatically generated (as with the <xref:System.Data.OleDb.OleDbCommandBuilder>), in which case the default is None.       For more information about how to use the UpdatedRowSource property, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The default UpdatedRowSource value is Both unless the command is automatically generated (as with the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;), in which case the default is None.","pos":[0,183],"source":"The default UpdatedRowSource value is Both unless the command is automatically generated (as with the <xref:System.Data.OleDb.OleDbCommandBuilder>), in which case the default is None."},{"content":"For more information about how to use the UpdatedRowSource property, see <bpt id=\"p1\">[</bpt>DataAdapter Parameters<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[190,327],"source":"       For more information about how to use the UpdatedRowSource property, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[52220,52287],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.UpdateRowSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.UpdateRowSource\"></xref> values."},{"pos":[52457,52550],"content":"The value entered was not one of the <bpt id=\"p1\">&lt;xref href=\"System.Data.UpdateRowSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The value entered was not one of the <xref href=\"System.Data.UpdateRowSource\"></xref> values."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.OleDb.OleDbCommand\n  id: OleDbCommand\n  children:\n  - System.Data.OleDb.OleDbCommand.#ctor\n  - System.Data.OleDb.OleDbCommand.#ctor(System.String)\n  - System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)\n  - System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)\n  - System.Data.OleDb.OleDbCommand.Cancel\n  - System.Data.OleDb.OleDbCommand.Clone\n  - System.Data.OleDb.OleDbCommand.CommandText\n  - System.Data.OleDb.OleDbCommand.CommandTimeout\n  - System.Data.OleDb.OleDbCommand.CommandType\n  - System.Data.OleDb.OleDbCommand.Connection\n  - System.Data.OleDb.OleDbCommand.CreateDbParameter\n  - System.Data.OleDb.OleDbCommand.CreateParameter\n  - System.Data.OleDb.OleDbCommand.DbConnection\n  - System.Data.OleDb.OleDbCommand.DbParameterCollection\n  - System.Data.OleDb.OleDbCommand.DbTransaction\n  - System.Data.OleDb.OleDbCommand.DesignTimeVisible\n  - System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)\n  - System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)\n  - System.Data.OleDb.OleDbCommand.ExecuteNonQuery\n  - System.Data.OleDb.OleDbCommand.ExecuteReader\n  - System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)\n  - System.Data.OleDb.OleDbCommand.ExecuteScalar\n  - System.Data.OleDb.OleDbCommand.Parameters\n  - System.Data.OleDb.OleDbCommand.Prepare\n  - System.Data.OleDb.OleDbCommand.ResetCommandTimeout\n  - System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader\n  - System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)\n  - System.Data.OleDb.OleDbCommand.System#ICloneable#Clone\n  - System.Data.OleDb.OleDbCommand.Transaction\n  - System.Data.OleDb.OleDbCommand.UpdatedRowSource\n  langs:\n  - csharp\n  name: OleDbCommand\n  nameWithType: OleDbCommand\n  fullName: System.Data.OleDb.OleDbCommand\n  type: Class\n  summary: Represents an SQL statement or stored procedure to execute against a data source.\n  remarks: \"When an instance of OleDbCommand is created, the read/write properties are set to their initial values. For a list of these values, see the OleDbCommand constructor.  \\n  \\n OleDbCommand features the following methods executing commands at a data source:  \\n  \\n|Item|Description|  \\n|----------|-----------------|  \\n|<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>|Executes commands that return rows. <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> may not have the effect that you want if used to execute commands such as SQL SET statements.|  \\n|<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>|Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.|  \\n|<xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>|Retrieves a single value, for example, an aggregate value from a database.|  \\n  \\n You can reset the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property and reuse the OleDbCommand object. However, you must close the <xref:System.Data.OleDb.OleDbDataReader> before you can execute a new or previous command.  \\n  \\n If a fatal <xref:System.Data.OleDb.OleDbException> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an OleDbCommand, the <xref:System.Data.OleDb.OleDbConnection>, the connection may be closed. However, the user can reopen the connection and continue.\"\n  example:\n  - \"The following example uses the OleDbCommand, along <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select rows from an Access database. The filled <xref:System.Data.DataSet> is then returned. The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the source database table.  \\n  \\n [!code-cs[Classic WebData OleDbCommand Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_9_1.cs)]\\n [!code-vb[Classic WebData OleDbCommand Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_9_1.vb)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultEvent(\"RecordsAffected\")]\n\n      [System.ComponentModel.Designer(\"Microsoft.VSDesigner.Data.VS.OleDbCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      [System.ComponentModel.ToolboxItem(true)]\n\n      public sealed class OleDbCommand : System.Data.Common.DbCommand, ICloneable, IDisposable\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Data.Common.DbCommand\n  implements:\n  - System.ICloneable\n  - System.IDisposable\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  - System.Data.Common.DbCommand.ExecuteNonQueryAsync\n  - System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\n  - System.Data.Common.DbCommand.ExecuteReaderAsync\n  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\n  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)\n  - System.Data.Common.DbCommand.ExecuteScalarAsync\n  - System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\n  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection\n  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter\n  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters\n  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.#ctor\n  id: '#ctor'\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: OleDbCommand()\n  nameWithType: OleDbCommand.OleDbCommand()\n  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> class.\n  remarks: \"The base constructor initializes all fields to their default values. The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.  \\n  \\n|Properties|Initial Value|  \\n|----------------|-------------------|  \\n|<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|empty string (\\\"\\\")|  \\n|<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|30|  \\n|<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>|`Text`|  \\n|<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|null|\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \\n  \\n [!code-cs[Classic WebData OleDbCommand.OleDbCommand Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_21_1.cs)]\\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_21_1.vb)]\"\n  syntax:\n    content: public OleDbCommand ();\n    parameters: []\n  overload: System.Data.OleDb.OleDbCommand.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: OleDbCommand(String)\n  nameWithType: OleDbCommand.OleDbCommand(String)\n  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> class with the text of the query.\n  remarks: \"The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.  \\n  \\n|Properties|Initial Value|  \\n|----------------|-------------------|  \\n|<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  \\n|<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|30|  \\n|<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  \\n|<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|null|\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \\n  \\n [!code-cs[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_19_1.cs)]\\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_19_1.vb)]\"\n  syntax:\n    content: public OleDbCommand (string cmdText);\n    parameters:\n    - id: cmdText\n      type: System.String\n      description: The text of the query.\n  overload: System.Data.OleDb.OleDbCommand.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)\n  id: '#ctor(System.String,System.Data.OleDb.OleDbConnection)'\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: OleDbCommand(String,OleDbConnection)\n  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection)\n  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> class with the text of the query and an <xref href=\"System.Data.OleDb.OleDbConnection\"></xref>.\n  remarks: \"The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.  \\n  \\n|Properties|Initial Value|  \\n|----------------|-------------------|  \\n|<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  \\n|<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|30|  \\n|<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  \\n|<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|A new <xref:System.Data.OleDb.OleDbConnection> that is the value for the `connection` parameter.|  \\n  \\n You can change the value for any of these parameters by setting the related property.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \\n  \\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/add/codesnippet/visualbasic/26f0a1c0-3abd-4fd3-81fd-_1.vb)]\\n [!code-cs[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/add/codesnippet/csharp/26f0a1c0-3abd-4fd3-81fd-_1.cs)]\"\n  syntax:\n    content: public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection);\n    parameters:\n    - id: cmdText\n      type: System.String\n      description: The text of the query.\n    - id: connection\n      type: System.Data.OleDb.OleDbConnection\n      description: An <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> that represents the connection to a data source.\n  overload: System.Data.OleDb.OleDbCommand.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)\n  id: '#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)'\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: OleDbCommand(String,OleDbConnection,OleDbTransaction)\n  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)\n  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> class with the text of the query, an <xref href=\"System.Data.OleDb.OleDbConnection\"></xref>, and the <xref:System.Data.OleDb.OleDbCommand.Transaction*>.\n  remarks: \"The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.  \\n  \\n|Properties|Initial Value|  \\n|----------------|-------------------|  \\n|<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  \\n|<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|30|  \\n|<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  \\n|<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|A new <xref:System.Data.OleDb.OleDbConnection> that is the value for the `connection` parameter.|  \\n  \\n You can change the value for any of these parameters by setting the related property.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \\n  \\n [!code-cs[Classic WebData OleDbCommand.OleDbCommand3#1](~/add/codesnippet/csharp/e97c7061-6e79-4e9b-b76e-_1.cs)]\\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand3#1](~/add/codesnippet/visualbasic/e97c7061-6e79-4e9b-b76e-_1.vb)]\"\n  syntax:\n    content: public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection, System.Data.OleDb.OleDbTransaction transaction);\n    parameters:\n    - id: cmdText\n      type: System.String\n      description: The text of the query.\n    - id: connection\n      type: System.Data.OleDb.OleDbConnection\n      description: An <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> that represents the connection to a data source.\n    - id: transaction\n      type: System.Data.OleDb.OleDbTransaction\n      description: The transaction in which the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> executes.\n  overload: System.Data.OleDb.OleDbCommand.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.Cancel\n  id: Cancel\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: Cancel()\n  nameWithType: OleDbCommand.Cancel()\n  fullName: System.Data.OleDb.OleDbCommand.Cancel()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Tries to cancel the execution of an <xref href=\"System.Data.OleDb.OleDbCommand\"></xref>.\n  remarks: If there is nothing to cancel, nothing occurs. However, if there is a command in process, and the attempt to cancel fails, no exception is generated.\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbCommand>, executes it, and then cancels the execution. To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the data source.  \\n  \\n [!code-cs[Classic WebData OleDbCommand.Cancel Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_0_1.cs)]\\n [!code-vb[Classic WebData OleDbCommand.Cancel Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_0_1.vb)]\"\n  syntax:\n    content: public override void Cancel ();\n    parameters: []\n  overload: System.Data.OleDb.OleDbCommand.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.Clone\n  id: Clone\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: OleDbCommand.Clone()\n  fullName: System.Data.OleDb.OleDbCommand.Clone()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Creates a new <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> object that is a copy of the current instance.\n  syntax:\n    content: public System.Data.OleDb.OleDbCommand Clone ();\n    parameters: []\n    return:\n      type: System.Data.OleDb.OleDbCommand\n      description: A new <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> object that is a copy of this instance.\n  overload: System.Data.OleDb.OleDbCommand.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.CommandText\n  id: CommandText\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: CommandText\n  nameWithType: OleDbCommand.CommandText\n  fullName: System.Data.OleDb.OleDbCommand.CommandText\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets the SQL statement or stored procedure to execute at the data source.\n  remarks: \"When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property should be set to the name of the stored procedure. The user may be required to use escape character syntax if the stored procedure name contains any special characters. The command executes this stored procedure when you call one of the `Execute` methods.  \\n  \\n When <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `TableDirect`, the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property should be set to the name of the table or tables to be accessed. The user may be required to use escape character syntax if any of the named tables contain any special characters. All rows and columns of the named table or tables will be returned when you call one of the `Execute` methods.  \\n  \\n You cannot set the <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>, and CommandText properties if the current connection is performing an execute or fetch operation.  \\n  \\n The OLE DB.NET Provider does not support named parameters for passing parameters to an SQL Statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `Text`. In this case, the question mark (?) placeholder must be used. For example:  \\n  \\n `SELECT * FROM Customers WHERE CustomerID = ?`  \\n  \\n Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter.  \\n  \\n For more information, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \\n  \\n [!code-vb[Classic WebData OleDbCommand.CommandText Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_11_1.vb)]\\n [!code-cs[Classic WebData OleDbCommand.CommandText Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_11_1.cs)]\"\n  syntax:\n    content: public override string CommandText { get; set; }\n    return:\n      type: System.String\n      description: The SQL statement or stored procedure to execute. The default value is an empty string.\n  overload: System.Data.OleDb.OleDbCommand.CommandText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.CommandTimeout\n  id: CommandTimeout\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: CommandTimeout\n  nameWithType: OleDbCommand.CommandTimeout\n  fullName: System.Data.OleDb.OleDbCommand.CommandTimeout\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets the wait time before terminating an attempt to execute a command and generating an error.\n  remarks: A value of 0 indicates no limit, and should be avoided in a CommandTimeout because an attempt to execute a command will wait indefinitely.\n  syntax:\n    content: public override int CommandTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: The time (in seconds) to wait for the command to execute. The default is 30 seconds.\n  overload: System.Data.OleDb.OleDbCommand.CommandTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.CommandType\n  id: CommandType\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: CommandType\n  nameWithType: OleDbCommand.CommandType\n  fullName: System.Data.OleDb.OleDbCommand.CommandType\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets a value that indicates how the <xref:System.Data.OleDb.OleDbCommand.CommandText*> property is interpreted.\n  remarks: \"When you set the CommandType property to `StoredProcedure`, you should set the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property to the name of the stored procedure. The command executes this stored procedure when you call one of the Execute methods.  \\n  \\n The <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, CommandType and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.  \\n  \\n The OLE DB .NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when CommandType is set to Text. In this case, the question mark (?) placeholder must be used. For example:  \\n  \\n `SELECT * FROM Customers WHERE CustomerID = ?`  \\n  \\n Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter. For more information, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public override System.Data.CommandType CommandType { get; set; }\n    return:\n      type: System.Data.CommandType\n      description: One of the CommandType values. The default is Text.\n  overload: System.Data.OleDb.OleDbCommand.CommandType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value was not a valid CommandType.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.Connection\n  id: Connection\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: Connection\n  nameWithType: OleDbCommand.Connection\n  fullName: System.Data.OleDb.OleDbCommand.Connection\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets the <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> used by this instance of the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref>.\n  remarks: \"You cannot set the Connection, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.  \\n  \\n If you set Connection while a transaction is in progress and the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated. If the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property is not null and the transaction has already been committed or rolled back, <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> is set to null.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \\n  \\n [!code-vb[Classic WebData OleDbCommand.Connection Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_0_1.vb)]\\n [!code-cs[Classic WebData OleDbCommand.Connection Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_0_1.cs)]\"\n  syntax:\n    content: public System.Data.OleDb.OleDbConnection Connection { get; set; }\n    return:\n      type: System.Data.OleDb.OleDbConnection\n      description: The connection to a data source. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Data.OleDb.OleDbCommand.Connection*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The Connection property was changed while a transaction was in progress.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter\n  id: CreateDbParameter\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: CreateDbParameter()\n  nameWithType: OleDbCommand.CreateDbParameter()\n  fullName: System.Data.OleDb.OleDbCommand.CreateDbParameter()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  syntax:\n    content: protected override System.Data.Common.DbParameter CreateDbParameter ();\n    parameters: []\n    return:\n      type: System.Data.Common.DbParameter\n      description: To be added.\n  overload: System.Data.OleDb.OleDbCommand.CreateDbParameter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.CreateParameter\n  id: CreateParameter\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: CreateParameter()\n  nameWithType: OleDbCommand.CreateParameter()\n  fullName: System.Data.OleDb.OleDbCommand.CreateParameter()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Creates a new instance of an <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> object.\n  remarks: The CreateParameter method is a strongly typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.\n  syntax:\n    content: public System.Data.OleDb.OleDbParameter CreateParameter ();\n    parameters: []\n    return:\n      type: System.Data.OleDb.OleDbParameter\n      description: An <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> object.\n  overload: System.Data.OleDb.OleDbCommand.CreateParameter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.DbConnection\n  id: DbConnection\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: DbConnection\n  nameWithType: OleDbCommand.DbConnection\n  fullName: System.Data.OleDb.OleDbCommand.DbConnection\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  syntax:\n    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }\n    return:\n      type: System.Data.Common.DbConnection\n      description: To be added.\n  overload: System.Data.OleDb.OleDbCommand.DbConnection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection\n  id: DbParameterCollection\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: DbParameterCollection\n  nameWithType: OleDbCommand.DbParameterCollection\n  fullName: System.Data.OleDb.OleDbCommand.DbParameterCollection\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  syntax:\n    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }\n    return:\n      type: System.Data.Common.DbParameterCollection\n      description: To be added.\n  overload: System.Data.OleDb.OleDbCommand.DbParameterCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.DbTransaction\n  id: DbTransaction\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: DbTransaction\n  nameWithType: OleDbCommand.DbTransaction\n  fullName: System.Data.OleDb.OleDbCommand.DbTransaction\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  syntax:\n    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }\n    return:\n      type: System.Data.Common.DbTransaction\n      description: To be added.\n  overload: System.Data.OleDb.OleDbCommand.DbTransaction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible\n  id: DesignTimeVisible\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: DesignTimeVisible\n  nameWithType: OleDbCommand.DesignTimeVisible\n  fullName: System.Data.OleDb.OleDbCommand.DesignTimeVisible\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets a value that indicates whether the command object should be visible in a customized Windows Forms Designer control.\n  syntax:\n    content: public override bool DesignTimeVisible { get; set; }\n    return:\n      type: System.Boolean\n      description: A value that indicates whether the command object should be visible in a control. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Data.OleDb.OleDbCommand.DesignTimeVisible*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: OleDbCommand.Dispose(Boolean)\n  fullName: System.Data.OleDb.OleDbCommand.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.OleDb.OleDbCommand.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)\n  id: ExecuteDbDataReader(System.Data.CommandBehavior)\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: ExecuteDbDataReader(CommandBehavior)\n  nameWithType: OleDbCommand.ExecuteDbDataReader(CommandBehavior)\n  fullName: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(CommandBehavior)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  syntax:\n    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: To be added.\n    return:\n      type: System.Data.Common.DbDataReader\n      description: To be added.\n  overload: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery\n  id: ExecuteNonQuery\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: ExecuteNonQuery()\n  nameWithType: OleDbCommand.ExecuteNonQuery()\n  fullName: System.Data.OleDb.OleDbCommand.ExecuteNonQuery()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Executes an SQL statement against the <xref:System.Data.OleDb.OleDbCommand.Connection*> and returns the number of rows affected.\n  remarks: \"You can use the ExecuteNonQuery to perform catalog operations, for example, to query the structure of a database or to create database objects such as tables, or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.  \\n  \\n Although the ExecuteNonQuery returns no rows, any output parameters or return values mapped to parameters are populated with data.  \\n  \\n For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value is -1. If a rollback occurs, the return value is also -1.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using ExecuteNonQuery. The example is passed a string that is an SQL statement such as UPDATE, INSERT, or DELETE, and a string to use to connect to the data source.  \\n  \\n [!code-cs[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_5_1.cs)]\\n [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_5_1.vb)]\"\n  syntax:\n    content: public override int ExecuteNonQuery ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The number of rows affected.\n  overload: System.Data.OleDb.OleDbCommand.ExecuteNonQuery*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The connection does not exist.  \\n  \\n -or-  \\n  \\n The connection is not open.  \\n  \\n -or-  \\n  \\n Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.\"\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.ExecuteReader\n  id: ExecuteReader\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: ExecuteReader()\n  nameWithType: OleDbCommand.ExecuteReader()\n  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Sends the <xref:System.Data.OleDb.OleDbCommand.CommandText*> to the <xref:System.Data.OleDb.OleDbCommand.Connection*> and builds an <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref>.\n  remarks: \"When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property should be set to the name of the stored procedure. The command executes this stored procedure when you call ExecuteReader.  \\n  \\n Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the <xref:System.Data.OleDb.OleDbDataReader> object. You must also close the <xref:System.Data.OleDb.OleDbDataReader> object if you plan to reuse an <xref:System.Data.OleDb.OleDbCommand> object.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.  \\n  \\n [!code-cs[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_11_1.cs)]\\n [!code-vb[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_11_1.vb)]\"\n  syntax:\n    content: public System.Data.OleDb.OleDbDataReader ExecuteReader ();\n    parameters: []\n    return:\n      type: System.Data.OleDb.OleDbDataReader\n      description: An <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> object.\n  overload: System.Data.OleDb.OleDbCommand.ExecuteReader*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)\n  id: ExecuteReader(System.Data.CommandBehavior)\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: ExecuteReader(CommandBehavior)\n  nameWithType: OleDbCommand.ExecuteReader(CommandBehavior)\n  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader(CommandBehavior)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Sends the <xref:System.Data.OleDb.OleDbCommand.CommandText*> to the <xref:System.Data.OleDb.OleDbCommand.Connection*>, and builds an <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> using one of the <xref href=\"System.Data.CommandBehavior\"></xref> values.\n  remarks: \"When you specify <xref:System.Data.CommandBehavior> with the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method of the <xref:System.Data.OleDb.OleDbCommand> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB **IRow** interface if it is available. Otherwise, it uses the **IRowset** interface. If your SQL statement is expected to return only a single row, specifying <xref:System.Data.CommandBehavior> can also improve application performance.  \\n  \\n When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property should be set to the name of the stored procedure. The command executes this stored procedure when you call <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>.  \\n  \\n The <xref:System.Data.OleDb.OleDbDataReader> supports a special mode that enables large binary values to be read efficiently. For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.  \\n  \\n Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the <xref:System.Data.OleDb.OleDbDataReader> object. You must also close the <xref:System.Data.OleDb.OleDbDataReader> object if you plan to reuse an <xref:System.Data.OleDb.OleDbCommand> object. If the <xref:System.Data.OleDb.OleDbDataReader> is created with <xref:System.Data.CommandBehavior> set to `CloseConnection`, closing the <xref:System.Data.OleDb.OleDbDataReader> closes the connection automatically.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source. <xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior>.  \\n  \\n [!code-vb[Classic WebData OleDbCommand.ExecuteReader2#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_2_1.vb)]\\n [!code-cs[Classic WebData OleDbCommand.ExecuteReader2#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_2_1.cs)]\"\n  syntax:\n    content: public System.Data.OleDb.OleDbDataReader ExecuteReader (System.Data.CommandBehavior behavior);\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: One of the <xref href=\"System.Data.CommandBehavior\"></xref> values.\n    return:\n      type: System.Data.OleDb.OleDbDataReader\n      description: An <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> object.\n  overload: System.Data.OleDb.OleDbCommand.ExecuteReader*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar\n  id: ExecuteScalar\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: ExecuteScalar()\n  nameWithType: OleDbCommand.ExecuteScalar()\n  fullName: System.Data.OleDb.OleDbCommand.ExecuteScalar()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.\n  remarks: \"Use the ExecuteScalar method to retrieve a single value, for example, an aggregate value, from a data source. This requires less code than using the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method, and then performing the operations that are required to generate the single value using the data returned by an <xref:System.Data.OleDb.OleDbDataReader>.  \\n  \\n A typical ExecuteScalar query can be formatted as in the following C# example:  \\n  \\n```  \\nCommandText = \\\"SELECT COUNT(*) FROM region\\\";  \\nInt32 count = (int32) ExecuteScalar();  \\n```\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using ExecuteScalar. The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the data source.  \\n  \\n [!code-cs[Classic WebData OleDbCommand.ExecuteScalar#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_8_1.cs)]\\n [!code-vb[Classic WebData OleDbCommand.ExecuteScalar#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_8_1.vb)]\"\n  syntax:\n    content: public override object ExecuteScalar ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The first column of the first row in the result set, or a null reference if the result set is empty.\n  overload: System.Data.OleDb.OleDbCommand.ExecuteScalar*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.Parameters\n  id: Parameters\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: Parameters\n  nameWithType: OleDbCommand.Parameters\n  fullName: System.Data.OleDb.OleDbCommand.Parameters\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the <xref href=\"System.Data.OleDb.OleDbParameterCollection\"></xref>.\n  remarks: \"The OLE DB .NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `Text`. In this case, the question mark (?) placeholder must be used. For example:  \\n  \\n `SELECT * FROM Customers WHERE CustomerID = ?`  \\n  \\n Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter in the command text.  \\n  \\n> [!NOTE]\\n>  If the parameters in the collection do not match the requirements of the query to be executed, an error may result.  \\n  \\n For more information, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbCommand> and displays its parameters. To accomplish this, the method is passed an <xref:System.Data.OleDb.OleDbConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OleDb.OleDbParameter> objects.  \\n  \\n [!code-vb[Classic WebData OleDbCommand.Parameters Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_18_1.vb)]\\n [!code-cs[Classic WebData OleDbCommand.Parameters Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_18_1.cs)]\"\n  syntax:\n    content: public System.Data.OleDb.OleDbParameterCollection Parameters { get; }\n    return:\n      type: System.Data.OleDb.OleDbParameterCollection\n      description: The parameters of the SQL statement or stored procedure. The default is an empty collection.\n  overload: System.Data.OleDb.OleDbCommand.Parameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.Prepare\n  id: Prepare\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: Prepare()\n  nameWithType: OleDbCommand.Prepare()\n  fullName: System.Data.OleDb.OleDbCommand.Prepare()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Creates a prepared (or compiled) version of the command on the data source.\n  remarks: \"If the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `TableDirect`, Prepare does nothing. If <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `StoredProcedure`, the call to Prepare should succeed, although it may cause a no-op.  \\n  \\n Before you call Prepare, specify the data type of each parameter in the statement to be prepared. For each parameter that has a variable length data type, you must set the **Size** property to the maximum size needed. Prepare returns an error if these conditions are not met.  \\n  \\n If you call an `Execute` method after you call Prepare, any parameter value that is larger than the value specified by the **Size** property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.  \\n  \\n Output parameters (whether prepared or not) must have a user-specified data type. If you specify a variable length data type, you must also specify the maximum **Size**.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbCommand> and opens the connection. The example then prepares a stored procedure on the data source by passing a string that is an SQL SELECT statement and a string to use to connect to the data source.  \\n  \\n [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_26_1.vb)]\\n [!code-cs[Classic WebData OleDbCommand.Prepare Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_26_1.cs)]\"\n  syntax:\n    content: public override void Prepare ();\n    parameters: []\n  overload: System.Data.OleDb.OleDbCommand.Prepare*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref:System.Data.OleDb.OleDbCommand.Connection*> is not set.  \\n  \\n -or-  \\n  \\n The <xref:System.Data.OleDb.OleDbCommand.Connection*> is not open.\"\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout\n  id: ResetCommandTimeout\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: ResetCommandTimeout()\n  nameWithType: OleDbCommand.ResetCommandTimeout()\n  fullName: System.Data.OleDb.OleDbCommand.ResetCommandTimeout()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Resets the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout*> property to the default value.\n  remarks: The default value of the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> is 30 seconds.\n  syntax:\n    content: public void ResetCommandTimeout ();\n    parameters: []\n  overload: System.Data.OleDb.OleDbCommand.ResetCommandTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader\n  id: System#Data#IDbCommand#ExecuteReader\n  isEii: true\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: System.Data.IDbCommand.ExecuteReader()\n  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader()\n  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: For a description of this member, see &lt;xref:System.Data.IDbCommand.ExecuteReader%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.\n  syntax:\n    content: System.Data.IDataReader IDbCommand.ExecuteReader ();\n    parameters: []\n    return:\n      type: System.Data.IDataReader\n      description: An <xref href=\"System.Data.IDataReader\"></xref> object.\n  overload: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)\n  id: System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)\n  isEii: true\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)\n  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)\n  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Executes the <xref:System.Data.IDbCommand.CommandText*> against the <xref:System.Data.IDbCommand.Connection*>, and builds an <xref href=\"System.Data.IDataReader\"></xref> using one of the <xref href=\"System.Data.CommandBehavior\"></xref> values.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.  \\n  \\n For a description of this member, see <xref:System.Data.IDbCommand.ExecuteReader%2A>.\"\n  syntax:\n    content: System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: One of the <xref href=\"System.Data.CommandBehavior\"></xref> values.\n    return:\n      type: System.Data.IDataReader\n      description: An <xref href=\"System.Data.IDataReader\"></xref> built using one of the <xref href=\"System.Data.CommandBehavior\"></xref> values.\n  overload: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone\n  id: System#ICloneable#Clone\n  isEii: true\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: System.ICloneable.Clone()\n  nameWithType: OleDbCommand.System.ICloneable.Clone()\n  fullName: System.Data.OleDb.OleDbCommand.System.ICloneable.Clone()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: For a description of this member, see &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.ICloneable> interface.\n  syntax:\n    content: object ICloneable.Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A new <xref:System.Object> that is a copy of this instance.\n  overload: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.Transaction\n  id: Transaction\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: Transaction\n  nameWithType: OleDbCommand.Transaction\n  fullName: System.Data.OleDb.OleDbCommand.Transaction\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets the <xref href=\"System.Data.OleDb.OleDbTransaction\"></xref> within which the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> executes.\n  remarks: You cannot set the Transaction property if it is already set to a specific value, and the command is in the process of executing. If you set the transaction property to an <xref:System.Data.OleDb.OleDbTransaction> object that is not connected to the same <xref:System.Data.OleDb.OleDbConnection> as the <xref:System.Data.OleDb.OleDbCommand> object, an exception is thrown the next time that you try to execute a statement.\n  syntax:\n    content: public System.Data.OleDb.OleDbTransaction Transaction { get; set; }\n    return:\n      type: System.Data.OleDb.OleDbTransaction\n      description: The <xref href=\"System.Data.OleDb.OleDbTransaction\"></xref>. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Data.OleDb.OleDbCommand.Transaction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource\n  id: UpdatedRowSource\n  parent: System.Data.OleDb.OleDbCommand\n  langs:\n  - csharp\n  name: UpdatedRowSource\n  nameWithType: OleDbCommand.UpdatedRowSource\n  fullName: System.Data.OleDb.OleDbCommand.UpdatedRowSource\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets how command results are applied to the <xref href=\"System.Data.DataRow\"></xref> when used by the <xref uid=\"langword_csharp_Update\" name=\"Update\" href=\"\"></xref> method of the <xref href=\"System.Data.OleDb.OleDbDataAdapter\"></xref>.\n  remarks: \"The default UpdatedRowSource value is Both unless the command is automatically generated (as with the <xref:System.Data.OleDb.OleDbCommandBuilder>), in which case the default is None.  \\n  \\n For more information about how to use the UpdatedRowSource property, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }\n    return:\n      type: System.Data.UpdateRowSource\n      description: One of the <xref href=\"System.Data.UpdateRowSource\"></xref> values.\n  overload: System.Data.OleDb.OleDbCommand.UpdatedRowSource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value entered was not one of the <xref href=\"System.Data.UpdateRowSource\"></xref> values.\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Common.DbCommand\n  isExternal: false\n  name: System.Data.Common.DbCommand\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Data.OleDb.OleDbCommand.#ctor\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: OleDbCommand()\n  nameWithType: OleDbCommand.OleDbCommand()\n  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand()\n- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String)\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: OleDbCommand(String)\n  nameWithType: OleDbCommand.OleDbCommand(String)\n  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: OleDbCommand(String,OleDbConnection)\n  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection)\n  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection)\n- uid: System.Data.OleDb.OleDbConnection\n  parent: System.Data.OleDb\n  isExternal: false\n  name: OleDbConnection\n  nameWithType: OleDbConnection\n  fullName: System.Data.OleDb.OleDbConnection\n- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: OleDbCommand(String,OleDbConnection,OleDbTransaction)\n  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)\n  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)\n- uid: System.Data.OleDb.OleDbTransaction\n  parent: System.Data.OleDb\n  isExternal: false\n  name: OleDbTransaction\n  nameWithType: OleDbTransaction\n  fullName: System.Data.OleDb.OleDbTransaction\n- uid: System.Data.OleDb.OleDbCommand.Cancel\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: Cancel()\n  nameWithType: OleDbCommand.Cancel()\n  fullName: System.Data.OleDb.OleDbCommand.Cancel()\n- uid: System.Data.OleDb.OleDbCommand.Clone\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: Clone()\n  nameWithType: OleDbCommand.Clone()\n  fullName: System.Data.OleDb.OleDbCommand.Clone()\n- uid: System.Data.OleDb.OleDbCommand\n  parent: System.Data.OleDb\n  isExternal: false\n  name: OleDbCommand\n  nameWithType: OleDbCommand\n  fullName: System.Data.OleDb.OleDbCommand\n- uid: System.Data.OleDb.OleDbCommand.CommandText\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: CommandText\n  nameWithType: OleDbCommand.CommandText\n  fullName: System.Data.OleDb.OleDbCommand.CommandText\n- uid: System.Data.OleDb.OleDbCommand.CommandTimeout\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: CommandTimeout\n  nameWithType: OleDbCommand.CommandTimeout\n  fullName: System.Data.OleDb.OleDbCommand.CommandTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.OleDb.OleDbCommand.CommandType\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: CommandType\n  nameWithType: OleDbCommand.CommandType\n  fullName: System.Data.OleDb.OleDbCommand.CommandType\n- uid: System.Data.CommandType\n  parent: System.Data\n  isExternal: false\n  name: CommandType\n  nameWithType: CommandType\n  fullName: System.Data.CommandType\n- uid: System.Data.OleDb.OleDbCommand.Connection\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: Connection\n  nameWithType: OleDbCommand.Connection\n  fullName: System.Data.OleDb.OleDbCommand.Connection\n- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: CreateDbParameter()\n  nameWithType: OleDbCommand.CreateDbParameter()\n  fullName: System.Data.OleDb.OleDbCommand.CreateDbParameter()\n- uid: System.Data.Common.DbParameter\n  parent: System.Data.Common\n  isExternal: false\n  name: DbParameter\n  nameWithType: DbParameter\n  fullName: System.Data.Common.DbParameter\n- uid: System.Data.OleDb.OleDbCommand.CreateParameter\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: CreateParameter()\n  nameWithType: OleDbCommand.CreateParameter()\n  fullName: System.Data.OleDb.OleDbCommand.CreateParameter()\n- uid: System.Data.OleDb.OleDbParameter\n  parent: System.Data.OleDb\n  isExternal: false\n  name: OleDbParameter\n  nameWithType: OleDbParameter\n  fullName: System.Data.OleDb.OleDbParameter\n- uid: System.Data.OleDb.OleDbCommand.DbConnection\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: DbConnection\n  nameWithType: OleDbCommand.DbConnection\n  fullName: System.Data.OleDb.OleDbCommand.DbConnection\n- uid: System.Data.Common.DbConnection\n  parent: System.Data.Common\n  isExternal: false\n  name: DbConnection\n  nameWithType: DbConnection\n  fullName: System.Data.Common.DbConnection\n- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: DbParameterCollection\n  nameWithType: OleDbCommand.DbParameterCollection\n  fullName: System.Data.OleDb.OleDbCommand.DbParameterCollection\n- uid: System.Data.Common.DbParameterCollection\n  parent: System.Data.Common\n  isExternal: false\n  name: DbParameterCollection\n  nameWithType: DbParameterCollection\n  fullName: System.Data.Common.DbParameterCollection\n- uid: System.Data.OleDb.OleDbCommand.DbTransaction\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: DbTransaction\n  nameWithType: OleDbCommand.DbTransaction\n  fullName: System.Data.OleDb.OleDbCommand.DbTransaction\n- uid: System.Data.Common.DbTransaction\n  parent: System.Data.Common\n  isExternal: false\n  name: DbTransaction\n  nameWithType: DbTransaction\n  fullName: System.Data.Common.DbTransaction\n- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: DesignTimeVisible\n  nameWithType: OleDbCommand.DesignTimeVisible\n  fullName: System.Data.OleDb.OleDbCommand.DesignTimeVisible\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: OleDbCommand.Dispose(Boolean)\n  fullName: System.Data.OleDb.OleDbCommand.Dispose(Boolean)\n- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: ExecuteDbDataReader(CommandBehavior)\n  nameWithType: OleDbCommand.ExecuteDbDataReader(CommandBehavior)\n  fullName: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(CommandBehavior)\n- uid: System.Data.Common.DbDataReader\n  parent: System.Data.Common\n  isExternal: false\n  name: DbDataReader\n  nameWithType: DbDataReader\n  fullName: System.Data.Common.DbDataReader\n- uid: System.Data.CommandBehavior\n  parent: System.Data\n  isExternal: false\n  name: CommandBehavior\n  nameWithType: CommandBehavior\n  fullName: System.Data.CommandBehavior\n- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: ExecuteNonQuery()\n  nameWithType: OleDbCommand.ExecuteNonQuery()\n  fullName: System.Data.OleDb.OleDbCommand.ExecuteNonQuery()\n- uid: System.Data.OleDb.OleDbCommand.ExecuteReader\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: ExecuteReader()\n  nameWithType: OleDbCommand.ExecuteReader()\n  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader()\n- uid: System.Data.OleDb.OleDbDataReader\n  parent: System.Data.OleDb\n  isExternal: false\n  name: OleDbDataReader\n  nameWithType: OleDbDataReader\n  fullName: System.Data.OleDb.OleDbDataReader\n- uid: System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: ExecuteReader(CommandBehavior)\n  nameWithType: OleDbCommand.ExecuteReader(CommandBehavior)\n  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader(CommandBehavior)\n- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: ExecuteScalar()\n  nameWithType: OleDbCommand.ExecuteScalar()\n  fullName: System.Data.OleDb.OleDbCommand.ExecuteScalar()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.OleDb.OleDbCommand.Parameters\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: Parameters\n  nameWithType: OleDbCommand.Parameters\n  fullName: System.Data.OleDb.OleDbCommand.Parameters\n- uid: System.Data.OleDb.OleDbParameterCollection\n  parent: System.Data.OleDb\n  isExternal: false\n  name: OleDbParameterCollection\n  nameWithType: OleDbParameterCollection\n  fullName: System.Data.OleDb.OleDbParameterCollection\n- uid: System.Data.OleDb.OleDbCommand.Prepare\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: Prepare()\n  nameWithType: OleDbCommand.Prepare()\n  fullName: System.Data.OleDb.OleDbCommand.Prepare()\n- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: ResetCommandTimeout()\n  nameWithType: OleDbCommand.ResetCommandTimeout()\n  fullName: System.Data.OleDb.OleDbCommand.ResetCommandTimeout()\n- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: System.Data.IDbCommand.ExecuteReader()\n  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader()\n  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader()\n- uid: System.Data.IDataReader\n  parent: System.Data\n  isExternal: false\n  name: IDataReader\n  nameWithType: IDataReader\n  fullName: System.Data.IDataReader\n- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)\n  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)\n  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)\n- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: System.ICloneable.Clone()\n  nameWithType: OleDbCommand.System.ICloneable.Clone()\n  fullName: System.Data.OleDb.OleDbCommand.System.ICloneable.Clone()\n- uid: System.Data.OleDb.OleDbCommand.Transaction\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: Transaction\n  nameWithType: OleDbCommand.Transaction\n  fullName: System.Data.OleDb.OleDbCommand.Transaction\n- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: UpdatedRowSource\n  nameWithType: OleDbCommand.UpdatedRowSource\n  fullName: System.Data.OleDb.OleDbCommand.UpdatedRowSource\n- uid: System.Data.UpdateRowSource\n  parent: System.Data\n  isExternal: false\n  name: UpdateRowSource\n  nameWithType: UpdateRowSource\n  fullName: System.Data.UpdateRowSource\n- uid: System.Data.OleDb.OleDbCommand.#ctor*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: OleDbCommand\n  nameWithType: OleDbCommand.OleDbCommand\n- uid: System.Data.OleDb.OleDbCommand.Cancel*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: Cancel\n  nameWithType: OleDbCommand.Cancel\n- uid: System.Data.OleDb.OleDbCommand.Clone*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: Clone\n  nameWithType: OleDbCommand.Clone\n- uid: System.Data.OleDb.OleDbCommand.CommandText*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: CommandText\n  nameWithType: OleDbCommand.CommandText\n- uid: System.Data.OleDb.OleDbCommand.CommandTimeout*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: CommandTimeout\n  nameWithType: OleDbCommand.CommandTimeout\n- uid: System.Data.OleDb.OleDbCommand.CommandType*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: CommandType\n  nameWithType: OleDbCommand.CommandType\n- uid: System.Data.OleDb.OleDbCommand.Connection*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: Connection\n  nameWithType: OleDbCommand.Connection\n- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: CreateDbParameter\n  nameWithType: OleDbCommand.CreateDbParameter\n- uid: System.Data.OleDb.OleDbCommand.CreateParameter*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: CreateParameter\n  nameWithType: OleDbCommand.CreateParameter\n- uid: System.Data.OleDb.OleDbCommand.DbConnection*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: DbConnection\n  nameWithType: OleDbCommand.DbConnection\n- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: DbParameterCollection\n  nameWithType: OleDbCommand.DbParameterCollection\n- uid: System.Data.OleDb.OleDbCommand.DbTransaction*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: DbTransaction\n  nameWithType: OleDbCommand.DbTransaction\n- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: DesignTimeVisible\n  nameWithType: OleDbCommand.DesignTimeVisible\n- uid: System.Data.OleDb.OleDbCommand.Dispose*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: Dispose\n  nameWithType: OleDbCommand.Dispose\n- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: ExecuteDbDataReader\n  nameWithType: OleDbCommand.ExecuteDbDataReader\n- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: ExecuteNonQuery\n  nameWithType: OleDbCommand.ExecuteNonQuery\n- uid: System.Data.OleDb.OleDbCommand.ExecuteReader*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: ExecuteReader\n  nameWithType: OleDbCommand.ExecuteReader\n- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: ExecuteScalar\n  nameWithType: OleDbCommand.ExecuteScalar\n- uid: System.Data.OleDb.OleDbCommand.Parameters*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: Parameters\n  nameWithType: OleDbCommand.Parameters\n- uid: System.Data.OleDb.OleDbCommand.Prepare*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: Prepare\n  nameWithType: OleDbCommand.Prepare\n- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: ResetCommandTimeout\n  nameWithType: OleDbCommand.ResetCommandTimeout\n- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: System.Data.IDbCommand.ExecuteReader\n  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader\n- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: System.ICloneable.Clone\n  nameWithType: OleDbCommand.System.ICloneable.Clone\n- uid: System.Data.OleDb.OleDbCommand.Transaction*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: Transaction\n  nameWithType: OleDbCommand.Transaction\n- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource*\n  parent: System.Data.OleDb.OleDbCommand\n  isExternal: false\n  name: UpdatedRowSource\n  nameWithType: OleDbCommand.UpdatedRowSource\n"}