{"nodes":[{"pos":[1251,1351],"content":"Implements a hash table with the key and the value strongly typed to be strings rather than objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements a hash table with the key and the value strongly typed to be strings rather than objects.","pos":[0,100]}]},{"pos":[1364,1972],"content":"A key cannot be `null`, but a value can.       The key is handled in a case-insensitive manner; it is translated to lowercase before it is used with the string dictionary.       In .NET Framework version 1.0, this class uses culture-sensitive string comparisons. However, in .NET Framework version 1.1 and later, this class uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> when comparing strings. For more information about how culture affects comparisons and sorting, see [Performing Culture-Insensitive String Operations](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"A key cannot be <ph id=\"ph1\">`null`</ph>, but a value can.","pos":[0,40],"source":"A key cannot be `null`, but a value can."},{"content":"The key is handled in a case-insensitive manner; it is translated to lowercase before it is used with the string dictionary.","pos":[47,171]},{"content":"In .NET Framework version 1.0, this class uses culture-sensitive string comparisons.","pos":[178,262]},{"content":"However, in .NET Framework version 1.1 and later, this class uses &lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt; when comparing strings.","pos":[263,437],"source":" However, in .NET Framework version 1.1 and later, this class uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> when comparing strings."},{"content":"For more information about how culture affects comparisons and sorting, see <bpt id=\"p1\">[</bpt>Performing Culture-Insensitive String Operations<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[438,604],"source":" For more information about how culture affects comparisons and sorting, see [Performing Culture-Insensitive String Operations](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[3459,3568],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> class."},{"pos":[3580,3618],"content":"This constructor is an O(1) operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"This constructor is an O(1) operation.","pos":[0,38]}]},{"pos":[4784,4909],"content":"Adds an entry with the specified key and value into the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds an entry with the specified key and value into the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>."},{"pos":[4922,5087],"content":"The key is handled in a case-insensitive manner; it is translated to lowercase before it is added to the string dictionary.       This method is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"The key is handled in a case-insensitive manner; it is translated to lowercase before it is added to the string dictionary.       This method is an O(1) operation.","pos":[0,163],"nodes":[{"content":"The key is handled in a case-insensitive manner; it is translated to lowercase before it is added to the string dictionary.","pos":[0,123]},{"content":"This method is an O(1) operation.","pos":[130,163]}]}]},{"pos":[5787,5815],"content":"The key of the entry to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the entry to add.","pos":[0,28]}]},{"pos":[5877,5986],"content":"The value of the entry to add. The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the entry to add.","pos":[0,30]},{"content":"The value can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[31,109],"source":" The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[6168,6249],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6344,6462],"content":"An entry with the same key already exists in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An entry with the same key already exists in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>."},{"pos":[6565,6651],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read-only.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> is read-only."},{"pos":[7046,7144],"content":"Removes all entries from the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Removes all entries from the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>."},{"pos":[7156,7269],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is &lt;xref:System.Collections.Specialized.StringDictionary.Count%2A&gt;.","needQuote":true,"needEscape":true,"source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringDictionary.Count%2A>."},{"pos":[8082,8168],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read-only.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> is read-only."},{"pos":[8641,8752],"content":"Determines if the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contains a specific key.","needQuote":true,"needEscape":true,"source":"Determines if the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> contains a specific key."},{"pos":[8765,9349],"content":"The key is handled in a case-insensitive manner; it is translated to lowercase before it is used.       This method is an O(1) operation.       Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"The key is handled in a case-insensitive manner; it is translated to lowercase before it is used.","pos":[0,97]},{"content":"This method is an O(1) operation.","pos":[104,137]},{"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id=\"ph1\">`item`</ph> to determine whether <ph id=\"ph2\">`item`</ph> exists.","pos":[144,352],"source":"       Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists."},{"content":"In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id=\"ph1\">`item`</ph> parameter on the objects in the collection.","pos":[353,580],"source":" In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection."}]},{"pos":[10027,10121],"content":"The key to locate in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The key to locate in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>."},{"pos":[10180,10433],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> contains an entry with the specified key; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> contains an entry with the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10623,10695],"content":"The key is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The key is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11178,11291],"content":"Determines if the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contains a specific value.","needQuote":true,"needEscape":true,"source":"Determines if the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> contains a specific value."},{"pos":[11304,12200],"content":"The values of the elements of the StringDictionary are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=fullName> method.       This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.Specialized.StringDictionary.Count%2A>. That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringDictionary.Count%2A>.       Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"The values of the elements of the StringDictionary are compared to the specified value using the &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; method.","pos":[0,160],"source":"The values of the elements of the StringDictionary are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=fullName> method."},{"content":"This method performs a linear search; therefore, the average execution time is proportional to &lt;xref:System.Collections.Specialized.StringDictionary.Count%2A&gt;.","pos":[167,326],"source":"       This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.Specialized.StringDictionary.Count%2A>."},{"content":"That is, this method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is &lt;xref:System.Collections.Specialized.StringDictionary.Count%2A&gt;.","pos":[327,449],"source":" That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringDictionary.Count%2A>."},{"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id=\"ph1\">`item`</ph> to determine whether <ph id=\"ph2\">`item`</ph> exists.","pos":[456,664],"source":"       Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists."},{"content":"In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id=\"ph1\">`item`</ph> parameter on the objects in the collection.","pos":[665,892],"source":" In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection."}]},{"pos":[12884,13059],"content":"The value to locate in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>. The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to locate in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,96],"source":"The value to locate in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>."},{"content":"The value can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[97,175],"source":" The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[13118,13375],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> contains an element with the specified value; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> contains an element with the specified value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13954,14063],"content":"Copies the string dictionary values to a one-dimensional <xref:System.Array> instance at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the string dictionary values to a one-dimensional &lt;xref:System.Array&gt; instance at the specified index.","pos":[0,109],"source":"Copies the string dictionary values to a one-dimensional <xref:System.Array> instance at the specified index."}]},{"pos":[14076,14571],"content":"CopyTo copies objects that can be typecast to <xref:System.Collections.DictionaryEntry?displayProperty=fullName>. <xref:System.Collections.DictionaryEntry> contains both the key and the value.       The elements copied to the <xref:System.Array> are sorted in the same order that the enumerator iterates through the <xref:System.Collections.Specialized.StringDictionary>.       This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringDictionary.Count%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"CopyTo copies objects that can be typecast to &lt;xref:System.Collections.DictionaryEntry?displayProperty=fullName&gt;.","pos":[0,113],"source":"CopyTo copies objects that can be typecast to <xref:System.Collections.DictionaryEntry?displayProperty=fullName>."},{"content":"&lt;xref:System.Collections.DictionaryEntry&gt; contains both the key and the value.","pos":[114,192],"source":" <xref:System.Collections.DictionaryEntry> contains both the key and the value."},{"content":"The elements copied to the &lt;xref:System.Array&gt; are sorted in the same order that the enumerator iterates through the &lt;xref:System.Collections.Specialized.StringDictionary&gt;.","pos":[199,371],"source":"       The elements copied to the <xref:System.Array> are sorted in the same order that the enumerator iterates through the <xref:System.Collections.Specialized.StringDictionary>."},{"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is &lt;xref:System.Collections.Specialized.StringDictionary.Count%2A&gt;.","pos":[378,491],"source":"       This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringDictionary.Count%2A>."}]},{"pos":[15216,15379],"content":"The one-dimensional &lt;xref:System.Array&gt; that is the destination of the values copied from the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The one-dimensional <xref:System.Array> that is the destination of the values copied from the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>."},{"pos":[15440,15484],"content":"The index in the array where copying begins.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index in the array where copying begins.","pos":[0,44]}]},{"pos":[15662,15917],"content":"<code>array</code> is multidimensional.       -or-       The number of elements in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> is greater than the available space from <code>index</code> to the end of <code>array</code>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.","pos":[0,39],"source":"<code>array</code> is multidimensional."},{"content":"-or-       The number of elements in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is greater than the available space from <ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> to the end of <ph id=\"ph2\">&lt;code&gt;array&lt;/code&gt;</ph>.","pos":[46,249],"source":"       -or-       The number of elements in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> is greater than the available space from <code>index</code> to the end of <code>array</code>."}]},{"pos":[16021,16104],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>array</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16219,16289],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than the lower bound of <ph id=\"ph2\">&lt;code&gt;array&lt;/code&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>index</code> is less than the lower bound of <code>array</code>."},{"pos":[16680,16791],"content":"Gets the number of key/value pairs in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the number of key/value pairs in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>."},{"pos":[17458,17634],"content":"The number of key/value pairs in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>.       Retrieving the value of this property is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"The number of key/value pairs in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,106],"source":"The number of key/value pairs in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>."},{"content":"Retrieving the value of this property is an O(1) operation.","pos":[113,172]}]},{"pos":[18154,18220],"content":"Returns an enumerator that iterates through the string dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that iterates through the string dictionary.","pos":[0,66]}]},{"pos":[18233,20816],"content":"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.       Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.       Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.       <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.       If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.       An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.       The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.       This method is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`foreach`</ph> statement of the C# language (<ph id=\"ph2\">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.","pos":[0,112],"source":"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators."},{"content":"Therefore, using <ph id=\"ph1\">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.","pos":[114,205],"source":"  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator."},{"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","pos":[212,332]},{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[339,422]},{"content":"&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.","pos":[423,519],"source":" <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position."},{"content":"At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.","pos":[521,601],"source":"  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined."},{"content":"Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.","pos":[602,819],"source":" Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>."},{"content":"&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.","pos":[826,1022],"source":"       <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called."},{"content":"&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.","pos":[1023,1147],"source":" <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element."},{"content":"If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id=\"ph1\">`false`</ph>.","pos":[1154,1381],"source":"       If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`."},{"content":"When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id=\"ph1\">`false`</ph>.","pos":[1382,1513],"source":" When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`."},{"content":"If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id=\"ph1\">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.","pos":[1514,1664],"source":" If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined."},{"content":"To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.","pos":[1665,1889],"source":" To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>."},{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[1896,1968]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[1969,2131]},{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[2138,2292]},{"content":"To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.","pos":[2294,2399]},{"content":"To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[2401,2529]},{"content":"This method is an O(1) operation.","pos":[2536,2569]}]},{"pos":[21539,21624],"content":"An <xref:System.Collections.IEnumerator> that iterates through the string dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerator&gt; that iterates through the string dictionary.","pos":[0,85],"source":"An <xref:System.Collections.IEnumerator> that iterates through the string dictionary."}]},{"pos":[22152,22297],"content":"Gets a value indicating whether access to the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is synchronized (thread safe).","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether access to the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> is synchronized (thread safe)."},{"pos":[22310,23003],"content":"A <xref:System.Collections.Specialized.StringDictionary> instance is not synchronized. Derived classes can provide a synchronized version of the <xref:System.Collections.Specialized.StringDictionary> using the <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> property.       Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","needQuote":false,"needEscape":true,"nodes":[{"content":"A <xref:System.Collections.Specialized.StringDictionary> instance is not synchronized. Derived classes can provide a synchronized version of the <xref:System.Collections.Specialized.StringDictionary> using the <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> property.       Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[0,691],"nodes":[{"content":"A &lt;xref:System.Collections.Specialized.StringDictionary&gt; instance is not synchronized.","pos":[0,86],"source":"A <xref:System.Collections.Specialized.StringDictionary> instance is not synchronized."},{"content":"Derived classes can provide a synchronized version of the &lt;xref:System.Collections.Specialized.StringDictionary&gt; using the &lt;xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A&gt; property.","pos":[87,286],"source":" Derived classes can provide a synchronized version of the <xref:System.Collections.Specialized.StringDictionary> using the <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> property."},{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[293,371]},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[372,509]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[510,691]}]}]},{"pos":[23759,24011],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to the <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is synchronized (thread safe); otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24544,24601],"content":"Gets or sets the value associated with the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the value associated with the specified key.","pos":[0,57]}]},{"pos":[24614,25377],"content":"The key is handled in a case-insensitive manner; it is translated to lowercase before it is used.       A key cannot be `null`, but a value can. To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.Specialized.StringDictionary.ContainsKey%2A> method to determine if the key exists in the list.       The C# language uses the  keyword to define the indexers instead of implementing the Item property. Visual Basic implements Item as a default property, which provides the same indexing functionality.       Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"The key is handled in a case-insensitive manner; it is translated to lowercase before it is used.","pos":[0,97]},{"content":"A key cannot be <ph id=\"ph1\">`null`</ph>, but a value can.","pos":[104,144],"source":"       A key cannot be `null`, but a value can."},{"content":"To distinguish between <ph id=\"ph1\">`null`</ph> that is returned because the specified key is not found and <ph id=\"ph2\">`null`</ph> that is returned because the value of the specified key is <ph id=\"ph3\">`null`</ph>, use the &lt;xref:System.Collections.Specialized.StringDictionary.ContainsKey%2A&gt; method to determine if the key exists in the list.","pos":[145,437],"source":" To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.Specialized.StringDictionary.ContainsKey%2A> method to determine if the key exists in the list."},{"content":"The C# language uses the  keyword to define the indexers instead of implementing the Item property.","pos":[444,543]},{"content":"Visual Basic implements Item as a default property, which provides the same indexing functionality.","pos":[544,643]},{"content":"Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.","pos":[650,757]}]},{"pos":[26071,26105],"content":"The key whose value to get or set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key whose value to get or set.","pos":[0,34]}]},{"pos":[26163,26368],"content":"The value associated with the specified key. If the specified key is not found, Get returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, and Set creates a new entry with the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value associated with the specified key.","pos":[0,44]},{"content":"If the specified key is not found, Get returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, and Set creates a new entry with the specified key.","pos":[45,205],"source":" If the specified key is not found, Get returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, and Set creates a new entry with the specified key."}]},{"pos":[26551,26632],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[27018,27120],"content":"Gets a collection of keys in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a collection of keys in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>."},{"pos":[27133,27847],"content":"The order of the keys in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Specialized.StringDictionary.Values%2A> method.       The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.Specialized.StringDictionary>. Therefore, changes to the <xref:System.Collections.Specialized.StringDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.       Retrieving the value of this property is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"The order of the keys in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Specialized.StringDictionary.Values%2A> method.       The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.Specialized.StringDictionary>. Therefore, changes to the <xref:System.Collections.Specialized.StringDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.       Retrieving the value of this property is an O(1) operation.","pos":[0,710],"nodes":[{"content":"The order of the keys in the &lt;xref:System.Collections.ICollection&gt; is unspecified, but it is the same order as the associated values in the &lt;xref:System.Collections.ICollection&gt; returned by the &lt;xref:System.Collections.Specialized.StringDictionary.Values%2A&gt; method.","pos":[0,266],"source":"The order of the keys in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Specialized.StringDictionary.Values%2A> method."},{"content":"The returned &lt;xref:System.Collections.ICollection&gt; is not a static copy; instead, the &lt;xref:System.Collections.ICollection&gt; refers back to the keys in the original &lt;xref:System.Collections.Specialized.StringDictionary&gt;.","pos":[273,492],"source":"       The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.Specialized.StringDictionary>."},{"content":"Therefore, changes to the &lt;xref:System.Collections.Specialized.StringDictionary&gt; continue to be reflected in the &lt;xref:System.Collections.ICollection&gt;.","pos":[493,644],"source":" Therefore, changes to the <xref:System.Collections.Specialized.StringDictionary> continue to be reflected in the <xref:System.Collections.ICollection>."},{"content":"Retrieving the value of this property is an O(1) operation.","pos":[651,710]}]}]},{"pos":[28544,28684],"content":"An &lt;xref:System.Collections.ICollection&gt; that provides the keys in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.ICollection> that provides the keys in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>."},{"pos":[29215,29283],"content":"Removes the entry with the specified key from the string dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the entry with the specified key from the string dictionary.","pos":[0,68]}]},{"pos":[29296,29714],"content":"If the <xref:System.Collections.Specialized.StringDictionary> does not contain an element with the specified key, the <xref:System.Collections.Specialized.StringDictionary> remains unchanged. No exception is thrown.       The key is handled in a case-insensitive manner; it is translated to lowercase before it is used to find the entry to remove from the string dictionary.       This method is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the <xref:System.Collections.Specialized.StringDictionary> does not contain an element with the specified key, the <xref:System.Collections.Specialized.StringDictionary> remains unchanged. No exception is thrown.       The key is handled in a case-insensitive manner; it is translated to lowercase before it is used to find the entry to remove from the string dictionary.       This method is an O(1) operation.","pos":[0,414],"nodes":[{"content":"If the &lt;xref:System.Collections.Specialized.StringDictionary&gt; does not contain an element with the specified key, the &lt;xref:System.Collections.Specialized.StringDictionary&gt; remains unchanged.","pos":[0,191],"source":"If the <xref:System.Collections.Specialized.StringDictionary> does not contain an element with the specified key, the <xref:System.Collections.Specialized.StringDictionary> remains unchanged."},{"content":"No exception is thrown.","pos":[192,215]},{"content":"The key is handled in a case-insensitive manner; it is translated to lowercase before it is used to find the entry to remove from the string dictionary.","pos":[222,374]},{"content":"This method is an O(1) operation.","pos":[381,414]}]}]},{"pos":[30412,30443],"content":"The key of the entry to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the entry to remove.","pos":[0,31]}]},{"pos":[30628,30700],"content":"The key is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The key is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[30803,30889],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read-only.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> is read-only."},{"pos":[31295,31425],"content":"Gets an object that can be used to synchronize access to the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>."},{"pos":[31438,32453],"content":"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.StringDictionary> using the SyncRoot property. The synchronizing code must perform operations on the SyncRoot of the <xref:System.Collections.Specialized.StringDictionary>, not directly on the <xref:System.Collections.Specialized.StringDictionary>. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.StringDictionary> object.       Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","needQuote":false,"needEscape":true,"nodes":[{"content":"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.StringDictionary> using the SyncRoot property. The synchronizing code must perform operations on the SyncRoot of the <xref:System.Collections.Specialized.StringDictionary>, not directly on the <xref:System.Collections.Specialized.StringDictionary>. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.StringDictionary> object.       Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[0,1013],"nodes":[{"content":"Derived classes can provide their own synchronized version of the &lt;xref:System.Collections.Specialized.StringDictionary&gt; using the SyncRoot property.","pos":[0,149],"source":"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.StringDictionary> using the SyncRoot property."},{"content":"The synchronizing code must perform operations on the SyncRoot of the &lt;xref:System.Collections.Specialized.StringDictionary&gt;, not directly on the &lt;xref:System.Collections.Specialized.StringDictionary&gt;.","pos":[150,351],"source":" The synchronizing code must perform operations on the SyncRoot of the <xref:System.Collections.Specialized.StringDictionary>, not directly on the <xref:System.Collections.Specialized.StringDictionary>."},{"content":"This ensures proper operation of collections that are derived from other objects.","pos":[352,433]},{"content":"Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.Specialized.StringDictionary&gt; object.","pos":[434,608],"source":" Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.StringDictionary> object."},{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[615,693]},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[694,831]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[832,1013]}]}]},{"pos":[33146,33285],"content":"An &lt;xref:System.Object&gt; that can be used to synchronize access to the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object> that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>."},{"pos":[33768,33872],"content":"Gets a collection of values in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a collection of values in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>."},{"pos":[33885,34599],"content":"The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Specialized.StringDictionary.Keys%2A> method.       The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.Specialized.StringDictionary>. Therefore, changes to the <xref:System.Collections.Specialized.StringDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.       Retrieving the value of this property is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Specialized.StringDictionary.Keys%2A> method.       The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.Specialized.StringDictionary>. Therefore, changes to the <xref:System.Collections.Specialized.StringDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.       Retrieving the value of this property is an O(1) operation.","pos":[0,710],"nodes":[{"content":"The order of the values in the &lt;xref:System.Collections.ICollection&gt; is unspecified, but it is the same order as the associated keys in the &lt;xref:System.Collections.ICollection&gt; returned by the &lt;xref:System.Collections.Specialized.StringDictionary.Keys%2A&gt; method.","pos":[0,264],"source":"The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Specialized.StringDictionary.Keys%2A> method."},{"content":"The returned &lt;xref:System.Collections.ICollection&gt; is not a static copy; instead, the &lt;xref:System.Collections.ICollection&gt; refers back to the values in the original &lt;xref:System.Collections.Specialized.StringDictionary&gt;.","pos":[271,492],"source":"       The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.Specialized.StringDictionary>."},{"content":"Therefore, changes to the &lt;xref:System.Collections.Specialized.StringDictionary&gt; continue to be reflected in the &lt;xref:System.Collections.ICollection&gt;.","pos":[493,644],"source":" Therefore, changes to the <xref:System.Collections.Specialized.StringDictionary> continue to be reflected in the <xref:System.Collections.ICollection>."},{"content":"Retrieving the value of this property is an O(1) operation.","pos":[651,710]}]}]},{"pos":[35301,35443],"content":"An &lt;xref:System.Collections.ICollection&gt; that provides the values in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.ICollection> that provides the values in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Specialized.StringDictionary\n  id: StringDictionary\n  children:\n  - System.Collections.Specialized.StringDictionary.#ctor\n  - System.Collections.Specialized.StringDictionary.Add(System.String,System.String)\n  - System.Collections.Specialized.StringDictionary.Clear\n  - System.Collections.Specialized.StringDictionary.ContainsKey(System.String)\n  - System.Collections.Specialized.StringDictionary.ContainsValue(System.String)\n  - System.Collections.Specialized.StringDictionary.CopyTo(System.Array,System.Int32)\n  - System.Collections.Specialized.StringDictionary.Count\n  - System.Collections.Specialized.StringDictionary.GetEnumerator\n  - System.Collections.Specialized.StringDictionary.IsSynchronized\n  - System.Collections.Specialized.StringDictionary.Item(System.String)\n  - System.Collections.Specialized.StringDictionary.Keys\n  - System.Collections.Specialized.StringDictionary.Remove(System.String)\n  - System.Collections.Specialized.StringDictionary.SyncRoot\n  - System.Collections.Specialized.StringDictionary.Values\n  langs:\n  - csharp\n  name: StringDictionary\n  nameWithType: StringDictionary\n  fullName: System.Collections.Specialized.StringDictionary\n  type: Class\n  summary: Implements a hash table with the key and the value strongly typed to be strings rather than objects.\n  remarks: \"A key cannot be `null`, but a value can.  \\n  \\n The key is handled in a case-insensitive manner; it is translated to lowercase before it is used with the string dictionary.  \\n  \\n In .NET Framework version 1.0, this class uses culture-sensitive string comparisons. However, in .NET Framework version 1.1 and later, this class uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> when comparing strings. For more information about how culture affects comparisons and sorting, see [Performing Culture-Insensitive String Operations](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates several of the properties and methods of StringDictionary.  \\n  \\n [!code-cpp[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/cpp/t-system.collections.spe_4_1.cpp)]\\n [!code-cs[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/csharp/t-system.collections.spe_4_1.cs)]\\n [!code-vb[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/visualbasic/t-system.collections.spe_4_1.vb)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Design.Serialization.DesignerSerializer(\"System.Diagnostics.Design.StringDictionaryCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\", \"System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      public class StringDictionary : System.Collections.IEnumerable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IEnumerable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.StringDictionary.#ctor\n  id: '#ctor'\n  parent: System.Collections.Specialized.StringDictionary\n  langs:\n  - csharp\n  name: StringDictionary()\n  nameWithType: StringDictionary.StringDictionary()\n  fullName: System.Collections.Specialized.StringDictionary.StringDictionary()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> class.\n  remarks: This constructor is an O(1) operation.\n  example:\n  - \"The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringDictionary>.  \\n  \\n [!code-cpp[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/cpp/m-system.collections.spe_11_1.cpp)]\\n [!code-cs[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/csharp/m-system.collections.spe_11_1.cs)]\\n [!code-vb[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/visualbasic/m-system.collections.spe_11_1.vb)]\"\n  syntax:\n    content: public StringDictionary ();\n    parameters: []\n  overload: System.Collections.Specialized.StringDictionary.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.StringDictionary.Add(System.String,System.String)\n  id: Add(System.String,System.String)\n  parent: System.Collections.Specialized.StringDictionary\n  langs:\n  - csharp\n  name: Add(String,String)\n  nameWithType: StringDictionary.Add(String,String)\n  fullName: System.Collections.Specialized.StringDictionary.Add(String,String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Adds an entry with the specified key and value into the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>.\n  remarks: \"The key is handled in a case-insensitive manner; it is translated to lowercase before it is added to the string dictionary.  \\n  \\n This method is an O(1) operation.\"\n  example:\n  - \"The following code example demonstrates how to add and remove elements from a <xref:System.Collections.Specialized.StringDictionary>.  \\n  \\n [!code-cpp[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/cpp/24bf4a19-6a1d-4d4c-ba1b-_1.cpp)]\\n [!code-cs[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/csharp/24bf4a19-6a1d-4d4c-ba1b-_1.cs)]\\n [!code-vb[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/visualbasic/24bf4a19-6a1d-4d4c-ba1b-_1.vb)]\"\n  syntax:\n    content: public virtual void Add (string key, string value);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key of the entry to add.\n    - id: value\n      type: System.String\n      description: The value of the entry to add. The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.StringDictionary.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An entry with the same key already exists in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> is read-only.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.StringDictionary.Clear\n  id: Clear\n  parent: System.Collections.Specialized.StringDictionary\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: StringDictionary.Clear()\n  fullName: System.Collections.Specialized.StringDictionary.Clear()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Removes all entries from the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>.\n  remarks: This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringDictionary.Count%2A>.\n  example:\n  - \"The following code example demonstrates how to add and remove elements from a <xref:System.Collections.Specialized.StringDictionary>.  \\n  \\n [!code-cpp[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_10_1.cpp)]\\n [!code-cs[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_10_1.cs)]\\n [!code-vb[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_10_1.vb)]\"\n  syntax:\n    content: public virtual void Clear ();\n    parameters: []\n  overload: System.Collections.Specialized.StringDictionary.Clear*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> is read-only.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.StringDictionary.ContainsKey(System.String)\n  id: ContainsKey(System.String)\n  parent: System.Collections.Specialized.StringDictionary\n  langs:\n  - csharp\n  name: ContainsKey(String)\n  nameWithType: StringDictionary.ContainsKey(String)\n  fullName: System.Collections.Specialized.StringDictionary.ContainsKey(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Determines if the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> contains a specific key.\n  remarks: \"The key is handled in a case-insensitive manner; it is translated to lowercase before it is used.  \\n  \\n This method is an O(1) operation.  \\n  \\n Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.\"\n  example:\n  - \"The following code example searches for an element in a <xref:System.Collections.Specialized.StringDictionary>.  \\n  \\n [!code-cpp[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/cpp/m-system.collections.spe_27_1.cpp)]\\n [!code-cs[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/csharp/m-system.collections.spe_27_1.cs)]\\n [!code-vb[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_27_1.vb)]\"\n  syntax:\n    content: public virtual bool ContainsKey (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key to locate in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> contains an entry with the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.StringDictionary.ContainsKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The key is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.StringDictionary.ContainsValue(System.String)\n  id: ContainsValue(System.String)\n  parent: System.Collections.Specialized.StringDictionary\n  langs:\n  - csharp\n  name: ContainsValue(String)\n  nameWithType: StringDictionary.ContainsValue(String)\n  fullName: System.Collections.Specialized.StringDictionary.ContainsValue(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Determines if the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> contains a specific value.\n  remarks: \"The values of the elements of the StringDictionary are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=fullName> method.  \\n  \\n This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.Specialized.StringDictionary.Count%2A>. That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringDictionary.Count%2A>.  \\n  \\n Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.\"\n  example:\n  - \"The following code example searches for an element in a <xref:System.Collections.Specialized.StringDictionary>.  \\n  \\n [!code-cpp[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/cpp/m-system.collections.spe_40_1.cpp)]\\n [!code-cs[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/csharp/m-system.collections.spe_40_1.cs)]\\n [!code-vb[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_40_1.vb)]\"\n  syntax:\n    content: public virtual bool ContainsValue (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The value to locate in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>. The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> contains an element with the specified value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.StringDictionary.ContainsValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.StringDictionary.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Specialized.StringDictionary\n  langs:\n  - csharp\n  name: CopyTo(Array,Int32)\n  nameWithType: StringDictionary.CopyTo(Array,Int32)\n  fullName: System.Collections.Specialized.StringDictionary.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Copies the string dictionary values to a one-dimensional <xref:System.Array> instance at the specified index.\n  remarks: \"CopyTo copies objects that can be typecast to <xref:System.Collections.DictionaryEntry?displayProperty=fullName>. <xref:System.Collections.DictionaryEntry> contains both the key and the value.  \\n  \\n The elements copied to the <xref:System.Array> are sorted in the same order that the enumerator iterates through the <xref:System.Collections.Specialized.StringDictionary>.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringDictionary.Count%2A>.\"\n  example:\n  - \"The following code example shows how a StringDictionary can be copied to an array.  \\n  \\n [!code-cpp[System.Collections.Specialized.StringDictionary.CopyTo#1](~/add/codesnippet/cpp/9e0b7952-2449-4de8-9ce1-_1.cpp)]\\n [!code-cs[System.Collections.Specialized.StringDictionary.CopyTo#1](~/add/codesnippet/csharp/9e0b7952-2449-4de8-9ce1-_1.cs)]\\n [!code-vb[System.Collections.Specialized.StringDictionary.CopyTo#1](~/add/codesnippet/visualbasic/9e0b7952-2449-4de8-9ce1-_1.vb)]\"\n  syntax:\n    content: public virtual void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional <xref:System.Array> that is the destination of the values copied from the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>.\n    - id: index\n      type: System.Int32\n      description: The index in the array where copying begins.\n  overload: System.Collections.Specialized.StringDictionary.CopyTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>array</code> is multidimensional.  \\n  \\n -or-  \\n  \\n The number of elements in the <xref href=\\\"System.Collections.Specialized.StringDictionary\\\"></xref> is greater than the available space from <code>index</code> to the end of <code>array</code>.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than the lower bound of <code>array</code>.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.StringDictionary.Count\n  id: Count\n  parent: System.Collections.Specialized.StringDictionary\n  langs:\n  - csharp\n  name: Count\n  nameWithType: StringDictionary.Count\n  fullName: System.Collections.Specialized.StringDictionary.Count\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets the number of key/value pairs in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.  \\n  \\n [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/cpp/p-system.collections.spe_0_1.cpp)]\\n [!code-cs[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/csharp/p-system.collections.spe_0_1.cs)]\\n [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/visualbasic/p-system.collections.spe_0_1.vb)]\"\n  syntax:\n    content: public virtual int Count { get; }\n    return:\n      type: System.Int32\n      description: \"The number of key/value pairs in the <xref href=\\\"System.Collections.Specialized.StringDictionary\\\"></xref>.  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  overload: System.Collections.Specialized.StringDictionary.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.StringDictionary.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.Specialized.StringDictionary\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: StringDictionary.GetEnumerator()\n  fullName: System.Collections.Specialized.StringDictionary.GetEnumerator()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Returns an enumerator that iterates through the string dictionary.\n  remarks: \"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \\n  \\n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \\n  \\n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.  \\n  \\n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  \\n  \\n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \\n  \\n This method is an O(1) operation.\"\n  example:\n  - \"The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.  \\n  \\n [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/cpp/m-system.collections.spe_35_1.cpp)]\\n [!code-cs[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/csharp/m-system.collections.spe_35_1.cs)]\\n [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/visualbasic/m-system.collections.spe_35_1.vb)]\"\n  syntax:\n    content: public virtual System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> that iterates through the string dictionary.\n  overload: System.Collections.Specialized.StringDictionary.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.StringDictionary.IsSynchronized\n  id: IsSynchronized\n  parent: System.Collections.Specialized.StringDictionary\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: StringDictionary.IsSynchronized\n  fullName: System.Collections.Specialized.StringDictionary.IsSynchronized\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets a value indicating whether access to the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> is synchronized (thread safe).\n  remarks: \"A <xref:System.Collections.Specialized.StringDictionary> instance is not synchronized. Derived classes can provide a synchronized version of the <xref:System.Collections.Specialized.StringDictionary> using the <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> property.  \\n  \\n Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.\"\n  example:\n  - \"The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> during the entire enumeration.  \\n  \\n [!code-cpp[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/cpp/p-system.collections.spe_13_1.cpp)]\\n [!code-cs[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/csharp/p-system.collections.spe_13_1.cs)]\\n [!code-vb[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/visualbasic/p-system.collections.spe_13_1.vb)]  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: public virtual bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.StringDictionary.IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.StringDictionary.Item(System.String)\n  id: Item(System.String)\n  parent: System.Collections.Specialized.StringDictionary\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: StringDictionary.Item(String)\n  fullName: System.Collections.Specialized.StringDictionary.Item(String)\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets or sets the value associated with the specified key.\n  remarks: \"The key is handled in a case-insensitive manner; it is translated to lowercase before it is used.  \\n  \\n A key cannot be `null`, but a value can. To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.Specialized.StringDictionary.ContainsKey%2A> method to determine if the key exists in the list.  \\n  \\n The C# language uses the  keyword to define the indexers instead of implementing the Item property. Visual Basic implements Item as a default property, which provides the same indexing functionality.  \\n  \\n Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.\"\n  example:\n  - \"The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.  \\n  \\n [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/cpp/p-system.collections.spe_17_1.cpp)]\\n [!code-cs[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/csharp/p-system.collections.spe_17_1.cs)]\\n [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/visualbasic/p-system.collections.spe_17_1.vb)]\"\n  syntax:\n    content: public virtual string this[string key] { get; set; }\n    parameters:\n    - id: key\n      type: System.String\n      description: The key whose value to get or set.\n    return:\n      type: System.String\n      description: The value associated with the specified key. If the specified key is not found, Get returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, and Set creates a new entry with the specified key.\n  overload: System.Collections.Specialized.StringDictionary.Item*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.StringDictionary.Keys\n  id: Keys\n  parent: System.Collections.Specialized.StringDictionary\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: StringDictionary.Keys\n  fullName: System.Collections.Specialized.StringDictionary.Keys\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets a collection of keys in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>.\n  remarks: \"The order of the keys in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Specialized.StringDictionary.Values%2A> method.  \\n  \\n The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.Specialized.StringDictionary>. Therefore, changes to the <xref:System.Collections.Specialized.StringDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  example:\n  - \"The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.  \\n  \\n [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/cpp/p-system.collections.spe_4_1.cpp)]\\n [!code-cs[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/csharp/p-system.collections.spe_4_1.cs)]\\n [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/visualbasic/p-system.collections.spe_4_1.vb)]\"\n  syntax:\n    content: public virtual System.Collections.ICollection Keys { get; }\n    return:\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> that provides the keys in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>.\n  overload: System.Collections.Specialized.StringDictionary.Keys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.StringDictionary.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Collections.Specialized.StringDictionary\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: StringDictionary.Remove(String)\n  fullName: System.Collections.Specialized.StringDictionary.Remove(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Removes the entry with the specified key from the string dictionary.\n  remarks: \"If the <xref:System.Collections.Specialized.StringDictionary> does not contain an element with the specified key, the <xref:System.Collections.Specialized.StringDictionary> remains unchanged. No exception is thrown.  \\n  \\n The key is handled in a case-insensitive manner; it is translated to lowercase before it is used to find the entry to remove from the string dictionary.  \\n  \\n This method is an O(1) operation.\"\n  example:\n  - \"The following code example demonstrates how to add and remove elements from a <xref:System.Collections.Specialized.StringDictionary>.  \\n  \\n [!code-cpp[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_25_1.cpp)]\\n [!code-cs[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_25_1.cs)]\\n [!code-vb[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_25_1.vb)]\"\n  syntax:\n    content: public virtual void Remove (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key of the entry to remove.\n  overload: System.Collections.Specialized.StringDictionary.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The key is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> is read-only.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.StringDictionary.SyncRoot\n  id: SyncRoot\n  parent: System.Collections.Specialized.StringDictionary\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: StringDictionary.SyncRoot\n  fullName: System.Collections.Specialized.StringDictionary.SyncRoot\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>.\n  remarks: \"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.StringDictionary> using the SyncRoot property. The synchronizing code must perform operations on the SyncRoot of the <xref:System.Collections.Specialized.StringDictionary>, not directly on the <xref:System.Collections.Specialized.StringDictionary>. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.StringDictionary> object.  \\n  \\n Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.\"\n  example:\n  - \"The following code example shows how to lock the collection using the SyncRoot during the entire enumeration.  \\n  \\n [!code-cpp[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/cpp/p-system.collections.spe_16_1.cpp)]\\n [!code-cs[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/csharp/p-system.collections.spe_16_1.cs)]\\n [!code-vb[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/visualbasic/p-system.collections.spe_16_1.vb)]  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: public virtual object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>.\n  overload: System.Collections.Specialized.StringDictionary.SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.StringDictionary.Values\n  id: Values\n  parent: System.Collections.Specialized.StringDictionary\n  langs:\n  - csharp\n  name: Values\n  nameWithType: StringDictionary.Values\n  fullName: System.Collections.Specialized.StringDictionary.Values\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets a collection of values in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>.\n  remarks: \"The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Specialized.StringDictionary.Keys%2A> method.  \\n  \\n The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.Specialized.StringDictionary>. Therefore, changes to the <xref:System.Collections.Specialized.StringDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  example:\n  - \"The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.  \\n  \\n [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#2](~/add/codesnippet/visualbasic/p-system.collections.spe_18_1.vb)]\\n [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#2](~/add/codesnippet/cpp/p-system.collections.spe_18_1.cpp)]\\n [!code-cs[System.Collection.Specialized.StringDictionary_Enumeration#2](~/add/codesnippet/csharp/p-system.collections.spe_18_1.cs)]\"\n  syntax:\n    content: public virtual System.Collections.ICollection Values { get; }\n    return:\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> that provides the values in the <xref href=\"System.Collections.Specialized.StringDictionary\"></xref>.\n  overload: System.Collections.Specialized.StringDictionary.Values*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Collections.Specialized.StringDictionary.#ctor\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: StringDictionary()\n  nameWithType: StringDictionary.StringDictionary()\n  fullName: System.Collections.Specialized.StringDictionary.StringDictionary()\n- uid: System.Collections.Specialized.StringDictionary.Add(System.String,System.String)\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: Add(String,String)\n  nameWithType: StringDictionary.Add(String,String)\n  fullName: System.Collections.Specialized.StringDictionary.Add(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Specialized.StringDictionary.Clear\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: Clear()\n  nameWithType: StringDictionary.Clear()\n  fullName: System.Collections.Specialized.StringDictionary.Clear()\n- uid: System.Collections.Specialized.StringDictionary.ContainsKey(System.String)\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: ContainsKey(String)\n  nameWithType: StringDictionary.ContainsKey(String)\n  fullName: System.Collections.Specialized.StringDictionary.ContainsKey(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Specialized.StringDictionary.ContainsValue(System.String)\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: ContainsValue(String)\n  nameWithType: StringDictionary.ContainsValue(String)\n  fullName: System.Collections.Specialized.StringDictionary.ContainsValue(String)\n- uid: System.Collections.Specialized.StringDictionary.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: CopyTo(Array,Int32)\n  nameWithType: StringDictionary.CopyTo(Array,Int32)\n  fullName: System.Collections.Specialized.StringDictionary.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Specialized.StringDictionary.Count\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: Count\n  nameWithType: StringDictionary.Count\n  fullName: System.Collections.Specialized.StringDictionary.Count\n- uid: System.Collections.Specialized.StringDictionary.GetEnumerator\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: StringDictionary.GetEnumerator()\n  fullName: System.Collections.Specialized.StringDictionary.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Collections.Specialized.StringDictionary.IsSynchronized\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: StringDictionary.IsSynchronized\n  fullName: System.Collections.Specialized.StringDictionary.IsSynchronized\n- uid: System.Collections.Specialized.StringDictionary.Item(System.String)\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: Item(String)\n  nameWithType: StringDictionary.Item(String)\n  fullName: System.Collections.Specialized.StringDictionary.Item(String)\n- uid: System.Collections.Specialized.StringDictionary.Keys\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: Keys\n  nameWithType: StringDictionary.Keys\n  fullName: System.Collections.Specialized.StringDictionary.Keys\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: true\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Collections.Specialized.StringDictionary.Remove(System.String)\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: Remove(String)\n  nameWithType: StringDictionary.Remove(String)\n  fullName: System.Collections.Specialized.StringDictionary.Remove(String)\n- uid: System.Collections.Specialized.StringDictionary.SyncRoot\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: SyncRoot\n  nameWithType: StringDictionary.SyncRoot\n  fullName: System.Collections.Specialized.StringDictionary.SyncRoot\n- uid: System.Collections.Specialized.StringDictionary.Values\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: Values\n  nameWithType: StringDictionary.Values\n  fullName: System.Collections.Specialized.StringDictionary.Values\n- uid: System.Collections.Specialized.StringDictionary.#ctor*\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: StringDictionary\n  nameWithType: StringDictionary.StringDictionary\n- uid: System.Collections.Specialized.StringDictionary.Add*\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: Add\n  nameWithType: StringDictionary.Add\n- uid: System.Collections.Specialized.StringDictionary.Clear*\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: Clear\n  nameWithType: StringDictionary.Clear\n- uid: System.Collections.Specialized.StringDictionary.ContainsKey*\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: ContainsKey\n  nameWithType: StringDictionary.ContainsKey\n- uid: System.Collections.Specialized.StringDictionary.ContainsValue*\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: ContainsValue\n  nameWithType: StringDictionary.ContainsValue\n- uid: System.Collections.Specialized.StringDictionary.CopyTo*\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: CopyTo\n  nameWithType: StringDictionary.CopyTo\n- uid: System.Collections.Specialized.StringDictionary.Count*\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: Count\n  nameWithType: StringDictionary.Count\n- uid: System.Collections.Specialized.StringDictionary.GetEnumerator*\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: StringDictionary.GetEnumerator\n- uid: System.Collections.Specialized.StringDictionary.IsSynchronized*\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: StringDictionary.IsSynchronized\n- uid: System.Collections.Specialized.StringDictionary.Item*\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: Item\n  nameWithType: StringDictionary.Item\n- uid: System.Collections.Specialized.StringDictionary.Keys*\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: Keys\n  nameWithType: StringDictionary.Keys\n- uid: System.Collections.Specialized.StringDictionary.Remove*\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: Remove\n  nameWithType: StringDictionary.Remove\n- uid: System.Collections.Specialized.StringDictionary.SyncRoot*\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: SyncRoot\n  nameWithType: StringDictionary.SyncRoot\n- uid: System.Collections.Specialized.StringDictionary.Values*\n  parent: System.Collections.Specialized.StringDictionary\n  isExternal: false\n  name: Values\n  nameWithType: StringDictionary.Values\n"}