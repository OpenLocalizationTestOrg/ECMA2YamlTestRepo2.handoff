{"nodes":[{"pos":[529,617],"content":"Provides methods for protecting and unprotecting memory. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides methods for protecting and unprotecting memory. This class cannot be inherited.","pos":[0,88],"nodes":[{"content":"Provides methods for protecting and unprotecting memory.","pos":[0,56]},{"content":"This class cannot be inherited.","pos":[57,88]}]}]},{"pos":[2642,2670],"content":"Protects the specified data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Protects the specified data.","pos":[0,28]}]},{"pos":[2683,2997],"content":"This method can be used to protect data in memory. Note that the method does not make a copy of the data, but encrypts the byte array in place. The `userData` parameter must be 16 bytes in length or a multiple of 16 bytes.       Support for this method is available in the Windows XP and later operating systems.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method can be used to protect data in memory.","pos":[0,50]},{"content":"Note that the method does not make a copy of the data, but encrypts the byte array in place.","pos":[51,143]},{"content":"The <ph id=\"ph1\">`userData`</ph> parameter must be 16 bytes in length or a multiple of 16 bytes.","pos":[144,222],"source":" The `userData` parameter must be 16 bytes in length or a multiple of 16 bytes."},{"content":"Support for this method is available in the Windows XP and later operating systems.","pos":[229,312]}]},{"pos":[3618,3712],"content":"The byte array containing data in memory to protect. The array must be a multiple of 16 bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte array containing data in memory to protect. The array must be a multiple of 16 bytes.","pos":[0,94],"nodes":[{"content":"The byte array containing data in memory to protect.","pos":[0,52]},{"content":"The array must be a multiple of 16 bytes.","pos":[53,94]}]}]},{"pos":[3811,3887],"content":"One of the enumeration values that specifies the scope of memory protection.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the scope of memory protection.","pos":[0,76]}]},{"pos":[4116,4193],"content":"<ph id=\"ph1\">&lt;code&gt;userData&lt;/code&gt;</ph> must be 16 bytes in length or in multiples of 16 bytes.","needQuote":true,"needEscape":true,"source":"<code>userData</code> must be 16 bytes in length or in multiples of 16 bytes."},{"pos":[4296,4425],"content":"The operating system does not support this method. This method can be used only with the Windows 2000 or later operating systems.","needQuote":true,"needEscape":true,"nodes":[{"content":"The operating system does not support this method. This method can be used only with the Windows 2000 or later operating systems.","pos":[0,129],"nodes":[{"content":"The operating system does not support this method.","pos":[0,50]},{"content":"This method can be used only with the Windows 2000 or later operating systems.","pos":[51,129]}]}]},{"pos":[4528,4614],"content":"<ph id=\"ph1\">&lt;code&gt;userData &lt;/code&gt;</ph>is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>userData </code>is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5242,5365],"content":"Unprotects data in memory that was protected using the <xref:System.Security.Cryptography.ProtectedMemory.Protect*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Unprotects data in memory that was protected using the &lt;xref:System.Security.Cryptography.ProtectedMemory.Protect*&gt; method.","pos":[0,123],"source":"Unprotects data in memory that was protected using the <xref:System.Security.Cryptography.ProtectedMemory.Protect*> method."}]},{"pos":[5378,5621],"content":"This method can be used to unencrypt data in memory that was encrypted using the <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> method.       Support for this method is available in the Windows XP and later operating systems.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method can be used to unencrypt data in memory that was encrypted using the <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> method.       Support for this method is available in the Windows XP and later operating systems.","pos":[0,241],"nodes":[{"content":"This method can be used to unencrypt data in memory that was encrypted using the &lt;xref:System.Security.Cryptography.ProtectedMemory.Protect%2A&gt; method.","pos":[0,151],"source":"This method can be used to unencrypt data in memory that was encrypted using the <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> method."},{"content":"Support for this method is available in the Windows XP and later operating systems.","pos":[158,241]}]}]},{"pos":[6249,6287],"content":"The byte array in memory to unencrypt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte array in memory to unencrypt.","pos":[0,38]}]},{"pos":[6386,6462],"content":"One of the enumeration values that specifies the scope of memory protection.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the scope of memory protection.","pos":[0,76]}]},{"pos":[6647,6776],"content":"The operating system does not support this method. This method can be used only with the Windows 2000 or later operating systems.","needQuote":true,"needEscape":true,"nodes":[{"content":"The operating system does not support this method. This method can be used only with the Windows 2000 or later operating systems.","pos":[0,129],"nodes":[{"content":"The operating system does not support this method.","pos":[0,50]},{"content":"This method can be used only with the Windows 2000 or later operating systems.","pos":[51,129]}]}]},{"pos":[6879,6970],"content":"<ph id=\"ph1\">&lt;code&gt;encryptedData &lt;/code&gt;</ph>is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>encryptedData </code>is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7120,7257],"content":"<code>encryptedData </code>is empty.       -or-       This call was not implemented.       -or-       NTSTATUS contains an error.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;encryptedData &lt;/code&gt;</ph>is empty.","pos":[0,36],"source":"<code>encryptedData </code>is empty."},{"content":"-or-       This call was not implemented.","pos":[43,84]},{"content":"-or-       NTSTATUS contains an error.","pos":[91,129]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.ProtectedMemory\n  id: ProtectedMemory\n  children:\n  - System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\n  - System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\n  langs:\n  - csharp\n  name: ProtectedMemory\n  nameWithType: ProtectedMemory\n  fullName: System.Security.Cryptography.ProtectedMemory\n  type: Class\n  summary: Provides methods for protecting and unprotecting memory. This class cannot be inherited.\n  remarks: \"This class provides access to the Data Protection API (DPAPI) available in the Windows XP and later operating systems. This is a service that is provided by the operating system and does not require additional libraries. It provides encryption for sensitive data in memory.  \\n  \\n The class consists of two wrappers for the unmanaged DPAPI, [Protect(Byte\\\\[\\\\], MemoryProtectionScope)](assetId:///M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)?qualifyHint=False&autoUpgrade=True) and [Unprotect(Byte\\\\[\\\\], MemoryProtectionScope)](assetId:///M:System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)?qualifyHint=False&autoUpgrade=True). These two methods can be used to encrypt and decrypt data in memory.\"\n  example:\n  - \"The following example shows how to use data protection.  \\n  \\n [!code-cs[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/csharp/t-system.security.crypto_26_1.cs)]\\n [!code-vb[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/visualbasic/t-system.security.crypto_26_1.vb)]\\n [!code-cpp[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/cpp/t-system.security.crypto_26_1.cpp)]\"\n  syntax:\n    content: public static class ProtectedMemory\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\n  id: Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\n  parent: System.Security.Cryptography.ProtectedMemory\n  langs:\n  - csharp\n  name: Protect(Byte[],MemoryProtectionScope)\n  nameWithType: ProtectedMemory.Protect(Byte[],MemoryProtectionScope)\n  fullName: System.Security.Cryptography.ProtectedMemory.Protect(Byte[],MemoryProtectionScope)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography\n  summary: Protects the specified data.\n  remarks: \"This method can be used to protect data in memory. Note that the method does not make a copy of the data, but encrypts the byte array in place. The `userData` parameter must be 16 bytes in length or a multiple of 16 bytes.  \\n  \\n Support for this method is available in the Windows XP and later operating systems.\"\n  example:\n  - \"The following code example shows how to use data protection.  \\n  \\n [!code-cs[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/csharp/6df72062-ece3-4989-a6e7-_1.cs)]\\n [!code-vb[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/visualbasic/6df72062-ece3-4989-a6e7-_1.vb)]\\n [!code-cpp[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/cpp/6df72062-ece3-4989-a6e7-_1.cpp)]\"\n  syntax:\n    content: public static void Protect (byte[] userData, System.Security.Cryptography.MemoryProtectionScope scope);\n    parameters:\n    - id: userData\n      type: System.Byte[]\n      description: The byte array containing data in memory to protect. The array must be a multiple of 16 bytes.\n    - id: scope\n      type: System.Security.Cryptography.MemoryProtectionScope\n      description: One of the enumeration values that specifies the scope of memory protection.\n  overload: System.Security.Cryptography.ProtectedMemory.Protect*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: <code>userData</code> must be 16 bytes in length or in multiples of 16 bytes.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The operating system does not support this method. This method can be used only with the Windows 2000 or later operating systems.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>userData </code>is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\n  id: Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\n  parent: System.Security.Cryptography.ProtectedMemory\n  langs:\n  - csharp\n  name: Unprotect(Byte[],MemoryProtectionScope)\n  nameWithType: ProtectedMemory.Unprotect(Byte[],MemoryProtectionScope)\n  fullName: System.Security.Cryptography.ProtectedMemory.Unprotect(Byte[],MemoryProtectionScope)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography\n  summary: Unprotects data in memory that was protected using the <xref:System.Security.Cryptography.ProtectedMemory.Protect*> method.\n  remarks: \"This method can be used to unencrypt data in memory that was encrypted using the <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> method.  \\n  \\n Support for this method is available in the Windows XP and later operating systems.\"\n  example:\n  - \"The following example shows how to use data protection.  \\n  \\n [!code-cs[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/csharp/c4cde6bb-28e8-4233-bae1-_1.cs)]\\n [!code-vb[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/visualbasic/c4cde6bb-28e8-4233-bae1-_1.vb)]\\n [!code-cpp[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/cpp/c4cde6bb-28e8-4233-bae1-_1.cpp)]\"\n  syntax:\n    content: public static void Unprotect (byte[] encryptedData, System.Security.Cryptography.MemoryProtectionScope scope);\n    parameters:\n    - id: encryptedData\n      type: System.Byte[]\n      description: The byte array in memory to unencrypt.\n    - id: scope\n      type: System.Security.Cryptography.MemoryProtectionScope\n      description: One of the enumeration values that specifies the scope of memory protection.\n  overload: System.Security.Cryptography.ProtectedMemory.Unprotect*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The operating system does not support this method. This method can be used only with the Windows 2000 or later operating systems.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>encryptedData </code>is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"<code>encryptedData </code>is empty.  \\n  \\n -or-  \\n  \\n This call was not implemented.  \\n  \\n -or-  \\n  \\n NTSTATUS contains an error.\"\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\n  parent: System.Security.Cryptography.ProtectedMemory\n  isExternal: false\n  name: Protect(Byte[],MemoryProtectionScope)\n  nameWithType: ProtectedMemory.Protect(Byte[],MemoryProtectionScope)\n  fullName: System.Security.Cryptography.ProtectedMemory.Protect(Byte[],MemoryProtectionScope)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.MemoryProtectionScope\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: MemoryProtectionScope\n  nameWithType: MemoryProtectionScope\n  fullName: System.Security.Cryptography.MemoryProtectionScope\n- uid: System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\n  parent: System.Security.Cryptography.ProtectedMemory\n  isExternal: false\n  name: Unprotect(Byte[],MemoryProtectionScope)\n  nameWithType: ProtectedMemory.Unprotect(Byte[],MemoryProtectionScope)\n  fullName: System.Security.Cryptography.ProtectedMemory.Unprotect(Byte[],MemoryProtectionScope)\n- uid: System.Security.Cryptography.ProtectedMemory.Protect*\n  parent: System.Security.Cryptography.ProtectedMemory\n  isExternal: false\n  name: Protect\n  nameWithType: ProtectedMemory.Protect\n- uid: System.Security.Cryptography.ProtectedMemory.Unprotect*\n  parent: System.Security.Cryptography.ProtectedMemory\n  isExternal: false\n  name: Unprotect\n  nameWithType: ProtectedMemory.Unprotect\n"}