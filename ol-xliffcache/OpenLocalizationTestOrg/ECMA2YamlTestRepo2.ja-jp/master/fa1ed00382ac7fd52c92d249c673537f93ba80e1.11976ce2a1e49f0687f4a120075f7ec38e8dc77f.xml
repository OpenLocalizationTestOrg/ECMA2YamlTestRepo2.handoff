{"nodes":[{"pos":[1819,1910],"content":"Represents an XML element that specifies a binding for peer channel-specific TCP messaging.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an XML element that specifies a binding for peer channel-specific TCP messaging.","pos":[0,91]}]},{"pos":[1922,2234],"content":"The netTcpBinding is a secure, reliable, optimized binding suitable for cross-machine communication. By default, it generates a run-time communication stack with WS-ReliableMessaging for reliability, Windows Security for message security and authentication, TCP for message delivery, and binary message encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"The netTcpBinding is a secure, reliable, optimized binding suitable for cross-machine communication. By default, it generates a run-time communication stack with WS-ReliableMessaging for reliability, Windows Security for message security and authentication, TCP for message delivery, and binary message encoding.","pos":[0,312],"nodes":[{"content":"The netTcpBinding is a secure, reliable, optimized binding suitable for cross-machine communication.","pos":[0,100]},{"content":"By default, it generates a run-time communication stack with WS-ReliableMessaging for reliability, Windows Security for message security and authentication, TCP for message delivery, and binary message encoding.","pos":[101,312]}]}]},{"pos":[6406,6522],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.NetTcpBindingElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.NetTcpBindingElement\"></xref> class."},{"pos":[7223,7377],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.NetTcpBindingElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified configuration name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.NetTcpBindingElement\"></xref> class with the specified configuration name."},{"pos":[7520,7640],"content":"The configuration name of the binding. This value should be unique because it is used as identification for the binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration name of the binding. This value should be unique because it is used as identification for the binding.","pos":[0,120],"nodes":[{"content":"The configuration name of the binding.","pos":[0,38]},{"content":"This value should be unique because it is used as identification for the binding.","pos":[39,120]}]}]},{"pos":[8228,8272],"content":"Gets the type of this configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of this configuration element.","pos":[0,44]}]},{"pos":[8403,8456],"content":"The <xref:System.Type> of this configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of this configuration element.","pos":[0,53],"source":"The <xref:System.Type> of this configuration element."}]},{"pos":[9077,9185],"content":"Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.","pos":[0,108]}]},{"pos":[9382,9700],"content":"A valid <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*> value that specifies whether the hostname is used to reach the service when matching the URI. The default value is <xref href=\"System.ServiceModel.HostNameComparisonMode\"></xref>, which ignores the hostname in the match.","needQuote":true,"needEscape":true,"nodes":[{"content":"A valid &lt;xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*&gt; value that specifies whether the hostname is used to reach the service when matching the URI.","pos":[0,191],"source":"A valid <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*> value that specifies whether the hostname is used to reach the service when matching the URI."},{"content":"The default value is <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.HostNameComparisonMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which ignores the hostname in the match.","pos":[192,318],"source":" The default value is <xref href=\"System.ServiceModel.HostNameComparisonMode\"></xref>, which ignores the hostname in the match."}]},{"pos":[10386,10467],"content":"Initializes this binding configuration with the content of the specified binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes this binding configuration with the content of the specified binding.","pos":[0,81]}]},{"pos":[10680,10690],"content":"A binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"A binding.","pos":[0,10]}]},{"pos":[11262,11374],"content":"Gets or sets a value that specifies the maximum number of channels that can wait to be accepted on the listener.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies the maximum number of channels that can wait to be accepted on the listener.","pos":[0,112]}]},{"pos":[11386,11479],"content":"Connections in excess of this limit are queued until space below the limit becomes available.","needQuote":true,"needEscape":true,"nodes":[{"content":"Connections in excess of this limit are queued until space below the limit becomes available.","pos":[0,93]}]},{"pos":[11598,11693],"content":"The maximum number of channels that can wait to be accepted on the listener. The default is 10.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of channels that can wait to be accepted on the listener. The default is 10.","pos":[0,95],"nodes":[{"content":"The maximum number of channels that can wait to be accepted on the listener.","pos":[0,76]},{"content":"The default is 10.","pos":[77,95]}]}]},{"pos":[12284,12393],"content":"Gets or sets the maximum size, in bytes, for a buffer pool that stores TCP messages processed by the binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum size, in bytes, for a buffer pool that stores TCP messages processed by the binding.","pos":[0,109]}]},{"pos":[12517,12623],"content":"The maximum size (in bytes) used to buffer incoming messages in memory. The default value is 65,536 bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size (in bytes) used to buffer incoming messages in memory. The default value is 65,536 bytes.","pos":[0,106],"nodes":[{"content":"The maximum size (in bytes) used to buffer incoming messages in memory.","pos":[0,71]},{"content":"The default value is 65,536 bytes.","pos":[72,106]}]}]},{"pos":[13198,13309],"content":"Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.","pos":[0,111]}]},{"pos":[13322,13595],"content":"If the buffer is full, excess data remains in the underlying socket until the buffer has space again.       This value cannot be less than <xref:System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize%2A>, whose default value is also 65,536 (64 KB).","needQuote":false,"needEscape":true,"nodes":[{"content":"If the buffer is full, excess data remains in the underlying socket until the buffer has space again.       This value cannot be less than <xref:System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize%2A>, whose default value is also 65,536 (64 KB).","pos":[0,271],"nodes":[{"content":"If the buffer is full, excess data remains in the underlying socket until the buffer has space again.","pos":[0,101]},{"content":"This value cannot be less than &lt;xref:System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize%2A&gt;, whose default value is also 65,536 (64 KB).","pos":[108,271],"source":"       This value cannot be less than <xref:System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize%2A>, whose default value is also 65,536 (64 KB)."}]}]},{"pos":[13715,13812],"content":"The maximum size, in bytes, of the buffer used to store messages in memory. The default is 65536.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, of the buffer used to store messages in memory. The default is 65536.","pos":[0,97],"nodes":[{"content":"The maximum size, in bytes, of the buffer used to store messages in memory.","pos":[0,75]},{"content":"The default is 65536.","pos":[76,97]}]}]},{"pos":[14388,14524],"content":"Gets or sets a value that specifies the maximum number of outbound and inbound connections the service creates and accepts respectively.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies the maximum number of outbound and inbound connections the service creates and accepts respectively.","pos":[0,136]}]},{"pos":[14536,14731],"content":"Incoming and outgoing connections are counted against a separate limit specified by this property. Any connection in excess of the limit is queued until a space below the limit becomes available.","needQuote":true,"needEscape":true,"nodes":[{"content":"Incoming and outgoing connections are counted against a separate limit specified by this property. Any connection in excess of the limit is queued until a space below the limit becomes available.","pos":[0,195],"nodes":[{"content":"Incoming and outgoing connections are counted against a separate limit specified by this property.","pos":[0,98]},{"content":"Any connection in excess of the limit is queued until a space below the limit becomes available.","pos":[99,195]}]}]},{"pos":[14851,14970],"content":"The maximum number of outbound and inbound connections the service creates and accepts respectively. The default is 10.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of outbound and inbound connections the service creates and accepts respectively. The default is 10.","pos":[0,119],"nodes":[{"content":"The maximum number of outbound and inbound connections the service creates and accepts respectively.","pos":[0,100]},{"content":"The default is 10.","pos":[101,119]}]}]},{"pos":[15587,15704],"content":"Gets or sets the maximum size, in bytes, of a message that can be received on a channel configured with this binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum size, in bytes, of a message that can be received on a channel configured with this binding.","pos":[0,117]}]},{"pos":[15833,15943],"content":"The maximum size, in bytes, of a message that is processed by this binding. The default value is 65,536 bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, of a message that is processed by this binding. The default value is 65,536 bytes.","pos":[0,110],"nodes":[{"content":"The maximum size, in bytes, of a message that is processed by this binding.","pos":[0,75]},{"content":"The default value is 65,536 bytes.","pos":[76,110]}]}]},{"pos":[16659,16788],"content":"Applies the specified binding to this <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.NetNamedPipeBindingElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Applies the specified binding to this <xref href=\"System.ServiceModel.Configuration.NetNamedPipeBindingElement\"></xref> instance."},{"pos":[17007,17033],"content":"The binding to be applied.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binding to be applied.","pos":[0,26]}]},{"pos":[17636,17736],"content":"Gets or sets a boolean value that specifies whether TCP port sharing is enabled for this connection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a boolean value that specifies whether TCP port sharing is enabled for this connection.","pos":[0,100]}]},{"pos":[17863,18050],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if TCP port sharing is enabled for this connection; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if TCP port sharing is enabled for this connection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18611,18930],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPropertyCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that contains a collection of <bpt id=\"p2\">&lt;xref href=\"System.Configuration.ConfigurationProperty\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects that can be attributes or <bpt id=\"p3\">&lt;xref href=\"System.Configuration.ConfigurationElement\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> objects of this configuration element.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> instance that contains a collection of <xref href=\"System.Configuration.ConfigurationProperty\"></xref> objects that can be attributes or <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects of this configuration element."},{"pos":[19142,19456],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPropertyCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that contains a collection of <bpt id=\"p2\">&lt;xref href=\"System.Configuration.ConfigurationProperty\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects that can be attributes or <bpt id=\"p3\">&lt;xref href=\"System.Configuration.ConfigurationElement\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> objects of this configuration element.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> instance that contains a collection of <xref href=\"System.Configuration.ConfigurationProperty\"></xref> objects that can be attributes or <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects of this configuration element."},{"pos":[20019,20139],"content":"Gets the constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.","pos":[0,120]}]},{"pos":[20151,20435],"content":"The complexity constraints include items such as a maximum element depth, a maximum length for string content within the message. The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.","needQuote":true,"needEscape":true,"nodes":[{"content":"The complexity constraints include items such as a maximum element depth, a maximum length for string content within the message. The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.","pos":[0,284],"nodes":[{"content":"The complexity constraints include items such as a maximum element depth, a maximum length for string content within the message.","pos":[0,129]},{"content":"The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.","pos":[130,284]}]}]},{"pos":[20665,20755],"content":"The <xref:System.Xml.XmlDictionaryReaderQuotas> that specifies the complexity constraints.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Xml.XmlDictionaryReaderQuotas&gt; that specifies the complexity constraints.","pos":[0,90],"source":"The <xref:System.Xml.XmlDictionaryReaderQuotas> that specifies the complexity constraints."}]},{"pos":[21335,21447],"content":"Gets a configuration element that specifies whether reliable sessions are established between channel endpoints.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a configuration element that specifies whether reliable sessions are established between channel endpoints.","pos":[0,112]}]},{"pos":[21706,21840],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.ReliableSessionElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies whether reliable sessions are enabled.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ServiceModel.Configuration.ReliableSessionElement\"></xref> that specifies whether reliable sessions are enabled."},{"pos":[22388,22443],"content":"Gets the type of security to be used with this binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of security to be used with this binding.","pos":[0,55]}]},{"pos":[22647,22759],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.NetTcpSecurityElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is used with this binding.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Configuration.NetTcpSecurityElement\"></xref> that is used with this binding."},{"pos":[23335,23432],"content":"Gets or sets a Boolean value that specifies whether the binding supports flowing WS-Transactions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that specifies whether the binding supports flowing WS-Transactions.","pos":[0,97]}]},{"pos":[23556,23819],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the binding supports flowing WS-Transactions; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the binding supports flowing WS-Transactions; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,184],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the binding supports flowing WS-Transactions; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[185,263],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[24422,24489],"content":"Gets or sets the transaction protocol to be used with this binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the transaction protocol to be used with this binding.","pos":[0,67]}]},{"pos":[24677,24809],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.TransactionProtocol\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the transaction protocol to be used with this binding.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> that specifies the transaction protocol to be used with this binding."},{"pos":[25381,25484],"content":"Gets or sets a value that specifies whether messages are buffered or streamed or a request or response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies whether messages are buffered or streamed or a request or response.","pos":[0,103]}]},{"pos":[25651,25787],"content":"A valid <xref:System.ServiceModel.TransferMode> value that specifies whether messages are buffered or streamed or a request or response.","needQuote":true,"needEscape":true,"nodes":[{"content":"A valid &lt;xref:System.ServiceModel.TransferMode&gt; value that specifies whether messages are buffered or streamed or a request or response.","pos":[0,136],"source":"A valid <xref:System.ServiceModel.TransferMode> value that specifies whether messages are buffered or streamed or a request or response."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement\n  id: NetTcpBindingElement\n  children:\n  - System.ServiceModel.Configuration.NetTcpBindingElement.#ctor\n  - System.ServiceModel.Configuration.NetTcpBindingElement.#ctor(System.String)\n  - System.ServiceModel.Configuration.NetTcpBindingElement.BindingElementType\n  - System.ServiceModel.Configuration.NetTcpBindingElement.HostNameComparisonMode\n  - System.ServiceModel.Configuration.NetTcpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)\n  - System.ServiceModel.Configuration.NetTcpBindingElement.ListenBacklog\n  - System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferPoolSize\n  - System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferSize\n  - System.ServiceModel.Configuration.NetTcpBindingElement.MaxConnections\n  - System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize\n  - System.ServiceModel.Configuration.NetTcpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)\n  - System.ServiceModel.Configuration.NetTcpBindingElement.PortSharingEnabled\n  - System.ServiceModel.Configuration.NetTcpBindingElement.Properties\n  - System.ServiceModel.Configuration.NetTcpBindingElement.ReaderQuotas\n  - System.ServiceModel.Configuration.NetTcpBindingElement.ReliableSession\n  - System.ServiceModel.Configuration.NetTcpBindingElement.Security\n  - System.ServiceModel.Configuration.NetTcpBindingElement.TransactionFlow\n  - System.ServiceModel.Configuration.NetTcpBindingElement.TransactionProtocol\n  - System.ServiceModel.Configuration.NetTcpBindingElement.TransferMode\n  langs:\n  - csharp\n  name: NetTcpBindingElement\n  nameWithType: NetTcpBindingElement\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement\n  type: Class\n  summary: Represents an XML element that specifies a binding for peer channel-specific TCP messaging.\n  remarks: The netTcpBinding is a secure, reliable, optimized binding suitable for cross-machine communication. By default, it generates a run-time communication stack with WS-ReliableMessaging for reliability, Windows Security for message security and authentication, TCP for message delivery, and binary message encoding.\n  syntax:\n    content: 'public class NetTcpBindingElement : System.ServiceModel.Configuration.StandardBindingElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  - System.ServiceModel.Configuration.StandardBindingElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  - System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)\n  - System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout\n  - System.ServiceModel.Configuration.StandardBindingElement.Name\n  - System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout\n  - System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout\n  - System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)\n  - System.ServiceModel.Configuration.StandardBindingElement.SendTimeout\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: NetTcpBindingElement()\n  nameWithType: NetTcpBindingElement.NetTcpBindingElement()\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.NetTcpBindingElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.NetTcpBindingElement\"></xref> class.\n  syntax:\n    content: public NetTcpBindingElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: NetTcpBindingElement(String)\n  nameWithType: NetTcpBindingElement.NetTcpBindingElement(String)\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.NetTcpBindingElement(String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.NetTcpBindingElement\"></xref> class with the specified configuration name.\n  syntax:\n    content: public NetTcpBindingElement (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The configuration name of the binding. This value should be unique because it is used as identification for the binding.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.BindingElementType\n  id: BindingElementType\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: BindingElementType\n  nameWithType: NetTcpBindingElement.BindingElementType\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.BindingElementType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the type of this configuration element.\n  syntax:\n    content: protected override Type BindingElementType { get; }\n    return:\n      type: System.Type\n      description: The <xref:System.Type> of this configuration element.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.BindingElementType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.HostNameComparisonMode\n  id: HostNameComparisonMode\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: HostNameComparisonMode\n  nameWithType: NetTcpBindingElement.HostNameComparisonMode\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.HostNameComparisonMode\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.\n  syntax:\n    content: public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }\n    return:\n      type: System.ServiceModel.HostNameComparisonMode\n      description: A valid <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*> value that specifies whether the hostname is used to reach the service when matching the URI. The default value is <xref href=\"System.ServiceModel.HostNameComparisonMode\"></xref>, which ignores the hostname in the match.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.HostNameComparisonMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)\n  id: InitializeFrom(System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: InitializeFrom(Binding)\n  nameWithType: NetTcpBindingElement.InitializeFrom(Binding)\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.InitializeFrom(Binding)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes this binding configuration with the content of the specified binding.\n  syntax:\n    content: protected override void InitializeFrom (System.ServiceModel.Channels.Binding binding);\n    parameters:\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: A binding.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.InitializeFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ListenBacklog\n  id: ListenBacklog\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: ListenBacklog\n  nameWithType: NetTcpBindingElement.ListenBacklog\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.ListenBacklog\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies the maximum number of channels that can wait to be accepted on the listener.\n  remarks: Connections in excess of this limit are queued until space below the limit becomes available.\n  syntax:\n    content: public int ListenBacklog { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of channels that can wait to be accepted on the listener. The default is 10.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.ListenBacklog*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferPoolSize\n  id: MaxBufferPoolSize\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: MaxBufferPoolSize\n  nameWithType: NetTcpBindingElement.MaxBufferPoolSize\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferPoolSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the maximum size, in bytes, for a buffer pool that stores TCP messages processed by the binding.\n  syntax:\n    content: public long MaxBufferPoolSize { get; set; }\n    return:\n      type: System.Int64\n      description: The maximum size (in bytes) used to buffer incoming messages in memory. The default value is 65,536 bytes.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferPoolSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferSize\n  id: MaxBufferSize\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: MaxBufferSize\n  nameWithType: NetTcpBindingElement.MaxBufferSize\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.\n  remarks: \"If the buffer is full, excess data remains in the underlying socket until the buffer has space again.  \\n  \\n This value cannot be less than <xref:System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize%2A>, whose default value is also 65,536 (64 KB).\"\n  syntax:\n    content: public int MaxBufferSize { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum size, in bytes, of the buffer used to store messages in memory. The default is 65536.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxConnections\n  id: MaxConnections\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: MaxConnections\n  nameWithType: NetTcpBindingElement.MaxConnections\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.MaxConnections\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies the maximum number of outbound and inbound connections the service creates and accepts respectively.\n  remarks: Incoming and outgoing connections are counted against a separate limit specified by this property. Any connection in excess of the limit is queued until a space below the limit becomes available.\n  syntax:\n    content: public int MaxConnections { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of outbound and inbound connections the service creates and accepts respectively. The default is 10.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.MaxConnections*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize\n  id: MaxReceivedMessageSize\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: MaxReceivedMessageSize\n  nameWithType: NetTcpBindingElement.MaxReceivedMessageSize\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the maximum size, in bytes, of a message that can be received on a channel configured with this binding.\n  syntax:\n    content: public long MaxReceivedMessageSize { get; set; }\n    return:\n      type: System.Int64\n      description: The maximum size, in bytes, of a message that is processed by this binding. The default value is 65,536 bytes.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)\n  id: OnApplyConfiguration(System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: OnApplyConfiguration(Binding)\n  nameWithType: NetTcpBindingElement.OnApplyConfiguration(Binding)\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.OnApplyConfiguration(Binding)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Applies the specified binding to this <xref href=\"System.ServiceModel.Configuration.NetNamedPipeBindingElement\"></xref> instance.\n  syntax:\n    content: protected override void OnApplyConfiguration (System.ServiceModel.Channels.Binding binding);\n    parameters:\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The binding to be applied.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.OnApplyConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.PortSharingEnabled\n  id: PortSharingEnabled\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: PortSharingEnabled\n  nameWithType: NetTcpBindingElement.PortSharingEnabled\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.PortSharingEnabled\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a boolean value that specifies whether TCP port sharing is enabled for this connection.\n  syntax:\n    content: public bool PortSharingEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if TCP port sharing is enabled for this connection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.PortSharingEnabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: NetTcpBindingElement.Properties\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets a <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> instance that contains a collection of <xref href=\"System.Configuration.ConfigurationProperty\"></xref> objects that can be attributes or <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects of this configuration element.\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: A <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> instance that contains a collection of <xref href=\"System.Configuration.ConfigurationProperty\"></xref> objects that can be attributes or <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects of this configuration element.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ReaderQuotas\n  id: ReaderQuotas\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: ReaderQuotas\n  nameWithType: NetTcpBindingElement.ReaderQuotas\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.ReaderQuotas\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.\n  remarks: The complexity constraints include items such as a maximum element depth, a maximum length for string content within the message. The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.\n  syntax:\n    content: public System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement ReaderQuotas { get; }\n    return:\n      type: System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement\n      description: The <xref:System.Xml.XmlDictionaryReaderQuotas> that specifies the complexity constraints.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.ReaderQuotas*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ReliableSession\n  id: ReliableSession\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: ReliableSession\n  nameWithType: NetTcpBindingElement.ReliableSession\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.ReliableSession\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets a configuration element that specifies whether reliable sessions are established between channel endpoints.\n  syntax:\n    content: public System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement ReliableSession { get; }\n    return:\n      type: System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement\n      description: An <xref href=\"System.ServiceModel.Configuration.ReliableSessionElement\"></xref> that specifies whether reliable sessions are enabled.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.ReliableSession*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.Security\n  id: Security\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: Security\n  nameWithType: NetTcpBindingElement.Security\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.Security\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the type of security to be used with this binding.\n  syntax:\n    content: public System.ServiceModel.Configuration.NetTcpSecurityElement Security { get; }\n    return:\n      type: System.ServiceModel.Configuration.NetTcpSecurityElement\n      description: The <xref href=\"System.ServiceModel.Configuration.NetTcpSecurityElement\"></xref> that is used with this binding.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.Security*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionFlow\n  id: TransactionFlow\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: TransactionFlow\n  nameWithType: NetTcpBindingElement.TransactionFlow\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionFlow\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a Boolean value that specifies whether the binding supports flowing WS-Transactions.\n  syntax:\n    content: public bool TransactionFlow { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the binding supports flowing WS-Transactions; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionFlow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionProtocol\n  id: TransactionProtocol\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: TransactionProtocol\n  nameWithType: NetTcpBindingElement.TransactionProtocol\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionProtocol\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the transaction protocol to be used with this binding.\n  syntax:\n    content: public System.ServiceModel.TransactionProtocol TransactionProtocol { get; set; }\n    return:\n      type: System.ServiceModel.TransactionProtocol\n      description: A <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> that specifies the transaction protocol to be used with this binding.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionProtocol*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransferMode\n  id: TransferMode\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: TransferMode\n  nameWithType: NetTcpBindingElement.TransferMode\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.TransferMode\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies whether messages are buffered or streamed or a request or response.\n  syntax:\n    content: public System.ServiceModel.TransferMode TransferMode { get; set; }\n    return:\n      type: System.ServiceModel.TransferMode\n      description: A valid <xref:System.ServiceModel.TransferMode> value that specifies whether messages are buffered or streamed or a request or response.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.TransferMode*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Configuration.StandardBindingElement\n  isExternal: false\n  name: System.ServiceModel.Configuration.StandardBindingElement\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.#ctor\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: NetTcpBindingElement()\n  nameWithType: NetTcpBindingElement.NetTcpBindingElement()\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.NetTcpBindingElement()\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.#ctor(System.String)\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: NetTcpBindingElement(String)\n  nameWithType: NetTcpBindingElement.NetTcpBindingElement(String)\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.NetTcpBindingElement(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.BindingElementType\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: BindingElementType\n  nameWithType: NetTcpBindingElement.BindingElementType\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.BindingElementType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.HostNameComparisonMode\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: HostNameComparisonMode\n  nameWithType: NetTcpBindingElement.HostNameComparisonMode\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.HostNameComparisonMode\n- uid: System.ServiceModel.HostNameComparisonMode\n  parent: System.ServiceModel\n  isExternal: false\n  name: HostNameComparisonMode\n  nameWithType: HostNameComparisonMode\n  fullName: System.ServiceModel.HostNameComparisonMode\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: InitializeFrom(Binding)\n  nameWithType: NetTcpBindingElement.InitializeFrom(Binding)\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.InitializeFrom(Binding)\n- uid: System.ServiceModel.Channels.Binding\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: Binding\n  nameWithType: Binding\n  fullName: System.ServiceModel.Channels.Binding\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ListenBacklog\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: ListenBacklog\n  nameWithType: NetTcpBindingElement.ListenBacklog\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.ListenBacklog\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferPoolSize\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: MaxBufferPoolSize\n  nameWithType: NetTcpBindingElement.MaxBufferPoolSize\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferPoolSize\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferSize\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: MaxBufferSize\n  nameWithType: NetTcpBindingElement.MaxBufferSize\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferSize\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxConnections\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: MaxConnections\n  nameWithType: NetTcpBindingElement.MaxConnections\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.MaxConnections\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: MaxReceivedMessageSize\n  nameWithType: NetTcpBindingElement.MaxReceivedMessageSize\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: OnApplyConfiguration(Binding)\n  nameWithType: NetTcpBindingElement.OnApplyConfiguration(Binding)\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.OnApplyConfiguration(Binding)\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.PortSharingEnabled\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: PortSharingEnabled\n  nameWithType: NetTcpBindingElement.PortSharingEnabled\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.PortSharingEnabled\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.Properties\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: Properties\n  nameWithType: NetTcpBindingElement.Properties\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ReaderQuotas\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: ReaderQuotas\n  nameWithType: NetTcpBindingElement.ReaderQuotas\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.ReaderQuotas\n- uid: System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: XmlDictionaryReaderQuotasElement\n  nameWithType: XmlDictionaryReaderQuotasElement\n  fullName: System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ReliableSession\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: ReliableSession\n  nameWithType: NetTcpBindingElement.ReliableSession\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.ReliableSession\n- uid: System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: StandardBindingOptionalReliableSessionElement\n  nameWithType: StandardBindingOptionalReliableSessionElement\n  fullName: System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.Security\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: Security\n  nameWithType: NetTcpBindingElement.Security\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.Security\n- uid: System.ServiceModel.Configuration.NetTcpSecurityElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: NetTcpSecurityElement\n  nameWithType: NetTcpSecurityElement\n  fullName: System.ServiceModel.Configuration.NetTcpSecurityElement\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionFlow\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: TransactionFlow\n  nameWithType: NetTcpBindingElement.TransactionFlow\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionFlow\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionProtocol\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: TransactionProtocol\n  nameWithType: NetTcpBindingElement.TransactionProtocol\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionProtocol\n- uid: System.ServiceModel.TransactionProtocol\n  parent: System.ServiceModel\n  isExternal: false\n  name: TransactionProtocol\n  nameWithType: TransactionProtocol\n  fullName: System.ServiceModel.TransactionProtocol\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransferMode\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: TransferMode\n  nameWithType: NetTcpBindingElement.TransferMode\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement.TransferMode\n- uid: System.ServiceModel.TransferMode\n  parent: System.ServiceModel\n  isExternal: true\n  name: TransferMode\n  nameWithType: TransferMode\n  fullName: System.ServiceModel.TransferMode\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.#ctor*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: NetTcpBindingElement\n  nameWithType: NetTcpBindingElement.NetTcpBindingElement\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.BindingElementType*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: BindingElementType\n  nameWithType: NetTcpBindingElement.BindingElementType\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.HostNameComparisonMode*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: HostNameComparisonMode\n  nameWithType: NetTcpBindingElement.HostNameComparisonMode\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.InitializeFrom*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: InitializeFrom\n  nameWithType: NetTcpBindingElement.InitializeFrom\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ListenBacklog*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: ListenBacklog\n  nameWithType: NetTcpBindingElement.ListenBacklog\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferPoolSize*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: MaxBufferPoolSize\n  nameWithType: NetTcpBindingElement.MaxBufferPoolSize\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferSize*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: MaxBufferSize\n  nameWithType: NetTcpBindingElement.MaxBufferSize\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxConnections*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: MaxConnections\n  nameWithType: NetTcpBindingElement.MaxConnections\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: MaxReceivedMessageSize\n  nameWithType: NetTcpBindingElement.MaxReceivedMessageSize\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.OnApplyConfiguration*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: OnApplyConfiguration\n  nameWithType: NetTcpBindingElement.OnApplyConfiguration\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.PortSharingEnabled*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: PortSharingEnabled\n  nameWithType: NetTcpBindingElement.PortSharingEnabled\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.Properties*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: Properties\n  nameWithType: NetTcpBindingElement.Properties\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ReaderQuotas*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: ReaderQuotas\n  nameWithType: NetTcpBindingElement.ReaderQuotas\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ReliableSession*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: ReliableSession\n  nameWithType: NetTcpBindingElement.ReliableSession\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.Security*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: Security\n  nameWithType: NetTcpBindingElement.Security\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionFlow*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: TransactionFlow\n  nameWithType: NetTcpBindingElement.TransactionFlow\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionProtocol*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: TransactionProtocol\n  nameWithType: NetTcpBindingElement.TransactionProtocol\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransferMode*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: TransferMode\n  nameWithType: NetTcpBindingElement.TransferMode\n"}