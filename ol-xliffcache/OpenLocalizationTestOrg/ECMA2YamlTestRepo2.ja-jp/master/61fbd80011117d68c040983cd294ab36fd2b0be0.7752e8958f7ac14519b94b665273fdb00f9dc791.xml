{"nodes":[{"pos":[576,635],"content":"Serves as the abstract base class for ASP.NET file parsers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serves as the abstract base class for ASP.NET file parsers.","pos":[0,59]}]},{"pos":[647,822],"content":"The TemplateParser class provides the common functionality for parser classes. Because the TemplateParser class is abstract, an instance of this class is not created directly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The TemplateParser class provides the common functionality for parser classes. Because the TemplateParser class is abstract, an instance of this class is not created directly.","pos":[0,175],"nodes":[{"content":"The TemplateParser class provides the common functionality for parser classes.","pos":[0,78]},{"content":"Because the TemplateParser class is abstract, an instance of this class is not created directly.","pos":[79,175]}]}]},{"pos":[1453,1541],"content":"Parses the content of the file that is specified by either its virtual or physical path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Parses the content of the file that is specified by either its virtual or physical path.","pos":[0,88]}]},{"pos":[1554,1847],"content":"If a physical path is specified, it is used over the virtual path for locating the file to parse.       If the path to the file to parse is a circular reference; that is, it refers to the same file that the parser is currently parsing, an <xref:System.Web.HttpException> exception is thrown.","needQuote":false,"needEscape":true,"nodes":[{"content":"If a physical path is specified, it is used over the virtual path for locating the file to parse.       If the path to the file to parse is a circular reference; that is, it refers to the same file that the parser is currently parsing, an <xref:System.Web.HttpException> exception is thrown.","pos":[0,291],"nodes":[{"content":"If a physical path is specified, it is used over the virtual path for locating the file to parse.","pos":[0,97]},{"content":"If the path to the file to parse is a circular reference; that is, it refers to the same file that the parser is currently parsing, an &lt;xref:System.Web.HttpException&gt; exception is thrown.","pos":[104,291],"source":"       If the path to the file to parse is a circular reference; that is, it refers to the same file that the parser is currently parsing, an <xref:System.Web.HttpException> exception is thrown."}]}]},{"pos":[2024,2113],"content":"The physical path of the file to parse. `physicalPath` has precedence over `virtualPath`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical path of the file to parse.","pos":[0,39]},{"content":"<ph id=\"ph1\">`physicalPath`</ph> has precedence over <ph id=\"ph2\">`virtualPath`</ph>.","pos":[40,89],"source":"`physicalPath` has precedence over `virtualPath`."}]},{"pos":[2181,2219],"content":"The virtual path of the file to parse.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path of the file to parse.","pos":[0,38]}]},{"pos":[2380,2476],"content":"<ph id=\"ph1\">&lt;code&gt;physicalPath&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> refers to the file currently being parsed.","needQuote":true,"needEscape":true,"source":"<code>physicalPath</code> or <code>virtualPath</code> refers to the file currently being parsed."},{"pos":[2990,3010],"content":"Parses the template.","needQuote":true,"needEscape":true,"nodes":[{"content":"Parses the template.","pos":[0,20]}]},{"pos":[3222,3234],"content":"The content.","needQuote":true,"needEscape":true,"nodes":[{"content":"The content.","pos":[0,12]}]},{"pos":[3302,3319],"content":"The virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path.","pos":[0,17]}]},{"pos":[3389,3546],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to ignore the filter; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to ignore the filter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3614,3635],"content":"Returns the template.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the template.","pos":[0,21]}]},{"pos":[4114,4318],"content":"Reports a process error by creating a new <bpt id=\"p1\">&lt;xref href=\"System.Web.ParserError\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the specified message and adding it to a <bpt id=\"p2\">&lt;xref href=\"System.Web.ParserErrorCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Reports a process error by creating a new <xref href=\"System.Web.ParserError\"></xref> object with the specified message and adding it to a <xref href=\"System.Web.ParserErrorCollection\"></xref> collection."},{"pos":[4467,4555],"content":"The error message text used to create a new <bpt id=\"p1\">&lt;xref href=\"System.Web.ParserError\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The error message text used to create a new <xref href=\"System.Web.ParserError\"></xref>."},{"pos":[5068,5299],"content":"Reports a parser exception by creating a new <bpt id=\"p1\">&lt;xref href=\"System.Web.ParserError\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object as the specified &lt;xref:System.Exception&gt; exception and adding it to a <bpt id=\"p2\">&lt;xref href=\"System.Web.ParserErrorCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Reports a parser exception by creating a new <xref href=\"System.Web.ParserError\"></xref> object as the specified <xref:System.Exception> exception and adding it to a <xref href=\"System.Web.ParserErrorCollection\"></xref> collection."},{"pos":[5448,5541],"content":"The &lt;xref:System.Exception&gt; used to create a new <bpt id=\"p1\">&lt;xref href=\"System.Web.ParserError\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Exception> used to create a new <xref href=\"System.Web.ParserError\"></xref>."},{"pos":[5723,5782],"content":"The <xref:System.Exception> to process is a compiler error.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Exception&gt; to process is a compiler error.","pos":[0,59],"source":"The <xref:System.Exception> to process is a compiler error."}]},{"pos":[6096,6148],"content":"Gets the string that contains the data to be parsed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the string that contains the data to be parsed.","pos":[0,52]}]},{"pos":[6257,6279],"content":"The data to be parsed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data to be parsed.","pos":[0,22]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.TemplateParser\n  id: TemplateParser\n  children:\n  - System.Web.UI.TemplateParser.ParseFile(System.String,System.String)\n  - System.Web.UI.TemplateParser.ParseTemplate(System.String,System.String,System.Boolean)\n  - System.Web.UI.TemplateParser.ProcessError(System.String)\n  - System.Web.UI.TemplateParser.ProcessException(System.Exception)\n  - System.Web.UI.TemplateParser.Text\n  langs:\n  - csharp\n  name: TemplateParser\n  nameWithType: TemplateParser\n  fullName: System.Web.UI.TemplateParser\n  type: Class\n  summary: Serves as the abstract base class for ASP.NET file parsers.\n  remarks: The TemplateParser class provides the common functionality for parser classes. Because the TemplateParser class is abstract, an instance of this class is not created directly.\n  syntax:\n    content: 'public abstract class TemplateParser : System.Web.UI.BaseParser'\n  inheritance:\n  - System.Object\n  - System.Web.UI.BaseParser\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.TemplateParser.ParseFile(System.String,System.String)\n  id: ParseFile(System.String,System.String)\n  parent: System.Web.UI.TemplateParser\n  langs:\n  - csharp\n  name: ParseFile(String,String)\n  nameWithType: TemplateParser.ParseFile(String,String)\n  fullName: System.Web.UI.TemplateParser.ParseFile(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Parses the content of the file that is specified by either its virtual or physical path.\n  remarks: \"If a physical path is specified, it is used over the virtual path for locating the file to parse.  \\n  \\n If the path to the file to parse is a circular reference; that is, it refers to the same file that the parser is currently parsing, an <xref:System.Web.HttpException> exception is thrown.\"\n  syntax:\n    content: protected void ParseFile (string physicalPath, string virtualPath);\n    parameters:\n    - id: physicalPath\n      type: System.String\n      description: The physical path of the file to parse. `physicalPath` has precedence over `virtualPath`.\n    - id: virtualPath\n      type: System.String\n      description: The virtual path of the file to parse.\n  overload: System.Web.UI.TemplateParser.ParseFile*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: <code>physicalPath</code> or <code>virtualPath</code> refers to the file currently being parsed.\n  platform:\n  - net462\n- uid: System.Web.UI.TemplateParser.ParseTemplate(System.String,System.String,System.Boolean)\n  id: ParseTemplate(System.String,System.String,System.Boolean)\n  parent: System.Web.UI.TemplateParser\n  langs:\n  - csharp\n  name: ParseTemplate(String,String,Boolean)\n  nameWithType: TemplateParser.ParseTemplate(String,String,Boolean)\n  fullName: System.Web.UI.TemplateParser.ParseTemplate(String,String,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Parses the template.\n  syntax:\n    content: public static System.Web.UI.ITemplate ParseTemplate (string content, string virtualPath, bool ignoreFilter);\n    parameters:\n    - id: content\n      type: System.String\n      description: The content.\n    - id: virtualPath\n      type: System.String\n      description: The virtual path.\n    - id: ignoreFilter\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to ignore the filter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Web.UI.ITemplate\n      description: Returns the template.\n  overload: System.Web.UI.TemplateParser.ParseTemplate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.TemplateParser.ProcessError(System.String)\n  id: ProcessError(System.String)\n  parent: System.Web.UI.TemplateParser\n  langs:\n  - csharp\n  name: ProcessError(String)\n  nameWithType: TemplateParser.ProcessError(String)\n  fullName: System.Web.UI.TemplateParser.ProcessError(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Reports a process error by creating a new <xref href=\"System.Web.ParserError\"></xref> object with the specified message and adding it to a <xref href=\"System.Web.ParserErrorCollection\"></xref> collection.\n  syntax:\n    content: protected void ProcessError (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message text used to create a new <xref href=\"System.Web.ParserError\"></xref>.\n  overload: System.Web.UI.TemplateParser.ProcessError*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.TemplateParser.ProcessException(System.Exception)\n  id: ProcessException(System.Exception)\n  parent: System.Web.UI.TemplateParser\n  langs:\n  - csharp\n  name: ProcessException(Exception)\n  nameWithType: TemplateParser.ProcessException(Exception)\n  fullName: System.Web.UI.TemplateParser.ProcessException(Exception)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Reports a parser exception by creating a new <xref href=\"System.Web.ParserError\"></xref> object as the specified <xref:System.Exception> exception and adding it to a <xref href=\"System.Web.ParserErrorCollection\"></xref> collection.\n  syntax:\n    content: protected void ProcessException (Exception ex);\n    parameters:\n    - id: ex\n      type: System.Exception\n      description: The <xref:System.Exception> used to create a new <xref href=\"System.Web.ParserError\"></xref>.\n  overload: System.Web.UI.TemplateParser.ProcessException*\n  exceptions:\n  - type: System.Web.HttpCompileException\n    commentId: T:System.Web.HttpCompileException\n    description: The <xref:System.Exception> to process is a compiler error.\n  platform:\n  - net462\n- uid: System.Web.UI.TemplateParser.Text\n  id: Text\n  parent: System.Web.UI.TemplateParser\n  langs:\n  - csharp\n  name: Text\n  nameWithType: TemplateParser.Text\n  fullName: System.Web.UI.TemplateParser.Text\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the string that contains the data to be parsed.\n  syntax:\n    content: public string Text { get; }\n    return:\n      type: System.String\n      description: The data to be parsed.\n  overload: System.Web.UI.TemplateParser.Text*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.BaseParser\n  isExternal: false\n  name: System.Web.UI.BaseParser\n- uid: System.Web.HttpException\n  parent: System.Web\n  isExternal: false\n  name: HttpException\n  nameWithType: HttpException\n  fullName: System.Web.HttpException\n- uid: System.Web.HttpCompileException\n  parent: System.Web\n  isExternal: false\n  name: HttpCompileException\n  nameWithType: HttpCompileException\n  fullName: System.Web.HttpCompileException\n- uid: System.Web.UI.TemplateParser.ParseFile(System.String,System.String)\n  parent: System.Web.UI.TemplateParser\n  isExternal: false\n  name: ParseFile(String,String)\n  nameWithType: TemplateParser.ParseFile(String,String)\n  fullName: System.Web.UI.TemplateParser.ParseFile(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.TemplateParser.ParseTemplate(System.String,System.String,System.Boolean)\n  parent: System.Web.UI.TemplateParser\n  isExternal: false\n  name: ParseTemplate(String,String,Boolean)\n  nameWithType: TemplateParser.ParseTemplate(String,String,Boolean)\n  fullName: System.Web.UI.TemplateParser.ParseTemplate(String,String,Boolean)\n- uid: System.Web.UI.ITemplate\n  parent: System.Web.UI\n  isExternal: false\n  name: ITemplate\n  nameWithType: ITemplate\n  fullName: System.Web.UI.ITemplate\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.TemplateParser.ProcessError(System.String)\n  parent: System.Web.UI.TemplateParser\n  isExternal: false\n  name: ProcessError(String)\n  nameWithType: TemplateParser.ProcessError(String)\n  fullName: System.Web.UI.TemplateParser.ProcessError(String)\n- uid: System.Web.UI.TemplateParser.ProcessException(System.Exception)\n  parent: System.Web.UI.TemplateParser\n  isExternal: false\n  name: ProcessException(Exception)\n  nameWithType: TemplateParser.ProcessException(Exception)\n  fullName: System.Web.UI.TemplateParser.ProcessException(Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Web.UI.TemplateParser.Text\n  parent: System.Web.UI.TemplateParser\n  isExternal: false\n  name: Text\n  nameWithType: TemplateParser.Text\n  fullName: System.Web.UI.TemplateParser.Text\n- uid: System.Web.UI.TemplateParser.ParseFile*\n  parent: System.Web.UI.TemplateParser\n  isExternal: false\n  name: ParseFile\n  nameWithType: TemplateParser.ParseFile\n- uid: System.Web.UI.TemplateParser.ParseTemplate*\n  parent: System.Web.UI.TemplateParser\n  isExternal: false\n  name: ParseTemplate\n  nameWithType: TemplateParser.ParseTemplate\n- uid: System.Web.UI.TemplateParser.ProcessError*\n  parent: System.Web.UI.TemplateParser\n  isExternal: false\n  name: ProcessError\n  nameWithType: TemplateParser.ProcessError\n- uid: System.Web.UI.TemplateParser.ProcessException*\n  parent: System.Web.UI.TemplateParser\n  isExternal: false\n  name: ProcessException\n  nameWithType: TemplateParser.ProcessException\n- uid: System.Web.UI.TemplateParser.Text*\n  parent: System.Web.UI.TemplateParser\n  isExternal: false\n  name: Text\n  nameWithType: TemplateParser.Text\n"}