{"nodes":[{"pos":[1045,1097],"content":"Provides connection management for HTTP connections.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides connection management for HTTP connections.","pos":[0,52]}]},{"pos":[1110,3287],"content":"The ServicePoint class handles connections to an Internet resource based on the host information passed in the resource's Uniform Resource Identifier (URI). The initial connection to the resource determines the information that the ServicePoint object maintains, which is then shared by all subsequent requests to that resource.       ServicePoint objects are managed by the <xref:System.Net.ServicePointManager> class and are created, if necessary, by the <xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=fullName> method. ServicePoint objects are never created directly but are always created and managed by the <xref:System.Net.ServicePointManager> class. The maximum number of ServicePoint objects that can be created is set by the <xref:System.Net.ServicePointManager.MaxServicePoints%2A?displayProperty=fullName> property.       Each ServicePoint object maintains its connection to an Internet resource until it has been idle longer than the time specified in the <xref:System.Net.ServicePoint.MaxIdleTime%2A> property. When a ServicePoint exceeds the <xref:System.Net.ServicePoint.MaxIdleTime%2A> value, it can be recycled to another connection. The default value of <xref:System.Net.ServicePoint.MaxIdleTime%2A> is set by the <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName> property.       When the <xref:System.Net.ServicePoint.ConnectionLeaseTimeout%2A> property is set to a value other than -1, and after the specified time elapses, an active ServicePoint connection is closed after it services the next request. This is useful for applications that do not require active connections that are opened indefinitely, as they are by default.      > [!NOTE] >  In high load conditions, some applications may run out of free threads in the ThreadPool, which may lead to poor system performance (such as high and variable transaction times). See [http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp](http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp) for a number of configuration changes you can make to fix this issue.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ServicePoint class handles connections to an Internet resource based on the host information passed in the resource's Uniform Resource Identifier (URI).","pos":[0,156]},{"content":"The initial connection to the resource determines the information that the ServicePoint object maintains, which is then shared by all subsequent requests to that resource.","pos":[157,328]},{"content":"ServicePoint objects are managed by the &lt;xref:System.Net.ServicePointManager&gt; class and are created, if necessary, by the &lt;xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=fullName&gt; method.","pos":[335,547],"source":"       ServicePoint objects are managed by the <xref:System.Net.ServicePointManager> class and are created, if necessary, by the <xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=fullName> method."},{"content":"ServicePoint objects are never created directly but are always created and managed by the &lt;xref:System.Net.ServicePointManager&gt; class.","pos":[548,682],"source":" ServicePoint objects are never created directly but are always created and managed by the <xref:System.Net.ServicePointManager> class."},{"content":"The maximum number of ServicePoint objects that can be created is set by the &lt;xref:System.Net.ServicePointManager.MaxServicePoints%2A?displayProperty=fullName&gt; property.","pos":[683,852],"source":" The maximum number of ServicePoint objects that can be created is set by the <xref:System.Net.ServicePointManager.MaxServicePoints%2A?displayProperty=fullName> property."},{"content":"Each ServicePoint object maintains its connection to an Internet resource until it has been idle longer than the time specified in the &lt;xref:System.Net.ServicePoint.MaxIdleTime%2A&gt; property.","pos":[859,1049],"source":"       Each ServicePoint object maintains its connection to an Internet resource until it has been idle longer than the time specified in the <xref:System.Net.ServicePoint.MaxIdleTime%2A> property."},{"content":"When a ServicePoint exceeds the &lt;xref:System.Net.ServicePoint.MaxIdleTime%2A&gt; value, it can be recycled to another connection.","pos":[1050,1176],"source":" When a ServicePoint exceeds the <xref:System.Net.ServicePoint.MaxIdleTime%2A> value, it can be recycled to another connection."},{"content":"The default value of &lt;xref:System.Net.ServicePoint.MaxIdleTime%2A&gt; is set by the &lt;xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName&gt; property.","pos":[1177,1357],"source":" The default value of <xref:System.Net.ServicePoint.MaxIdleTime%2A> is set by the <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName> property."},{"content":"When the &lt;xref:System.Net.ServicePoint.ConnectionLeaseTimeout%2A&gt; property is set to a value other than -1, and after the specified time elapses, an active ServicePoint connection is closed after it services the next request.","pos":[1364,1589],"source":"       When the <xref:System.Net.ServicePoint.ConnectionLeaseTimeout%2A> property is set to a value other than -1, and after the specified time elapses, an active ServicePoint connection is closed after it services the next request."},{"content":"This is useful for applications that do not require active connections that are opened indefinitely, as they are by default.","pos":[1590,1714]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In high load conditions, some applications may run out of free threads in the ThreadPool, which may lead to poor system performance (such as high and variable transaction times).","pos":[1720,1911],"source":"      > [!NOTE] >  In high load conditions, some applications may run out of free threads in the ThreadPool, which may lead to poor system performance (such as high and variable transaction times)."},{"content":"See <bpt id=\"p1\">[</bpt>http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp<ept id=\"p1\">](http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp)</ept> for a number of configuration changes you can make to fix this issue.","pos":[1912,2168],"source":" See [http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp](http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp) for a number of configuration changes you can make to fix this issue."}]},{"pos":[4202,4333],"content":"Gets the Uniform Resource Identifier (URI) of the server that this <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object connects to.","needQuote":true,"needEscape":true,"source":"Gets the Uniform Resource Identifier (URI) of the server that this <xref href=\"System.Net.ServicePoint\"></xref> object connects to."},{"pos":[4838,5000],"content":"An instance of the &lt;xref:System.Uri&gt; class that contains the URI of the Internet server that this <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object connects to.","needQuote":true,"needEscape":true,"source":"An instance of the <xref:System.Uri> class that contains the URI of the Internet server that this <xref href=\"System.Net.ServicePoint\"></xref> object connects to."},{"pos":[5162,5227],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is in host mode.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.ServicePoint\"></xref> is in host mode."},{"pos":[5607,5732],"content":"Specifies the delegate to associate a local &lt;xref:System.Net.IPEndPoint&gt; with a <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Specifies the delegate to associate a local <xref:System.Net.IPEndPoint> with a <xref href=\"System.Net.ServicePoint\"></xref>."},{"pos":[5744,6091],"content":"Some load balancing techniques require a client to use a specific local IP address and port number, rather than <xref:System.Net.IPAddress.Any?displayProperty=fullName> (or <xref:System.Net.IPAddress.IPv6Any?displayProperty=fullName> for Internet Protocol Version 6) and an ephemeral port. Your BindIPEndPointDelegate can satisfy this requirement.","needQuote":true,"needEscape":true,"nodes":[{"content":"Some load balancing techniques require a client to use a specific local IP address and port number, rather than <xref:System.Net.IPAddress.Any?displayProperty=fullName> (or <xref:System.Net.IPAddress.IPv6Any?displayProperty=fullName> for Internet Protocol Version 6) and an ephemeral port. Your BindIPEndPointDelegate can satisfy this requirement.","pos":[0,347],"nodes":[{"content":"Some load balancing techniques require a client to use a specific local IP address and port number, rather than &lt;xref:System.Net.IPAddress.Any?displayProperty=fullName&gt; (or &lt;xref:System.Net.IPAddress.IPv6Any?displayProperty=fullName&gt; for Internet Protocol Version 6) and an ephemeral port.","pos":[0,289],"source":"Some load balancing techniques require a client to use a specific local IP address and port number, rather than <xref:System.Net.IPAddress.Any?displayProperty=fullName> (or <xref:System.Net.IPAddress.IPv6Any?displayProperty=fullName> for Internet Protocol Version 6) and an ephemeral port."},{"content":"Your BindIPEndPointDelegate can satisfy this requirement.","pos":[290,347]}]}]},{"pos":[6254,6480],"content":"A delegate that forces a <xref href=\"System.Net.ServicePoint\"></xref> to use a particular local Internet Protocol (IP) address and port number. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A delegate that forces a <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use a particular local Internet Protocol (IP) address and port number.","pos":[0,143],"source":"A delegate that forces a <xref href=\"System.Net.ServicePoint\"></xref> to use a particular local Internet Protocol (IP) address and port number."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[144,226],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[6882,6973],"content":"Gets the certificate received for this <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the certificate received for this <xref href=\"System.Net.ServicePoint\"></xref> object."},{"pos":[6985,7126],"content":"Although a <xref:System.Net.ServicePoint> object can make multiple connections to an Internet resource, it can maintain only one certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Although a &lt;xref:System.Net.ServicePoint&gt; object can make multiple connections to an Internet resource, it can maintain only one certificate.","pos":[0,141],"source":"Although a <xref:System.Net.ServicePoint> object can make multiple connections to an Internet resource, it can maintain only one certificate."}]},{"pos":[7730,7947],"content":"An instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that contains the security certificate received for this <bpt id=\"p2\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class that contains the security certificate received for this <xref href=\"System.Net.ServicePoint\"></xref> object."},{"pos":[8368,8420],"content":"Gets the last client certificate sent to the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the last client certificate sent to the server.","pos":[0,52]}]},{"pos":[9047,9222],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the public values of the last client certificate sent to the server.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object that contains the public values of the last client certificate sent to the server."},{"pos":[9716,9817],"content":"Removes the specified connection group from this <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes the specified connection group from this <xref href=\"System.Net.ServicePoint\"></xref> object."},{"pos":[9829,10020],"content":"Connection groups associate a set of requests with a particular connection or set of connections. This method removes and closes all connections that belong to the specified connection group.","needQuote":true,"needEscape":true,"nodes":[{"content":"Connection groups associate a set of requests with a particular connection or set of connections. This method removes and closes all connections that belong to the specified connection group.","pos":[0,191],"nodes":[{"content":"Connection groups associate a set of requests with a particular connection or set of connections.","pos":[0,97]},{"content":"This method removes and closes all connections that belong to the specified connection group.","pos":[98,191]}]}]},{"pos":[10198,10305],"content":"The name of the connection group that contains the connections to close and remove from this service point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the connection group that contains the connections to close and remove from this service point.","pos":[0,107]}]},{"pos":[10364,10449],"content":"A <xref:System.Boolean> value that indicates whether the connection group was closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt; value that indicates whether the connection group was closed.","pos":[0,85],"source":"A <xref:System.Boolean> value that indicates whether the connection group was closed."}]},{"pos":[10904,11032],"content":"Gets or sets the number of milliseconds after which an active <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> connection is closed.","needQuote":true,"needEscape":true,"source":"Gets or sets the number of milliseconds after which an active <xref href=\"System.Net.ServicePoint\"></xref> connection is closed."},{"pos":[11045,12132],"content":"You can use this property to ensure that a <xref:System.Net.ServicePoint> object's active connections do not remain open indefinitely. This property is intended for scenarios where connections should be dropped and reestablished periodically, such as load balancing scenarios.       By default, when <xref:System.Net.FtpWebRequest.KeepAlive%2A> is `true` for a request, the <xref:System.Net.ServicePoint.MaxIdleTime%2A> property sets the time-out for closing <xref:System.Net.ServicePoint> connections due to inactivity. If the <xref:System.Net.ServicePoint> has active connections, <xref:System.Net.ServicePoint.MaxIdleTime%2A> has no effect and the connections remain open indefinitely.       When the ConnectionLeaseTimeout property is set to a value other than -1, and after the specified time elapses, an active <xref:System.Net.ServicePoint> connection is closed after servicing a request by setting <xref:System.Net.FtpWebRequest.KeepAlive%2A> to `false` in that request.       Setting this value affects all connections managed by the <xref:System.Net.ServicePoint> object.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can use this property to ensure that a &lt;xref:System.Net.ServicePoint&gt; object's active connections do not remain open indefinitely.","pos":[0,134],"source":"You can use this property to ensure that a <xref:System.Net.ServicePoint> object's active connections do not remain open indefinitely."},{"content":"This property is intended for scenarios where connections should be dropped and reestablished periodically, such as load balancing scenarios.","pos":[135,276]},{"content":"By default, when &lt;xref:System.Net.FtpWebRequest.KeepAlive%2A&gt; is <ph id=\"ph1\">`true`</ph> for a request, the &lt;xref:System.Net.ServicePoint.MaxIdleTime%2A&gt; property sets the time-out for closing &lt;xref:System.Net.ServicePoint&gt; connections due to inactivity.","pos":[283,520],"source":"       By default, when <xref:System.Net.FtpWebRequest.KeepAlive%2A> is `true` for a request, the <xref:System.Net.ServicePoint.MaxIdleTime%2A> property sets the time-out for closing <xref:System.Net.ServicePoint> connections due to inactivity."},{"content":"If the &lt;xref:System.Net.ServicePoint&gt; has active connections, &lt;xref:System.Net.ServicePoint.MaxIdleTime%2A&gt; has no effect and the connections remain open indefinitely.","pos":[521,688],"source":" If the <xref:System.Net.ServicePoint> has active connections, <xref:System.Net.ServicePoint.MaxIdleTime%2A> has no effect and the connections remain open indefinitely."},{"content":"When the ConnectionLeaseTimeout property is set to a value other than -1, and after the specified time elapses, an active &lt;xref:System.Net.ServicePoint&gt; connection is closed after servicing a request by setting &lt;xref:System.Net.FtpWebRequest.KeepAlive%2A&gt; to <ph id=\"ph1\">`false`</ph> in that request.","pos":[695,978],"source":"       When the ConnectionLeaseTimeout property is set to a value other than -1, and after the specified time elapses, an active <xref:System.Net.ServicePoint> connection is closed after servicing a request by setting <xref:System.Net.FtpWebRequest.KeepAlive%2A> to `false` in that request."},{"content":"Setting this value affects all connections managed by the &lt;xref:System.Net.ServicePoint&gt; object.","pos":[985,1081],"source":"       Setting this value affects all connections managed by the <xref:System.Net.ServicePoint> object."}]},{"pos":[12621,13024],"content":"A <xref:System.Int32> that specifies the number of milliseconds that an active <xref href=\"System.Net.ServicePoint\"></xref> connection remains open. The default is -1, which allows an active <xref href=\"System.Net.ServicePoint\"></xref> connection to stay connected indefinitely. Set this property to 0 to force <xref href=\"System.Net.ServicePoint\"></xref> connections to close after servicing a request.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Int32&gt; that specifies the number of milliseconds that an active <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> connection remains open.","pos":[0,148],"source":"A <xref:System.Int32> that specifies the number of milliseconds that an active <xref href=\"System.Net.ServicePoint\"></xref> connection remains open."},{"content":"The default is -1, which allows an active <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> connection to stay connected indefinitely.","pos":[149,278],"source":" The default is -1, which allows an active <xref href=\"System.Net.ServicePoint\"></xref> connection to stay connected indefinitely."},{"content":"Set this property to 0 to force <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> connections to close after servicing a request.","pos":[279,403],"source":" Set this property to 0 to force <xref href=\"System.Net.ServicePoint\"></xref> connections to close after servicing a request."}]},{"pos":[13213,13287],"content":"The value specified for a set operation is a negative number less than -1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value specified for a set operation is a negative number less than -1.","pos":[0,74]}]},{"pos":[13632,13747],"content":"Gets or sets the maximum number of connections allowed on this <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets or sets the maximum number of connections allowed on this <xref href=\"System.Net.ServicePoint\"></xref> object."},{"pos":[13759,14286],"content":"The ConnectionLimit property sets the maximum number of connections that the <xref:System.Net.ServicePoint> object can make to an Internet resource. The value of the ConnectionLimit property is set to the value of the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A?displayProperty=fullName> property when the <xref:System.Net.ServicePoint> object is created; subsequent changes to <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> have no effect on existing <xref:System.Net.ServicePoint> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ConnectionLimit property sets the maximum number of connections that the <xref:System.Net.ServicePoint> object can make to an Internet resource. The value of the ConnectionLimit property is set to the value of the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A?displayProperty=fullName> property when the <xref:System.Net.ServicePoint> object is created; subsequent changes to <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> have no effect on existing <xref:System.Net.ServicePoint> objects.","pos":[0,527],"nodes":[{"content":"The ConnectionLimit property sets the maximum number of connections that the &lt;xref:System.Net.ServicePoint&gt; object can make to an Internet resource.","pos":[0,148],"source":"The ConnectionLimit property sets the maximum number of connections that the <xref:System.Net.ServicePoint> object can make to an Internet resource."},{"content":"The value of the ConnectionLimit property is set to the value of the &lt;xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A?displayProperty=fullName&gt; property when the &lt;xref:System.Net.ServicePoint&gt; object is created; subsequent changes to &lt;xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A&gt; have no effect on existing &lt;xref:System.Net.ServicePoint&gt; objects.","pos":[149,527],"source":" The value of the ConnectionLimit property is set to the value of the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A?displayProperty=fullName> property when the <xref:System.Net.ServicePoint> object is created; subsequent changes to <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> have no effect on existing <xref:System.Net.ServicePoint> objects."}]}]},{"pos":[14940,15042],"content":"The maximum number of connections allowed on this <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The maximum number of connections allowed on this <xref href=\"System.Net.ServicePoint\"></xref> object."},{"pos":[15224,15272],"content":"The connection limit is equal to or less than 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection limit is equal to or less than 0.","pos":[0,48]}]},{"pos":[15612,15637],"content":"Gets the connection name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the connection name.","pos":[0,25]}]},{"pos":[15650,16447],"content":"If the <xref:System.Net.ServicePoint> object was constructed with a <xref:System.Uri> object (the <xref:System.Net.ServicePointManager.FindServicePoint%2A> or <xref:System.Net.ServicePointManager.FindServicePoint%2A> methods, for example), then the ConnectionName property represents the <xref:System.Uri.Scheme%2A> property of the <xref:System.Uri> object used.       If the <xref:System.Net.ServicePoint> object was constructed from a network host and port, the ConnectionName property contains a string that represents the host and the network port. If the ConnectionName property is set when constructed from a host and port, only <xref:System.Net.WebRequest> objects with the same <xref:System.Net.WebRequest.ConnectionGroupName%2A> value can use this <xref:System.Net.ServicePoint> object.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the <xref:System.Net.ServicePoint> object was constructed with a <xref:System.Uri> object (the <xref:System.Net.ServicePointManager.FindServicePoint%2A> or <xref:System.Net.ServicePointManager.FindServicePoint%2A> methods, for example), then the ConnectionName property represents the <xref:System.Uri.Scheme%2A> property of the <xref:System.Uri> object used.       If the <xref:System.Net.ServicePoint> object was constructed from a network host and port, the ConnectionName property contains a string that represents the host and the network port. If the ConnectionName property is set when constructed from a host and port, only <xref:System.Net.WebRequest> objects with the same <xref:System.Net.WebRequest.ConnectionGroupName%2A> value can use this <xref:System.Net.ServicePoint> object.","pos":[0,795],"nodes":[{"content":"If the &lt;xref:System.Net.ServicePoint&gt; object was constructed with a &lt;xref:System.Uri&gt; object (the &lt;xref:System.Net.ServicePointManager.FindServicePoint%2A&gt; or &lt;xref:System.Net.ServicePointManager.FindServicePoint%2A&gt; methods, for example), then the ConnectionName property represents the &lt;xref:System.Uri.Scheme%2A&gt; property of the &lt;xref:System.Uri&gt; object used.","pos":[0,362],"source":"If the <xref:System.Net.ServicePoint> object was constructed with a <xref:System.Uri> object (the <xref:System.Net.ServicePointManager.FindServicePoint%2A> or <xref:System.Net.ServicePointManager.FindServicePoint%2A> methods, for example), then the ConnectionName property represents the <xref:System.Uri.Scheme%2A> property of the <xref:System.Uri> object used."},{"content":"If the &lt;xref:System.Net.ServicePoint&gt; object was constructed from a network host and port, the ConnectionName property contains a string that represents the host and the network port.","pos":[369,552],"source":"       If the <xref:System.Net.ServicePoint> object was constructed from a network host and port, the ConnectionName property contains a string that represents the host and the network port."},{"content":"If the ConnectionName property is set when constructed from a host and port, only &lt;xref:System.Net.WebRequest&gt; objects with the same &lt;xref:System.Net.WebRequest.ConnectionGroupName%2A&gt; value can use this &lt;xref:System.Net.ServicePoint&gt; object.","pos":[553,795],"source":" If the ConnectionName property is set when constructed from a host and port, only <xref:System.Net.WebRequest> objects with the same <xref:System.Net.WebRequest.ConnectionGroupName%2A> value can use this <xref:System.Net.ServicePoint> object."}]}]},{"pos":[16891,16950],"content":"A <xref:System.String> that represents the connection name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that represents the connection name.","pos":[0,59],"source":"A <xref:System.String> that represents the connection name."}]},{"pos":[17379,17488],"content":"Gets the number of open connections associated with this <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the number of open connections associated with this <xref href=\"System.Net.ServicePoint\"></xref> object."},{"pos":[17500,17745],"content":"The CurrentConnections property contains the number of open Internet connections associated with this <xref:System.Net.ServicePoint> object. The value of CurrentConnections cannot exceed that of <xref:System.Net.ServicePoint.ConnectionLimit%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CurrentConnections property contains the number of open Internet connections associated with this <xref:System.Net.ServicePoint> object. The value of CurrentConnections cannot exceed that of <xref:System.Net.ServicePoint.ConnectionLimit%2A>.","pos":[0,245],"nodes":[{"content":"The CurrentConnections property contains the number of open Internet connections associated with this &lt;xref:System.Net.ServicePoint&gt; object.","pos":[0,140],"source":"The CurrentConnections property contains the number of open Internet connections associated with this <xref:System.Net.ServicePoint> object."},{"content":"The value of CurrentConnections cannot exceed that of &lt;xref:System.Net.ServicePoint.ConnectionLimit%2A&gt;.","pos":[141,245],"source":" The value of CurrentConnections cannot exceed that of <xref:System.Net.ServicePoint.ConnectionLimit%2A>."}]}]},{"pos":[18362,18466],"content":"The number of open connections associated with this <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The number of open connections associated with this <xref href=\"System.Net.ServicePoint\"></xref> object."},{"pos":[18894,18991],"content":"Gets or sets a <xref:System.Boolean> value that determines whether 100-Continue behavior is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a &lt;xref:System.Boolean&gt; value that determines whether 100-Continue behavior is used.","pos":[0,97],"source":"Gets or sets a <xref:System.Boolean> value that determines whether 100-Continue behavior is used."}]},{"pos":[19004,20276],"content":"When this property is set to `true`, client requests that use the `POST` method expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted. This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.       For example, assume the Expect100Continue property is `false`. When the request is sent to the server, it includes the data. If, after reading the request headers, the server requires authentication and sends a 401 response, the client must resend the data with proper authentication headers.       If the Expect100Continue property is `true`, the request headers are sent to the server. If the server has not rejected the request, it sends a 100-Continue response signaling that the data can be transmitted. If, as in the preceding example, the server requires authentication, it sends the 401 response and the client has not unnecessarily transmitted the data.       Changing the value of this property does not affect existing connections. Only new connections created after the change are affected.       The Expect 100-Continue behavior is fully described in IETF RFC 2616 Section 10.1.1.","needQuote":false,"needEscape":true,"nodes":[{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, client requests that use the <ph id=\"ph2\">`POST`</ph> method expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted.","pos":[0,200],"source":"When this property is set to `true`, client requests that use the `POST` method expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted."},{"content":"This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.","pos":[201,364]},{"content":"For example, assume the Expect100Continue property is <ph id=\"ph1\">`false`</ph>.","pos":[371,433],"source":"       For example, assume the Expect100Continue property is `false`."},{"content":"When the request is sent to the server, it includes the data.","pos":[434,495]},{"content":"If, after reading the request headers, the server requires authentication and sends a 401 response, the client must resend the data with proper authentication headers.","pos":[496,663]},{"content":"If the Expect100Continue property is <ph id=\"ph1\">`true`</ph>, the request headers are sent to the server.","pos":[670,758],"source":"       If the Expect100Continue property is `true`, the request headers are sent to the server."},{"content":"If the server has not rejected the request, it sends a 100-Continue response signaling that the data can be transmitted.","pos":[759,879]},{"content":"If, as in the preceding example, the server requires authentication, it sends the 401 response and the client has not unnecessarily transmitted the data.","pos":[880,1033]},{"content":"Changing the value of this property does not affect existing connections.","pos":[1040,1113]},{"content":"Only new connections created after the change are affected.","pos":[1114,1173]},{"content":"The Expect 100-Continue behavior is fully described in IETF RFC 2616 Section 10.1.1.","pos":[1180,1264]}]},{"pos":[20788,21114],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to expect 100-Continue responses for <xref uid=\"langword_csharp_POST\" name=\"POST\" href=\"\"></xref> requests; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to expect 100-Continue responses for <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_POST\" name=\"POST\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> requests; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,243],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to expect 100-Continue responses for <xref uid=\"langword_csharp_POST\" name=\"POST\" href=\"\"></xref> requests; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[244,326],"source":" The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[21501,21614],"content":"Gets the date and time that the <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object was last connected to a host.","needQuote":true,"needEscape":true,"source":"Gets the date and time that the <xref href=\"System.Net.ServicePoint\"></xref> object was last connected to a host."},{"pos":[21626,21953],"content":"The IdleSince property records the last date and time at which a service point was disconnected from a host. When the difference between the current time and IdleSince exceeds the value of <xref:System.Net.ServicePoint.MaxIdleTime%2A>, the <xref:System.Net.ServicePoint> object is available for recycling to another connection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The IdleSince property records the last date and time at which a service point was disconnected from a host. When the difference between the current time and IdleSince exceeds the value of <xref:System.Net.ServicePoint.MaxIdleTime%2A>, the <xref:System.Net.ServicePoint> object is available for recycling to another connection.","pos":[0,327],"nodes":[{"content":"The IdleSince property records the last date and time at which a service point was disconnected from a host.","pos":[0,108]},{"content":"When the difference between the current time and IdleSince exceeds the value of &lt;xref:System.Net.ServicePoint.MaxIdleTime%2A&gt;, the &lt;xref:System.Net.ServicePoint&gt; object is available for recycling to another connection.","pos":[109,327],"source":" When the difference between the current time and IdleSince exceeds the value of <xref:System.Net.ServicePoint.MaxIdleTime%2A>, the <xref:System.Net.ServicePoint> object is available for recycling to another connection."}]}]},{"pos":[22562,22710],"content":"A &lt;xref:System.DateTime&gt; object that contains the date and time at which the <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object was last connected.","needQuote":true,"needEscape":true,"source":"A <xref:System.DateTime> object that contains the date and time at which the <xref href=\"System.Net.ServicePoint\"></xref> object was last connected."},{"pos":[23099,23264],"content":"Gets or sets the amount of time a connection associated with the <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object can remain idle before the connection is closed.","needQuote":true,"needEscape":true,"source":"Gets or sets the amount of time a connection associated with the <xref href=\"System.Net.ServicePoint\"></xref> object can remain idle before the connection is closed."},{"pos":[23277,24165],"content":"You can set MaxIdleTime to <xref:System.Threading.Timeout.Infinite?displayProperty=fullName> to indicate that a connection associated with the <xref:System.Net.ServicePoint> object should never time out.       The default value of the MaxIdleTime property is the value of the <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName> property when the <xref:System.Net.ServicePoint> object is created. Subsequent changes to the <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A> property have no effect on existing <xref:System.Net.ServicePoint> objects.       When the MaxIdleTime for a connection associated with a <xref:System.Net.ServicePoint> is exceeded, the connection remains open until the application tries to use the connection. At that time, the Framework closes the connection and creates a new connection to the remote host.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can set MaxIdleTime to <xref:System.Threading.Timeout.Infinite?displayProperty=fullName> to indicate that a connection associated with the <xref:System.Net.ServicePoint> object should never time out.       The default value of the MaxIdleTime property is the value of the <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName> property when the <xref:System.Net.ServicePoint> object is created. Subsequent changes to the <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A> property have no effect on existing <xref:System.Net.ServicePoint> objects.       When the MaxIdleTime for a connection associated with a <xref:System.Net.ServicePoint> is exceeded, the connection remains open until the application tries to use the connection. At that time, the Framework closes the connection and creates a new connection to the remote host.","pos":[0,884],"nodes":[{"content":"You can set MaxIdleTime to &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt; to indicate that a connection associated with the &lt;xref:System.Net.ServicePoint&gt; object should never time out.","pos":[0,203],"source":"You can set MaxIdleTime to <xref:System.Threading.Timeout.Infinite?displayProperty=fullName> to indicate that a connection associated with the <xref:System.Net.ServicePoint> object should never time out."},{"content":"The default value of the MaxIdleTime property is the value of the &lt;xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName&gt; property when the &lt;xref:System.Net.ServicePoint&gt; object is created.","pos":[210,433],"source":"       The default value of the MaxIdleTime property is the value of the <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName> property when the <xref:System.Net.ServicePoint> object is created."},{"content":"Subsequent changes to the &lt;xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A&gt; property have no effect on existing &lt;xref:System.Net.ServicePoint&gt; objects.","pos":[434,600],"source":" Subsequent changes to the <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A> property have no effect on existing <xref:System.Net.ServicePoint> objects."},{"content":"When the MaxIdleTime for a connection associated with a &lt;xref:System.Net.ServicePoint&gt; is exceeded, the connection remains open until the application tries to use the connection.","pos":[607,785],"source":"       When the MaxIdleTime for a connection associated with a <xref:System.Net.ServicePoint> is exceeded, the connection remains open until the application tries to use the connection."},{"content":"At that time, the Framework closes the connection and creates a new connection to the remote host.","pos":[786,884]}]}]},{"pos":[24730,24927],"content":"The length of time, in milliseconds, that a connection associated with the <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object can remain idle before it is closed and reused for another connection.","needQuote":true,"needEscape":true,"source":"The length of time, in milliseconds, that a connection associated with the <xref href=\"System.Net.ServicePoint\"></xref> object can remain idle before it is closed and reused for another connection."},{"pos":[25105,25285],"content":"MaxIdleTime is set to less than &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt; or greater than &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxIdleTime is set to less than <ph id=\"ph1\">&amp;lt;</ph>xref:System.Threading.Timeout.Infinite?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> or greater than <ph id=\"ph3\">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id=\"ph4\">&amp;gt;</ph>.","pos":[0,180],"source":"MaxIdleTime is set to less than &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt; or greater than &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."}]},{"pos":[25630,25734],"content":"Gets the version of the HTTP protocol that the <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object uses.","needQuote":true,"needEscape":true,"source":"Gets the version of the HTTP protocol that the <xref href=\"System.Net.ServicePoint\"></xref> object uses."},{"pos":[25746,25799],"content":"The HTTP protocol versions are HTTP/1.0 and HTTP/1.1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP protocol versions are HTTP/1.0 and HTTP/1.1.","pos":[0,53]}]},{"pos":[26317,26454],"content":"A &lt;xref:System.Version&gt; object that contains the HTTP protocol version that the <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object uses.","needQuote":true,"needEscape":true,"source":"A <xref:System.Version> object that contains the HTTP protocol version that the <xref href=\"System.Net.ServicePoint\"></xref> object uses."},{"pos":[26879,26998],"content":"Gets or sets the size of the receiving buffer for the socket used by this <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the size of the receiving buffer for the socket used by this <xref href=\"System.Net.ServicePoint\"></xref>."},{"pos":[27010,27096],"content":"For additional information, see <xref:System.Net.Sockets.Socket.ReceiveBufferSize%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"For additional information, see &lt;xref:System.Net.Sockets.Socket.ReceiveBufferSize%2A&gt;.","pos":[0,86],"source":"For additional information, see <xref:System.Net.Sockets.Socket.ReceiveBufferSize%2A>."}]},{"pos":[27576,27675],"content":"A <xref:System.Int32> that contains the size, in bytes, of the receive buffer. The default is 8192.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.Int32> that contains the size, in bytes, of the receive buffer. The default is 8192.","pos":[0,99],"nodes":[{"content":"A &lt;xref:System.Int32&gt; that contains the size, in bytes, of the receive buffer.","pos":[0,78],"source":"A <xref:System.Int32> that contains the size, in bytes, of the receive buffer."},{"content":"The default is 8192.","pos":[79,99]}]}]},{"pos":[27859,27935],"content":"The value specified for a set operation is greater than <xref:System.Int32>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value specified for a set operation is greater than &lt;xref:System.Int32&gt;.","pos":[0,76],"source":"The value specified for a set operation is greater than <xref:System.Int32>."}]},{"pos":[28425,28487],"content":"Enables or disables the keep-alive option on a TCP connection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables or disables the keep-alive option on a TCP connection.","pos":[0,62]}]},{"pos":[28500,29516],"content":"An application can request that a TCP/IP provider enable the use of keep-alive packets on a TCP connection. The default is that the use of keep-alive packets on a TCP connection is disabled.       The default settings when a TCP socket is initialized sets the keep-alive timeout to 2 hours and the keep-alive interval to 1 second. The `keepAliveTime` parameter specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent. The `keepAliveInterval` parameter specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received. The number of keep-alive probes cannot be changed and is set to 10.       If a TCP connection is dropped as the result of keep-alives, a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError> is returned to any calls in progress on the socket, and any subsequent calls will fail with a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError>.","needQuote":false,"needEscape":true,"nodes":[{"content":"An application can request that a TCP/IP provider enable the use of keep-alive packets on a TCP connection.","pos":[0,107]},{"content":"The default is that the use of keep-alive packets on a TCP connection is disabled.","pos":[108,190]},{"content":"The default settings when a TCP socket is initialized sets the keep-alive timeout to 2 hours and the keep-alive interval to 1 second.","pos":[197,330]},{"content":"The <ph id=\"ph1\">`keepAliveTime`</ph> parameter specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.","pos":[331,460],"source":" The `keepAliveTime` parameter specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent."},{"content":"The <ph id=\"ph1\">`keepAliveInterval`</ph> parameter specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.","pos":[461,622],"source":" The `keepAliveInterval` parameter specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received."},{"content":"The number of keep-alive probes cannot be changed and is set to 10.","pos":[623,690]},{"content":"If a TCP connection is dropped as the result of keep-alives, a &lt;xref:System.Net.Sockets.SocketError&gt; of &lt;xref:System.Net.Sockets.SocketError&gt; is returned to any calls in progress on the socket, and any subsequent calls will fail with a &lt;xref:System.Net.Sockets.SocketError&gt; of &lt;xref:System.Net.Sockets.SocketError&gt;.","pos":[697,1012],"source":"       If a TCP connection is dropped as the result of keep-alives, a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError> is returned to any calls in progress on the socket, and any subsequent calls will fail with a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError>."}]},{"pos":[29708,30004],"content":"If set to true, then the TCP keep-alive option on a TCP connection will be enabled using the specified `keepAliveTime` and `keepAliveInterval` values.       If set to false, then the TCP keep-alive option is disabled and the remaining parameters are ignored.       The default value is false.","needQuote":false,"needEscape":true,"nodes":[{"content":"If set to true, then the TCP keep-alive option on a TCP connection will be enabled using the specified <ph id=\"ph1\">`keepAliveTime`</ph> and <ph id=\"ph2\">`keepAliveInterval`</ph> values.","pos":[0,150],"source":"If set to true, then the TCP keep-alive option on a TCP connection will be enabled using the specified `keepAliveTime` and `keepAliveInterval` values."},{"content":"If set to false, then the TCP keep-alive option is disabled and the remaining parameters are ignored.","pos":[157,258]},{"content":"The default value is false.","pos":[265,292]}]},{"pos":[30075,30324],"content":"Specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.       The value must be greater than 0.  If a value of less than or equal to zero is passed an <xref:System.ArgumentOutOfRangeException> is thrown.","needQuote":false,"needEscape":true,"nodes":[{"content":"Specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.       The value must be greater than 0.  If a value of less than or equal to zero is passed an <xref:System.ArgumentOutOfRangeException> is thrown.","pos":[0,247],"nodes":[{"content":"Specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.","pos":[0,99]},{"content":"The value must be greater than 0.","pos":[106,139]},{"content":"If a value of less than or equal to zero is passed an &lt;xref:System.ArgumentOutOfRangeException&gt; is thrown.","pos":[141,247],"source":"  If a value of less than or equal to zero is passed an <xref:System.ArgumentOutOfRangeException> is thrown."}]}]},{"pos":[30399,30676],"content":"Specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.       The value must be greater than 0.  If a value of less than or equal to zero is passed an <xref:System.ArgumentOutOfRangeException> is thrown.","needQuote":false,"needEscape":true,"nodes":[{"content":"Specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.       The value must be greater than 0.  If a value of less than or equal to zero is passed an <xref:System.ArgumentOutOfRangeException> is thrown.","pos":[0,275],"nodes":[{"content":"Specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.","pos":[0,127]},{"content":"The value must be greater than 0.","pos":[134,167]},{"content":"If a value of less than or equal to zero is passed an &lt;xref:System.ArgumentOutOfRangeException&gt; is thrown.","pos":[169,275],"source":"  If a value of less than or equal to zero is passed an <xref:System.ArgumentOutOfRangeException> is thrown."}]}]},{"pos":[30859,30981],"content":"The value specified for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keepAliveTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">keepAliveInterval</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is less than or equal to 0.","needQuote":true,"needEscape":true,"source":"The value specified for <code>keepAliveTime</code> or <code>keepAliveInterval</code> parameter is less than or equal to 0."},{"pos":[31341,31446],"content":"Indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object supports pipelined connections.","needQuote":true,"needEscape":true,"source":"Indicates whether the <xref href=\"System.Net.ServicePoint\"></xref> object supports pipelined connections."},{"pos":[31459,31748],"content":"Pipelining allows clients to send multiple requests across a persistent connection without waiting for each response from the server. The server sends the responses in the same order as the requests were received.       Pipelining is described in detail in IETF RFC 2616 section 8.1.2.2.","needQuote":false,"needEscape":true,"nodes":[{"content":"Pipelining allows clients to send multiple requests across a persistent connection without waiting for each response from the server. The server sends the responses in the same order as the requests were received.       Pipelining is described in detail in IETF RFC 2616 section 8.1.2.2.","pos":[0,287],"nodes":[{"content":"Pipelining allows clients to send multiple requests across a persistent connection without waiting for each response from the server.","pos":[0,133]},{"content":"The server sends the responses in the same order as the requests were received.","pos":[134,213]},{"content":"Pipelining is described in detail in IETF RFC 2616 section 8.1.2.2.","pos":[220,287]}]}]},{"pos":[32259,32485],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object supports pipelined connections; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Net.ServicePoint\"></xref> object supports pipelined connections; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[32913,33091],"content":"Gets or sets a &lt;xref:System.Boolean&gt; value that determines whether the Nagle algorithm is used on connections managed by this <bpt id=\"p1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets or sets a <xref:System.Boolean> value that determines whether the Nagle algorithm is used on connections managed by this <xref href=\"System.Net.ServicePoint\"></xref> object."},{"pos":[33104,33553],"content":"The Nagle algorithm is used to buffer small packets of data and transmit them as a single packet. This process, referred to as \"nagling,\" is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.       Changing the value of this property does not affect existing connections. Only new connections created after the change are affected.       The Nagle algorithm is fully described in IETF RFC 896.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Nagle algorithm is used to buffer small packets of data and transmit them as a single packet. This process, referred to as \"nagling,\" is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.       Changing the value of this property does not affect existing connections. Only new connections created after the change are affected.       The Nagle algorithm is fully described in IETF RFC 896.","pos":[0,443],"nodes":[{"content":"The Nagle algorithm is used to buffer small packets of data and transmit them as a single packet.","pos":[0,97]},{"content":"This process, referred to as \"nagling,\" is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.","pos":[98,241]},{"content":"Changing the value of this property does not affect existing connections.","pos":[248,321]},{"content":"Only new connections created after the change are affected.","pos":[322,381]},{"content":"The Nagle algorithm is fully described in IETF RFC 896.","pos":[388,443]}]}]},{"pos":[34068,34314],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use the Nagle algorithm; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use the Nagle algorithm; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,163],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use the Nagle algorithm; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[164,246],"source":" The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.ServicePoint\n  id: ServicePoint\n  children:\n  - System.Net.ServicePoint.Address\n  - System.Net.ServicePoint.BindIPEndPointDelegate\n  - System.Net.ServicePoint.Certificate\n  - System.Net.ServicePoint.ClientCertificate\n  - System.Net.ServicePoint.CloseConnectionGroup(System.String)\n  - System.Net.ServicePoint.ConnectionLeaseTimeout\n  - System.Net.ServicePoint.ConnectionLimit\n  - System.Net.ServicePoint.ConnectionName\n  - System.Net.ServicePoint.CurrentConnections\n  - System.Net.ServicePoint.Expect100Continue\n  - System.Net.ServicePoint.IdleSince\n  - System.Net.ServicePoint.MaxIdleTime\n  - System.Net.ServicePoint.ProtocolVersion\n  - System.Net.ServicePoint.ReceiveBufferSize\n  - System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)\n  - System.Net.ServicePoint.SupportsPipelining\n  - System.Net.ServicePoint.UseNagleAlgorithm\n  langs:\n  - csharp\n  name: ServicePoint\n  nameWithType: ServicePoint\n  fullName: System.Net.ServicePoint\n  type: Class\n  summary: Provides connection management for HTTP connections.\n  remarks: \"The ServicePoint class handles connections to an Internet resource based on the host information passed in the resource's Uniform Resource Identifier (URI). The initial connection to the resource determines the information that the ServicePoint object maintains, which is then shared by all subsequent requests to that resource.  \\n  \\n ServicePoint objects are managed by the <xref:System.Net.ServicePointManager> class and are created, if necessary, by the <xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=fullName> method. ServicePoint objects are never created directly but are always created and managed by the <xref:System.Net.ServicePointManager> class. The maximum number of ServicePoint objects that can be created is set by the <xref:System.Net.ServicePointManager.MaxServicePoints%2A?displayProperty=fullName> property.  \\n  \\n Each ServicePoint object maintains its connection to an Internet resource until it has been idle longer than the time specified in the <xref:System.Net.ServicePoint.MaxIdleTime%2A> property. When a ServicePoint exceeds the <xref:System.Net.ServicePoint.MaxIdleTime%2A> value, it can be recycled to another connection. The default value of <xref:System.Net.ServicePoint.MaxIdleTime%2A> is set by the <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName> property.  \\n  \\n When the <xref:System.Net.ServicePoint.ConnectionLeaseTimeout%2A> property is set to a value other than -1, and after the specified time elapses, an active ServicePoint connection is closed after it services the next request. This is useful for applications that do not require active connections that are opened indefinitely, as they are by default.  \\n  \\n> [!NOTE]\\n>  In high load conditions, some applications may run out of free threads in the ThreadPool, which may lead to poor system performance (such as high and variable transaction times). See [http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp](http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp) for a number of configuration changes you can make to fix this issue.\"\n  example:\n  - \"The following code example creates a ServicePoint object that connects to the URI www.contoso.com.  \\n  \\n [!code-cpp[System.Net.ServicePoint#1](~/add/codesnippet/cpp/t-system.net.servicepoint_1.cpp)]\\n [!code-vb[System.Net.ServicePoint#1](~/add/codesnippet/visualbasic/t-system.net.servicepoint_1.vb)]\\n [!code-cs[System.Net.ServicePoint#1](~/add/codesnippet/csharp/t-system.net.servicepoint_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.CompilerServices.FriendAccessAllowed]\n\n      public class ServicePoint\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Net.ServicePoint.Address\n  id: Address\n  parent: System.Net.ServicePoint\n  langs:\n  - csharp\n  name: Address\n  nameWithType: ServicePoint.Address\n  fullName: System.Net.ServicePoint.Address\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets the Uniform Resource Identifier (URI) of the server that this <xref href=\"System.Net.ServicePoint\"></xref> object connects to.\n  remarks: ''\n  example:\n  - \"The following code example displays the value of this property.  \\n  \\n [!code-cpp[System.Net.ServicePoint#2](~/add/codesnippet/cpp/p-system.net.servicepoin_3_1.cpp)]\\n [!code-vb[System.Net.ServicePoint#2](~/add/codesnippet/visualbasic/p-system.net.servicepoin_3_1.vb)]\\n [!code-cs[System.Net.ServicePoint#2](~/add/codesnippet/csharp/p-system.net.servicepoin_3_1.cs)]\"\n  syntax:\n    content: public Uri Address { get; }\n    return:\n      type: System.Uri\n      description: An instance of the <xref:System.Uri> class that contains the URI of the Internet server that this <xref href=\"System.Net.ServicePoint\"></xref> object connects to.\n  overload: System.Net.ServicePoint.Address*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.Net.ServicePoint\"></xref> is in host mode.\n  platform:\n  - net462\n- uid: System.Net.ServicePoint.BindIPEndPointDelegate\n  id: BindIPEndPointDelegate\n  parent: System.Net.ServicePoint\n  langs:\n  - csharp\n  name: BindIPEndPointDelegate\n  nameWithType: ServicePoint.BindIPEndPointDelegate\n  fullName: System.Net.ServicePoint.BindIPEndPointDelegate\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Specifies the delegate to associate a local <xref:System.Net.IPEndPoint> with a <xref href=\"System.Net.ServicePoint\"></xref>.\n  remarks: Some load balancing techniques require a client to use a specific local IP address and port number, rather than <xref:System.Net.IPAddress.Any?displayProperty=fullName> (or <xref:System.Net.IPAddress.IPv6Any?displayProperty=fullName> for Internet Protocol Version 6) and an ephemeral port. Your BindIPEndPointDelegate can satisfy this requirement.\n  syntax:\n    content: public System.Net.BindIPEndPoint BindIPEndPointDelegate { get; set; }\n    return:\n      type: System.Net.BindIPEndPoint\n      description: A delegate that forces a <xref href=\"System.Net.ServicePoint\"></xref> to use a particular local Internet Protocol (IP) address and port number. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Net.ServicePoint.BindIPEndPointDelegate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.ServicePoint.Certificate\n  id: Certificate\n  parent: System.Net.ServicePoint\n  langs:\n  - csharp\n  name: Certificate\n  nameWithType: ServicePoint.Certificate\n  fullName: System.Net.ServicePoint.Certificate\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets the certificate received for this <xref href=\"System.Net.ServicePoint\"></xref> object.\n  remarks: Although a <xref:System.Net.ServicePoint> object can make multiple connections to an Internet resource, it can maintain only one certificate.\n  example:\n  - \"The following code example displays the value of this property.  \\n  \\n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_1_1.cpp)]\\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_1_1.vb)]\\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_1_1.cs)]\"\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: An instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class that contains the security certificate received for this <xref href=\"System.Net.ServicePoint\"></xref> object.\n  overload: System.Net.ServicePoint.Certificate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.ServicePoint.ClientCertificate\n  id: ClientCertificate\n  parent: System.Net.ServicePoint\n  langs:\n  - csharp\n  name: ClientCertificate\n  nameWithType: ServicePoint.ClientCertificate\n  fullName: System.Net.ServicePoint.ClientCertificate\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets the last client certificate sent to the server.\n  remarks: ''\n  example:\n  - \"The following code example displays the value of this property.  \\n  \\n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_19_1.cpp)]\\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_19_1.vb)]\\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_19_1.cs)]\"\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate { get; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object that contains the public values of the last client certificate sent to the server.\n  overload: System.Net.ServicePoint.ClientCertificate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.ServicePoint.CloseConnectionGroup(System.String)\n  id: CloseConnectionGroup(System.String)\n  parent: System.Net.ServicePoint\n  langs:\n  - csharp\n  name: CloseConnectionGroup(String)\n  nameWithType: ServicePoint.CloseConnectionGroup(String)\n  fullName: System.Net.ServicePoint.CloseConnectionGroup(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Removes the specified connection group from this <xref href=\"System.Net.ServicePoint\"></xref> object.\n  remarks: Connection groups associate a set of requests with a particular connection or set of connections. This method removes and closes all connections that belong to the specified connection group.\n  syntax:\n    content: public bool CloseConnectionGroup (string connectionGroupName);\n    parameters:\n    - id: connectionGroupName\n      type: System.String\n      description: The name of the connection group that contains the connections to close and remove from this service point.\n    return:\n      type: System.Boolean\n      description: A <xref:System.Boolean> value that indicates whether the connection group was closed.\n  overload: System.Net.ServicePoint.CloseConnectionGroup*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.ServicePoint.ConnectionLeaseTimeout\n  id: ConnectionLeaseTimeout\n  parent: System.Net.ServicePoint\n  langs:\n  - csharp\n  name: ConnectionLeaseTimeout\n  nameWithType: ServicePoint.ConnectionLeaseTimeout\n  fullName: System.Net.ServicePoint.ConnectionLeaseTimeout\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets the number of milliseconds after which an active <xref href=\"System.Net.ServicePoint\"></xref> connection is closed.\n  remarks: \"You can use this property to ensure that a <xref:System.Net.ServicePoint> object's active connections do not remain open indefinitely. This property is intended for scenarios where connections should be dropped and reestablished periodically, such as load balancing scenarios.  \\n  \\n By default, when <xref:System.Net.FtpWebRequest.KeepAlive%2A> is `true` for a request, the <xref:System.Net.ServicePoint.MaxIdleTime%2A> property sets the time-out for closing <xref:System.Net.ServicePoint> connections due to inactivity. If the <xref:System.Net.ServicePoint> has active connections, <xref:System.Net.ServicePoint.MaxIdleTime%2A> has no effect and the connections remain open indefinitely.  \\n  \\n When the ConnectionLeaseTimeout property is set to a value other than -1, and after the specified time elapses, an active <xref:System.Net.ServicePoint> connection is closed after servicing a request by setting <xref:System.Net.FtpWebRequest.KeepAlive%2A> to `false` in that request.  \\n  \\n Setting this value affects all connections managed by the <xref:System.Net.ServicePoint> object.\"\n  example:\n  - \"The following code example sets the value of this property.  \\n  \\n [!code-cs[NCLServicePoint#1](~/add/codesnippet/csharp/p-system.net.servicepoin_15_1.cs)]\\n [!code-vb[NCLServicePoint#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_15_1.vb)]\\n [!code-cpp[NCLServicePoint#1](~/add/codesnippet/cpp/p-system.net.servicepoin_15_1.cpp)]\"\n  syntax:\n    content: public int ConnectionLeaseTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: A <xref:System.Int32> that specifies the number of milliseconds that an active <xref href=\"System.Net.ServicePoint\"></xref> connection remains open. The default is -1, which allows an active <xref href=\"System.Net.ServicePoint\"></xref> connection to stay connected indefinitely. Set this property to 0 to force <xref href=\"System.Net.ServicePoint\"></xref> connections to close after servicing a request.\n  overload: System.Net.ServicePoint.ConnectionLeaseTimeout*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value specified for a set operation is a negative number less than -1.\n  platform:\n  - net462\n- uid: System.Net.ServicePoint.ConnectionLimit\n  id: ConnectionLimit\n  parent: System.Net.ServicePoint\n  langs:\n  - csharp\n  name: ConnectionLimit\n  nameWithType: ServicePoint.ConnectionLimit\n  fullName: System.Net.ServicePoint.ConnectionLimit\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets the maximum number of connections allowed on this <xref href=\"System.Net.ServicePoint\"></xref> object.\n  remarks: The ConnectionLimit property sets the maximum number of connections that the <xref:System.Net.ServicePoint> object can make to an Internet resource. The value of the ConnectionLimit property is set to the value of the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A?displayProperty=fullName> property when the <xref:System.Net.ServicePoint> object is created; subsequent changes to <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> have no effect on existing <xref:System.Net.ServicePoint> objects.\n  example:\n  - \"The following code example uses the ConnectionLimit property to check the maximum number of connections that the <xref:System.Net.ServicePoint> object can make to the specified Uniform Resource Identifier (URI).  \\n  \\n [!code-cpp[System.Net.ServicePoint#4](~/add/codesnippet/cpp/p-system.net.servicepoin_6_1.cpp)]\\n [!code-vb[System.Net.ServicePoint#4](~/add/codesnippet/visualbasic/p-system.net.servicepoin_6_1.vb)]\\n [!code-cs[System.Net.ServicePoint#4](~/add/codesnippet/csharp/p-system.net.servicepoin_6_1.cs)]\"\n  syntax:\n    content: public int ConnectionLimit { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of connections allowed on this <xref href=\"System.Net.ServicePoint\"></xref> object.\n  overload: System.Net.ServicePoint.ConnectionLimit*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The connection limit is equal to or less than 0.\n  platform:\n  - net462\n- uid: System.Net.ServicePoint.ConnectionName\n  id: ConnectionName\n  parent: System.Net.ServicePoint\n  langs:\n  - csharp\n  name: ConnectionName\n  nameWithType: ServicePoint.ConnectionName\n  fullName: System.Net.ServicePoint.ConnectionName\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets the connection name.\n  remarks: \"If the <xref:System.Net.ServicePoint> object was constructed with a <xref:System.Uri> object (the <xref:System.Net.ServicePointManager.FindServicePoint%2A> or <xref:System.Net.ServicePointManager.FindServicePoint%2A> methods, for example), then the ConnectionName property represents the <xref:System.Uri.Scheme%2A> property of the <xref:System.Uri> object used.  \\n  \\n If the <xref:System.Net.ServicePoint> object was constructed from a network host and port, the ConnectionName property contains a string that represents the host and the network port. If the ConnectionName property is set when constructed from a host and port, only <xref:System.Net.WebRequest> objects with the same <xref:System.Net.WebRequest.ConnectionGroupName%2A> value can use this <xref:System.Net.ServicePoint> object.\"\n  example:\n  - >-\n    [!code-cpp[System.Net.ServicePoint#4](~/add/codesnippet/cpp/p-system.net.servicepoin_0_1.cpp)]\n     [!code-vb[System.Net.ServicePoint#4](~/add/codesnippet/visualbasic/p-system.net.servicepoin_0_1.vb)]\n     [!code-cs[System.Net.ServicePoint#4](~/add/codesnippet/csharp/p-system.net.servicepoin_0_1.cs)]\n  syntax:\n    content: public string ConnectionName { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that represents the connection name.\n  overload: System.Net.ServicePoint.ConnectionName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.ServicePoint.CurrentConnections\n  id: CurrentConnections\n  parent: System.Net.ServicePoint\n  langs:\n  - csharp\n  name: CurrentConnections\n  nameWithType: ServicePoint.CurrentConnections\n  fullName: System.Net.ServicePoint.CurrentConnections\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets the number of open connections associated with this <xref href=\"System.Net.ServicePoint\"></xref> object.\n  remarks: The CurrentConnections property contains the number of open Internet connections associated with this <xref:System.Net.ServicePoint> object. The value of CurrentConnections cannot exceed that of <xref:System.Net.ServicePoint.ConnectionLimit%2A>.\n  example:\n  - \"The following code example uses the CurrentConnections property to determine the number of open Internet connections associated with this <xref:System.Net.ServicePoint> object.  \\n  \\n [!code-cpp[System.Net.ServicePoint#2](~/add/codesnippet/cpp/p-system.net.servicepoin_2_1.cpp)]\\n [!code-vb[System.Net.ServicePoint#2](~/add/codesnippet/visualbasic/p-system.net.servicepoin_2_1.vb)]\\n [!code-cs[System.Net.ServicePoint#2](~/add/codesnippet/csharp/p-system.net.servicepoin_2_1.cs)]\"\n  syntax:\n    content: public int CurrentConnections { get; }\n    return:\n      type: System.Int32\n      description: The number of open connections associated with this <xref href=\"System.Net.ServicePoint\"></xref> object.\n  overload: System.Net.ServicePoint.CurrentConnections*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.ServicePoint.Expect100Continue\n  id: Expect100Continue\n  parent: System.Net.ServicePoint\n  langs:\n  - csharp\n  name: Expect100Continue\n  nameWithType: ServicePoint.Expect100Continue\n  fullName: System.Net.ServicePoint.Expect100Continue\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets a <xref:System.Boolean> value that determines whether 100-Continue behavior is used.\n  remarks: \"When this property is set to `true`, client requests that use the `POST` method expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted. This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.  \\n  \\n For example, assume the Expect100Continue property is `false`. When the request is sent to the server, it includes the data. If, after reading the request headers, the server requires authentication and sends a 401 response, the client must resend the data with proper authentication headers.  \\n  \\n If the Expect100Continue property is `true`, the request headers are sent to the server. If the server has not rejected the request, it sends a 100-Continue response signaling that the data can be transmitted. If, as in the preceding example, the server requires authentication, it sends the 401 response and the client has not unnecessarily transmitted the data.  \\n  \\n Changing the value of this property does not affect existing connections. Only new connections created after the change are affected.  \\n  \\n The Expect 100-Continue behavior is fully described in IETF RFC 2616 Section 10.1.1.\"\n  example:\n  - \"The following code example displays the value of this property.  \\n  \\n [!code-cpp[System.Net.ServicePoint#9](~/add/codesnippet/cpp/p-system.net.servicepoin_4_1.cpp)]\\n [!code-vb[System.Net.ServicePoint#9](~/add/codesnippet/visualbasic/p-system.net.servicepoin_4_1.vb)]\\n [!code-cs[System.Net.ServicePoint#9](~/add/codesnippet/csharp/p-system.net.servicepoin_4_1.cs)]\"\n  syntax:\n    content: public bool Expect100Continue { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to expect 100-Continue responses for <xref uid=\"langword_csharp_POST\" name=\"POST\" href=\"\"></xref> requests; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Net.ServicePoint.Expect100Continue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.ServicePoint.IdleSince\n  id: IdleSince\n  parent: System.Net.ServicePoint\n  langs:\n  - csharp\n  name: IdleSince\n  nameWithType: ServicePoint.IdleSince\n  fullName: System.Net.ServicePoint.IdleSince\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets the date and time that the <xref href=\"System.Net.ServicePoint\"></xref> object was last connected to a host.\n  remarks: The IdleSince property records the last date and time at which a service point was disconnected from a host. When the difference between the current time and IdleSince exceeds the value of <xref:System.Net.ServicePoint.MaxIdleTime%2A>, the <xref:System.Net.ServicePoint> object is available for recycling to another connection.\n  example:\n  - \"The following code example uses the IdleSince property to set and retrieve the date and time that the <xref:System.Net.ServicePoint> object was last connected to a host.  \\n  \\n [!code-cpp[System.Net.ServicePoint#3](~/add/codesnippet/cpp/p-system.net.servicepoin_7_1.cpp)]\\n [!code-vb[System.Net.ServicePoint#3](~/add/codesnippet/visualbasic/p-system.net.servicepoin_7_1.vb)]\\n [!code-cs[System.Net.ServicePoint#3](~/add/codesnippet/csharp/p-system.net.servicepoin_7_1.cs)]\"\n  syntax:\n    content: public DateTime IdleSince { get; }\n    return:\n      type: System.DateTime\n      description: A <xref:System.DateTime> object that contains the date and time at which the <xref href=\"System.Net.ServicePoint\"></xref> object was last connected.\n  overload: System.Net.ServicePoint.IdleSince*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.ServicePoint.MaxIdleTime\n  id: MaxIdleTime\n  parent: System.Net.ServicePoint\n  langs:\n  - csharp\n  name: MaxIdleTime\n  nameWithType: ServicePoint.MaxIdleTime\n  fullName: System.Net.ServicePoint.MaxIdleTime\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets the amount of time a connection associated with the <xref href=\"System.Net.ServicePoint\"></xref> object can remain idle before the connection is closed.\n  remarks: \"You can set MaxIdleTime to <xref:System.Threading.Timeout.Infinite?displayProperty=fullName> to indicate that a connection associated with the <xref:System.Net.ServicePoint> object should never time out.  \\n  \\n The default value of the MaxIdleTime property is the value of the <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName> property when the <xref:System.Net.ServicePoint> object is created. Subsequent changes to the <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A> property have no effect on existing <xref:System.Net.ServicePoint> objects.  \\n  \\n When the MaxIdleTime for a connection associated with a <xref:System.Net.ServicePoint> is exceeded, the connection remains open until the application tries to use the connection. At that time, the Framework closes the connection and creates a new connection to the remote host.\"\n  example:\n  - \"The following code example uses the MaxIdleTime property to set and retrieve the <xref:System.Net.ServicePoint> idle time.  \\n  \\n [!code-cpp[System.Net.ServicePoint#3](~/add/codesnippet/cpp/p-system.net.servicepoin_11_1.cpp)]\\n [!code-vb[System.Net.ServicePoint#3](~/add/codesnippet/visualbasic/p-system.net.servicepoin_11_1.vb)]\\n [!code-cs[System.Net.ServicePoint#3](~/add/codesnippet/csharp/p-system.net.servicepoin_11_1.cs)]\"\n  syntax:\n    content: public int MaxIdleTime { get; set; }\n    return:\n      type: System.Int32\n      description: The length of time, in milliseconds, that a connection associated with the <xref href=\"System.Net.ServicePoint\"></xref> object can remain idle before it is closed and reused for another connection.\n  overload: System.Net.ServicePoint.MaxIdleTime*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: MaxIdleTime is set to less than &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt; or greater than &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;.\n  platform:\n  - net462\n- uid: System.Net.ServicePoint.ProtocolVersion\n  id: ProtocolVersion\n  parent: System.Net.ServicePoint\n  langs:\n  - csharp\n  name: ProtocolVersion\n  nameWithType: ServicePoint.ProtocolVersion\n  fullName: System.Net.ServicePoint.ProtocolVersion\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets the version of the HTTP protocol that the <xref href=\"System.Net.ServicePoint\"></xref> object uses.\n  remarks: The HTTP protocol versions are HTTP/1.0 and HTTP/1.1.\n  example:\n  - \"The following code example displays the value of this property.  \\n  \\n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_22_1.cpp)]\\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_22_1.vb)]\\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_22_1.cs)]\"\n  syntax:\n    content: public virtual Version ProtocolVersion { get; }\n    return:\n      type: System.Version\n      description: A <xref:System.Version> object that contains the HTTP protocol version that the <xref href=\"System.Net.ServicePoint\"></xref> object uses.\n  overload: System.Net.ServicePoint.ProtocolVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.ServicePoint.ReceiveBufferSize\n  id: ReceiveBufferSize\n  parent: System.Net.ServicePoint\n  langs:\n  - csharp\n  name: ReceiveBufferSize\n  nameWithType: ServicePoint.ReceiveBufferSize\n  fullName: System.Net.ServicePoint.ReceiveBufferSize\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets the size of the receiving buffer for the socket used by this <xref href=\"System.Net.ServicePoint\"></xref>.\n  remarks: For additional information, see <xref:System.Net.Sockets.Socket.ReceiveBufferSize%2A>.\n  example:\n  - \"The following code example sets the value of this property.  \\n  \\n [!code-cs[NCLServicePoint#1](~/add/codesnippet/csharp/p-system.net.servicepoin_9_1.cs)]\\n [!code-vb[NCLServicePoint#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_9_1.vb)]\\n [!code-cpp[NCLServicePoint#1](~/add/codesnippet/cpp/p-system.net.servicepoin_9_1.cpp)]\"\n  syntax:\n    content: public int ReceiveBufferSize { get; set; }\n    return:\n      type: System.Int32\n      description: A <xref:System.Int32> that contains the size, in bytes, of the receive buffer. The default is 8192.\n  overload: System.Net.ServicePoint.ReceiveBufferSize*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value specified for a set operation is greater than <xref:System.Int32>.\n  platform:\n  - net462\n- uid: System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)\n  id: SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)\n  parent: System.Net.ServicePoint\n  langs:\n  - csharp\n  name: SetTcpKeepAlive(Boolean,Int32,Int32)\n  nameWithType: ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)\n  fullName: System.Net.ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Enables or disables the keep-alive option on a TCP connection.\n  remarks: \"An application can request that a TCP/IP provider enable the use of keep-alive packets on a TCP connection. The default is that the use of keep-alive packets on a TCP connection is disabled.  \\n  \\n The default settings when a TCP socket is initialized sets the keep-alive timeout to 2 hours and the keep-alive interval to 1 second. The `keepAliveTime` parameter specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent. The `keepAliveInterval` parameter specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received. The number of keep-alive probes cannot be changed and is set to 10.  \\n  \\n If a TCP connection is dropped as the result of keep-alives, a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError> is returned to any calls in progress on the socket, and any subsequent calls will fail with a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError>.\"\n  syntax:\n    content: public void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);\n    parameters:\n    - id: enabled\n      type: System.Boolean\n      description: \"If set to true, then the TCP keep-alive option on a TCP connection will be enabled using the specified `keepAliveTime` and `keepAliveInterval` values.  \\n  \\n If set to false, then the TCP keep-alive option is disabled and the remaining parameters are ignored.  \\n  \\n The default value is false.\"\n    - id: keepAliveTime\n      type: System.Int32\n      description: \"Specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.  \\n  \\n The value must be greater than 0.  If a value of less than or equal to zero is passed an <xref:System.ArgumentOutOfRangeException> is thrown.\"\n    - id: keepAliveInterval\n      type: System.Int32\n      description: \"Specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.  \\n  \\n The value must be greater than 0.  If a value of less than or equal to zero is passed an <xref:System.ArgumentOutOfRangeException> is thrown.\"\n  overload: System.Net.ServicePoint.SetTcpKeepAlive*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value specified for <code>keepAliveTime</code> or <code>keepAliveInterval</code> parameter is less than or equal to 0.\n  platform:\n  - net462\n- uid: System.Net.ServicePoint.SupportsPipelining\n  id: SupportsPipelining\n  parent: System.Net.ServicePoint\n  langs:\n  - csharp\n  name: SupportsPipelining\n  nameWithType: ServicePoint.SupportsPipelining\n  fullName: System.Net.ServicePoint.SupportsPipelining\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Indicates whether the <xref href=\"System.Net.ServicePoint\"></xref> object supports pipelined connections.\n  remarks: \"Pipelining allows clients to send multiple requests across a persistent connection without waiting for each response from the server. The server sends the responses in the same order as the requests were received.  \\n  \\n Pipelining is described in detail in IETF RFC 2616 section 8.1.2.2.\"\n  example:\n  - \"The following code example displays the value of this property.  \\n  \\n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_18_1.cpp)]\\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_18_1.vb)]\\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_18_1.cs)]\"\n  syntax:\n    content: public bool SupportsPipelining { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Net.ServicePoint\"></xref> object supports pipelined connections; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.ServicePoint.SupportsPipelining*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.ServicePoint.UseNagleAlgorithm\n  id: UseNagleAlgorithm\n  parent: System.Net.ServicePoint\n  langs:\n  - csharp\n  name: UseNagleAlgorithm\n  nameWithType: ServicePoint.UseNagleAlgorithm\n  fullName: System.Net.ServicePoint.UseNagleAlgorithm\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets a <xref:System.Boolean> value that determines whether the Nagle algorithm is used on connections managed by this <xref href=\"System.Net.ServicePoint\"></xref> object.\n  remarks: \"The Nagle algorithm is used to buffer small packets of data and transmit them as a single packet. This process, referred to as \\\"nagling,\\\" is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.  \\n  \\n Changing the value of this property does not affect existing connections. Only new connections created after the change are affected.  \\n  \\n The Nagle algorithm is fully described in IETF RFC 896.\"\n  example:\n  - \"The following code example displays the value of this property.  \\n  \\n [!code-cpp[System.Net.ServicePoint#9](~/add/codesnippet/cpp/p-system.net.servicepoin_16_1.cpp)]\\n [!code-vb[System.Net.ServicePoint#9](~/add/codesnippet/visualbasic/p-system.net.servicepoin_16_1.vb)]\\n [!code-cs[System.Net.ServicePoint#9](~/add/codesnippet/csharp/p-system.net.servicepoin_16_1.cs)]\"\n  syntax:\n    content: public bool UseNagleAlgorithm { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use the Nagle algorithm; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Net.ServicePoint.UseNagleAlgorithm*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Net.ServicePoint.Address\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: Address\n  nameWithType: ServicePoint.Address\n  fullName: System.Net.ServicePoint.Address\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Net.ServicePoint.BindIPEndPointDelegate\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: BindIPEndPointDelegate\n  nameWithType: ServicePoint.BindIPEndPointDelegate\n  fullName: System.Net.ServicePoint.BindIPEndPointDelegate\n- uid: System.Net.BindIPEndPoint\n  parent: System.Net\n  isExternal: false\n  name: BindIPEndPoint\n  nameWithType: BindIPEndPoint\n  fullName: System.Net.BindIPEndPoint\n- uid: System.Net.ServicePoint.Certificate\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: Certificate\n  nameWithType: ServicePoint.Certificate\n  fullName: System.Net.ServicePoint.Certificate\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate\n  nameWithType: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n- uid: System.Net.ServicePoint.ClientCertificate\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: ClientCertificate\n  nameWithType: ServicePoint.ClientCertificate\n  fullName: System.Net.ServicePoint.ClientCertificate\n- uid: System.Net.ServicePoint.CloseConnectionGroup(System.String)\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: CloseConnectionGroup(String)\n  nameWithType: ServicePoint.CloseConnectionGroup(String)\n  fullName: System.Net.ServicePoint.CloseConnectionGroup(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.ServicePoint.ConnectionLeaseTimeout\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: ConnectionLeaseTimeout\n  nameWithType: ServicePoint.ConnectionLeaseTimeout\n  fullName: System.Net.ServicePoint.ConnectionLeaseTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.ServicePoint.ConnectionLimit\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: ConnectionLimit\n  nameWithType: ServicePoint.ConnectionLimit\n  fullName: System.Net.ServicePoint.ConnectionLimit\n- uid: System.Net.ServicePoint.ConnectionName\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: ConnectionName\n  nameWithType: ServicePoint.ConnectionName\n  fullName: System.Net.ServicePoint.ConnectionName\n- uid: System.Net.ServicePoint.CurrentConnections\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: CurrentConnections\n  nameWithType: ServicePoint.CurrentConnections\n  fullName: System.Net.ServicePoint.CurrentConnections\n- uid: System.Net.ServicePoint.Expect100Continue\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: Expect100Continue\n  nameWithType: ServicePoint.Expect100Continue\n  fullName: System.Net.ServicePoint.Expect100Continue\n- uid: System.Net.ServicePoint.IdleSince\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: IdleSince\n  nameWithType: ServicePoint.IdleSince\n  fullName: System.Net.ServicePoint.IdleSince\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Net.ServicePoint.MaxIdleTime\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: MaxIdleTime\n  nameWithType: ServicePoint.MaxIdleTime\n  fullName: System.Net.ServicePoint.MaxIdleTime\n- uid: System.Net.ServicePoint.ProtocolVersion\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: ProtocolVersion\n  nameWithType: ServicePoint.ProtocolVersion\n  fullName: System.Net.ServicePoint.ProtocolVersion\n- uid: System.Version\n  parent: System\n  isExternal: true\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Net.ServicePoint.ReceiveBufferSize\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: ReceiveBufferSize\n  nameWithType: ServicePoint.ReceiveBufferSize\n  fullName: System.Net.ServicePoint.ReceiveBufferSize\n- uid: System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: SetTcpKeepAlive(Boolean,Int32,Int32)\n  nameWithType: ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)\n  fullName: System.Net.ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)\n- uid: System.Net.ServicePoint.SupportsPipelining\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: SupportsPipelining\n  nameWithType: ServicePoint.SupportsPipelining\n  fullName: System.Net.ServicePoint.SupportsPipelining\n- uid: System.Net.ServicePoint.UseNagleAlgorithm\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: UseNagleAlgorithm\n  nameWithType: ServicePoint.UseNagleAlgorithm\n  fullName: System.Net.ServicePoint.UseNagleAlgorithm\n- uid: System.Net.ServicePoint.Address*\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: Address\n  nameWithType: ServicePoint.Address\n- uid: System.Net.ServicePoint.BindIPEndPointDelegate*\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: BindIPEndPointDelegate\n  nameWithType: ServicePoint.BindIPEndPointDelegate\n- uid: System.Net.ServicePoint.Certificate*\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: Certificate\n  nameWithType: ServicePoint.Certificate\n- uid: System.Net.ServicePoint.ClientCertificate*\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: ClientCertificate\n  nameWithType: ServicePoint.ClientCertificate\n- uid: System.Net.ServicePoint.CloseConnectionGroup*\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: CloseConnectionGroup\n  nameWithType: ServicePoint.CloseConnectionGroup\n- uid: System.Net.ServicePoint.ConnectionLeaseTimeout*\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: ConnectionLeaseTimeout\n  nameWithType: ServicePoint.ConnectionLeaseTimeout\n- uid: System.Net.ServicePoint.ConnectionLimit*\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: ConnectionLimit\n  nameWithType: ServicePoint.ConnectionLimit\n- uid: System.Net.ServicePoint.ConnectionName*\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: ConnectionName\n  nameWithType: ServicePoint.ConnectionName\n- uid: System.Net.ServicePoint.CurrentConnections*\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: CurrentConnections\n  nameWithType: ServicePoint.CurrentConnections\n- uid: System.Net.ServicePoint.Expect100Continue*\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: Expect100Continue\n  nameWithType: ServicePoint.Expect100Continue\n- uid: System.Net.ServicePoint.IdleSince*\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: IdleSince\n  nameWithType: ServicePoint.IdleSince\n- uid: System.Net.ServicePoint.MaxIdleTime*\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: MaxIdleTime\n  nameWithType: ServicePoint.MaxIdleTime\n- uid: System.Net.ServicePoint.ProtocolVersion*\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: ProtocolVersion\n  nameWithType: ServicePoint.ProtocolVersion\n- uid: System.Net.ServicePoint.ReceiveBufferSize*\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: ReceiveBufferSize\n  nameWithType: ServicePoint.ReceiveBufferSize\n- uid: System.Net.ServicePoint.SetTcpKeepAlive*\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: SetTcpKeepAlive\n  nameWithType: ServicePoint.SetTcpKeepAlive\n- uid: System.Net.ServicePoint.SupportsPipelining*\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: SupportsPipelining\n  nameWithType: ServicePoint.SupportsPipelining\n- uid: System.Net.ServicePoint.UseNagleAlgorithm*\n  parent: System.Net.ServicePoint\n  isExternal: false\n  name: UseNagleAlgorithm\n  nameWithType: ServicePoint.UseNagleAlgorithm\n"}