{"nodes":[{"pos":[781,959],"content":"Represents time in divisions, such as months, days, and years. Years are calculated using the Chinese calendar, while days and months are calculated using the lunisolar calendar.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents time in divisions, such as months, days, and years. Years are calculated using the Chinese calendar, while days and months are calculated using the lunisolar calendar.","pos":[0,178],"nodes":[{"content":"Represents time in divisions, such as months, days, and years.","pos":[0,62]},{"content":"Years are calculated using the Chinese calendar, while days and months are calculated using the lunisolar calendar.","pos":[63,178]}]}]},{"pos":[972,3205],"content":"The ChineseLunisolarCalendar class is derived from the <xref:System.Globalization.EastAsianLunisolarCalendar> class, which represents the lunisolar calendar. The <xref:System.Globalization.EastAsianLunisolarCalendar> class supports the sexagenary year cycle (which repeats every 60 years) in addition to solar years and lunar months. Each solar year in the calendar is associated with a Sexagenary Year, a Celestial Stem, and a Terrestrial Branch, and these calendars can have leap months after any month of the year. The ChineseLunisolarCalendar class calculates years based on solar calculations, and months and days based on lunar calculations.      > [!NOTE] >  For information about using the ChineseLunisolarCalendar class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/add/includes/ajax-current-ext-md.md).       A leap month can occur after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.       Currently, the ChineseLunisolarCalendar is not used by any of the cultures supported by the <xref:System.Globalization.CultureInfo> class. Therefore, this class can be used only to calculate dates in the Chinese lunisolar calendar.       Each <xref:System.Globalization.CultureInfo> object supports a set of calendars. The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture. To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> to a new <xref:System.Globalization.Calendar>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ChineseLunisolarCalendar class is derived from the &lt;xref:System.Globalization.EastAsianLunisolarCalendar&gt; class, which represents the lunisolar calendar.","pos":[0,157],"source":"The ChineseLunisolarCalendar class is derived from the <xref:System.Globalization.EastAsianLunisolarCalendar> class, which represents the lunisolar calendar."},{"content":"The &lt;xref:System.Globalization.EastAsianLunisolarCalendar&gt; class supports the sexagenary year cycle (which repeats every 60 years) in addition to solar years and lunar months.","pos":[158,333],"source":" The <xref:System.Globalization.EastAsianLunisolarCalendar> class supports the sexagenary year cycle (which repeats every 60 years) in addition to solar years and lunar months."},{"content":"Each solar year in the calendar is associated with a Sexagenary Year, a Celestial Stem, and a Terrestrial Branch, and these calendars can have leap months after any month of the year.","pos":[334,517]},{"content":"The ChineseLunisolarCalendar class calculates years based on solar calculations, and months and days based on lunar calculations.","pos":[518,647]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  For information about using the ChineseLunisolarCalendar class and the other calendar classes in the .NET Framework, see <bpt id=\"p1\">[</bpt>Working with Calendars<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[653,851],"source":"      > [!NOTE] >  For information about using the ChineseLunisolarCalendar class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/add/includes/ajax-current-ext-md.md)."},{"content":"A leap month can occur after any month in a year.","pos":[858,907]},{"content":"For example, the &lt;xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A&gt; method returns a number between 1 and 13 that indicates the month associated with a specified date.","pos":[908,1091],"source":" For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date."},{"content":"If there is a leap month between the eighth and ninth months of the year, the &lt;xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A&gt; method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.","pos":[1092,1332],"source":" If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month."},{"content":"Currently, the ChineseLunisolarCalendar is not used by any of the cultures supported by the &lt;xref:System.Globalization.CultureInfo&gt; class.","pos":[1339,1477],"source":"       Currently, the ChineseLunisolarCalendar is not used by any of the cultures supported by the <xref:System.Globalization.CultureInfo> class."},{"content":"Therefore, this class can be used only to calculate dates in the Chinese lunisolar calendar.","pos":[1478,1570]},{"content":"Each &lt;xref:System.Globalization.CultureInfo&gt; object supports a set of calendars.","pos":[1577,1657],"source":"       Each <xref:System.Globalization.CultureInfo> object supports a set of calendars."},{"content":"The &lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt; property returns the default calendar for the culture, and the &lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A&gt; property returns an array containing all the calendars supported by the culture.","pos":[1658,1918],"source":" The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture."},{"content":"To change the calendar used by a &lt;xref:System.Globalization.CultureInfo&gt;, the application should set the &lt;xref:System.Globalization.DateTimeFormatInfo.Calendar%2A&gt; property of &lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt; to a new &lt;xref:System.Globalization.Calendar&gt;.","pos":[1919,2224],"source":" To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> to a new <xref:System.Globalization.Calendar>."}]},{"pos":[5832,5939],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Globalization.ChineseLunisolarCalendar\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Globalization.ChineseLunisolarCalendar\"></xref> class."},{"pos":[6506,6630],"content":"Specifies the era that corresponds to the current <bpt id=\"p1\">&lt;xref href=\"System.Globalization.ChineseLunisolarCalendar\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Specifies the era that corresponds to the current <xref href=\"System.Globalization.ChineseLunisolarCalendar\"></xref> object."},{"pos":[6643,6776],"content":"The value of this field is 1.       The <xref:System.Globalization.ChineseLunisolarCalendar> class recognizes only the current era.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of this field is 1.       The <xref:System.Globalization.ChineseLunisolarCalendar> class recognizes only the current era.","pos":[0,131],"nodes":[{"content":"The value of this field is 1.","pos":[0,29]},{"content":"The &lt;xref:System.Globalization.ChineseLunisolarCalendar&gt; class recognizes only the current era.","pos":[36,131],"source":"       The <xref:System.Globalization.ChineseLunisolarCalendar> class recognizes only the current era."}]}]},{"pos":[6890,6902],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7439,7606],"content":"Gets the number of days in the year that precedes the year that is specified by the <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of days in the year that precedes the year that is specified by the &lt;xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*&gt;property.","pos":[0,167],"source":"Gets the number of days in the year that precedes the year that is specified by the <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>property."}]},{"pos":[7618,7664],"content":"This property returns a constant value of 384.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property returns a constant value of 384.","pos":[0,46]}]},{"pos":[7809,7951],"content":"The number of days in the year that precedes the year specified by <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of days in the year that precedes the year specified by &lt;xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*&gt;.","pos":[0,142],"source":"The number of days in the year that precedes the year specified by <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>."}]},{"pos":[8440,8601],"content":"Gets the eras that correspond to the range of dates and times supported by the current <bpt id=\"p1\">&lt;xref href=\"System.Globalization.ChineseLunisolarCalendar\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the eras that correspond to the range of dates and times supported by the current <xref href=\"System.Globalization.ChineseLunisolarCalendar\"></xref> object."},{"pos":[8719,9022],"content":"An array of 32-bit signed integers that specify the relevant eras. The return value for a <xref href=\"System.Globalization.ChineseLunisolarCalendar\"></xref> object is always an array containing one element equal to the <xref href=\"System.Globalization.ChineseLunisolarCalendar.ChineseEra\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of 32-bit signed integers that specify the relevant eras.","pos":[0,66]},{"content":"The return value for a <bpt id=\"p1\">&lt;xref href=\"System.Globalization.ChineseLunisolarCalendar\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is always an array containing one element equal to the <bpt id=\"p2\">&lt;xref href=\"System.Globalization.ChineseLunisolarCalendar.ChineseEra\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","pos":[67,303],"source":" The return value for a <xref href=\"System.Globalization.ChineseLunisolarCalendar\"></xref> object is always an array containing one element equal to the <xref href=\"System.Globalization.ChineseLunisolarCalendar.ChineseEra\"></xref> value."}]},{"pos":[9555,9635],"content":"Retrieves the era that corresponds to the specified <xref:System.DateTime> type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the era that corresponds to the specified &lt;xref:System.DateTime&gt; type.","pos":[0,80],"source":"Retrieves the era that corresponds to the specified <xref:System.DateTime> type."}]},{"pos":[9781,9821],"content":"The <xref:System.DateTime> type to read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.DateTime&gt; type to read.","pos":[0,40],"source":"The <xref:System.DateTime> type to read."}]},{"pos":[9878,9948],"content":"An integer that represents the era in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"An integer that represents the era in the <code>time</code> parameter."},{"pos":[10143,10340],"content":"<ph id=\"ph1\">&lt;code&gt;time&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref:System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime*&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>time</code> is less than <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*> or greater than <xref:System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime*>."},{"pos":[10800,10921],"content":"Gets the maximum date and time supported by the <bpt id=\"p1\">&lt;xref href=\"System.Globalization.ChineseLunisolarCalendar\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Gets the maximum date and time supported by the <xref href=\"System.Globalization.ChineseLunisolarCalendar\"></xref> class."},{"pos":[11059,11288],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.DateTime?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> type that represents the last moment on January 28, 2101 in the Gregorian calendar, which is approximately equal to the constructor <ph id=\"ph3\">`DateTime(2101, 1, 28, 23, 59, 59, 999)`</ph>.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.DateTime?displayProperty=fullName&gt; type that represents the last moment on January 28, 2101 in the Gregorian calendar, which is approximately equal to the constructor `DateTime(2101, 1, 28, 23, 59, 59, 999)`."},{"pos":[11845,11966],"content":"Gets the minimum date and time supported by the <bpt id=\"p1\">&lt;xref href=\"System.Globalization.ChineseLunisolarCalendar\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Gets the minimum date and time supported by the <xref href=\"System.Globalization.ChineseLunisolarCalendar\"></xref> class."},{"pos":[12104,12290],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.DateTime?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> type that represents February 19, 1901 in the Gregorian calendar, which is equivalent to the constructor, <ph id=\"ph3\">`DateTime(1901, 2, 19)`</ph>.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.DateTime?displayProperty=fullName&gt; type that represents February 19, 1901 in the Gregorian calendar, which is equivalent to the constructor, `DateTime(1901, 2, 19)`."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Globalization.ChineseLunisolarCalendar\n  id: ChineseLunisolarCalendar\n  children:\n  - System.Globalization.ChineseLunisolarCalendar.#ctor\n  - System.Globalization.ChineseLunisolarCalendar.ChineseEra\n  - System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  - System.Globalization.ChineseLunisolarCalendar.Eras\n  - System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)\n  - System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime\n  - System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime\n  langs:\n  - csharp\n  name: ChineseLunisolarCalendar\n  nameWithType: ChineseLunisolarCalendar\n  fullName: System.Globalization.ChineseLunisolarCalendar\n  type: Class\n  summary: Represents time in divisions, such as months, days, and years. Years are calculated using the Chinese calendar, while days and months are calculated using the lunisolar calendar.\n  remarks: \"The ChineseLunisolarCalendar class is derived from the <xref:System.Globalization.EastAsianLunisolarCalendar> class, which represents the lunisolar calendar. The <xref:System.Globalization.EastAsianLunisolarCalendar> class supports the sexagenary year cycle (which repeats every 60 years) in addition to solar years and lunar months. Each solar year in the calendar is associated with a Sexagenary Year, a Celestial Stem, and a Terrestrial Branch, and these calendars can have leap months after any month of the year. The ChineseLunisolarCalendar class calculates years based on solar calculations, and months and days based on lunar calculations.  \\n  \\n> [!NOTE]\\n>  For information about using the ChineseLunisolarCalendar class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/add/includes/ajax-current-ext-md.md).  \\n  \\n A leap month can occur after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.  \\n  \\n Currently, the ChineseLunisolarCalendar is not used by any of the cultures supported by the <xref:System.Globalization.CultureInfo> class. Therefore, this class can be used only to calculate dates in the Chinese lunisolar calendar.  \\n  \\n Each <xref:System.Globalization.CultureInfo> object supports a set of calendars. The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture. To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> to a new <xref:System.Globalization.Calendar>.\"\n  syntax:\n    content: 'public class ChineseLunisolarCalendar : System.Globalization.EastAsianLunisolarCalendar'\n  inheritance:\n  - System.Globalization.Calendar\n  - System.Globalization.EastAsianLunisolarCalendar\n  implements: []\n  inheritedMembers:\n  - System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.AlgorithmType\n  - System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax\n  platform:\n  - net462\n- uid: System.Globalization.ChineseLunisolarCalendar.#ctor\n  id: '#ctor'\n  parent: System.Globalization.ChineseLunisolarCalendar\n  langs:\n  - csharp\n  name: ChineseLunisolarCalendar()\n  nameWithType: ChineseLunisolarCalendar.ChineseLunisolarCalendar()\n  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseLunisolarCalendar()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: Initializes a new instance of the <xref href=\"System.Globalization.ChineseLunisolarCalendar\"></xref> class.\n  syntax:\n    content: public ChineseLunisolarCalendar ();\n    parameters: []\n  overload: System.Globalization.ChineseLunisolarCalendar.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Globalization.ChineseLunisolarCalendar.ChineseEra\n  id: ChineseEra\n  parent: System.Globalization.ChineseLunisolarCalendar\n  langs:\n  - csharp\n  name: ChineseEra\n  nameWithType: ChineseLunisolarCalendar.ChineseEra\n  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseEra\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: Specifies the era that corresponds to the current <xref href=\"System.Globalization.ChineseLunisolarCalendar\"></xref> object.\n  remarks: \"The value of this field is 1.  \\n  \\n The <xref:System.Globalization.ChineseLunisolarCalendar> class recognizes only the current era.\"\n  syntax:\n    content: public const int ChineseEra = 1;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  id: DaysInYearBeforeMinSupportedYear\n  parent: System.Globalization.ChineseLunisolarCalendar\n  langs:\n  - csharp\n  name: DaysInYearBeforeMinSupportedYear\n  nameWithType: ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  fullName: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: Gets the number of days in the year that precedes the year that is specified by the <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>property.\n  remarks: This property returns a constant value of 384.\n  syntax:\n    content: protected override int DaysInYearBeforeMinSupportedYear { get; }\n    return:\n      type: System.Int32\n      description: The number of days in the year that precedes the year specified by <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>.\n  overload: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Globalization.ChineseLunisolarCalendar.Eras\n  id: Eras\n  parent: System.Globalization.ChineseLunisolarCalendar\n  langs:\n  - csharp\n  name: Eras\n  nameWithType: ChineseLunisolarCalendar.Eras\n  fullName: System.Globalization.ChineseLunisolarCalendar.Eras\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: Gets the eras that correspond to the range of dates and times supported by the current <xref href=\"System.Globalization.ChineseLunisolarCalendar\"></xref> object.\n  syntax:\n    content: public override int[] Eras { get; }\n    return:\n      type: System.Int32[]\n      description: An array of 32-bit signed integers that specify the relevant eras. The return value for a <xref href=\"System.Globalization.ChineseLunisolarCalendar\"></xref> object is always an array containing one element equal to the <xref href=\"System.Globalization.ChineseLunisolarCalendar.ChineseEra\"></xref> value.\n  overload: System.Globalization.ChineseLunisolarCalendar.Eras*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)\n  id: GetEra(System.DateTime)\n  parent: System.Globalization.ChineseLunisolarCalendar\n  langs:\n  - csharp\n  name: GetEra(DateTime)\n  nameWithType: ChineseLunisolarCalendar.GetEra(DateTime)\n  fullName: System.Globalization.ChineseLunisolarCalendar.GetEra(DateTime)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: Retrieves the era that corresponds to the specified <xref:System.DateTime> type.\n  syntax:\n    content: public override int GetEra (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref:System.DateTime> type to read.\n    return:\n      type: System.Int32\n      description: An integer that represents the era in the <code>time</code> parameter.\n  overload: System.Globalization.ChineseLunisolarCalendar.GetEra*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>time</code> is less than <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*> or greater than <xref:System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime*>.\n  platform:\n  - net462\n- uid: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime\n  id: MaxSupportedDateTime\n  parent: System.Globalization.ChineseLunisolarCalendar\n  langs:\n  - csharp\n  name: MaxSupportedDateTime\n  nameWithType: ChineseLunisolarCalendar.MaxSupportedDateTime\n  fullName: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: Gets the maximum date and time supported by the <xref href=\"System.Globalization.ChineseLunisolarCalendar\"></xref> class.\n  syntax:\n    content: public override DateTime MaxSupportedDateTime { get; }\n    return:\n      type: System.DateTime\n      description: A &lt;xref:System.DateTime?displayProperty=fullName&gt; type that represents the last moment on January 28, 2101 in the Gregorian calendar, which is approximately equal to the constructor `DateTime(2101, 1, 28, 23, 59, 59, 999)`.\n  overload: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime\n  id: MinSupportedDateTime\n  parent: System.Globalization.ChineseLunisolarCalendar\n  langs:\n  - csharp\n  name: MinSupportedDateTime\n  nameWithType: ChineseLunisolarCalendar.MinSupportedDateTime\n  fullName: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: Gets the minimum date and time supported by the <xref href=\"System.Globalization.ChineseLunisolarCalendar\"></xref> class.\n  syntax:\n    content: public override DateTime MinSupportedDateTime { get; }\n    return:\n      type: System.DateTime\n      description: A &lt;xref:System.DateTime?displayProperty=fullName&gt; type that represents February 19, 1901 in the Gregorian calendar, which is equivalent to the constructor, `DateTime(1901, 2, 19)`.\n  overload: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Globalization.EastAsianLunisolarCalendar\n  isExternal: false\n  name: System.Globalization.EastAsianLunisolarCalendar\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Globalization.ChineseLunisolarCalendar.#ctor\n  parent: System.Globalization.ChineseLunisolarCalendar\n  isExternal: false\n  name: ChineseLunisolarCalendar()\n  nameWithType: ChineseLunisolarCalendar.ChineseLunisolarCalendar()\n  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseLunisolarCalendar()\n- uid: System.Globalization.ChineseLunisolarCalendar.ChineseEra\n  parent: System.Globalization.ChineseLunisolarCalendar\n  isExternal: false\n  name: ChineseEra\n  nameWithType: ChineseLunisolarCalendar.ChineseEra\n  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseEra\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  parent: System.Globalization.ChineseLunisolarCalendar\n  isExternal: false\n  name: DaysInYearBeforeMinSupportedYear\n  nameWithType: ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  fullName: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n- uid: System.Globalization.ChineseLunisolarCalendar.Eras\n  parent: System.Globalization.ChineseLunisolarCalendar\n  isExternal: false\n  name: Eras\n  nameWithType: ChineseLunisolarCalendar.Eras\n  fullName: System.Globalization.ChineseLunisolarCalendar.Eras\n- uid: System.Int32[]\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n  spec.csharp:\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: Int32[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)\n  parent: System.Globalization.ChineseLunisolarCalendar\n  isExternal: false\n  name: GetEra(DateTime)\n  nameWithType: ChineseLunisolarCalendar.GetEra(DateTime)\n  fullName: System.Globalization.ChineseLunisolarCalendar.GetEra(DateTime)\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime\n  parent: System.Globalization.ChineseLunisolarCalendar\n  isExternal: false\n  name: MaxSupportedDateTime\n  nameWithType: ChineseLunisolarCalendar.MaxSupportedDateTime\n  fullName: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime\n- uid: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime\n  parent: System.Globalization.ChineseLunisolarCalendar\n  isExternal: false\n  name: MinSupportedDateTime\n  nameWithType: ChineseLunisolarCalendar.MinSupportedDateTime\n  fullName: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime\n- uid: System.Globalization.ChineseLunisolarCalendar.#ctor*\n  parent: System.Globalization.ChineseLunisolarCalendar\n  isExternal: false\n  name: ChineseLunisolarCalendar\n  nameWithType: ChineseLunisolarCalendar.ChineseLunisolarCalendar\n- uid: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear*\n  parent: System.Globalization.ChineseLunisolarCalendar\n  isExternal: false\n  name: DaysInYearBeforeMinSupportedYear\n  nameWithType: ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n- uid: System.Globalization.ChineseLunisolarCalendar.Eras*\n  parent: System.Globalization.ChineseLunisolarCalendar\n  isExternal: false\n  name: Eras\n  nameWithType: ChineseLunisolarCalendar.Eras\n- uid: System.Globalization.ChineseLunisolarCalendar.GetEra*\n  parent: System.Globalization.ChineseLunisolarCalendar\n  isExternal: false\n  name: GetEra\n  nameWithType: ChineseLunisolarCalendar.GetEra\n- uid: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime*\n  parent: System.Globalization.ChineseLunisolarCalendar\n  isExternal: false\n  name: MaxSupportedDateTime\n  nameWithType: ChineseLunisolarCalendar.MaxSupportedDateTime\n- uid: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*\n  parent: System.Globalization.ChineseLunisolarCalendar\n  isExternal: false\n  name: MinSupportedDateTime\n  nameWithType: ChineseLunisolarCalendar.MinSupportedDateTime\n"}