{"nodes":[{"pos":[915,1027],"content":"Represents the Dispatcher when it is in a disable state and provides a means to re-enable dispatcher processing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the Dispatcher when it is in a disable state and provides a means to re-enable dispatcher processing.","pos":[0,112]}]},{"pos":[1040,1806],"content":"<xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns a DispatcherProcessingDisabled object when it is called.       Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.       The effects of disabling processing are as follows:      -   [!INCLUDE[TLA2#tla_clr#initcap](~/add/includes/tla2sharptla-clrsharpinitcap-md.md)] locks will not pump messages internally.      -   <xref:System.Windows.Threading.DispatcherFrame> objects are not allowed to be pushed.      -   Message processing is not permitted.       Calling <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> on the DispatcherProcessingDisabled object will re-enable dispatcher processing.","needQuote":false,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A&gt; returns a DispatcherProcessingDisabled object when it is called.","pos":[0,128],"source":"<xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns a DispatcherProcessingDisabled object when it is called."},{"content":"Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.","pos":[135,254]},{"content":"The effects of disabling processing are as follows:      -   <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr#initcap](~/add/includes/tla2sharptla-clrsharpinitcap-md.md)]</ph> locks will not pump messages internally.","pos":[261,446],"source":"       The effects of disabling processing are as follows:      -   [!INCLUDE[TLA2#tla_clr#initcap](~/add/includes/tla2sharptla-clrsharpinitcap-md.md)] locks will not pump messages internally."},{"content":"-   &lt;xref:System.Windows.Threading.DispatcherFrame&gt; objects are not allowed to be pushed.","pos":[452,541],"source":"      -   <xref:System.Windows.Threading.DispatcherFrame> objects are not allowed to be pushed."},{"content":"-   Message processing is not permitted.","pos":[547,587]},{"content":"Calling &lt;xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A&gt; on the DispatcherProcessingDisabled object will re-enable dispatcher processing.","pos":[594,754],"source":"       Calling <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> on the DispatcherProcessingDisabled object will re-enable dispatcher processing."}]},{"pos":[3280,3313],"content":"Re-enables dispatcher processing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Re-enables dispatcher processing.","pos":[0,33]}]},{"pos":[3326,3786],"content":"Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.       The effects of disabling processing are as follows:      -   [!INCLUDE[TLA2#tla_clr#initcap](~/add/includes/tla2sharptla-clrsharpinitcap-md.md)] locks will not pump messages internally.      -   <xref:System.Windows.Threading.DispatcherFrame> objects are not allowed to be pushed.      -   Message processing is not permitted.","needQuote":false,"needEscape":true,"nodes":[{"content":"Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.","pos":[0,119]},{"content":"The effects of disabling processing are as follows:      -   <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr#initcap](~/add/includes/tla2sharptla-clrsharpinitcap-md.md)]</ph> locks will not pump messages internally.","pos":[126,311],"source":"       The effects of disabling processing are as follows:      -   [!INCLUDE[TLA2#tla_clr#initcap](~/add/includes/tla2sharptla-clrsharpinitcap-md.md)] locks will not pump messages internally."},{"content":"-   &lt;xref:System.Windows.Threading.DispatcherFrame&gt; objects are not allowed to be pushed.","pos":[317,406],"source":"      -   <xref:System.Windows.Threading.DispatcherFrame> objects are not allowed to be pushed."},{"content":"-   Message processing is not permitted.","pos":[412,452]}]},{"pos":[4422,4636],"content":"Determines whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is equal to this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"></xref> object is equal to this <xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"></xref> object."},{"pos":[4777,4813],"content":"The object to evaluate for equality.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to evaluate for equality.","pos":[0,36]}]},{"pos":[4872,5131],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified object is equal to this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified object is equal to this <xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5676,5711],"content":"Gets a hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a hash code for this instance.","pos":[0,35]}]},{"pos":[5846,5880],"content":"A signed 32-bit integer hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A signed 32-bit integer hash code.","pos":[0,34]}]},{"pos":[6821,6937],"content":"Determines whether two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects are equal.","needQuote":true,"needEscape":true,"source":"Determines whether two <xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"></xref> objects are equal."},{"pos":[7231,7259],"content":"The first object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first object to compare.","pos":[0,28]}]},{"pos":[7361,7390],"content":"The second object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second object to compare.","pos":[0,29]}]},{"pos":[7449,7685],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects are equal; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"></xref> objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8636,8756],"content":"Determines whether two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects are not equal.","needQuote":true,"needEscape":true,"source":"Determines whether two <xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"></xref> objects are not equal."},{"pos":[9052,9080],"content":"The first object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first object to compare.","pos":[0,28]}]},{"pos":[9182,9211],"content":"The second object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second object to compare.","pos":[0,29]}]},{"pos":[9270,9510],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects are not equal; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"></xref> objects are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Threading.DispatcherProcessingDisabled\n  id: DispatcherProcessingDisabled\n  children:\n  - System.Windows.Threading.DispatcherProcessingDisabled.Dispose\n  - System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)\n  - System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode\n  - System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)\n  - System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)\n  langs:\n  - csharp\n  name: DispatcherProcessingDisabled\n  nameWithType: DispatcherProcessingDisabled\n  fullName: System.Windows.Threading.DispatcherProcessingDisabled\n  type: Struct\n  summary: Represents the Dispatcher when it is in a disable state and provides a means to re-enable dispatcher processing.\n  remarks: \"<xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns a DispatcherProcessingDisabled object when it is called.  \\n  \\n Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.  \\n  \\n The effects of disabling processing are as follows:  \\n  \\n-   [!INCLUDE[TLA2#tla_clr#initcap](~/add/includes/tla2sharptla-clrsharpinitcap-md.md)] locks will not pump messages internally.  \\n  \\n-   <xref:System.Windows.Threading.DispatcherFrame> objects are not allowed to be pushed.  \\n  \\n-   Message processing is not permitted.  \\n  \\n Calling <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> on the DispatcherProcessingDisabled object will re-enable dispatcher processing.\"\n  example:\n  - \"The following example shows how to disable dispatcher processing and re-enable dispatcher processing.  <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> is called in a **using** statement.  <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns a DispatcherProcessingDisabled structure which is used as the object to be disposed when the **using** block finishes.  Calling <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> on the DispatcherProcessingDisabled structure re-enables dispatcher processing.  \\n  \\n [!code-vb[DispatcherSnippets#DispatcherDisableProcessing](~/add/codesnippet/visualbasic/dispatchersnippets/window1.xaml.vb#dispatcherdisableprocessing)]\\n [!code-cs[DispatcherSnippets#DispatcherDisableProcessing](~/add/codesnippet/csharp/DispatcherSnippets/Window1.xaml.cs#dispatcherdisableprocessing)]\"\n  syntax:\n    content: 'public struct DispatcherProcessingDisabled : IDisposable'\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.IDisposable\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherProcessingDisabled.Dispose\n  id: Dispose\n  parent: System.Windows.Threading.DispatcherProcessingDisabled\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: DispatcherProcessingDisabled.Dispose()\n  fullName: System.Windows.Threading.DispatcherProcessingDisabled.Dispose()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Re-enables dispatcher processing.\n  remarks: \"Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.  \\n  \\n The effects of disabling processing are as follows:  \\n  \\n-   [!INCLUDE[TLA2#tla_clr#initcap](~/add/includes/tla2sharptla-clrsharpinitcap-md.md)] locks will not pump messages internally.  \\n  \\n-   <xref:System.Windows.Threading.DispatcherFrame> objects are not allowed to be pushed.  \\n  \\n-   Message processing is not permitted.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Windows.Threading.DispatcherProcessingDisabled.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Threading.DispatcherProcessingDisabled\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: DispatcherProcessingDisabled.Equals(Object)\n  fullName: System.Windows.Threading.DispatcherProcessingDisabled.Equals(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Determines whether the specified <xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"></xref> object is equal to this <xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"></xref> object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to evaluate for equality.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified object is equal to this <xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Threading.DispatcherProcessingDisabled.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Threading.DispatcherProcessingDisabled\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: DispatcherProcessingDisabled.GetHashCode()\n  fullName: System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Gets a hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A signed 32-bit integer hash code.\n  overload: System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)\n  id: op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)\n  parent: System.Windows.Threading.DispatcherProcessingDisabled\n  langs:\n  - csharp\n  name: op_Equality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)\n  nameWithType: DispatcherProcessingDisabled.op_Equality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)\n  fullName: System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Determines whether two <xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"></xref> objects are equal.\n  syntax:\n    content: public static bool op_Equality (System.Windows.Threading.DispatcherProcessingDisabled left, System.Windows.Threading.DispatcherProcessingDisabled right);\n    parameters:\n    - id: left\n      type: System.Windows.Threading.DispatcherProcessingDisabled\n      description: The first object to compare.\n    - id: right\n      type: System.Windows.Threading.DispatcherProcessingDisabled\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"></xref> objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Threading.DispatcherProcessingDisabled.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)\n  id: op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)\n  parent: System.Windows.Threading.DispatcherProcessingDisabled\n  langs:\n  - csharp\n  name: op_Inequality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)\n  nameWithType: DispatcherProcessingDisabled.op_Inequality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)\n  fullName: System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Determines whether two <xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"></xref> objects are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Threading.DispatcherProcessingDisabled left, System.Windows.Threading.DispatcherProcessingDisabled right);\n    parameters:\n    - id: left\n      type: System.Windows.Threading.DispatcherProcessingDisabled\n      description: The first object to compare.\n    - id: right\n      type: System.Windows.Threading.DispatcherProcessingDisabled\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Threading.DispatcherProcessingDisabled\"></xref> objects are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.Threading.DispatcherProcessingDisabled.Dispose\n  parent: System.Windows.Threading.DispatcherProcessingDisabled\n  isExternal: false\n  name: Dispose()\n  nameWithType: DispatcherProcessingDisabled.Dispose()\n  fullName: System.Windows.Threading.DispatcherProcessingDisabled.Dispose()\n- uid: System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)\n  parent: System.Windows.Threading.DispatcherProcessingDisabled\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DispatcherProcessingDisabled.Equals(Object)\n  fullName: System.Windows.Threading.DispatcherProcessingDisabled.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode\n  parent: System.Windows.Threading.DispatcherProcessingDisabled\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DispatcherProcessingDisabled.GetHashCode()\n  fullName: System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)\n  parent: System.Windows.Threading.DispatcherProcessingDisabled\n  isExternal: false\n  name: op_Equality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)\n  nameWithType: DispatcherProcessingDisabled.op_Equality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)\n  fullName: System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)\n- uid: System.Windows.Threading.DispatcherProcessingDisabled\n  parent: System.Windows.Threading\n  isExternal: false\n  name: DispatcherProcessingDisabled\n  nameWithType: DispatcherProcessingDisabled\n  fullName: System.Windows.Threading.DispatcherProcessingDisabled\n- uid: System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)\n  parent: System.Windows.Threading.DispatcherProcessingDisabled\n  isExternal: false\n  name: op_Inequality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)\n  nameWithType: DispatcherProcessingDisabled.op_Inequality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)\n  fullName: System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)\n- uid: System.Windows.Threading.DispatcherProcessingDisabled.Dispose*\n  parent: System.Windows.Threading.DispatcherProcessingDisabled\n  isExternal: false\n  name: Dispose\n  nameWithType: DispatcherProcessingDisabled.Dispose\n- uid: System.Windows.Threading.DispatcherProcessingDisabled.Equals*\n  parent: System.Windows.Threading.DispatcherProcessingDisabled\n  isExternal: false\n  name: Equals\n  nameWithType: DispatcherProcessingDisabled.Equals\n- uid: System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode*\n  parent: System.Windows.Threading.DispatcherProcessingDisabled\n  isExternal: false\n  name: GetHashCode\n  nameWithType: DispatcherProcessingDisabled.GetHashCode\n- uid: System.Windows.Threading.DispatcherProcessingDisabled.op_Equality*\n  parent: System.Windows.Threading.DispatcherProcessingDisabled\n  isExternal: false\n  name: op_Equality\n  nameWithType: DispatcherProcessingDisabled.op_Equality\n- uid: System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality*\n  parent: System.Windows.Threading.DispatcherProcessingDisabled\n  isExternal: false\n  name: op_Inequality\n  nameWithType: DispatcherProcessingDisabled.op_Inequality\n"}