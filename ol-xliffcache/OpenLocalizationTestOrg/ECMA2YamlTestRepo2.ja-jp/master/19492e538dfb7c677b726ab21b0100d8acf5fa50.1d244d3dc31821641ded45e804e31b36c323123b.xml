{"nodes":[{"pos":[838,931],"content":"Converts instances of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Expression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to and from other types.","needQuote":true,"needEscape":true,"source":"Converts instances of <xref href=\"System.Windows.Expression\"></xref> to and from other types."},{"pos":[944,1569],"content":"The <xref:System.Windows.Expression> type should not use a type converter pathway to convert values (should use markup extensions instead). For this reason, <xref:System.Windows.ExpressionConverter.CanConvertFrom%2A?displayProperty=fullName> and <xref:System.Windows.ExpressionConverter.CanConvertTo%2A?displayProperty=fullName> always return `false`. <xref:System.Windows.ExpressionConverter.ConvertFrom%2A?displayProperty=fullName> and <xref:System.Windows.ExpressionConverter.ConvertTo%2A?displayProperty=fullName> always throw an exception.      <a name=\"XAMLTextUsage_ExpressionConverter\"></a>    ## XAML Text Usage","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Expression&gt; type should not use a type converter pathway to convert values (should use markup extensions instead).","pos":[0,139],"source":"The <xref:System.Windows.Expression> type should not use a type converter pathway to convert values (should use markup extensions instead)."},{"content":"For this reason, &lt;xref:System.Windows.ExpressionConverter.CanConvertFrom%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.ExpressionConverter.CanConvertTo%2A?displayProperty=fullName&gt; always return <ph id=\"ph1\">`false`</ph>.","pos":[140,351],"source":" For this reason, <xref:System.Windows.ExpressionConverter.CanConvertFrom%2A?displayProperty=fullName> and <xref:System.Windows.ExpressionConverter.CanConvertTo%2A?displayProperty=fullName> always return `false`."},{"content":"&lt;xref:System.Windows.ExpressionConverter.ConvertFrom%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.ExpressionConverter.ConvertTo%2A?displayProperty=fullName&gt; always throw an exception.","pos":[352,544],"source":" <xref:System.Windows.ExpressionConverter.ConvertFrom%2A?displayProperty=fullName> and <xref:System.Windows.ExpressionConverter.ConvertTo%2A?displayProperty=fullName> always throw an exception."},{"content":"<bpt id=\"p1\">&lt;a name=\"XAMLTextUsage_ExpressionConverter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage","pos":[550,620],"source":"<a name=\"XAMLTextUsage_ExpressionConverter\"></a>    ## XAML Text Usage"}]},{"pos":[5414,5510],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.ExpressionConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.ExpressionConverter\"></xref> class."},{"pos":[6244,6368],"content":"Returns whether this converter can convert from a source object to an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Expression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns whether this converter can convert from a source object to an <xref href=\"System.Windows.Expression\"></xref> object."},{"pos":[6611,6711],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[6776,6847],"content":"A <xref:System.Type> that represents the type you wish to convert from.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type you wish to convert from.","pos":[0,71],"source":"A <xref:System.Type> that represents the type you wish to convert from."}]},{"pos":[6906,6976],"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Always <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7636,7767],"content":"Returns whether this converter can convert an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Expression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to a specific destination type.","needQuote":true,"needEscape":true,"source":"Returns whether this converter can convert an <xref href=\"System.Windows.Expression\"></xref> object to a specific destination type."},{"pos":[8013,8113],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[8183,8252],"content":"A <xref:System.Type> that represents the type you wish to convert to.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type you wish to convert to.","pos":[0,69],"source":"A <xref:System.Type> that represents the type you wish to convert to."}]},{"pos":[8311,8381],"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Always <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9146,9233],"content":"Converts the provided value to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Expression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> type.","needQuote":true,"needEscape":true,"source":"Converts the provided value to the <xref href=\"System.Windows.Expression\"></xref> type."},{"pos":[9514,9614],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[9697,9771],"content":"The <xref:System.Globalization.CultureInfo> to use as the current culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Globalization.CultureInfo&gt; to use as the current culture.","pos":[0,74],"source":"The <xref:System.Globalization.CultureInfo> to use as the current culture."}]},{"pos":[9833,9855],"content":"The object to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to convert.","pos":[0,22]}]},{"pos":[9913,10013],"content":"Always throws an exception and returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Always throws an exception and returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10806,10904],"content":"Converts the provided <bpt id=\"p1\">&lt;xref href=\"System.Windows.Expression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the specified type.","needQuote":true,"needEscape":true,"source":"Converts the provided <xref href=\"System.Windows.Expression\"></xref> object to the specified type."},{"pos":[11205,11305],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[11388,11462],"content":"The <xref:System.Globalization.CultureInfo> to use as the current culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Globalization.CultureInfo&gt; to use as the current culture.","pos":[0,74],"source":"The <xref:System.Globalization.CultureInfo> to use as the current culture."}]},{"pos":[11524,11546],"content":"The object to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to convert.","pos":[0,22]}]},{"pos":[11616,11685],"content":"A <xref:System.Type> that represents the type you wish to convert to.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type you wish to convert to.","pos":[0,69],"source":"A <xref:System.Type> that represents the type you wish to convert to."}]},{"pos":[11743,11843],"content":"Always throws an exception and returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Always throws an exception and returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.ExpressionConverter\n  id: ExpressionConverter\n  children:\n  - System.Windows.ExpressionConverter.#ctor\n  - System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: ExpressionConverter\n  nameWithType: ExpressionConverter\n  fullName: System.Windows.ExpressionConverter\n  type: Class\n  summary: Converts instances of <xref href=\"System.Windows.Expression\"></xref> to and from other types.\n  remarks: \"The <xref:System.Windows.Expression> type should not use a type converter pathway to convert values (should use markup extensions instead). For this reason, <xref:System.Windows.ExpressionConverter.CanConvertFrom%2A?displayProperty=fullName> and <xref:System.Windows.ExpressionConverter.CanConvertTo%2A?displayProperty=fullName> always return `false`. <xref:System.Windows.ExpressionConverter.ConvertFrom%2A?displayProperty=fullName> and <xref:System.Windows.ExpressionConverter.ConvertTo%2A?displayProperty=fullName> always throw an exception.  \\n  \\n<a name=\\\"XAMLTextUsage_ExpressionConverter\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: 'public class ExpressionConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.Windows.ExpressionConverter.#ctor\n  id: '#ctor'\n  parent: System.Windows.ExpressionConverter\n  langs:\n  - csharp\n  name: ExpressionConverter()\n  nameWithType: ExpressionConverter.ExpressionConverter()\n  fullName: System.Windows.ExpressionConverter.ExpressionConverter()\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.ExpressionConverter\"></xref> class.\n  syntax:\n    content: public ExpressionConverter ();\n    parameters: []\n  overload: System.Windows.ExpressionConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.ExpressionConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: ExpressionConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Windows.ExpressionConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Returns whether this converter can convert from a source object to an <xref href=\"System.Windows.Expression\"></xref> object.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: sourceType\n      type: System.Type\n      description: A <xref:System.Type> that represents the type you wish to convert from.\n    return:\n      type: System.Boolean\n      description: Always <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.ExpressionConverter.CanConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.ExpressionConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: ExpressionConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.ExpressionConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Returns whether this converter can convert an <xref href=\"System.Windows.Expression\"></xref> object to a specific destination type.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: destinationType\n      type: System.Type\n      description: A <xref:System.Type> that represents the type you wish to convert to.\n    return:\n      type: System.Boolean\n      description: Always <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.ExpressionConverter.CanConvertTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.ExpressionConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: ExpressionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Windows.ExpressionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Converts the provided value to the <xref href=\"System.Windows.Expression\"></xref> type.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The <xref:System.Globalization.CultureInfo> to use as the current culture.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Object\n      description: Always throws an exception and returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.ExpressionConverter.ConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.ExpressionConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: ExpressionConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.ExpressionConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Converts the provided <xref href=\"System.Windows.Expression\"></xref> object to the specified type.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The <xref:System.Globalization.CultureInfo> to use as the current culture.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    - id: destinationType\n      type: System.Type\n      description: A <xref:System.Type> that represents the type you wish to convert to.\n    return:\n      type: System.Object\n      description: Always throws an exception and returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.ExpressionConverter.ConvertTo*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.Windows.ExpressionConverter.#ctor\n  parent: System.Windows.ExpressionConverter\n  isExternal: false\n  name: ExpressionConverter()\n  nameWithType: ExpressionConverter.ExpressionConverter()\n  fullName: System.Windows.ExpressionConverter.ExpressionConverter()\n- uid: System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.ExpressionConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: ExpressionConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Windows.ExpressionConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.ExpressionConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: ExpressionConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.ExpressionConverter.CanConvertTo(ITypeDescriptorContext,Type)\n- uid: System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.ExpressionConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: ExpressionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Windows.ExpressionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.ExpressionConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: ExpressionConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.ExpressionConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n- uid: System.Windows.ExpressionConverter.#ctor*\n  parent: System.Windows.ExpressionConverter\n  isExternal: false\n  name: ExpressionConverter\n  nameWithType: ExpressionConverter.ExpressionConverter\n- uid: System.Windows.ExpressionConverter.CanConvertFrom*\n  parent: System.Windows.ExpressionConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: ExpressionConverter.CanConvertFrom\n- uid: System.Windows.ExpressionConverter.CanConvertTo*\n  parent: System.Windows.ExpressionConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: ExpressionConverter.CanConvertTo\n- uid: System.Windows.ExpressionConverter.ConvertFrom*\n  parent: System.Windows.ExpressionConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: ExpressionConverter.ConvertFrom\n- uid: System.Windows.ExpressionConverter.ConvertTo*\n  parent: System.Windows.ExpressionConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: ExpressionConverter.ConvertTo\n"}