{"nodes":[{"pos":[726,776],"content":"Represents a compressed file within a zip archive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a compressed file within a zip archive.","pos":[0,50]}]},{"pos":[789,3299],"content":"A zip archive contains an entry for each compressed file. The ZipArchiveEntry class enables you to examine the properties of an entry, and open or delete the entry. When you open an entry, you can modify the compressed file by writing to the stream for that compressed file.       The methods for manipulating zip archives and their file entries are spread across three classes: <xref:System.IO.Compression.ZipFile>, <xref:System.IO.Compression.ZipArchive> and ZipArchiveEntry.      |To…|Use…|   |---------|----------|   |Create a zip archive from a directory|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName>|   |Extract the contents of a zip archive to a directory|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName>|   |Add new files to an existing zip archive|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName>|   |Retrieve an file in a zip archive|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName>|   |Retrieve all of the files in a zip archive|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName>|   |To open a stream to an individual file contained in a zip archive|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName>|   |Delete a file from a zip archive|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName>|       If you reference the `System.IO.Compression.FileSystem` assembly in your project, you can access two extension methods for the ZipArchiveEntry class. Those methods are <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29> and <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>, and they enable you to decompress the contents of the entry to a file. The `System.IO.Compression.FileSystem` assembly is not available in [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)]. In [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] apps, you can decompress the contents of an archive by using <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream>, or you can use the [!INCLUDE[wrt](~/add/includes/wrt-md.md)] types [Compressor](http://go.microsoft.com/fwlink/p/?LinkId=246357) and [Decompressor](http://go.microsoft.com/fwlink/?LinkId=246358) to compress and decompress files.","needQuote":false,"needEscape":true,"nodes":[{"content":"A zip archive contains an entry for each compressed file.","pos":[0,57]},{"content":"The ZipArchiveEntry class enables you to examine the properties of an entry, and open or delete the entry.","pos":[58,164]},{"content":"When you open an entry, you can modify the compressed file by writing to the stream for that compressed file.","pos":[165,274]},{"content":"The methods for manipulating zip archives and their file entries are spread across three classes: &lt;xref:System.IO.Compression.ZipFile&gt;, &lt;xref:System.IO.Compression.ZipArchive&gt; and ZipArchiveEntry.","pos":[281,477],"source":"       The methods for manipulating zip archives and their file entries are spread across three classes: <xref:System.IO.Compression.ZipFile>, <xref:System.IO.Compression.ZipArchive> and ZipArchiveEntry."},{"content":"|To…|Use…|   |---------|----------|   |Create a zip archive from a directory|&lt;xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName&gt;|   |Extract the contents of a zip archive to a directory|&lt;xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName&gt;|   |Add new files to an existing zip archive|&lt;xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName&gt;|   |Retrieve an file in a zip archive|&lt;xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName&gt;|   |Retrieve all of the files in a zip archive|&lt;xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName&gt;|   |To open a stream to an individual file contained in a zip archive|&lt;xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName&gt;|   |Delete a file from a zip archive|&lt;xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName&gt;|       If you reference the <ph id=\"ph1\">`System.IO.Compression.FileSystem`</ph> assembly in your project, you can access two extension methods for the ZipArchiveEntry class.","pos":[483,1570],"source":"      |To…|Use…|   |---------|----------|   |Create a zip archive from a directory|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName>|   |Extract the contents of a zip archive to a directory|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName>|   |Add new files to an existing zip archive|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName>|   |Retrieve an file in a zip archive|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName>|   |Retrieve all of the files in a zip archive|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName>|   |To open a stream to an individual file contained in a zip archive|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName>|   |Delete a file from a zip archive|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName>|       If you reference the `System.IO.Compression.FileSystem` assembly in your project, you can access two extension methods for the ZipArchiveEntry class."},{"content":"Those methods are &lt;xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29&gt; and &lt;xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29&gt;, and they enable you to decompress the contents of the entry to a file.","pos":[1571,1921],"source":" Those methods are <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29> and <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>, and they enable you to decompress the contents of the entry to a file."},{"content":"The <ph id=\"ph1\">`System.IO.Compression.FileSystem`</ph> assembly is not available in <ph id=\"ph2\">[!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)]</ph>.","pos":[1922,2046],"source":" The `System.IO.Compression.FileSystem` assembly is not available in [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)]."},{"content":"In <ph id=\"ph1\">[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]</ph> apps, you can decompress the contents of an archive by using &lt;xref:System.IO.Compression.DeflateStream&gt; or &lt;xref:System.IO.Compression.GZipStream&gt;, or you can use the <ph id=\"ph2\">[!INCLUDE[wrt](~/add/includes/wrt-md.md)]</ph> types <bpt id=\"p1\">[</bpt>Compressor<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?LinkId=246357)</ept> and <bpt id=\"p2\">[</bpt>Decompressor<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkId=246358)</ept> to compress and decompress files.","pos":[2047,2496],"source":" In [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] apps, you can decompress the contents of an archive by using <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream>, or you can use the [!INCLUDE[wrt](~/add/includes/wrt-md.md)] types [Compressor](http://go.microsoft.com/fwlink/p/?LinkId=246357) and [Decompressor](http://go.microsoft.com/fwlink/?LinkId=246358) to compress and decompress files."}]},{"pos":[4654,4701],"content":"Gets the zip archive that the entry belongs to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the zip archive that the entry belongs to.","pos":[0,47]}]},{"pos":[4858,4995],"content":"The zip archive that the entry belongs to, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the entry has been deleted.","needQuote":true,"needEscape":true,"source":"The zip archive that the entry belongs to, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the entry has been deleted."},{"pos":[5492,5549],"content":"Gets the compressed size of the entry in the zip archive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the compressed size of the entry in the zip archive.","pos":[0,57]}]},{"pos":[5561,5760],"content":"This property cannot be retrieved when the mode is set to <xref:System.IO.Compression.ZipArchiveMode>, or the mode is set to <xref:System.IO.Compression.ZipArchiveMode> and the entry has been opened.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property cannot be retrieved when the mode is set to &lt;xref:System.IO.Compression.ZipArchiveMode&gt;, or the mode is set to &lt;xref:System.IO.Compression.ZipArchiveMode&gt; and the entry has been opened.","pos":[0,199],"source":"This property cannot be retrieved when the mode is set to <xref:System.IO.Compression.ZipArchiveMode>, or the mode is set to <xref:System.IO.Compression.ZipArchiveMode> and the entry has been opened."}]},{"pos":[6494,6546],"content":"The compressed size of the entry in the zip archive.","needQuote":true,"needEscape":true,"nodes":[{"content":"The compressed size of the entry in the zip archive.","pos":[0,52]}]},{"pos":[6739,6818],"content":"The value of the property is not available because the entry has been modified.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the property is not available because the entry has been modified.","pos":[0,79]}]},{"pos":[7193,7232],"content":"Deletes the entry from the zip archive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes the entry from the zip archive.","pos":[0,39]}]},{"pos":[7458,7507],"content":"The entry is already open for reading or writing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The entry is already open for reading or writing.","pos":[0,49]}]},{"pos":[7610,7731],"content":"The zip archive for this entry was opened in a mode other than <bpt id=\"p1\">&lt;xref href=\"System.IO.Compression.ZipArchiveMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The zip archive for this entry was opened in a mode other than <xref href=\"System.IO.Compression.ZipArchiveMode\"></xref>."},{"pos":[7838,7887],"content":"The zip archive for this entry has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zip archive for this entry has been disposed.","pos":[0,49]}]},{"pos":[8268,8323],"content":"Gets the relative path of the entry in the zip archive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the relative path of the entry in the zip archive.","pos":[0,55]}]},{"pos":[9948,9998],"content":"The relative path of the entry in the zip archive.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relative path of the entry in the zip archive.","pos":[0,50]}]},{"pos":[10481,10549],"content":"Gets or sets the last time the entry in the zip archive was changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the last time the entry in the zip archive was changed.","pos":[0,68]}]},{"pos":[10562,11630],"content":"When you create a new entry from an existing file by calling the <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> method, the LastWriteTime property for the entry is automatically set to the last time the file was modified. When you create a new entry programmatically by calling the <xref:System.IO.Compression.ZipArchive.CreateEntry%2A> method, the LastWriteTime property for the entry is automatically set to the time of execution. If you modify the entry, you must explicitly set the LastWriteTime property if you want the value to reflect the time of the latest change.       When you set this property, the <xref:System.DateTimeOffset> value is converted to a timestamp format that is specific to zip archives. This format supports a resolution of two seconds. The earliest permitted value is 1980 January 1 0:00:00 (midnight). The latest permitted value is 2107 December 31 23:59:58 (one second before midnight). If the value for the last write time is not valid, the property returns a default value of 1980 January 1 0:00:00 (midnight).","needQuote":false,"needEscape":true,"nodes":[{"content":"When you create a new entry from an existing file by calling the <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> method, the LastWriteTime property for the entry is automatically set to the last time the file was modified. When you create a new entry programmatically by calling the <xref:System.IO.Compression.ZipArchive.CreateEntry%2A> method, the LastWriteTime property for the entry is automatically set to the time of execution. If you modify the entry, you must explicitly set the LastWriteTime property if you want the value to reflect the time of the latest change.       When you set this property, the <xref:System.DateTimeOffset> value is converted to a timestamp format that is specific to zip archives. This format supports a resolution of two seconds. The earliest permitted value is 1980 January 1 0:00:00 (midnight). The latest permitted value is 2107 December 31 23:59:58 (one second before midnight). If the value for the last write time is not valid, the property returns a default value of 1980 January 1 0:00:00 (midnight).","pos":[0,1066],"nodes":[{"content":"When you create a new entry from an existing file by calling the &lt;xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A&gt; method, the LastWriteTime property for the entry is automatically set to the last time the file was modified.","pos":[0,244],"source":"When you create a new entry from an existing file by calling the <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> method, the LastWriteTime property for the entry is automatically set to the last time the file was modified."},{"content":"When you create a new entry programmatically by calling the &lt;xref:System.IO.Compression.ZipArchive.CreateEntry%2A&gt; method, the LastWriteTime property for the entry is automatically set to the time of execution.","pos":[245,455],"source":" When you create a new entry programmatically by calling the <xref:System.IO.Compression.ZipArchive.CreateEntry%2A> method, the LastWriteTime property for the entry is automatically set to the time of execution."},{"content":"If you modify the entry, you must explicitly set the LastWriteTime property if you want the value to reflect the time of the latest change.","pos":[456,595]},{"content":"When you set this property, the &lt;xref:System.DateTimeOffset&gt; value is converted to a timestamp format that is specific to zip archives.","pos":[602,737],"source":"       When you set this property, the <xref:System.DateTimeOffset> value is converted to a timestamp format that is specific to zip archives."},{"content":"This format supports a resolution of two seconds.","pos":[738,787]},{"content":"The earliest permitted value is 1980 January 1 0:00:00 (midnight).","pos":[788,854]},{"content":"The latest permitted value is 2107 December 31 23:59:58 (one second before midnight).","pos":[855,940]},{"content":"If the value for the last write time is not valid, the property returns a default value of 1980 January 1 0:00:00 (midnight).","pos":[941,1066]}]}]},{"pos":[12156,12211],"content":"The last time the entry in the zip archive was changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The last time the entry in the zip archive was changed.","pos":[0,55]}]},{"pos":[12393,12541],"content":"The attempt to set this property failed, because the zip archive for the entry is in <bpt id=\"p1\">&lt;xref href=\"System.IO.Compression.ZipArchiveMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> mode.","needQuote":true,"needEscape":true,"source":"The attempt to set this property failed, because the zip archive for the entry is in <xref href=\"System.IO.Compression.ZipArchiveMode\"></xref> mode."},{"pos":[12977,13160],"content":"An attempt was made to set this property to a value that is either earlier than 1980 January 1 0:00:00 (midnight) or later than 2107 December 31 23:59:58 (one second before midnight).","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to set this property to a value that is either earlier than 1980 January 1 0:00:00 (midnight) or later than 2107 December 31 23:59:58 (one second before midnight).","pos":[0,183]}]},{"pos":[13531,13590],"content":"Gets the uncompressed size of the entry in the zip archive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the uncompressed size of the entry in the zip archive.","pos":[0,59]}]},{"pos":[13602,13801],"content":"This property cannot be retrieved when the mode is set to <xref:System.IO.Compression.ZipArchiveMode>, or the mode is set to <xref:System.IO.Compression.ZipArchiveMode> and the entry has been opened.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property cannot be retrieved when the mode is set to &lt;xref:System.IO.Compression.ZipArchiveMode&gt;, or the mode is set to &lt;xref:System.IO.Compression.ZipArchiveMode&gt; and the entry has been opened.","pos":[0,199],"source":"This property cannot be retrieved when the mode is set to <xref:System.IO.Compression.ZipArchiveMode>, or the mode is set to <xref:System.IO.Compression.ZipArchiveMode> and the entry has been opened."}]},{"pos":[14527,14581],"content":"The uncompressed size of the entry in the zip archive.","needQuote":true,"needEscape":true,"nodes":[{"content":"The uncompressed size of the entry in the zip archive.","pos":[0,54]}]},{"pos":[14764,14843],"content":"The value of the property is not available because the entry has been modified.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the property is not available because the entry has been modified.","pos":[0,79]}]},{"pos":[15204,15255],"content":"Gets the file name of the entry in the zip archive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the file name of the entry in the zip archive.","pos":[0,51]}]},{"pos":[15267,16058],"content":"The Name property contains the portion of the <xref:System.IO.Compression.ZipArchiveEntry.FullName%2A> property that follows the final directory separator character (\\\\), and does not include the subdirectory hierarchy. For example, if you create two entries in a zip archive by using the <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> method and provide `NewEntry.txt` as the name for the first entry and `AddedFolder\\ ewEntry.txt` for the second entry, both entries will have `NewEntry.txt` in the Name property. The first entry will also have `NewEntry.txt` in the <xref:System.IO.Compression.ZipArchiveEntry.FullName%2A> property, but the second entry will have `AddedFolder\\ ewEntry.txt` in the <xref:System.IO.Compression.ZipArchiveEntry.FullName%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Name property contains the portion of the &lt;xref:System.IO.Compression.ZipArchiveEntry.FullName%2A&gt; property that follows the final directory separator character (<ph id=\"ph1\">\\\\</ph>), and does not include the subdirectory hierarchy.","pos":[0,219],"source":"The Name property contains the portion of the <xref:System.IO.Compression.ZipArchiveEntry.FullName%2A> property that follows the final directory separator character (\\\\), and does not include the subdirectory hierarchy."},{"content":"For example, if you create two entries in a zip archive by using the &lt;xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A&gt; method and provide <ph id=\"ph1\">`NewEntry.txt`</ph> as the name for the first entry and <ph id=\"ph2\">`AddedFolder\\ ewEntry.txt`</ph> for the second entry, both entries will have <ph id=\"ph3\">`NewEntry.txt`</ph> in the Name property.","pos":[220,537],"source":" For example, if you create two entries in a zip archive by using the <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> method and provide `NewEntry.txt` as the name for the first entry and `AddedFolder\\ ewEntry.txt` for the second entry, both entries will have `NewEntry.txt` in the Name property."},{"content":"The first entry will also have <ph id=\"ph1\">`NewEntry.txt`</ph> in the &lt;xref:System.IO.Compression.ZipArchiveEntry.FullName%2A&gt; property, but the second entry will have <ph id=\"ph2\">`AddedFolder\\ ewEntry.txt`</ph> in the &lt;xref:System.IO.Compression.ZipArchiveEntry.FullName%2A&gt; property.","pos":[538,789],"source":" The first entry will also have `NewEntry.txt` in the <xref:System.IO.Compression.ZipArchiveEntry.FullName%2A> property, but the second entry will have `AddedFolder\\ ewEntry.txt` in the <xref:System.IO.Compression.ZipArchiveEntry.FullName%2A> property."}]},{"pos":[16784,16830],"content":"The file name of the entry in the zip archive.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file name of the entry in the zip archive.","pos":[0,46]}]},{"pos":[17268,17305],"content":"Opens the entry from the zip archive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Opens the entry from the zip archive.","pos":[0,37]}]},{"pos":[17317,17561],"content":"You use this method to access the stream for an entry in a zip archive. After retrieving the stream, you can read from or write to the stream. When you write to the stream, the modifications you make to the entry will appear in the zip archive.","needQuote":true,"needEscape":true,"nodes":[{"content":"You use this method to access the stream for an entry in a zip archive. After retrieving the stream, you can read from or write to the stream. When you write to the stream, the modifications you make to the entry will appear in the zip archive.","pos":[0,244],"nodes":[{"content":"You use this method to access the stream for an entry in a zip archive.","pos":[0,71]},{"content":"After retrieving the stream, you can read from or write to the stream.","pos":[72,142]},{"content":"When you write to the stream, the modifications you make to the entry will appear in the zip archive.","pos":[143,244]}]}]},{"pos":[18057,18110],"content":"The stream that represents the contents of the entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"The stream that represents the contents of the entry.","pos":[0,53]}]},{"pos":[18270,18562],"content":"The entry is already currently open for writing.       -or-       The entry has been deleted from the archive.       -or-       The archive for this entry was opened with the <xref href=\"System.IO.Compression.ZipArchiveMode\"></xref> mode, and this entry has already been written to.","needQuote":false,"needEscape":true,"nodes":[{"content":"The entry is already currently open for writing.","pos":[0,48]},{"content":"-or-       The entry has been deleted from the archive.","pos":[55,110]},{"content":"-or-       The archive for this entry was opened with the <bpt id=\"p1\">&lt;xref href=\"System.IO.Compression.ZipArchiveMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> mode, and this entry has already been written to.","pos":[117,282],"source":"       -or-       The archive for this entry was opened with the <xref href=\"System.IO.Compression.ZipArchiveMode\"></xref> mode, and this entry has already been written to."}]},{"pos":[18671,18853],"content":"The entry is either missing from the archive or is corrupt and cannot be read.       -or-       The entry has been compressed by using a compression method that is not supported.","needQuote":false,"needEscape":true,"nodes":[{"content":"The entry is either missing from the archive or is corrupt and cannot be read.       -or-       The entry has been compressed by using a compression method that is not supported.","pos":[0,178],"nodes":[{"content":"The entry is either missing from the archive or is corrupt and cannot be read.","pos":[0,78]},{"content":"-or-       The entry has been compressed by using a compression method that is not supported.","pos":[85,178]}]}]},{"pos":[18961,19010],"content":"The zip archive for this entry has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zip archive for this entry has been disposed.","pos":[0,49]}]},{"pos":[19395,19455],"content":"Retrieves the relative path of the entry in the zip archive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the relative path of the entry in the zip archive.","pos":[0,60]}]},{"pos":[19591,19720],"content":"The relative path of the entry, which is the value stored in the <xref:System.IO.Compression.ZipArchiveEntry.FullName*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relative path of the entry, which is the value stored in the &lt;xref:System.IO.Compression.ZipArchiveEntry.FullName*&gt; property.","pos":[0,129],"source":"The relative path of the entry, which is the value stored in the <xref:System.IO.Compression.ZipArchiveEntry.FullName*> property."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Compression.ZipArchiveEntry\n  id: ZipArchiveEntry\n  children:\n  - System.IO.Compression.ZipArchiveEntry.Archive\n  - System.IO.Compression.ZipArchiveEntry.CompressedLength\n  - System.IO.Compression.ZipArchiveEntry.Delete\n  - System.IO.Compression.ZipArchiveEntry.FullName\n  - System.IO.Compression.ZipArchiveEntry.LastWriteTime\n  - System.IO.Compression.ZipArchiveEntry.Length\n  - System.IO.Compression.ZipArchiveEntry.Name\n  - System.IO.Compression.ZipArchiveEntry.Open\n  - System.IO.Compression.ZipArchiveEntry.ToString\n  langs:\n  - csharp\n  name: ZipArchiveEntry\n  nameWithType: ZipArchiveEntry\n  fullName: System.IO.Compression.ZipArchiveEntry\n  type: Class\n  summary: Represents a compressed file within a zip archive.\n  remarks: \"A zip archive contains an entry for each compressed file. The ZipArchiveEntry class enables you to examine the properties of an entry, and open or delete the entry. When you open an entry, you can modify the compressed file by writing to the stream for that compressed file.  \\n  \\n The methods for manipulating zip archives and their file entries are spread across three classes: <xref:System.IO.Compression.ZipFile>, <xref:System.IO.Compression.ZipArchive> and ZipArchiveEntry.  \\n  \\n|To…|Use…|  \\n|---------|----------|  \\n|Create a zip archive from a directory|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName>|  \\n|Extract the contents of a zip archive to a directory|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName>|  \\n|Add new files to an existing zip archive|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName>|  \\n|Retrieve an file in a zip archive|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName>|  \\n|Retrieve all of the files in a zip archive|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName>|  \\n|To open a stream to an individual file contained in a zip archive|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName>|  \\n|Delete a file from a zip archive|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName>|  \\n  \\n If you reference the `System.IO.Compression.FileSystem` assembly in your project, you can access two extension methods for the ZipArchiveEntry class. Those methods are <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29> and <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>, and they enable you to decompress the contents of the entry to a file. The `System.IO.Compression.FileSystem` assembly is not available in [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)]. In [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] apps, you can decompress the contents of an archive by using <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream>, or you can use the [!INCLUDE[wrt](~/add/includes/wrt-md.md)] types [Compressor](http://go.microsoft.com/fwlink/p/?LinkId=246357) and [Decompressor](http://go.microsoft.com/fwlink/?LinkId=246358) to compress and decompress files.\"\n  example:\n  - \"The first example shows how to create a new entry in a zip archive and write to it.  \\n  \\n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/t-system.io.compression._4_1.cs)]\\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/t-system.io.compression._4_1.vb)]  \\n  \\n The second example shows how to use the <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29> extension method. You must reference the `System.IO.Compression.FileSystem` assembly in your project for the code to execute.  \\n  \\n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/t-system.io.compression._4_2.cs)]\\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/t-system.io.compression._4_2.vb)]\"\n  syntax:\n    content: public class ZipArchiveEntry\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IO.Compression.ZipArchiveEntry.Archive\n  id: Archive\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  name: Archive\n  nameWithType: ZipArchiveEntry.Archive\n  fullName: System.IO.Compression.ZipArchiveEntry.Archive\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: Gets the zip archive that the entry belongs to.\n  syntax:\n    content: public System.IO.Compression.ZipArchive Archive { get; }\n    return:\n      type: System.IO.Compression.ZipArchive\n      description: The zip archive that the entry belongs to, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the entry has been deleted.\n  overload: System.IO.Compression.ZipArchiveEntry.Archive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength\n  id: CompressedLength\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  name: CompressedLength\n  nameWithType: ZipArchiveEntry.CompressedLength\n  fullName: System.IO.Compression.ZipArchiveEntry.CompressedLength\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: Gets the compressed size of the entry in the zip archive.\n  remarks: This property cannot be retrieved when the mode is set to <xref:System.IO.Compression.ZipArchiveMode>, or the mode is set to <xref:System.IO.Compression.ZipArchiveMode> and the entry has been opened.\n  example:\n  - \"The following example shows how to retrieve entries in a zip archive, and evaluate the properties of the entries. It uses the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property to display the name of the entry, and the <xref:System.IO.Compression.ZipArchiveEntry.Length%2A> and CompressedLength properties to calculate how much the file was compressed.  \\n  \\n [!code-cs[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/csharp/p-system.io.compression._2_1.cs)]\\n [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/visualbasic/p-system.io.compression._2_1.vb)]\"\n  syntax:\n    content: public long CompressedLength { get; }\n    return:\n      type: System.Int64\n      description: The compressed size of the entry in the zip archive.\n  overload: System.IO.Compression.ZipArchiveEntry.CompressedLength*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The value of the property is not available because the entry has been modified.\n  platform:\n  - net462\n- uid: System.IO.Compression.ZipArchiveEntry.Delete\n  id: Delete\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  name: Delete()\n  nameWithType: ZipArchiveEntry.Delete()\n  fullName: System.IO.Compression.ZipArchiveEntry.Delete()\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: Deletes the entry from the zip archive.\n  syntax:\n    content: public void Delete ();\n    parameters: []\n  overload: System.IO.Compression.ZipArchiveEntry.Delete*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The entry is already open for reading or writing.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The zip archive for this entry was opened in a mode other than <xref href=\"System.IO.Compression.ZipArchiveMode\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The zip archive for this entry has been disposed.\n  platform:\n  - net462\n- uid: System.IO.Compression.ZipArchiveEntry.FullName\n  id: FullName\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  name: FullName\n  nameWithType: ZipArchiveEntry.FullName\n  fullName: System.IO.Compression.ZipArchiveEntry.FullName\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: Gets the relative path of the entry in the zip archive.\n  remarks: \"The FullName property contains the relative path, including the subdirectory hierarchy, of an entry in a zip archive. (In contrast, the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property contains only the name of the entry and does not include the subdirectory hierarchy.) For example, if you create two entries in a zip archive by using the <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> method and provide `NewEntry.txt` as the name for the first entry and `AddedFolder\\\\\\\\NewEntry.txt` for the second entry, both entries will have `NewEntry.txt` in the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property. The first entry will also have `NewEntry.txt` in the FullName property, but the second entry will have `AddedFolder\\\\\\\\NewEntry.txt` in the FullName property.  \\n  \\n You can specify any string as the path of an entry, including strings that specify invalid and absolute paths. Therefore, the FullName property might contain a value that is not correctly formatted. An invalid or absolute path might result in an exception when you extract the contents of the zip archive.\"\n  example:\n  - \"The following example shows how to iterate through the contents of a .zip file, and extract files that contain the .txt extension.  \\n  \\n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/p-system.io.compression._0_1.cs)]\\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/p-system.io.compression._0_1.vb)]\"\n  syntax:\n    content: public string FullName { get; }\n    return:\n      type: System.String\n      description: The relative path of the entry in the zip archive.\n  overload: System.IO.Compression.ZipArchiveEntry.FullName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime\n  id: LastWriteTime\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  name: LastWriteTime\n  nameWithType: ZipArchiveEntry.LastWriteTime\n  fullName: System.IO.Compression.ZipArchiveEntry.LastWriteTime\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: Gets or sets the last time the entry in the zip archive was changed.\n  remarks: \"When you create a new entry from an existing file by calling the <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> method, the LastWriteTime property for the entry is automatically set to the last time the file was modified. When you create a new entry programmatically by calling the <xref:System.IO.Compression.ZipArchive.CreateEntry%2A> method, the LastWriteTime property for the entry is automatically set to the time of execution. If you modify the entry, you must explicitly set the LastWriteTime property if you want the value to reflect the time of the latest change.  \\n  \\n When you set this property, the <xref:System.DateTimeOffset> value is converted to a timestamp format that is specific to zip archives. This format supports a resolution of two seconds. The earliest permitted value is 1980 January 1 0:00:00 (midnight). The latest permitted value is 2107 December 31 23:59:58 (one second before midnight). If the value for the last write time is not valid, the property returns a default value of 1980 January 1 0:00:00 (midnight).\"\n  example:\n  - \"The following example shows how to open an entry in a zip archive, modify it, and set the LastWriteTime property to the current time.  \\n  \\n [!code-cs[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/csharp/p-system.io.compression._3_1.cs)]\\n [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/visualbasic/p-system.io.compression._3_1.vb)]\"\n  syntax:\n    content: public DateTimeOffset LastWriteTime { get; set; }\n    return:\n      type: System.DateTimeOffset\n      description: The last time the entry in the zip archive was changed.\n  overload: System.IO.Compression.ZipArchiveEntry.LastWriteTime*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The attempt to set this property failed, because the zip archive for the entry is in <xref href=\"System.IO.Compression.ZipArchiveMode\"></xref> mode.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The archive mode is set to <xref href=\\\"System.IO.Compression.ZipArchiveMode\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n The archive mode is set to <xref href=\\\"System.IO.Compression.ZipArchiveMode\\\"></xref> and the entry has been opened.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: An attempt was made to set this property to a value that is either earlier than 1980 January 1 0:00:00 (midnight) or later than 2107 December 31 23:59:58 (one second before midnight).\n  platform:\n  - net462\n- uid: System.IO.Compression.ZipArchiveEntry.Length\n  id: Length\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  name: Length\n  nameWithType: ZipArchiveEntry.Length\n  fullName: System.IO.Compression.ZipArchiveEntry.Length\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: Gets the uncompressed size of the entry in the zip archive.\n  remarks: This property cannot be retrieved when the mode is set to <xref:System.IO.Compression.ZipArchiveMode>, or the mode is set to <xref:System.IO.Compression.ZipArchiveMode> and the entry has been opened.\n  example:\n  - \"The following example shows how to retrieve entries from a zip archive, and evaluate the properties of the entries. It uses the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property to display the name of the entry, and the Length and <xref:System.IO.Compression.ZipArchiveEntry.CompressedLength%2A> properties to calculate how much the file was compressed.  \\n  \\n [!code-cs[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/csharp/p-system.io.compression._1_1.cs)]\\n [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/visualbasic/p-system.io.compression._1_1.vb)]\"\n  syntax:\n    content: public long Length { get; }\n    return:\n      type: System.Int64\n      description: The uncompressed size of the entry in the zip archive.\n  overload: System.IO.Compression.ZipArchiveEntry.Length*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The value of the property is not available because the entry has been modified.\n  platform:\n  - net462\n- uid: System.IO.Compression.ZipArchiveEntry.Name\n  id: Name\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ZipArchiveEntry.Name\n  fullName: System.IO.Compression.ZipArchiveEntry.Name\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: Gets the file name of the entry in the zip archive.\n  remarks: The Name property contains the portion of the <xref:System.IO.Compression.ZipArchiveEntry.FullName%2A> property that follows the final directory separator character (\\\\), and does not include the subdirectory hierarchy. For example, if you create two entries in a zip archive by using the <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> method and provide `NewEntry.txt` as the name for the first entry and `AddedFolder\\\\NewEntry.txt` for the second entry, both entries will have `NewEntry.txt` in the Name property. The first entry will also have `NewEntry.txt` in the <xref:System.IO.Compression.ZipArchiveEntry.FullName%2A> property, but the second entry will have `AddedFolder\\\\NewEntry.txt` in the <xref:System.IO.Compression.ZipArchiveEntry.FullName%2A> property.\n  example:\n  - \"The following example shows how to retrieve entries from a zip archive and evaluate the properties of the entries. It uses the Name property to display the name of the entry, and the <xref:System.IO.Compression.ZipArchiveEntry.Length%2A> and <xref:System.IO.Compression.ZipArchiveEntry.CompressedLength%2A> properties to calculate how much the file was compressed.  \\n  \\n [!code-cs[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/csharp/p-system.io.compression._4_1.cs)]\\n [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/visualbasic/p-system.io.compression._4_1.vb)]\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The file name of the entry in the zip archive.\n  overload: System.IO.Compression.ZipArchiveEntry.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Compression.ZipArchiveEntry.Open\n  id: Open\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  name: Open()\n  nameWithType: ZipArchiveEntry.Open()\n  fullName: System.IO.Compression.ZipArchiveEntry.Open()\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: Opens the entry from the zip archive.\n  remarks: You use this method to access the stream for an entry in a zip archive. After retrieving the stream, you can read from or write to the stream. When you write to the stream, the modifications you make to the entry will appear in the zip archive.\n  example:\n  - \"The following example shows how to create a new entry, open it with the Open method, and write to the stream.  \\n  \\n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/m-system.io.compression._0_1.cs)]\\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/m-system.io.compression._0_1.vb)]\"\n  syntax:\n    content: public System.IO.Stream Open ();\n    parameters: []\n    return:\n      type: System.IO.Stream\n      description: The stream that represents the contents of the entry.\n  overload: System.IO.Compression.ZipArchiveEntry.Open*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The entry is already currently open for writing.  \\n  \\n -or-  \\n  \\n The entry has been deleted from the archive.  \\n  \\n -or-  \\n  \\n The archive for this entry was opened with the <xref href=\\\"System.IO.Compression.ZipArchiveMode\\\"></xref> mode, and this entry has already been written to.\"\n  - type: System.IO.InvalidDataException\n    commentId: T:System.IO.InvalidDataException\n    description: \"The entry is either missing from the archive or is corrupt and cannot be read.  \\n  \\n -or-  \\n  \\n The entry has been compressed by using a compression method that is not supported.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The zip archive for this entry has been disposed.\n  platform:\n  - net462\n- uid: System.IO.Compression.ZipArchiveEntry.ToString\n  id: ToString\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ZipArchiveEntry.ToString()\n  fullName: System.IO.Compression.ZipArchiveEntry.ToString()\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: Retrieves the relative path of the entry in the zip archive.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The relative path of the entry, which is the value stored in the <xref:System.IO.Compression.ZipArchiveEntry.FullName*> property.\n  overload: System.IO.Compression.ZipArchiveEntry.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.IO.IOException\n  isExternal: true\n  name: System.IO.IOException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.IO.InvalidDataException\n  isExternal: true\n  name: System.IO.InvalidDataException\n- uid: System.IO.Compression.ZipArchiveEntry.Archive\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: Archive\n  nameWithType: ZipArchiveEntry.Archive\n  fullName: System.IO.Compression.ZipArchiveEntry.Archive\n- uid: System.IO.Compression.ZipArchive\n  parent: System.IO.Compression\n  isExternal: false\n  name: ZipArchive\n  nameWithType: ZipArchive\n  fullName: System.IO.Compression.ZipArchive\n- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: CompressedLength\n  nameWithType: ZipArchiveEntry.CompressedLength\n  fullName: System.IO.Compression.ZipArchiveEntry.CompressedLength\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.Compression.ZipArchiveEntry.Delete\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: Delete()\n  nameWithType: ZipArchiveEntry.Delete()\n  fullName: System.IO.Compression.ZipArchiveEntry.Delete()\n- uid: System.IO.Compression.ZipArchiveEntry.FullName\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: FullName\n  nameWithType: ZipArchiveEntry.FullName\n  fullName: System.IO.Compression.ZipArchiveEntry.FullName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: LastWriteTime\n  nameWithType: ZipArchiveEntry.LastWriteTime\n  fullName: System.IO.Compression.ZipArchiveEntry.LastWriteTime\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: true\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.IO.Compression.ZipArchiveEntry.Length\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: Length\n  nameWithType: ZipArchiveEntry.Length\n  fullName: System.IO.Compression.ZipArchiveEntry.Length\n- uid: System.IO.Compression.ZipArchiveEntry.Name\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: Name\n  nameWithType: ZipArchiveEntry.Name\n  fullName: System.IO.Compression.ZipArchiveEntry.Name\n- uid: System.IO.Compression.ZipArchiveEntry.Open\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: Open()\n  nameWithType: ZipArchiveEntry.Open()\n  fullName: System.IO.Compression.ZipArchiveEntry.Open()\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.Compression.ZipArchiveEntry.ToString\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: ToString()\n  nameWithType: ZipArchiveEntry.ToString()\n  fullName: System.IO.Compression.ZipArchiveEntry.ToString()\n- uid: System.IO.Compression.ZipArchiveEntry.Archive*\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: Archive\n  nameWithType: ZipArchiveEntry.Archive\n- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength*\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: CompressedLength\n  nameWithType: ZipArchiveEntry.CompressedLength\n- uid: System.IO.Compression.ZipArchiveEntry.Delete*\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: Delete\n  nameWithType: ZipArchiveEntry.Delete\n- uid: System.IO.Compression.ZipArchiveEntry.FullName*\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: FullName\n  nameWithType: ZipArchiveEntry.FullName\n- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime*\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: LastWriteTime\n  nameWithType: ZipArchiveEntry.LastWriteTime\n- uid: System.IO.Compression.ZipArchiveEntry.Length*\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: Length\n  nameWithType: ZipArchiveEntry.Length\n- uid: System.IO.Compression.ZipArchiveEntry.Name*\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: Name\n  nameWithType: ZipArchiveEntry.Name\n- uid: System.IO.Compression.ZipArchiveEntry.Open*\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: Open\n  nameWithType: ZipArchiveEntry.Open\n- uid: System.IO.Compression.ZipArchiveEntry.ToString*\n  parent: System.IO.Compression.ZipArchiveEntry\n  isExternal: false\n  name: ToString\n  nameWithType: ZipArchiveEntry.ToString\n"}