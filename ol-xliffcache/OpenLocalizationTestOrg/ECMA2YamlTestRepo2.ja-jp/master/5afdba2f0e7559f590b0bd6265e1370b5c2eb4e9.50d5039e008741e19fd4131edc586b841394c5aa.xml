{"nodes":[{"pos":[469,586],"content":"Provides an implementation for the <xref:System.IServiceProvider> interface with methods that enable adding services.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides an implementation for the &lt;xref:System.IServiceProvider&gt; interface with methods that enable adding services.","pos":[0,117],"source":"Provides an implementation for the <xref:System.IServiceProvider> interface with methods that enable adding services."}]},{"pos":[599,1633],"content":"This is a utility class for use when serializing content. The class is basically an input-only dictionary for storing services keyed by their service type, which implements <xref:System.IServiceProvider> for later retrieval from the same dictionary. Using the dictionary avoids querying for the same service repeatedly. This class is the base class of <xref:System.Windows.Markup.XamlDesignerSerializationManager>, which is the service used for `ShouldSerialize` method implementations in other parts of WPF.       Using this class requires referencing WPF assemblies, it is not intended for general .NET Framework XAML Services scenarios. The scenario here is for WPF internal implementation of service-intensive features during serialization, such as when processing the `ShouldSerialize` implementations of certain types. The practical class involved in this scenario is the derived class <xref:System.Windows.Markup.XamlDesignerSerializationManager>.      <a name=\"xamlTextUsage_ServiceProviders\"></a>    ## XAML Text Usage","needQuote":false,"needEscape":true,"nodes":[{"content":"This is a utility class for use when serializing content.","pos":[0,57]},{"content":"The class is basically an input-only dictionary for storing services keyed by their service type, which implements &lt;xref:System.IServiceProvider&gt; for later retrieval from the same dictionary.","pos":[58,249],"source":" The class is basically an input-only dictionary for storing services keyed by their service type, which implements <xref:System.IServiceProvider> for later retrieval from the same dictionary."},{"content":"Using the dictionary avoids querying for the same service repeatedly.","pos":[250,319]},{"content":"This class is the base class of &lt;xref:System.Windows.Markup.XamlDesignerSerializationManager&gt;, which is the service used for <ph id=\"ph1\">`ShouldSerialize`</ph> method implementations in other parts of WPF.","pos":[320,508],"source":" This class is the base class of <xref:System.Windows.Markup.XamlDesignerSerializationManager>, which is the service used for `ShouldSerialize` method implementations in other parts of WPF."},{"content":"Using this class requires referencing WPF assemblies, it is not intended for general .NET Framework XAML Services scenarios.","pos":[515,639]},{"content":"The scenario here is for WPF internal implementation of service-intensive features during serialization, such as when processing the <ph id=\"ph1\">`ShouldSerialize`</ph> implementations of certain types.","pos":[640,824],"source":" The scenario here is for WPF internal implementation of service-intensive features during serialization, such as when processing the `ShouldSerialize` implementations of certain types."},{"content":"The practical class involved in this scenario is the derived class &lt;xref:System.Windows.Markup.XamlDesignerSerializationManager&gt;.","pos":[825,954],"source":" The practical class involved in this scenario is the derived class <xref:System.Windows.Markup.XamlDesignerSerializationManager>."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_ServiceProviders\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage","pos":[960,1027],"source":"<a name=\"xamlTextUsage_ServiceProviders\"></a>    ## XAML Text Usage"}]},{"pos":[2362,2462],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Markup.ServiceProviders\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Markup.ServiceProviders\"></xref> class."},{"pos":[3083,3110],"content":"Adds a service to the list.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a service to the list.","pos":[0,27]}]},{"pos":[3274,3306],"content":"Service type of the new service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Service type of the new service.","pos":[0,32]}]},{"pos":[3370,3403],"content":"The service implementation class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service implementation class.","pos":[0,33]}]},{"pos":[3583,3696],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;service&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>serviceType</code> or <code>service</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[3791,3856],"content":"Attempted to add a service that already exists in the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempted to add a service that already exists in the dictionary.","pos":[0,65]}]},{"pos":[4283,4329],"content":"Gets the service object of the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the service object of the specified type.","pos":[0,46]}]},{"pos":[4479,4513],"content":"The type of service object to get.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of service object to get.","pos":[0,34]}]},{"pos":[4571,4767],"content":"A service implementation for the type <code>serviceType</code>. May be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no service stored for type <code>serviceType</code>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A service implementation for the type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">serviceType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,63],"source":"A service implementation for the type <code>serviceType</code>."},{"content":"May be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is no service stored for type <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">serviceType</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","pos":[64,196],"source":" May be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no service stored for type <code>serviceType</code>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Markup.ServiceProviders\n  id: ServiceProviders\n  children:\n  - System.Windows.Markup.ServiceProviders.#ctor\n  - System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)\n  - System.Windows.Markup.ServiceProviders.GetService(System.Type)\n  langs:\n  - csharp\n  name: ServiceProviders\n  nameWithType: ServiceProviders\n  fullName: System.Windows.Markup.ServiceProviders\n  type: Class\n  summary: Provides an implementation for the <xref:System.IServiceProvider> interface with methods that enable adding services.\n  remarks: \"This is a utility class for use when serializing content. The class is basically an input-only dictionary for storing services keyed by their service type, which implements <xref:System.IServiceProvider> for later retrieval from the same dictionary. Using the dictionary avoids querying for the same service repeatedly. This class is the base class of <xref:System.Windows.Markup.XamlDesignerSerializationManager>, which is the service used for `ShouldSerialize` method implementations in other parts of WPF.  \\n  \\n Using this class requires referencing WPF assemblies, it is not intended for general .NET Framework XAML Services scenarios. The scenario here is for WPF internal implementation of service-intensive features during serialization, such as when processing the `ShouldSerialize` implementations of certain types. The practical class involved in this scenario is the derived class <xref:System.Windows.Markup.XamlDesignerSerializationManager>.  \\n  \\n<a name=\\\"xamlTextUsage_ServiceProviders\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]\n\n      public class ServiceProviders : IServiceProvider\n  inheritance:\n  - System.Object\n  implements:\n  - System.IServiceProvider\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Markup.ServiceProviders.#ctor\n  id: '#ctor'\n  parent: System.Windows.Markup.ServiceProviders\n  langs:\n  - csharp\n  name: ServiceProviders()\n  nameWithType: ServiceProviders.ServiceProviders()\n  fullName: System.Windows.Markup.ServiceProviders.ServiceProviders()\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Markup\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Markup.ServiceProviders\"></xref> class.\n  syntax:\n    content: public ServiceProviders ();\n    parameters: []\n  overload: System.Windows.Markup.ServiceProviders.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)\n  id: AddService(System.Type,System.Object)\n  parent: System.Windows.Markup.ServiceProviders\n  langs:\n  - csharp\n  name: AddService(Type,Object)\n  nameWithType: ServiceProviders.AddService(Type,Object)\n  fullName: System.Windows.Markup.ServiceProviders.AddService(Type,Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Markup\n  summary: Adds a service to the list.\n  syntax:\n    content: public void AddService (Type serviceType, object service);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: Service type of the new service.\n    - id: service\n      type: System.Object\n      description: The service implementation class.\n  overload: System.Windows.Markup.ServiceProviders.AddService*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> or <code>service</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Attempted to add a service that already exists in the dictionary.\n  platform:\n  - net462\n- uid: System.Windows.Markup.ServiceProviders.GetService(System.Type)\n  id: GetService(System.Type)\n  parent: System.Windows.Markup.ServiceProviders\n  langs:\n  - csharp\n  name: GetService(Type)\n  nameWithType: ServiceProviders.GetService(Type)\n  fullName: System.Windows.Markup.ServiceProviders.GetService(Type)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Markup\n  summary: Gets the service object of the specified type.\n  syntax:\n    content: public object GetService (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service object to get.\n    return:\n      type: System.Object\n      description: A service implementation for the type <code>serviceType</code>. May be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no service stored for type <code>serviceType</code>.\n  overload: System.Windows.Markup.ServiceProviders.GetService*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Windows.Markup.ServiceProviders.#ctor\n  parent: System.Windows.Markup.ServiceProviders\n  isExternal: false\n  name: ServiceProviders()\n  nameWithType: ServiceProviders.ServiceProviders()\n  fullName: System.Windows.Markup.ServiceProviders.ServiceProviders()\n- uid: System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)\n  parent: System.Windows.Markup.ServiceProviders\n  isExternal: false\n  name: AddService(Type,Object)\n  nameWithType: ServiceProviders.AddService(Type,Object)\n  fullName: System.Windows.Markup.ServiceProviders.AddService(Type,Object)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Markup.ServiceProviders.GetService(System.Type)\n  parent: System.Windows.Markup.ServiceProviders\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: ServiceProviders.GetService(Type)\n  fullName: System.Windows.Markup.ServiceProviders.GetService(Type)\n- uid: System.Windows.Markup.ServiceProviders.#ctor*\n  parent: System.Windows.Markup.ServiceProviders\n  isExternal: false\n  name: ServiceProviders\n  nameWithType: ServiceProviders.ServiceProviders\n- uid: System.Windows.Markup.ServiceProviders.AddService*\n  parent: System.Windows.Markup.ServiceProviders\n  isExternal: false\n  name: AddService\n  nameWithType: ServiceProviders.AddService\n- uid: System.Windows.Markup.ServiceProviders.GetService*\n  parent: System.Windows.Markup.ServiceProviders\n  isExternal: false\n  name: GetService\n  nameWithType: ServiceProviders.GetService\n"}