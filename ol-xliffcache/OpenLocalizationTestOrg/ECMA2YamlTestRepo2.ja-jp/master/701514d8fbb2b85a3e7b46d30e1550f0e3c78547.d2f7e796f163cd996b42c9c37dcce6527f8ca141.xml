{"nodes":[{"pos":[2513,2625],"content":"Provides a way of reading a forward-only stream of data rows from a data source. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a way of reading a forward-only stream of data rows from a data source. This class cannot be inherited.","pos":[0,112],"nodes":[{"content":"Provides a way of reading a forward-only stream of data rows from a data source.","pos":[0,80]},{"content":"This class cannot be inherited.","pos":[81,112]}]}]},{"pos":[2638,3912],"content":"To create an OleDbDataReader, you must call the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method of the <xref:System.Data.OleDb.OleDbCommand> object, instead of directly using a constructor.       Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the OleDbDataReader object. You must also close the OleDbDataReader object if you plan to resuse an <xref:System.Data.OleDb.OleDbCommand> object.For example, you cannot retrieve output parameters until after you call <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.       Changes made to a result set by another process or thread while data is being read may be visible to the user of the OleDbDataReader. However, the precise behavior is timing dependent.       <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> and <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> are the only properties that you can call after the OleDbDataReader is closed. Although the <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> property may be accessed while the OleDbDataReader exists, always call <xref:System.Data.OleDb.OleDbDataReader.Close%2A> before returning the value of <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> to guarantee an accurate return value.","needQuote":false,"needEscape":true,"nodes":[{"content":"To create an OleDbDataReader, you must call the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method of the <xref:System.Data.OleDb.OleDbCommand> object, instead of directly using a constructor.       Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the OleDbDataReader object. You must also close the OleDbDataReader object if you plan to resuse an <xref:System.Data.OleDb.OleDbCommand> object.For example, you cannot retrieve output parameters until after you call <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.       Changes made to a result set by another process or thread while data is being read may be visible to the user of the OleDbDataReader. However, the precise behavior is timing dependent.       <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> and <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> are the only properties that you can call after the OleDbDataReader is closed. Although the <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> property may be accessed while the OleDbDataReader exists, always call <xref:System.Data.OleDb.OleDbDataReader.Close%2A> before returning the value of <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> to guarantee an accurate return value.","pos":[0,1268],"nodes":[{"content":"To create an OleDbDataReader, you must call the &lt;xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A&gt; method of the &lt;xref:System.Data.OleDb.OleDbCommand&gt; object, instead of directly using a constructor.","pos":[0,203],"source":"To create an OleDbDataReader, you must call the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method of the <xref:System.Data.OleDb.OleDbCommand> object, instead of directly using a constructor."},{"content":"Before you close the &lt;xref:System.Data.OleDb.OleDbConnection&gt;, first close the OleDbDataReader object.","pos":[210,312],"source":"       Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the OleDbDataReader object."},{"content":"You must also close the OleDbDataReader object if you plan to resuse an &lt;xref:System.Data.OleDb.OleDbCommand&gt; object.For example, you cannot retrieve output parameters until after you call &lt;xref:System.Data.OleDb.OleDbDataReader.Close%2A&gt;.","pos":[313,552],"source":" You must also close the OleDbDataReader object if you plan to resuse an <xref:System.Data.OleDb.OleDbCommand> object.For example, you cannot retrieve output parameters until after you call <xref:System.Data.OleDb.OleDbDataReader.Close%2A>."},{"content":"Changes made to a result set by another process or thread while data is being read may be visible to the user of the OleDbDataReader.","pos":[559,692]},{"content":"However, the precise behavior is timing dependent.","pos":[693,743]},{"content":"&lt;xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A&gt; and &lt;xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A&gt; are the only properties that you can call after the OleDbDataReader is closed.","pos":[750,945],"source":"       <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> and <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> are the only properties that you can call after the OleDbDataReader is closed."},{"content":"Although the &lt;xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A&gt; property may be accessed while the OleDbDataReader exists, always call &lt;xref:System.Data.OleDb.OleDbDataReader.Close%2A&gt; before returning the value of &lt;xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A&gt; to guarantee an accurate return value.","pos":[946,1268],"source":" Although the <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> property may be accessed while the OleDbDataReader exists, always call <xref:System.Data.OleDb.OleDbDataReader.Close%2A> before returning the value of <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> to guarantee an accurate return value."}]}]},{"pos":[6502,6575],"content":"Closes the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Closes the <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> object."},{"pos":[6588,7242],"content":"You must explicitly call the Close method when you are through using the <xref:System.Data.OleDb.OleDbDataReader> to use the associated <xref:System.Data.OleDb.OleDbConnection> for any other purpose.      > [!CAUTION] >  Do not call **Close** or **Dispose** on a Connection, a DataReader, or any other managed object in the **Finalize** method of your class. In a finalizer, you should only release unmanaged resources that your class owns directly. If your class does not own any unmanaged resources, do not include a **Finalize** method in your class definition. For more information, see [Garbage Collection](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"You must explicitly call the Close method when you are through using the &lt;xref:System.Data.OleDb.OleDbDataReader&gt; to use the associated &lt;xref:System.Data.OleDb.OleDbConnection&gt; for any other purpose.","pos":[0,199],"source":"You must explicitly call the Close method when you are through using the <xref:System.Data.OleDb.OleDbDataReader> to use the associated <xref:System.Data.OleDb.OleDbConnection> for any other purpose."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  Do not call <bpt id=\"p1\">**</bpt>Close<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>Dispose<ept id=\"p2\">**</ept> on a Connection, a DataReader, or any other managed object in the <bpt id=\"p3\">**</bpt>Finalize<ept id=\"p3\">**</ept> method of your class.","pos":[205,358],"source":"      > [!CAUTION] >  Do not call **Close** or **Dispose** on a Connection, a DataReader, or any other managed object in the **Finalize** method of your class."},{"content":"In a finalizer, you should only release unmanaged resources that your class owns directly.","pos":[359,449]},{"content":"If your class does not own any unmanaged resources, do not include a <bpt id=\"p1\">**</bpt>Finalize<ept id=\"p1\">**</ept> method in your class definition.","pos":[450,564],"source":" If your class does not own any unmanaged resources, do not include a **Finalize** method in your class definition."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Garbage Collection<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[565,651],"source":" For more information, see [Garbage Collection](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[8348,8417],"content":"Gets a value that indicates the depth of nesting for the current row.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates the depth of nesting for the current row.","pos":[0,69]}]},{"pos":[8429,8469],"content":"The outermost table has a depth of zero.","needQuote":true,"needEscape":true,"nodes":[{"content":"The outermost table has a depth of zero.","pos":[0,40]}]},{"pos":[8584,8625],"content":"The depth of nesting for the current row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The depth of nesting for the current row.","pos":[0,41]}]},{"pos":[9060,9106],"content":"Gets the number of columns in the current row.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of columns in the current row.","pos":[0,46]}]},{"pos":[9119,9315],"content":"Includes hidden fields. Use <xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A> to exclude hidden fields.       After executing a query that does not return rows, FieldCount returns 0.","needQuote":false,"needEscape":true,"nodes":[{"content":"Includes hidden fields. Use <xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A> to exclude hidden fields.       After executing a query that does not return rows, FieldCount returns 0.","pos":[0,194],"nodes":[{"content":"Includes hidden fields.","pos":[0,23]},{"content":"Use &lt;xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A&gt; to exclude hidden fields.","pos":[24,115],"source":" Use <xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A> to exclude hidden fields."},{"content":"After executing a query that does not return rows, FieldCount returns 0.","pos":[122,194]}]}]},{"pos":[9436,9554],"content":"When not positioned in a valid recordset, 0; otherwise the number of columns in the current record. The default is -1.","needQuote":true,"needEscape":true,"nodes":[{"content":"When not positioned in a valid recordset, 0; otherwise the number of columns in the current record. The default is -1.","pos":[0,118],"nodes":[{"content":"When not positioned in a valid recordset, 0; otherwise the number of columns in the current record.","pos":[0,99]},{"content":"The default is -1.","pos":[100,118]}]}]},{"pos":[9729,9777],"content":"There is no current connection to a data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"There is no current connection to a data source.","pos":[0,48]}]},{"pos":[10189,10241],"content":"Gets the value of the specified column as a Boolean.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a Boolean.","pos":[0,52]}]},{"pos":[10254,10487],"content":"No conversions are performed; therefore the data retrieved must already be a Boolean, or an exception is generated.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","needQuote":false,"needEscape":true,"nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a Boolean, or an exception is generated.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","pos":[0,231],"nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a Boolean, or an exception is generated.","pos":[0,115]},{"content":"Call &lt;xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A&gt; to look for null values before calling this method.","pos":[122,231],"source":"       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method."}]}]},{"pos":[10637,10667],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[10726,10750],"content":"The value of the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the column.","pos":[0,24]}]},{"pos":[10923,10955],"content":"The specified cast is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]},{"pos":[11352,11401],"content":"Gets the value of the specified column as a byte.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a byte.","pos":[0,49]}]},{"pos":[11414,11614],"content":"No conversions are performed; therefore the data retrieved must already be a byte.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","needQuote":false,"needEscape":true,"nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a byte.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","pos":[0,198],"nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a byte.","pos":[0,82]},{"content":"Call &lt;xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A&gt; to look for null values before calling this method.","pos":[89,198],"source":"       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method."}]}]},{"pos":[11761,11791],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[11847,11891],"content":"The value of the specified column as a byte.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column as a byte.","pos":[0,44]}]},{"pos":[12061,12093],"content":"The specified cast is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]},{"pos":[12676,12797],"content":"Reads a stream of bytes from the specified column offset into the buffer as an array starting at the given buffer offset.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads a stream of bytes from the specified column offset into the buffer as an array starting at the given buffer offset.","pos":[0,121]}]},{"pos":[12810,13494],"content":"GetBytes returns the number of available bytes in the field. Most of the time this is the exact length of the field. However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field. This may be the case, for example, when the <xref:System.Data.OleDb.OleDbDataReader> is reading a large data structure into a buffer. For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.       If you pass a buffer that is `null`, GetBytes returns the length of the field in bytes.       No conversions are performed; therefore, the data retrieved must already be a byte array.","needQuote":false,"needEscape":true,"nodes":[{"content":"GetBytes returns the number of available bytes in the field.","pos":[0,60]},{"content":"Most of the time this is the exact length of the field.","pos":[61,116]},{"content":"However, the number returned may be less than the true length of the field if <ph id=\"ph1\">`GetBytes`</ph> has already been used to obtain bytes from the field.","pos":[117,259],"source":" However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field."},{"content":"This may be the case, for example, when the &lt;xref:System.Data.OleDb.OleDbDataReader&gt; is reading a large data structure into a buffer.","pos":[260,393],"source":" This may be the case, for example, when the <xref:System.Data.OleDb.OleDbDataReader> is reading a large data structure into a buffer."},{"content":"For more information, see the <ph id=\"ph1\">`SequentialAccess`</ph> setting for &lt;xref:System.Data.CommandBehavior&gt;.","pos":[394,490],"source":" For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>."},{"content":"If you pass a buffer that is <ph id=\"ph1\">`null`</ph>, GetBytes returns the length of the field in bytes.","pos":[497,584],"source":"       If you pass a buffer that is `null`, GetBytes returns the length of the field in bytes."},{"content":"No conversions are performed; therefore, the data retrieved must already be a byte array.","pos":[591,680]}]},{"pos":[13702,13732],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[13797,13863],"content":"The index within the field from which to start the read operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index within the field from which to start the read operation.","pos":[0,66]}]},{"pos":[13926,13976],"content":"The buffer into which to read the stream of bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The buffer into which to read the stream of bytes.","pos":[0,50]}]},{"pos":[14043,14111],"content":"The index within the <ph id=\"ph1\">`buffer`</ph> where the write operation is to start.","needQuote":true,"needEscape":true,"source":"The index within the `buffer` where the write operation is to start."},{"pos":[14173,14216],"content":"The maximum length to copy into the buffer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum length to copy into the buffer.","pos":[0,43]}]},{"pos":[14273,14305],"content":"The actual number of bytes read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The actual number of bytes read.","pos":[0,32]}]},{"pos":[14775,14829],"content":"Gets the value of the specified column as a character.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a character.","pos":[0,54]}]},{"pos":[14841,14884],"content":"Not supported for <xref:System.Data.OleDb>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not supported for &lt;xref:System.Data.OleDb&gt;.","pos":[0,43],"source":"Not supported for <xref:System.Data.OleDb>."}]},{"pos":[15030,15060],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[15116,15150],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[15320,15352],"content":"The specified cast is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]},{"pos":[15935,16061],"content":"Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.","pos":[0,126]}]},{"pos":[16074,16778],"content":"GetChars returns the number of available characters in the field. Most of the time this is the exact length of the field. However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field. This may be the case, for example, when the <xref:System.Data.OleDb.OleDbDataReader> is reading a large data structure into a buffer. For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.       If you pass a buffer that is `null`, GetChars returns the length of the field in characters.       No conversions are performed; therefore, the data retrieved must already be a character array.","needQuote":false,"needEscape":true,"nodes":[{"content":"GetChars returns the number of available characters in the field.","pos":[0,65]},{"content":"Most of the time this is the exact length of the field.","pos":[66,121]},{"content":"However, the number returned may be less than the true length of the field if <ph id=\"ph1\">`GetChars`</ph> has already been used to obtain characters from the field.","pos":[122,269],"source":" However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field."},{"content":"This may be the case, for example, when the &lt;xref:System.Data.OleDb.OleDbDataReader&gt; is reading a large data structure into a buffer.","pos":[270,403],"source":" This may be the case, for example, when the <xref:System.Data.OleDb.OleDbDataReader> is reading a large data structure into a buffer."},{"content":"For more information, see the <ph id=\"ph1\">`SequentialAccess`</ph> setting for &lt;xref:System.Data.CommandBehavior&gt;.","pos":[404,500],"source":" For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>."},{"content":"If you pass a buffer that is <ph id=\"ph1\">`null`</ph>, GetChars returns the length of the field in characters.","pos":[507,599],"source":"       If you pass a buffer that is `null`, GetChars returns the length of the field in characters."},{"content":"No conversions are performed; therefore, the data retrieved must already be a character array.","pos":[606,700]}]},{"pos":[16986,17016],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[17081,17145],"content":"The index within the row from which to start the read operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index within the row from which to start the read operation.","pos":[0,64]}]},{"pos":[17208,17243],"content":"The buffer into which to copy data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The buffer into which to copy data.","pos":[0,35]}]},{"pos":[17310,17378],"content":"The index within the <ph id=\"ph1\">`buffer`</ph> where the write operation is to start.","needQuote":true,"needEscape":true,"source":"The index within the `buffer` where the write operation is to start."},{"pos":[17440,17473],"content":"The number of characters to read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of characters to read.","pos":[0,33]}]},{"pos":[17530,17567],"content":"The actual number of characters read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The actual number of characters read.","pos":[0,37]}]},{"pos":[18037,18143],"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the requested column ordinal.","needQuote":true,"needEscape":true,"source":"Returns an <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> object for the requested column ordinal."},{"pos":[18155,18347],"content":"The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> will call GetData if the provider returns a <xref:System.Data.IDataReader> that has a column that supports <xref:System.Data.IDataReader>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; will call GetData if the provider returns a &lt;xref:System.Data.IDataReader&gt; that has a column that supports &lt;xref:System.Data.IDataReader&gt;.","pos":[0,192],"source":"The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> will call GetData if the provider returns a <xref:System.Data.IDataReader> that has a column that supports <xref:System.Data.IDataReader>."}]},{"pos":[18513,18543],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[18621,18686],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> object."},{"pos":[19195,19233],"content":"Gets the name of the source data type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the source data type.","pos":[0,38]}]},{"pos":[19385,19415],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[19473,19676],"content":"The name of the back-end data type. For more information, see [SQL Server data types](http://go.microsoft.com/fwlink/?LinkId=198032) or [Access data types](http://go.microsoft.com/fwlink/?LinkId=198033).","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the back-end data type.","pos":[0,35]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>SQL Server data types<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=198032)</ept> or <bpt id=\"p2\">[</bpt>Access data types<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkId=198033)</ept>.","pos":[36,203],"source":" For more information, see [SQL Server data types](http://go.microsoft.com/fwlink/?LinkId=198032) or [Access data types](http://go.microsoft.com/fwlink/?LinkId=198033)."}]},{"pos":[20173,20247],"content":"Gets the value of the specified column as a <xref:System.DateTime> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a &lt;xref:System.DateTime&gt; object.","pos":[0,74],"source":"Gets the value of the specified column as a <xref:System.DateTime> object."}]},{"pos":[20260,20486],"content":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTime> object.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","needQuote":false,"needEscape":true,"nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTime> object.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","pos":[0,224],"nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a &lt;xref:System.DateTime&gt; object.","pos":[0,108],"source":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTime> object."},{"content":"Call &lt;xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A&gt; to look for null values before calling this method.","pos":[115,224],"source":"       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method."}]}]},{"pos":[20641,20671],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[20731,20765],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[20939,20971],"content":"The specified cast is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]},{"pos":[21580,21592],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21668,21680],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22172,22245],"content":"Gets the value of the specified column as a <xref:System.Decimal> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a &lt;xref:System.Decimal&gt; object.","pos":[0,73],"source":"Gets the value of the specified column as a <xref:System.Decimal> object."}]},{"pos":[22258,22483],"content":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.Decimal> object.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","needQuote":false,"needEscape":true,"nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.Decimal> object.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","pos":[0,223],"nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a &lt;xref:System.Decimal&gt; object.","pos":[0,107],"source":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.Decimal> object."},{"content":"Call &lt;xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A&gt; to look for null values before calling this method.","pos":[114,223],"source":"       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method."}]}]},{"pos":[22636,22666],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[22725,22759],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[22932,22964],"content":"The specified cast is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]},{"pos":[23371,23454],"content":"Gets the value of the specified column as a double-precision floating-point number.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a double-precision floating-point number.","pos":[0,83]}]},{"pos":[23467,23702],"content":"No conversions are performed; therefore, the data retrieved must already be a double-precision floating-point number.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","needQuote":false,"needEscape":true,"nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a double-precision floating-point number.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","pos":[0,233],"nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a double-precision floating-point number.","pos":[0,117]},{"content":"Call &lt;xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A&gt; to look for null values before calling this method.","pos":[124,233],"source":"       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method."}]}]},{"pos":[23853,23883],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[23941,23975],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[24147,24179],"content":"The specified cast is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]},{"pos":[24563,24676],"content":"Returns an <xref:System.Collections.IEnumerator> that can be used to iterate through the rows in the data reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an &lt;xref:System.Collections.IEnumerator&gt; that can be used to iterate through the rows in the data reader.","pos":[0,113],"source":"Returns an <xref:System.Collections.IEnumerator> that can be used to iterate through the rows in the data reader."}]},{"pos":[24688,24914],"content":"Although you can use this method to retrieve an explicit enumerator, in languages that support a <ph id=\"ph1\">`foreach`</ph> construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.","needQuote":true,"needEscape":true,"source":"Although you can use this method to retrieve an explicit enumerator, in languages that support a `foreach` construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader."},{"pos":[25096,25201],"content":"An <xref:System.Collections.IEnumerator> that can be used to iterate through the rows in the data reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerator&gt; that can be used to iterate through the rows in the data reader.","pos":[0,105],"source":"An <xref:System.Collections.IEnumerator> that can be used to iterate through the rows in the data reader."}]},{"pos":[25701,25765],"content":"Gets the <xref:System.Type> that is the data type of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Type&gt; that is the data type of the object.","pos":[0,64],"source":"Gets the <xref:System.Type> that is the data type of the object."}]},{"pos":[25912,25942],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[25998,26057],"content":"The <xref:System.Type> that is the data type of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; that is the data type of the object.","pos":[0,59],"source":"The <xref:System.Type> that is the data type of the object."}]},{"pos":[26536,26619],"content":"Gets the value of the specified column as a single-precision floating-point number.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a single-precision floating-point number.","pos":[0,83]}]},{"pos":[26632,26867],"content":"No conversions are performed. Therefore, the data retrieved must already be a single-precision floating-point number.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","needQuote":false,"needEscape":true,"nodes":[{"content":"No conversions are performed. Therefore, the data retrieved must already be a single-precision floating-point number.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","pos":[0,233],"nodes":[{"content":"No conversions are performed.","pos":[0,29]},{"content":"Therefore, the data retrieved must already be a single-precision floating-point number.","pos":[30,117]},{"content":"Call &lt;xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A&gt; to look for null values before calling this method.","pos":[124,233],"source":"       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method."}]}]},{"pos":[27016,27046],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[27104,27138],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[27309,27341],"content":"The specified cast is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]},{"pos":[27738,27816],"content":"Gets the value of the specified column as a globally unique identifier (GUID).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a globally unique identifier (GUID).","pos":[0,78]}]},{"pos":[27829,28051],"content":"No conversions are performed; therefore the data retrieved must already be a globally unique identifier.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","needQuote":false,"needEscape":true,"nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a globally unique identifier.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","pos":[0,220],"nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a globally unique identifier.","pos":[0,104]},{"content":"Call &lt;xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A&gt; to look for null values before calling this method.","pos":[111,220],"source":"       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method."}]}]},{"pos":[28198,28228],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[28284,28318],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[28488,28520],"content":"The specified cast is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]},{"pos":[28922,28988],"content":"Gets the value of the specified column as a 16-bit signed integer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a 16-bit signed integer.","pos":[0,66]}]},{"pos":[29001,29219],"content":"No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","needQuote":false,"needEscape":true,"nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","pos":[0,216],"nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer.","pos":[0,100]},{"content":"Call &lt;xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A&gt; to look for null values before calling this method.","pos":[107,216],"source":"       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method."}]}]},{"pos":[29368,29398],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[29455,29489],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[29660,29692],"content":"The specified cast is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]},{"pos":[30094,30160],"content":"Gets the value of the specified column as a 32-bit signed integer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a 32-bit signed integer.","pos":[0,66]}]},{"pos":[30173,30391],"content":"No conversions are performed; therefore, the data retrieved must already be a 32-bit signed integer.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","needQuote":false,"needEscape":true,"nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a 32-bit signed integer.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","pos":[0,216],"nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a 32-bit signed integer.","pos":[0,100]},{"content":"Call &lt;xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A&gt; to look for null values before calling this method.","pos":[107,216],"source":"       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method."}]}]},{"pos":[30538,30568],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[30625,30659],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[30830,30862],"content":"The specified cast is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]},{"pos":[31264,31330],"content":"Gets the value of the specified column as a 64-bit signed integer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a 64-bit signed integer.","pos":[0,66]}]},{"pos":[31343,31561],"content":"No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","needQuote":false,"needEscape":true,"nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","pos":[0,216],"nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer.","pos":[0,100]},{"content":"Call &lt;xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A&gt; to look for null values before calling this method.","pos":[107,216],"source":"       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method."}]}]},{"pos":[31709,31739],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[31796,31830],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[32001,32033],"content":"The specified cast is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]},{"pos":[32430,32468],"content":"Gets the name of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the specified column.","pos":[0,38]}]},{"pos":[32612,32642],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[32700,32733],"content":"The name of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the specified column.","pos":[0,33]}]},{"pos":[33222,33276],"content":"Gets the column ordinal, given the name of the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the column ordinal, given the name of the column.","pos":[0,54]}]},{"pos":[33289,33779],"content":"GetOrdinal performs a case-sensitive lookup first. If it fails, a second case-insensitive search is made. The method throws an `IndexOutOfRange` exceptionif the zero-based column ordinal is not found.       GetOrdinal is kana-width insensitive.       Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call GetOrdinal within a loop. Save time by calling GetOrdinal one time and assigning the results to an integer variable for use within the loop.","needQuote":false,"needEscape":true,"nodes":[{"content":"GetOrdinal performs a case-sensitive lookup first.","pos":[0,50]},{"content":"If it fails, a second case-insensitive search is made.","pos":[51,105]},{"content":"The method throws an <ph id=\"ph1\">`IndexOutOfRange`</ph> exceptionif the zero-based column ordinal is not found.","pos":[106,200],"source":" The method throws an `IndexOutOfRange` exceptionif the zero-based column ordinal is not found."},{"content":"GetOrdinal is kana-width insensitive.","pos":[207,244]},{"content":"Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call GetOrdinal within a loop.","pos":[251,371]},{"content":"Save time by calling GetOrdinal one time and assigning the results to an integer variable for use within the loop.","pos":[372,486]}]},{"pos":[34257,34280],"content":"The name of the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the column.","pos":[0,23]}]},{"pos":[34337,34367],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[34548,34594],"content":"The name specified is not a valid column name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name specified is not a valid column name.","pos":[0,46]}]},{"pos":[34983,35133],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that describes the column metadata of the <bpt id=\"p2\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata of the <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref>."},{"pos":[35146,40295],"content":"The GetSchemaTable method maps to the OLE DB **IColumnsRowset::GetColumnsRowset** method, and returns metadata about each column in the following order:      |DataReader column|OLE DB column ID|Description|   |-----------------------|----------------------|-----------------|   |ColumnName|DBCOLUMN_NAME|The name of the column; this might not be unique. If this cannot be determined, a null value is returned. This name always reflects the most recent renaming of the column in the current view or command text.|   |ColumnOrdinal|DBCOLUMN_NUMBER|The zero-based ordinal of the column. This column cannot contain a null value.|   |ColumnSize|DBCOLUMN_COLUMNSIZE|The maximum possible length of a value in the column. For columns that use a fixed-length data type, this is the size of the data type.|   |NumericPrecision|DBCOLUMN_PRECISION|If DbType is a numeric data type, this is the maximum precision of the column. The precision of columns with a data type of DBTYPE_DECIMAL or DBTYPE_NUMERIC depends on the definition of the column. If DbType is not a numeric data type, this is a null value.|   |NumericScale|DBCOLUMN_SCALE|If DbType is DBTYPE_DECIMAL or DBTYPE_NUMERIC, this is the number of digits to the right of the decimal point. Otherwise, this is a null value.|   |DataType|None|Maps to the .NET Framework type of the column.|   |ProviderType|DBCOLUMN_TYPE|The indicator of the column's data type. If the data type of the column varies from row to row, this must be DBTYPE_VARIANT. This column cannot contain a null value.|   |IsLong|DBCOLUMNFLAGS_ISLONG|The provider sets DBCOLUMNFLAGS_ISLONG if the column contains a Binary Long Object (BLOB) that contains very long data. The definition of very long data is provider-specific. The setting of this flag corresponds to the value of the IS_LONG column in the PROVIDER_TYPES rowset for the data type.|   |AllowDBNull|DBCOLUMNFLAGS_ISNULLABLE|The provider sets DBCOLUMNFLAGS_ISNULLABLE if the consumer can set the column to a null value, or if the provider cannot determine whether the consumer can set the column to a null value. A column may contain null values, even if it cannot be set to a null value.|   |IsReadOnly|DBCOLUMNFLAGS_WRITE|`true` if the column cannot be modified; otherwise `false`. The column is assumed to be writable if the provider has set either the DBCOLUMNFLAGS_WRITE or DBCOLUMNFLAGS_WRITEUNKNOWN flag.|   |IsRowVersion|DBCOLUMNFLAGS_ISROWID|The provider sets DBCOLUMNFLAGS_ISROWID if the column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.|   |IsUnique|DBCOLUMN_ISUNIQUE|VARIANT_TRUE: No two rows in the base table-the table returned in BaseTableName-can have the same value in this column. IsUnique is guaranteed to be VARIANT_TRUE if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.<br /><br /> VARIANT_FALSE: The column can contain duplicate values in the base table. The default of this column is VARIANT_FALSE.|   |IsKey|DBCOLUMN_KEYCOLUMN|VARIANT_TRUE: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row. The set of columns with IsKey set to VARIANT_TRUE must uniquely identify a row in the rowset. There is no requirement that this set of columns is a minimal set of columns. This set of columns may be generated from a base table primary key, a unique constraint or a unique index.<br /><br /> VARIANT_FALSE: The column is not required to uniquely identify the row.|   |IsAutoIncrement|DBCOLUMN_ISAUTOINCREMENT|VARIANT_TRUE: The column assigns values to new rows in fixed increments.<br /><br /> VARIANT_FALSE: The column does not assign values to new rows in fixed increments. The default of this column is VARIANT_FALSE.|   |BaseSchemaName|DBCOLUMN_BASESCHEMANAME|The name of the schema in the data store that contains the column. A null value if the base schema name cannot be determined. The default of this column is a null value.|   |BaseCatalogName|DBCOLUMN_BASECATALOGNAME|The name of the catalog in the data store that contains the column. A null value if the base catalog name cannot be determined. The default of this column is a null value.|   |BaseTableName|DBCOLUMN_BASETABLENAME|The name of the table or view in the data store that contains the column. A null value if the base table name cannot be determined. The default of this column is a null value.|   |BaseColumnName|DBCOLUMN_BASECOLUMNNAME|The name of the column in the data store. This might be different from the column name returned in the ColumnName column if an alias was used. A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store. The default of this column is a null value.|      > [!NOTE] >  To make sure that metadata columns return the correct information, you must call <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`. Otherwise, some of the columns in the schema table may return default, null, or incorrect data.","needQuote":false,"needEscape":true,"nodes":[{"content":"The GetSchemaTable method maps to the OLE DB **IColumnsRowset::GetColumnsRowset** method, and returns metadata about each column in the following order:      |DataReader column|OLE DB column ID|Description|   |-----------------------|----------------------|-----------------|   |ColumnName|DBCOLUMN_NAME|The name of the column; this might not be unique. If this cannot be determined, a null value is returned. This name always reflects the most recent renaming of the column in the current view or command text.|   |ColumnOrdinal|DBCOLUMN_NUMBER|The zero-based ordinal of the column. This column cannot contain a null value.|   |ColumnSize|DBCOLUMN_COLUMNSIZE|The maximum possible length of a value in the column. For columns that use a fixed-length data type, this is the size of the data type.|   |NumericPrecision|DBCOLUMN_PRECISION|If DbType is a numeric data type, this is the maximum precision of the column. The precision of columns with a data type of DBTYPE_DECIMAL or DBTYPE_NUMERIC depends on the definition of the column. If DbType is not a numeric data type, this is a null value.|   |NumericScale|DBCOLUMN_SCALE|If DbType is DBTYPE_DECIMAL or DBTYPE_NUMERIC, this is the number of digits to the right of the decimal point. Otherwise, this is a null value.|   |DataType|None|Maps to the .NET Framework type of the column.|   |ProviderType|DBCOLUMN_TYPE|The indicator of the column's data type. If the data type of the column varies from row to row, this must be DBTYPE_VARIANT. This column cannot contain a null value.|   |IsLong|DBCOLUMNFLAGS_ISLONG|The provider sets DBCOLUMNFLAGS_ISLONG if the column contains a Binary Long Object (BLOB) that contains very long data. The definition of very long data is provider-specific. The setting of this flag corresponds to the value of the IS_LONG column in the PROVIDER_TYPES rowset for the data type.|   |AllowDBNull|DBCOLUMNFLAGS_ISNULLABLE|The provider sets DBCOLUMNFLAGS_ISNULLABLE if the consumer can set the column to a null value, or if the provider cannot determine whether the consumer can set the column to a null value. A column may contain null values, even if it cannot be set to a null value.|   |IsReadOnly|DBCOLUMNFLAGS_WRITE|`true` if the column cannot be modified; otherwise `false`. The column is assumed to be writable if the provider has set either the DBCOLUMNFLAGS_WRITE or DBCOLUMNFLAGS_WRITEUNKNOWN flag.|   |IsRowVersion|DBCOLUMNFLAGS_ISROWID|The provider sets DBCOLUMNFLAGS_ISROWID if the column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.|   |IsUnique|DBCOLUMN_ISUNIQUE|VARIANT_TRUE: No two rows in the base table-the table returned in BaseTableName-can have the same value in this column. IsUnique is guaranteed to be VARIANT_TRUE if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.","pos":[0,2910],"nodes":[{"content":"The GetSchemaTable method maps to the OLE DB <bpt id=\"p1\">**</bpt>IColumnsRowset::GetColumnsRowset<ept id=\"p1\">**</ept> method, and returns metadata about each column in the following order:      |DataReader column|OLE DB column ID|Description|   |-----------------------|----------------------|-----------------|   |ColumnName|DBCOLUMN_NAME|The name of the column; this might not be unique.","pos":[0,353],"source":"The GetSchemaTable method maps to the OLE DB **IColumnsRowset::GetColumnsRowset** method, and returns metadata about each column in the following order:      |DataReader column|OLE DB column ID|Description|   |-----------------------|----------------------|-----------------|   |ColumnName|DBCOLUMN_NAME|The name of the column; this might not be unique."},{"content":"If this cannot be determined, a null value is returned.","pos":[354,409]},{"content":"This name always reflects the most recent renaming of the column in the current view or command text.|   |ColumnOrdinal|DBCOLUMN_NUMBER|The zero-based ordinal of the column.","pos":[410,583]},{"content":"This column cannot contain a null value.|   |ColumnSize|DBCOLUMN_COLUMNSIZE|The maximum possible length of a value in the column.","pos":[584,713]},{"content":"For columns that use a fixed-length data type, this is the size of the data type.|   |NumericPrecision|DBCOLUMN_PRECISION|If DbType is a numeric data type, this is the maximum precision of the column.","pos":[714,914]},{"content":"The precision of columns with a data type of DBTYPE_DECIMAL or DBTYPE_NUMERIC depends on the definition of the column.","pos":[915,1033]},{"content":"If DbType is not a numeric data type, this is a null value.|   |NumericScale|DBCOLUMN_SCALE|If DbType is DBTYPE_DECIMAL or DBTYPE_NUMERIC, this is the number of digits to the right of the decimal point.","pos":[1034,1236]},{"content":"Otherwise, this is a null value.|   |DataType|None|Maps to the .NET Framework type of the column.|   |ProviderType|DBCOLUMN_TYPE|The indicator of the column's data type.","pos":[1237,1406]},{"content":"If the data type of the column varies from row to row, this must be DBTYPE_VARIANT.","pos":[1407,1490]},{"content":"This column cannot contain a null value.|   |IsLong|DBCOLUMNFLAGS_ISLONG|The provider sets DBCOLUMNFLAGS_ISLONG if the column contains a Binary Long Object (BLOB) that contains very long data.","pos":[1491,1683]},{"content":"The definition of very long data is provider-specific.","pos":[1684,1738]},{"content":"The setting of this flag corresponds to the value of the IS_LONG column in the PROVIDER_TYPES rowset for the data type.|   |AllowDBNull|DBCOLUMNFLAGS_ISNULLABLE|The provider sets DBCOLUMNFLAGS_ISNULLABLE if the consumer can set the column to a null value, or if the provider cannot determine whether the consumer can set the column to a null value.","pos":[1739,2087]},{"content":"A column may contain null values, even if it cannot be set to a null value.|   |IsReadOnly|DBCOLUMNFLAGS_WRITE|<ph id=\"ph1\">`true`</ph> if the column cannot be modified; otherwise <ph id=\"ph2\">`false`</ph>.","pos":[2088,2258],"source":" A column may contain null values, even if it cannot be set to a null value.|   |IsReadOnly|DBCOLUMNFLAGS_WRITE|`true` if the column cannot be modified; otherwise `false`."},{"content":"The column is assumed to be writable if the provider has set either the DBCOLUMNFLAGS_WRITE or DBCOLUMNFLAGS_WRITEUNKNOWN flag.|   |IsRowVersion|DBCOLUMNFLAGS_ISROWID|The provider sets DBCOLUMNFLAGS_ISROWID if the column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.|   |IsUnique|DBCOLUMN_ISUNIQUE|VARIANT_TRUE: No two rows in the base table-the table returned in BaseTableName-can have the same value in this column.","pos":[2259,2750]},{"content":"IsUnique is guaranteed to be VARIANT_TRUE if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.","pos":[2751,2910]}]},{"content":" VARIANT_FALSE: The column can contain duplicate values in the base table. The default of this column is VARIANT_FALSE.|   |IsKey|DBCOLUMN_KEYCOLUMN|VARIANT_TRUE: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row. The set of columns with IsKey set to VARIANT_TRUE must uniquely identify a row in the rowset. There is no requirement that this set of columns is a minimal set of columns. This set of columns may be generated from a base table primary key, a unique constraint or a unique index.","pos":[2922,3464],"nodes":[{"content":"VARIANT_FALSE: The column can contain duplicate values in the base table.","pos":[1,74]},{"content":"The default of this column is VARIANT_FALSE.|   |IsKey|DBCOLUMN_KEYCOLUMN|VARIANT_TRUE: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.","pos":[75,263]},{"content":"The set of columns with IsKey set to VARIANT_TRUE must uniquely identify a row in the rowset.","pos":[264,357]},{"content":"There is no requirement that this set of columns is a minimal set of columns.","pos":[358,435]},{"content":"This set of columns may be generated from a base table primary key, a unique constraint or a unique index.","pos":[436,542]}]},{"content":"VARIANT_FALSE: The column is not required to uniquely identify the row.|   |IsAutoIncrement|DBCOLUMN_ISAUTOINCREMENT|VARIANT_TRUE: The column assigns values to new rows in fixed increments.","pos":[3477,3666]},{"content":" VARIANT_FALSE: The column does not assign values to new rows in fixed increments. The default of this column is VARIANT_FALSE.|   |BaseSchemaName|DBCOLUMN_BASESCHEMANAME|The name of the schema in the data store that contains the column. A null value if the base schema name cannot be determined. The default of this column is a null value.|   |BaseCatalogName|DBCOLUMN_BASECATALOGNAME|The name of the catalog in the data store that contains the column. A null value if the base catalog name cannot be determined. The default of this column is a null value.|   |BaseTableName|DBCOLUMN_BASETABLENAME|The name of the table or view in the data store that contains the column. A null value if the base table name cannot be determined. The default of this column is a null value.|   |BaseColumnName|DBCOLUMN_BASECOLUMNNAME|The name of the column in the data store. This might be different from the column name returned in the ColumnName column if an alias was used. A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store. The default of this column is a null value.|      > [!NOTE] >  To make sure that metadata columns return the correct information, you must call <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`. Otherwise, some of the columns in the schema table may return default, null, or incorrect data.","pos":[3678,5125],"nodes":[{"content":"VARIANT_FALSE: The column does not assign values to new rows in fixed increments.","pos":[1,82]},{"content":"The default of this column is VARIANT_FALSE.|   |BaseSchemaName|DBCOLUMN_BASESCHEMANAME|The name of the schema in the data store that contains the column.","pos":[83,237]},{"content":"A null value if the base schema name cannot be determined.","pos":[238,296]},{"content":"The default of this column is a null value.|   |BaseCatalogName|DBCOLUMN_BASECATALOGNAME|The name of the catalog in the data store that contains the column.","pos":[297,453]},{"content":"A null value if the base catalog name cannot be determined.","pos":[454,513]},{"content":"The default of this column is a null value.|   |BaseTableName|DBCOLUMN_BASETABLENAME|The name of the table or view in the data store that contains the column.","pos":[514,672]},{"content":"A null value if the base table name cannot be determined.","pos":[673,730]},{"content":"The default of this column is a null value.|   |BaseColumnName|DBCOLUMN_BASECOLUMNNAME|The name of the column in the data store.","pos":[731,859]},{"content":"This might be different from the column name returned in the ColumnName column if an alias was used.","pos":[860,960]},{"content":"A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.","pos":[961,1104]},{"content":"The default of this column is a null value.|      &gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To make sure that metadata columns return the correct information, you must call &lt;xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A&gt; with the <ph id=\"ph2\">`behavior`</ph> parameter set to <ph id=\"ph3\">`KeyInfo`</ph>.","pos":[1105,1351],"source":" The default of this column is a null value.|      > [!NOTE] >  To make sure that metadata columns return the correct information, you must call <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`."},{"content":"Otherwise, some of the columns in the schema table may return default, null, or incorrect data.","pos":[1352,1447]}]}]},{"pos":[40461,40541],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that describes the column metadata.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata."},{"pos":[40728,40797],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is closed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> is closed."},{"pos":[41204,41255],"content":"Gets the value of the specified column as a string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a string.","pos":[0,51]}]},{"pos":[41268,41470],"content":"No conversions are performed; therefore the data retrieved must already be a string.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","needQuote":false,"needEscape":true,"nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a string.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","pos":[0,200],"nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a string.","pos":[0,84]},{"content":"Call &lt;xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A&gt; to look for null values before calling this method.","pos":[91,200],"source":"       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method."}]}]},{"pos":[41621,41651],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[41709,41743],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[41915,41947],"content":"The specified cast is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]},{"pos":[42364,42438],"content":"Gets the value of the specified column as a <xref:System.TimeSpan> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a &lt;xref:System.TimeSpan&gt; object.","pos":[0,74],"source":"Gets the value of the specified column as a <xref:System.TimeSpan> object."}]},{"pos":[42451,42677],"content":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.TimeSpan> object.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","needQuote":false,"needEscape":true,"nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.TimeSpan> object.       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.","pos":[0,224],"nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a &lt;xref:System.TimeSpan&gt; object.","pos":[0,108],"source":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.TimeSpan> object."},{"content":"Call &lt;xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A&gt; to look for null values before calling this method.","pos":[115,224],"source":"       Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method."}]}]},{"pos":[42823,42853],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[42913,42947],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[43121,43153],"content":"The specified cast is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]},{"pos":[43555,43630],"content":"Gets the value of the column at the specified ordinal in its native format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the column at the specified ordinal in its native format.","pos":[0,75]}]},{"pos":[43642,43709],"content":"This method returns <xref:System.DBNull> for null database columns.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method returns &lt;xref:System.DBNull&gt; for null database columns.","pos":[0,67],"source":"This method returns <xref:System.DBNull> for null database columns."}]},{"pos":[43858,43888],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[43946,43966],"content":"The value to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to return.","pos":[0,20]}]},{"pos":[44461,44533],"content":"Populates an array of objects with the column values of the current row.","needQuote":true,"needEscape":true,"nodes":[{"content":"Populates an array of objects with the column values of the current row.","pos":[0,72]}]},{"pos":[44546,45130],"content":"For most applications, the GetValues method provides an efficient means for retrieving all columns, instead of retrieving each column individually.       You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row. Only the amount of data the <xref:System.Object> array holds is copied to the array. You can also pass an <xref:System.Object> array whose length is more than the number of columns that are contained in the resulting row.       This method returns <xref:System.DBNull> for null database columns.","needQuote":false,"needEscape":true,"nodes":[{"content":"For most applications, the GetValues method provides an efficient means for retrieving all columns, instead of retrieving each column individually.       You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row. Only the amount of data the <xref:System.Object> array holds is copied to the array. You can also pass an <xref:System.Object> array whose length is more than the number of columns that are contained in the resulting row.       This method returns <xref:System.DBNull> for null database columns.","pos":[0,580],"nodes":[{"content":"For most applications, the GetValues method provides an efficient means for retrieving all columns, instead of retrieving each column individually.","pos":[0,147]},{"content":"You can pass an &lt;xref:System.Object&gt; array that contains fewer than the number of columns that are contained in the resulting row.","pos":[154,284],"source":"       You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row."},{"content":"Only the amount of data the &lt;xref:System.Object&gt; array holds is copied to the array.","pos":[285,369],"source":" Only the amount of data the <xref:System.Object> array holds is copied to the array."},{"content":"You can also pass an &lt;xref:System.Object&gt; array whose length is more than the number of columns that are contained in the resulting row.","pos":[370,506],"source":" You can also pass an <xref:System.Object> array whose length is more than the number of columns that are contained in the resulting row."},{"content":"This method returns &lt;xref:System.DBNull&gt; for null database columns.","pos":[513,580],"source":"       This method returns <xref:System.DBNull> for null database columns."}]}]},{"pos":[45514,45588],"content":"An array of <xref:System.Object> into which to copy the attribute columns.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Object&gt; into which to copy the attribute columns.","pos":[0,74],"source":"An array of <xref:System.Object> into which to copy the attribute columns."}]},{"pos":[45645,45706],"content":"The number of instances of <xref:System.Object> in the array.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of instances of &lt;xref:System.Object&gt; in the array.","pos":[0,61],"source":"The number of instances of <xref:System.Object> in the array."}]},{"pos":[46130,46251],"content":"Gets a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contains one or more rows.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether the <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> contains one or more rows."},{"pos":[46371,46594],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> contains one or more rows; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> contains one or more rows; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[47021,47065],"content":"Indicates whether the data reader is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether the data reader is closed.","pos":[0,44]}]},{"pos":[47077,47253],"content":"IsClosed and <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.OleDb.OleDbDataReader> is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"IsClosed and &lt;xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A&gt; are the only properties that you can call after the &lt;xref:System.Data.OleDb.OleDbDataReader&gt; is closed.","pos":[0,176],"source":"IsClosed and <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.OleDb.OleDbDataReader> is closed."}]},{"pos":[47374,47582],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is closed; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> is closed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[48057,48143],"content":"Gets a value that indicates whether the column contains nonexistent or missing values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the column contains nonexistent or missing values.","pos":[0,86]}]},{"pos":[48155,48397],"content":"Call this method to look for null column values before calling the typed get methods (for example, <xref:System.Data.OleDb.OleDbDataReader.GetByte%2A>, <xref:System.Data.OleDb.OleDbDataReader.GetChar%2A>, and so on) to avoid raising an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"Call this method to look for null column values before calling the typed get methods (for example, &lt;xref:System.Data.OleDb.OleDbDataReader.GetByte%2A&gt;, &lt;xref:System.Data.OleDb.OleDbDataReader.GetChar%2A&gt;, and so on) to avoid raising an error.","pos":[0,242],"source":"Call this method to look for null column values before calling the typed get methods (for example, <xref:System.Data.OleDb.OleDbDataReader.GetByte%2A>, <xref:System.Data.OleDb.OleDbDataReader.GetChar%2A>, and so on) to avoid raising an error."}]},{"pos":[48544,48574],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[48633,48851],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified column value is equivalent to <bpt id=\"p2\">&lt;xref href=\"System.DBNull\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified column value is equivalent to <xref href=\"System.DBNull\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[49308,49393],"content":"Gets the value of the specified column in its native format given the column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column in its native format given the column ordinal.","pos":[0,85]}]},{"pos":[49541,49560],"content":"The column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The column ordinal.","pos":[0,19]}]},{"pos":[49618,49673],"content":"The value of the specified column in its native format.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column in its native format.","pos":[0,55]}]},{"pos":[49848,49943],"content":"The index passed was outside the range of 0 through <xref:System.Data.IDataRecord.FieldCount*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.","pos":[0,95],"source":"The index passed was outside the range of 0 through <xref:System.Data.IDataRecord.FieldCount*>."}]},{"pos":[50332,50414],"content":"Gets the value of the specified column in its native format given the column name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column in its native format given the column name.","pos":[0,82]}]},{"pos":[50427,50572],"content":"A case-sensitive lookup is performed first. If it fails, a second case-insensitive search is made.       This method is kana-width insensitive.","needQuote":false,"needEscape":true,"nodes":[{"content":"A case-sensitive lookup is performed first. If it fails, a second case-insensitive search is made.       This method is kana-width insensitive.","pos":[0,143],"nodes":[{"content":"A case-sensitive lookup is performed first.","pos":[0,43]},{"content":"If it fails, a second case-insensitive search is made.","pos":[44,98]},{"content":"This method is kana-width insensitive.","pos":[105,143]}]}]},{"pos":[50723,50739],"content":"The column name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The column name.","pos":[0,16]}]},{"pos":[50797,50852],"content":"The value of the specified column in its native format.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column in its native format.","pos":[0,55]}]},{"pos":[51027,51071],"content":"No column with the specified name was found.","needQuote":true,"needEscape":true,"nodes":[{"content":"No column with the specified name was found.","pos":[0,44]}]},{"pos":[51440,51534],"content":"Advances the data reader to the next result, when reading the results of batch SQL statements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Advances the data reader to the next result, when reading the results of batch SQL statements.","pos":[0,94]}]},{"pos":[51547,51707],"content":"Used to process multiple results that can be generated by executing batch SQL statements.       By default, the data reader is positioned on the first result.","needQuote":false,"needEscape":true,"nodes":[{"content":"Used to process multiple results that can be generated by executing batch SQL statements.       By default, the data reader is positioned on the first result.","pos":[0,158],"nodes":[{"content":"Used to process multiple results that can be generated by executing batch SQL statements.","pos":[0,89]},{"content":"By default, the data reader is positioned on the first result.","pos":[96,158]}]}]},{"pos":[51845,52011],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there are more result sets; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there are more result sets; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[52425,52512],"content":"Advances the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the next record.","needQuote":true,"needEscape":true,"source":"Advances the <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> to the next record."},{"pos":[52525,52895],"content":"The default position of the <xref:System.Data.OleDb.OleDbDataReader> is before the first record. Therefore, you must call Read to start accessing any data.       While the <xref:System.Data.OleDb.OleDbDataReader> is being used, the associated <xref:System.Data.OleDb.OleDbConnection> is busy serving it until you call <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default position of the <xref:System.Data.OleDb.OleDbDataReader> is before the first record. Therefore, you must call Read to start accessing any data.       While the <xref:System.Data.OleDb.OleDbDataReader> is being used, the associated <xref:System.Data.OleDb.OleDbConnection> is busy serving it until you call <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.","pos":[0,368],"nodes":[{"content":"The default position of the &lt;xref:System.Data.OleDb.OleDbDataReader&gt; is before the first record.","pos":[0,96],"source":"The default position of the <xref:System.Data.OleDb.OleDbDataReader> is before the first record."},{"content":"Therefore, you must call Read to start accessing any data.","pos":[97,155]},{"content":"While the &lt;xref:System.Data.OleDb.OleDbDataReader&gt; is being used, the associated &lt;xref:System.Data.OleDb.OleDbConnection&gt; is busy serving it until you call &lt;xref:System.Data.OleDb.OleDbDataReader.Close%2A&gt;.","pos":[162,368],"source":"       While the <xref:System.Data.OleDb.OleDbDataReader> is being used, the associated <xref:System.Data.OleDb.OleDbConnection> is busy serving it until you call <xref:System.Data.OleDb.OleDbDataReader.Close%2A>."}]}]},{"pos":[53646,53805],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there are more rows; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there are more rows; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[54264,54352],"content":"Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.","pos":[0,88]}]},{"pos":[54365,54816],"content":"The RecordsAffected property is not set until all rows are read and you close the <xref:System.Data.OleDb.OleDbDataReader>.       The value of this property is cumulative. For example, if two records are inserted in batch mode, the value of RecordsAffected is two.       <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> and RecordsAffected are the only properties that you can call after the <xref:System.Data.OleDb.OleDbDataReader> is closed.","needQuote":false,"needEscape":true,"nodes":[{"content":"The RecordsAffected property is not set until all rows are read and you close the <xref:System.Data.OleDb.OleDbDataReader>.       The value of this property is cumulative. For example, if two records are inserted in batch mode, the value of RecordsAffected is two.       <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> and RecordsAffected are the only properties that you can call after the <xref:System.Data.OleDb.OleDbDataReader> is closed.","pos":[0,447],"nodes":[{"content":"The RecordsAffected property is not set until all rows are read and you close the &lt;xref:System.Data.OleDb.OleDbDataReader&gt;.","pos":[0,123],"source":"The RecordsAffected property is not set until all rows are read and you close the <xref:System.Data.OleDb.OleDbDataReader>."},{"content":"The value of this property is cumulative.","pos":[130,171]},{"content":"For example, if two records are inserted in batch mode, the value of RecordsAffected is two.","pos":[172,264]},{"content":"&lt;xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A&gt; and RecordsAffected are the only properties that you can call after the &lt;xref:System.Data.OleDb.OleDbDataReader&gt; is closed.","pos":[271,447],"source":"       <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> and RecordsAffected are the only properties that you can call after the <xref:System.Data.OleDb.OleDbDataReader> is closed."}]}]},{"pos":[54942,55073],"content":"The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.","pos":[0,131]}]},{"pos":[55553,55661],"content":"Gets the number of fields in the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that are not hidden.","needQuote":true,"needEscape":true,"source":"Gets the number of fields in the <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> that are not hidden."},{"pos":[55673,55950],"content":"This value is used to determine how many fields in the <xref:System.Data.OleDb.OleDbDataReader> are visible. For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields. The hidden fields are always appended behind the visible fields.","needQuote":true,"needEscape":true,"nodes":[{"content":"This value is used to determine how many fields in the <xref:System.Data.OleDb.OleDbDataReader> are visible. For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields. The hidden fields are always appended behind the visible fields.","pos":[0,277],"nodes":[{"content":"This value is used to determine how many fields in the &lt;xref:System.Data.OleDb.OleDbDataReader&gt; are visible.","pos":[0,108],"source":"This value is used to determine how many fields in the <xref:System.Data.OleDb.OleDbDataReader> are visible."},{"content":"For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields.","pos":[109,212]},{"content":"The hidden fields are always appended behind the visible fields.","pos":[213,277]}]}]},{"pos":[56077,56118],"content":"The number of fields that are not hidden.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of fields that are not hidden.","pos":[0,41]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.OleDb.OleDbDataReader\n  id: OleDbDataReader\n  children:\n  - System.Data.OleDb.OleDbDataReader.Close\n  - System.Data.OleDb.OleDbDataReader.Depth\n  - System.Data.OleDb.OleDbDataReader.FieldCount\n  - System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetData(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetDbDataReader(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetEnumerator\n  - System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetName(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)\n  - System.Data.OleDb.OleDbDataReader.GetSchemaTable\n  - System.Data.OleDb.OleDbDataReader.GetString(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])\n  - System.Data.OleDb.OleDbDataReader.HasRows\n  - System.Data.OleDb.OleDbDataReader.IsClosed\n  - System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.Item(System.Int32)\n  - System.Data.OleDb.OleDbDataReader.Item(System.String)\n  - System.Data.OleDb.OleDbDataReader.NextResult\n  - System.Data.OleDb.OleDbDataReader.Read\n  - System.Data.OleDb.OleDbDataReader.RecordsAffected\n  - System.Data.OleDb.OleDbDataReader.VisibleFieldCount\n  langs:\n  - csharp\n  name: OleDbDataReader\n  nameWithType: OleDbDataReader\n  fullName: System.Data.OleDb.OleDbDataReader\n  type: Class\n  summary: Provides a way of reading a forward-only stream of data rows from a data source. This class cannot be inherited.\n  remarks: \"To create an OleDbDataReader, you must call the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method of the <xref:System.Data.OleDb.OleDbCommand> object, instead of directly using a constructor.  \\n  \\n Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the OleDbDataReader object. You must also close the OleDbDataReader object if you plan to resuse an <xref:System.Data.OleDb.OleDbCommand> object.For example, you cannot retrieve output parameters until after you call <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.  \\n  \\n Changes made to a result set by another process or thread while data is being read may be visible to the user of the OleDbDataReader. However, the precise behavior is timing dependent.  \\n  \\n <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> and <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> are the only properties that you can call after the OleDbDataReader is closed. Although the <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> property may be accessed while the OleDbDataReader exists, always call <xref:System.Data.OleDb.OleDbDataReader.Close%2A> before returning the value of <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> to guarantee an accurate return value.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an OleDbDataReader. The example reads through the data, writing it out to the console. Finally, the example closes the OleDbDataReader and then the <xref:System.Data.OleDb.OleDbConnection>.  \\n  \\n [!code-vb[Classic WebData OleDbDataReader Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_2_1.vb)]\\n [!code-cs[Classic WebData OleDbDataReader Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_2_1.cs)]\"\n  syntax:\n    content: 'public sealed class OleDbDataReader : System.Data.Common.DbDataReader'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.Data.Common.DbDataReader\n  implements: []\n  inheritedMembers:\n  - System.Data.Common.DbDataReader.Dispose\n  - System.Data.Common.DbDataReader.Dispose(System.Boolean)\n  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)\n  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)\n  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)\n  - System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)\n  - System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)\n  - System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])\n  - System.Data.Common.DbDataReader.GetStream(System.Int32)\n  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)\n  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)\n  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)\n  - System.Data.Common.DbDataReader.NextResultAsync\n  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)\n  - System.Data.Common.DbDataReader.ReadAsync\n  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)\n  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.Close\n  id: Close\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: OleDbDataReader.Close()\n  fullName: System.Data.OleDb.OleDbDataReader.Close()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Closes the <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> object.\n  remarks: \"You must explicitly call the Close method when you are through using the <xref:System.Data.OleDb.OleDbDataReader> to use the associated <xref:System.Data.OleDb.OleDbConnection> for any other purpose.  \\n  \\n> [!CAUTION]\\n>  Do not call **Close** or **Dispose** on a Connection, a DataReader, or any other managed object in the **Finalize** method of your class. In a finalizer, you should only release unmanaged resources that your class owns directly. If your class does not own any unmanaged resources, do not include a **Finalize** method in your class definition. For more information, see [Garbage Collection](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader>, and then the <xref:System.Data.OleDb.OleDbConnection>.  \\n  \\n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_24_1.cs)]\\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_24_1.vb)]\"\n  syntax:\n    content: public override void Close ();\n    parameters: []\n  overload: System.Data.OleDb.OleDbDataReader.Close*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.Depth\n  id: Depth\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: Depth\n  nameWithType: OleDbDataReader.Depth\n  fullName: System.Data.OleDb.OleDbDataReader.Depth\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets a value that indicates the depth of nesting for the current row.\n  remarks: The outermost table has a depth of zero.\n  syntax:\n    content: public override int Depth { get; }\n    return:\n      type: System.Int32\n      description: The depth of nesting for the current row.\n  overload: System.Data.OleDb.OleDbDataReader.Depth*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.FieldCount\n  id: FieldCount\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: FieldCount\n  nameWithType: OleDbDataReader.FieldCount\n  fullName: System.Data.OleDb.OleDbDataReader.FieldCount\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the number of columns in the current row.\n  remarks: \"Includes hidden fields. Use <xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A> to exclude hidden fields.  \\n  \\n After executing a query that does not return rows, FieldCount returns 0.\"\n  syntax:\n    content: public override int FieldCount { get; }\n    return:\n      type: System.Int32\n      description: When not positioned in a valid recordset, 0; otherwise the number of columns in the current record. The default is -1.\n  overload: System.Data.OleDb.OleDbDataReader.FieldCount*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: There is no current connection to a data source.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)\n  id: GetBoolean(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetBoolean(Int32)\n  nameWithType: OleDbDataReader.GetBoolean(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetBoolean(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the value of the specified column as a Boolean.\n  remarks: \"No conversions are performed; therefore the data retrieved must already be a Boolean, or an exception is generated.  \\n  \\n Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.\"\n  syntax:\n    content: public override bool GetBoolean (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Boolean\n      description: The value of the column.\n  overload: System.Data.OleDb.OleDbDataReader.GetBoolean*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)\n  id: GetByte(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetByte(Int32)\n  nameWithType: OleDbDataReader.GetByte(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetByte(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the value of the specified column as a byte.\n  remarks: \"No conversions are performed; therefore the data retrieved must already be a byte.  \\n  \\n Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.\"\n  syntax:\n    content: public override byte GetByte (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Byte\n      description: The value of the specified column as a byte.\n  overload: System.Data.OleDb.OleDbDataReader.GetByte*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)\n  nameWithType: OleDbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Reads a stream of bytes from the specified column offset into the buffer as an array starting at the given buffer offset.\n  remarks: \"GetBytes returns the number of available bytes in the field. Most of the time this is the exact length of the field. However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field. This may be the case, for example, when the <xref:System.Data.OleDb.OleDbDataReader> is reading a large data structure into a buffer. For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.  \\n  \\n If you pass a buffer that is `null`, GetBytes returns the length of the field in bytes.  \\n  \\n No conversions are performed; therefore, the data retrieved must already be a byte array.\"\n  syntax:\n    content: public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    - id: dataIndex\n      type: System.Int64\n      description: The index within the field from which to start the read operation.\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer into which to read the stream of bytes.\n    - id: bufferIndex\n      type: System.Int32\n      description: The index within the `buffer` where the write operation is to start.\n    - id: length\n      type: System.Int32\n      description: The maximum length to copy into the buffer.\n    return:\n      type: System.Int64\n      description: The actual number of bytes read.\n  overload: System.Data.OleDb.OleDbDataReader.GetBytes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)\n  id: GetChar(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetChar(Int32)\n  nameWithType: OleDbDataReader.GetChar(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetChar(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the value of the specified column as a character.\n  remarks: Not supported for <xref:System.Data.OleDb>.\n  syntax:\n    content: public override char GetChar (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Char\n      description: The value of the specified column.\n  overload: System.Data.OleDb.OleDbDataReader.GetChar*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetChars(Int32,Int64,Char[],Int32,Int32)\n  nameWithType: OleDbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.\n  remarks: \"GetChars returns the number of available characters in the field. Most of the time this is the exact length of the field. However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field. This may be the case, for example, when the <xref:System.Data.OleDb.OleDbDataReader> is reading a large data structure into a buffer. For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.  \\n  \\n If you pass a buffer that is `null`, GetChars returns the length of the field in characters.  \\n  \\n No conversions are performed; therefore, the data retrieved must already be a character array.\"\n  syntax:\n    content: public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    - id: dataIndex\n      type: System.Int64\n      description: The index within the row from which to start the read operation.\n    - id: buffer\n      type: System.Char[]\n      description: The buffer into which to copy data.\n    - id: bufferIndex\n      type: System.Int32\n      description: The index within the `buffer` where the write operation is to start.\n    - id: length\n      type: System.Int32\n      description: The number of characters to read.\n    return:\n      type: System.Int64\n      description: The actual number of characters read.\n  overload: System.Data.OleDb.OleDbDataReader.GetChars*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetData(System.Int32)\n  id: GetData(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetData(Int32)\n  nameWithType: OleDbDataReader.GetData(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetData(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Returns an <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> object for the requested column ordinal.\n  remarks: The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> will call GetData if the provider returns a <xref:System.Data.IDataReader> that has a column that supports <xref:System.Data.IDataReader>.\n  syntax:\n    content: public System.Data.OleDb.OleDbDataReader GetData (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.OleDb.OleDbDataReader\n      description: An <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> object.\n  overload: System.Data.OleDb.OleDbDataReader.GetData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)\n  id: GetDataTypeName(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetDataTypeName(Int32)\n  nameWithType: OleDbDataReader.GetDataTypeName(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetDataTypeName(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the name of the source data type.\n  syntax:\n    content: public override string GetDataTypeName (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.String\n      description: The name of the back-end data type. For more information, see [SQL Server data types](http://go.microsoft.com/fwlink/?LinkId=198032) or [Access data types](http://go.microsoft.com/fwlink/?LinkId=198033).\n  overload: System.Data.OleDb.OleDbDataReader.GetDataTypeName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)\n  id: GetDateTime(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetDateTime(Int32)\n  nameWithType: OleDbDataReader.GetDateTime(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetDateTime(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the value of the specified column as a <xref:System.DateTime> object.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTime> object.  \\n  \\n Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.\"\n  syntax:\n    content: public override DateTime GetDateTime (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.DateTime\n      description: The value of the specified column.\n  overload: System.Data.OleDb.OleDbDataReader.GetDateTime*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetDbDataReader(System.Int32)\n  id: GetDbDataReader(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetDbDataReader(Int32)\n  nameWithType: OleDbDataReader.GetDbDataReader(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetDbDataReader(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  syntax:\n    content: protected override System.Data.Common.DbDataReader GetDbDataReader (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Data.Common.DbDataReader\n      description: To be added.\n  overload: System.Data.OleDb.OleDbDataReader.GetDbDataReader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)\n  id: GetDecimal(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetDecimal(Int32)\n  nameWithType: OleDbDataReader.GetDecimal(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetDecimal(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the value of the specified column as a <xref:System.Decimal> object.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a <xref:System.Decimal> object.  \\n  \\n Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.\"\n  syntax:\n    content: public override decimal GetDecimal (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Decimal\n      description: The value of the specified column.\n  overload: System.Data.OleDb.OleDbDataReader.GetDecimal*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)\n  id: GetDouble(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetDouble(Int32)\n  nameWithType: OleDbDataReader.GetDouble(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetDouble(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the value of the specified column as a double-precision floating-point number.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a double-precision floating-point number.  \\n  \\n Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.\"\n  syntax:\n    content: public override double GetDouble (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Double\n      description: The value of the specified column.\n  overload: System.Data.OleDb.OleDbDataReader.GetDouble*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetEnumerator\n  id: GetEnumerator\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: OleDbDataReader.GetEnumerator()\n  fullName: System.Data.OleDb.OleDbDataReader.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Returns an <xref:System.Collections.IEnumerator> that can be used to iterate through the rows in the data reader.\n  remarks: Although you can use this method to retrieve an explicit enumerator, in languages that support a `foreach` construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.\n  syntax:\n    content: public override System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> that can be used to iterate through the rows in the data reader.\n  overload: System.Data.OleDb.OleDbDataReader.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)\n  id: GetFieldType(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetFieldType(Int32)\n  nameWithType: OleDbDataReader.GetFieldType(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetFieldType(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the <xref:System.Type> that is the data type of the object.\n  syntax:\n    content: public override Type GetFieldType (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Type\n      description: The <xref:System.Type> that is the data type of the object.\n  overload: System.Data.OleDb.OleDbDataReader.GetFieldType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)\n  id: GetFloat(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetFloat(Int32)\n  nameWithType: OleDbDataReader.GetFloat(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetFloat(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the value of the specified column as a single-precision floating-point number.\n  remarks: \"No conversions are performed. Therefore, the data retrieved must already be a single-precision floating-point number.  \\n  \\n Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.\"\n  syntax:\n    content: public override float GetFloat (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Single\n      description: The value of the specified column.\n  overload: System.Data.OleDb.OleDbDataReader.GetFloat*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)\n  id: GetGuid(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetGuid(Int32)\n  nameWithType: OleDbDataReader.GetGuid(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetGuid(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the value of the specified column as a globally unique identifier (GUID).\n  remarks: \"No conversions are performed; therefore the data retrieved must already be a globally unique identifier.  \\n  \\n Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.\"\n  syntax:\n    content: public override Guid GetGuid (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Guid\n      description: The value of the specified column.\n  overload: System.Data.OleDb.OleDbDataReader.GetGuid*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)\n  id: GetInt16(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetInt16(Int32)\n  nameWithType: OleDbDataReader.GetInt16(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetInt16(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the value of the specified column as a 16-bit signed integer.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer.  \\n  \\n Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.\"\n  syntax:\n    content: public override short GetInt16 (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Int16\n      description: The value of the specified column.\n  overload: System.Data.OleDb.OleDbDataReader.GetInt16*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)\n  id: GetInt32(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetInt32(Int32)\n  nameWithType: OleDbDataReader.GetInt32(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetInt32(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the value of the specified column as a 32-bit signed integer.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a 32-bit signed integer.  \\n  \\n Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.\"\n  syntax:\n    content: public override int GetInt32 (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Int32\n      description: The value of the specified column.\n  overload: System.Data.OleDb.OleDbDataReader.GetInt32*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)\n  id: GetInt64(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetInt64(Int32)\n  nameWithType: OleDbDataReader.GetInt64(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetInt64(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the value of the specified column as a 64-bit signed integer.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer.  \\n  \\n Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.\"\n  syntax:\n    content: public override long GetInt64 (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Int64\n      description: The value of the specified column.\n  overload: System.Data.OleDb.OleDbDataReader.GetInt64*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetName(System.Int32)\n  id: GetName(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetName(Int32)\n  nameWithType: OleDbDataReader.GetName(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetName(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the name of the specified column.\n  syntax:\n    content: public override string GetName (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.String\n      description: The name of the specified column.\n  overload: System.Data.OleDb.OleDbDataReader.GetName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)\n  id: GetOrdinal(System.String)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetOrdinal(String)\n  nameWithType: OleDbDataReader.GetOrdinal(String)\n  fullName: System.Data.OleDb.OleDbDataReader.GetOrdinal(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the column ordinal, given the name of the column.\n  remarks: \"GetOrdinal performs a case-sensitive lookup first. If it fails, a second case-insensitive search is made. The method throws an `IndexOutOfRange` exceptionif the zero-based column ordinal is not found.  \\n  \\n GetOrdinal is kana-width insensitive.  \\n  \\n Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call GetOrdinal within a loop. Save time by calling GetOrdinal one time and assigning the results to an integer variable for use within the loop.\"\n  example:\n  - \"The following example demonstrates how to use the GetOrdinal method.  \\n  \\n [!code-vb[Classic WebData OleDbDataReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_9_1.vb)]\\n [!code-cs[Classic WebData OleDbDataReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_9_1.cs)]\"\n  syntax:\n    content: public override int GetOrdinal (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the column.\n    return:\n      type: System.Int32\n      description: The zero-based column ordinal.\n  overload: System.Data.OleDb.OleDbDataReader.GetOrdinal*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: The name specified is not a valid column name.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetSchemaTable\n  id: GetSchemaTable\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetSchemaTable()\n  nameWithType: OleDbDataReader.GetSchemaTable()\n  fullName: System.Data.OleDb.OleDbDataReader.GetSchemaTable()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Returns a <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata of the <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref>.\n  remarks: \"The GetSchemaTable method maps to the OLE DB **IColumnsRowset::GetColumnsRowset** method, and returns metadata about each column in the following order:  \\n  \\n|DataReader column|OLE DB column ID|Description|  \\n|-----------------------|----------------------|-----------------|  \\n|ColumnName|DBCOLUMN_NAME|The name of the column; this might not be unique. If this cannot be determined, a null value is returned. This name always reflects the most recent renaming of the column in the current view or command text.|  \\n|ColumnOrdinal|DBCOLUMN_NUMBER|The zero-based ordinal of the column. This column cannot contain a null value.|  \\n|ColumnSize|DBCOLUMN_COLUMNSIZE|The maximum possible length of a value in the column. For columns that use a fixed-length data type, this is the size of the data type.|  \\n|NumericPrecision|DBCOLUMN_PRECISION|If DbType is a numeric data type, this is the maximum precision of the column. The precision of columns with a data type of DBTYPE_DECIMAL or DBTYPE_NUMERIC depends on the definition of the column. If DbType is not a numeric data type, this is a null value.|  \\n|NumericScale|DBCOLUMN_SCALE|If DbType is DBTYPE_DECIMAL or DBTYPE_NUMERIC, this is the number of digits to the right of the decimal point. Otherwise, this is a null value.|  \\n|DataType|None|Maps to the .NET Framework type of the column.|  \\n|ProviderType|DBCOLUMN_TYPE|The indicator of the column's data type. If the data type of the column varies from row to row, this must be DBTYPE_VARIANT. This column cannot contain a null value.|  \\n|IsLong|DBCOLUMNFLAGS_ISLONG|The provider sets DBCOLUMNFLAGS_ISLONG if the column contains a Binary Long Object (BLOB) that contains very long data. The definition of very long data is provider-specific. The setting of this flag corresponds to the value of the IS_LONG column in the PROVIDER_TYPES rowset for the data type.|  \\n|AllowDBNull|DBCOLUMNFLAGS_ISNULLABLE|The provider sets DBCOLUMNFLAGS_ISNULLABLE if the consumer can set the column to a null value, or if the provider cannot determine whether the consumer can set the column to a null value. A column may contain null values, even if it cannot be set to a null value.|  \\n|IsReadOnly|DBCOLUMNFLAGS_WRITE|`true` if the column cannot be modified; otherwise `false`. The column is assumed to be writable if the provider has set either the DBCOLUMNFLAGS_WRITE or DBCOLUMNFLAGS_WRITEUNKNOWN flag.|  \\n|IsRowVersion|DBCOLUMNFLAGS_ISROWID|The provider sets DBCOLUMNFLAGS_ISROWID if the column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.|  \\n|IsUnique|DBCOLUMN_ISUNIQUE|VARIANT_TRUE: No two rows in the base table-the table returned in BaseTableName-can have the same value in this column. IsUnique is guaranteed to be VARIANT_TRUE if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.<br /><br /> VARIANT_FALSE: The column can contain duplicate values in the base table. The default of this column is VARIANT_FALSE.|  \\n|IsKey|DBCOLUMN_KEYCOLUMN|VARIANT_TRUE: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row. The set of columns with IsKey set to VARIANT_TRUE must uniquely identify a row in the rowset. There is no requirement that this set of columns is a minimal set of columns. This set of columns may be generated from a base table primary key, a unique constraint or a unique index.<br /><br /> VARIANT_FALSE: The column is not required to uniquely identify the row.|  \\n|IsAutoIncrement|DBCOLUMN_ISAUTOINCREMENT|VARIANT_TRUE: The column assigns values to new rows in fixed increments.<br /><br /> VARIANT_FALSE: The column does not assign values to new rows in fixed increments. The default of this column is VARIANT_FALSE.|  \\n|BaseSchemaName|DBCOLUMN_BASESCHEMANAME|The name of the schema in the data store that contains the column. A null value if the base schema name cannot be determined. The default of this column is a null value.|  \\n|BaseCatalogName|DBCOLUMN_BASECATALOGNAME|The name of the catalog in the data store that contains the column. A null value if the base catalog name cannot be determined. The default of this column is a null value.|  \\n|BaseTableName|DBCOLUMN_BASETABLENAME|The name of the table or view in the data store that contains the column. A null value if the base table name cannot be determined. The default of this column is a null value.|  \\n|BaseColumnName|DBCOLUMN_BASECOLUMNNAME|The name of the column in the data store. This might be different from the column name returned in the ColumnName column if an alias was used. A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store. The default of this column is a null value.|  \\n  \\n> [!NOTE]\\n>  To make sure that metadata columns return the correct information, you must call <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`. Otherwise, some of the columns in the schema table may return default, null, or incorrect data.\"\n  syntax:\n    content: public override System.Data.DataTable GetSchemaTable ();\n    parameters: []\n    return:\n      type: System.Data.DataTable\n      description: A <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata.\n  overload: System.Data.OleDb.OleDbDataReader.GetSchemaTable*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> is closed.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetString(System.Int32)\n  id: GetString(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetString(Int32)\n  nameWithType: OleDbDataReader.GetString(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetString(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the value of the specified column as a string.\n  remarks: \"No conversions are performed; therefore the data retrieved must already be a string.  \\n  \\n Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.\"\n  syntax:\n    content: public override string GetString (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.String\n      description: The value of the specified column.\n  overload: System.Data.OleDb.OleDbDataReader.GetString*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)\n  id: GetTimeSpan(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetTimeSpan(Int32)\n  nameWithType: OleDbDataReader.GetTimeSpan(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetTimeSpan(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the value of the specified column as a <xref:System.TimeSpan> object.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a <xref:System.TimeSpan> object.  \\n  \\n Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.\"\n  syntax:\n    content: public TimeSpan GetTimeSpan (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.TimeSpan\n      description: The value of the specified column.\n  overload: System.Data.OleDb.OleDbDataReader.GetTimeSpan*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)\n  id: GetValue(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetValue(Int32)\n  nameWithType: OleDbDataReader.GetValue(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetValue(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the value of the column at the specified ordinal in its native format.\n  remarks: This method returns <xref:System.DBNull> for null database columns.\n  syntax:\n    content: public override object GetValue (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Object\n      description: The value to return.\n  overload: System.Data.OleDb.OleDbDataReader.GetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])\n  id: GetValues(System.Object[])\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: GetValues(Object[])\n  nameWithType: OleDbDataReader.GetValues(Object[])\n  fullName: System.Data.OleDb.OleDbDataReader.GetValues(Object[])\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Populates an array of objects with the column values of the current row.\n  remarks: \"For most applications, the GetValues method provides an efficient means for retrieving all columns, instead of retrieving each column individually.  \\n  \\n You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row. Only the amount of data the <xref:System.Object> array holds is copied to the array. You can also pass an <xref:System.Object> array whose length is more than the number of columns that are contained in the resulting row.  \\n  \\n This method returns <xref:System.DBNull> for null database columns.\"\n  example:\n  - >-\n    [!code-cs[OleDbDataReader_GetValues#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_12_1.cs)]\n     [!code-vb[OleDbDataReader_GetValues#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_12_1.vb)]\n  syntax:\n    content: public override int GetValues (object[] values);\n    parameters:\n    - id: values\n      type: System.Object[]\n      description: An array of <xref:System.Object> into which to copy the attribute columns.\n    return:\n      type: System.Int32\n      description: The number of instances of <xref:System.Object> in the array.\n  overload: System.Data.OleDb.OleDbDataReader.GetValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.HasRows\n  id: HasRows\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: HasRows\n  nameWithType: OleDbDataReader.HasRows\n  fullName: System.Data.OleDb.OleDbDataReader.HasRows\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets a value that indicates whether the <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> contains one or more rows.\n  syntax:\n    content: public override bool HasRows { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> contains one or more rows; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.OleDb.OleDbDataReader.HasRows*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.IsClosed\n  id: IsClosed\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: IsClosed\n  nameWithType: OleDbDataReader.IsClosed\n  fullName: System.Data.OleDb.OleDbDataReader.IsClosed\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Indicates whether the data reader is closed.\n  remarks: IsClosed and <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.OleDb.OleDbDataReader> is closed.\n  syntax:\n    content: public override bool IsClosed { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> is closed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.OleDb.OleDbDataReader.IsClosed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)\n  id: IsDBNull(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: IsDBNull(Int32)\n  nameWithType: OleDbDataReader.IsDBNull(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.IsDBNull(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets a value that indicates whether the column contains nonexistent or missing values.\n  remarks: Call this method to look for null column values before calling the typed get methods (for example, <xref:System.Data.OleDb.OleDbDataReader.GetByte%2A>, <xref:System.Data.OleDb.OleDbDataReader.GetChar%2A>, and so on) to avoid raising an error.\n  syntax:\n    content: public override bool IsDBNull (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified column value is equivalent to <xref href=\"System.DBNull\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.OleDb.OleDbDataReader.IsDBNull*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: OleDbDataReader.Item(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the value of the specified column in its native format given the column ordinal.\n  syntax:\n    content: public override object this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The column ordinal.\n    return:\n      type: System.Object\n      description: The value of the specified column in its native format.\n  overload: System.Data.OleDb.OleDbDataReader.Item*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: The index passed was outside the range of 0 through <xref:System.Data.IDataRecord.FieldCount*>.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.Item(System.String)\n  id: Item(System.String)\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: OleDbDataReader.Item(String)\n  fullName: System.Data.OleDb.OleDbDataReader.Item(String)\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the value of the specified column in its native format given the column name.\n  remarks: \"A case-sensitive lookup is performed first. If it fails, a second case-insensitive search is made.  \\n  \\n This method is kana-width insensitive.\"\n  syntax:\n    content: public override object this[string name] { get; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The column name.\n    return:\n      type: System.Object\n      description: The value of the specified column in its native format.\n  overload: System.Data.OleDb.OleDbDataReader.Item*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: No column with the specified name was found.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.NextResult\n  id: NextResult\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: NextResult()\n  nameWithType: OleDbDataReader.NextResult()\n  fullName: System.Data.OleDb.OleDbDataReader.NextResult()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Advances the data reader to the next result, when reading the results of batch SQL statements.\n  remarks: \"Used to process multiple results that can be generated by executing batch SQL statements.  \\n  \\n By default, the data reader is positioned on the first result.\"\n  syntax:\n    content: public override bool NextResult ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there are more result sets; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.OleDb.OleDbDataReader.NextResult*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.Read\n  id: Read\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: Read()\n  nameWithType: OleDbDataReader.Read()\n  fullName: System.Data.OleDb.OleDbDataReader.Read()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Advances the <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> to the next record.\n  remarks: \"The default position of the <xref:System.Data.OleDb.OleDbDataReader> is before the first record. Therefore, you must call Read to start accessing any data.  \\n  \\n While the <xref:System.Data.OleDb.OleDbDataReader> is being used, the associated <xref:System.Data.OleDb.OleDbConnection> is busy serving it until you call <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader> and then the <xref:System.Data.OleDb.OleDbConnection>.  \\n  \\n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_6_1.cs)]\\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_6_1.vb)]\"\n  syntax:\n    content: public override bool Read ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there are more rows; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.OleDb.OleDbDataReader.Read*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.RecordsAffected\n  id: RecordsAffected\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: RecordsAffected\n  nameWithType: OleDbDataReader.RecordsAffected\n  fullName: System.Data.OleDb.OleDbDataReader.RecordsAffected\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.\n  remarks: \"The RecordsAffected property is not set until all rows are read and you close the <xref:System.Data.OleDb.OleDbDataReader>.  \\n  \\n The value of this property is cumulative. For example, if two records are inserted in batch mode, the value of RecordsAffected is two.  \\n  \\n <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> and RecordsAffected are the only properties that you can call after the <xref:System.Data.OleDb.OleDbDataReader> is closed.\"\n  syntax:\n    content: public override int RecordsAffected { get; }\n    return:\n      type: System.Int32\n      description: The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.\n  overload: System.Data.OleDb.OleDbDataReader.RecordsAffected*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbDataReader.VisibleFieldCount\n  id: VisibleFieldCount\n  parent: System.Data.OleDb.OleDbDataReader\n  langs:\n  - csharp\n  name: VisibleFieldCount\n  nameWithType: OleDbDataReader.VisibleFieldCount\n  fullName: System.Data.OleDb.OleDbDataReader.VisibleFieldCount\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the number of fields in the <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> that are not hidden.\n  remarks: This value is used to determine how many fields in the <xref:System.Data.OleDb.OleDbDataReader> are visible. For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields. The hidden fields are always appended behind the visible fields.\n  syntax:\n    content: public override int VisibleFieldCount { get; }\n    return:\n      type: System.Int32\n      description: The number of fields that are not hidden.\n  overload: System.Data.OleDb.OleDbDataReader.VisibleFieldCount*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Common.DbDataReader\n  isExternal: false\n  name: System.Data.Common.DbDataReader\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.InvalidCastException\n  isExternal: true\n  name: System.InvalidCastException\n- uid: System.IndexOutOfRangeException\n  isExternal: true\n  name: System.IndexOutOfRangeException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Data.OleDb.OleDbDataReader.Close\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: Close()\n  nameWithType: OleDbDataReader.Close()\n  fullName: System.Data.OleDb.OleDbDataReader.Close()\n- uid: System.Data.OleDb.OleDbDataReader.Depth\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: Depth\n  nameWithType: OleDbDataReader.Depth\n  fullName: System.Data.OleDb.OleDbDataReader.Depth\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.OleDb.OleDbDataReader.FieldCount\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: FieldCount\n  nameWithType: OleDbDataReader.FieldCount\n  fullName: System.Data.OleDb.OleDbDataReader.FieldCount\n- uid: System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetBoolean(Int32)\n  nameWithType: OleDbDataReader.GetBoolean(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetBoolean(Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetByte(Int32)\n  nameWithType: OleDbDataReader.GetByte(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetByte(Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)\n  nameWithType: OleDbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetChar(Int32)\n  nameWithType: OleDbDataReader.GetChar(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetChar(Int32)\n- uid: System.Char\n  parent: System\n  isExternal: true\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetChars(Int32,Int64,Char[],Int32,Int32)\n  nameWithType: OleDbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)\n- uid: System.Char[]\n  parent: System\n  isExternal: true\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: Char[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.OleDb.OleDbDataReader.GetData(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetData(Int32)\n  nameWithType: OleDbDataReader.GetData(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetData(Int32)\n- uid: System.Data.OleDb.OleDbDataReader\n  parent: System.Data.OleDb\n  isExternal: false\n  name: OleDbDataReader\n  nameWithType: OleDbDataReader\n  fullName: System.Data.OleDb.OleDbDataReader\n- uid: System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetDataTypeName(Int32)\n  nameWithType: OleDbDataReader.GetDataTypeName(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetDataTypeName(Int32)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetDateTime(Int32)\n  nameWithType: OleDbDataReader.GetDateTime(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetDateTime(Int32)\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Data.OleDb.OleDbDataReader.GetDbDataReader(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetDbDataReader(Int32)\n  nameWithType: OleDbDataReader.GetDbDataReader(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetDbDataReader(Int32)\n- uid: System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetDecimal(Int32)\n  nameWithType: OleDbDataReader.GetDecimal(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetDecimal(Int32)\n- uid: System.Decimal\n  parent: System\n  isExternal: true\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetDouble(Int32)\n  nameWithType: OleDbDataReader.GetDouble(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetDouble(Int32)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Data.OleDb.OleDbDataReader.GetEnumerator\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: OleDbDataReader.GetEnumerator()\n  fullName: System.Data.OleDb.OleDbDataReader.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetFieldType(Int32)\n  nameWithType: OleDbDataReader.GetFieldType(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetFieldType(Int32)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetFloat(Int32)\n  nameWithType: OleDbDataReader.GetFloat(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetFloat(Int32)\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetGuid(Int32)\n  nameWithType: OleDbDataReader.GetGuid(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetGuid(Int32)\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetInt16(Int32)\n  nameWithType: OleDbDataReader.GetInt16(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetInt16(Int32)\n- uid: System.Int16\n  parent: System\n  isExternal: true\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetInt32(Int32)\n  nameWithType: OleDbDataReader.GetInt32(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetInt32(Int32)\n- uid: System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetInt64(Int32)\n  nameWithType: OleDbDataReader.GetInt64(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetInt64(Int32)\n- uid: System.Data.OleDb.OleDbDataReader.GetName(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetName(Int32)\n  nameWithType: OleDbDataReader.GetName(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetName(Int32)\n- uid: System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetOrdinal(String)\n  nameWithType: OleDbDataReader.GetOrdinal(String)\n  fullName: System.Data.OleDb.OleDbDataReader.GetOrdinal(String)\n- uid: System.Data.OleDb.OleDbDataReader.GetSchemaTable\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetSchemaTable()\n  nameWithType: OleDbDataReader.GetSchemaTable()\n  fullName: System.Data.OleDb.OleDbDataReader.GetSchemaTable()\n- uid: System.Data.DataTable\n  parent: System.Data\n  isExternal: false\n  name: DataTable\n  nameWithType: DataTable\n  fullName: System.Data.DataTable\n- uid: System.Data.OleDb.OleDbDataReader.GetString(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetString(Int32)\n  nameWithType: OleDbDataReader.GetString(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetString(Int32)\n- uid: System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetTimeSpan(Int32)\n  nameWithType: OleDbDataReader.GetTimeSpan(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetTimeSpan(Int32)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetValue(Int32)\n  nameWithType: OleDbDataReader.GetValue(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.GetValue(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetValues(Object[])\n  nameWithType: OleDbDataReader.GetValues(Object[])\n  fullName: System.Data.OleDb.OleDbDataReader.GetValues(Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.OleDb.OleDbDataReader.HasRows\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: HasRows\n  nameWithType: OleDbDataReader.HasRows\n  fullName: System.Data.OleDb.OleDbDataReader.HasRows\n- uid: System.Data.OleDb.OleDbDataReader.IsClosed\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: IsClosed\n  nameWithType: OleDbDataReader.IsClosed\n  fullName: System.Data.OleDb.OleDbDataReader.IsClosed\n- uid: System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: IsDBNull(Int32)\n  nameWithType: OleDbDataReader.IsDBNull(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.IsDBNull(Int32)\n- uid: System.Data.OleDb.OleDbDataReader.Item(System.Int32)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: OleDbDataReader.Item(Int32)\n  fullName: System.Data.OleDb.OleDbDataReader.Item(Int32)\n- uid: System.Data.OleDb.OleDbDataReader.Item(System.String)\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: Item(String)\n  nameWithType: OleDbDataReader.Item(String)\n  fullName: System.Data.OleDb.OleDbDataReader.Item(String)\n- uid: System.Data.OleDb.OleDbDataReader.NextResult\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: NextResult()\n  nameWithType: OleDbDataReader.NextResult()\n  fullName: System.Data.OleDb.OleDbDataReader.NextResult()\n- uid: System.Data.OleDb.OleDbDataReader.Read\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: Read()\n  nameWithType: OleDbDataReader.Read()\n  fullName: System.Data.OleDb.OleDbDataReader.Read()\n- uid: System.Data.OleDb.OleDbDataReader.RecordsAffected\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: RecordsAffected\n  nameWithType: OleDbDataReader.RecordsAffected\n  fullName: System.Data.OleDb.OleDbDataReader.RecordsAffected\n- uid: System.Data.OleDb.OleDbDataReader.VisibleFieldCount\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: VisibleFieldCount\n  nameWithType: OleDbDataReader.VisibleFieldCount\n  fullName: System.Data.OleDb.OleDbDataReader.VisibleFieldCount\n- uid: System.Data.OleDb.OleDbDataReader.Close*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: Close\n  nameWithType: OleDbDataReader.Close\n- uid: System.Data.OleDb.OleDbDataReader.Depth*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: Depth\n  nameWithType: OleDbDataReader.Depth\n- uid: System.Data.OleDb.OleDbDataReader.FieldCount*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: FieldCount\n  nameWithType: OleDbDataReader.FieldCount\n- uid: System.Data.OleDb.OleDbDataReader.GetBoolean*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetBoolean\n  nameWithType: OleDbDataReader.GetBoolean\n- uid: System.Data.OleDb.OleDbDataReader.GetByte*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetByte\n  nameWithType: OleDbDataReader.GetByte\n- uid: System.Data.OleDb.OleDbDataReader.GetBytes*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetBytes\n  nameWithType: OleDbDataReader.GetBytes\n- uid: System.Data.OleDb.OleDbDataReader.GetChar*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetChar\n  nameWithType: OleDbDataReader.GetChar\n- uid: System.Data.OleDb.OleDbDataReader.GetChars*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetChars\n  nameWithType: OleDbDataReader.GetChars\n- uid: System.Data.OleDb.OleDbDataReader.GetData*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetData\n  nameWithType: OleDbDataReader.GetData\n- uid: System.Data.OleDb.OleDbDataReader.GetDataTypeName*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetDataTypeName\n  nameWithType: OleDbDataReader.GetDataTypeName\n- uid: System.Data.OleDb.OleDbDataReader.GetDateTime*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetDateTime\n  nameWithType: OleDbDataReader.GetDateTime\n- uid: System.Data.OleDb.OleDbDataReader.GetDbDataReader*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetDbDataReader\n  nameWithType: OleDbDataReader.GetDbDataReader\n- uid: System.Data.OleDb.OleDbDataReader.GetDecimal*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetDecimal\n  nameWithType: OleDbDataReader.GetDecimal\n- uid: System.Data.OleDb.OleDbDataReader.GetDouble*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetDouble\n  nameWithType: OleDbDataReader.GetDouble\n- uid: System.Data.OleDb.OleDbDataReader.GetEnumerator*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: OleDbDataReader.GetEnumerator\n- uid: System.Data.OleDb.OleDbDataReader.GetFieldType*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetFieldType\n  nameWithType: OleDbDataReader.GetFieldType\n- uid: System.Data.OleDb.OleDbDataReader.GetFloat*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetFloat\n  nameWithType: OleDbDataReader.GetFloat\n- uid: System.Data.OleDb.OleDbDataReader.GetGuid*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetGuid\n  nameWithType: OleDbDataReader.GetGuid\n- uid: System.Data.OleDb.OleDbDataReader.GetInt16*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetInt16\n  nameWithType: OleDbDataReader.GetInt16\n- uid: System.Data.OleDb.OleDbDataReader.GetInt32*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetInt32\n  nameWithType: OleDbDataReader.GetInt32\n- uid: System.Data.OleDb.OleDbDataReader.GetInt64*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetInt64\n  nameWithType: OleDbDataReader.GetInt64\n- uid: System.Data.OleDb.OleDbDataReader.GetName*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetName\n  nameWithType: OleDbDataReader.GetName\n- uid: System.Data.OleDb.OleDbDataReader.GetOrdinal*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetOrdinal\n  nameWithType: OleDbDataReader.GetOrdinal\n- uid: System.Data.OleDb.OleDbDataReader.GetSchemaTable*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetSchemaTable\n  nameWithType: OleDbDataReader.GetSchemaTable\n- uid: System.Data.OleDb.OleDbDataReader.GetString*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetString\n  nameWithType: OleDbDataReader.GetString\n- uid: System.Data.OleDb.OleDbDataReader.GetTimeSpan*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetTimeSpan\n  nameWithType: OleDbDataReader.GetTimeSpan\n- uid: System.Data.OleDb.OleDbDataReader.GetValue*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetValue\n  nameWithType: OleDbDataReader.GetValue\n- uid: System.Data.OleDb.OleDbDataReader.GetValues*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: GetValues\n  nameWithType: OleDbDataReader.GetValues\n- uid: System.Data.OleDb.OleDbDataReader.HasRows*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: HasRows\n  nameWithType: OleDbDataReader.HasRows\n- uid: System.Data.OleDb.OleDbDataReader.IsClosed*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: IsClosed\n  nameWithType: OleDbDataReader.IsClosed\n- uid: System.Data.OleDb.OleDbDataReader.IsDBNull*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: IsDBNull\n  nameWithType: OleDbDataReader.IsDBNull\n- uid: System.Data.OleDb.OleDbDataReader.Item*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: Item\n  nameWithType: OleDbDataReader.Item\n- uid: System.Data.OleDb.OleDbDataReader.NextResult*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: NextResult\n  nameWithType: OleDbDataReader.NextResult\n- uid: System.Data.OleDb.OleDbDataReader.Read*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: Read\n  nameWithType: OleDbDataReader.Read\n- uid: System.Data.OleDb.OleDbDataReader.RecordsAffected*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: RecordsAffected\n  nameWithType: OleDbDataReader.RecordsAffected\n- uid: System.Data.OleDb.OleDbDataReader.VisibleFieldCount*\n  parent: System.Data.OleDb.OleDbDataReader\n  isExternal: false\n  name: VisibleFieldCount\n  nameWithType: OleDbDataReader.VisibleFieldCount\n"}