{"nodes":[{"pos":[976,1249],"content":"Represents an identity and is the base class for the <xref href=\"System.Security.Principal.NTAccount\"></xref> and <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> classes. This class does not provide a public constructor, and therefore cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an identity and is the base class for the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> classes.","pos":[0,188],"source":"Represents an identity and is the base class for the <xref href=\"System.Security.Principal.NTAccount\"></xref> and <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> classes."},{"content":"This class does not provide a public constructor, and therefore cannot be inherited.","pos":[189,273]}]},{"pos":[1886,2045],"content":"Returns a value that indicates whether the specified object equals this instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the specified object equals this instance of the <xref href=\"System.Security.Principal.IdentityReference\"></xref> class."},{"pos":[2182,2308],"content":"An object to compare with this <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance, or a null reference.","needQuote":true,"needEscape":true,"source":"An object to compare with this <xref href=\"System.Security.Principal.IdentityReference\"></xref> instance, or a null reference."},{"pos":[2367,2656],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">o</ph><ept id=\"p2\">&lt;/code&gt;</ept> is an object with the same underlying type and value as this <bpt id=\"p3\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> instance; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>o</code> is an object with the same underlying type and value as this <xref href=\"System.Security.Principal.IdentityReference\"></xref> instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3148,3336],"content":"Serves as a hash function for <xref href=\"System.Security.Principal.IdentityReference\"></xref>. GetHashCode is suitable for use in hashing algorithms and data structures like a hash table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serves as a hash function for <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,95],"source":"Serves as a hash function for <xref href=\"System.Security.Principal.IdentityReference\"></xref>."},{"content":"GetHashCode is suitable for use in hashing algorithms and data structures like a hash table.","pos":[96,188]}]},{"pos":[3471,3566],"content":"The hash code for this <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The hash code for this <xref href=\"System.Security.Principal.IdentityReference\"></xref> object."},{"pos":[4131,4296],"content":"Returns a value that indicates whether the specified type is a valid translation type for the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the specified type is a valid translation type for the <xref href=\"System.Security.Principal.IdentityReference\"></xref> class."},{"pos":[4459,4764],"content":"The type being queried for validity to serve as a conversion from <xref href=\"System.Security.Principal.IdentityReference\"></xref>. The following target types are valid:       <xref href=\"System.Security.Principal.NTAccount\"></xref><xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>","needQuote":false,"needEscape":true,"nodes":[{"content":"The type being queried for validity to serve as a conversion from <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,131],"source":"The type being queried for validity to serve as a conversion from <xref href=\"System.Security.Principal.IdentityReference\"></xref>."},{"content":"The following target types are valid:       <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept><bpt id=\"p2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>","pos":[132,297],"source":" The following target types are valid:       <xref href=\"System.Security.Principal.NTAccount\"></xref><xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>"}]},{"pos":[4824,5094],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">targetType</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a valid translation type for the <bpt id=\"p3\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> class; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>targetType</code> is a valid translation type for the <xref href=\"System.Security.Principal.IdentityReference\"></xref> class; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5882,6258],"content":"Compares two <xref href=\"System.Security.Principal.IdentityReference\"></xref> objects to determine whether they are equal. They are considered equal if they have the same canonical name representation as the one returned by the <xref:System.Security.Principal.IdentityReference.Value*> property or if they are both <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to determine whether they are equal.","pos":[0,122],"source":"Compares two <xref href=\"System.Security.Principal.IdentityReference\"></xref> objects to determine whether they are equal."},{"content":"They are considered equal if they have the same canonical name representation as the one returned by the &lt;xref:System.Security.Principal.IdentityReference.Value*&gt; property or if they are both <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[123,376],"source":" They are considered equal if they have the same canonical name representation as the one returned by the <xref:System.Security.Principal.IdentityReference.Value*> property or if they are both <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[6522,6723],"content":"The left <xref href=\"System.Security.Principal.IdentityReference\"></xref> operand to use for the equality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The left <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand to use for the equality comparison.","pos":[0,117],"source":"The left <xref href=\"System.Security.Principal.IdentityReference\"></xref> operand to use for the equality comparison."},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[118,201],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[6815,7017],"content":"The right <xref href=\"System.Security.Principal.IdentityReference\"></xref> operand to use for the equality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The right <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand to use for the equality comparison.","pos":[0,118],"source":"The right <xref href=\"System.Security.Principal.IdentityReference\"></xref> operand to use for the equality comparison."},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[119,202],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[7076,7266],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p3\">&lt;/code&gt;</ept> are equal; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8058,8475],"content":"Compares two <xref href=\"System.Security.Principal.IdentityReference\"></xref> objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the <xref:System.Security.Principal.IdentityReference.Value*> property or if one of the objects is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and the other is not.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to determine whether they are not equal.","pos":[0,126],"source":"Compares two <xref href=\"System.Security.Principal.IdentityReference\"></xref> objects to determine whether they are not equal."},{"content":"They are considered not equal if they have different canonical name representations than the one returned by the &lt;xref:System.Security.Principal.IdentityReference.Value*&gt; property or if one of the objects is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the other is not.","pos":[127,417],"source":" They are considered not equal if they have different canonical name representations than the one returned by the <xref:System.Security.Principal.IdentityReference.Value*> property or if one of the objects is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and the other is not."}]},{"pos":[8741,8944],"content":"The left <xref href=\"System.Security.Principal.IdentityReference\"></xref> operand to use for the inequality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The left <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand to use for the inequality comparison.","pos":[0,119],"source":"The left <xref href=\"System.Security.Principal.IdentityReference\"></xref> operand to use for the inequality comparison."},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[120,203],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[9036,9240],"content":"The right <xref href=\"System.Security.Principal.IdentityReference\"></xref> operand to use for the inequality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The right <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand to use for the inequality comparison.","pos":[0,120],"source":"The right <xref href=\"System.Security.Principal.IdentityReference\"></xref> operand to use for the inequality comparison."},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[121,204],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[9299,9493],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p3\">&lt;/code&gt;</ept> are not equal; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9977,10118],"content":"Returns the string representation of the identity represented by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns the string representation of the identity represented by the <xref href=\"System.Security.Principal.IdentityReference\"></xref> object."},{"pos":[10254,10284],"content":"The identity in string format.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity in string format.","pos":[0,30]}]},{"pos":[10806,11016],"content":"Translates the account name represented by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object into another <bpt id=\"p2\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>-derived type.","needQuote":true,"needEscape":true,"source":"Translates the account name represented by the <xref href=\"System.Security.Principal.IdentityReference\"></xref> object into another <xref href=\"System.Security.Principal.IdentityReference\"></xref>-derived type."},{"pos":[11209,11314],"content":"The target type for the conversion from <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The target type for the conversion from <xref href=\"System.Security.Principal.IdentityReference\"></xref>."},{"pos":[11402,11425],"content":"The converted identity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The converted identity.","pos":[0,23]}]},{"pos":[11886,12015],"content":"Gets the string value of the identity represented by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the string value of the identity represented by the <xref href=\"System.Security.Principal.IdentityReference\"></xref> object."},{"pos":[12134,12258],"content":"The string value of the identity represented by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The string value of the identity represented by the <xref href=\"System.Security.Principal.IdentityReference\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Principal.IdentityReference\n  id: IdentityReference\n  children:\n  - System.Security.Principal.IdentityReference.Equals(System.Object)\n  - System.Security.Principal.IdentityReference.GetHashCode\n  - System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)\n  - System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  - System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  - System.Security.Principal.IdentityReference.ToString\n  - System.Security.Principal.IdentityReference.Translate(System.Type)\n  - System.Security.Principal.IdentityReference.Value\n  langs:\n  - csharp\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n  type: Class\n  summary: Represents an identity and is the base class for the <xref href=\"System.Security.Principal.NTAccount\"></xref> and <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> classes. This class does not provide a public constructor, and therefore cannot be inherited.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public abstract class IdentityReference\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.Principal.IdentityReference.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Principal.IdentityReference\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: IdentityReference.Equals(Object)\n  fullName: System.Security.Principal.IdentityReference.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns a value that indicates whether the specified object equals this instance of the <xref href=\"System.Security.Principal.IdentityReference\"></xref> class.\n  syntax:\n    content: public abstract bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: An object to compare with this <xref href=\"System.Security.Principal.IdentityReference\"></xref> instance, or a null reference.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>o</code> is an object with the same underlying type and value as this <xref href=\"System.Security.Principal.IdentityReference\"></xref> instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Principal.IdentityReference.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.IdentityReference.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Principal.IdentityReference\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: IdentityReference.GetHashCode()\n  fullName: System.Security.Principal.IdentityReference.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Serves as a hash function for <xref href=\"System.Security.Principal.IdentityReference\"></xref>. GetHashCode is suitable for use in hashing algorithms and data structures like a hash table.\n  syntax:\n    content: public abstract int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for this <xref href=\"System.Security.Principal.IdentityReference\"></xref> object.\n  overload: System.Security.Principal.IdentityReference.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)\n  id: IsValidTargetType(System.Type)\n  parent: System.Security.Principal.IdentityReference\n  langs:\n  - csharp\n  name: IsValidTargetType(Type)\n  nameWithType: IdentityReference.IsValidTargetType(Type)\n  fullName: System.Security.Principal.IdentityReference.IsValidTargetType(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns a value that indicates whether the specified type is a valid translation type for the <xref href=\"System.Security.Principal.IdentityReference\"></xref> class.\n  syntax:\n    content: public abstract bool IsValidTargetType (Type targetType);\n    parameters:\n    - id: targetType\n      type: System.Type\n      description: \"The type being queried for validity to serve as a conversion from <xref href=\\\"System.Security.Principal.IdentityReference\\\"></xref>. The following target types are valid:  \\n  \\n <xref href=\\\"System.Security.Principal.NTAccount\\\"></xref><xref href=\\\"System.Security.Principal.SecurityIdentifier\\\"></xref>\"\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>targetType</code> is a valid translation type for the <xref href=\"System.Security.Principal.IdentityReference\"></xref> class; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Principal.IdentityReference.IsValidTargetType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  id: op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  parent: System.Security.Principal.IdentityReference\n  langs:\n  - csharp\n  name: op_Equality(IdentityReference,IdentityReference)\n  nameWithType: IdentityReference.op_Equality(IdentityReference,IdentityReference)\n  fullName: System.Security.Principal.IdentityReference.op_Equality(IdentityReference,IdentityReference)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Compares two <xref href=\"System.Security.Principal.IdentityReference\"></xref> objects to determine whether they are equal. They are considered equal if they have the same canonical name representation as the one returned by the <xref:System.Security.Principal.IdentityReference.Value*> property or if they are both <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  syntax:\n    content: public static bool op_Equality (System.Security.Principal.IdentityReference left, System.Security.Principal.IdentityReference right);\n    parameters:\n    - id: left\n      type: System.Security.Principal.IdentityReference\n      description: The left <xref href=\"System.Security.Principal.IdentityReference\"></xref> operand to use for the equality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: right\n      type: System.Security.Principal.IdentityReference\n      description: The right <xref href=\"System.Security.Principal.IdentityReference\"></xref> operand to use for the equality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Principal.IdentityReference.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  id: op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  parent: System.Security.Principal.IdentityReference\n  langs:\n  - csharp\n  name: op_Inequality(IdentityReference,IdentityReference)\n  nameWithType: IdentityReference.op_Inequality(IdentityReference,IdentityReference)\n  fullName: System.Security.Principal.IdentityReference.op_Inequality(IdentityReference,IdentityReference)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Compares two <xref href=\"System.Security.Principal.IdentityReference\"></xref> objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the <xref:System.Security.Principal.IdentityReference.Value*> property or if one of the objects is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and the other is not.\n  syntax:\n    content: public static bool op_Inequality (System.Security.Principal.IdentityReference left, System.Security.Principal.IdentityReference right);\n    parameters:\n    - id: left\n      type: System.Security.Principal.IdentityReference\n      description: The left <xref href=\"System.Security.Principal.IdentityReference\"></xref> operand to use for the inequality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: right\n      type: System.Security.Principal.IdentityReference\n      description: The right <xref href=\"System.Security.Principal.IdentityReference\"></xref> operand to use for the inequality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Principal.IdentityReference.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.IdentityReference.ToString\n  id: ToString\n  parent: System.Security.Principal.IdentityReference\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: IdentityReference.ToString()\n  fullName: System.Security.Principal.IdentityReference.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns the string representation of the identity represented by the <xref href=\"System.Security.Principal.IdentityReference\"></xref> object.\n  syntax:\n    content: public abstract string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The identity in string format.\n  overload: System.Security.Principal.IdentityReference.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.IdentityReference.Translate(System.Type)\n  id: Translate(System.Type)\n  parent: System.Security.Principal.IdentityReference\n  langs:\n  - csharp\n  name: Translate(Type)\n  nameWithType: IdentityReference.Translate(Type)\n  fullName: System.Security.Principal.IdentityReference.Translate(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Translates the account name represented by the <xref href=\"System.Security.Principal.IdentityReference\"></xref> object into another <xref href=\"System.Security.Principal.IdentityReference\"></xref>-derived type.\n  syntax:\n    content: public abstract System.Security.Principal.IdentityReference Translate (Type targetType);\n    parameters:\n    - id: targetType\n      type: System.Type\n      description: The target type for the conversion from <xref href=\"System.Security.Principal.IdentityReference\"></xref>.\n    return:\n      type: System.Security.Principal.IdentityReference\n      description: The converted identity.\n  overload: System.Security.Principal.IdentityReference.Translate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.IdentityReference.Value\n  id: Value\n  parent: System.Security.Principal.IdentityReference\n  langs:\n  - csharp\n  name: Value\n  nameWithType: IdentityReference.Value\n  fullName: System.Security.Principal.IdentityReference.Value\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Gets the string value of the identity represented by the <xref href=\"System.Security.Principal.IdentityReference\"></xref> object.\n  syntax:\n    content: public abstract string Value { get; }\n    return:\n      type: System.String\n      description: The string value of the identity represented by the <xref href=\"System.Security.Principal.IdentityReference\"></xref> object.\n  overload: System.Security.Principal.IdentityReference.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Principal.IdentityReference.Equals(System.Object)\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: IdentityReference.Equals(Object)\n  fullName: System.Security.Principal.IdentityReference.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Principal.IdentityReference.GetHashCode\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: IdentityReference.GetHashCode()\n  fullName: System.Security.Principal.IdentityReference.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: IsValidTargetType(Type)\n  nameWithType: IdentityReference.IsValidTargetType(Type)\n  fullName: System.Security.Principal.IdentityReference.IsValidTargetType(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: op_Equality(IdentityReference,IdentityReference)\n  nameWithType: IdentityReference.op_Equality(IdentityReference,IdentityReference)\n  fullName: System.Security.Principal.IdentityReference.op_Equality(IdentityReference,IdentityReference)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: op_Inequality(IdentityReference,IdentityReference)\n  nameWithType: IdentityReference.op_Inequality(IdentityReference,IdentityReference)\n  fullName: System.Security.Principal.IdentityReference.op_Inequality(IdentityReference,IdentityReference)\n- uid: System.Security.Principal.IdentityReference.ToString\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: ToString()\n  nameWithType: IdentityReference.ToString()\n  fullName: System.Security.Principal.IdentityReference.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Principal.IdentityReference.Translate(System.Type)\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: Translate(Type)\n  nameWithType: IdentityReference.Translate(Type)\n  fullName: System.Security.Principal.IdentityReference.Translate(Type)\n- uid: System.Security.Principal.IdentityReference.Value\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: Value\n  nameWithType: IdentityReference.Value\n  fullName: System.Security.Principal.IdentityReference.Value\n- uid: System.Security.Principal.IdentityReference.Equals*\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: Equals\n  nameWithType: IdentityReference.Equals\n- uid: System.Security.Principal.IdentityReference.GetHashCode*\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: GetHashCode\n  nameWithType: IdentityReference.GetHashCode\n- uid: System.Security.Principal.IdentityReference.IsValidTargetType*\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: IsValidTargetType\n  nameWithType: IdentityReference.IsValidTargetType\n- uid: System.Security.Principal.IdentityReference.op_Equality*\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: op_Equality\n  nameWithType: IdentityReference.op_Equality\n- uid: System.Security.Principal.IdentityReference.op_Inequality*\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: op_Inequality\n  nameWithType: IdentityReference.op_Inequality\n- uid: System.Security.Principal.IdentityReference.ToString*\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: ToString\n  nameWithType: IdentityReference.ToString\n- uid: System.Security.Principal.IdentityReference.Translate*\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: Translate\n  nameWithType: IdentityReference.Translate\n- uid: System.Security.Principal.IdentityReference.Value*\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: Value\n  nameWithType: IdentityReference.Value\n"}