{"nodes":[{"pos":[444,503],"content":"Provides support for root-level designer view technologies.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides support for root-level designer view technologies.","pos":[0,59]}]},{"pos":[515,871],"content":"A root designer is the designer that is in the top position, or root, of the current design-time document object hierarchy. A root designer must implement the IRootDesigner interface. A root designer typically manages the background view in designer view mode, and usually displays the controls within the base container of the current design time project.","needQuote":true,"needEscape":true,"nodes":[{"content":"A root designer is the designer that is in the top position, or root, of the current design-time document object hierarchy. A root designer must implement the IRootDesigner interface. A root designer typically manages the background view in designer view mode, and usually displays the controls within the base container of the current design time project.","pos":[0,356],"nodes":[{"content":"A root designer is the designer that is in the top position, or root, of the current design-time document object hierarchy.","pos":[0,123]},{"content":"A root designer must implement the IRootDesigner interface.","pos":[124,183]},{"content":"A root designer typically manages the background view in designer view mode, and usually displays the controls within the base container of the current design time project.","pos":[184,356]}]}]},{"pos":[2493,2546],"content":"Gets a view object for the specified view technology.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a view object for the specified view technology.","pos":[0,53]}]},{"pos":[2559,3148],"content":"This method returns a view object that can present a user interface to the user. The returned data type is an <xref:System.Object>, because there can be a variety of different user interface technologies. Development environments typically support more than one technology.      > [!NOTE] >  The <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> and <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> fields are obsolete. Use <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> for new designer implementations.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method returns a view object that can present a user interface to the user.","pos":[0,80]},{"content":"The returned data type is an &lt;xref:System.Object&gt;, because there can be a variety of different user interface technologies.","pos":[81,204],"source":" The returned data type is an <xref:System.Object>, because there can be a variety of different user interface technologies."},{"content":"Development environments typically support more than one technology.","pos":[205,273]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName&gt; and &lt;xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName&gt; fields are obsolete.","pos":[279,472],"source":"      > [!NOTE] >  The <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> and <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> fields are obsolete."},{"content":"Use &lt;xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName&gt; for new designer implementations.","pos":[473,586],"source":" Use <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> for new designer implementations."}]},{"pos":[3365,3476],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.ViewTechnology\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates a particular view technology.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.Design.ViewTechnology\"></xref> that indicates a particular view technology."},{"pos":[3534,3587],"content":"An object that represents the view for this designer.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that represents the view for this designer.","pos":[0,53]}]},{"pos":[3760,3825],"content":"The specified view technology is not supported or does not exist.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified view technology is not supported or does not exist.","pos":[0,65]}]},{"pos":[4276,4352],"content":"Gets the set of technologies that this designer can support for its display.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the set of technologies that this designer can support for its display.","pos":[0,76]}]},{"pos":[4365,4790],"content":"The <xref:System.ComponentModel.Design.ViewTechnology> enumeration indicates the supported view technologies.      > [!NOTE] >  The <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> and <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> fields are obsolete. Use <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> for new designer implementations.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ComponentModel.Design.ViewTechnology&gt; enumeration indicates the supported view technologies.","pos":[0,109],"source":"The <xref:System.ComponentModel.Design.ViewTechnology> enumeration indicates the supported view technologies."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName&gt; and &lt;xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName&gt; fields are obsolete.","pos":[115,308],"source":"      > [!NOTE] >  The <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> and <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> fields are obsolete."},{"content":"Use &lt;xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName&gt; for new designer implementations.","pos":[309,422],"source":" Use <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> for new designer implementations."}]},{"pos":[4988,5082],"content":"An array of supported <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.ViewTechnology\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"An array of supported <xref href=\"System.ComponentModel.Design.ViewTechnology\"></xref> values."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.IRootDesigner\n  id: IRootDesigner\n  children:\n  - System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)\n  - System.ComponentModel.Design.IRootDesigner.SupportedTechnologies\n  langs:\n  - csharp\n  name: IRootDesigner\n  nameWithType: IRootDesigner\n  fullName: System.ComponentModel.Design.IRootDesigner\n  type: Interface\n  summary: Provides support for root-level designer view technologies.\n  remarks: A root designer is the designer that is in the top position, or root, of the current design-time document object hierarchy. A root designer must implement the IRootDesigner interface. A root designer typically manages the background view in designer view mode, and usually displays the controls within the base container of the current design time project.\n  example:\n  - \"The following code example demonstrates a IRootDesigner implementation associated with a sample user control. This IRootDesigner implementation displays a control for the background view in designer view by overriding the <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> method. You need to add a reference to the System.Design assembly to compile the example.  \\n  \\n To use this example, add the source code to a project and show the `RootViewSampleComponent` in designer view to display the custom root designer view.  \\n  \\n [!code-cs[IRootDesigner Sample#1](~/add/codesnippet/csharp/t-system.componentmodel._149_1.cs)]\\n [!code-vb[IRootDesigner Sample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._149_1.vb)]\\n [!code-cpp[IRootDesigner Sample#1](~/add/codesnippet/cpp/t-system.componentmodel._149_1.cpp)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IRootDesigner : IDisposable, System.ComponentModel.Design.IDesigner\n  implements:\n  - System.ComponentModel.Design.IDesigner\n  - System.IDisposable\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)\n  id: GetView(System.ComponentModel.Design.ViewTechnology)\n  parent: System.ComponentModel.Design.IRootDesigner\n  langs:\n  - csharp\n  name: GetView(ViewTechnology)\n  nameWithType: IRootDesigner.GetView(ViewTechnology)\n  fullName: System.ComponentModel.Design.IRootDesigner.GetView(ViewTechnology)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets a view object for the specified view technology.\n  remarks: \"This method returns a view object that can present a user interface to the user. The returned data type is an <xref:System.Object>, because there can be a variety of different user interface technologies. Development environments typically support more than one technology.  \\n  \\n> [!NOTE]\\n>  The <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> and <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> fields are obsolete. Use <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> for new designer implementations.\"\n  syntax:\n    content: public object GetView (System.ComponentModel.Design.ViewTechnology technology);\n    parameters:\n    - id: technology\n      type: System.ComponentModel.Design.ViewTechnology\n      description: A <xref href=\"System.ComponentModel.Design.ViewTechnology\"></xref> that indicates a particular view technology.\n    return:\n      type: System.Object\n      description: An object that represents the view for this designer.\n  overload: System.ComponentModel.Design.IRootDesigner.GetView*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The specified view technology is not supported or does not exist.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IRootDesigner.SupportedTechnologies\n  id: SupportedTechnologies\n  parent: System.ComponentModel.Design.IRootDesigner\n  langs:\n  - csharp\n  name: SupportedTechnologies\n  nameWithType: IRootDesigner.SupportedTechnologies\n  fullName: System.ComponentModel.Design.IRootDesigner.SupportedTechnologies\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets the set of technologies that this designer can support for its display.\n  remarks: \"The <xref:System.ComponentModel.Design.ViewTechnology> enumeration indicates the supported view technologies.  \\n  \\n> [!NOTE]\\n>  The <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> and <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> fields are obsolete. Use <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=fullName> for new designer implementations.\"\n  syntax:\n    content: public System.ComponentModel.Design.ViewTechnology[] SupportedTechnologies { get; }\n    return:\n      type: System.ComponentModel.Design.ViewTechnology[]\n      description: An array of supported <xref href=\"System.ComponentModel.Design.ViewTechnology\"></xref> values.\n  overload: System.ComponentModel.Design.IRootDesigner.SupportedTechnologies*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)\n  parent: System.ComponentModel.Design.IRootDesigner\n  isExternal: false\n  name: GetView(ViewTechnology)\n  nameWithType: IRootDesigner.GetView(ViewTechnology)\n  fullName: System.ComponentModel.Design.IRootDesigner.GetView(ViewTechnology)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.Design.ViewTechnology\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: ViewTechnology\n  nameWithType: ViewTechnology\n  fullName: System.ComponentModel.Design.ViewTechnology\n- uid: System.ComponentModel.Design.IRootDesigner.SupportedTechnologies\n  parent: System.ComponentModel.Design.IRootDesigner\n  isExternal: false\n  name: SupportedTechnologies\n  nameWithType: IRootDesigner.SupportedTechnologies\n  fullName: System.ComponentModel.Design.IRootDesigner.SupportedTechnologies\n- uid: System.ComponentModel.Design.ViewTechnology[]\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: ViewTechnology\n  nameWithType: ViewTechnology\n  fullName: System.ComponentModel.Design.ViewTechnology[]\n  spec.csharp:\n  - uid: System.ComponentModel.Design.ViewTechnology\n    name: ViewTechnology\n    nameWithType: ViewTechnology\n    fullName: ViewTechnology[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.Design.IRootDesigner.GetView*\n  parent: System.ComponentModel.Design.IRootDesigner\n  isExternal: false\n  name: GetView\n  nameWithType: IRootDesigner.GetView\n- uid: System.ComponentModel.Design.IRootDesigner.SupportedTechnologies*\n  parent: System.ComponentModel.Design.IRootDesigner\n  isExternal: false\n  name: SupportedTechnologies\n  nameWithType: IRootDesigner.SupportedTechnologies\n"}