{"nodes":[{"pos":[3709,3826],"content":"Uses the object security layer of the managed ACL library to wrap access control functionality for directory objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Uses the object security layer of the managed ACL library to wrap access control functionality for directory objects.","pos":[0,117]}]},{"pos":[9198,9308],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> class."},{"pos":[9933,10016],"content":"Gets the <xref:System.Type> object that represents an access right for this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Type&gt; object that represents an access right for this object.","pos":[0,83],"source":"Gets the <xref:System.Type> object that represents an access right for this object."}]},{"pos":[10028,10153],"content":"This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryRights> enumeration.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property always returns the &lt;xref:System.Type&gt; of the &lt;xref:System.DirectoryServices.ActiveDirectoryRights&gt; enumeration.","pos":[0,125],"source":"This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryRights> enumeration."}]},{"pos":[10278,10321],"content":"The <xref:System.Type> of the access right.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the access right.","pos":[0,43],"source":"The <xref:System.Type> of the access right."}]},{"pos":[11572,11678],"content":"Creates an <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the specified values.","needQuote":true,"needEscape":true,"source":"Creates an <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object with the specified values."},{"pos":[12186,12334],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object such as an NTAccount object that resolves to a security identifier (SID).","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object that resolves to a security identifier (SID)."},{"pos":[12400,12471],"content":"An <xref:System.Int32> bitmask that shows the access privileges to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; bitmask that shows the access privileges to use.","pos":[0,71],"source":"An <xref:System.Int32> bitmask that shows the access privileges to use."}]},{"pos":[12540,12772],"content":"A <xref:System.Boolean> object that indicates whether ACEs are inherited. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if ACEs are inherited; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt; object that indicates whether ACEs are inherited.","pos":[0,73],"source":"A <xref:System.Boolean> object that indicates whether ACEs are inherited."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if ACEs are inherited; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[74,232],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if ACEs are inherited; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[12878,13010],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains inheritance flags on a directory object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags on a directory object."},{"pos":[13116,13259],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.PropagationFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains inheritance propagation flags on a directory object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags on a directory object."},{"pos":[13354,13460],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AccessControlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the ACE type.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object that contains the ACE type."},{"pos":[13545,13712],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that corresponds to the <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object."},{"pos":[15043,15149],"content":"Creates an <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the specified values.","needQuote":true,"needEscape":true,"source":"Creates an <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object with the specified values."},{"pos":[15700,15850],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, such as an NTAccount object, that resolves to a security identifier (SID).","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object, such as an NTAccount object, that resolves to a security identifier (SID)."},{"pos":[15916,15987],"content":"An <xref:System.Int32> bitmask that shows the access privileges to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; bitmask that shows the access privileges to use.","pos":[0,71],"source":"An <xref:System.Int32> bitmask that shows the access privileges to use."}]},{"pos":[16056,16284],"content":"A <xref:System.Boolean> object that indicates if ACEs are inherited. <xref uid=\"langword_csharp_true \" name=\"true \" href=\"\"></xref>if ACEs are inherited; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt; object that indicates if ACEs are inherited.","pos":[0,68],"source":"A <xref:System.Boolean> object that indicates if ACEs are inherited."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true \" name=\"true \" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>if ACEs are inherited; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[69,228],"source":"<xref uid=\"langword_csharp_true \" name=\"true \" href=\"\"></xref>if ACEs are inherited; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[16390,16523],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains inheritance flags for a directory object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags for a directory object."},{"pos":[16629,16773],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.PropagationFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains inheritance propagation flags for a directory object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags for a directory object."},{"pos":[16868,16974],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AccessControlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the ACE type.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object that contains the ACE type."},{"pos":[17039,17114],"content":"A <xref:System.Guid> object that contains the GUID of the directory object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Guid&gt; object that contains the GUID of the directory object.","pos":[0,75],"source":"A <xref:System.Guid> object that contains the GUID of the directory object."}]},{"pos":[17188,17273],"content":"A <xref:System.Guid> object that contains the GUID of the inherited directory object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Guid&gt; object that contains the GUID of the inherited directory object.","pos":[0,85],"source":"A <xref:System.Guid> object that contains the GUID of the inherited directory object."}]},{"pos":[17358,17525],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that corresponds to the <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object."},{"pos":[18080,18155],"content":"Gets the <xref:System.Type> that represents an access rule for this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Type&gt; that represents an access rule for this object.","pos":[0,75],"source":"Gets the <xref:System.Type> that represents an access rule for this object."}]},{"pos":[18167,18290],"content":"This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryAccessRule> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property always returns the &lt;xref:System.Type&gt; of the &lt;xref:System.DirectoryServices.ActiveDirectoryAccessRule&gt; class.","pos":[0,123],"source":"This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryAccessRule> class."}]},{"pos":[18414,18456],"content":"The <xref:System.Type> of the access rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the access rule.","pos":[0,42],"source":"The <xref:System.Type> of the access rule."}]},{"pos":[19186,19231],"content":"Adds an access rule to the DACL of an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an access rule to the DACL of an object.","pos":[0,45]}]},{"pos":[19453,19572],"content":"The <xref:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule*> object to which this operation applies.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule*&gt; object to which this operation applies.","pos":[0,119],"source":"The <xref:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule*> object to which this operation applies."}]},{"pos":[20291,20335],"content":"Adds an audit rule to the SACL of an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an audit rule to the SACL of an object.","pos":[0,44]}]},{"pos":[20554,20668],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectoryAuditRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to which this operation applies.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAuditRule\"></xref> object to which this operation applies."},{"pos":[21876,21981],"content":"Creates an <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the specified values.","needQuote":true,"needEscape":true,"source":"Creates an <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object with the specified values."},{"pos":[22481,22630],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object such as an NTAccount object, that resolves to a security identifier (SID).","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object, that resolves to a security identifier (SID)."},{"pos":[22696,22767],"content":"An <xref:System.Int32> bitmask that shows the access privileges to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; bitmask that shows the access privileges to use.","pos":[0,71],"source":"An <xref:System.Int32> bitmask that shows the access privileges to use."}]},{"pos":[22836,23063],"content":"A <xref:System.Boolean> object that indicates if ACEs are inherited. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if ACEs are inherited; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt; object that indicates if ACEs are inherited.","pos":[0,68],"source":"A <xref:System.Boolean> object that indicates if ACEs are inherited."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if ACEs are inherited; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[69,227],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if ACEs are inherited; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[23169,23301],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains inheritance flags on a directory object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags on a directory object."},{"pos":[23407,23550],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.PropagationFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains inheritance propagation flags on a directory object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags on a directory object."},{"pos":[23639,23827],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AuditFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the audit flags for this <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> object that contains the audit flags for this <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object."},{"pos":[23911,24077],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that corresponds to the <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object."},{"pos":[25367,25472],"content":"Creates an <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the specified values.","needQuote":true,"needEscape":true,"source":"Creates an <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object with the specified values."},{"pos":[26015,26163],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object such as an NTAccount object that resolves to a security identifier (SID).","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object that resolves to a security identifier (SID)."},{"pos":[26229,26300],"content":"An <xref:System.Int32> bitmask that shows the access privileges to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; bitmask that shows the access privileges to use.","pos":[0,71],"source":"An <xref:System.Int32> bitmask that shows the access privileges to use."}]},{"pos":[26369,26601],"content":"A <xref:System.Boolean> object that indicates whether ACEs are inherited. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if ACEs are inherited; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt; object that indicates whether ACEs are inherited.","pos":[0,73],"source":"A <xref:System.Boolean> object that indicates whether ACEs are inherited."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if ACEs are inherited; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[74,232],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if ACEs are inherited; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[26707,26839],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains inheritance flags on a directory object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags on a directory object."},{"pos":[26945,27088],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.PropagationFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains inheritance propagation flags on a directory object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags on a directory object."},{"pos":[27177,27365],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AuditFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the audit flags for this <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> object that contains the audit flags for this <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object."},{"pos":[27430,27506],"content":"A <xref:System.Guid> object that contains the Guido of the directory object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Guid&gt; object that contains the Guido of the directory object.","pos":[0,76],"source":"A <xref:System.Guid> object that contains the Guido of the directory object."}]},{"pos":[27580,27666],"content":"A <xref:System.Guid> object that contains the Guido of the inherited directory object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Guid&gt; object that contains the Guido of the inherited directory object.","pos":[0,86],"source":"A <xref:System.Guid> object that contains the Guido of the inherited directory object."}]},{"pos":[27750,27916],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that corresponds to the <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object."},{"pos":[28465,28539],"content":"Gets the <xref:System.Type> that represents an audit rule for this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Type&gt; that represents an audit rule for this object.","pos":[0,74],"source":"Gets the <xref:System.Type> that represents an audit rule for this object."}]},{"pos":[28551,28673],"content":"This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryAuditRule> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property always returns the &lt;xref:System.Type&gt; of the &lt;xref:System.DirectoryServices.ActiveDirectoryAuditRule&gt; class.","pos":[0,122],"source":"This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryAuditRule> class."}]},{"pos":[28796,28837],"content":"The <xref:System.Type> of the audit rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the audit rule.","pos":[0,41],"source":"The <xref:System.Type> of the audit rule."}]},{"pos":[29762,29876],"content":"Applies the specified modification to the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Applies the specified modification to the specified <xref href=\"System.Security.AccessControl.AccessRule\"></xref>."},{"pos":[30202,30253],"content":"The type of access control modification to perform.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of access control modification to perform.","pos":[0,51]}]},{"pos":[30341,30367],"content":"The access rule to modify.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to modify.","pos":[0,26]}]},{"pos":[30433,30594],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[30653,30814],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[31732,31845],"content":"Applies the specified modification to the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Applies the specified modification to the specified <xref href=\"System.Security.AccessControl.AuditRule\"></xref>."},{"pos":[32169,32195],"content":"The modification to apply.","needQuote":true,"needEscape":true,"nodes":[{"content":"The modification to apply.","pos":[0,26]}]},{"pos":[32282,32307],"content":"The audit rule to modify.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to modify.","pos":[0,25]}]},{"pos":[32373,32534],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[32593,32754],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[33462,33582],"content":"Removes all access rules associated with the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Removes all access rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>."},{"pos":[33810,33916],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to remove all access rules.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all access rules."},{"pos":[34120,34164],"content":"All access rules are not in canonical order.","needQuote":true,"needEscape":true,"nodes":[{"content":"All access rules are not in canonical order.","pos":[0,44]}]},{"pos":[34772,34891],"content":"Removes all audit rules associated with the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Removes all audit rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>."},{"pos":[35118,35223],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to remove all audit rules.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all audit rules."},{"pos":[35426,35469],"content":"All audit rules are not in canonical order.","needQuote":true,"needEscape":true,"nodes":[{"content":"All audit rules are not in canonical order.","pos":[0,43]}]},{"pos":[36212,36440],"content":"Removes all access rules that have the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.AccessControlType\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object from the DACL of an object.","needQuote":true,"needEscape":true,"source":"Removes all access rules that have the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref> object and <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object from the DACL of an object."},{"pos":[36709,36858],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object such as an NTAccount object, that resolves to a security identifier (SID).","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object, that resolves to a security identifier (SID)."},{"pos":[36953,37059],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AccessControlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the ACE type.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object that contains the ACE type."},{"pos":[37802,37941],"content":"Removes all access rules that contain the same security identifier and access mask as the specified access rule from the DACL of an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all access rules that contain the same security identifier and access mask as the specified access rule from the DACL of an object.","pos":[0,139]}]},{"pos":[38166,38281],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to which this operation applies.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies."},{"pos":[38340,38507],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the operation is successful; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[39294,39391],"content":"Removes all access rules that exactly match the specified access rule from the DACL of an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all access rules that exactly match the specified access rule from the DACL of an object.","pos":[0,97]}]},{"pos":[39624,39739],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to which this operation applies.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies."},{"pos":[40431,40578],"content":"Removes all audit rules that have the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from the SACL of an object.","needQuote":true,"needEscape":true,"source":"Removes all audit rules that have the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref> object from the SACL of an object."},{"pos":[40792,40941],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object such as an NTAccount object, that resolves to a security identifier (SID).","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object, that resolves to a security identifier (SID)."},{"pos":[41673,41839],"content":"Removes all audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) of an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) of an object.","pos":[0,166]}]},{"pos":[42061,42176],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to which this operation applies.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies."},{"pos":[42235,42402],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the operation is successful; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[43178,43273],"content":"Removes all audit rules that exactly match the specified audit rule from the SACL of an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all audit rules that exactly match the specified audit rule from the SACL of an object.","pos":[0,95]}]},{"pos":[43503,43618],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to which this operation applies.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies."},{"pos":[44367,44631],"content":"Searches an object's DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> object, and replaces all of those access rules with the access rules that are contained in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">rule</ph><ept id=\"p2\">&lt;/code&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Searches an object's DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <code>rule</code> object, and replaces all of those access rules with the access rules that are contained in the <code>rule</code> object."},{"pos":[44643,44990],"content":"When ResetAccessRule is used to replace all access rules with a particular SID in an object's DACL, both Allow- and Deny- type rules are replaced.  To replace only Allow rules without affecting Deny rules, or to replace Deny rules without affecting Allow rules, use <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> instead.","needQuote":true,"needEscape":true,"nodes":[{"content":"When ResetAccessRule is used to replace all access rules with a particular SID in an object's DACL, both Allow- and Deny- type rules are replaced.  To replace only Allow rules without affecting Deny rules, or to replace Deny rules without affecting Allow rules, use <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> instead.","pos":[0,347],"nodes":[{"content":"When ResetAccessRule is used to replace all access rules with a particular SID in an object's DACL, both Allow- and Deny- type rules are replaced.","pos":[0,146]},{"content":"To replace only Allow rules without affecting Deny rules, or to replace Deny rules without affecting Allow rules, use &lt;xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A&gt; instead.","pos":[148,347],"source":"  To replace only Allow rules without affecting Deny rules, or to replace Deny rules without affecting Allow rules, use <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> instead."}]}]},{"pos":[45214,45329],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to which this operation applies.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies."},{"pos":[46060,46432],"content":"Searches an object's DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> object, and an access control type (Allow or Deny) that matches the type specified in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">rule</ph><ept id=\"p2\">&lt;/code&gt;</ept> object, and replaces all of those access rules with the access rules that are contained in the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">rule</ph><ept id=\"p3\">&lt;/code&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Searches an object's DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <code>rule</code> object, and an access control type (Allow or Deny) that matches the type specified in the <code>rule</code> object, and replaces all of those access rules with the access rules that are contained in the <code>rule</code> object."},{"pos":[46444,47122],"content":"When SetAccessRule is used to replace all access rules that match a particular SID and access control type (Allow or Deny) in an object's DACL, all rules in that DACL with an  SID and type that match the SID and access control type contained in the `rule` object are replaced.  Using this method, the developer can replace any Allow rules for that SID on that object without affecting existing Deny rules, or replace all Deny rules for that SID on that object without affecting existing Allow rules.  To replace all rules for that object pertaining to the specified SID, regardless of type, use <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> instead.","needQuote":true,"needEscape":true,"nodes":[{"content":"When SetAccessRule is used to replace all access rules that match a particular SID and access control type (Allow or Deny) in an object's DACL, all rules in that DACL with an  SID and type that match the SID and access control type contained in the <ph id=\"ph1\">`rule`</ph> object are replaced.","pos":[0,276],"source":"When SetAccessRule is used to replace all access rules that match a particular SID and access control type (Allow or Deny) in an object's DACL, all rules in that DACL with an  SID and type that match the SID and access control type contained in the `rule` object are replaced."},{"content":"Using this method, the developer can replace any Allow rules for that SID on that object without affecting existing Deny rules, or replace all Deny rules for that SID on that object without affecting existing Allow rules.","pos":[278,499]},{"content":"To replace all rules for that object pertaining to the specified SID, regardless of type, use &lt;xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A&gt; instead.","pos":[501,678],"source":"  To replace all rules for that object pertaining to the specified SID, regardless of type, use <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> instead."}]},{"pos":[47344,47459],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to which this operation applies.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies."},{"pos":[48178,48328],"content":"Replaces all audit rules that contain the same security identifier as the specified audit rule in the SACL of an object with the specified audit rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"Replaces all audit rules that contain the same security identifier as the specified audit rule in the SACL of an object with the specified audit rule.","pos":[0,150]}]},{"pos":[48547,48662],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to which this operation applies.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectorySecurity\n  id: ActiveDirectorySecurity\n  children:\n  - System.DirectoryServices.ActiveDirectorySecurity.#ctor\n  - System.DirectoryServices.ActiveDirectorySecurity.AccessRightType\n  - System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  - System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType\n  - System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  - System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  - System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  - System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType\n  - System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)\n  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)\n  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)\n  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)\n  - System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  - System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  - System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  langs:\n  - csharp\n  name: ActiveDirectorySecurity\n  nameWithType: ActiveDirectorySecurity\n  fullName: System.DirectoryServices.ActiveDirectorySecurity\n  type: Class\n  summary: Uses the object security layer of the managed ACL library to wrap access control functionality for directory objects.\n  syntax:\n    content: 'public class ActiveDirectorySecurity : System.Security.AccessControl.DirectoryObjectSecurity'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.ObjectSecurity\n  - System.Security.AccessControl.DirectoryObjectSecurity\n  implements: []\n  inheritedMembers:\n  - System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.#ctor\n  id: '#ctor'\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: ActiveDirectorySecurity()\n  nameWithType: ActiveDirectorySecurity.ActiveDirectorySecurity()\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.ActiveDirectorySecurity()\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> class.\n  syntax:\n    content: public ActiveDirectorySecurity ();\n    parameters: []\n  overload: System.DirectoryServices.ActiveDirectorySecurity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType\n  id: AccessRightType\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AccessRightType\n  nameWithType: ActiveDirectorySecurity.AccessRightType\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the <xref:System.Type> object that represents an access right for this object.\n  remarks: This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryRights> enumeration.\n  syntax:\n    content: public override Type AccessRightType { get; }\n    return:\n      type: System.Type\n      description: The <xref:System.Type> of the access right.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Creates an <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object with the specified values.\n  syntax:\n    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object that resolves to a security identifier (SID).\n    - id: accessMask\n      type: System.Int32\n      description: An <xref:System.Int32> bitmask that shows the access privileges to use.\n    - id: isInherited\n      type: System.Boolean\n      description: A <xref:System.Boolean> object that indicates whether ACEs are inherited. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if ACEs are inherited; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags on a directory object.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags on a directory object.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: An <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object that contains the ACE type.\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)\n  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Creates an <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object with the specified values.\n  syntax:\n    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type, Guid objectGuid, Guid inheritedObjectGuid);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object, such as an NTAccount object, that resolves to a security identifier (SID).\n    - id: accessMask\n      type: System.Int32\n      description: An <xref:System.Int32> bitmask that shows the access privileges to use.\n    - id: isInherited\n      type: System.Boolean\n      description: A <xref:System.Boolean> object that indicates if ACEs are inherited. <xref uid=\"langword_csharp_true \" name=\"true \" href=\"\"></xref>if ACEs are inherited; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags for a directory object.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags for a directory object.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: An <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object that contains the ACE type.\n    - id: objectGuid\n      type: System.Guid\n      description: A <xref:System.Guid> object that contains the GUID of the directory object.\n    - id: inheritedObjectGuid\n      type: System.Guid\n      description: A <xref:System.Guid> object that contains the GUID of the inherited directory object.\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType\n  id: AccessRuleType\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AccessRuleType\n  nameWithType: ActiveDirectorySecurity.AccessRuleType\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the <xref:System.Type> that represents an access rule for this object.\n  remarks: This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryAccessRule> class.\n  syntax:\n    content: public override Type AccessRuleType { get; }\n    return:\n      type: System.Type\n      description: The <xref:System.Type> of the access rule.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  id: AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AddAccessRule(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Adds an access rule to the DACL of an object.\n  syntax:\n    content: public void AddAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAccessRule\n      description: The <xref:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule*> object to which this operation applies.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  id: AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AddAuditRule(ActiveDirectoryAuditRule)\n  nameWithType: ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Adds an audit rule to the SACL of an object.\n  syntax:\n    content: public void AddAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAuditRule\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectoryAuditRule\"></xref> object to which this operation applies.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Creates an <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object with the specified values.\n  syntax:\n    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object, that resolves to a security identifier (SID).\n    - id: accessMask\n      type: System.Int32\n      description: An <xref:System.Int32> bitmask that shows the access privileges to use.\n    - id: isInherited\n      type: System.Boolean\n      description: A <xref:System.Boolean> object that indicates if ACEs are inherited. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if ACEs are inherited; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags on a directory object.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags on a directory object.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: An <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> object that contains the audit flags for this <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)\n  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Creates an <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object with the specified values.\n  syntax:\n    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags, Guid objectGuid, Guid inheritedObjectGuid);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object that resolves to a security identifier (SID).\n    - id: accessMask\n      type: System.Int32\n      description: An <xref:System.Int32> bitmask that shows the access privileges to use.\n    - id: isInherited\n      type: System.Boolean\n      description: A <xref:System.Boolean> object that indicates whether ACEs are inherited. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if ACEs are inherited; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags on a directory object.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags on a directory object.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: An <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> object that contains the audit flags for this <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.\n    - id: objectGuid\n      type: System.Guid\n      description: A <xref:System.Guid> object that contains the Guido of the directory object.\n    - id: inheritedObjectGuid\n      type: System.Guid\n      description: A <xref:System.Guid> object that contains the Guido of the inherited directory object.\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType\n  id: AuditRuleType\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AuditRuleType\n  nameWithType: ActiveDirectorySecurity.AuditRuleType\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the <xref:System.Type> that represents an audit rule for this object.\n  remarks: This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryAuditRule> class.\n  syntax:\n    content: public override Type AuditRuleType { get; }\n    return:\n      type: System.Type\n      description: The <xref:System.Type> of the audit rule.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  id: ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: ModifyAccessRule(AccessControlModification,AccessRule,Boolean)\n  nameWithType: ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Applies the specified modification to the specified <xref href=\"System.Security.AccessControl.AccessRule\"></xref>.\n  syntax:\n    content: public override bool ModifyAccessRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The type of access control modification to perform.\n    - id: rule\n      type: System.Security.AccessControl.AccessRule\n      description: The access rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  id: ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: ModifyAuditRule(AccessControlModification,AuditRule,Boolean)\n  nameWithType: ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Applies the specified modification to the specified <xref href=\"System.Security.AccessControl.AuditRule\"></xref>.\n  syntax:\n    content: public override bool ModifyAuditRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The modification to apply.\n    - id: rule\n      type: System.Security.AccessControl.AuditRule\n      description: The audit rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  id: PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: PurgeAccessRules(IdentityReference)\n  nameWithType: ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes all access rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>.\n  syntax:\n    content: public override void PurgeAccessRules (System.Security.Principal.IdentityReference identity);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all access rules.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: All access rules are not in canonical order.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  id: PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: PurgeAuditRules(IdentityReference)\n  nameWithType: ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes all audit rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>.\n  syntax:\n    content: public override void PurgeAuditRules (System.Security.Principal.IdentityReference identity);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all audit rules.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: All audit rules are not in canonical order.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)\n  id: RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: RemoveAccess(IdentityReference,AccessControlType)\n  nameWithType: ActiveDirectorySecurity.RemoveAccess(IdentityReference,AccessControlType)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(IdentityReference,AccessControlType)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes all access rules that have the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref> object and <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object from the DACL of an object.\n  syntax:\n    content: public void RemoveAccess (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object, that resolves to a security identifier (SID).\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: An <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object that contains the ACE type.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  id: RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: RemoveAccessRule(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes all access rules that contain the same security identifier and access mask as the specified access rule from the DACL of an object.\n  syntax:\n    content: public bool RemoveAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAccessRule\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)\n  id: RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes all access rules that exactly match the specified access rule from the DACL of an object.\n  syntax:\n    content: public void RemoveAccessRuleSpecific (System.DirectoryServices.ActiveDirectoryAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAccessRule\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)\n  id: RemoveAudit(System.Security.Principal.IdentityReference)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: RemoveAudit(IdentityReference)\n  nameWithType: ActiveDirectorySecurity.RemoveAudit(IdentityReference)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(IdentityReference)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes all audit rules that have the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref> object from the SACL of an object.\n  syntax:\n    content: public void RemoveAudit (System.Security.Principal.IdentityReference identity);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object, that resolves to a security identifier (SID).\n  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  id: RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: RemoveAuditRule(ActiveDirectoryAuditRule)\n  nameWithType: ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes all audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) of an object.\n  syntax:\n    content: public bool RemoveAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAuditRule\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)\n  id: RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)\n  nameWithType: ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes all audit rules that exactly match the specified audit rule from the SACL of an object.\n  syntax:\n    content: public void RemoveAuditRuleSpecific (System.DirectoryServices.ActiveDirectoryAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAuditRule\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  id: ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: ResetAccessRule(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Searches an object's DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <code>rule</code> object, and replaces all of those access rules with the access rules that are contained in the <code>rule</code> object.\n  remarks: When ResetAccessRule is used to replace all access rules with a particular SID in an object's DACL, both Allow- and Deny- type rules are replaced.  To replace only Allow rules without affecting Deny rules, or to replace Deny rules without affecting Allow rules, use <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> instead.\n  syntax:\n    content: public void ResetAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAccessRule\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  id: SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: SetAccessRule(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Searches an object's DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <code>rule</code> object, and an access control type (Allow or Deny) that matches the type specified in the <code>rule</code> object, and replaces all of those access rules with the access rules that are contained in the <code>rule</code> object.\n  remarks: When SetAccessRule is used to replace all access rules that match a particular SID and access control type (Allow or Deny) in an object's DACL, all rules in that DACL with an  SID and type that match the SID and access control type contained in the `rule` object are replaced.  Using this method, the developer can replace any Allow rules for that SID on that object without affecting existing Deny rules, or replace all Deny rules for that SID on that object without affecting existing Allow rules.  To replace all rules for that object pertaining to the specified SID, regardless of type, use <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> instead.\n  syntax:\n    content: public void SetAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAccessRule\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  id: SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: SetAuditRule(ActiveDirectoryAuditRule)\n  nameWithType: ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Replaces all audit rules that contain the same security identifier as the specified audit rule in the SACL of an object with the specified audit rule.\n  syntax:\n    content: public void SetAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAuditRule\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: System.Security.AccessControl.DirectoryObjectSecurity\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.DirectoryServices.ActiveDirectorySecurity.#ctor\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: ActiveDirectorySecurity()\n  nameWithType: ActiveDirectorySecurity.ActiveDirectorySecurity()\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.ActiveDirectorySecurity()\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: ActiveDirectorySecurity.AccessRightType\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  nameWithType: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)\n  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: ActiveDirectorySecurity.AccessRuleType\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AddAccessRule(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)\n- uid: System.DirectoryServices.ActiveDirectoryAccessRule\n  parent: System.DirectoryServices\n  isExternal: false\n  name: ActiveDirectoryAccessRule\n  nameWithType: ActiveDirectoryAccessRule\n  fullName: System.DirectoryServices.ActiveDirectoryAccessRule\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AddAuditRule(ActiveDirectoryAuditRule)\n  nameWithType: ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)\n- uid: System.DirectoryServices.ActiveDirectoryAuditRule\n  parent: System.DirectoryServices\n  isExternal: false\n  name: ActiveDirectoryAuditRule\n  nameWithType: ActiveDirectoryAuditRule\n  fullName: System.DirectoryServices.ActiveDirectoryAuditRule\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  nameWithType: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)\n  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: ActiveDirectorySecurity.AuditRuleType\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: ModifyAccessRule(AccessControlModification,AccessRule,Boolean)\n  nameWithType: ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)\n- uid: System.Security.AccessControl.AccessControlModification\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlModification\n  nameWithType: AccessControlModification\n  fullName: System.Security.AccessControl.AccessControlModification\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: ModifyAuditRule(AccessControlModification,AuditRule,Boolean)\n  nameWithType: ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: PurgeAccessRules(IdentityReference)\n  nameWithType: ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: PurgeAuditRules(IdentityReference)\n  nameWithType: ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAccess(IdentityReference,AccessControlType)\n  nameWithType: ActiveDirectorySecurity.RemoveAccess(IdentityReference,AccessControlType)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(IdentityReference,AccessControlType)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAccessRule(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAudit(IdentityReference)\n  nameWithType: ActiveDirectorySecurity.RemoveAudit(IdentityReference)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(IdentityReference)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAuditRule(ActiveDirectoryAuditRule)\n  nameWithType: ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)\n  nameWithType: ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: ResetAccessRule(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: SetAccessRule(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: SetAuditRule(ActiveDirectoryAuditRule)\n  nameWithType: ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)\n  fullName: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.#ctor*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: ActiveDirectorySecurity\n  nameWithType: ActiveDirectorySecurity.ActiveDirectorySecurity\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: ActiveDirectorySecurity.AccessRightType\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AccessRuleFactory\n  nameWithType: ActiveDirectorySecurity.AccessRuleFactory\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: ActiveDirectorySecurity.AccessRuleType\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AddAccessRule\n  nameWithType: ActiveDirectorySecurity.AddAccessRule\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AddAuditRule\n  nameWithType: ActiveDirectorySecurity.AddAuditRule\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AuditRuleFactory\n  nameWithType: ActiveDirectorySecurity.AuditRuleFactory\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: ActiveDirectorySecurity.AuditRuleType\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: ModifyAccessRule\n  nameWithType: ActiveDirectorySecurity.ModifyAccessRule\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: ModifyAuditRule\n  nameWithType: ActiveDirectorySecurity.ModifyAuditRule\n- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: PurgeAccessRules\n  nameWithType: ActiveDirectorySecurity.PurgeAccessRules\n- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: PurgeAuditRules\n  nameWithType: ActiveDirectorySecurity.PurgeAuditRules\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAccess\n  nameWithType: ActiveDirectorySecurity.RemoveAccess\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAccessRule\n  nameWithType: ActiveDirectorySecurity.RemoveAccessRule\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific\n  nameWithType: ActiveDirectorySecurity.RemoveAccessRuleSpecific\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAudit\n  nameWithType: ActiveDirectorySecurity.RemoveAudit\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAuditRule\n  nameWithType: ActiveDirectorySecurity.RemoveAuditRule\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific\n  nameWithType: ActiveDirectorySecurity.RemoveAuditRuleSpecific\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: ResetAccessRule\n  nameWithType: ActiveDirectorySecurity.ResetAccessRule\n- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: SetAccessRule\n  nameWithType: ActiveDirectorySecurity.SetAccessRule\n- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: SetAuditRule\n  nameWithType: ActiveDirectorySecurity.SetAuditRule\n"}