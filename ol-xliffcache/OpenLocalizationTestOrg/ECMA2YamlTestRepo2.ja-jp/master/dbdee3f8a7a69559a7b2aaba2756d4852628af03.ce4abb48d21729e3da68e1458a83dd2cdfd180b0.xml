{"nodes":[{"pos":[987,1178],"content":"Specifies that a property, field, or parameter should be populated with all matching exports by the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Specifies that a property, field, or parameter should be populated with all matching exports by the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref> object."},{"pos":[1997,2173],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.ImportManyAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, importing the set of exports with the default contract name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportManyAttribute\"></xref> class, importing the set of exports with the default contract name."},{"pos":[2186,2572],"content":"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the type of the property, field, or parameter that is marked with this attribute.       The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the type of the property, field, or parameter that is marked with this attribute.       The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.","pos":[0,384],"nodes":[{"content":"The default contract name is the result of calling the &lt;xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A&gt; method on the type of the property, field, or parameter that is marked with this attribute.","pos":[0,230],"source":"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the type of the property, field, or parameter that is marked with this attribute."},{"content":"The contract name is compared by using the &lt;xref:System.StringComparer.Ordinal%2A&gt; property to perform a case-sensitive, non-linguistic comparison.","pos":[237,384],"source":"       The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison."}]}]},{"pos":[3279,3457],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.ImportManyAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, importing the set of exports with the specified contract name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportManyAttribute\"></xref> class, importing the set of exports with the specified contract name."},{"pos":[3470,3849],"content":"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.       The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.       The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.","pos":[0,377],"nodes":[{"content":"The default contract name is the result of calling the &lt;xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A&gt; method on the property, field, or parameter type that is marked with this attribute.","pos":[0,223],"source":"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute."},{"content":"The contract name is compared by using the &lt;xref:System.StringComparer.Ordinal%2A&gt; property to perform a case-sensitive, non-linguistic comparison.","pos":[230,377],"source":"       The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison."}]}]},{"pos":[4008,4173],"content":"The contract name of the exports to import, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string (\"\") to use the default contract name.","needQuote":true,"needEscape":true,"source":"The contract name of the exports to import, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\") to use the default contract name."},{"pos":[4796,4996],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.ImportManyAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, importing the set of exports with the contract name derived from the specified type.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportManyAttribute\"></xref> class, importing the set of exports with the contract name derived from the specified type."},{"pos":[5009,5553],"content":"The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.       The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.       The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.","needQuote":false,"needEscape":true,"nodes":[{"content":"The contract name is the result of calling the &lt;xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A&gt; method on <ph id=\"ph1\">`contractType`</ph>.","pos":[0,156],"source":"The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`."},{"content":"The default contract name is the result of calling the &lt;xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A&gt; method on the property, field, or parameter type that is marked with this attribute.","pos":[163,386],"source":"       The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute."},{"content":"The contract name is compared by using the &lt;xref:System.StringComparer.Ordinal%2A&gt; property to perform a case-sensitive, non-linguistic comparison.","pos":[393,540],"source":"       The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison."}]},{"pos":[5708,5868],"content":"The type to derive the contract name of the exports to import, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use the default contract name.","needQuote":true,"needEscape":true,"source":"The type to derive the contract name of the exports to import, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to use the default contract name."},{"pos":[6540,6736],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.ImportManyAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, importing the set of exports with the specified contract name and contract type.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportManyAttribute\"></xref> class, importing the set of exports with the specified contract name and contract type."},{"pos":[6913,7078],"content":"The contract name of the exports to import, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string (\"\") to use the default contract name.","needQuote":true,"needEscape":true,"source":"The contract name of the exports to import, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\") to use the default contract name."},{"pos":[7145,7178],"content":"The type of the export to import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the export to import.","pos":[0,33]}]},{"pos":[7775,7921],"content":"Gets or sets a value indicating whether the decorated property or field will be recomposed when exports that provide the matching contract change.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the decorated property or field will be recomposed when exports that provide the matching contract change.","pos":[0,146]}]},{"pos":[8049,8572],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property or field allows for recomposition when exports that provide the same <xref:System.ComponentModel.Composition.ImportManyAttribute.ContractName*> are added or removed from the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.       The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the property or field allows for recomposition when exports that provide the same &lt;xref:System.ComponentModel.Composition.ImportManyAttribute.ContractName*&gt; are added or removed from the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,410],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property or field allows for recomposition when exports that provide the same <xref:System.ComponentModel.Composition.ImportManyAttribute.ContractName*> are added or removed from the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[417,501],"source":"       The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[9153,9201],"content":"Gets the contract name of the exports to import.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the contract name of the exports to import.","pos":[0,48]}]},{"pos":[9318,9404],"content":"The contract name of the exports to import. The default value is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract name of the exports to import. The default value is an empty string (\"\").","pos":[0,86],"nodes":[{"content":"The contract name of the exports to import.","pos":[0,43]},{"content":"The default value is an empty string (\"\").","pos":[44,86]}]}]},{"pos":[9978,10025],"content":"Gets the contract type of the export to import.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the contract type of the export to import.","pos":[0,47]}]},{"pos":[10138,10465],"content":"The type of the export that this import is expecting. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which means that the type will be obtained by looking at the type on the member that this import is attached to. If the type is <xref:System.Object>, the import will match any exported type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the export that this import is expecting.","pos":[0,53]},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which means that the type will be obtained by looking at the type on the member that this import is attached to.","pos":[54,249],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which means that the type will be obtained by looking at the type on the member that this import is attached to."},{"content":"If the type is &lt;xref:System.Object&gt;, the import will match any exported type.","pos":[250,327],"source":" If the type is <xref:System.Object>, the import will match any exported type."}]},{"pos":[11089,11277],"content":"Gets or sets a value that indicates that the importer requires a specific <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.CreationPolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the exports used to satisfy this import.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates that the importer requires a specific <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref> for the exports used to satisfy this import."},{"pos":[11487,12084],"content":"One of the following values:       <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref>, if the importer does not require a specific <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref>. This is the default.       <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref> to require that all used exports be shared by all parts in the container.       <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref> to require that all used exports be non-shared in a container. In this case, each part receives their own instance.","needQuote":false,"needEscape":true,"nodes":[{"content":"One of the following values:       <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.CreationPolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the importer does not require a specific <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Composition.CreationPolicy\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,220],"source":"One of the following values:       <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref>, if the importer does not require a specific <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref>."},{"content":"This is the default.","pos":[221,241]},{"content":"<bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.CreationPolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to require that all used exports be shared by all parts in the container.","pos":[248,391],"source":"<xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref> to require that all used exports be shared by all parts in the container."},{"content":"<bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.CreationPolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to require that all used exports be non-shared in a container.","pos":[398,530],"source":"<xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref> to require that all used exports be non-shared in a container."},{"content":"In this case, each part receives their own instance.","pos":[531,583]}]},{"pos":[12639,12726],"content":"Gets or sets a value that specifies the scopes from which this import may be satisfied.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies the scopes from which this import may be satisfied.","pos":[0,87]}]},{"pos":[12915,12989],"content":"A value that specifies the scopes from which this import may be satisfied.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that specifies the scopes from which this import may be satisfied.","pos":[0,74]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.ImportManyAttribute\n  id: ImportManyAttribute\n  children:\n  - System.ComponentModel.Composition.ImportManyAttribute.#ctor\n  - System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)\n  - System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)\n  - System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)\n  - System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition\n  - System.ComponentModel.Composition.ImportManyAttribute.ContractName\n  - System.ComponentModel.Composition.ImportManyAttribute.ContractType\n  - System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy\n  - System.ComponentModel.Composition.ImportManyAttribute.Source\n  langs:\n  - csharp\n  name: ImportManyAttribute\n  nameWithType: ImportManyAttribute\n  fullName: System.ComponentModel.Composition.ImportManyAttribute\n  type: Class\n  summary: Specifies that a property, field, or parameter should be populated with all matching exports by the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref> object.\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=false)]\n\n      public class ImportManyAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  langs:\n  - csharp\n  name: ImportManyAttribute()\n  nameWithType: ImportManyAttribute.ImportManyAttribute()\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute()\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportManyAttribute\"></xref> class, importing the set of exports with the default contract name.\n  remarks: \"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the type of the property, field, or parameter that is marked with this attribute.  \\n  \\n The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.\"\n  syntax:\n    content: public ImportManyAttribute ();\n    parameters: []\n  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  langs:\n  - csharp\n  name: ImportManyAttribute(String)\n  nameWithType: ImportManyAttribute.ImportManyAttribute(String)\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportManyAttribute\"></xref> class, importing the set of exports with the specified contract name.\n  remarks: \"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.  \\n  \\n The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.\"\n  syntax:\n    content: public ImportManyAttribute (string contractName);\n    parameters:\n    - id: contractName\n      type: System.String\n      description: The contract name of the exports to import, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\") to use the default contract name.\n  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  langs:\n  - csharp\n  name: ImportManyAttribute(Type)\n  nameWithType: ImportManyAttribute.ImportManyAttribute(Type)\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(Type)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportManyAttribute\"></xref> class, importing the set of exports with the contract name derived from the specified type.\n  remarks: \"The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.  \\n  \\n The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.  \\n  \\n The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.\"\n  syntax:\n    content: public ImportManyAttribute (Type contractType);\n    parameters:\n    - id: contractType\n      type: System.Type\n      description: The type to derive the contract name of the exports to import, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to use the default contract name.\n  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)\n  id: '#ctor(System.String,System.Type)'\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  langs:\n  - csharp\n  name: ImportManyAttribute(String,Type)\n  nameWithType: ImportManyAttribute.ImportManyAttribute(String,Type)\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String,Type)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportManyAttribute\"></xref> class, importing the set of exports with the specified contract name and contract type.\n  syntax:\n    content: public ImportManyAttribute (string contractName, Type contractType);\n    parameters:\n    - id: contractName\n      type: System.String\n      description: The contract name of the exports to import, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\") to use the default contract name.\n    - id: contractType\n      type: System.Type\n      description: The type of the export to import.\n  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition\n  id: AllowRecomposition\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  langs:\n  - csharp\n  name: AllowRecomposition\n  nameWithType: ImportManyAttribute.AllowRecomposition\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets or sets a value indicating whether the decorated property or field will be recomposed when exports that provide the matching contract change.\n  syntax:\n    content: public bool AllowRecomposition { get; set; }\n    return:\n      type: System.Boolean\n      description: \"<xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> if the property or field allows for recomposition when exports that provide the same <xref:System.ComponentModel.Composition.ImportManyAttribute.ContractName*> are added or removed from the <xref href=\\\"System.ComponentModel.Composition.Hosting.CompositionContainer\\\"></xref>; otherwise, <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>.  \\n  \\n The default value is <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>.\"\n  overload: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractName\n  id: ContractName\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  langs:\n  - csharp\n  name: ContractName\n  nameWithType: ImportManyAttribute.ContractName\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractName\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets the contract name of the exports to import.\n  syntax:\n    content: public string ContractName { get; }\n    return:\n      type: System.String\n      description: The contract name of the exports to import. The default value is an empty string (\"\").\n  overload: System.ComponentModel.Composition.ImportManyAttribute.ContractName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractType\n  id: ContractType\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  langs:\n  - csharp\n  name: ContractType\n  nameWithType: ImportManyAttribute.ContractType\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractType\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets the contract type of the export to import.\n  syntax:\n    content: public Type ContractType { get; }\n    return:\n      type: System.Type\n      description: The type of the export that this import is expecting. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which means that the type will be obtained by looking at the type on the member that this import is attached to. If the type is <xref:System.Object>, the import will match any exported type.\n  overload: System.ComponentModel.Composition.ImportManyAttribute.ContractType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy\n  id: RequiredCreationPolicy\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  langs:\n  - csharp\n  name: RequiredCreationPolicy\n  nameWithType: ImportManyAttribute.RequiredCreationPolicy\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets or sets a value that indicates that the importer requires a specific <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref> for the exports used to satisfy this import.\n  syntax:\n    content: public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }\n    return:\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: \"One of the following values:  \\n  \\n <xref href=\\\"System.ComponentModel.Composition.CreationPolicy\\\"></xref>, if the importer does not require a specific <xref href=\\\"System.ComponentModel.Composition.CreationPolicy\\\"></xref>. This is the default.  \\n  \\n <xref href=\\\"System.ComponentModel.Composition.CreationPolicy\\\"></xref> to require that all used exports be shared by all parts in the container.  \\n  \\n <xref href=\\\"System.ComponentModel.Composition.CreationPolicy\\\"></xref> to require that all used exports be non-shared in a container. In this case, each part receives their own instance.\"\n  overload: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ImportManyAttribute.Source\n  id: Source\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  langs:\n  - csharp\n  name: Source\n  nameWithType: ImportManyAttribute.Source\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.Source\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets or sets a value that specifies the scopes from which this import may be satisfied.\n  syntax:\n    content: public System.ComponentModel.Composition.ImportSource Source { get; set; }\n    return:\n      type: System.ComponentModel.Composition.ImportSource\n      description: A value that specifies the scopes from which this import may be satisfied.\n  overload: System.ComponentModel.Composition.ImportManyAttribute.Source*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  isExternal: false\n  name: ImportManyAttribute()\n  nameWithType: ImportManyAttribute.ImportManyAttribute()\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute()\n- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  isExternal: false\n  name: ImportManyAttribute(String)\n  nameWithType: ImportManyAttribute.ImportManyAttribute(String)\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  isExternal: false\n  name: ImportManyAttribute(Type)\n  nameWithType: ImportManyAttribute.ImportManyAttribute(Type)\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  isExternal: false\n  name: ImportManyAttribute(String,Type)\n  nameWithType: ImportManyAttribute.ImportManyAttribute(String,Type)\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String,Type)\n- uid: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  isExternal: false\n  name: AllowRecomposition\n  nameWithType: ImportManyAttribute.AllowRecomposition\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractName\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  isExternal: false\n  name: ContractName\n  nameWithType: ImportManyAttribute.ContractName\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractName\n- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractType\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  isExternal: false\n  name: ContractType\n  nameWithType: ImportManyAttribute.ContractType\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractType\n- uid: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  isExternal: false\n  name: RequiredCreationPolicy\n  nameWithType: ImportManyAttribute.RequiredCreationPolicy\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy\n- uid: System.ComponentModel.Composition.CreationPolicy\n  parent: System.ComponentModel.Composition\n  isExternal: false\n  name: CreationPolicy\n  nameWithType: CreationPolicy\n  fullName: System.ComponentModel.Composition.CreationPolicy\n- uid: System.ComponentModel.Composition.ImportManyAttribute.Source\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  isExternal: false\n  name: Source\n  nameWithType: ImportManyAttribute.Source\n  fullName: System.ComponentModel.Composition.ImportManyAttribute.Source\n- uid: System.ComponentModel.Composition.ImportSource\n  parent: System.ComponentModel.Composition\n  isExternal: false\n  name: ImportSource\n  nameWithType: ImportSource\n  fullName: System.ComponentModel.Composition.ImportSource\n- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor*\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  isExternal: false\n  name: ImportManyAttribute\n  nameWithType: ImportManyAttribute.ImportManyAttribute\n- uid: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition*\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  isExternal: false\n  name: AllowRecomposition\n  nameWithType: ImportManyAttribute.AllowRecomposition\n- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractName*\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  isExternal: false\n  name: ContractName\n  nameWithType: ImportManyAttribute.ContractName\n- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractType*\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  isExternal: false\n  name: ContractType\n  nameWithType: ImportManyAttribute.ContractType\n- uid: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy*\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  isExternal: false\n  name: RequiredCreationPolicy\n  nameWithType: ImportManyAttribute.RequiredCreationPolicy\n- uid: System.ComponentModel.Composition.ImportManyAttribute.Source*\n  parent: System.ComponentModel.Composition.ImportManyAttribute\n  isExternal: false\n  name: Source\n  nameWithType: ImportManyAttribute.Source\n"}