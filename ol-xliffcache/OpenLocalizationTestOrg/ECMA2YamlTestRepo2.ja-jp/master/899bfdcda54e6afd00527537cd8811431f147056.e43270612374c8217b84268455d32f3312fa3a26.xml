{"nodes":[{"pos":[1420,1624],"content":"Provides options for configuring contract, binding, and address properties of the channel endpoint, which are used by clients to connect to service endpoints on the server. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides options for configuring contract, binding, and address properties of the channel endpoint, which are used by clients to connect to service endpoints on the server. This class cannot be inherited.","pos":[0,204],"nodes":[{"content":"Provides options for configuring contract, binding, and address properties of the channel endpoint, which are used by clients to connect to service endpoints on the server.","pos":[0,172]},{"content":"This class cannot be inherited.","pos":[173,204]}]}]},{"pos":[4955,5073],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.ChannelEndpointElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ChannelEndpointElement\"></xref> class."},{"pos":[5912,6084],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.ChannelEndpointElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified endpoint address and contract type.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ChannelEndpointElement\"></xref> class with the specified endpoint address and contract type."},{"pos":[6307,6414],"content":"Specifies the address of the endpoint. The default is an empty string. The address must be an absolute URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the address of the endpoint. The default is an empty string. The address must be an absolute URI.","pos":[0,107],"nodes":[{"content":"Specifies the address of the endpoint.","pos":[0,38]},{"content":"The default is an empty string.","pos":[39,70]},{"content":"The address must be an absolute URI.","pos":[71,107]}]}]},{"pos":[6483,6595],"content":"A string that indicates which contract this endpoint is exposing. The assembly must implement the contract type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that indicates which contract this endpoint is exposing. The assembly must implement the contract type.","pos":[0,112],"nodes":[{"content":"A string that indicates which contract this endpoint is exposing.","pos":[0,65]},{"content":"The assembly must implement the contract type.","pos":[66,112]}]}]},{"pos":[7138,7176],"content":"Specifies the address of the endpoint.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the address of the endpoint.","pos":[0,38]}]},{"pos":[7287,7372],"content":"A URI that contains the address of the endpoint. The address must be an absolute URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"A URI that contains the address of the endpoint. The address must be an absolute URI.","pos":[0,85],"nodes":[{"content":"A URI that contains the address of the endpoint.","pos":[0,48]},{"content":"The address must be an absolute URI.","pos":[49,85]}]}]},{"pos":[7987,8073],"content":"Gets or sets the behavior name of the behavior to be used to instantiate the endpoint.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the behavior name of the behavior to be used to instantiate the endpoint.","pos":[0,86]}]},{"pos":[8204,8381],"content":"The behavior name of the behavior to be used to instantiate the endpoint. The behavior name must be in scope at the point the service is defined. The default is an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The behavior name of the behavior to be used to instantiate the endpoint. The behavior name must be in scope at the point the service is defined. The default is an empty string.","pos":[0,177],"nodes":[{"content":"The behavior name of the behavior to be used to instantiate the endpoint.","pos":[0,73]},{"content":"The behavior name must be in scope at the point the service is defined.","pos":[74,145]},{"content":"The default is an empty string.","pos":[146,177]}]}]},{"pos":[8940,8980],"content":"Gets or sets the type of binding to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type of binding to use.","pos":[0,40]}]},{"pos":[9097,9294],"content":"The type of binding to use. The type must have a registered configuration section in order to be referenced. The type is the registered by section name, rather than by the type name of the binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of binding to use. The type must have a registered configuration section in order to be referenced. The type is the registered by section name, rather than by the type name of the binding.","pos":[0,197],"nodes":[{"content":"The type of binding to use.","pos":[0,27]},{"content":"The type must have a registered configuration section in order to be referenced.","pos":[28,108]},{"content":"The type is the registered by section name, rather than by the type name of the binding.","pos":[109,197]}]}]},{"pos":[9904,9990],"content":"Gets or sets the binding name of the binding to use when the endpoint is instantiated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the binding name of the binding to use when the endpoint is instantiated.","pos":[0,86]}]},{"pos":[10120,10297],"content":"The binding name of the binding to use when the endpoint is instantiated. The binding name must be in scope at the point the endpoint is defined. The default is an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binding name of the binding to use when the endpoint is instantiated. The binding name must be in scope at the point the endpoint is defined. The default is an empty string.","pos":[0,177],"nodes":[{"content":"The binding name of the binding to use when the endpoint is instantiated.","pos":[0,73]},{"content":"The binding name must be in scope at the point the endpoint is defined.","pos":[74,145]},{"content":"The default is an empty string.","pos":[146,177]}]}]},{"pos":[10860,10917],"content":"Gets or sets the contract that this endpoint is exposing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contract that this endpoint is exposing.","pos":[0,57]}]},{"pos":[11035,11121],"content":"The contract this endpoint is exposing. The assembly must implement the contract type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract this endpoint is exposing. The assembly must implement the contract type.","pos":[0,86],"nodes":[{"content":"The contract this endpoint is exposing.","pos":[0,39]},{"content":"The assembly must implement the contract type.","pos":[40,86]}]}]},{"pos":[11737,12088],"content":"Gets or sets the name of the standard endpoint that is set by the <xref:System.ServiceModel.Configuration.ChannelEndpointElement.Kind*> property, which references to the additional configuration information of this standard endpoint. The same name must be defined in the <xref href=\"System.ServiceModel.Configuration.StandardEndpointsSection\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the standard endpoint that is set by the &lt;xref:System.ServiceModel.Configuration.ChannelEndpointElement.Kind*&gt; property, which references to the additional configuration information of this standard endpoint.","pos":[0,233],"source":"Gets or sets the name of the standard endpoint that is set by the <xref:System.ServiceModel.Configuration.ChannelEndpointElement.Kind*> property, which references to the additional configuration information of this standard endpoint."},{"content":"The same name must be defined in the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.StandardEndpointsSection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[234,351],"source":" The same name must be defined in the <xref href=\"System.ServiceModel.Configuration.StandardEndpointsSection\"></xref>."}]},{"pos":[12219,12277],"content":"A string that specifies the name of the standard endpoint.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that specifies the name of the standard endpoint.","pos":[0,58]}]},{"pos":[12836,12873],"content":"Gets a collection of address headers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of address headers.","pos":[0,37]}]},{"pos":[13094,13229],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.AddressHeaderCollectionElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains a collection of address headers.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ServiceModel.Configuration.AddressHeaderCollectionElement\"></xref> that contains a collection of address headers."},{"pos":[13779,13899],"content":"Gets an identity that enables the authentication of an endpoint by other endpoints that are exchanging messages with it.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an identity that enables the authentication of an endpoint by other endpoints that are exchanging messages with it.","pos":[0,120]}]},{"pos":[14091,14296],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.IdentityElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains configuration settings for enabling the authentication of an endpoint by other endpoints exchanging messages with it.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ServiceModel.Configuration.IdentityElement\"></xref> that contains configuration settings for enabling the authentication of an endpoint by other endpoints exchanging messages with it."},{"pos":[14827,15095],"content":"Gets or sets the type of standard endpoint applied. The type must be registered in the <xref uid=\"langword_csharp_&lt;extensions&gt;\" name=\"&lt;extensions&gt;\" href=\"\"></xref> section or in machine.config. If nothing is specified, a common channel endpoint is created.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type of standard endpoint applied.","pos":[0,51]},{"content":"The type must be registered in the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;extensions&amp;gt;\" name=\"&amp;lt;extensions&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> section or in machine.config.","pos":[52,205],"source":" The type must be registered in the <xref uid=\"langword_csharp_&lt;extensions&gt;\" name=\"&lt;extensions&gt;\" href=\"\"></xref> section or in machine.config."},{"content":"If nothing is specified, a common channel endpoint is created.","pos":[206,268]}]},{"pos":[15209,15261],"content":"A string that denotes the type of standard endpoint.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that denotes the type of standard endpoint.","pos":[0,52]}]},{"pos":[15788,15857],"content":"Gets or sets a unique identifier of an endpoint for a given contract.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a unique identifier of an endpoint for a given contract.","pos":[0,69]}]},{"pos":[15869,16160],"content":"The service model allows the user to define multiple clients for a given contract type. Each definition must be differentiated by a unique configuration name. If this property is omitted, the corresponding endpoint is used as the default endpoint associated with the specified contract type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service model allows the user to define multiple clients for a given contract type. Each definition must be differentiated by a unique configuration name. If this property is omitted, the corresponding endpoint is used as the default endpoint associated with the specified contract type.","pos":[0,291],"nodes":[{"content":"The service model allows the user to define multiple clients for a given contract type.","pos":[0,87]},{"content":"Each definition must be differentiated by a unique configuration name.","pos":[88,158]},{"content":"If this property is omitted, the corresponding endpoint is used as the default endpoint associated with the specified contract type.","pos":[159,291]}]}]},{"pos":[16274,16631],"content":"An endpoint for a given contract. The default is an empty string. The service model allows the user to define multiple clients for a given contract type. Each definition must be differentiated by a unique configuration name. If this property is omitted, the corresponding endpoint is used as the default endpoint associated with the specified contract type.","needQuote":true,"needEscape":true,"nodes":[{"content":"An endpoint for a given contract. The default is an empty string. The service model allows the user to define multiple clients for a given contract type. Each definition must be differentiated by a unique configuration name. If this property is omitted, the corresponding endpoint is used as the default endpoint associated with the specified contract type.","pos":[0,357],"nodes":[{"content":"An endpoint for a given contract.","pos":[0,33]},{"content":"The default is an empty string.","pos":[34,65]},{"content":"The service model allows the user to define multiple clients for a given contract type.","pos":[66,153]},{"content":"Each definition must be differentiated by a unique configuration name.","pos":[154,224]},{"content":"If this property is omitted, the corresponding endpoint is used as the default endpoint associated with the specified contract type.","pos":[225,357]}]}]},{"pos":[17388,17400],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18302,18314],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement\n  id: ChannelEndpointElement\n  children:\n  - System.ServiceModel.Configuration.ChannelEndpointElement.#ctor\n  - System.ServiceModel.Configuration.ChannelEndpointElement.#ctor(System.ServiceModel.EndpointAddress,System.String)\n  - System.ServiceModel.Configuration.ChannelEndpointElement.Address\n  - System.ServiceModel.Configuration.ChannelEndpointElement.BehaviorConfiguration\n  - System.ServiceModel.Configuration.ChannelEndpointElement.Binding\n  - System.ServiceModel.Configuration.ChannelEndpointElement.BindingConfiguration\n  - System.ServiceModel.Configuration.ChannelEndpointElement.Contract\n  - System.ServiceModel.Configuration.ChannelEndpointElement.EndpointConfiguration\n  - System.ServiceModel.Configuration.ChannelEndpointElement.Headers\n  - System.ServiceModel.Configuration.ChannelEndpointElement.Identity\n  - System.ServiceModel.Configuration.ChannelEndpointElement.Kind\n  - System.ServiceModel.Configuration.ChannelEndpointElement.Name\n  - System.ServiceModel.Configuration.ChannelEndpointElement.Properties\n  - System.ServiceModel.Configuration.ChannelEndpointElement.Reset(System.Configuration.ConfigurationElement)\n  langs:\n  - csharp\n  name: ChannelEndpointElement\n  nameWithType: ChannelEndpointElement\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement\n  type: Class\n  summary: Provides options for configuring contract, binding, and address properties of the channel endpoint, which are used by clients to connect to service endpoints on the server. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class ChannelEndpointElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  langs:\n  - csharp\n  name: ChannelEndpointElement()\n  nameWithType: ChannelEndpointElement.ChannelEndpointElement()\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.ChannelEndpointElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ChannelEndpointElement\"></xref> class.\n  syntax:\n    content: public ChannelEndpointElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.ChannelEndpointElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.#ctor(System.ServiceModel.EndpointAddress,System.String)\n  id: '#ctor(System.ServiceModel.EndpointAddress,System.String)'\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  langs:\n  - csharp\n  name: ChannelEndpointElement(EndpointAddress,String)\n  nameWithType: ChannelEndpointElement.ChannelEndpointElement(EndpointAddress,String)\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.ChannelEndpointElement(EndpointAddress,String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ChannelEndpointElement\"></xref> class with the specified endpoint address and contract type.\n  syntax:\n    content: public ChannelEndpointElement (System.ServiceModel.EndpointAddress address, string contractType);\n    parameters:\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: Specifies the address of the endpoint. The default is an empty string. The address must be an absolute URI.\n    - id: contractType\n      type: System.String\n      description: A string that indicates which contract this endpoint is exposing. The assembly must implement the contract type.\n  overload: System.ServiceModel.Configuration.ChannelEndpointElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Address\n  id: Address\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  langs:\n  - csharp\n  name: Address\n  nameWithType: ChannelEndpointElement.Address\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Address\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Specifies the address of the endpoint.\n  syntax:\n    content: public Uri Address { get; set; }\n    return:\n      type: System.Uri\n      description: A URI that contains the address of the endpoint. The address must be an absolute URI.\n  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Address*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.BehaviorConfiguration\n  id: BehaviorConfiguration\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  langs:\n  - csharp\n  name: BehaviorConfiguration\n  nameWithType: ChannelEndpointElement.BehaviorConfiguration\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.BehaviorConfiguration\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the behavior name of the behavior to be used to instantiate the endpoint.\n  syntax:\n    content: public string BehaviorConfiguration { get; set; }\n    return:\n      type: System.String\n      description: The behavior name of the behavior to be used to instantiate the endpoint. The behavior name must be in scope at the point the service is defined. The default is an empty string.\n  overload: System.ServiceModel.Configuration.ChannelEndpointElement.BehaviorConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Binding\n  id: Binding\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  langs:\n  - csharp\n  name: Binding\n  nameWithType: ChannelEndpointElement.Binding\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Binding\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the type of binding to use.\n  syntax:\n    content: public string Binding { get; set; }\n    return:\n      type: System.String\n      description: The type of binding to use. The type must have a registered configuration section in order to be referenced. The type is the registered by section name, rather than by the type name of the binding.\n  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Binding*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.BindingConfiguration\n  id: BindingConfiguration\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  langs:\n  - csharp\n  name: BindingConfiguration\n  nameWithType: ChannelEndpointElement.BindingConfiguration\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.BindingConfiguration\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the binding name of the binding to use when the endpoint is instantiated.\n  syntax:\n    content: public string BindingConfiguration { get; set; }\n    return:\n      type: System.String\n      description: The binding name of the binding to use when the endpoint is instantiated. The binding name must be in scope at the point the endpoint is defined. The default is an empty string.\n  overload: System.ServiceModel.Configuration.ChannelEndpointElement.BindingConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Contract\n  id: Contract\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  langs:\n  - csharp\n  name: Contract\n  nameWithType: ChannelEndpointElement.Contract\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Contract\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the contract that this endpoint is exposing.\n  syntax:\n    content: public string Contract { get; set; }\n    return:\n      type: System.String\n      description: The contract this endpoint is exposing. The assembly must implement the contract type.\n  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Contract*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.EndpointConfiguration\n  id: EndpointConfiguration\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  langs:\n  - csharp\n  name: EndpointConfiguration\n  nameWithType: ChannelEndpointElement.EndpointConfiguration\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.EndpointConfiguration\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the name of the standard endpoint that is set by the <xref:System.ServiceModel.Configuration.ChannelEndpointElement.Kind*> property, which references to the additional configuration information of this standard endpoint. The same name must be defined in the <xref href=\"System.ServiceModel.Configuration.StandardEndpointsSection\"></xref>.\n  syntax:\n    content: public string EndpointConfiguration { get; set; }\n    return:\n      type: System.String\n      description: A string that specifies the name of the standard endpoint.\n  overload: System.ServiceModel.Configuration.ChannelEndpointElement.EndpointConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Headers\n  id: Headers\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  langs:\n  - csharp\n  name: Headers\n  nameWithType: ChannelEndpointElement.Headers\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Headers\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets a collection of address headers.\n  syntax:\n    content: public System.ServiceModel.Configuration.AddressHeaderCollectionElement Headers { get; }\n    return:\n      type: System.ServiceModel.Configuration.AddressHeaderCollectionElement\n      description: An <xref href=\"System.ServiceModel.Configuration.AddressHeaderCollectionElement\"></xref> that contains a collection of address headers.\n  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Headers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Identity\n  id: Identity\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  langs:\n  - csharp\n  name: Identity\n  nameWithType: ChannelEndpointElement.Identity\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Identity\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets an identity that enables the authentication of an endpoint by other endpoints that are exchanging messages with it.\n  syntax:\n    content: public System.ServiceModel.Configuration.IdentityElement Identity { get; }\n    return:\n      type: System.ServiceModel.Configuration.IdentityElement\n      description: An <xref href=\"System.ServiceModel.Configuration.IdentityElement\"></xref> that contains configuration settings for enabling the authentication of an endpoint by other endpoints exchanging messages with it.\n  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Identity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Kind\n  id: Kind\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  langs:\n  - csharp\n  name: Kind\n  nameWithType: ChannelEndpointElement.Kind\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Kind\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the type of standard endpoint applied. The type must be registered in the <xref uid=\"langword_csharp_&lt;extensions&gt;\" name=\"&lt;extensions&gt;\" href=\"\"></xref> section or in machine.config. If nothing is specified, a common channel endpoint is created.\n  syntax:\n    content: public string Kind { get; set; }\n    return:\n      type: System.String\n      description: A string that denotes the type of standard endpoint.\n  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Kind*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Name\n  id: Name\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ChannelEndpointElement.Name\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Name\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a unique identifier of an endpoint for a given contract.\n  remarks: The service model allows the user to define multiple clients for a given contract type. Each definition must be differentiated by a unique configuration name. If this property is omitted, the corresponding endpoint is used as the default endpoint associated with the specified contract type.\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: An endpoint for a given contract. The default is an empty string. The service model allows the user to define multiple clients for a given contract type. Each definition must be differentiated by a unique configuration name. If this property is omitted, the corresponding endpoint is used as the default endpoint associated with the specified contract type.\n  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: ChannelEndpointElement.Properties\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Reset(System.Configuration.ConfigurationElement)\n  id: Reset(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  langs:\n  - csharp\n  name: Reset(ConfigurationElement)\n  nameWithType: ChannelEndpointElement.Reset(ConfigurationElement)\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Reset(ConfigurationElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override void Reset (System.Configuration.ConfigurationElement parentElement);\n    parameters:\n    - id: parentElement\n      type: System.Configuration.ConfigurationElement\n      description: To be added.\n  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Reset*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.#ctor\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: ChannelEndpointElement()\n  nameWithType: ChannelEndpointElement.ChannelEndpointElement()\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.ChannelEndpointElement()\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.#ctor(System.ServiceModel.EndpointAddress,System.String)\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: ChannelEndpointElement(EndpointAddress,String)\n  nameWithType: ChannelEndpointElement.ChannelEndpointElement(EndpointAddress,String)\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.ChannelEndpointElement(EndpointAddress,String)\n- uid: System.ServiceModel.EndpointAddress\n  parent: System.ServiceModel\n  isExternal: true\n  name: EndpointAddress\n  nameWithType: EndpointAddress\n  fullName: System.ServiceModel.EndpointAddress\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Address\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Address\n  nameWithType: ChannelEndpointElement.Address\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Address\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.BehaviorConfiguration\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: BehaviorConfiguration\n  nameWithType: ChannelEndpointElement.BehaviorConfiguration\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.BehaviorConfiguration\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Binding\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Binding\n  nameWithType: ChannelEndpointElement.Binding\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Binding\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.BindingConfiguration\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: BindingConfiguration\n  nameWithType: ChannelEndpointElement.BindingConfiguration\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.BindingConfiguration\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Contract\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Contract\n  nameWithType: ChannelEndpointElement.Contract\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Contract\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.EndpointConfiguration\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: EndpointConfiguration\n  nameWithType: ChannelEndpointElement.EndpointConfiguration\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.EndpointConfiguration\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Headers\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Headers\n  nameWithType: ChannelEndpointElement.Headers\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Headers\n- uid: System.ServiceModel.Configuration.AddressHeaderCollectionElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: AddressHeaderCollectionElement\n  nameWithType: AddressHeaderCollectionElement\n  fullName: System.ServiceModel.Configuration.AddressHeaderCollectionElement\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Identity\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Identity\n  nameWithType: ChannelEndpointElement.Identity\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Identity\n- uid: System.ServiceModel.Configuration.IdentityElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: IdentityElement\n  nameWithType: IdentityElement\n  fullName: System.ServiceModel.Configuration.IdentityElement\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Kind\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Kind\n  nameWithType: ChannelEndpointElement.Kind\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Kind\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Name\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Name\n  nameWithType: ChannelEndpointElement.Name\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Name\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Properties\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Properties\n  nameWithType: ChannelEndpointElement.Properties\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ChannelEndpointElement.Reset(ConfigurationElement)\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Reset(ConfigurationElement)\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.#ctor*\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: ChannelEndpointElement\n  nameWithType: ChannelEndpointElement.ChannelEndpointElement\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Address*\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Address\n  nameWithType: ChannelEndpointElement.Address\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.BehaviorConfiguration*\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: BehaviorConfiguration\n  nameWithType: ChannelEndpointElement.BehaviorConfiguration\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Binding*\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Binding\n  nameWithType: ChannelEndpointElement.Binding\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.BindingConfiguration*\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: BindingConfiguration\n  nameWithType: ChannelEndpointElement.BindingConfiguration\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Contract*\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Contract\n  nameWithType: ChannelEndpointElement.Contract\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.EndpointConfiguration*\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: EndpointConfiguration\n  nameWithType: ChannelEndpointElement.EndpointConfiguration\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Headers*\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Headers\n  nameWithType: ChannelEndpointElement.Headers\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Identity*\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Identity\n  nameWithType: ChannelEndpointElement.Identity\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Kind*\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Kind\n  nameWithType: ChannelEndpointElement.Kind\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Name*\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Name\n  nameWithType: ChannelEndpointElement.Name\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Properties*\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Properties\n  nameWithType: ChannelEndpointElement.Properties\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Reset*\n  parent: System.ServiceModel.Configuration.ChannelEndpointElement\n  isExternal: false\n  name: Reset\n  nameWithType: ChannelEndpointElement.Reset\n"}