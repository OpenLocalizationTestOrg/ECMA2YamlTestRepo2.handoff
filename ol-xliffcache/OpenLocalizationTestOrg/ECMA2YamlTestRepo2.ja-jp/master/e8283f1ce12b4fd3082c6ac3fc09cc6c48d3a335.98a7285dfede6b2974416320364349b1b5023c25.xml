{"nodes":[{"pos":[684,755],"content":"Represents an invocation of a function. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an invocation of a function. This class cannot be inherited.","pos":[0,71],"nodes":[{"content":"Represents an invocation of a function.","pos":[0,39]},{"content":"This class cannot be inherited.","pos":[40,71]}]}]},{"pos":[767,826],"content":"Stored procedures are also mapped and treated as functions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stored procedures are also mapped and treated as functions.","pos":[0,59]}]},{"pos":[4638,4720],"content":"Implements the visitor pattern for expressions that do not produce a result value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the visitor pattern for expressions that do not produce a result value.","pos":[0,82]}]},{"pos":[4952,5040],"content":"An instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An instance of <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref>."},{"pos":[5230,5315],"content":"<ph id=\"ph1\">&lt;code&gt;visitor&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>visitor</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6214,6226],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6282,6294],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6840,6963],"content":"Gets an <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> list that provides the arguments to the function.","needQuote":true,"needEscape":true,"source":"Gets an <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> list that provides the arguments to the function."},{"pos":[7214,7332],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> list that provides the arguments to the function.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> list that provides the arguments to the function."},{"pos":[7863,7908],"content":"Gets the metadata for the function to invoke.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the metadata for the function to invoke.","pos":[0,45]}]},{"pos":[8074,8114],"content":"The metadata for the function to invoke.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata for the function to invoke.","pos":[0,40]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression\n  id: DbFunctionExpression\n  children:\n  - System.Data.Common.CommandTrees.DbFunctionExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  - System.Data.Common.CommandTrees.DbFunctionExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  - System.Data.Common.CommandTrees.DbFunctionExpression.Arguments\n  - System.Data.Common.CommandTrees.DbFunctionExpression.Function\n  langs:\n  - csharp\n  name: DbFunctionExpression\n  nameWithType: DbFunctionExpression\n  fullName: System.Data.Common.CommandTrees.DbFunctionExpression\n  type: Class\n  summary: Represents an invocation of a function. This class cannot be inherited.\n  remarks: Stored procedures are also mapped and treated as functions.\n  syntax:\n    content: 'public sealed class DbFunctionExpression : System.Data.Common.CommandTrees.DbExpression'\n  inheritance:\n  - System.Object\n  - System.Data.Common.CommandTrees.DbExpression\n  implements: []\n  inheritedMembers:\n  - System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)\n  - System.Data.Common.CommandTrees.DbExpression.ExpressionKind\n  - System.Data.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.FromGeography(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.FromString(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.GetHashCode\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.ResultType\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  id: Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbFunctionExpression\n  langs:\n  - csharp\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbFunctionExpression.Accept(DbExpressionVisitor)\n  fullName: System.Data.Common.CommandTrees.DbFunctionExpression.Accept(DbExpressionVisitor)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for expressions that do not produce a result value.\n  syntax:\n    content: public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor\n      description: An instance of <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref>.\n  overload: System.Data.Common.CommandTrees.DbFunctionExpression.Accept*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>visitor</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  id: Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  parent: System.Data.Common.CommandTrees.DbFunctionExpression\n  langs:\n  - csharp\n  name: Accept(DbExpressionVisitor<TResultType>)\n  nameWithType: DbFunctionExpression.Accept(DbExpressionVisitor<TResultType>)\n  fullName: System.Data.Common.CommandTrees.DbFunctionExpression.Accept(DbExpressionVisitor<TResultType>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public override TResultType Accept<TResultType> (System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType> visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbFunctionExpression.Accept<TResultType>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression.Arguments\n  id: Arguments\n  parent: System.Data.Common.CommandTrees.DbFunctionExpression\n  langs:\n  - csharp\n  name: Arguments\n  nameWithType: DbFunctionExpression.Arguments\n  fullName: System.Data.Common.CommandTrees.DbFunctionExpression.Arguments\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets an <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> list that provides the arguments to the function.\n  syntax:\n    content: public System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbExpression> Arguments { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression}\n      description: An <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> list that provides the arguments to the function.\n  overload: System.Data.Common.CommandTrees.DbFunctionExpression.Arguments*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression.Function\n  id: Function\n  parent: System.Data.Common.CommandTrees.DbFunctionExpression\n  langs:\n  - csharp\n  name: Function\n  nameWithType: DbFunctionExpression.Function\n  fullName: System.Data.Common.CommandTrees.DbFunctionExpression.Function\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets the metadata for the function to invoke.\n  syntax:\n    content: public System.Data.Metadata.Edm.EdmFunction Function { get; }\n    return:\n      type: System.Data.Metadata.Edm.EdmFunction\n      description: The metadata for the function to invoke.\n  overload: System.Data.Common.CommandTrees.DbFunctionExpression.Function*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: System.Data.Common.CommandTrees.DbExpression\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbFunctionExpression\n  isExternal: false\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbFunctionExpression.Accept(DbExpressionVisitor)\n  fullName: System.Data.Common.CommandTrees.DbFunctionExpression.Accept(DbExpressionVisitor)\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor\n  nameWithType: DbExpressionVisitor\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  parent: System.Data.Common.CommandTrees.DbFunctionExpression\n  isExternal: false\n  name: Accept(DbExpressionVisitor<TResultType>)\n  nameWithType: DbFunctionExpression.Accept(DbExpressionVisitor<TResultType>)\n  fullName: System.Data.Common.CommandTrees.DbFunctionExpression.Accept(DbExpressionVisitor<TResultType>)\n- uid: TResultType\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor<TResultType>\n  nameWithType: DbExpressionVisitor<TResultType>\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression.Arguments\n  parent: System.Data.Common.CommandTrees.DbFunctionExpression\n  isExternal: false\n  name: Arguments\n  nameWithType: DbFunctionExpression.Arguments\n  fullName: System.Data.Common.CommandTrees.DbFunctionExpression.Arguments\n- uid: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<DbExpression>\n  nameWithType: IList<DbExpression>\n  fullName: System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbExpression>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Data.Common.CommandTrees.DbExpression>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: DbExpression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression.Function\n  parent: System.Data.Common.CommandTrees.DbFunctionExpression\n  isExternal: false\n  name: Function\n  nameWithType: DbFunctionExpression.Function\n  fullName: System.Data.Common.CommandTrees.DbFunctionExpression.Function\n- uid: System.Data.Metadata.Edm.EdmFunction\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EdmFunction\n  nameWithType: EdmFunction\n  fullName: System.Data.Metadata.Edm.EdmFunction\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression.Accept*\n  parent: System.Data.Common.CommandTrees.DbFunctionExpression\n  isExternal: false\n  name: Accept\n  nameWithType: DbFunctionExpression.Accept\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression.Accept<TResultType>*\n  parent: System.Data.Common.CommandTrees.DbFunctionExpression\n  isExternal: false\n  name: Accept<TResultType>\n  nameWithType: DbFunctionExpression.Accept<TResultType>\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression.Arguments*\n  parent: System.Data.Common.CommandTrees.DbFunctionExpression\n  isExternal: false\n  name: Arguments\n  nameWithType: DbFunctionExpression.Arguments\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression.Function*\n  parent: System.Data.Common.CommandTrees.DbFunctionExpression\n  isExternal: false\n  name: Function\n  nameWithType: DbFunctionExpression.Function\n"}