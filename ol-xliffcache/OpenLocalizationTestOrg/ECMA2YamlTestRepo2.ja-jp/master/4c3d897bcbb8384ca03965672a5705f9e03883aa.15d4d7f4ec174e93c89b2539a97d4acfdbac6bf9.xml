{"nodes":[{"pos":[636,756],"content":"Annotates the returned result of a user-defined type (UDT) with additional information that can be used in Transact-SQL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Annotates the returned result of a user-defined type (UDT) with additional information that can be used in Transact-SQL.","pos":[0,120]}]},{"pos":[769,3392],"content":"SqlFacetAttribute may only be specified on non-void return values.       SqlFacetAttribute is used only to derive information about the return type, and is not intended to be a constraint specification on what can be stored in the type. Thus, if a field has a SqlFacetAttribute indicating its size to be 2 characters, then the SQL Server type of the field access expression is of size 2, but assignments into the field are not restricted by this facet.       The table below captures the matrix of valid values for the various properties for specific field types. In this table, \"Y\" indicates that the property is valid, and \"N\" indicates that the property is not valid.       The specified SqlFacetAttribute must be compatible with the field type. If the property is not valid, type registration will report an error if the user specifies a non-default value for the property. The maximum values for <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Precision%2A> and <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Scale%2A> properties are 38. For the <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize%2A> property, the value should be in the range of 1-8000 for binary and non-Unicode data, 1-4000 for Unicode data, or -1. All other values are not valid.      |Type|IsFixedLength|MaxSize|Precision|Scale|IsNullable|   |----------|-------------------|-------------|---------------|-----------|----------------|   |<xref:System.Data.SqlTypes.SqlBoolean>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlByte>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlInt16>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlInt32>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlInt64>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlSingle>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlDouble>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlDateTime>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlMoney>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlGuid>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlDecimal>|N|N|Y|Y|Y|   |<xref:System.Data.SqlTypes.SqlString>|Y|Y|N|N|Y|   |<xref:System.Data.SqlTypes.SqlBinary>|Y|Y|N|N|Y|   |<xref:System.Data.SqlTypes.SqlXml>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlBytes>|Y|Y|N|N|Y|   |<xref:System.Data.SqlTypes.SqlChars>|Y|Y|N|N|Y|   |Embedded UDTs|N|N|N|N|Y|   |<xref:System.String>|Y|Y|N|N|Y|   |Byte[]|Y|Y|N|N|Y|   |Char[]|Y|Y|N|N|Y|   |<xref:System.DateTime>|N|N|N|Y<sup>1</sup>|N|   |<xref:System.Decimal>|N|N|Y|Y|Y|       (1) Specifying the scale on a DateTime type will cause the value to be returned to Transact-SQL as a DateTime2 type with the specified scale.","needQuote":false,"needEscape":true,"nodes":[{"content":"SqlFacetAttribute may only be specified on non-void return values.","pos":[0,66]},{"content":"SqlFacetAttribute is used only to derive information about the return type, and is not intended to be a constraint specification on what can be stored in the type.","pos":[73,236]},{"content":"Thus, if a field has a SqlFacetAttribute indicating its size to be 2 characters, then the SQL Server type of the field access expression is of size 2, but assignments into the field are not restricted by this facet.","pos":[237,452]},{"content":"The table below captures the matrix of valid values for the various properties for specific field types.","pos":[459,563]},{"content":"In this table, \"Y\" indicates that the property is valid, and \"N\" indicates that the property is not valid.","pos":[564,670]},{"content":"The specified SqlFacetAttribute must be compatible with the field type.","pos":[677,748]},{"content":"If the property is not valid, type registration will report an error if the user specifies a non-default value for the property.","pos":[749,877]},{"content":"The maximum values for &lt;xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Precision%2A&gt; and &lt;xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Scale%2A&gt; properties are 38.","pos":[878,1049],"source":" The maximum values for <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Precision%2A> and <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Scale%2A> properties are 38."},{"content":"For the &lt;xref:Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize%2A&gt; property, the value should be in the range of 1-8000 for binary and non-Unicode data, 1-4000 for Unicode data, or -1.","pos":[1050,1238],"source":" For the <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize%2A> property, the value should be in the range of 1-8000 for binary and non-Unicode data, 1-4000 for Unicode data, or -1."},{"content":"All other values are not valid.","pos":[1239,1270]},{"content":"|Type|IsFixedLength|MaxSize|Precision|Scale|IsNullable|   |----------|-------------------|-------------|---------------|-----------|----------------|   |&lt;xref:System.Data.SqlTypes.SqlBoolean&gt;|N|N|N|N|Y|   |&lt;xref:System.Data.SqlTypes.SqlByte&gt;|N|N|N|N|Y|   |&lt;xref:System.Data.SqlTypes.SqlInt16&gt;|N|N|N|N|Y|   |&lt;xref:System.Data.SqlTypes.SqlInt32&gt;|N|N|N|N|Y|   |&lt;xref:System.Data.SqlTypes.SqlInt64&gt;|N|N|N|N|Y|   |&lt;xref:System.Data.SqlTypes.SqlSingle&gt;|N|N|N|N|Y|   |&lt;xref:System.Data.SqlTypes.SqlDouble&gt;|N|N|N|N|Y|   |&lt;xref:System.Data.SqlTypes.SqlDateTime&gt;|N|N|N|N|Y|   |&lt;xref:System.Data.SqlTypes.SqlMoney&gt;|N|N|N|N|Y|   |&lt;xref:System.Data.SqlTypes.SqlGuid&gt;|N|N|N|N|Y|   |&lt;xref:System.Data.SqlTypes.SqlDecimal&gt;|N|N|Y|Y|Y|   |&lt;xref:System.Data.SqlTypes.SqlString&gt;|Y|Y|N|N|Y|   |&lt;xref:System.Data.SqlTypes.SqlBinary&gt;|Y|Y|N|N|Y|   |&lt;xref:System.Data.SqlTypes.SqlXml&gt;|N|N|N|N|Y|   |&lt;xref:System.Data.SqlTypes.SqlBytes&gt;|Y|Y|N|N|Y|   |&lt;xref:System.Data.SqlTypes.SqlChars&gt;|Y|Y|N|N|Y|   |Embedded UDTs|N|N|N|N|Y|   |&lt;xref:System.String&gt;|Y|Y|N|N|Y|   |Byte[]|Y|Y|N|N|Y|   |Char[]|Y|Y|N|N|Y|   |&lt;xref:System.DateTime&gt;|N|N|N|Y<bpt id=\"p1\">&lt;sup&gt;</bpt>1<ept id=\"p1\">&lt;/sup&gt;</ept>|N|   |&lt;xref:System.Decimal&gt;|N|N|Y|Y|Y|       (1) Specifying the scale on a DateTime type will cause the value to be returned to Transact-SQL as a DateTime2 type with the specified scale.","pos":[1276,2586],"source":"      |Type|IsFixedLength|MaxSize|Precision|Scale|IsNullable|   |----------|-------------------|-------------|---------------|-----------|----------------|   |<xref:System.Data.SqlTypes.SqlBoolean>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlByte>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlInt16>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlInt32>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlInt64>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlSingle>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlDouble>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlDateTime>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlMoney>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlGuid>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlDecimal>|N|N|Y|Y|Y|   |<xref:System.Data.SqlTypes.SqlString>|Y|Y|N|N|Y|   |<xref:System.Data.SqlTypes.SqlBinary>|Y|Y|N|N|Y|   |<xref:System.Data.SqlTypes.SqlXml>|N|N|N|N|Y|   |<xref:System.Data.SqlTypes.SqlBytes>|Y|Y|N|N|Y|   |<xref:System.Data.SqlTypes.SqlChars>|Y|Y|N|N|Y|   |Embedded UDTs|N|N|N|N|Y|   |<xref:System.String>|Y|Y|N|N|Y|   |Byte[]|Y|Y|N|N|Y|   |Char[]|Y|Y|N|N|Y|   |<xref:System.DateTime>|N|N|N|Y<sup>1</sup>|N|   |<xref:System.Decimal>|N|N|Y|Y|Y|       (1) Specifying the scale on a DateTime type will cause the value to be returned to Transact-SQL as a DateTime2 type with the specified scale."}]},{"pos":[4184,4346],"content":"An optional attribute on a user-defined type (UDT) return type, used to annotate the returned result with additional information that can be used in Transact-SQL.","needQuote":true,"needEscape":true,"nodes":[{"content":"An optional attribute on a user-defined type (UDT) return type, used to annotate the returned result with additional information that can be used in Transact-SQL.","pos":[0,162]}]},{"pos":[4922,5002],"content":"Indicates whether the return type of the user-defined type is of a fixed length.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether the return type of the user-defined type is of a fixed length.","pos":[0,80]}]},{"pos":[5015,5181],"content":"This property must be set to `false` if the <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize%2A> property is set to 1.       The default value is `false`.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property must be set to <ph id=\"ph1\">`false`</ph> if the &lt;xref:Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize%2A&gt; property is set to 1.","pos":[0,128],"source":"This property must be set to `false` if the <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize%2A> property is set to 1."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[135,164],"source":"       The default value is `false`."}]},{"pos":[5304,5479],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the return type is of a fixed length; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the return type is of a fixed length; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5977,6104],"content":"Indicates whether the return type of the user-defined type can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Indicates whether the return type of the user-defined type can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6116,6144],"content":"The default value is <ph id=\"ph1\">`true`</ph>.","needQuote":true,"needEscape":true,"source":"The default value is `true`."},{"pos":[6263,6510],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the return type of the user-defined type can be <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the return type of the user-defined type can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6990,7080],"content":"The maximum size, in logical units, of the underlying field type of the user-defined type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in logical units, of the underlying field type of the user-defined type.","pos":[0,90]}]},{"pos":[7093,7461],"content":"Logical unit is bytes (with a maximum size of 8000) for the binary and non-Unicode data types, and the number of Unicode characters (with a maximum size of 4000) for the character field types.       The value -1 is reserved for large character and binary types.       The default value is 4000 for Unicode character types and 8000 for binary and non-Unicode types.","needQuote":false,"needEscape":true,"nodes":[{"content":"Logical unit is bytes (with a maximum size of 8000) for the binary and non-Unicode data types, and the number of Unicode characters (with a maximum size of 4000) for the character field types.       The value -1 is reserved for large character and binary types.       The default value is 4000 for Unicode character types and 8000 for binary and non-Unicode types.","pos":[0,364],"nodes":[{"content":"Logical unit is bytes (with a maximum size of 8000) for the binary and non-Unicode data types, and the number of Unicode characters (with a maximum size of 4000) for the character field types.","pos":[0,192]},{"content":"The value -1 is reserved for large character and binary types.","pos":[199,261]},{"content":"The default value is 4000 for Unicode character types and 8000 for binary and non-Unicode types.","pos":[268,364]}]}]},{"pos":[7575,7676],"content":"An <xref:System.Int32> representing the maximum size, in logical units, of the underlying field type.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; representing the maximum size, in logical units, of the underlying field type.","pos":[0,101],"source":"An <xref:System.Int32> representing the maximum size, in logical units, of the underlying field type."}]},{"pos":[8163,8221],"content":"The precision of the return type of the user-defined type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The precision of the return type of the user-defined type.","pos":[0,58]}]},{"pos":[8234,8507],"content":"The Precision property is valid only for numeric types. The <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Scale%2A> property must also be specified when setting the Precision property.       The maximum value of the Precision property is 38; the default value is 38.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Precision property is valid only for numeric types. The <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Scale%2A> property must also be specified when setting the Precision property.       The maximum value of the Precision property is 38; the default value is 38.","pos":[0,271],"nodes":[{"content":"The Precision property is valid only for numeric types.","pos":[0,55]},{"content":"The &lt;xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Scale%2A&gt; property must also be specified when setting the Precision property.","pos":[56,189],"source":" The <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Scale%2A> property must also be specified when setting the Precision property."},{"content":"The maximum value of the Precision property is 38; the default value is 38.","pos":[196,271]}]}]},{"pos":[8623,8692],"content":"An <xref:System.Int32> representing the precision of the return type.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; representing the precision of the return type.","pos":[0,69],"source":"An <xref:System.Int32> representing the precision of the return type."}]},{"pos":[9161,9215],"content":"The scale of the return type of the user-defined type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scale of the return type of the user-defined type.","pos":[0,54]}]},{"pos":[9228,9492],"content":"The Scale property is valid only for decimal types. The <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Precision%2A> property must also be specified when setting the Scale property.       The maximum value of the Scale property is 38; the default value is 0.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Scale property is valid only for decimal types. The <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Precision%2A> property must also be specified when setting the Scale property.       The maximum value of the Scale property is 38; the default value is 0.","pos":[0,262],"nodes":[{"content":"The Scale property is valid only for decimal types.","pos":[0,51]},{"content":"The &lt;xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Precision%2A&gt; property must also be specified when setting the Scale property.","pos":[52,185],"source":" The <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Precision%2A> property must also be specified when setting the Scale property."},{"content":"The maximum value of the Scale property is 38; the default value is 0.","pos":[192,262]}]}]},{"pos":[9604,9669],"content":"An <xref:System.Int32> representing the scale of the return type.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; representing the scale of the return type.","pos":[0,65],"source":"An <xref:System.Int32> representing the scale of the return type."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute\n  id: SqlFacetAttribute\n  children:\n  - Microsoft.SqlServer.Server.SqlFacetAttribute.#ctor\n  - Microsoft.SqlServer.Server.SqlFacetAttribute.IsFixedLength\n  - Microsoft.SqlServer.Server.SqlFacetAttribute.IsNullable\n  - Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize\n  - Microsoft.SqlServer.Server.SqlFacetAttribute.Precision\n  - Microsoft.SqlServer.Server.SqlFacetAttribute.Scale\n  langs:\n  - csharp\n  name: SqlFacetAttribute\n  nameWithType: SqlFacetAttribute\n  fullName: Microsoft.SqlServer.Server.SqlFacetAttribute\n  type: Class\n  summary: Annotates the returned result of a user-defined type (UDT) with additional information that can be used in Transact-SQL.\n  remarks: \"SqlFacetAttribute may only be specified on non-void return values.  \\n  \\n SqlFacetAttribute is used only to derive information about the return type, and is not intended to be a constraint specification on what can be stored in the type. Thus, if a field has a SqlFacetAttribute indicating its size to be 2 characters, then the SQL Server type of the field access expression is of size 2, but assignments into the field are not restricted by this facet.  \\n  \\n The table below captures the matrix of valid values for the various properties for specific field types. In this table, \\\"Y\\\" indicates that the property is valid, and \\\"N\\\" indicates that the property is not valid.  \\n  \\n The specified SqlFacetAttribute must be compatible with the field type. If the property is not valid, type registration will report an error if the user specifies a non-default value for the property. The maximum values for <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Precision%2A> and <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Scale%2A> properties are 38. For the <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize%2A> property, the value should be in the range of 1-8000 for binary and non-Unicode data, 1-4000 for Unicode data, or -1. All other values are not valid.  \\n  \\n|Type|IsFixedLength|MaxSize|Precision|Scale|IsNullable|  \\n|----------|-------------------|-------------|---------------|-----------|----------------|  \\n|<xref:System.Data.SqlTypes.SqlBoolean>|N|N|N|N|Y|  \\n|<xref:System.Data.SqlTypes.SqlByte>|N|N|N|N|Y|  \\n|<xref:System.Data.SqlTypes.SqlInt16>|N|N|N|N|Y|  \\n|<xref:System.Data.SqlTypes.SqlInt32>|N|N|N|N|Y|  \\n|<xref:System.Data.SqlTypes.SqlInt64>|N|N|N|N|Y|  \\n|<xref:System.Data.SqlTypes.SqlSingle>|N|N|N|N|Y|  \\n|<xref:System.Data.SqlTypes.SqlDouble>|N|N|N|N|Y|  \\n|<xref:System.Data.SqlTypes.SqlDateTime>|N|N|N|N|Y|  \\n|<xref:System.Data.SqlTypes.SqlMoney>|N|N|N|N|Y|  \\n|<xref:System.Data.SqlTypes.SqlGuid>|N|N|N|N|Y|  \\n|<xref:System.Data.SqlTypes.SqlDecimal>|N|N|Y|Y|Y|  \\n|<xref:System.Data.SqlTypes.SqlString>|Y|Y|N|N|Y|  \\n|<xref:System.Data.SqlTypes.SqlBinary>|Y|Y|N|N|Y|  \\n|<xref:System.Data.SqlTypes.SqlXml>|N|N|N|N|Y|  \\n|<xref:System.Data.SqlTypes.SqlBytes>|Y|Y|N|N|Y|  \\n|<xref:System.Data.SqlTypes.SqlChars>|Y|Y|N|N|Y|  \\n|Embedded UDTs|N|N|N|N|Y|  \\n|<xref:System.String>|Y|Y|N|N|Y|  \\n|Byte[]|Y|Y|N|N|Y|  \\n|Char[]|Y|Y|N|N|Y|  \\n|<xref:System.DateTime>|N|N|N|Y<sup>1</sup>|N|  \\n|<xref:System.Decimal>|N|N|Y|Y|Y|  \\n  \\n (1) Specifying the scale on a DateTime type will cause the value to be returned to Transact-SQL as a DateTime2 type with the specified scale.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=false, Inherited=false)]\n\n      public class SqlFacetAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.#ctor\n  id: '#ctor'\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  langs:\n  - csharp\n  name: SqlFacetAttribute()\n  nameWithType: SqlFacetAttribute.SqlFacetAttribute()\n  fullName: Microsoft.SqlServer.Server.SqlFacetAttribute.SqlFacetAttribute()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: An optional attribute on a user-defined type (UDT) return type, used to annotate the returned result with additional information that can be used in Transact-SQL.\n  syntax:\n    content: public SqlFacetAttribute ();\n    parameters: []\n  overload: Microsoft.SqlServer.Server.SqlFacetAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.IsFixedLength\n  id: IsFixedLength\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  langs:\n  - csharp\n  name: IsFixedLength\n  nameWithType: SqlFacetAttribute.IsFixedLength\n  fullName: Microsoft.SqlServer.Server.SqlFacetAttribute.IsFixedLength\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Indicates whether the return type of the user-defined type is of a fixed length.\n  remarks: \"This property must be set to `false` if the <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize%2A> property is set to 1.  \\n  \\n The default value is `false`.\"\n  syntax:\n    content: public bool IsFixedLength { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the return type is of a fixed length; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.SqlServer.Server.SqlFacetAttribute.IsFixedLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.IsNullable\n  id: IsNullable\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  langs:\n  - csharp\n  name: IsNullable\n  nameWithType: SqlFacetAttribute.IsNullable\n  fullName: Microsoft.SqlServer.Server.SqlFacetAttribute.IsNullable\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Indicates whether the return type of the user-defined type can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  remarks: The default value is `true`.\n  syntax:\n    content: public bool IsNullable { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the return type of the user-defined type can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.SqlServer.Server.SqlFacetAttribute.IsNullable*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize\n  id: MaxSize\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  langs:\n  - csharp\n  name: MaxSize\n  nameWithType: SqlFacetAttribute.MaxSize\n  fullName: Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The maximum size, in logical units, of the underlying field type of the user-defined type.\n  remarks: \"Logical unit is bytes (with a maximum size of 8000) for the binary and non-Unicode data types, and the number of Unicode characters (with a maximum size of 4000) for the character field types.  \\n  \\n The value -1 is reserved for large character and binary types.  \\n  \\n The default value is 4000 for Unicode character types and 8000 for binary and non-Unicode types.\"\n  syntax:\n    content: public int MaxSize { get; set; }\n    return:\n      type: System.Int32\n      description: An <xref:System.Int32> representing the maximum size, in logical units, of the underlying field type.\n  overload: Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.Precision\n  id: Precision\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  langs:\n  - csharp\n  name: Precision\n  nameWithType: SqlFacetAttribute.Precision\n  fullName: Microsoft.SqlServer.Server.SqlFacetAttribute.Precision\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The precision of the return type of the user-defined type.\n  remarks: \"The Precision property is valid only for numeric types. The <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Scale%2A> property must also be specified when setting the Precision property.  \\n  \\n The maximum value of the Precision property is 38; the default value is 38.\"\n  syntax:\n    content: public int Precision { get; set; }\n    return:\n      type: System.Int32\n      description: An <xref:System.Int32> representing the precision of the return type.\n  overload: Microsoft.SqlServer.Server.SqlFacetAttribute.Precision*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.Scale\n  id: Scale\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  langs:\n  - csharp\n  name: Scale\n  nameWithType: SqlFacetAttribute.Scale\n  fullName: Microsoft.SqlServer.Server.SqlFacetAttribute.Scale\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The scale of the return type of the user-defined type.\n  remarks: \"The Scale property is valid only for decimal types. The <xref:Microsoft.SqlServer.Server.SqlFacetAttribute.Precision%2A> property must also be specified when setting the Scale property.  \\n  \\n The maximum value of the Scale property is 38; the default value is 0.\"\n  syntax:\n    content: public int Scale { get; set; }\n    return:\n      type: System.Int32\n      description: An <xref:System.Int32> representing the scale of the return type.\n  overload: Microsoft.SqlServer.Server.SqlFacetAttribute.Scale*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.#ctor\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  isExternal: false\n  name: SqlFacetAttribute()\n  nameWithType: SqlFacetAttribute.SqlFacetAttribute()\n  fullName: Microsoft.SqlServer.Server.SqlFacetAttribute.SqlFacetAttribute()\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.IsFixedLength\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  isExternal: false\n  name: IsFixedLength\n  nameWithType: SqlFacetAttribute.IsFixedLength\n  fullName: Microsoft.SqlServer.Server.SqlFacetAttribute.IsFixedLength\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.IsNullable\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  isExternal: false\n  name: IsNullable\n  nameWithType: SqlFacetAttribute.IsNullable\n  fullName: Microsoft.SqlServer.Server.SqlFacetAttribute.IsNullable\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  isExternal: false\n  name: MaxSize\n  nameWithType: SqlFacetAttribute.MaxSize\n  fullName: Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.Precision\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  isExternal: false\n  name: Precision\n  nameWithType: SqlFacetAttribute.Precision\n  fullName: Microsoft.SqlServer.Server.SqlFacetAttribute.Precision\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.Scale\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  isExternal: false\n  name: Scale\n  nameWithType: SqlFacetAttribute.Scale\n  fullName: Microsoft.SqlServer.Server.SqlFacetAttribute.Scale\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.#ctor*\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  isExternal: false\n  name: SqlFacetAttribute\n  nameWithType: SqlFacetAttribute.SqlFacetAttribute\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.IsFixedLength*\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  isExternal: false\n  name: IsFixedLength\n  nameWithType: SqlFacetAttribute.IsFixedLength\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.IsNullable*\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  isExternal: false\n  name: IsNullable\n  nameWithType: SqlFacetAttribute.IsNullable\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize*\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  isExternal: false\n  name: MaxSize\n  nameWithType: SqlFacetAttribute.MaxSize\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.Precision*\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  isExternal: false\n  name: Precision\n  nameWithType: SqlFacetAttribute.Precision\n- uid: Microsoft.SqlServer.Server.SqlFacetAttribute.Scale*\n  parent: Microsoft.SqlServer.Server.SqlFacetAttribute\n  isExternal: false\n  name: Scale\n  nameWithType: SqlFacetAttribute.Scale\n"}