{"nodes":[{"pos":[363,471],"content":"Represents a service that provides XAML schema context information to type converters and markup extensions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a service that provides XAML schema context information to type converters and markup extensions.","pos":[0,108]}]},{"pos":[484,1852],"content":"The IXamlSchemaContextProvider service provides one property, <xref:System.Xaml.IXamlSchemaContextProvider.SchemaContext%2A>.       Use the IXamlSchemaContextProvider service and its <xref:System.Xaml.IXamlSchemaContextProvider.SchemaContext%2A> property when you need the active XAML schema context from a markup extension or type converter implementation. Many XAML-related operations, most notably resolving a XAML type into its backing type for object graph creation, rely on having an available XAML schema context. However, for many scenarios, you can use the XAML schema context that is provided by a particular framework. Or you can use the default XAML schema context provided by .NET Framework XAML Services, which uses CLR and reflection backing and can provide the necessary XAML schema context for any CLR-defined type.       The IXamlSchemaContextProvider service is mainly relevant for implementations that anticipate that their value converter implementation might be called when it is supported by custom XAML schema contexts. You can get the service from the entry-point parameters of the virtual methods of <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.MarkupExtension> that report service context. Or you can instead get the schema context directly from dedicated properties of specific XAML readers or XAML writers.","needQuote":false,"needEscape":true,"nodes":[{"content":"The IXamlSchemaContextProvider service provides one property, <xref:System.Xaml.IXamlSchemaContextProvider.SchemaContext%2A>.       Use the IXamlSchemaContextProvider service and its <xref:System.Xaml.IXamlSchemaContextProvider.SchemaContext%2A> property when you need the active XAML schema context from a markup extension or type converter implementation. Many XAML-related operations, most notably resolving a XAML type into its backing type for object graph creation, rely on having an available XAML schema context. However, for many scenarios, you can use the XAML schema context that is provided by a particular framework. Or you can use the default XAML schema context provided by .NET Framework XAML Services, which uses CLR and reflection backing and can provide the necessary XAML schema context for any CLR-defined type.       The IXamlSchemaContextProvider service is mainly relevant for implementations that anticipate that their value converter implementation might be called when it is supported by custom XAML schema contexts. You can get the service from the entry-point parameters of the virtual methods of <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.MarkupExtension> that report service context. Or you can instead get the schema context directly from dedicated properties of specific XAML readers or XAML writers.","pos":[0,1364],"nodes":[{"content":"The IXamlSchemaContextProvider service provides one property, &lt;xref:System.Xaml.IXamlSchemaContextProvider.SchemaContext%2A&gt;.","pos":[0,125],"source":"The IXamlSchemaContextProvider service provides one property, <xref:System.Xaml.IXamlSchemaContextProvider.SchemaContext%2A>."},{"content":"Use the IXamlSchemaContextProvider service and its &lt;xref:System.Xaml.IXamlSchemaContextProvider.SchemaContext%2A&gt; property when you need the active XAML schema context from a markup extension or type converter implementation.","pos":[132,357],"source":"       Use the IXamlSchemaContextProvider service and its <xref:System.Xaml.IXamlSchemaContextProvider.SchemaContext%2A> property when you need the active XAML schema context from a markup extension or type converter implementation."},{"content":"Many XAML-related operations, most notably resolving a XAML type into its backing type for object graph creation, rely on having an available XAML schema context.","pos":[358,520]},{"content":"However, for many scenarios, you can use the XAML schema context that is provided by a particular framework.","pos":[521,629]},{"content":"Or you can use the default XAML schema context provided by .NET Framework XAML Services, which uses CLR and reflection backing and can provide the necessary XAML schema context for any CLR-defined type.","pos":[630,832]},{"content":"The IXamlSchemaContextProvider service is mainly relevant for implementations that anticipate that their value converter implementation might be called when it is supported by custom XAML schema contexts.","pos":[839,1043]},{"content":"You can get the service from the entry-point parameters of the virtual methods of &lt;xref:System.ComponentModel.TypeConverter&gt; or &lt;xref:System.Windows.Markup.MarkupExtension&gt; that report service context.","pos":[1044,1245],"source":" You can get the service from the entry-point parameters of the virtual methods of <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.MarkupExtension> that report service context."},{"content":"Or you can instead get the schema context directly from dedicated properties of specific XAML readers or XAML writers.","pos":[1246,1364]}]}]},{"pos":[2337,2437],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is reported by the service context.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Xaml.XamlSchemaContext\"></xref> that is reported by the service context."},{"pos":[2449,2624],"content":"Use the returned <xref:System.Xaml.XamlSchemaContext> for operations such as obtaining lists of all the types in an assembly or for obtaining specifics about assembly mapping.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the returned &lt;xref:System.Xaml.XamlSchemaContext&gt; for operations such as obtaining lists of all the types in an assembly or for obtaining specifics about assembly mapping.","pos":[0,175],"source":"Use the returned <xref:System.Xaml.XamlSchemaContext> for operations such as obtaining lists of all the types in an assembly or for obtaining specifics about assembly mapping."}]},{"pos":[2781,2845],"content":"The XAML schema context that is reported by the service context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XAML schema context that is reported by the service context.","pos":[0,64]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xaml.IXamlSchemaContextProvider\n  id: IXamlSchemaContextProvider\n  children:\n  - System.Xaml.IXamlSchemaContextProvider.SchemaContext\n  langs:\n  - csharp\n  name: IXamlSchemaContextProvider\n  nameWithType: IXamlSchemaContextProvider\n  fullName: System.Xaml.IXamlSchemaContextProvider\n  type: Interface\n  summary: Represents a service that provides XAML schema context information to type converters and markup extensions.\n  remarks: \"The IXamlSchemaContextProvider service provides one property, <xref:System.Xaml.IXamlSchemaContextProvider.SchemaContext%2A>.  \\n  \\n Use the IXamlSchemaContextProvider service and its <xref:System.Xaml.IXamlSchemaContextProvider.SchemaContext%2A> property when you need the active XAML schema context from a markup extension or type converter implementation. Many XAML-related operations, most notably resolving a XAML type into its backing type for object graph creation, rely on having an available XAML schema context. However, for many scenarios, you can use the XAML schema context that is provided by a particular framework. Or you can use the default XAML schema context provided by .NET Framework XAML Services, which uses CLR and reflection backing and can provide the necessary XAML schema context for any CLR-defined type.  \\n  \\n The IXamlSchemaContextProvider service is mainly relevant for implementations that anticipate that their value converter implementation might be called when it is supported by custom XAML schema contexts. You can get the service from the entry-point parameters of the virtual methods of <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.MarkupExtension> that report service context. Or you can instead get the schema context directly from dedicated properties of specific XAML readers or XAML writers.\"\n  syntax:\n    content: public interface IXamlSchemaContextProvider\n  implements: []\n  platform:\n  - net462\n- uid: System.Xaml.IXamlSchemaContextProvider.SchemaContext\n  id: SchemaContext\n  parent: System.Xaml.IXamlSchemaContextProvider\n  langs:\n  - csharp\n  name: SchemaContext\n  nameWithType: IXamlSchemaContextProvider.SchemaContext\n  fullName: System.Xaml.IXamlSchemaContextProvider.SchemaContext\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the <xref href=\"System.Xaml.XamlSchemaContext\"></xref> that is reported by the service context.\n  remarks: Use the returned <xref:System.Xaml.XamlSchemaContext> for operations such as obtaining lists of all the types in an assembly or for obtaining specifics about assembly mapping.\n  syntax:\n    content: public System.Xaml.XamlSchemaContext SchemaContext { get; }\n    return:\n      type: System.Xaml.XamlSchemaContext\n      description: The XAML schema context that is reported by the service context.\n  overload: System.Xaml.IXamlSchemaContextProvider.SchemaContext*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Xaml.IXamlSchemaContextProvider.SchemaContext\n  parent: System.Xaml.IXamlSchemaContextProvider\n  isExternal: false\n  name: SchemaContext\n  nameWithType: IXamlSchemaContextProvider.SchemaContext\n  fullName: System.Xaml.IXamlSchemaContextProvider.SchemaContext\n- uid: System.Xaml.XamlSchemaContext\n  parent: System.Xaml\n  isExternal: false\n  name: XamlSchemaContext\n  nameWithType: XamlSchemaContext\n  fullName: System.Xaml.XamlSchemaContext\n- uid: System.Xaml.IXamlSchemaContextProvider.SchemaContext*\n  parent: System.Xaml.IXamlSchemaContextProvider\n  isExternal: false\n  name: SchemaContext\n  nameWithType: IXamlSchemaContextProvider.SchemaContext\n"}