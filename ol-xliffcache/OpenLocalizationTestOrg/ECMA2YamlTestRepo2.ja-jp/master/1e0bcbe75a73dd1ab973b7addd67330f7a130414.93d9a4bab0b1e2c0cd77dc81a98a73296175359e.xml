{"nodes":[{"pos":[1077,1265],"content":"Represents a <xref uid=\"langword_csharp_&lt;securityTokenHandlers&gt;\" name=\"&lt;securityTokenHandlers&gt;\" href=\"\"></xref> element in a configuration file. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;securityTokenHandlers&amp;gt;\" name=\"&amp;lt;securityTokenHandlers&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element in a configuration file.","pos":[0,156],"source":"Represents a <xref uid=\"langword_csharp_&lt;securityTokenHandlers&gt;\" name=\"&lt;securityTokenHandlers&gt;\" href=\"\"></xref> element in a configuration file."},{"content":"This class cannot be inherited.","pos":[157,188]}]},{"pos":[9730,9864],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\"></xref> class."},{"pos":[10826,10838],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11865,11877],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11935,11947],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13239,13279],"content":"Gets or sets the name of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the collection.","pos":[0,40]}]},{"pos":[13292,13583],"content":"Represents the `name` attribute of the `<securityTokenHandlers>` element.       The only names that the framework handles are \"ActAs\" and \"OnBehalfOf\". If handlers exist in these collections, they will be used instead of the default handlers for processing ActAs and OnBehalfOf tokens.","needQuote":false,"needEscape":true,"nodes":[{"content":"Represents the <ph id=\"ph1\">`name`</ph> attribute of the <ph id=\"ph2\">`&lt;securityTokenHandlers&gt;`</ph> element.","pos":[0,73],"source":"Represents the `name` attribute of the `<securityTokenHandlers>` element."},{"content":"The only names that the framework handles are \"ActAs\" and \"OnBehalfOf\".","pos":[80,151]},{"content":"If handlers exist in these collections, they will be used instead of the default handlers for processing ActAs and OnBehalfOf tokens.","pos":[152,285]}]},{"pos":[13698,13725],"content":"The name of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the collection.","pos":[0,27]}]},{"pos":[14563,14575],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15334,15403],"content":"Gets or sets the default settings for the handlers in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the default settings for the handlers in the collection.","pos":[0,69]}]},{"pos":[15415,15523],"content":"Represents the <ph id=\"ph1\">`&lt;securityTokenHandlerConfiguration&gt;`</ph> child element of the <ph id=\"ph2\">`&lt;securityTokenHandlers&gt;`</ph> element.","needQuote":true,"needEscape":true,"source":"Represents the `<securityTokenHandlerConfiguration>` child element of the `<securityTokenHandlers>` element."},{"pos":[15797,15853],"content":"The default settings for the handlers in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default settings for the handlers in the collection.","pos":[0,56]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  id: SecurityTokenHandlerElementCollection\n  children:\n  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.#ctor\n  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement\n  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init\n  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name\n  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties\n  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n  langs:\n  - csharp\n  name: SecurityTokenHandlerElementCollection\n  nameWithType: SecurityTokenHandlerElementCollection\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  type: Class\n  summary: Represents a <xref uid=\"langword_csharp_&lt;securityTokenHandlers&gt;\" name=\"&lt;securityTokenHandlers&gt;\" href=\"\"></xref> element in a configuration file. This class cannot be inherited.\n  remarks: \"The `<securityTokenHandlers>` element contains the set of security token handlers (<xref:System.IdentityModel.Tokens.SecurityTokenHandler>) that are registered with the endpoint. By default, the collection is populated with <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.RsaSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>, and <xref:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler>.  \\n  \\n In the configuration file, each token handler can have custom configuration as a child element to its `<add>` element. <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler> and <xref:System.IdentityModel.Tokens.MembershipUserNameSecurityTokenHandler> have a pre-defined custom configuration section.  \\n  \\n Security token handler collections can also be named; to be used in certain circumstances. The only names that the framework handles are \\\"ActAs\\\" and \\\"OnBehalfOf\\\". If handlers exist in these collections, they will be used instead of the default handlers for processing ActAs and OnBehalfOf tokens; for example `<securityTokenHandlers name=\\\"ActAs\\\">`. The `name` attribute is represented by the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name%2A> property.  \\n  \\n The `<securityTokenHandlerConfiguration>` child element defines default settings for the handlers in the collection (which can be overridden by the settings defined by individual handlers in the \\\\<add> element). The `<securityTokenHandlerElement>` is represented by the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement> class and is accessed through the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration> property.\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationCollection(typeof(System.IdentityModel.Configuration.CustomTypeElement), CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMap)]\n\n      public sealed class SecurityTokenHandlerElementCollection : System.Configuration.ConfigurationElementCollection\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.Configuration.ConfigurationElementCollection\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.AddElementName\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseClear\n  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseGetAllKeys\n  - System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.ClearElementName\n  - System.Configuration.ConfigurationElementCollection.CollectionType\n  - System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)\n  - System.Configuration.ConfigurationElementCollection.Count\n  - System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)\n  - System.Configuration.ConfigurationElementCollection.ElementName\n  - System.Configuration.ConfigurationElementCollection.EmitClear\n  - System.Configuration.ConfigurationElementCollection.Equals(System.Object)\n  - System.Configuration.ConfigurationElementCollection.GetEnumerator\n  - System.Configuration.ConfigurationElementCollection.GetHashCode\n  - System.Configuration.ConfigurationElementCollection.IsElementName(System.String)\n  - System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.IsModified\n  - System.Configuration.ConfigurationElementCollection.IsReadOnly\n  - System.Configuration.ConfigurationElementCollection.IsSynchronized\n  - System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElementCollection.RemoveElementName\n  - System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.ResetModified\n  - System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.SetReadOnly\n  - System.Configuration.ConfigurationElementCollection.SyncRoot\n  - System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate\n  - System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  langs:\n  - csharp\n  name: SecurityTokenHandlerElementCollection()\n  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerElementCollection()\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerElementCollection()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\"></xref> class.\n  syntax:\n    content: public SecurityTokenHandlerElementCollection ();\n    parameters: []\n  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement\n  id: CreateNewElement\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  langs:\n  - csharp\n  name: CreateNewElement()\n  nameWithType: SecurityTokenHandlerElementCollection.CreateNewElement()\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationElement CreateNewElement ();\n    parameters: []\n    return:\n      type: System.Configuration.ConfigurationElement\n      description: To be added.\n  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  id: GetElementKey(System.Configuration.ConfigurationElement)\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  langs:\n  - csharp\n  name: GetElementKey(ConfigurationElement)\n  nameWithType: SecurityTokenHandlerElementCollection.GetElementKey(ConfigurationElement)\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey(ConfigurationElement)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  syntax:\n    content: protected override object GetElementKey (System.Configuration.ConfigurationElement element);\n    parameters:\n    - id: element\n      type: System.Configuration.ConfigurationElement\n      description: To be added.\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init\n  id: Init\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  langs:\n  - csharp\n  name: Init()\n  nameWithType: SecurityTokenHandlerElementCollection.Init()\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  syntax:\n    content: protected override void Init ();\n    parameters: []\n  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name\n  id: Name\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  langs:\n  - csharp\n  name: Name\n  nameWithType: SecurityTokenHandlerElementCollection.Name\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the name of the collection.\n  remarks: \"Represents the `name` attribute of the `<securityTokenHandlers>` element.  \\n  \\n The only names that the framework handles are \\\"ActAs\\\" and \\\"OnBehalfOf\\\". If handlers exist in these collections, they will be used instead of the default handlers for processing ActAs and OnBehalfOf tokens.\"\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of the collection.\n  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties\n  id: Properties\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: SecurityTokenHandlerElementCollection.Properties\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n  id: SecurityTokenHandlerConfiguration\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  langs:\n  - csharp\n  name: SecurityTokenHandlerConfiguration\n  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the default settings for the handlers in the collection.\n  remarks: Represents the `<securityTokenHandlerConfiguration>` child element of the `<securityTokenHandlers>` element.\n  syntax:\n    content: public System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement SecurityTokenHandlerConfiguration { get; set; }\n    return:\n      type: System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement\n      description: The default settings for the handlers in the collection.\n  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: System.Configuration.ConfigurationElementCollection\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.#ctor\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: SecurityTokenHandlerElementCollection()\n  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerElementCollection()\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerElementCollection()\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: CreateNewElement()\n  nameWithType: SecurityTokenHandlerElementCollection.CreateNewElement()\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement()\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: GetElementKey(ConfigurationElement)\n  nameWithType: SecurityTokenHandlerElementCollection.GetElementKey(ConfigurationElement)\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey(ConfigurationElement)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: Init()\n  nameWithType: SecurityTokenHandlerElementCollection.Init()\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init()\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: Name\n  nameWithType: SecurityTokenHandlerElementCollection.Name\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: Properties\n  nameWithType: SecurityTokenHandlerElementCollection.Properties\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: SecurityTokenHandlerConfiguration\n  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement\n  parent: System.IdentityModel.Configuration\n  isExternal: false\n  name: SecurityTokenHandlerConfigurationElement\n  nameWithType: SecurityTokenHandlerConfigurationElement\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.#ctor*\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: SecurityTokenHandlerElementCollection\n  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerElementCollection\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement*\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: CreateNewElement\n  nameWithType: SecurityTokenHandlerElementCollection.CreateNewElement\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey*\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: GetElementKey\n  nameWithType: SecurityTokenHandlerElementCollection.GetElementKey\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init*\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: Init\n  nameWithType: SecurityTokenHandlerElementCollection.Init\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name*\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: Name\n  nameWithType: SecurityTokenHandlerElementCollection.Name\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties*\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: Properties\n  nameWithType: SecurityTokenHandlerElementCollection.Properties\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration*\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: SecurityTokenHandlerConfiguration\n  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n"}