{"nodes":[{"pos":[1702,1856],"content":"Provides the implementation for a server formatter sink that uses the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Provides the implementation for a server formatter sink that uses the <xref href=\"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter\"></xref>."},{"pos":[5719,5731],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5834,5846],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5947,5959],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7183,7266],"content":"Requests processing of the response from a method call that is sent asynchronously.","needQuote":true,"needEscape":true,"nodes":[{"content":"Requests processing of the response from a method call that is sent asynchronously.","pos":[0,83]}]},{"pos":[7680,7747],"content":"A stack of sinks that is leading back to the server transport sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"A stack of sinks that is leading back to the server transport sink.","pos":[0,67]}]},{"pos":[7809,7926],"content":"Information that is associated with the current sink, generated on the request side, and needed on the response side.","needQuote":true,"needEscape":true,"nodes":[{"content":"Information that is associated with the current sink, generated on the request side, and needed on the response side.","pos":[0,117]}]},{"pos":[8015,8036],"content":"The response message.","needQuote":true,"needEscape":true,"nodes":[{"content":"The response message.","pos":[0,21]}]},{"pos":[8137,8208],"content":"The headers to add to the return message that is heading to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"The headers to add to the return message that is heading to the client.","pos":[0,71]}]},{"pos":[8274,8328],"content":"The stream that is heading back to the transport sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"The stream that is heading back to the transport sink.","pos":[0,54]}]},{"pos":[9497,9594],"content":"Returns the <xref:System.IO.Stream> onto which the provided response message is to be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the &lt;xref:System.IO.Stream&gt; onto which the provided response message is to be serialized.","pos":[0,97],"source":"Returns the <xref:System.IO.Stream> onto which the provided response message is to be serialized."}]},{"pos":[9606,9671],"content":"This method is called when a response stream needs to be created.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is called when a response stream needs to be created.","pos":[0,65]}]},{"pos":[10069,10136],"content":"A stack of sinks that is leading back to the server transport sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"A stack of sinks that is leading back to the server transport sink.","pos":[0,67]}]},{"pos":[10198,10315],"content":"Information that is associated with the current sink, generated on the request side, and needed on the response side.","needQuote":true,"needEscape":true,"nodes":[{"content":"Information that is associated with the current sink, generated on the request side, and needed on the response side.","pos":[0,117]}]},{"pos":[10404,10438],"content":"The response message to serialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The response message to serialize.","pos":[0,34]}]},{"pos":[10539,10595],"content":"The headers to put in the response stream to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"The headers to put in the response stream to the client.","pos":[0,56]}]},{"pos":[10656,10745],"content":"The <xref:System.IO.Stream> onto which the provided response message is to be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IO.Stream&gt; onto which the provided response message is to be serialized.","pos":[0,89],"source":"The <xref:System.IO.Stream> onto which the provided response message is to be serialized."}]},{"pos":[11354,11459],"content":"Gets the next <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.IServerChannelSink\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the sink chain.","needQuote":true,"needEscape":true,"source":"Gets the next <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSink\"></xref> in the sink chain."},{"pos":[11662,11762],"content":"The next <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.IServerChannelSink\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the sink chain.","needQuote":true,"needEscape":true,"source":"The next <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSink\"></xref> in the sink chain."},{"pos":[13207,13257],"content":"Requests message processing from the current sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"Requests message processing from the current sink.","pos":[0,50]}]},{"pos":[13270,15549],"content":"The proxy's job is to convert a method call that is invoked on it into a message. The message, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects. Message sinks are chained together, which means that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after the current message sink has finished its work. For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.       When the formatter channel sink gets a message that needs to be sent over the channel, it calls <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, passing the message as a parameter. The formatter sink then creates the transport header array and calls <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> on the formatter sink. This call is forwarded down the sink chain, and any sink can create a request stream that will be passed back to the formatter sink. After this call returns, the message is serialized, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> is called on the first chain in the sink chain, and the message is passed to the channel sinks.       After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink. When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.       When the message gets to the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until the formatter sink is reached. The formatter sink then deserializes the message and forwards it to the remoting infrastructure. Then, the remoting infrastructure turns the message into a method call, and calls the server object.","needQuote":false,"needEscape":true,"nodes":[{"content":"The proxy's job is to convert a method call that is invoked on it into a message. The message, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects. Message sinks are chained together, which means that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after the current message sink has finished its work. For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.       When the formatter channel sink gets a message that needs to be sent over the channel, it calls <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, passing the message as a parameter. The formatter sink then creates the transport header array and calls <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> on the formatter sink. This call is forwarded down the sink chain, and any sink can create a request stream that will be passed back to the formatter sink. After this call returns, the message is serialized, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> is called on the first chain in the sink chain, and the message is passed to the channel sinks.       After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink. When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.       When the message gets to the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until the formatter sink is reached. The formatter sink then deserializes the message and forwards it to the remoting infrastructure. Then, the remoting infrastructure turns the message into a method call, and calls the server object.","pos":[0,2273],"nodes":[{"content":"The proxy's job is to convert a method call that is invoked on it into a message.","pos":[0,81]},{"content":"The message, which implements the &lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt; interface, is passed from the client end to the server end by invoking &lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt; on message sink objects.","pos":[82,338],"source":" The message, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects."},{"content":"Message sinks are chained together, which means that every message sink is responsible for calling &lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt; on the next message sink after the current message sink has finished its work.","pos":[339,593],"source":" Message sinks are chained together, which means that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after the current message sink has finished its work."},{"content":"For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.","pos":[594,738]},{"content":"When the formatter channel sink gets a message that needs to be sent over the channel, it calls &lt;xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A&gt;, passing the message as a parameter.","pos":[745,953],"source":"       When the formatter channel sink gets a message that needs to be sent over the channel, it calls <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, passing the message as a parameter."},{"content":"The formatter sink then creates the transport header array and calls &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A&gt; on the formatter sink.","pos":[954,1124],"source":" The formatter sink then creates the transport header array and calls <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> on the formatter sink."},{"content":"This call is forwarded down the sink chain, and any sink can create a request stream that will be passed back to the formatter sink.","pos":[1125,1257]},{"content":"After this call returns, the message is serialized, &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A&gt; is called on the first chain in the sink chain, and the message is passed to the channel sinks.","pos":[1258,1482],"source":" After this call returns, the message is serialized, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> is called on the first chain in the sink chain, and the message is passed to the channel sinks."},{"content":"After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink.","pos":[1489,1679]},{"content":"When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.","pos":[1680,1868]},{"content":"When the message gets to the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until the formatter sink is reached.","pos":[1875,2075]},{"content":"The formatter sink then deserializes the message and forwards it to the remoting infrastructure.","pos":[2076,2172]},{"content":"Then, the remoting infrastructure turns the message into a method call, and calls the server object.","pos":[2173,2273]}]}]},{"pos":[16163,16217],"content":"A stack of channel sinks that called the current sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"A stack of channel sinks that called the current sink.","pos":[0,54]}]},{"pos":[16313,16351],"content":"The message that contains the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message that contains the request.","pos":[0,38]}]},{"pos":[16459,16528],"content":"Headers that are retrieved from the incoming message from the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Headers that are retrieved from the incoming message from the client.","pos":[0,69]}]},{"pos":[16601,16681],"content":"The stream that needs to be processed and passed on to the deserialization sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"The stream that needs to be processed and passed on to the deserialization sink.","pos":[0,80]}]},{"pos":[16778,16951],"content":"When this method returns, contains a <xref href=\"System.Runtime.Remoting.Messaging.IMessage\"></xref> that holds the response message. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.IMessage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that holds the response message.","pos":[0,133],"source":"When this method returns, contains a <xref href=\"System.Runtime.Remoting.Messaging.IMessage\"></xref> that holds the response message."},{"content":"This parameter is passed uninitialized.","pos":[134,173]}]},{"pos":[17060,17291],"content":"When this method returns, contains a <xref href=\"System.Runtime.Remoting.Channels.ITransportHeaders\"></xref> that holds the headers to add to the return message that is heading to the client. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.ITransportHeaders\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that holds the headers to add to the return message that is heading to the client.","pos":[0,191],"source":"When this method returns, contains a <xref href=\"System.Runtime.Remoting.Channels.ITransportHeaders\"></xref> that holds the headers to add to the return message that is heading to the client."},{"content":"This parameter is passed uninitialized.","pos":[192,231]}]},{"pos":[17365,17504],"content":"When this method returns, contains a <xref:System.IO.Stream> that is heading to the transport sink. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a <xref:System.IO.Stream> that is heading to the transport sink. This parameter is passed uninitialized.","pos":[0,139],"nodes":[{"content":"When this method returns, contains a &lt;xref:System.IO.Stream&gt; that is heading to the transport sink.","pos":[0,99],"source":"When this method returns, contains a <xref:System.IO.Stream> that is heading to the transport sink."},{"content":"This parameter is passed uninitialized.","pos":[100,139]}]}]},{"pos":[17598,17746],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.ServerProcessing\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> status value that provides information about how the message was processed.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Runtime.Remoting.Channels.ServerProcessing\"></xref> status value that provides information about how the message was processed."},{"pos":[18327,18415],"content":"Gets a <xref:System.Collections.IDictionary> of properties for the current channel sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a &lt;xref:System.Collections.IDictionary&gt; of properties for the current channel sink.","pos":[0,88],"source":"Gets a <xref:System.Collections.IDictionary> of properties for the current channel sink."}]},{"pos":[18427,18591],"content":"For more information, see <bpt id=\"p1\">[</bpt>&amp;#91;<ph id=\"ph1\">\\&lt;</ph>topic://cpconchannelformatterconfigurationproperties&gt;&amp;#93;<ept id=\"p1\">](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)</ept>.","needQuote":true,"needEscape":true,"source":"For more information, see [&#91;\\<topic://cpconchannelformatterconfigurationproperties>&#93;](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)."},{"pos":[18747,18830],"content":"A <xref:System.Collections.IDictionary> of properties for the current channel sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Collections.IDictionary&gt; of properties for the current channel sink.","pos":[0,83],"source":"A <xref:System.Collections.IDictionary> of properties for the current channel sink."}]},{"pos":[19432,19688],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_TypeFilterLevel\" name=\"TypeFilterLevel\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value of automatic deserialization that the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_BinaryServerFormatterSink\" name=\"BinaryServerFormatterSink\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> performs.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref uid=\"langword_csharp_TypeFilterLevel\" name=\"TypeFilterLevel\" href=\"\"></xref> value of automatic deserialization that the <xref uid=\"langword_csharp_BinaryServerFormatterSink\" name=\"BinaryServerFormatterSink\" href=\"\"></xref> performs."},{"pos":[19700,19914],"content":"Supported values are `Low` (the default) and `Full`. For details about deserialization levels, see [Automatic Deserialization in .NET Remoting](http://msdn.microsoft.com/en-us/313a0e88-5b2b-4a17-8391-0ddf9f7a787b).","needQuote":true,"needEscape":true,"nodes":[{"content":"Supported values are <ph id=\"ph1\">`Low`</ph> (the default) and <ph id=\"ph2\">`Full`</ph>.","pos":[0,52],"source":"Supported values are `Low` (the default) and `Full`."},{"content":"For details about deserialization levels, see <bpt id=\"p1\">[</bpt>Automatic Deserialization in .NET Remoting<ept id=\"p1\">](http://msdn.microsoft.com/en-us/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)</ept>.","pos":[53,214],"source":" For details about deserialization levels, see [Automatic Deserialization in .NET Remoting](http://msdn.microsoft.com/en-us/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)."}]},{"pos":[20130,20277],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_TypeFilterLevel\" name=\"TypeFilterLevel\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the current automatic deserialization level.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_TypeFilterLevel\" name=\"TypeFilterLevel\" href=\"\"></xref> that represents the current automatic deserialization level."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  id: BinaryServerFormatterSink\n  children:\n  - System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)\n  - System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  - System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  - System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink\n  - System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)\n  - System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties\n  - System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel\n  langs:\n  - csharp\n  name: BinaryServerFormatterSink\n  nameWithType: BinaryServerFormatterSink\n  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  type: Class\n  summary: Provides the implementation for a server formatter sink that uses the <xref href=\"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter\"></xref>.\n  remarks: \"The request stream propagates from the server transport sink through the server channel sinks until it reaches the appropriate formatter sink. The formatter sink deserializes the message and passes it through the pipeline. A special dispatch sink is inserted at the end of the channel sink chain by the <xref:System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain%2A?displayProperty=fullName> method, which is called by server channels to create the server channel sink chains. When the message reaches the dispatch sink, the dispatch sink passes the message to the remoting infrastructure.  \\n  \\n The following table shows the sink configuration properties that can be specified for the current sink provider.  \\n  \\n|Property|Description|  \\n|--------------|-----------------|  \\n|`includeVersions`|Specifies whether the formatter will include versioning information. Values `true` or `false`.|  \\n|`strictBinding`|Indicates that a receiving formatter will first try to identify the type using complete version information if it exists before using only the type name and assembly name without version information. Values `true` or `false`. The default for both system-provided formatters is `false`.|  \\n|`typeFilterLevel`|A string value that specifies the level of automatic deserialization that a server channel attempts. Supported values are `Low` (the default) and `Full`. For details about deserialization levels, see [&#91;\\\\<topic://cpconAutomaticDeserializationInNETRemoting>&#93;](http://msdn.microsoft.com/en-us/313a0e88-5b2b-4a17-8391-0ddf9f7a787b).<br /><br /> This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, and Windows Server 2003 family.|  \\n  \\n> [!IMPORTANT]\\n>  Using an instance of this object with untrusted data or across an unsecure channel is a security risk. Use this object only with trusted data and across a secure channel. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).\"\n  syntax:\n    content: 'public class BinaryServerFormatterSink : System.Runtime.Remoting.Channels.IServerChannelSink'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.Remoting.Channels.IServerChannelSink\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)\n  id: '#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)'\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  langs:\n  - csharp\n  name: BinaryServerFormatterSink(BinaryServerFormatterSink+Protocol,IServerChannelSink,IChannelReceiver)\n  nameWithType: BinaryServerFormatterSink.BinaryServerFormatterSink(BinaryServerFormatterSink+Protocol,IServerChannelSink,IChannelReceiver)\n  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.BinaryServerFormatterSink(BinaryServerFormatterSink+Protocol,IServerChannelSink,IChannelReceiver)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels\n  syntax:\n    content: public BinaryServerFormatterSink (System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol protocol, System.Runtime.Remoting.Channels.IServerChannelSink nextSink, System.Runtime.Remoting.Channels.IChannelReceiver receiver);\n    parameters:\n    - id: protocol\n      type: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol\n      description: To be added.\n    - id: nextSink\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: To be added.\n    - id: receiver\n      type: System.Runtime.Remoting.Channels.IChannelReceiver\n      description: To be added.\n  overload: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  id: AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  langs:\n  - csharp\n  name: AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)\n  nameWithType: BinaryServerFormatterSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)\n  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels\n  summary: Requests processing of the response from a method call that is sent asynchronously.\n  syntax:\n    content: public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);\n    parameters:\n    - id: sinkStack\n      type: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack\n      description: A stack of sinks that is leading back to the server transport sink.\n    - id: state\n      type: System.Object\n      description: Information that is associated with the current sink, generated on the request side, and needed on the response side.\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: The response message.\n    - id: headers\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: The headers to add to the return message that is heading to the client.\n    - id: stream\n      type: System.IO.Stream\n      description: The stream that is heading back to the transport sink.\n  overload: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  id: GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  langs:\n  - csharp\n  name: GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)\n  nameWithType: BinaryServerFormatterSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)\n  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels\n  summary: Returns the <xref:System.IO.Stream> onto which the provided response message is to be serialized.\n  remarks: This method is called when a response stream needs to be created.\n  syntax:\n    content: public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);\n    parameters:\n    - id: sinkStack\n      type: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack\n      description: A stack of sinks that is leading back to the server transport sink.\n    - id: state\n      type: System.Object\n      description: Information that is associated with the current sink, generated on the request side, and needed on the response side.\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: The response message to serialize.\n    - id: headers\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: The headers to put in the response stream to the client.\n    return:\n      type: System.IO.Stream\n      description: The <xref:System.IO.Stream> onto which the provided response message is to be serialized.\n  overload: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink\n  id: NextChannelSink\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  langs:\n  - csharp\n  name: NextChannelSink\n  nameWithType: BinaryServerFormatterSink.NextChannelSink\n  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink\n  type: Property\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels\n  summary: Gets the next <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSink\"></xref> in the sink chain.\n  syntax:\n    content: public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }\n    return:\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: The next <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSink\"></xref> in the sink chain.\n  overload: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)\n  id: ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  langs:\n  - csharp\n  name: ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)\n  nameWithType: BinaryServerFormatterSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)\n  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels\n  summary: Requests message processing from the current sink.\n  remarks: \"The proxy's job is to convert a method call that is invoked on it into a message. The message, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects. Message sinks are chained together, which means that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after the current message sink has finished its work. For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.  \\n  \\n When the formatter channel sink gets a message that needs to be sent over the channel, it calls <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, passing the message as a parameter. The formatter sink then creates the transport header array and calls <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> on the formatter sink. This call is forwarded down the sink chain, and any sink can create a request stream that will be passed back to the formatter sink. After this call returns, the message is serialized, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> is called on the first chain in the sink chain, and the message is passed to the channel sinks.  \\n  \\n After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink. When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.  \\n  \\n When the message gets to the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until the formatter sink is reached. The formatter sink then deserializes the message and forwards it to the remoting infrastructure. Then, the remoting infrastructure turns the message into a method call, and calls the server object.\"\n  syntax:\n    content: public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);\n    parameters:\n    - id: sinkStack\n      type: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n      description: A stack of channel sinks that called the current sink.\n    - id: requestMsg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: The message that contains the request.\n    - id: requestHeaders\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: Headers that are retrieved from the incoming message from the client.\n    - id: requestStream\n      type: System.IO.Stream\n      description: The stream that needs to be processed and passed on to the deserialization sink.\n    - id: responseMsg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: When this method returns, contains a <xref href=\"System.Runtime.Remoting.Messaging.IMessage\"></xref> that holds the response message. This parameter is passed uninitialized.\n    - id: responseHeaders\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: When this method returns, contains a <xref href=\"System.Runtime.Remoting.Channels.ITransportHeaders\"></xref> that holds the headers to add to the return message that is heading to the client. This parameter is passed uninitialized.\n    - id: responseStream\n      type: System.IO.Stream\n      description: When this method returns, contains a <xref:System.IO.Stream> that is heading to the transport sink. This parameter is passed uninitialized.\n    return:\n      type: System.Runtime.Remoting.Channels.ServerProcessing\n      description: A <xref href=\"System.Runtime.Remoting.Channels.ServerProcessing\"></xref> status value that provides information about how the message was processed.\n  overload: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties\n  id: Properties\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: BinaryServerFormatterSink.Properties\n  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties\n  type: Property\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels\n  summary: Gets a <xref:System.Collections.IDictionary> of properties for the current channel sink.\n  remarks: For more information, see [&#91;\\<topic://cpconchannelformatterconfigurationproperties>&#93;](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).\n  syntax:\n    content: public System.Collections.IDictionary Properties { get; }\n    return:\n      type: System.Collections.IDictionary\n      description: A <xref:System.Collections.IDictionary> of properties for the current channel sink.\n  overload: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel\n  id: TypeFilterLevel\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  langs:\n  - csharp\n  name: TypeFilterLevel\n  nameWithType: BinaryServerFormatterSink.TypeFilterLevel\n  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel\n  type: Property\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels\n  summary: Gets or sets the <xref uid=\"langword_csharp_TypeFilterLevel\" name=\"TypeFilterLevel\" href=\"\"></xref> value of automatic deserialization that the <xref uid=\"langword_csharp_BinaryServerFormatterSink\" name=\"BinaryServerFormatterSink\" href=\"\"></xref> performs.\n  remarks: Supported values are `Low` (the default) and `Full`. For details about deserialization levels, see [Automatic Deserialization in .NET Remoting](http://msdn.microsoft.com/en-us/313a0e88-5b2b-4a17-8391-0ddf9f7a787b).\n  syntax:\n    content: public System.Runtime.Serialization.Formatters.TypeFilterLevel TypeFilterLevel { get; set; }\n    return:\n      type: System.Runtime.Serialization.Formatters.TypeFilterLevel\n      description: The <xref uid=\"langword_csharp_TypeFilterLevel\" name=\"TypeFilterLevel\" href=\"\"></xref> that represents the current automatic deserialization level.\n  overload: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  isExternal: false\n  name: BinaryServerFormatterSink(BinaryServerFormatterSink+Protocol,IServerChannelSink,IChannelReceiver)\n  nameWithType: BinaryServerFormatterSink.BinaryServerFormatterSink(BinaryServerFormatterSink+Protocol,IServerChannelSink,IChannelReceiver)\n  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.BinaryServerFormatterSink(BinaryServerFormatterSink+Protocol,IServerChannelSink,IChannelReceiver)\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: BinaryServerFormatterSink+Protocol\n  nameWithType: BinaryServerFormatterSink+Protocol\n  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink+Protocol\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IServerChannelSink\n  nameWithType: IServerChannelSink\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSink\n- uid: System.Runtime.Remoting.Channels.IChannelReceiver\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IChannelReceiver\n  nameWithType: IChannelReceiver\n  fullName: System.Runtime.Remoting.Channels.IChannelReceiver\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  isExternal: false\n  name: AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)\n  nameWithType: BinaryServerFormatterSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)\n  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)\n- uid: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IServerResponseChannelSinkStack\n  nameWithType: IServerResponseChannelSinkStack\n  fullName: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack\n- uid: System.Runtime.Remoting.Messaging.IMessage\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMessage\n  nameWithType: IMessage\n  fullName: System.Runtime.Remoting.Messaging.IMessage\n- uid: System.Runtime.Remoting.Channels.ITransportHeaders\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: ITransportHeaders\n  nameWithType: ITransportHeaders\n  fullName: System.Runtime.Remoting.Channels.ITransportHeaders\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  isExternal: false\n  name: GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)\n  nameWithType: BinaryServerFormatterSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)\n  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  isExternal: false\n  name: NextChannelSink\n  nameWithType: BinaryServerFormatterSink.NextChannelSink\n  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  isExternal: false\n  name: ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)\n  nameWithType: BinaryServerFormatterSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)\n  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)\n- uid: System.Runtime.Remoting.Channels.ServerProcessing\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: ServerProcessing\n  nameWithType: ServerProcessing\n  fullName: System.Runtime.Remoting.Channels.ServerProcessing\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IServerChannelSinkStack\n  nameWithType: IServerChannelSinkStack\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  isExternal: false\n  name: Properties\n  nameWithType: BinaryServerFormatterSink.Properties\n  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: true\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  isExternal: false\n  name: TypeFilterLevel\n  nameWithType: BinaryServerFormatterSink.TypeFilterLevel\n  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel\n- uid: System.Runtime.Serialization.Formatters.TypeFilterLevel\n  parent: System.Runtime.Serialization.Formatters\n  isExternal: false\n  name: TypeFilterLevel\n  nameWithType: TypeFilterLevel\n  fullName: System.Runtime.Serialization.Formatters.TypeFilterLevel\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor*\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  isExternal: false\n  name: BinaryServerFormatterSink\n  nameWithType: BinaryServerFormatterSink.BinaryServerFormatterSink\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse*\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  isExternal: false\n  name: AsyncProcessResponse\n  nameWithType: BinaryServerFormatterSink.AsyncProcessResponse\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream*\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  isExternal: false\n  name: GetResponseStream\n  nameWithType: BinaryServerFormatterSink.GetResponseStream\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink*\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  isExternal: false\n  name: NextChannelSink\n  nameWithType: BinaryServerFormatterSink.NextChannelSink\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage*\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  isExternal: false\n  name: ProcessMessage\n  nameWithType: BinaryServerFormatterSink.ProcessMessage\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties*\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  isExternal: false\n  name: Properties\n  nameWithType: BinaryServerFormatterSink.Properties\n- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel*\n  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  isExternal: false\n  name: TypeFilterLevel\n  nameWithType: BinaryServerFormatterSink.TypeFilterLevel\n"}