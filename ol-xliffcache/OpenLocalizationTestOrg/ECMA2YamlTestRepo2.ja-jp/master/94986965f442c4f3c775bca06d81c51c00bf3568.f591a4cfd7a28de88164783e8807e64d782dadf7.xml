{"nodes":[{"pos":[1443,1557],"content":"Determines whether an assembly belongs to a code group by testing its strong name. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether an assembly belongs to a code group by testing its strong name. This class cannot be inherited.","pos":[0,114],"nodes":[{"content":"Determines whether an assembly belongs to a code group by testing its strong name.","pos":[0,82]},{"content":"This class cannot be inherited.","pos":[83,114]}]}]},{"pos":[1569,1808],"content":"Strong names are well suited to specifying code assemblies to which you give a rich set of powerful permissions. Since strong names are cryptographically verified, attackers cannot impersonate rightful assemblies and use their permissions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Strong names are well suited to specifying code assemblies to which you give a rich set of powerful permissions. Since strong names are cryptographically verified, attackers cannot impersonate rightful assemblies and use their permissions.","pos":[0,239],"nodes":[{"content":"Strong names are well suited to specifying code assemblies to which you give a rich set of powerful permissions.","pos":[0,112]},{"content":"Since strong names are cryptographically verified, attackers cannot impersonate rightful assemblies and use their permissions.","pos":[113,239]}]}]},{"pos":[2794,2997],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the strong name public key blob, name, and version number that determine membership.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> class with the strong name public key blob, name, and version number that determine membership."},{"pos":[3010,3770],"content":"Strong names are well suited to specifying code assemblies to which you give a rich set of powerful permissions. Since strong names are cryptographically verified, attackers cannot impersonate rightful assemblies and use their permissions.       The `name` and `version` parameters are optional. For example, you can create a <xref:System.Security.Policy.StrongNameMembershipCondition> that checks for <xref:System.Security.Policy.StrongNameMembershipCondition.PublicKey%2A> and <xref:System.Security.Policy.StrongNameMembershipCondition.Name%2A> (but not <xref:System.Security.Policy.StrongNameMembershipCondition.Version%2A>) by passing `null` into the `version` parameter. If `name` is an empty string (\"\"), an <xref:System.ArgumentException> is thrown.","needQuote":false,"needEscape":true,"nodes":[{"content":"Strong names are well suited to specifying code assemblies to which you give a rich set of powerful permissions.","pos":[0,112]},{"content":"Since strong names are cryptographically verified, attackers cannot impersonate rightful assemblies and use their permissions.","pos":[113,239]},{"content":"The <ph id=\"ph1\">`name`</ph> and <ph id=\"ph2\">`version`</ph> parameters are optional.","pos":[246,295],"source":"       The `name` and `version` parameters are optional."},{"content":"For example, you can create a &lt;xref:System.Security.Policy.StrongNameMembershipCondition&gt; that checks for &lt;xref:System.Security.Policy.StrongNameMembershipCondition.PublicKey%2A&gt; and &lt;xref:System.Security.Policy.StrongNameMembershipCondition.Name%2A&gt; (but not &lt;xref:System.Security.Policy.StrongNameMembershipCondition.Version%2A&gt;) by passing <ph id=\"ph1\">`null`</ph> into the <ph id=\"ph2\">`version`</ph> parameter.","pos":[296,675],"source":" For example, you can create a <xref:System.Security.Policy.StrongNameMembershipCondition> that checks for <xref:System.Security.Policy.StrongNameMembershipCondition.PublicKey%2A> and <xref:System.Security.Policy.StrongNameMembershipCondition.Name%2A> (but not <xref:System.Security.Policy.StrongNameMembershipCondition.Version%2A>) by passing `null` into the `version` parameter."},{"content":"If <ph id=\"ph1\">`name`</ph> is an empty string (\"\"), an &lt;xref:System.ArgumentException&gt; is thrown.","pos":[676,756],"source":" If `name` is an empty string (\"\"), an <xref:System.ArgumentException> is thrown."}]},{"pos":[4036,4094],"content":"The strong name public key blob of the software publisher.","needQuote":true,"needEscape":true,"nodes":[{"content":"The strong name public key blob of the software publisher.","pos":[0,58]}]},{"pos":[4155,4198],"content":"The simple name section of the strong name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The simple name section of the strong name.","pos":[0,43]}]},{"pos":[4263,4301],"content":"The version number of the strong name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The version number of the strong name.","pos":[0,38]}]},{"pos":[4490,4586],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">blob</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>blob</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4682,4864],"content":"The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The <code>name</code> parameter is an empty string (\"\").","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,96],"source":"The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an empty string (\"\").","pos":[103,170],"source":"       -or-       The <code>name</code> parameter is an empty string (\"\")."}]},{"pos":[5372,5449],"content":"Determines whether the specified evidence satisfies the membership condition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified evidence satisfies the membership condition.","pos":[0,77]}]},{"pos":[5462,5852],"content":"This membership condition tests only the <xref:System.Security.Policy.StrongName> evidence object.       The membership condition is satisfied if the specified evidence contains a <xref:System.Security.Policy.StrongName> with the same <xref:System.Security.Policy.StrongName> (public key, name, and version) as specified by the <xref:System.Security.Policy.StrongNameMembershipCondition>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This membership condition tests only the <xref:System.Security.Policy.StrongName> evidence object.       The membership condition is satisfied if the specified evidence contains a <xref:System.Security.Policy.StrongName> with the same <xref:System.Security.Policy.StrongName> (public key, name, and version) as specified by the <xref:System.Security.Policy.StrongNameMembershipCondition>.","pos":[0,388],"nodes":[{"content":"This membership condition tests only the &lt;xref:System.Security.Policy.StrongName&gt; evidence object.","pos":[0,98],"source":"This membership condition tests only the <xref:System.Security.Policy.StrongName> evidence object."},{"content":"The membership condition is satisfied if the specified evidence contains a &lt;xref:System.Security.Policy.StrongName&gt; with the same &lt;xref:System.Security.Policy.StrongName&gt; (public key, name, and version) as specified by the &lt;xref:System.Security.Policy.StrongNameMembershipCondition&gt;.","pos":[105,388],"source":"       The membership condition is satisfied if the specified evidence contains a <xref:System.Security.Policy.StrongName> with the same <xref:System.Security.Policy.StrongName> (public key, name, and version) as specified by the <xref:System.Security.Policy.StrongNameMembershipCondition>."}]}]},{"pos":[6037,6125],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.Evidence\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> against which to make the test.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Policy.Evidence\"></xref> against which to make the test."},{"pos":[6184,6381],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified evidence satisfies the membership condition; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified evidence satisfies the membership condition; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6882,6998],"content":"Creates an equivalent copy of the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates an equivalent copy of the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>."},{"pos":[7188,7298],"content":"A new, identical copy of the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>","needQuote":true,"needEscape":true,"source":"A new, identical copy of the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>"},{"pos":[7856,8135],"content":"Determines whether the <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.StrongName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the specified object is equivalent to the <bpt id=\"p2\">&lt;xref href=\"System.Security.Policy.StrongName\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> contained in the current <bpt id=\"p3\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether the <xref href=\"System.Security.Policy.StrongName\"></xref> from the specified object is equivalent to the <xref href=\"System.Security.Policy.StrongName\"></xref> contained in the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>."},{"pos":[8147,8277],"content":"For two <xref:System.Security.Policy.StrongName> classes to be equal, their name, version, and public key blob must match exactly.","needQuote":true,"needEscape":true,"nodes":[{"content":"For two &lt;xref:System.Security.Policy.StrongName&gt; classes to be equal, their name, version, and public key blob must match exactly.","pos":[0,130],"source":"For two <xref:System.Security.Policy.StrongName> classes to be equal, their name, version, and public key blob must match exactly."}]},{"pos":[8414,8525],"content":"The object to compare to the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object to compare to the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>."},{"pos":[8584,8983],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Security.Policy.StrongName\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> from the specified object is equivalent to the <bpt id=\"p3\">&lt;xref href=\"System.Security.Policy.StrongName\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> contained in the current <bpt id=\"p4\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Security.Policy.StrongName\"></xref> from the specified object is equivalent to the <xref href=\"System.Security.Policy.StrongName\"></xref> contained in the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9165,9359],"content":"The &lt;xref:System.Security.Policy.StrongNameMembershipCondition.PublicKey*&gt; property of the current object or the specified object is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Security.Policy.StrongNameMembershipCondition.PublicKey*> property of the current object or the specified object is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9897,9972],"content":"Reconstructs a security object with a specified state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a security object with a specified state from an XML encoding.","pos":[0,75]}]},{"pos":[10144,10203],"content":"The XML encoding to use to reconstruct the security object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoding to use to reconstruct the security object.","pos":[0,59]}]},{"pos":[10938,11013],"content":"Reconstructs a security object with a specified state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a security object with a specified state from an XML encoding.","pos":[0,75]}]},{"pos":[11227,11286],"content":"The XML encoding to use to reconstruct the security object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoding to use to reconstruct the security object.","pos":[0,59]}]},{"pos":[11369,11521],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.PolicyLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> context, used to resolve <bpt id=\"p2\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> references.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Policy.PolicyLevel\"></xref> context, used to resolve <xref href=\"System.Security.NamedPermissionSet\"></xref> references."},{"pos":[11712,11805],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">e</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>e</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11900,11973],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">e</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid membership condition element.","needQuote":true,"needEscape":true,"source":"The <code>e</code> parameter is not a valid membership condition element."},{"pos":[12420,12532],"content":"Returns the hash code for the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the hash code for the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>."},{"pos":[12667,12771],"content":"The hash code for the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The hash code for the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>."},{"pos":[12958,13106],"content":"The &lt;xref:System.Security.Policy.StrongNameMembershipCondition.PublicKey*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Security.Policy.StrongNameMembershipCondition.PublicKey*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13514,13646],"content":"Gets or sets the simple name of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.StrongName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which the membership condition tests.","needQuote":true,"needEscape":true,"source":"Gets or sets the simple name of the <xref href=\"System.Security.Policy.StrongName\"></xref> for which the membership condition tests."},{"pos":[13658,13768],"content":"If you attempt to set the Name property to an empty string (\"\"), an <xref:System.ArgumentException> is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"If you attempt to set the Name property to an empty string (\"\"), an &lt;xref:System.ArgumentException&gt; is thrown.","pos":[0,110],"source":"If you attempt to set the Name property to an empty string (\"\"), an <xref:System.ArgumentException> is thrown."}]},{"pos":[13882,14001],"content":"The simple name of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.StrongName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which the membership condition tests.","needQuote":true,"needEscape":true,"source":"The simple name of the <xref href=\"System.Security.Policy.StrongName\"></xref> for which the membership condition tests."},{"pos":[14182,14320],"content":"The value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The value is an empty string (\"\").","needQuote":false,"needEscape":true,"nodes":[{"content":"The value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,74],"source":"The value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The value is an empty string (\"\").","pos":[81,126]}]},{"pos":[14754,14947],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.StrongNamePublicKeyBlob\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the <bpt id=\"p2\">&lt;xref href=\"System.Security.Policy.StrongName\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> for which the membership condition tests.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Security.Permissions.StrongNamePublicKeyBlob\"></xref> of the <xref href=\"System.Security.Policy.StrongName\"></xref> for which the membership condition tests."},{"pos":[14960,15303],"content":"A blob is cryptographic information that uniquely specifies the public key of the software publisher.       Blobs differ from certificates in that the blob only has information about the public key; the certificate also includes information that associates a name of the holder with the key, as well as information to verify the certificate.","needQuote":false,"needEscape":true,"nodes":[{"content":"A blob is cryptographic information that uniquely specifies the public key of the software publisher.       Blobs differ from certificates in that the blob only has information about the public key; the certificate also includes information that associates a name of the holder with the key, as well as information to verify the certificate.","pos":[0,341],"nodes":[{"content":"A blob is cryptographic information that uniquely specifies the public key of the software publisher.","pos":[0,101]},{"content":"Blobs differ from certificates in that the blob only has information about the public key; the certificate also includes information that associates a name of the holder with the key, as well as information to verify the certificate.","pos":[108,341]}]}]},{"pos":[15506,15686],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.StrongNamePublicKeyBlob\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the <bpt id=\"p2\">&lt;xref href=\"System.Security.Policy.StrongName\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> for which the membership condition tests.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Permissions.StrongNamePublicKeyBlob\"></xref> of the <xref href=\"System.Security.Policy.StrongName\"></xref> for which the membership condition tests."},{"pos":[15879,15983],"content":"An attempt is made to set the PublicKey to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt is made to set the PublicKey to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16415,16548],"content":"Creates and returns a string representation of the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and returns a string representation of the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>."},{"pos":[16684,16790],"content":"A representation of the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A representation of the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>."},{"pos":[17299,17368],"content":"Creates an XML encoding of the security object and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML encoding of the security object and its current state.","pos":[0,69]}]},{"pos":[17535,17607],"content":"An XML encoding of the security object, including any state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]},{"pos":[18218,18362],"content":"Creates an XML encoding of the security object and its current state with the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.PolicyLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates an XML encoding of the security object and its current state with the specified <xref href=\"System.Security.Policy.PolicyLevel\"></xref>."},{"pos":[18573,18734],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.PolicyLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> context, which is used to resolve <bpt id=\"p2\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> references.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Policy.PolicyLevel\"></xref> context, which is used to resolve <xref href=\"System.Security.NamedPermissionSet\"></xref> references."},{"pos":[18810,18882],"content":"An XML encoding of the security object, including any state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]},{"pos":[19394,19536],"content":"Gets or sets the &lt;xref:System.Version&gt; of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.StrongName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which the membership condition tests.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref:System.Version> of the <xref href=\"System.Security.Policy.StrongName\"></xref> for which the membership condition tests."},{"pos":[19655,19784],"content":"The &lt;xref:System.Version&gt; of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.StrongName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which the membership condition tests.","needQuote":true,"needEscape":true,"source":"The <xref:System.Version> of the <xref href=\"System.Security.Policy.StrongName\"></xref> for which the membership condition tests."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Policy.StrongNameMembershipCondition\n  id: StrongNameMembershipCondition\n  children:\n  - System.Security.Policy.StrongNameMembershipCondition.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)\n  - System.Security.Policy.StrongNameMembershipCondition.Check(System.Security.Policy.Evidence)\n  - System.Security.Policy.StrongNameMembershipCondition.Copy\n  - System.Security.Policy.StrongNameMembershipCondition.Equals(System.Object)\n  - System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement)\n  - System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.StrongNameMembershipCondition.GetHashCode\n  - System.Security.Policy.StrongNameMembershipCondition.Name\n  - System.Security.Policy.StrongNameMembershipCondition.PublicKey\n  - System.Security.Policy.StrongNameMembershipCondition.ToString\n  - System.Security.Policy.StrongNameMembershipCondition.ToXml\n  - System.Security.Policy.StrongNameMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.StrongNameMembershipCondition.Version\n  langs:\n  - csharp\n  name: StrongNameMembershipCondition\n  nameWithType: StrongNameMembershipCondition\n  fullName: System.Security.Policy.StrongNameMembershipCondition\n  type: Class\n  summary: Determines whether an assembly belongs to a code group by testing its strong name. This class cannot be inherited.\n  remarks: Strong names are well suited to specifying code assemblies to which you give a rich set of powerful permissions. Since strong names are cryptographically verified, attackers cannot impersonate rightful assemblies and use their permissions.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class StrongNameMembershipCondition\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.Policy.StrongNameMembershipCondition.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)\n  id: '#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)'\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  langs:\n  - csharp\n  name: StrongNameMembershipCondition(StrongNamePublicKeyBlob,String,Version)\n  nameWithType: StrongNameMembershipCondition.StrongNameMembershipCondition(StrongNamePublicKeyBlob,String,Version)\n  fullName: System.Security.Policy.StrongNameMembershipCondition.StrongNameMembershipCondition(StrongNamePublicKeyBlob,String,Version)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Initializes a new instance of the <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> class with the strong name public key blob, name, and version number that determine membership.\n  remarks: \"Strong names are well suited to specifying code assemblies to which you give a rich set of powerful permissions. Since strong names are cryptographically verified, attackers cannot impersonate rightful assemblies and use their permissions.  \\n  \\n The `name` and `version` parameters are optional. For example, you can create a <xref:System.Security.Policy.StrongNameMembershipCondition> that checks for <xref:System.Security.Policy.StrongNameMembershipCondition.PublicKey%2A> and <xref:System.Security.Policy.StrongNameMembershipCondition.Name%2A> (but not <xref:System.Security.Policy.StrongNameMembershipCondition.Version%2A>) by passing `null` into the `version` parameter. If `name` is an empty string (\\\"\\\"), an <xref:System.ArgumentException> is thrown.\"\n  syntax:\n    content: public StrongNameMembershipCondition (System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, Version version);\n    parameters:\n    - id: blob\n      type: System.Security.Permissions.StrongNamePublicKeyBlob\n      description: The strong name public key blob of the software publisher.\n    - id: name\n      type: System.String\n      description: The simple name section of the strong name.\n    - id: version\n      type: System.Version\n      description: The version number of the strong name.\n  overload: System.Security.Policy.StrongNameMembershipCondition.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>blob</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>name</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <code>name</code> parameter is an empty string (\\\"\\\").\"\n  platform:\n  - net462\n- uid: System.Security.Policy.StrongNameMembershipCondition.Check(System.Security.Policy.Evidence)\n  id: Check(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  langs:\n  - csharp\n  name: Check(Evidence)\n  nameWithType: StrongNameMembershipCondition.Check(Evidence)\n  fullName: System.Security.Policy.StrongNameMembershipCondition.Check(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Determines whether the specified evidence satisfies the membership condition.\n  remarks: \"This membership condition tests only the <xref:System.Security.Policy.StrongName> evidence object.  \\n  \\n The membership condition is satisfied if the specified evidence contains a <xref:System.Security.Policy.StrongName> with the same <xref:System.Security.Policy.StrongName> (public key, name, and version) as specified by the <xref:System.Security.Policy.StrongNameMembershipCondition>.\"\n  syntax:\n    content: public bool Check (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The <xref href=\"System.Security.Policy.Evidence\"></xref> against which to make the test.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified evidence satisfies the membership condition; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Policy.StrongNameMembershipCondition.Check*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.StrongNameMembershipCondition.Copy\n  id: Copy\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: StrongNameMembershipCondition.Copy()\n  fullName: System.Security.Policy.StrongNameMembershipCondition.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Creates an equivalent copy of the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>.\n  syntax:\n    content: public System.Security.Policy.IMembershipCondition Copy ();\n    parameters: []\n    return:\n      type: System.Security.Policy.IMembershipCondition\n      description: A new, identical copy of the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>\n  overload: System.Security.Policy.StrongNameMembershipCondition.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.StrongNameMembershipCondition.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: StrongNameMembershipCondition.Equals(Object)\n  fullName: System.Security.Policy.StrongNameMembershipCondition.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Determines whether the <xref href=\"System.Security.Policy.StrongName\"></xref> from the specified object is equivalent to the <xref href=\"System.Security.Policy.StrongName\"></xref> contained in the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>.\n  remarks: For two <xref:System.Security.Policy.StrongName> classes to be equal, their name, version, and public key blob must match exactly.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The object to compare to the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Security.Policy.StrongName\"></xref> from the specified object is equivalent to the <xref href=\"System.Security.Policy.StrongName\"></xref> contained in the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Policy.StrongNameMembershipCondition.Equals*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref:System.Security.Policy.StrongNameMembershipCondition.PublicKey*> property of the current object or the specified object is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: StrongNameMembershipCondition.FromXml(SecurityElement)\n  fullName: System.Security.Policy.StrongNameMembershipCondition.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Reconstructs a security object with a specified state from an XML encoding.\n  syntax:\n    content: public void FromXml (System.Security.SecurityElement e);\n    parameters:\n    - id: e\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the security object.\n  overload: System.Security.Policy.StrongNameMembershipCondition.FromXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  id: FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  langs:\n  - csharp\n  name: FromXml(SecurityElement,PolicyLevel)\n  nameWithType: StrongNameMembershipCondition.FromXml(SecurityElement,PolicyLevel)\n  fullName: System.Security.Policy.StrongNameMembershipCondition.FromXml(SecurityElement,PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Reconstructs a security object with a specified state from an XML encoding.\n  syntax:\n    content: public void FromXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: e\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the security object.\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: The <xref href=\"System.Security.Policy.PolicyLevel\"></xref> context, used to resolve <xref href=\"System.Security.NamedPermissionSet\"></xref> references.\n  overload: System.Security.Policy.StrongNameMembershipCondition.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>e</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>e</code> parameter is not a valid membership condition element.\n  platform:\n  - net462\n- uid: System.Security.Policy.StrongNameMembershipCondition.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: StrongNameMembershipCondition.GetHashCode()\n  fullName: System.Security.Policy.StrongNameMembershipCondition.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Returns the hash code for the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>.\n  overload: System.Security.Policy.StrongNameMembershipCondition.GetHashCode*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref:System.Security.Policy.StrongNameMembershipCondition.PublicKey*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Policy.StrongNameMembershipCondition.Name\n  id: Name\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  langs:\n  - csharp\n  name: Name\n  nameWithType: StrongNameMembershipCondition.Name\n  fullName: System.Security.Policy.StrongNameMembershipCondition.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Gets or sets the simple name of the <xref href=\"System.Security.Policy.StrongName\"></xref> for which the membership condition tests.\n  remarks: If you attempt to set the Name property to an empty string (\"\"), an <xref:System.ArgumentException> is thrown.\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The simple name of the <xref href=\"System.Security.Policy.StrongName\"></xref> for which the membership condition tests.\n  overload: System.Security.Policy.StrongNameMembershipCondition.Name*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The value is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value is an empty string (\\\"\\\").\"\n  platform:\n  - net462\n- uid: System.Security.Policy.StrongNameMembershipCondition.PublicKey\n  id: PublicKey\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  langs:\n  - csharp\n  name: PublicKey\n  nameWithType: StrongNameMembershipCondition.PublicKey\n  fullName: System.Security.Policy.StrongNameMembershipCondition.PublicKey\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Gets or sets the <xref href=\"System.Security.Permissions.StrongNamePublicKeyBlob\"></xref> of the <xref href=\"System.Security.Policy.StrongName\"></xref> for which the membership condition tests.\n  remarks: \"A blob is cryptographic information that uniquely specifies the public key of the software publisher.  \\n  \\n Blobs differ from certificates in that the blob only has information about the public key; the certificate also includes information that associates a name of the holder with the key, as well as information to verify the certificate.\"\n  syntax:\n    content: public System.Security.Permissions.StrongNamePublicKeyBlob PublicKey { get; set; }\n    return:\n      type: System.Security.Permissions.StrongNamePublicKeyBlob\n      description: The <xref href=\"System.Security.Permissions.StrongNamePublicKeyBlob\"></xref> of the <xref href=\"System.Security.Policy.StrongName\"></xref> for which the membership condition tests.\n  overload: System.Security.Policy.StrongNameMembershipCondition.PublicKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt is made to set the PublicKey to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Policy.StrongNameMembershipCondition.ToString\n  id: ToString\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: StrongNameMembershipCondition.ToString()\n  fullName: System.Security.Policy.StrongNameMembershipCondition.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Creates and returns a string representation of the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A representation of the current <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref>.\n  overload: System.Security.Policy.StrongNameMembershipCondition.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.StrongNameMembershipCondition.ToXml\n  id: ToXml\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: StrongNameMembershipCondition.ToXml()\n  fullName: System.Security.Policy.StrongNameMembershipCondition.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Creates an XML encoding of the security object and its current state.\n  syntax:\n    content: public System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Security.Policy.StrongNameMembershipCondition.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.StrongNameMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)\n  id: ToXml(System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  langs:\n  - csharp\n  name: ToXml(PolicyLevel)\n  nameWithType: StrongNameMembershipCondition.ToXml(PolicyLevel)\n  fullName: System.Security.Policy.StrongNameMembershipCondition.ToXml(PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Creates an XML encoding of the security object and its current state with the specified <xref href=\"System.Security.Policy.PolicyLevel\"></xref>.\n  syntax:\n    content: public System.Security.SecurityElement ToXml (System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: The <xref href=\"System.Security.Policy.PolicyLevel\"></xref> context, which is used to resolve <xref href=\"System.Security.NamedPermissionSet\"></xref> references.\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Security.Policy.StrongNameMembershipCondition.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.StrongNameMembershipCondition.Version\n  id: Version\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  langs:\n  - csharp\n  name: Version\n  nameWithType: StrongNameMembershipCondition.Version\n  fullName: System.Security.Policy.StrongNameMembershipCondition.Version\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Gets or sets the <xref:System.Version> of the <xref href=\"System.Security.Policy.StrongName\"></xref> for which the membership condition tests.\n  syntax:\n    content: public Version Version { get; set; }\n    return:\n      type: System.Version\n      description: The <xref:System.Version> of the <xref href=\"System.Security.Policy.StrongName\"></xref> for which the membership condition tests.\n  overload: System.Security.Policy.StrongNameMembershipCondition.Version*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.Policy.StrongNameMembershipCondition.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: StrongNameMembershipCondition(StrongNamePublicKeyBlob,String,Version)\n  nameWithType: StrongNameMembershipCondition.StrongNameMembershipCondition(StrongNamePublicKeyBlob,String,Version)\n  fullName: System.Security.Policy.StrongNameMembershipCondition.StrongNameMembershipCondition(StrongNamePublicKeyBlob,String,Version)\n- uid: System.Security.Permissions.StrongNamePublicKeyBlob\n  parent: System.Security.Permissions\n  isExternal: false\n  name: StrongNamePublicKeyBlob\n  nameWithType: StrongNamePublicKeyBlob\n  fullName: System.Security.Permissions.StrongNamePublicKeyBlob\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Version\n  parent: System\n  isExternal: true\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Security.Policy.StrongNameMembershipCondition.Check(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: Check(Evidence)\n  nameWithType: StrongNameMembershipCondition.Check(Evidence)\n  fullName: System.Security.Policy.StrongNameMembershipCondition.Check(Evidence)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Policy.StrongNameMembershipCondition.Copy\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: Copy()\n  nameWithType: StrongNameMembershipCondition.Copy()\n  fullName: System.Security.Policy.StrongNameMembershipCondition.Copy()\n- uid: System.Security.Policy.IMembershipCondition\n  parent: System.Security.Policy\n  isExternal: false\n  name: IMembershipCondition\n  nameWithType: IMembershipCondition\n  fullName: System.Security.Policy.IMembershipCondition\n- uid: System.Security.Policy.StrongNameMembershipCondition.Equals(System.Object)\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: StrongNameMembershipCondition.Equals(Object)\n  fullName: System.Security.Policy.StrongNameMembershipCondition.Equals(Object)\n- uid: System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: StrongNameMembershipCondition.FromXml(SecurityElement)\n  fullName: System.Security.Policy.StrongNameMembershipCondition.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: FromXml(SecurityElement,PolicyLevel)\n  nameWithType: StrongNameMembershipCondition.FromXml(SecurityElement,PolicyLevel)\n  fullName: System.Security.Policy.StrongNameMembershipCondition.FromXml(SecurityElement,PolicyLevel)\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.Security.Policy.StrongNameMembershipCondition.GetHashCode\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: StrongNameMembershipCondition.GetHashCode()\n  fullName: System.Security.Policy.StrongNameMembershipCondition.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Policy.StrongNameMembershipCondition.Name\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: Name\n  nameWithType: StrongNameMembershipCondition.Name\n  fullName: System.Security.Policy.StrongNameMembershipCondition.Name\n- uid: System.Security.Policy.StrongNameMembershipCondition.PublicKey\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: PublicKey\n  nameWithType: StrongNameMembershipCondition.PublicKey\n  fullName: System.Security.Policy.StrongNameMembershipCondition.PublicKey\n- uid: System.Security.Policy.StrongNameMembershipCondition.ToString\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: ToString()\n  nameWithType: StrongNameMembershipCondition.ToString()\n  fullName: System.Security.Policy.StrongNameMembershipCondition.ToString()\n- uid: System.Security.Policy.StrongNameMembershipCondition.ToXml\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: ToXml()\n  nameWithType: StrongNameMembershipCondition.ToXml()\n  fullName: System.Security.Policy.StrongNameMembershipCondition.ToXml()\n- uid: System.Security.Policy.StrongNameMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: ToXml(PolicyLevel)\n  nameWithType: StrongNameMembershipCondition.ToXml(PolicyLevel)\n  fullName: System.Security.Policy.StrongNameMembershipCondition.ToXml(PolicyLevel)\n- uid: System.Security.Policy.StrongNameMembershipCondition.Version\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: Version\n  nameWithType: StrongNameMembershipCondition.Version\n  fullName: System.Security.Policy.StrongNameMembershipCondition.Version\n- uid: System.Security.Policy.StrongNameMembershipCondition.#ctor*\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: StrongNameMembershipCondition\n  nameWithType: StrongNameMembershipCondition.StrongNameMembershipCondition\n- uid: System.Security.Policy.StrongNameMembershipCondition.Check*\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: Check\n  nameWithType: StrongNameMembershipCondition.Check\n- uid: System.Security.Policy.StrongNameMembershipCondition.Copy*\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: Copy\n  nameWithType: StrongNameMembershipCondition.Copy\n- uid: System.Security.Policy.StrongNameMembershipCondition.Equals*\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: Equals\n  nameWithType: StrongNameMembershipCondition.Equals\n- uid: System.Security.Policy.StrongNameMembershipCondition.FromXml*\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: FromXml\n  nameWithType: StrongNameMembershipCondition.FromXml\n- uid: System.Security.Policy.StrongNameMembershipCondition.GetHashCode*\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: GetHashCode\n  nameWithType: StrongNameMembershipCondition.GetHashCode\n- uid: System.Security.Policy.StrongNameMembershipCondition.Name*\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: Name\n  nameWithType: StrongNameMembershipCondition.Name\n- uid: System.Security.Policy.StrongNameMembershipCondition.PublicKey*\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: PublicKey\n  nameWithType: StrongNameMembershipCondition.PublicKey\n- uid: System.Security.Policy.StrongNameMembershipCondition.ToString*\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: ToString\n  nameWithType: StrongNameMembershipCondition.ToString\n- uid: System.Security.Policy.StrongNameMembershipCondition.ToXml*\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: ToXml\n  nameWithType: StrongNameMembershipCondition.ToXml\n- uid: System.Security.Policy.StrongNameMembershipCondition.Version*\n  parent: System.Security.Policy.StrongNameMembershipCondition\n  isExternal: false\n  name: Version\n  nameWithType: StrongNameMembershipCondition.Version\n"}