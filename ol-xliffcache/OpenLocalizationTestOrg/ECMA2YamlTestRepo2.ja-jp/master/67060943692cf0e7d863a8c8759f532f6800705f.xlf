<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">67060943692cf0e7d863a8c8759f532f6800705f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.DataVisualization.Charting.Chart.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">490aebdb67e25896b471d103a037b7470efd7022</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">16dc1fdfe5158840248e594e4cef039cf193b6f3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Serves as the root class of the Chart control.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class exposes all of the properties, methods and events of the Chart Windows control.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Two important properties of the Chart class are the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.Series%2A&gt; and &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.ChartAreas%2A&gt; properties, both of which are collection properties.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.Series%2A&gt; collection property stores &lt;xref:System.Windows.Forms.DataVisualization.Charting.Series&gt; objects, which are used to store data that is to be displayed, along with attributes of that data.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.ChartAreas%2A&gt; collection property stores &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea&gt; objects, which are primarily used to draw one or more charts using one set of axes.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can use this constructor to create a new instance of the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; class at run time.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, for simplicity, it is recommended that you create a &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; instance at design time.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is the root object of the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; control.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Aligns data points along the X axis using their axis labels.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Applicable when multiple series are indexed and their X-values are strings.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Aligns data points from different series along the X axis using their axis labels.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The specified series in the chart are aligned using an ascending sort order.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This method is used to align data points from different series along the X axis using their axis labels, and is applicable when:      -   Multiple series are displayed and are indexed; that is, all data points have an &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.XValue%2A&gt; of 0, or the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Series.IsXValueIndexed%2A&gt; property is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-   All data points have non-empty axis labels, which are unique to their &lt;xref:System.Windows.Forms.DataVisualization.Charting.Series&gt;.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If they are not unique, an exception will be thrown.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This situation is very common when data-binding results in the creation of multiple series, and <ph id="ph1">`string`</ph> values are used for X-axis values.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Two issues arise when multiple, indexed series are plotted, and the X-values are set using <ph id="ph1">`string`</ph> values:      -   It cannot be guaranteed that data points from different series with the same string X-values will be plotted at the same index along the X axis.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-   Only the axis label for the data points in the first series will be displayed, even though data points from other series with the same index have axis labels too.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>By default, points are plotted in the order in which they are stored in their series.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To specify a sort order, use an <ph id="ph1">`AlignDataPointsByAxisLabel`</ph> method overload that has a <ph id="ph2">`sortingOrder`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A comma-separated list of series that will have their data points aligned to the X axis using the data point axis labels.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Aligns data points using their axis labels.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>All series in the chart are aligned, using the specified sort order.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.PointSortOrder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that indicates if ascending or descending sort order is used on axis labels, which in turn determines the order by which points that previously occupied the same axis space are displayed.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Aligns data points using their axis labels.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This method is used to align data points from different series along the X axis using their axis labels, and is applicable when:      -   Multiple series are displayed and are indexed; that is, all data points have an &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.XValue%2A&gt; of 0, or the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Series.IsXValueIndexed%2A&gt; property is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-   All data points have non-empty axis labels, which are unique to their &lt;xref:System.Windows.Forms.DataVisualization.Charting.Series&gt;.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If they are not unique, an exception will be thrown.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This situation is very common when data-binding results in the creation of multiple series, and <ph id="ph1">`string`</ph> values are used for X-axis values.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Two issues arise when multiple, indexed series are plotted, and the X-values are set using <ph id="ph1">`string`</ph> values:      -   It cannot be guaranteed that data points from different series with the same string X-values will be plotted at the same index along the X axis.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-   Only the axis label for the data points in the first series will be displayed, even though data points from other series with the same index have axis labels too.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>By default, points are plotted in the order in which they are stored in their series.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To specify a sort order, use an <ph id="ph1">`AlignDataPointsByAxisLabel`</ph> method overload that has a <ph id="ph2">`sortingOrder`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A comma-separated list of series that should be aligned by axis label.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.PointSortOrder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value that determines if ascending or descending sort order is used on axis labels, which in turn determines the order by which points that previously occupied the same axis space are displayed.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Occurs when the end-user places an annotation on the chart.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Occurs when the annotation position is changed.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Occurs when the annotation position is about to change.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets or sets a collection that stores the chart annotations.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>All of the chart annotations are stored in this collection property.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.AnnotationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is used to store chart annotations.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Occurs when a selection of the annotation is changed.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Occurs when the annotation text is changed.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines whether anti-aliasing is used when text and graphics are drawn.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Anti-aliasing smoothens out "jagged edges" by padding pixels with intermediate colors, and is especially effective for smoothing out edges for charts that are not drawn as rectangles.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example, anti-aliasing is very effective for line charts and pie charts, but is not as effective for bar and column charts.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Anti-aliasing can be applied to text and/or graphics primitives such as rectangles, circles, and so forth.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Note that anti-aliasing will affect performance.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value that determines whether anti-aliasing is used when text and graphics are drawn.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Sets the automatically assigned series and data point colors, to allow programmatic access at run time.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; colors are automatically assigned at run time, there is no way to know what the colors will be prior to the time when the chart rendered; the <ph id="ph1">`Color`</ph> property of an automatically assigned value will return &lt;xref:System.Drawing.Color.Empty&gt; at this time.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If you call the ApplyPaletteColors method, the colors for the series and the data points will be set, which allows for programmatic access.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Occurs when the axis scroll bar is clicked by the end-user.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Occurs when the axis scale view position or size is changed.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Occurs when the axis scale view position or size is about to change.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets the background color of the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You can set this property to any valid ARGB (alpha, red, green, blue) value.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Note that for the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; object, the alpha component cannot be set to a value other than 255.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This also means that, for the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; object only, a &lt;xref:System.Drawing.Color.Transparent%2A&gt; value cannot be used.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The BackColor value will be the first color used if you are using gradient colors for the background.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The alpha value controls the opacity of a color.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If you set this color to "transparent"—that is, if you use an alpha value of 0—no color will be assigned to the background of the title.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>As a result, the background will be transparent.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value used to draw the background color of the chart.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The default color is <bpt id="p1">[</bpt>System.Drawing.Color.White<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Gets or sets the orientation for the background gradient of a <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Also determines whether a gradient is used.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Use the BackGradientStyle property to determine whether a &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; control will display a gradient, and to determine the orientation of the gradient if one is used.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For a listing of available patterns, refer to the &lt;xref:System.Windows.Forms.DataVisualization.Charting.GradientStyle&gt; enumeration.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To use gradient colors:       Set the primary color of the chart background with the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackColor%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Set the secondary color of the chart background with the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Set this BackGradientStyle property to the desired gradient style.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.GradientStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that specifies the orientation for the background gradient of a chart and whether a gradient is used.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.GradientStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The BackgroundImage property is not used.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImage*&gt; property instead.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets or sets the hatching style of the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle&gt; enumeration specifies the hatch pattern used by a brush of type &lt;xref:System.Drawing.Drawing2D.HatchBrush&gt;.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The hatch pattern consists of a solid background color and lines drawn over the background.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For a listing of available hatching styles, refer to the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle&gt; enumeration.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> The color of hatching lines is determined by the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that specifies the hatching style of the <bpt id="p2">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Gets or sets the background image of the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This property defines a path to a background image for a &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; legend, and can be an absolute or relative URL.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To position the image, use the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageAlignment%2A&gt; and &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageWrapMode%2A&gt; properties.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>You can also specify one of the colors displayed by the image as "transparent", by setting the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageTransparentColor%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An image can originate from any valid graphics file supported by .NET Framework, including icons.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Background images take precedence over other background properties such as gradient color.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that represents the URL of an image file.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The default value is an empty string.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Gets or sets the background image alignment used for the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> drawing mode.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This property determines the alignment of the background image for the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; control; it is only applied when the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageWrapMode%2A&gt; property is set to &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode&gt;.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value that specifies the background image alignment of the chart.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Gets or sets the color of the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control that will be displayed as transparent.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that will be displayed as transparent when the chart image is drawn.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets or sets the drawing mode for the background image of the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This property determines how the image is displayed, for example, tiled, scaled, and so forth.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>If an image is scaled, it will be stretched to fit within the bounds of the chart.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>If the image is tiled, it is repeatedly drawn, starting from the top-left corner of the chart.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For more information about the available wrapping modes, see the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode&gt; enumeration topic.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If the BackImageWrapMode property is set to &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode&gt;, the location where the image is drawn is determined by the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageAlignment%2A&gt; property setting.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value that specifies the drawing mode for the background image of the chart.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets or sets the secondary color of the chart background.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The BackSecondaryColor property determines the secondary background color of many &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; objects, and is used when gradient colors are being applied.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>You can set BackSecondaryColor to any valid ARGB (alpha, red, green, blue) value.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>If hatching is used, the BackSecondaryColor property determines the color of the hatching lines for the chart.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>To use gradient colors for the background of a chart:      -   Set the primary color with the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackColor%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>-   Set the secondary color with the BackSecondaryColor property.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>-   Set the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackGradientStyle%2A&gt; property to the desired gradient style.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that represents the secondary color of the chart background.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Signals to the object that initialization is starting.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Gets or sets the color of the chart border.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To get or set the border color, use &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineColor%2A&gt; instead.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value used to draw the chart border.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Gets or sets the style of the border.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartDashStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value that specifies the style of the border.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Gets or sets the color of the border line.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value used to draw the border line.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets or sets the style of the border line.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartDashStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value that specifies the style of the border line.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Gets or sets the width of the border line.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_integer" name="integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that specifies the width of the border line.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.BorderSkin"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, which provides border skin functionality for the <bpt id="p2">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Use this property to specify a border skin for the chart.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.BorderSkin"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object which provides border skin functionality for the chart.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Gets or set s the width of the chart border.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>To get or set of the border width, use &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineWidth%2A&gt; instead.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_integer" name="integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that determines the border width, in pixels, of the chart.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Gets the build number of the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the build number of the chart control.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Gets a read-only <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is used to store <bpt id="p2">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartArea"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>This collection property lets you access the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection&gt; object, which stores &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea&gt; objects and also provides methods and properties used to manipulate the collection.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea&gt; objects are used to plot one or more charts.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>A read-only <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains collection of <bpt id="p2">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartArea"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns the custom <bpt id="p1">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the entire chart.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the chart.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Occurs when the cursor position is changed.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Occurs when the cursor position is about to change.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Occurs just before the chart image is drawn.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Use this event to customize the chart picture.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Occurs when the chart legend must be customized.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Data binds the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control to a data source.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>This method will bind the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; control to the specified data source.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>In cases where a data source is set to a chart and no other data operations are required, the DataBind method does not have to be explicitly called.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>In these cases, the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; itself will data bind to the data source prior to being rendered.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Data binds a chart to the table, with one series created per unique value in a given column.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Series will be automatically added to the chart, depending on the number of unique values in the given <ph id="ph1">`seriesGroupByField`</ph> column of the data source; in other words, the creation of series depends upon grouping of a column.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The data source can be a &lt;xref:System.Data.OleDb.OleDbDataReader&gt;, &lt;xref:System.Data.SqlClient.SqlDataReader&gt; or a &lt;xref:System.Data.DataView&gt; object.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Note that all collections that implement the &lt;xref:System.Collections.IEnumerable&gt; interface can be used.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Other data point properties besides X and Y-values can be bound.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The format is: PointProperty=Field[{Format}] [,PointProperty= Field[{Format}]].</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>For example:"Tooltip=Price{C1},Href=WebSiteName".</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>A list of these data point properties is as follows: &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.AxisLabel%2A&gt;, &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.ToolTip%2A&gt;, &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Url%2A&gt;, &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Label%2A&gt;, &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A&gt;, &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendToolTip%2A&gt; and &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.CustomProperties%2A&gt;, which are the names of the custom properties.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The data source that is data bound by a chart.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The name of the field used to group data into the series.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The name of the field for X values.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>A comma-separated list of name(s) of the field(s) for Y value(s).</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The other data point properties that can be bound.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Data binds a chart to the table, with one series created per unique value in a given column.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Series will be automatically added to the chart, depending on the number of unique values in the given <ph id="ph1">`seriesGroupByField`</ph> column of the data source; in other words, the creation of series depends upon grouping of a column.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The data source can be a &lt;xref:System.Data.OleDb.OleDbDataReader&gt;, &lt;xref:System.Data.SqlClient.SqlDataReader&gt; or a &lt;xref:System.Data.DataView&gt; object.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Note that all collections that implement the &lt;xref:System.Collections.IEnumerable&gt; interface can be used.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Other data point properties besides X and Y-values can be bound.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The format is: PointProperty=Field[{Format}] [,PointProperty= Field[{Format}]].</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>For example:"Tooltip=Price{C1},Href=WebSiteName".</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>A list of these data point properties is as follows: &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.AxisLabel%2A&gt;, &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.ToolTip%2A&gt;, &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Url%2A&gt;, &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Label%2A&gt;, &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A&gt;, &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendToolTip%2A&gt; and &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.CustomProperties%2A&gt;, which are the names of the custom properties.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The data source that is data bound by a chart.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The name of the field used to group data into the series.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The name of the field for X values.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>A comma-separated list of name(s) of the field(s) for Y value(s).</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The other data point properties that can be bound.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The order in which the series will be sorted by group field values.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Automatically creates and binds series data to the specified data table.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Each column of the table becomes a Y-value for a series, with one series per column.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The data source that is data bound by a chart, which can be any &lt;xref:System.Collections.IEnumerable&gt; object.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Automatically creates and binds series data to the specified data table, and optionally populates X-values.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Each column of the table becomes a Y-value for a series, with one series per column.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The series' X-value field can also be provided.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The data source that is data bound by a chart, which can be any &lt;xref:System.Collections.IEnumerable&gt; object.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The name of the field used for the series X-values.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.DataManipulator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that provides methods and properties that handle data.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Use this property at run-time to:      -   Copy Y-values.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>-   Filter data.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>-   Group data.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>-   Replace missing data with empty points.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>-   Export data to a &lt;xref:System.Data.DataSet&gt; object.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>-   Sort data.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>-   Apply a financial formula to data.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Refer to the &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator&gt; class overview for further details.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.DataManipulator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that provides methods and properties that handle data.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Gets or sets the data source for the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The data points in a series can be bound to a data source at any time using the DataSource property.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>To force the chart to bind to the data source, call the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.DataBind%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The following is a list of objects that you can use as the data source:      -   DataView      -   Data readers (SQL, OleDB)      -   DataSet      -   DataTable      -   Binding Source      -   IDataSource      -   Arrays      -   Lists      -   All Enumerable objects      -   SqlCommand / OleDbCommand (DataSource data-binding only)      -   SqlDataAdapter / OleDbDataAdapter (DataSource data-binding only)</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the data source for the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Gets the default control size.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the default size of the control.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Releases unmanaged and, optionally, managed resources.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both unmanaged and managed resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Signals to the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that initialization is complete.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Gets the font properties of the control.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the text font of the control.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Gets or sets the text color of the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>This property is not applicable to this class.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that specifies the text color of the chart.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Occurs when a numeric value has to be converted to a string.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Returns the chart element outline.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`chartElement`</ph> is not part of the chart, or the <ph id="ph2">`elementType`</ph> cannot be combined with <ph id="ph3">`chartElement`</ph>, the result will contain an empty array of marker points.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The marker points are sorted clockwise.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The type of the element.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartElementOutline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains:      -   An array of points in absolute coordinates that can be used as outline markers around this chart element.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>-   A <bpt id="p1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for drawing an outline around this chart element.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Returns the requested chart service.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The type of requested chart service.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the service type, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the service cannot be found.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Occurs before showing the tooltip to get the tooltip text.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Determines the chart element, if any, that is located at a point defined by the given X and Y coordinates.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Call this method to determine the chart element, if any, which is located at a specified point.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The properties of the &lt;xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult&gt; object that is returned can then be used to determine which chart element was clicked; the &lt;xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult&gt; object also provides an instance of the actual object selected, if any.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The X-coordinate value of the point the user clicked.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The Y-coordinate value of the point the user clicked.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.HitTestResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, which provides information concerning the chart element, if any, that is at the specified location.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Determines the chart element, if any, that is located at a point defined by given X and Y coordinates.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Transparent elements can optionally be ignored.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Call this method to determine the chart element, if any, which is located at a specified point.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>To ignore transparent elements, set the <ph id="ph1">`ignoreTransparent`</ph> parameter to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The properties of the &lt;xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult&gt; object that is returned can then be used to determine which chart element was clicked; the &lt;xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult&gt; object also provides an instance of the actual object selected, if any.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The X-coordinate value of the point the user clicked on.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The Y-coordinate value of the point the user clicked on.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to ignore transparent elements; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.HitTestResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, which provides information concerning the chart element, if any, that is at the specified location.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Determines if a chart element of a given type is located at a point defined by given X and Y coordinates.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Call this method to determine if a chart element of the given type is located at a specified point.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The properties of the &lt;xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult&gt; object that is returned can then be used to determine which chart element was clicked; the &lt;xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult&gt; object also provides an instance of the actual object selected, if any.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The X-coordinate value of the point the user clicked on.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The Y-coordinate value of the point the user clicked on.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>A flag that determines the chart element type to be tested.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.HitTestResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, which provides information concerning the chart element, if any, that is at the specified location.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Determines whether a chart element that is one of the specified types is located at a point defined by the given X and Y coordinates.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Call this method to determine the gauge element, if any, which is located at a specified point.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>This method is often used in some mouse-related event, for example, [M:System.Windows.Forms.DataVisualization.Charting.Chart.OnMouseDown(System.Windows.Forms.MouseEventArgs](assetId:///M:System.Windows.Forms.DataVisualization.Charting.Chart.OnMouseDown(System.Windows.Forms.MouseEventArgs?qualifyHint=False&amp;autoUpgrade=True), to determine which gauge element the end-user clicked.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The X and Y mouse coordinates obtained from the event parameters are then used for the X and Y parameter values of this method call.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The properties of the returned <bpt id="p1">[</bpt>HitTestResult<ept id="p1">](assetId:///T:System.Windows.Forms.DataVisualization.Charting.HitTestResult?qualifyHint=False&amp;autoUpgrade=True)</ept> object can then be used to determine which chart element was clicked; the <bpt id="p2">[</bpt>HitTestResult<ept id="p2">](assetId:///T:System.Windows.Forms.DataVisualization.Charting.HitTestResult?qualifyHint=False&amp;autoUpgrade=True)</ept> object also provides an instance of the actual object selected, if any.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The X-coordinate for the specified data point.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The Y-coordinate for the specified data point.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to ignore transparent elements; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartElementType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that specify the types to test for, in order to filter the result.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>If omitted, checking for element types will be ignored and all element types will be valid.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.HitTestResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that provides information about the chart element, if any, found at the specified location.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The array contains at least one element, which can be <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartElementType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The objects in the result are sorted from the top to the bottom of different layers of control.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that stores <bpt id="p2">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.NamedImage"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects for the chart.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Use this property to add &lt;xref:System.Windows.Forms.DataVisualization.Charting.NamedImage&gt; objects to and remove &lt;xref:System.Windows.Forms.DataVisualization.Charting.NamedImage&gt; objects from the &lt;xref:System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection&gt; object of the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt;.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>This collection property is available at run time only.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>An image—that is, an object derived from type &lt;xref:System.Drawing.Image&gt;, such as &lt;xref:System.Drawing.Bitmap&gt;, that is created dynamically—can be stored in this collection, and then assigned at a later time to any image-related &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; property, such as &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImage%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>When you assign a &lt;xref:System.Windows.Forms.DataVisualization.Charting.NamedImage&gt; object to an image-related property in the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; class, use the name of the &lt;xref:System.Windows.Forms.DataVisualization.Charting.NamedImage&gt; object for the <ph id="ph1">`string`</ph> value of the image-related property.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the collection of <bpt id="p2">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.NamedImage"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Invalidates the entire surface of the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and causes the <bpt id="p2">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> control to be redrawn.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Invalidates the specified area of the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>This method adds the specified area to the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; control's update area, which is the area that will be repainted at the next paint operation.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>This method also causes a paint message to be sent to the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; control.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Rectangle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that specifies the area to invalidate.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Gets or sets a flag that determines if a smooth gradient is applied when shadows are drawn.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>If the value of the <ph id="ph1">`ShadowOffset`</ph> property for a series, data point, chart area or legend is nonzero, a shadow will be applied using a color set by their <ph id="ph2">`ShadowColor`</ph> property.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>If the value of the IsSoftShadows property is <ph id="ph1">`true`</ph>, a smooth gradient will be applied to the shadow.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if shadows are drawn using smoothing; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.LegendCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that stores all <bpt id="p2">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Legend"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects used by the <bpt id="p3">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>This collection property stores all &lt;xref:System.Windows.Forms.DataVisualization.Charting.Legend&gt; objects used by the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; control.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.LegendCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the <bpt id="p2">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Legend"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects used by the chart.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Loads a template into the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control from an image stream.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Use this method if you want to load a template from a stream, such as a memory stream, file stream, and so forth.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Make sure to set the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A&gt; property to <ph id="ph1">`true`</ph> before saving the template with the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>If a loaded template has two data series, the appearance properties of the series are applied sequentially to the chart.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>In other words, the first template series appearance properties are assigned to the first series of the chart, the second template series appearance properties are applied to the second series of the chart, then the first template series is used again for the third series of the chart, and so on.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The same holds true for chart areas, and any other collections that have appearance properties.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Templates can be used to simulate custom palettes.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The stream to load from.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Loads a template with the specified filename from the disk.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The file name of the template to load.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>You must specify the full path of the template to be loaded from the disk.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;xref:System.Windows.Forms.Control.OnCursorChanged*&gt; method and raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> events.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart.Customize"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart.CustomizeLegend"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The name of the legend.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;xref:System.Windows.Forms.Control.OnDoubleClick*&gt; method.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; object that contains the event arguments.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart.FormatNumber"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the event arguments.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;xref:System.Windows.Forms.Control.OnLocationChanged*&gt; method.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; object that contains the event arguments.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;xref:System.Windows.Forms.Control.OnMouseDown*&gt; method.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.MouseEventArgs&gt; object that contains the event arguments.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;xref:System.Windows.Forms.Control.OnMouseMove*&gt; method.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.MouseEventArgs&gt; object that contains the event arguments.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;xref:System.Windows.Forms.Control.OnMouseUp*&gt; method.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.MouseEventArgs&gt; object that contains the event arguments.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;xref:System.Windows.Forms.Control.OnPaint*&gt; method.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.PaintEventArgs&gt; object that contains the event arguments.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;xref:System.Windows.Forms.Control.OnPaintBackground*&gt; method.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.PaintEventArgs&gt; object that contains the event arguments.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart.PostPaint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the event arguments.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart.PrePaint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the event arguments.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;xref:System.Windows.Forms.Control.OnResize*&gt; method.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; object that contains the event arguments.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;xref:System.Windows.Forms.Control.OnRightToLeftChanged*&gt; method.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; object that contains the event arguments.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;xref:System.Windows.Forms.Control.OnSystemColorsChanged*&gt; method.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Gets or sets the palette for the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>A palette is used to automatically assign colors to data elements if both of the following conditions have been met:      -   the data points themselves do not have colors assigned to them.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>-   the data series that the data points belong to also does not have an assigned color.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>If no series or data point colors are explicitly specified, the colors used depend on the chart type and the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; object's palette or the palette of an associated series, if one is specified.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the <ph id="ph2">`Palette`</ph> property for both the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; and &lt;xref:System.Windows.Forms.DataVisualization.Charting.Series&gt; objects is set to &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartColorPalette&gt;, and no color is assigned to the relevant data series or data points, the data points will not be drawn, and will be displayed as "empty" areas.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartColorPalette"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value that determines the palette to be used.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Gets or sets an array of custom palette colors.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>If you need more than 16 colors or you want to apply your own colors to the chart, you must define a custom palette.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>A custom palette let you add your own colors in the order you want them to appear on the chart.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>This type of palette is especially helpful if the number of series in your chart is unknown at design time.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>This property has no effect when the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.Palette%2A&gt; property is <bpt id="p1">*</bpt>not<ept id="p1">*</ept> set to       &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartColorPalette&gt;.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that represent the set of colors used for series on the chart.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Occurs when the chart element is painted.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Occurs when the chart element background is painted.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Gets a read-only <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.PrintingManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object used for printing a chart.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>When a chart is printed, all chart elements except scrollbars will be printed.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.DataVisualization.Charting.PrintingManager&gt; object contains the following methods, which are used for basic printing operations:       &lt;xref:System.Windows.Forms.DataVisualization.Charting.PrintingManager.PageSetup%2A&gt;: Displays a Page Setup dialog, which allows the end-user to select paper size, paper source, page orientation, and so forth.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Forms.DataVisualization.Charting.PrintingManager.PrintPreview%2A&gt;: Displays a Print Preview dialog, which allows the end-user to zoom, print the chart, and so forth.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Forms.DataVisualization.Charting.PrintingManager.Print%2A&gt;: Prints the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt;; the Print dialog can optionally be displayed prior to printing.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.PrintingManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object used for printing a chart.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Forces the control to invalidate its client area and immediately redraw itself and any child controls.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Gets or sets the horizontal resolution of the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> renderer.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_double" name="double" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that represents the horizontal resolution of the chart renderer.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Gets or sets the vertical resolution of the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> renderer.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_double" name="double" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that represents the vertical resolution of the chart renderer.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Resets automatically calculated chart property values to "Auto".</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Several chart properties can be set to "Auto"—for example, &lt;xref:System.Windows.Forms.DataVisualization.Charting.Axis.Minimum%2A&gt;; these properties are calculated prior to the chart being rendered.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>"Auto" is usually represented as a &lt;xref:System.Double.NaN&gt; value.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Call this method to reset these properties from their calculated value to "Auto" (&lt;xref:System.Double.NaN&gt;).</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Saves the image to the specifed stream.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The stream in which the image is saved to.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>The image format.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Saves the chart image to the specified stream.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The stream in which the image is saved to.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>The chart image format.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Saves an image to the specified file.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The name of the file in which image is saved to.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>The image format.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Saves the chart image to the specified file.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The name of the file in which image is saved to.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The chart image format.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Occurs when the selection start position or end position is changed.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Occurs when the selection start or end position is about to change.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is used for chart serialization.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Use this property at either design time or run time to serialize the chart.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>For a detailed discussion of the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer&gt; class, refer to the class overview.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.ChartSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is used for chart serialization.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.SeriesCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, which contains <bpt id="p2">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Series"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>This collection property allows you to access the &lt;xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection&gt; class, which stores &lt;xref:System.Windows.Forms.DataVisualization.Charting.Series&gt; objects and also provides methods and properties used to manipulate this collection.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Forms.DataVisualization.Charting.Series&gt; objects store &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; objects, as well as data attributes.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.SeriesCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object which contains <bpt id="p2">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Series"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Gets or sets the size of the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the size of the control.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Gets or sets a flag that determines whether non-critical exceptions should be suppressed.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>If you set this property to <ph id="ph1">`true`</ph>, non-critical exceptions will be suppressed.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; control cannot properly plot the chart using the data and other settings provided, an exception will be thrown.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Although displaying exceptions is useful during application testing, they should not be shown when the application is released.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Setting this property to <ph id="ph2">`true`</ph> may hide serious issues in the user application source code.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>This setting could also cause a chart image to be generated that might misrepresent your data.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>It is highly recommended that this mode be only used in Release builds.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if non-critical exceptions should be suppressed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> type to use when applying anti-aliasing to text.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>If the anti-aliasing is applied to text, the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; control will use this property to determine the type of textual anti-aliasing to apply.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value used to apply anti-aliasing to text.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.TitleCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is used to store all <bpt id="p2">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Title"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects used by the <bpt id="p3">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>The Titles property stores all &lt;xref:System.Windows.Forms.DataVisualization.Charting.Title&gt; objects used by the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt; control.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.TitleCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object  that is used to store all <bpt id="p2">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Title"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects used by the chart control.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Updates the annotations in the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Updates the cursor in the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataVisualization.Charting.Chart"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>