{"nodes":[{"pos":[2282,2370],"content":"Contains session-state values as well as session-level settings for the current request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains session-state values as well as session-level settings for the current request.","pos":[0,88]}]},{"pos":[2383,4031],"content":"ASP.NET provides session-state management to enable you to store information associated with a unique browser session across multiple requests. You can store a collection of values referenced by a key name or by numerical index. Access to session values and functionality is available using the <xref:System.Web.SessionState.HttpSessionState> class, which is accessible through the <xref:System.Web.HttpContext.Session%2A> property of the current <xref:System.Web.HttpContext> or the <xref:System.Web.UI.Page.Session%2A> property of the <xref:System.Web.UI.Page>. The <xref:System.Web.SessionState.HttpSessionState> class accesses session-state values and session-level settings by referencing a session-state container, which is an implementation of the <xref:System.Web.SessionState.IHttpSessionState> interface that has been populated with session-state data and added to the <xref:System.Web.HttpContext> of the current request by the session-state module for the <xref:System.Web.HttpApplication>.       The <xref:System.Web.SessionState.HttpSessionState> class calls the HttpSessionStateContainer class, which manages session settings and values in memory.       The HttpSessionStateContainer class is the ASP.NET implementation of the <xref:System.Web.SessionState.IHttpSessionState> interface. The HttpSessionStateContainer class is not intended to be called from application code. If you replace the <xref:System.Web.SessionState.SessionStateModule> with a custom session-state module, you can use the HttpSessionStateContainer class, or supply your own implementation of the <xref:System.Web.SessionState.IHttpSessionState> interface.","needQuote":false,"needEscape":true,"nodes":[{"content":"ASP.NET provides session-state management to enable you to store information associated with a unique browser session across multiple requests. You can store a collection of values referenced by a key name or by numerical index. Access to session values and functionality is available using the <xref:System.Web.SessionState.HttpSessionState> class, which is accessible through the <xref:System.Web.HttpContext.Session%2A> property of the current <xref:System.Web.HttpContext> or the <xref:System.Web.UI.Page.Session%2A> property of the <xref:System.Web.UI.Page>. The <xref:System.Web.SessionState.HttpSessionState> class accesses session-state values and session-level settings by referencing a session-state container, which is an implementation of the <xref:System.Web.SessionState.IHttpSessionState> interface that has been populated with session-state data and added to the <xref:System.Web.HttpContext> of the current request by the session-state module for the <xref:System.Web.HttpApplication>.       The <xref:System.Web.SessionState.HttpSessionState> class calls the HttpSessionStateContainer class, which manages session settings and values in memory.       The HttpSessionStateContainer class is the ASP.NET implementation of the <xref:System.Web.SessionState.IHttpSessionState> interface. The HttpSessionStateContainer class is not intended to be called from application code. If you replace the <xref:System.Web.SessionState.SessionStateModule> with a custom session-state module, you can use the HttpSessionStateContainer class, or supply your own implementation of the <xref:System.Web.SessionState.IHttpSessionState> interface.","pos":[0,1644],"nodes":[{"content":"ASP.NET provides session-state management to enable you to store information associated with a unique browser session across multiple requests.","pos":[0,143]},{"content":"You can store a collection of values referenced by a key name or by numerical index.","pos":[144,228]},{"content":"Access to session values and functionality is available using the &lt;xref:System.Web.SessionState.HttpSessionState&gt; class, which is accessible through the &lt;xref:System.Web.HttpContext.Session%2A&gt; property of the current &lt;xref:System.Web.HttpContext&gt; or the &lt;xref:System.Web.UI.Page.Session%2A&gt; property of the &lt;xref:System.Web.UI.Page&gt;.","pos":[229,563],"source":" Access to session values and functionality is available using the <xref:System.Web.SessionState.HttpSessionState> class, which is accessible through the <xref:System.Web.HttpContext.Session%2A> property of the current <xref:System.Web.HttpContext> or the <xref:System.Web.UI.Page.Session%2A> property of the <xref:System.Web.UI.Page>."},{"content":"The &lt;xref:System.Web.SessionState.HttpSessionState&gt; class accesses session-state values and session-level settings by referencing a session-state container, which is an implementation of the &lt;xref:System.Web.SessionState.IHttpSessionState&gt; interface that has been populated with session-state data and added to the &lt;xref:System.Web.HttpContext&gt; of the current request by the session-state module for the &lt;xref:System.Web.HttpApplication&gt;.","pos":[564,1002],"source":" The <xref:System.Web.SessionState.HttpSessionState> class accesses session-state values and session-level settings by referencing a session-state container, which is an implementation of the <xref:System.Web.SessionState.IHttpSessionState> interface that has been populated with session-state data and added to the <xref:System.Web.HttpContext> of the current request by the session-state module for the <xref:System.Web.HttpApplication>."},{"content":"The &lt;xref:System.Web.SessionState.HttpSessionState&gt; class calls the HttpSessionStateContainer class, which manages session settings and values in memory.","pos":[1009,1162],"source":"       The <xref:System.Web.SessionState.HttpSessionState> class calls the HttpSessionStateContainer class, which manages session settings and values in memory."},{"content":"The HttpSessionStateContainer class is the ASP.NET implementation of the &lt;xref:System.Web.SessionState.IHttpSessionState&gt; interface.","pos":[1169,1301],"source":"       The HttpSessionStateContainer class is the ASP.NET implementation of the <xref:System.Web.SessionState.IHttpSessionState> interface."},{"content":"The HttpSessionStateContainer class is not intended to be called from application code.","pos":[1302,1389]},{"content":"If you replace the &lt;xref:System.Web.SessionState.SessionStateModule&gt; with a custom session-state module, you can use the HttpSessionStateContainer class, or supply your own implementation of the &lt;xref:System.Web.SessionState.IHttpSessionState&gt; interface.","pos":[1390,1644],"source":" If you replace the <xref:System.Web.SessionState.SessionStateModule> with a custom session-state module, you can use the HttpSessionStateContainer class, or supply your own implementation of the <xref:System.Web.SessionState.IHttpSessionState> interface."}]}]},{"pos":[5750,5900],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Web.SessionState.HttpSessionStateContainer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and initializes it with the specified settings and values.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Web.SessionState.HttpSessionStateContainer\"></xref> object and initializes it with the specified settings and values."},{"pos":[7141,7293],"content":"A session identifier for the new session. If <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, an <xref:System.ArgumentException> is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"A session identifier for the new session.","pos":[0,41]},{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, an &lt;xref:System.ArgumentException&gt; is thrown.","pos":[42,152],"source":" If <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, an <xref:System.ArgumentException> is thrown."}]},{"pos":[7400,7544],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.SessionState.ISessionStateItemCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the session values for the new session-state provider.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.SessionState.ISessionStateItemCollection\"></xref> that contains the session values for the new session-state provider."},{"pos":[7639,7979],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpStaticObjectsCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the objects declared by <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;object Runat=&amp;quot;Server&amp;quot; Scope=&amp;quot;Session&amp;quot;/&amp;gt;\" name=\"&amp;lt;object Runat=&amp;quot;Server&amp;quot; Scope=&amp;quot;Session&amp;quot;/&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> tags within the ASP.NET application file Global.asax.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.HttpStaticObjectsCollection\"></xref> that specifies the objects declared by <xref uid=\"langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;\" name=\"&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;\" href=\"\"></xref> tags within the ASP.NET application file Global.asax."},{"pos":[8042,8156],"content":"The amount of time, in minutes, allowed between requests before the session-state provider terminates the session.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount of time, in minutes, allowed between requests before the session-state provider terminates the session.","pos":[0,114]}]},{"pos":[8224,8421],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate the session was created with the current request; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate the session was created with the current request; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8500,8608],"content":"The <xref:System.Web.SessionState.HttpSessionStateContainer.CookieMode*> for the new session-state provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Web.SessionState.HttpSessionStateContainer.CookieMode*&gt; for the new session-state provider.","pos":[0,108],"source":"The <xref:System.Web.SessionState.HttpSessionStateContainer.CookieMode*> for the new session-state provider."}]},{"pos":[8696,8822],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.SessionState.SessionStateMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the current session-state mode.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.SessionState.SessionStateMode\"></xref> values that specifies the current session-state mode."},{"pos":[8890,9063],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate the session is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate the session is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9249,9329],"content":"<ph id=\"ph1\">&lt;code&gt;id&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>id</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9746,9785],"content":"Marks the current session as abandoned.","needQuote":true,"needEscape":true,"nodes":[{"content":"Marks the current session as abandoned.","pos":[0,39]}]},{"pos":[9797,10239],"content":"The Abandon method of the <xref:System.Web.SessionState.HttpSessionStateContainer> marks the <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property as `true`. A custom session module can then query the <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property and remove the session information if the <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property is `true`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Abandon method of the &lt;xref:System.Web.SessionState.HttpSessionStateContainer&gt; marks the &lt;xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A&gt; property as <ph id=\"ph1\">`true`</ph>.","pos":[0,184],"source":"The Abandon method of the <xref:System.Web.SessionState.HttpSessionStateContainer> marks the <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property as `true`."},{"content":"A custom session module can then query the &lt;xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A&gt; property and remove the session information if the &lt;xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A&gt; property is <ph id=\"ph1\">`true`</ph>.","pos":[185,442],"source":" A custom session module can then query the <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property and remove the session information if the <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property is `true`."}]},{"pos":[10887,10935],"content":"Adds a new item to the session-state collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a new item to the session-state collection.","pos":[0,48]}]},{"pos":[10947,11073],"content":"If the <ph id=\"ph1\">`name`</ph> parameter refers to an existing session-state item, the existing item is overwritten with the specified <ph id=\"ph2\">`value`</ph>.","needQuote":true,"needEscape":true,"source":"If the `name` parameter refers to an existing session-state item, the existing item is overwritten with the specified `value`."},{"pos":[11218,11278],"content":"The name of the item to add to the session-state collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the item to add to the session-state collection.","pos":[0,60]}]},{"pos":[11340,11401],"content":"The value of the item to add to the session-state collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the item to add to the session-state collection.","pos":[0,61]}]},{"pos":[11892,11954],"content":"Removes all values and keys from the session-state collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all values and keys from the session-state collection.","pos":[0,62]}]},{"pos":[12522,12588],"content":"Gets or sets the character-set identifier for the current session.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the character-set identifier for the current session.","pos":[0,66]}]},{"pos":[12601,13062],"content":"A character set (code page) is used to interpret multibyte character data, determining character value, and therefore sort order. Code-page settings apply only to multibyte character data, not to Unicode character data.       This CodePage property is provided for compatibility with earlier versions of ASP only. If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Web.HttpResponse.ContentEncoding%2A> property instead.","needQuote":false,"needEscape":true,"nodes":[{"content":"A character set (code page) is used to interpret multibyte character data, determining character value, and therefore sort order. Code-page settings apply only to multibyte character data, not to Unicode character data.       This CodePage property is provided for compatibility with earlier versions of ASP only. If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Web.HttpResponse.ContentEncoding%2A> property instead.","pos":[0,459],"nodes":[{"content":"A character set (code page) is used to interpret multibyte character data, determining character value, and therefore sort order.","pos":[0,129]},{"content":"Code-page settings apply only to multibyte character data, not to Unicode character data.","pos":[130,219]},{"content":"This CodePage property is provided for compatibility with earlier versions of ASP only.","pos":[226,313]},{"content":"If you do not need to maintain backward compatibility with ASP pages, use the &lt;xref:System.Web.HttpResponse.ContentEncoding%2A&gt; property instead.","pos":[314,459],"source":" If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Web.HttpResponse.ContentEncoding%2A> property instead."}]}]},{"pos":[13177,13230],"content":"The character-set identifier for the current session.","needQuote":true,"needEscape":true,"nodes":[{"content":"The character-set identifier for the current session.","pos":[0,53]}]},{"pos":[13747,13837],"content":"Gets a value that indicates whether the application is configured for cookieless sessions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the application is configured for cookieless sessions.","pos":[0,90]}]},{"pos":[13849,14173],"content":"When &lt;xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A&gt; is <ph id=\"ph1\">`true`</ph>, the &lt;xref:System.Web.SessionState.HttpSessionState.CookieMode%2A&gt; property returns &lt;xref:System.Web.HttpCookieMode&gt;; otherwise, the &lt;xref:System.Web.SessionState.HttpSessionState.CookieMode%2A&gt; property returns &lt;xref:System.Web.HttpCookieMode&gt;.","needQuote":true,"needEscape":true,"source":"When <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> is `true`, the <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> property returns <xref:System.Web.HttpCookieMode>; otherwise, the <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> property returns <xref:System.Web.HttpCookieMode>."},{"pos":[14319,14524],"content":"One of the <xref href=\"System.Web.HttpCookieMode\"></xref> values that indicates whether the application is configured for cookieless sessions. The default is <xref href=\"System.Web.HttpCookieMode\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpCookieMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that indicates whether the application is configured for cookieless sessions.","pos":[0,142],"source":"One of the <xref href=\"System.Web.HttpCookieMode\"></xref> values that indicates whether the application is configured for cookieless sessions."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpCookieMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[143,205],"source":" The default is <xref href=\"System.Web.HttpCookieMode\"></xref>."}]},{"pos":[15114,15233],"content":"Copies the collection of session-state values to a one-dimensional array, starting at the specified index in the array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the collection of session-state values to a one-dimensional array, starting at the specified index in the array.","pos":[0,119]}]},{"pos":[15378,15435],"content":"The <xref:System.Array> that receives the session values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Array&gt; that receives the session values.","pos":[0,57],"source":"The <xref:System.Array> that receives the session values."}]},{"pos":[15496,15554],"content":"The zero-based index in <ph id=\"ph1\">`array`</ph> from which copying starts.","needQuote":true,"needEscape":true,"source":"The zero-based index in `array` from which copying starts."},{"pos":[16044,16101],"content":"Gets the number of items in the session-state collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of items in the session-state collection.","pos":[0,57]}]},{"pos":[16207,16245],"content":"The number of items in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of items in the collection.","pos":[0,38]}]},{"pos":[16778,16885],"content":"Returns an enumerator that can be used to read all the session-state variable names in the current session.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that can be used to read all the session-state variable names in the current session.","pos":[0,107]}]},{"pos":[17058,17175],"content":"An <xref:System.Collections.IEnumerator> that can iterate through the variable names in the session-state collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerator&gt; that can iterate through the variable names in the session-state collection.","pos":[0,117],"source":"An <xref:System.Collections.IEnumerator> that can iterate through the variable names in the session-state collection."}]},{"pos":[17702,17773],"content":"Gets a value indicating whether the current session has been abandoned.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the current session has been abandoned.","pos":[0,71]}]},{"pos":[17888,18066],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current session has been abandoned; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current session has been abandoned; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18596,18694],"content":"Gets a value indicating whether the session ID is embedded in the URL or stored in an HTTP cookie.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the session ID is embedded in the URL or stored in an HTTP cookie.","pos":[0,98]}]},{"pos":[18706,18889],"content":"For a discussion of cookieless sessions, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property of the <xref:System.Web.SessionState.HttpSessionState> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"For a discussion of cookieless sessions, see the &lt;xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A&gt; property of the &lt;xref:System.Web.SessionState.HttpSessionState&gt; class.","pos":[0,183],"source":"For a discussion of cookieless sessions, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property of the <xref:System.Web.SessionState.HttpSessionState> class."}]},{"pos":[19005,19179],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the session is embedded in the URL; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the session is embedded in the URL; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19710,19791],"content":"Gets a value indicating whether the session was created with the current request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the session was created with the current request.","pos":[0,81]}]},{"pos":[19907,20095],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the session was created with the current request; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the session was created with the current request; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20616,20673],"content":"Gets a value indicating whether the session is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the session is read-only.","pos":[0,57]}]},{"pos":[20787,20951],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the session is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the session is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21490,21601],"content":"Gets a value indicating whether access to the collection of session-state values is synchronized (thread safe).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether access to the collection of session-state values is synchronized (thread safe).","pos":[0,111]}]},{"pos":[21613,21666],"content":"Application code does not normally use this property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Application code does not normally use this property.","pos":[0,53]}]},{"pos":[21784,21972],"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, because thread-safe <bpt id=\"p2\">&lt;xref href=\"System.Web.SessionState.HttpSessionStateContainer\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects are not supported.","needQuote":true,"needEscape":true,"source":"Always <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, because thread-safe <xref href=\"System.Web.SessionState.HttpSessionStateContainer\"></xref> objects are not supported."},{"pos":[22514,22562],"content":"Gets or sets a session value by numerical index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a session value by numerical index.","pos":[0,48]}]},{"pos":[22706,22747],"content":"The numerical index of the session value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The numerical index of the session value.","pos":[0,41]}]},{"pos":[22805,22859],"content":"The session-state value stored at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The session-state value stored at the specified index.","pos":[0,54]}]},{"pos":[23396,23433],"content":"Gets or sets a session value by name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a session value by name.","pos":[0,37]}]},{"pos":[23579,23613],"content":"The key name of the session value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key name of the session value.","pos":[0,34]}]},{"pos":[23671,23719],"content":"The session-state value with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The session-state value with the specified name.","pos":[0,48]}]},{"pos":[24202,24286],"content":"Gets a collection of the keys for all values stored in the session-state collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of the keys for all values stored in the session-state collection.","pos":[0,84]}]},{"pos":[24516,24633],"content":"The <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> that contains all the session keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt; that contains all the session keys.","pos":[0,117],"source":"The <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> that contains all the session keys."}]},{"pos":[25116,25181],"content":"Gets or sets the locale identifier (LCID) of the current session.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the locale identifier (LCID) of the current session.","pos":[0,65]}]},{"pos":[25194,25610],"content":"The LCID property is provided for compatibility with earlier versions of ASP only. If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Globalization.CultureInfo.LCID%2A> property instead.       ASP.NET does not store the locale identifier in session state. The LCID property accesses the <xref:System.Globalization.CultureInfo.LCID%2A> property to get and set the identifier.","needQuote":false,"needEscape":true,"nodes":[{"content":"The LCID property is provided for compatibility with earlier versions of ASP only. If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Globalization.CultureInfo.LCID%2A> property instead.       ASP.NET does not store the locale identifier in session state. The LCID property accesses the <xref:System.Globalization.CultureInfo.LCID%2A> property to get and set the identifier.","pos":[0,414],"nodes":[{"content":"The LCID property is provided for compatibility with earlier versions of ASP only.","pos":[0,82]},{"content":"If you do not need to maintain backward compatibility with ASP pages, use the &lt;xref:System.Globalization.CultureInfo.LCID%2A&gt; property instead.","pos":[83,226],"source":" If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Globalization.CultureInfo.LCID%2A> property instead."},{"content":"ASP.NET does not store the locale identifier in session state.","pos":[233,295]},{"content":"The LCID property accesses the &lt;xref:System.Globalization.CultureInfo.LCID%2A&gt; property to get and set the identifier.","pos":[296,414],"source":" The LCID property accesses the <xref:System.Globalization.CultureInfo.LCID%2A> property to get and set the identifier."}]}]},{"pos":[25721,25822],"content":"A <xref:System.Globalization.CultureInfo> instance that specifies the culture of the current session.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Globalization.CultureInfo&gt; instance that specifies the culture of the current session.","pos":[0,101],"source":"A <xref:System.Globalization.CultureInfo> instance that specifies the culture of the current session."}]},{"pos":[26305,26341],"content":"Gets the current session-state mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the current session-state mode.","pos":[0,36]}]},{"pos":[26353,26611],"content":"For information about how to configure your server for &lt;xref:System.Web.SessionState.SessionStateMode&gt; or &lt;xref:System.Web.SessionState.SessionStateMode&gt; session-state storage mode, see <bpt id=\"p1\">[</bpt>ASP.NET Session State Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For information about how to configure your server for <xref:System.Web.SessionState.SessionStateMode> or <xref:System.Web.SessionState.SessionStateMode> session-state storage mode, see [ASP.NET Session State Overview](~/add/includes/ajax-current-ext-md.md)."},{"pos":[26781,26861],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.SessionState.SessionStateMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.SessionState.SessionStateMode\"></xref> values."},{"pos":[27406,27456],"content":"Deletes an item from the session-state collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes an item from the session-state collection.","pos":[0,50]}]},{"pos":[27468,27612],"content":"If the session-state collection does not contain an element with the specified `name`, the collection remains unchanged. No exception is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the session-state collection does not contain an element with the specified <ph id=\"ph1\">`name`</ph>, the collection remains unchanged.","pos":[0,120],"source":"If the session-state collection does not contain an element with the specified `name`, the collection remains unchanged."},{"content":"No exception is thrown.","pos":[121,144]}]},{"pos":[27746,27811],"content":"The name of the item to delete from the session-state collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the item to delete from the session-state collection.","pos":[0,65]}]},{"pos":[28325,28357],"content":"Clears all session-state values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears all session-state values.","pos":[0,32]}]},{"pos":[28369,28475],"content":"RemoveAll performs the same function as <xref:System.Web.SessionState.HttpSessionStateContainer.Clear%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAll performs the same function as &lt;xref:System.Web.SessionState.HttpSessionStateContainer.Clear%2A&gt;.","pos":[0,106],"source":"RemoveAll performs the same function as <xref:System.Web.SessionState.HttpSessionStateContainer.Clear%2A>."}]},{"pos":[29098,29169],"content":"Deletes an item at a specified index from the session-state collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes an item at a specified index from the session-state collection.","pos":[0,71]}]},{"pos":[29303,29369],"content":"The index of the item to remove from the session-state collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the item to remove from the session-state collection.","pos":[0,66]}]},{"pos":[30169,30212],"content":"Gets the unique identifier for the session.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the unique identifier for the session.","pos":[0,43]}]},{"pos":[30326,30356],"content":"The unique session identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique session identifier.","pos":[0,30]}]},{"pos":[30889,31168],"content":"Gets a collection of objects declared by <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;object Runat=&amp;quot;Server&amp;quot; Scope=&amp;quot;Session&amp;quot;/&amp;gt;\" name=\"&amp;lt;object Runat=&amp;quot;Server&amp;quot; Scope=&amp;quot;Session&amp;quot;/&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> tags within the ASP.NET application file Global.asax.","needQuote":true,"needEscape":true,"source":"Gets a collection of objects declared by <xref uid=\"langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;\" name=\"&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;\" href=\"\"></xref> tags within the ASP.NET application file Global.asax."},{"pos":[31181,31578],"content":"If an object on a page does not support serialization and <xref:System.Web.SessionState.HttpSessionStateContainer.Mode%2A> is out-of-process (<xref:System.Web.SessionState.SessionStateMode> or <xref:System.Web.SessionState.SessionStateMode>), the object will not be created and will not be added to this collection.       StaticObjects is provided for compatibility with earlier versions of ASP.","needQuote":false,"needEscape":true,"nodes":[{"content":"If an object on a page does not support serialization and <xref:System.Web.SessionState.HttpSessionStateContainer.Mode%2A> is out-of-process (<xref:System.Web.SessionState.SessionStateMode> or <xref:System.Web.SessionState.SessionStateMode>), the object will not be created and will not be added to this collection.       StaticObjects is provided for compatibility with earlier versions of ASP.","pos":[0,395],"nodes":[{"content":"If an object on a page does not support serialization and &lt;xref:System.Web.SessionState.HttpSessionStateContainer.Mode%2A&gt; is out-of-process (&lt;xref:System.Web.SessionState.SessionStateMode&gt; or &lt;xref:System.Web.SessionState.SessionStateMode&gt;), the object will not be created and will not be added to this collection.","pos":[0,315],"source":"If an object on a page does not support serialization and <xref:System.Web.SessionState.HttpSessionStateContainer.Mode%2A> is out-of-process (<xref:System.Web.SessionState.SessionStateMode> or <xref:System.Web.SessionState.SessionStateMode>), the object will not be created and will not be added to this collection."},{"content":"StaticObjects is provided for compatibility with earlier versions of ASP.","pos":[322,395]}]}]},{"pos":[31754,31869],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpStaticObjectsCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing objects declared in the Global.asax file.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.HttpStaticObjectsCollection\"></xref> containing objects declared in the Global.asax file."},{"pos":[32381,32477],"content":"Gets an object that can be used to synchronize access to the collection of session-state values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object that can be used to synchronize access to the collection of session-state values.","pos":[0,96]}]},{"pos":[32590,32657],"content":"An object that can be used to synchronize access to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that can be used to synchronize access to the collection.","pos":[0,67]}]},{"pos":[33159,33287],"content":"Gets and sets the amount of time, in minutes, allowed between requests before the session-state provider terminates the session.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets and sets the amount of time, in minutes, allowed between requests before the session-state provider terminates the session.","pos":[0,128]}]},{"pos":[33400,33432],"content":"The time-out period, in minutes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time-out period, in minutes.","pos":[0,32]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.SessionState.HttpSessionStateContainer\n  id: HttpSessionStateContainer\n  children:\n  - System.Web.SessionState.HttpSessionStateContainer.#ctor(System.String,System.Web.SessionState.ISessionStateItemCollection,System.Web.HttpStaticObjectsCollection,System.Int32,System.Boolean,System.Web.HttpCookieMode,System.Web.SessionState.SessionStateMode,System.Boolean)\n  - System.Web.SessionState.HttpSessionStateContainer.Abandon\n  - System.Web.SessionState.HttpSessionStateContainer.Add(System.String,System.Object)\n  - System.Web.SessionState.HttpSessionStateContainer.Clear\n  - System.Web.SessionState.HttpSessionStateContainer.CodePage\n  - System.Web.SessionState.HttpSessionStateContainer.CookieMode\n  - System.Web.SessionState.HttpSessionStateContainer.CopyTo(System.Array,System.Int32)\n  - System.Web.SessionState.HttpSessionStateContainer.Count\n  - System.Web.SessionState.HttpSessionStateContainer.GetEnumerator\n  - System.Web.SessionState.HttpSessionStateContainer.IsAbandoned\n  - System.Web.SessionState.HttpSessionStateContainer.IsCookieless\n  - System.Web.SessionState.HttpSessionStateContainer.IsNewSession\n  - System.Web.SessionState.HttpSessionStateContainer.IsReadOnly\n  - System.Web.SessionState.HttpSessionStateContainer.IsSynchronized\n  - System.Web.SessionState.HttpSessionStateContainer.Item(System.Int32)\n  - System.Web.SessionState.HttpSessionStateContainer.Item(System.String)\n  - System.Web.SessionState.HttpSessionStateContainer.Keys\n  - System.Web.SessionState.HttpSessionStateContainer.LCID\n  - System.Web.SessionState.HttpSessionStateContainer.Mode\n  - System.Web.SessionState.HttpSessionStateContainer.Remove(System.String)\n  - System.Web.SessionState.HttpSessionStateContainer.RemoveAll\n  - System.Web.SessionState.HttpSessionStateContainer.RemoveAt(System.Int32)\n  - System.Web.SessionState.HttpSessionStateContainer.SessionID\n  - System.Web.SessionState.HttpSessionStateContainer.StaticObjects\n  - System.Web.SessionState.HttpSessionStateContainer.SyncRoot\n  - System.Web.SessionState.HttpSessionStateContainer.Timeout\n  langs:\n  - csharp\n  name: HttpSessionStateContainer\n  nameWithType: HttpSessionStateContainer\n  fullName: System.Web.SessionState.HttpSessionStateContainer\n  type: Class\n  summary: Contains session-state values as well as session-level settings for the current request.\n  remarks: \"ASP.NET provides session-state management to enable you to store information associated with a unique browser session across multiple requests. You can store a collection of values referenced by a key name or by numerical index. Access to session values and functionality is available using the <xref:System.Web.SessionState.HttpSessionState> class, which is accessible through the <xref:System.Web.HttpContext.Session%2A> property of the current <xref:System.Web.HttpContext> or the <xref:System.Web.UI.Page.Session%2A> property of the <xref:System.Web.UI.Page>. The <xref:System.Web.SessionState.HttpSessionState> class accesses session-state values and session-level settings by referencing a session-state container, which is an implementation of the <xref:System.Web.SessionState.IHttpSessionState> interface that has been populated with session-state data and added to the <xref:System.Web.HttpContext> of the current request by the session-state module for the <xref:System.Web.HttpApplication>.  \\n  \\n The <xref:System.Web.SessionState.HttpSessionState> class calls the HttpSessionStateContainer class, which manages session settings and values in memory.  \\n  \\n The HttpSessionStateContainer class is the ASP.NET implementation of the <xref:System.Web.SessionState.IHttpSessionState> interface. The HttpSessionStateContainer class is not intended to be called from application code. If you replace the <xref:System.Web.SessionState.SessionStateModule> with a custom session-state module, you can use the HttpSessionStateContainer class, or supply your own implementation of the <xref:System.Web.SessionState.IHttpSessionState> interface.\"\n  example:\n  - For an example of a custom session-state module that uses the HttpSessionStateContainer class as the session-state container for the current request, see the <xref:System.Web.SessionState.SessionStateUtility> class overview.\n  syntax:\n    content: 'public class HttpSessionStateContainer : System.Web.SessionState.IHttpSessionState'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Web.SessionState.IHttpSessionState\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.#ctor(System.String,System.Web.SessionState.ISessionStateItemCollection,System.Web.HttpStaticObjectsCollection,System.Int32,System.Boolean,System.Web.HttpCookieMode,System.Web.SessionState.SessionStateMode,System.Boolean)\n  id: '#ctor(System.String,System.Web.SessionState.ISessionStateItemCollection,System.Web.HttpStaticObjectsCollection,System.Int32,System.Boolean,System.Web.HttpCookieMode,System.Web.SessionState.SessionStateMode,System.Boolean)'\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: HttpSessionStateContainer(String,ISessionStateItemCollection,HttpStaticObjectsCollection,Int32,Boolean,HttpCookieMode,SessionStateMode,Boolean)\n  nameWithType: HttpSessionStateContainer.HttpSessionStateContainer(String,ISessionStateItemCollection,HttpStaticObjectsCollection,Int32,Boolean,HttpCookieMode,SessionStateMode,Boolean)\n  fullName: System.Web.SessionState.HttpSessionStateContainer.HttpSessionStateContainer(String,ISessionStateItemCollection,HttpStaticObjectsCollection,Int32,Boolean,HttpCookieMode,SessionStateMode,Boolean)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Creates a new <xref href=\"System.Web.SessionState.HttpSessionStateContainer\"></xref> object and initializes it with the specified settings and values.\n  remarks: ''\n  example:\n  - \"The following code example shows the <xref:System.Web.HttpApplication.AcquireRequestState> event handler for a custom session-state module that populates a new <xref:System.Web.SessionState.HttpSessionStateContainer> object with new or existing session information and adds it to the <xref:System.Web.HttpContext> of the current request using the <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> method. For a full code example of a custom session-state module, see the <xref:System.Web.SessionState.SessionStateUtility> class overview.  \\n  \\n [!code-vb[System.Web.SessionState.SessionStateUtility#4](~/add/codesnippet/visualbasic/c2eb8b4d-8f36-4d66-a14a-_1.vb)]\\n [!code-cs[System.Web.SessionState.SessionStateUtility#4](~/add/codesnippet/csharp/c2eb8b4d-8f36-4d66-a14a-_1.cs)]\"\n  syntax:\n    content: public HttpSessionStateContainer (string id, System.Web.SessionState.ISessionStateItemCollection sessionItems, System.Web.HttpStaticObjectsCollection staticObjects, int timeout, bool newSession, System.Web.HttpCookieMode cookieMode, System.Web.SessionState.SessionStateMode mode, bool isReadonly);\n    parameters:\n    - id: id\n      type: System.String\n      description: A session identifier for the new session. If <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, an <xref:System.ArgumentException> is thrown.\n    - id: sessionItems\n      type: System.Web.SessionState.ISessionStateItemCollection\n      description: An <xref href=\"System.Web.SessionState.ISessionStateItemCollection\"></xref> that contains the session values for the new session-state provider.\n    - id: staticObjects\n      type: System.Web.HttpStaticObjectsCollection\n      description: An <xref href=\"System.Web.HttpStaticObjectsCollection\"></xref> that specifies the objects declared by <xref uid=\"langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;\" name=\"&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;\" href=\"\"></xref> tags within the ASP.NET application file Global.asax.\n    - id: timeout\n      type: System.Int32\n      description: The amount of time, in minutes, allowed between requests before the session-state provider terminates the session.\n    - id: newSession\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate the session was created with the current request; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: cookieMode\n      type: System.Web.HttpCookieMode\n      description: The <xref:System.Web.SessionState.HttpSessionStateContainer.CookieMode*> for the new session-state provider.\n    - id: mode\n      type: System.Web.SessionState.SessionStateMode\n      description: One of the <xref href=\"System.Web.SessionState.SessionStateMode\"></xref> values that specifies the current session-state mode.\n    - id: isReadonly\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate the session is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.SessionState.HttpSessionStateContainer.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>id</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.Abandon\n  id: Abandon\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: Abandon()\n  nameWithType: HttpSessionStateContainer.Abandon()\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Abandon()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Marks the current session as abandoned.\n  remarks: The Abandon method of the <xref:System.Web.SessionState.HttpSessionStateContainer> marks the <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property as `true`. A custom session module can then query the <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property and remove the session information if the <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property is `true`.\n  syntax:\n    content: public void Abandon ();\n    parameters: []\n  overload: System.Web.SessionState.HttpSessionStateContainer.Abandon*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.Add(System.String,System.Object)\n  id: Add(System.String,System.Object)\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: Add(String,Object)\n  nameWithType: HttpSessionStateContainer.Add(String,Object)\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Add(String,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Adds a new item to the session-state collection.\n  remarks: If the `name` parameter refers to an existing session-state item, the existing item is overwritten with the specified `value`.\n  syntax:\n    content: public void Add (string name, object value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the item to add to the session-state collection.\n    - id: value\n      type: System.Object\n      description: The value of the item to add to the session-state collection.\n  overload: System.Web.SessionState.HttpSessionStateContainer.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.Clear\n  id: Clear\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: HttpSessionStateContainer.Clear()\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Clear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Removes all values and keys from the session-state collection.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Web.SessionState.HttpSessionStateContainer.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.CodePage\n  id: CodePage\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: CodePage\n  nameWithType: HttpSessionStateContainer.CodePage\n  fullName: System.Web.SessionState.HttpSessionStateContainer.CodePage\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets or sets the character-set identifier for the current session.\n  remarks: \"A character set (code page) is used to interpret multibyte character data, determining character value, and therefore sort order. Code-page settings apply only to multibyte character data, not to Unicode character data.  \\n  \\n This CodePage property is provided for compatibility with earlier versions of ASP only. If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Web.HttpResponse.ContentEncoding%2A> property instead.\"\n  syntax:\n    content: public int CodePage { get; set; }\n    return:\n      type: System.Int32\n      description: The character-set identifier for the current session.\n  overload: System.Web.SessionState.HttpSessionStateContainer.CodePage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.CookieMode\n  id: CookieMode\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: CookieMode\n  nameWithType: HttpSessionStateContainer.CookieMode\n  fullName: System.Web.SessionState.HttpSessionStateContainer.CookieMode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets a value that indicates whether the application is configured for cookieless sessions.\n  remarks: When <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> is `true`, the <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> property returns <xref:System.Web.HttpCookieMode>; otherwise, the <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> property returns <xref:System.Web.HttpCookieMode>.\n  syntax:\n    content: public System.Web.HttpCookieMode CookieMode { get; }\n    return:\n      type: System.Web.HttpCookieMode\n      description: One of the <xref href=\"System.Web.HttpCookieMode\"></xref> values that indicates whether the application is configured for cookieless sessions. The default is <xref href=\"System.Web.HttpCookieMode\"></xref>.\n  overload: System.Web.SessionState.HttpSessionStateContainer.CookieMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: CopyTo(Array,Int32)\n  nameWithType: HttpSessionStateContainer.CopyTo(Array,Int32)\n  fullName: System.Web.SessionState.HttpSessionStateContainer.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Copies the collection of session-state values to a one-dimensional array, starting at the specified index in the array.\n  syntax:\n    content: public void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The <xref:System.Array> that receives the session values.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in `array` from which copying starts.\n  overload: System.Web.SessionState.HttpSessionStateContainer.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.Count\n  id: Count\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: Count\n  nameWithType: HttpSessionStateContainer.Count\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Count\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets the number of items in the session-state collection.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of items in the collection.\n  overload: System.Web.SessionState.HttpSessionStateContainer.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.GetEnumerator\n  id: GetEnumerator\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: HttpSessionStateContainer.GetEnumerator()\n  fullName: System.Web.SessionState.HttpSessionStateContainer.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Returns an enumerator that can be used to read all the session-state variable names in the current session.\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> that can iterate through the variable names in the session-state collection.\n  overload: System.Web.SessionState.HttpSessionStateContainer.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.IsAbandoned\n  id: IsAbandoned\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: IsAbandoned\n  nameWithType: HttpSessionStateContainer.IsAbandoned\n  fullName: System.Web.SessionState.HttpSessionStateContainer.IsAbandoned\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets a value indicating whether the current session has been abandoned.\n  syntax:\n    content: public bool IsAbandoned { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current session has been abandoned; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.SessionState.HttpSessionStateContainer.IsAbandoned*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.IsCookieless\n  id: IsCookieless\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: IsCookieless\n  nameWithType: HttpSessionStateContainer.IsCookieless\n  fullName: System.Web.SessionState.HttpSessionStateContainer.IsCookieless\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets a value indicating whether the session ID is embedded in the URL or stored in an HTTP cookie.\n  remarks: For a discussion of cookieless sessions, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property of the <xref:System.Web.SessionState.HttpSessionState> class.\n  syntax:\n    content: public bool IsCookieless { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the session is embedded in the URL; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.SessionState.HttpSessionStateContainer.IsCookieless*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.IsNewSession\n  id: IsNewSession\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: IsNewSession\n  nameWithType: HttpSessionStateContainer.IsNewSession\n  fullName: System.Web.SessionState.HttpSessionStateContainer.IsNewSession\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets a value indicating whether the session was created with the current request.\n  syntax:\n    content: public bool IsNewSession { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the session was created with the current request; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.SessionState.HttpSessionStateContainer.IsNewSession*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.IsReadOnly\n  id: IsReadOnly\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: HttpSessionStateContainer.IsReadOnly\n  fullName: System.Web.SessionState.HttpSessionStateContainer.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets a value indicating whether the session is read-only.\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the session is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.SessionState.HttpSessionStateContainer.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.IsSynchronized\n  id: IsSynchronized\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: HttpSessionStateContainer.IsSynchronized\n  fullName: System.Web.SessionState.HttpSessionStateContainer.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets a value indicating whether access to the collection of session-state values is synchronized (thread safe).\n  remarks: Application code does not normally use this property.\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Always <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, because thread-safe <xref href=\"System.Web.SessionState.HttpSessionStateContainer\"></xref> objects are not supported.\n  overload: System.Web.SessionState.HttpSessionStateContainer.IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: HttpSessionStateContainer.Item(Int32)\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets or sets a session value by numerical index.\n  syntax:\n    content: public object this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The numerical index of the session value.\n    return:\n      type: System.Object\n      description: The session-state value stored at the specified index.\n  overload: System.Web.SessionState.HttpSessionStateContainer.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.Item(System.String)\n  id: Item(System.String)\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: HttpSessionStateContainer.Item(String)\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Item(String)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets or sets a session value by name.\n  syntax:\n    content: public object this[string name] { get; set; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The key name of the session value.\n    return:\n      type: System.Object\n      description: The session-state value with the specified name.\n  overload: System.Web.SessionState.HttpSessionStateContainer.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.Keys\n  id: Keys\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: HttpSessionStateContainer.Keys\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Keys\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets a collection of the keys for all values stored in the session-state collection.\n  syntax:\n    content: public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }\n    return:\n      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n      description: The <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> that contains all the session keys.\n  overload: System.Web.SessionState.HttpSessionStateContainer.Keys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.LCID\n  id: LCID\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: LCID\n  nameWithType: HttpSessionStateContainer.LCID\n  fullName: System.Web.SessionState.HttpSessionStateContainer.LCID\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets or sets the locale identifier (LCID) of the current session.\n  remarks: \"The LCID property is provided for compatibility with earlier versions of ASP only. If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Globalization.CultureInfo.LCID%2A> property instead.  \\n  \\n ASP.NET does not store the locale identifier in session state. The LCID property accesses the <xref:System.Globalization.CultureInfo.LCID%2A> property to get and set the identifier.\"\n  syntax:\n    content: public int LCID { get; set; }\n    return:\n      type: System.Int32\n      description: A <xref:System.Globalization.CultureInfo> instance that specifies the culture of the current session.\n  overload: System.Web.SessionState.HttpSessionStateContainer.LCID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.Mode\n  id: Mode\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: Mode\n  nameWithType: HttpSessionStateContainer.Mode\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Mode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets the current session-state mode.\n  remarks: For information about how to configure your server for <xref:System.Web.SessionState.SessionStateMode> or <xref:System.Web.SessionState.SessionStateMode> session-state storage mode, see [ASP.NET Session State Overview](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public System.Web.SessionState.SessionStateMode Mode { get; }\n    return:\n      type: System.Web.SessionState.SessionStateMode\n      description: One of the <xref href=\"System.Web.SessionState.SessionStateMode\"></xref> values.\n  overload: System.Web.SessionState.HttpSessionStateContainer.Mode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: HttpSessionStateContainer.Remove(String)\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Remove(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Deletes an item from the session-state collection.\n  remarks: If the session-state collection does not contain an element with the specified `name`, the collection remains unchanged. No exception is thrown.\n  syntax:\n    content: public void Remove (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the item to delete from the session-state collection.\n  overload: System.Web.SessionState.HttpSessionStateContainer.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.RemoveAll\n  id: RemoveAll\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: RemoveAll()\n  nameWithType: HttpSessionStateContainer.RemoveAll()\n  fullName: System.Web.SessionState.HttpSessionStateContainer.RemoveAll()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Clears all session-state values.\n  remarks: RemoveAll performs the same function as <xref:System.Web.SessionState.HttpSessionStateContainer.Clear%2A>.\n  syntax:\n    content: public void RemoveAll ();\n    parameters: []\n  overload: System.Web.SessionState.HttpSessionStateContainer.RemoveAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: HttpSessionStateContainer.RemoveAt(Int32)\n  fullName: System.Web.SessionState.HttpSessionStateContainer.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Deletes an item at a specified index from the session-state collection.\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the item to remove from the session-state collection.\n  overload: System.Web.SessionState.HttpSessionStateContainer.RemoveAt*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n \\\\- or -  \\n  \\n <code>index</code> is equal to or greater than <xref:System.Web.SessionState.HttpSessionStateContainer.Count*>.\"\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.SessionID\n  id: SessionID\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: SessionID\n  nameWithType: HttpSessionStateContainer.SessionID\n  fullName: System.Web.SessionState.HttpSessionStateContainer.SessionID\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets the unique identifier for the session.\n  syntax:\n    content: public string SessionID { get; }\n    return:\n      type: System.String\n      description: The unique session identifier.\n  overload: System.Web.SessionState.HttpSessionStateContainer.SessionID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.StaticObjects\n  id: StaticObjects\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: StaticObjects\n  nameWithType: HttpSessionStateContainer.StaticObjects\n  fullName: System.Web.SessionState.HttpSessionStateContainer.StaticObjects\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets a collection of objects declared by <xref uid=\"langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;\" name=\"&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;\" href=\"\"></xref> tags within the ASP.NET application file Global.asax.\n  remarks: \"If an object on a page does not support serialization and <xref:System.Web.SessionState.HttpSessionStateContainer.Mode%2A> is out-of-process (<xref:System.Web.SessionState.SessionStateMode> or <xref:System.Web.SessionState.SessionStateMode>), the object will not be created and will not be added to this collection.  \\n  \\n StaticObjects is provided for compatibility with earlier versions of ASP.\"\n  syntax:\n    content: public System.Web.HttpStaticObjectsCollection StaticObjects { get; }\n    return:\n      type: System.Web.HttpStaticObjectsCollection\n      description: An <xref href=\"System.Web.HttpStaticObjectsCollection\"></xref> containing objects declared in the Global.asax file.\n  overload: System.Web.SessionState.HttpSessionStateContainer.StaticObjects*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.SyncRoot\n  id: SyncRoot\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: HttpSessionStateContainer.SyncRoot\n  fullName: System.Web.SessionState.HttpSessionStateContainer.SyncRoot\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets an object that can be used to synchronize access to the collection of session-state values.\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the collection.\n  overload: System.Web.SessionState.HttpSessionStateContainer.SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.HttpSessionStateContainer.Timeout\n  id: Timeout\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  langs:\n  - csharp\n  name: Timeout\n  nameWithType: HttpSessionStateContainer.Timeout\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Timeout\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets and sets the amount of time, in minutes, allowed between requests before the session-state provider terminates the session.\n  syntax:\n    content: public int Timeout { get; set; }\n    return:\n      type: System.Int32\n      description: The time-out period, in minutes.\n  overload: System.Web.SessionState.HttpSessionStateContainer.Timeout*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"An attempt was made to set the Timeout value to an integer value less than 1.  \\n  \\n \\\\- or -  \\n  \\n An attempt was made to set the Timeout value to an integer value greater than the maximum allowed when <xref:System.Web.SessionState.HttpSessionState.Mode*> is set to <xref href=\\\"System.Web.SessionState.SessionStateMode\\\"></xref> or <xref href=\\\"System.Web.SessionState.SessionStateMode\\\"></xref>. The maximum allowed is 525,600 (one year).\"\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Web.SessionState.HttpSessionStateContainer.#ctor(System.String,System.Web.SessionState.ISessionStateItemCollection,System.Web.HttpStaticObjectsCollection,System.Int32,System.Boolean,System.Web.HttpCookieMode,System.Web.SessionState.SessionStateMode,System.Boolean)\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: HttpSessionStateContainer(String,ISessionStateItemCollection,HttpStaticObjectsCollection,Int32,Boolean,HttpCookieMode,SessionStateMode,Boolean)\n  nameWithType: HttpSessionStateContainer.HttpSessionStateContainer(String,ISessionStateItemCollection,HttpStaticObjectsCollection,Int32,Boolean,HttpCookieMode,SessionStateMode,Boolean)\n  fullName: System.Web.SessionState.HttpSessionStateContainer.HttpSessionStateContainer(String,ISessionStateItemCollection,HttpStaticObjectsCollection,Int32,Boolean,HttpCookieMode,SessionStateMode,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.SessionState.ISessionStateItemCollection\n  parent: System.Web.SessionState\n  isExternal: false\n  name: ISessionStateItemCollection\n  nameWithType: ISessionStateItemCollection\n  fullName: System.Web.SessionState.ISessionStateItemCollection\n- uid: System.Web.HttpStaticObjectsCollection\n  parent: System.Web\n  isExternal: false\n  name: HttpStaticObjectsCollection\n  nameWithType: HttpStaticObjectsCollection\n  fullName: System.Web.HttpStaticObjectsCollection\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.HttpCookieMode\n  parent: System.Web\n  isExternal: false\n  name: HttpCookieMode\n  nameWithType: HttpCookieMode\n  fullName: System.Web.HttpCookieMode\n- uid: System.Web.SessionState.SessionStateMode\n  parent: System.Web.SessionState\n  isExternal: false\n  name: SessionStateMode\n  nameWithType: SessionStateMode\n  fullName: System.Web.SessionState.SessionStateMode\n- uid: System.Web.SessionState.HttpSessionStateContainer.Abandon\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Abandon()\n  nameWithType: HttpSessionStateContainer.Abandon()\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Abandon()\n- uid: System.Web.SessionState.HttpSessionStateContainer.Add(System.String,System.Object)\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Add(String,Object)\n  nameWithType: HttpSessionStateContainer.Add(String,Object)\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Add(String,Object)\n- uid: System.Web.SessionState.HttpSessionStateContainer.Clear\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Clear()\n  nameWithType: HttpSessionStateContainer.Clear()\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Clear()\n- uid: System.Web.SessionState.HttpSessionStateContainer.CodePage\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: CodePage\n  nameWithType: HttpSessionStateContainer.CodePage\n  fullName: System.Web.SessionState.HttpSessionStateContainer.CodePage\n- uid: System.Web.SessionState.HttpSessionStateContainer.CookieMode\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: CookieMode\n  nameWithType: HttpSessionStateContainer.CookieMode\n  fullName: System.Web.SessionState.HttpSessionStateContainer.CookieMode\n- uid: System.Web.SessionState.HttpSessionStateContainer.CopyTo(System.Array,System.Int32)\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: CopyTo(Array,Int32)\n  nameWithType: HttpSessionStateContainer.CopyTo(Array,Int32)\n  fullName: System.Web.SessionState.HttpSessionStateContainer.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Web.SessionState.HttpSessionStateContainer.Count\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Count\n  nameWithType: HttpSessionStateContainer.Count\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Count\n- uid: System.Web.SessionState.HttpSessionStateContainer.GetEnumerator\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: HttpSessionStateContainer.GetEnumerator()\n  fullName: System.Web.SessionState.HttpSessionStateContainer.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Web.SessionState.HttpSessionStateContainer.IsAbandoned\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: IsAbandoned\n  nameWithType: HttpSessionStateContainer.IsAbandoned\n  fullName: System.Web.SessionState.HttpSessionStateContainer.IsAbandoned\n- uid: System.Web.SessionState.HttpSessionStateContainer.IsCookieless\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: IsCookieless\n  nameWithType: HttpSessionStateContainer.IsCookieless\n  fullName: System.Web.SessionState.HttpSessionStateContainer.IsCookieless\n- uid: System.Web.SessionState.HttpSessionStateContainer.IsNewSession\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: IsNewSession\n  nameWithType: HttpSessionStateContainer.IsNewSession\n  fullName: System.Web.SessionState.HttpSessionStateContainer.IsNewSession\n- uid: System.Web.SessionState.HttpSessionStateContainer.IsReadOnly\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: HttpSessionStateContainer.IsReadOnly\n  fullName: System.Web.SessionState.HttpSessionStateContainer.IsReadOnly\n- uid: System.Web.SessionState.HttpSessionStateContainer.IsSynchronized\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: HttpSessionStateContainer.IsSynchronized\n  fullName: System.Web.SessionState.HttpSessionStateContainer.IsSynchronized\n- uid: System.Web.SessionState.HttpSessionStateContainer.Item(System.Int32)\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: HttpSessionStateContainer.Item(Int32)\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Item(Int32)\n- uid: System.Web.SessionState.HttpSessionStateContainer.Item(System.String)\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Item(String)\n  nameWithType: HttpSessionStateContainer.Item(String)\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Item(String)\n- uid: System.Web.SessionState.HttpSessionStateContainer.Keys\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Keys\n  nameWithType: HttpSessionStateContainer.Keys\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Keys\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameObjectCollectionBase+KeysCollection\n  nameWithType: NameObjectCollectionBase+KeysCollection\n  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection\n- uid: System.Web.SessionState.HttpSessionStateContainer.LCID\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: LCID\n  nameWithType: HttpSessionStateContainer.LCID\n  fullName: System.Web.SessionState.HttpSessionStateContainer.LCID\n- uid: System.Web.SessionState.HttpSessionStateContainer.Mode\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Mode\n  nameWithType: HttpSessionStateContainer.Mode\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Mode\n- uid: System.Web.SessionState.HttpSessionStateContainer.Remove(System.String)\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Remove(String)\n  nameWithType: HttpSessionStateContainer.Remove(String)\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Remove(String)\n- uid: System.Web.SessionState.HttpSessionStateContainer.RemoveAll\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: RemoveAll()\n  nameWithType: HttpSessionStateContainer.RemoveAll()\n  fullName: System.Web.SessionState.HttpSessionStateContainer.RemoveAll()\n- uid: System.Web.SessionState.HttpSessionStateContainer.RemoveAt(System.Int32)\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: HttpSessionStateContainer.RemoveAt(Int32)\n  fullName: System.Web.SessionState.HttpSessionStateContainer.RemoveAt(Int32)\n- uid: System.Web.SessionState.HttpSessionStateContainer.SessionID\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: SessionID\n  nameWithType: HttpSessionStateContainer.SessionID\n  fullName: System.Web.SessionState.HttpSessionStateContainer.SessionID\n- uid: System.Web.SessionState.HttpSessionStateContainer.StaticObjects\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: StaticObjects\n  nameWithType: HttpSessionStateContainer.StaticObjects\n  fullName: System.Web.SessionState.HttpSessionStateContainer.StaticObjects\n- uid: System.Web.SessionState.HttpSessionStateContainer.SyncRoot\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: SyncRoot\n  nameWithType: HttpSessionStateContainer.SyncRoot\n  fullName: System.Web.SessionState.HttpSessionStateContainer.SyncRoot\n- uid: System.Web.SessionState.HttpSessionStateContainer.Timeout\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Timeout\n  nameWithType: HttpSessionStateContainer.Timeout\n  fullName: System.Web.SessionState.HttpSessionStateContainer.Timeout\n- uid: System.Web.SessionState.HttpSessionStateContainer.#ctor*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: HttpSessionStateContainer\n  nameWithType: HttpSessionStateContainer.HttpSessionStateContainer\n- uid: System.Web.SessionState.HttpSessionStateContainer.Abandon*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Abandon\n  nameWithType: HttpSessionStateContainer.Abandon\n- uid: System.Web.SessionState.HttpSessionStateContainer.Add*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Add\n  nameWithType: HttpSessionStateContainer.Add\n- uid: System.Web.SessionState.HttpSessionStateContainer.Clear*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Clear\n  nameWithType: HttpSessionStateContainer.Clear\n- uid: System.Web.SessionState.HttpSessionStateContainer.CodePage*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: CodePage\n  nameWithType: HttpSessionStateContainer.CodePage\n- uid: System.Web.SessionState.HttpSessionStateContainer.CookieMode*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: CookieMode\n  nameWithType: HttpSessionStateContainer.CookieMode\n- uid: System.Web.SessionState.HttpSessionStateContainer.CopyTo*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: CopyTo\n  nameWithType: HttpSessionStateContainer.CopyTo\n- uid: System.Web.SessionState.HttpSessionStateContainer.Count*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Count\n  nameWithType: HttpSessionStateContainer.Count\n- uid: System.Web.SessionState.HttpSessionStateContainer.GetEnumerator*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: HttpSessionStateContainer.GetEnumerator\n- uid: System.Web.SessionState.HttpSessionStateContainer.IsAbandoned*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: IsAbandoned\n  nameWithType: HttpSessionStateContainer.IsAbandoned\n- uid: System.Web.SessionState.HttpSessionStateContainer.IsCookieless*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: IsCookieless\n  nameWithType: HttpSessionStateContainer.IsCookieless\n- uid: System.Web.SessionState.HttpSessionStateContainer.IsNewSession*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: IsNewSession\n  nameWithType: HttpSessionStateContainer.IsNewSession\n- uid: System.Web.SessionState.HttpSessionStateContainer.IsReadOnly*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: HttpSessionStateContainer.IsReadOnly\n- uid: System.Web.SessionState.HttpSessionStateContainer.IsSynchronized*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: HttpSessionStateContainer.IsSynchronized\n- uid: System.Web.SessionState.HttpSessionStateContainer.Item*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Item\n  nameWithType: HttpSessionStateContainer.Item\n- uid: System.Web.SessionState.HttpSessionStateContainer.Keys*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Keys\n  nameWithType: HttpSessionStateContainer.Keys\n- uid: System.Web.SessionState.HttpSessionStateContainer.LCID*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: LCID\n  nameWithType: HttpSessionStateContainer.LCID\n- uid: System.Web.SessionState.HttpSessionStateContainer.Mode*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Mode\n  nameWithType: HttpSessionStateContainer.Mode\n- uid: System.Web.SessionState.HttpSessionStateContainer.Remove*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Remove\n  nameWithType: HttpSessionStateContainer.Remove\n- uid: System.Web.SessionState.HttpSessionStateContainer.RemoveAll*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: RemoveAll\n  nameWithType: HttpSessionStateContainer.RemoveAll\n- uid: System.Web.SessionState.HttpSessionStateContainer.RemoveAt*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: RemoveAt\n  nameWithType: HttpSessionStateContainer.RemoveAt\n- uid: System.Web.SessionState.HttpSessionStateContainer.SessionID*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: SessionID\n  nameWithType: HttpSessionStateContainer.SessionID\n- uid: System.Web.SessionState.HttpSessionStateContainer.StaticObjects*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: StaticObjects\n  nameWithType: HttpSessionStateContainer.StaticObjects\n- uid: System.Web.SessionState.HttpSessionStateContainer.SyncRoot*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: SyncRoot\n  nameWithType: HttpSessionStateContainer.SyncRoot\n- uid: System.Web.SessionState.HttpSessionStateContainer.Timeout*\n  parent: System.Web.SessionState.HttpSessionStateContainer\n  isExternal: false\n  name: Timeout\n  nameWithType: HttpSessionStateContainer.Timeout\n"}