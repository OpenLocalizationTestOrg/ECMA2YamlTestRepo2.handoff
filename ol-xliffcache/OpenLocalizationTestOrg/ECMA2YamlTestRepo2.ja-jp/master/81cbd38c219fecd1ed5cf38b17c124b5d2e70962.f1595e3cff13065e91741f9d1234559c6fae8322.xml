{"nodes":[{"pos":[730,906],"content":"The CMK Store provider implementation for using the Microsoft Cryptography API: Next Generation (CNG) with <bpt id=\"p1\">[</bpt>Always Encrypted<ept id=\"p1\">](https://msdn.microsoft.com/library/mt163865.aspx)</ept>.","needQuote":false,"needEscape":true,"source":"The CMK Store provider implementation for using the Microsoft Cryptography API: Next Generation (CNG) with [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx)."},{"pos":[920,1098],"content":"Enables storing Always Encrypted column master key keys in a store, such as a hardware security module (HSM), that supports the Microsoft Cryptography API: Next Generation (CNG).","needQuote":false,"needEscape":true,"nodes":[{"content":"Enables storing Always Encrypted column master key keys in a store, such as a hardware security module (HSM), that supports the Microsoft Cryptography API: Next Generation (CNG).","pos":[0,178]}]},{"pos":[1865,1979],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlClient.SqlColumnEncryptionCngProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlColumnEncryptionCngProvider\"></xref> class."},{"pos":[2823,3150],"content":"Decrypts the given encrypted value using an asymmetric key specified by the key path and the specified algorithm. The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CNG key store provider. The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.","needQuote":true,"needEscape":true,"nodes":[{"content":"Decrypts the given encrypted value using an asymmetric key specified by the key path and the specified algorithm. The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CNG key store provider. The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.","pos":[0,327],"nodes":[{"content":"Decrypts the given encrypted value using an asymmetric key specified by the key path and the specified algorithm.","pos":[0,113]},{"content":"The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CNG key store provider.","pos":[114,260]},{"content":"The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.","pos":[261,327]}]}]},{"pos":[3398,3418],"content":"The master key path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The master key path.","pos":[0,20]}]},{"pos":[3494,3519],"content":"The encryption algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encryption algorithm.","pos":[0,25]}]},{"pos":[3604,3640],"content":"The encrypted column encryption key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encrypted column encryption key.","pos":[0,36]}]},{"pos":[3698,3734],"content":"The decrypted column encryption key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The decrypted column encryption key.","pos":[0,36]}]},{"pos":[4515,4859],"content":"Encrypts the given plain text column encryption key using an asymmetric key specified by the key path and the specified algorithm. The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CNG key store provider. The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.","needQuote":true,"needEscape":true,"nodes":[{"content":"Encrypts the given plain text column encryption key using an asymmetric key specified by the key path and the specified algorithm. The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CNG key store provider. The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.","pos":[0,344],"nodes":[{"content":"Encrypts the given plain text column encryption key using an asymmetric key specified by the key path and the specified algorithm.","pos":[0,130]},{"content":"The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CNG key store provider.","pos":[131,277]},{"content":"The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.","pos":[278,344]}]}]},{"pos":[5098,5118],"content":"The master key path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The master key path.","pos":[0,20]}]},{"pos":[5194,5219],"content":"The encryption algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encryption algorithm.","pos":[0,25]}]},{"pos":[5295,5331],"content":"The encrypted column encryption key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encrypted column encryption key.","pos":[0,36]}]},{"pos":[5389,5425],"content":"The encrypted column encryption key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encrypted column encryption key.","pos":[0,36]}]},{"pos":[5983,6041],"content":"A constant string for the provider name 'MSSQL_CNG_STORE'.","needQuote":true,"needEscape":true,"nodes":[{"content":"A constant string for the provider name 'MSSQL_CNG_STORE'.","pos":[0,58]}]},{"pos":[6156,6168],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider\n  id: SqlColumnEncryptionCngProvider\n  children:\n  - System.Data.SqlClient.SqlColumnEncryptionCngProvider.#ctor\n  - System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  - System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  - System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName\n  langs:\n  - csharp\n  name: SqlColumnEncryptionCngProvider\n  nameWithType: SqlColumnEncryptionCngProvider\n  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider\n  type: Class\n  summary: 'The CMK Store provider implementation for using the Microsoft Cryptography API: Next Generation (CNG) with [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx).'\n  remarks: 'Enables storing Always Encrypted column master key keys in a store, such as a hardware security module (HSM), that supports the Microsoft Cryptography API: Next Generation (CNG).'\n  syntax:\n    content: 'public class SqlColumnEncryptionCngProvider : System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider'\n  inheritance:\n  - System.Object\n  - System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.#ctor\n  id: '#ctor'\n  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider\n  langs:\n  - csharp\n  name: SqlColumnEncryptionCngProvider()\n  nameWithType: SqlColumnEncryptionCngProvider.SqlColumnEncryptionCngProvider()\n  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider.SqlColumnEncryptionCngProvider()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlColumnEncryptionCngProvider\"></xref> class.\n  syntax:\n    content: public SqlColumnEncryptionCngProvider ();\n    parameters: []\n  overload: System.Data.SqlClient.SqlColumnEncryptionCngProvider.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  id: DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider\n  langs:\n  - csharp\n  name: DecryptColumnEncryptionKey(String,String,Byte[])\n  nameWithType: SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(String,String,Byte[])\n  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(String,String,Byte[])\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Decrypts the given encrypted value using an asymmetric key specified by the key path and the specified algorithm. The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CNG key store provider. The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.\n  syntax:\n    content: public override byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);\n    parameters:\n    - id: masterKeyPath\n      type: System.String\n      description: The master key path.\n    - id: encryptionAlgorithm\n      type: System.String\n      description: The encryption algorithm.\n    - id: encryptedColumnEncryptionKey\n      type: System.Byte[]\n      description: The encrypted column encryption key.\n    return:\n      type: System.Byte[]\n      description: The decrypted column encryption key.\n  overload: System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  id: EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider\n  langs:\n  - csharp\n  name: EncryptColumnEncryptionKey(String,String,Byte[])\n  nameWithType: SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(String,String,Byte[])\n  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(String,String,Byte[])\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Encrypts the given plain text column encryption key using an asymmetric key specified by the key path and the specified algorithm. The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CNG key store provider. The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.\n  syntax:\n    content: public override byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);\n    parameters:\n    - id: masterKeyPath\n      type: System.String\n      description: The master key path.\n    - id: encryptionAlgorithm\n      type: System.String\n      description: The encryption algorithm.\n    - id: columnEncryptionKey\n      type: System.Byte[]\n      description: The encrypted column encryption key.\n    return:\n      type: System.Byte[]\n      description: The encrypted column encryption key.\n  overload: System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName\n  id: ProviderName\n  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider\n  langs:\n  - csharp\n  name: ProviderName\n  nameWithType: SqlColumnEncryptionCngProvider.ProviderName\n  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: A constant string for the provider name 'MSSQL_CNG_STORE'.\n  syntax:\n    content: public const string ProviderName;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  isExternal: false\n  name: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.#ctor\n  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider\n  isExternal: false\n  name: SqlColumnEncryptionCngProvider()\n  nameWithType: SqlColumnEncryptionCngProvider.SqlColumnEncryptionCngProvider()\n  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider.SqlColumnEncryptionCngProvider()\n- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider\n  isExternal: false\n  name: DecryptColumnEncryptionKey(String,String,Byte[])\n  nameWithType: SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(String,String,Byte[])\n  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(String,String,Byte[])\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider\n  isExternal: false\n  name: EncryptColumnEncryptionKey(String,String,Byte[])\n  nameWithType: SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(String,String,Byte[])\n  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(String,String,Byte[])\n- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName\n  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider\n  isExternal: false\n  name: ProviderName\n  nameWithType: SqlColumnEncryptionCngProvider.ProviderName\n  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName\n- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.#ctor*\n  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider\n  isExternal: false\n  name: SqlColumnEncryptionCngProvider\n  nameWithType: SqlColumnEncryptionCngProvider.SqlColumnEncryptionCngProvider\n- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey*\n  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider\n  isExternal: false\n  name: DecryptColumnEncryptionKey\n  nameWithType: SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey\n- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey*\n  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider\n  isExternal: false\n  name: EncryptColumnEncryptionKey\n  nameWithType: SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey\n"}