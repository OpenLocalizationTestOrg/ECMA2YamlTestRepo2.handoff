{"nodes":[{"pos":[894,1029],"content":"Represents the <xref href=\"System.Net.HttpListener\"></xref> timeouts element in the configuration file. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> timeouts element in the configuration file.","pos":[0,103],"source":"Represents the <xref href=\"System.Net.HttpListener\"></xref> timeouts element in the configuration file."},{"content":"This class cannot be inherited.","pos":[104,135]}]},{"pos":[1041,1155],"content":"The timeouts element defines the dafault connection timeout limits for an <xref:System.Net.HttpListener> instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The timeouts element defines the dafault connection timeout limits for an &lt;xref:System.Net.HttpListener&gt; instance.","pos":[0,114],"source":"The timeouts element defines the dafault connection timeout limits for an <xref:System.Net.HttpListener> instance."}]},{"pos":[4572,4686],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Configuration.HttpListenerTimeoutsElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Configuration.HttpListenerTimeoutsElement\"></xref> class."},{"pos":[5317,5457],"content":"Gets the time, in seconds, allowed for the <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to drain the entity body on a Keep-Alive connection.","needQuote":true,"needEscape":true,"source":"Gets the time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to drain the entity body on a Keep-Alive connection."},{"pos":[5469,5854],"content":"On a Keep-Alive connection, after the app has sent a response for a request and before the request entity body has completely arrived, the <xref:System.Net.HttpListener> starts draining the remainder of the entity body to reach another potentially pipelined request from the client. If the time to drain the remaining entity body exceeds the allowed period the connection is timed out.","needQuote":true,"needEscape":true,"nodes":[{"content":"On a Keep-Alive connection, after the app has sent a response for a request and before the request entity body has completely arrived, the <xref:System.Net.HttpListener> starts draining the remainder of the entity body to reach another potentially pipelined request from the client. If the time to drain the remaining entity body exceeds the allowed period the connection is timed out.","pos":[0,385],"nodes":[{"content":"On a Keep-Alive connection, after the app has sent a response for a request and before the request entity body has completely arrived, the &lt;xref:System.Net.HttpListener&gt; starts draining the remainder of the entity body to reach another potentially pipelined request from the client.","pos":[0,282],"source":"On a Keep-Alive connection, after the app has sent a response for a request and before the request entity body has completely arrived, the <xref:System.Net.HttpListener> starts draining the remainder of the entity body to reach another potentially pipelined request from the client."},{"content":"If the time to drain the remaining entity body exceeds the allowed period the connection is timed out.","pos":[283,385]}]}]},{"pos":[5979,6156],"content":"Returns <xref:System.TimeSpan>.       The time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to drain the entity body on a Keep-Alive connection.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.TimeSpan&gt;.","pos":[0,31],"source":"Returns <xref:System.TimeSpan>."},{"content":"The time, in seconds, allowed for the <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to drain the entity body on a Keep-Alive connection.","pos":[38,173],"source":"       The time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to drain the entity body on a Keep-Alive connection."}]},{"pos":[6692,6765],"content":"Gets the time, in seconds, allowed for the request entity body to arrive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the time, in seconds, allowed for the request entity body to arrive.","pos":[0,73]}]},{"pos":[6777,7085],"content":"The <xref:System.Net.HttpListener> turns on this timer when the request has an entity body. The timer expiration is initially set to the configured value. When the <xref:System.Net.HttpListener> receives additional data indications on the request, it resets the timer to give the connection another interval.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Net.HttpListener> turns on this timer when the request has an entity body. The timer expiration is initially set to the configured value. When the <xref:System.Net.HttpListener> receives additional data indications on the request, it resets the timer to give the connection another interval.","pos":[0,308],"nodes":[{"content":"The &lt;xref:System.Net.HttpListener&gt; turns on this timer when the request has an entity body.","pos":[0,91],"source":"The <xref:System.Net.HttpListener> turns on this timer when the request has an entity body."},{"content":"The timer expiration is initially set to the configured value.","pos":[92,154]},{"content":"When the &lt;xref:System.Net.HttpListener&gt; receives additional data indications on the request, it resets the timer to give the connection another interval.","pos":[155,308],"source":" When the <xref:System.Net.HttpListener> receives additional data indications on the request, it resets the timer to give the connection another interval."}]}]},{"pos":[7205,7313],"content":"Returns <xref:System.TimeSpan>.       The time, in seconds, allowed for the request entity body to arrive.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <xref:System.TimeSpan>.       The time, in seconds, allowed for the request entity body to arrive.","pos":[0,106],"nodes":[{"content":"Returns &lt;xref:System.TimeSpan&gt;.","pos":[0,31],"source":"Returns <xref:System.TimeSpan>."},{"content":"The time, in seconds, allowed for the request entity body to arrive.","pos":[38,106]}]}]},{"pos":[7844,7960],"content":"Gets the time, in seconds, allowed for the <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to parse the request header.","needQuote":true,"needEscape":true,"source":"Gets the time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to parse the request header."},{"pos":[7973,8491],"content":"This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>.       The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed. Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.HeaderWait%2A> timer for the first request on a connection. Subsequent requests on a Keep-Alive connection will use the value set on this property.","needQuote":false,"needEscape":true,"nodes":[{"content":"This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>.       The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed. Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.HeaderWait%2A> timer for the first request on a connection. Subsequent requests on a Keep-Alive connection will use the value set on this property.","pos":[0,516],"nodes":[{"content":"This timeout is only enforced after the first request on the connection is routed to the &lt;xref:System.Net.HttpListener&gt;.","pos":[0,120],"source":"This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>."},{"content":"The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed.","pos":[127,257]},{"content":"Therefore, the &lt;xref:System.Net.HttpListener&gt; enforces the default &lt;xref:System.Net.HttpListenerTimeoutManager.HeaderWait%2A&gt; timer for the first request on a connection.","pos":[258,428],"source":" Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.HeaderWait%2A> timer for the first request on a connection."},{"content":"Subsequent requests on a Keep-Alive connection will use the value set on this property.","pos":[429,516]}]}]},{"pos":[8612,8765],"content":"Returns <xref:System.TimeSpan>.       The time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to parse the request header.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.TimeSpan&gt;.","pos":[0,31],"source":"Returns <xref:System.TimeSpan>."},{"content":"The time, in seconds, allowed for the <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to parse the request header.","pos":[38,149],"source":"       The time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to parse the request header."}]},{"pos":[9316,9374],"content":"Gets the time, in seconds, allowed for an idle connection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the time, in seconds, allowed for an idle connection.","pos":[0,58]}]},{"pos":[9387,9909],"content":"This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>.       The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed. Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.IdleConnection%2A> timer for the first request on a connection. Subsequent requests on a Keep-Alive connection will use the value set on this property.","needQuote":false,"needEscape":true,"nodes":[{"content":"This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>.       The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed. Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.IdleConnection%2A> timer for the first request on a connection. Subsequent requests on a Keep-Alive connection will use the value set on this property.","pos":[0,520],"nodes":[{"content":"This timeout is only enforced after the first request on the connection is routed to the &lt;xref:System.Net.HttpListener&gt;.","pos":[0,120],"source":"This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>."},{"content":"The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed.","pos":[127,257]},{"content":"Therefore, the &lt;xref:System.Net.HttpListener&gt; enforces the default &lt;xref:System.Net.HttpListenerTimeoutManager.IdleConnection%2A&gt; timer for the first request on a connection.","pos":[258,432],"source":" Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.IdleConnection%2A> timer for the first request on a connection."},{"content":"Subsequent requests on a Keep-Alive connection will use the value set on this property.","pos":[433,520]}]}]},{"pos":[10034,10127],"content":"Returns <xref:System.TimeSpan>.       The time, in seconds, allowed for an idle connection.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <xref:System.TimeSpan>.       The time, in seconds, allowed for an idle connection.","pos":[0,91],"nodes":[{"content":"Returns &lt;xref:System.TimeSpan&gt;.","pos":[0,31],"source":"Returns <xref:System.TimeSpan>."},{"content":"The time, in seconds, allowed for an idle connection.","pos":[38,91]}]}]},{"pos":[10717,10783],"content":"Gets the minimum send rate, in bytes-per-second, for the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the minimum send rate, in bytes-per-second, for the response.","pos":[0,66]}]},{"pos":[10907,11005],"content":"Returns <xref:System.Int64>.       The minimum send rate, in bytes-per-second, for the response.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <xref:System.Int64>.       The minimum send rate, in bytes-per-second, for the response.","pos":[0,96],"nodes":[{"content":"Returns &lt;xref:System.Int64&gt;.","pos":[0,28],"source":"Returns <xref:System.Int64>."},{"content":"The minimum send rate, in bytes-per-second, for the response.","pos":[35,96]}]}]},{"pos":[11747,11759],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12299,12449],"content":"Gets the time, in seconds, allowed for the request to remain in the request queue before the <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> picks it up.","needQuote":true,"needEscape":true,"source":"Gets the time, in seconds, allowed for the request to remain in the request queue before the <xref href=\"System.Net.HttpListener\"></xref> picks it up."},{"pos":[12571,12758],"content":"Returns <xref:System.TimeSpan>.       The time, in seconds, allowed for the request to remain in the request queue before the <xref href=\"System.Net.HttpListener\"></xref> picks it up.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.TimeSpan&gt;.","pos":[0,31],"source":"Returns <xref:System.TimeSpan>."},{"content":"The time, in seconds, allowed for the request to remain in the request queue before the <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> picks it up.","pos":[38,183],"source":"       The time, in seconds, allowed for the request to remain in the request queue before the <xref href=\"System.Net.HttpListener\"></xref> picks it up."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement\n  id: HttpListenerTimeoutsElement\n  children:\n  - System.Net.Configuration.HttpListenerTimeoutsElement.#ctor\n  - System.Net.Configuration.HttpListenerTimeoutsElement.DrainEntityBody\n  - System.Net.Configuration.HttpListenerTimeoutsElement.EntityBody\n  - System.Net.Configuration.HttpListenerTimeoutsElement.HeaderWait\n  - System.Net.Configuration.HttpListenerTimeoutsElement.IdleConnection\n  - System.Net.Configuration.HttpListenerTimeoutsElement.MinSendBytesPerSecond\n  - System.Net.Configuration.HttpListenerTimeoutsElement.Properties\n  - System.Net.Configuration.HttpListenerTimeoutsElement.RequestQueue\n  langs:\n  - csharp\n  name: HttpListenerTimeoutsElement\n  nameWithType: HttpListenerTimeoutsElement\n  fullName: System.Net.Configuration.HttpListenerTimeoutsElement\n  type: Class\n  summary: Represents the <xref href=\"System.Net.HttpListener\"></xref> timeouts element in the configuration file. This class cannot be inherited.\n  remarks: The timeouts element defines the dafault connection timeout limits for an <xref:System.Net.HttpListener> instance.\n  syntax:\n    content: 'public sealed class HttpListenerTimeoutsElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.#ctor\n  id: '#ctor'\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  langs:\n  - csharp\n  name: HttpListenerTimeoutsElement()\n  nameWithType: HttpListenerTimeoutsElement.HttpListenerTimeoutsElement()\n  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.HttpListenerTimeoutsElement()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Net.Configuration.HttpListenerTimeoutsElement\"></xref> class.\n  syntax:\n    content: public HttpListenerTimeoutsElement ();\n    parameters: []\n  overload: System.Net.Configuration.HttpListenerTimeoutsElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.DrainEntityBody\n  id: DrainEntityBody\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  langs:\n  - csharp\n  name: DrainEntityBody\n  nameWithType: HttpListenerTimeoutsElement.DrainEntityBody\n  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.DrainEntityBody\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets the time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to drain the entity body on a Keep-Alive connection.\n  remarks: On a Keep-Alive connection, after the app has sent a response for a request and before the request entity body has completely arrived, the <xref:System.Net.HttpListener> starts draining the remainder of the entity body to reach another potentially pipelined request from the client. If the time to drain the remaining entity body exceeds the allowed period the connection is timed out.\n  syntax:\n    content: public TimeSpan DrainEntityBody { get; }\n    return:\n      type: System.TimeSpan\n      description: \"Returns <xref:System.TimeSpan>.  \\n  \\n The time, in seconds, allowed for the <xref href=\\\"System.Net.HttpListener\\\"></xref> to drain the entity body on a Keep-Alive connection.\"\n  overload: System.Net.Configuration.HttpListenerTimeoutsElement.DrainEntityBody*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.EntityBody\n  id: EntityBody\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  langs:\n  - csharp\n  name: EntityBody\n  nameWithType: HttpListenerTimeoutsElement.EntityBody\n  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.EntityBody\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets the time, in seconds, allowed for the request entity body to arrive.\n  remarks: The <xref:System.Net.HttpListener> turns on this timer when the request has an entity body. The timer expiration is initially set to the configured value. When the <xref:System.Net.HttpListener> receives additional data indications on the request, it resets the timer to give the connection another interval.\n  syntax:\n    content: public TimeSpan EntityBody { get; }\n    return:\n      type: System.TimeSpan\n      description: \"Returns <xref:System.TimeSpan>.  \\n  \\n The time, in seconds, allowed for the request entity body to arrive.\"\n  overload: System.Net.Configuration.HttpListenerTimeoutsElement.EntityBody*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.HeaderWait\n  id: HeaderWait\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  langs:\n  - csharp\n  name: HeaderWait\n  nameWithType: HttpListenerTimeoutsElement.HeaderWait\n  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.HeaderWait\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets the time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to parse the request header.\n  remarks: \"This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>.  \\n  \\n The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed. Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.HeaderWait%2A> timer for the first request on a connection. Subsequent requests on a Keep-Alive connection will use the value set on this property.\"\n  syntax:\n    content: public TimeSpan HeaderWait { get; }\n    return:\n      type: System.TimeSpan\n      description: \"Returns <xref:System.TimeSpan>.  \\n  \\n The time, in seconds, allowed for the <xref href=\\\"System.Net.HttpListener\\\"></xref> to parse the request header.\"\n  overload: System.Net.Configuration.HttpListenerTimeoutsElement.HeaderWait*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.IdleConnection\n  id: IdleConnection\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  langs:\n  - csharp\n  name: IdleConnection\n  nameWithType: HttpListenerTimeoutsElement.IdleConnection\n  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.IdleConnection\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets the time, in seconds, allowed for an idle connection.\n  remarks: \"This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>.  \\n  \\n The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed. Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.IdleConnection%2A> timer for the first request on a connection. Subsequent requests on a Keep-Alive connection will use the value set on this property.\"\n  syntax:\n    content: public TimeSpan IdleConnection { get; }\n    return:\n      type: System.TimeSpan\n      description: \"Returns <xref:System.TimeSpan>.  \\n  \\n The time, in seconds, allowed for an idle connection.\"\n  overload: System.Net.Configuration.HttpListenerTimeoutsElement.IdleConnection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.MinSendBytesPerSecond\n  id: MinSendBytesPerSecond\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  langs:\n  - csharp\n  name: MinSendBytesPerSecond\n  nameWithType: HttpListenerTimeoutsElement.MinSendBytesPerSecond\n  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.MinSendBytesPerSecond\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets the minimum send rate, in bytes-per-second, for the response.\n  syntax:\n    content: public long MinSendBytesPerSecond { get; }\n    return:\n      type: System.Int64\n      description: \"Returns <xref:System.Int64>.  \\n  \\n The minimum send rate, in bytes-per-second, for the response.\"\n  overload: System.Net.Configuration.HttpListenerTimeoutsElement.MinSendBytesPerSecond*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.Properties\n  id: Properties\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: HttpListenerTimeoutsElement.Properties\n  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.Properties\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.Net.Configuration.HttpListenerTimeoutsElement.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.RequestQueue\n  id: RequestQueue\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  langs:\n  - csharp\n  name: RequestQueue\n  nameWithType: HttpListenerTimeoutsElement.RequestQueue\n  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.RequestQueue\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets the time, in seconds, allowed for the request to remain in the request queue before the <xref href=\"System.Net.HttpListener\"></xref> picks it up.\n  syntax:\n    content: public TimeSpan RequestQueue { get; }\n    return:\n      type: System.TimeSpan\n      description: \"Returns <xref:System.TimeSpan>.  \\n  \\n The time, in seconds, allowed for the request to remain in the request queue before the <xref href=\\\"System.Net.HttpListener\\\"></xref> picks it up.\"\n  overload: System.Net.Configuration.HttpListenerTimeoutsElement.RequestQueue*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.#ctor\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  isExternal: false\n  name: HttpListenerTimeoutsElement()\n  nameWithType: HttpListenerTimeoutsElement.HttpListenerTimeoutsElement()\n  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.HttpListenerTimeoutsElement()\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.DrainEntityBody\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  isExternal: false\n  name: DrainEntityBody\n  nameWithType: HttpListenerTimeoutsElement.DrainEntityBody\n  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.DrainEntityBody\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.EntityBody\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  isExternal: false\n  name: EntityBody\n  nameWithType: HttpListenerTimeoutsElement.EntityBody\n  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.EntityBody\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.HeaderWait\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  isExternal: false\n  name: HeaderWait\n  nameWithType: HttpListenerTimeoutsElement.HeaderWait\n  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.HeaderWait\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.IdleConnection\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  isExternal: false\n  name: IdleConnection\n  nameWithType: HttpListenerTimeoutsElement.IdleConnection\n  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.IdleConnection\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.MinSendBytesPerSecond\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  isExternal: false\n  name: MinSendBytesPerSecond\n  nameWithType: HttpListenerTimeoutsElement.MinSendBytesPerSecond\n  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.MinSendBytesPerSecond\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.Properties\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  isExternal: false\n  name: Properties\n  nameWithType: HttpListenerTimeoutsElement.Properties\n  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.RequestQueue\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  isExternal: false\n  name: RequestQueue\n  nameWithType: HttpListenerTimeoutsElement.RequestQueue\n  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.RequestQueue\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.#ctor*\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  isExternal: false\n  name: HttpListenerTimeoutsElement\n  nameWithType: HttpListenerTimeoutsElement.HttpListenerTimeoutsElement\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.DrainEntityBody*\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  isExternal: false\n  name: DrainEntityBody\n  nameWithType: HttpListenerTimeoutsElement.DrainEntityBody\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.EntityBody*\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  isExternal: false\n  name: EntityBody\n  nameWithType: HttpListenerTimeoutsElement.EntityBody\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.HeaderWait*\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  isExternal: false\n  name: HeaderWait\n  nameWithType: HttpListenerTimeoutsElement.HeaderWait\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.IdleConnection*\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  isExternal: false\n  name: IdleConnection\n  nameWithType: HttpListenerTimeoutsElement.IdleConnection\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.MinSendBytesPerSecond*\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  isExternal: false\n  name: MinSendBytesPerSecond\n  nameWithType: HttpListenerTimeoutsElement.MinSendBytesPerSecond\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.Properties*\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  isExternal: false\n  name: Properties\n  nameWithType: HttpListenerTimeoutsElement.Properties\n- uid: System.Net.Configuration.HttpListenerTimeoutsElement.RequestQueue*\n  parent: System.Net.Configuration.HttpListenerTimeoutsElement\n  isExternal: false\n  name: RequestQueue\n  nameWithType: HttpListenerTimeoutsElement.RequestQueue\n"}