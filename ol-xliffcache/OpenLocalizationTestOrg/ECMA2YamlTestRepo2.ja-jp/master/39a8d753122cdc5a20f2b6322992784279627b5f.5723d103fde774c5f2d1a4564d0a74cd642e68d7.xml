{"nodes":[{"pos":[1370,1484],"content":"Represents a collection of <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Routing.Configuration.FilterElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances.","needQuote":true,"needEscape":true,"source":"Represents a collection of <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement\"></xref> instances."},{"pos":[7453,7580],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Routing.Configuration.FilterElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Routing.Configuration.FilterElementCollection\"></xref> class."},{"pos":[8390,8496],"content":"Adds a new <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Routing.Configuration.FilterElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the collection.","needQuote":true,"needEscape":true,"source":"Adds a new <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement\"></xref> to the collection."},{"pos":[8724,8750],"content":"The filter element to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The filter element to add.","pos":[0,26]}]},{"pos":[9338,9379],"content":"Removes all elements from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all elements from the collection.","pos":[0,41]}]},{"pos":[10088,10165],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Configuration.ConfigurationElement\"></xref>."},{"pos":[10375,10403],"content":"A new configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new configuration element.","pos":[0,28]}]},{"pos":[11190,11316],"content":"Returns the key of the specified <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element within the collection.","needQuote":true,"needEscape":true,"source":"Returns the key of the specified <xref href=\"System.Configuration.ConfigurationElement\"></xref> element within the collection."},{"pos":[11540,11588],"content":"The configuration element to return the key for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration element to return the key for.","pos":[0,48]}]},{"pos":[11646,11694],"content":"The key for the specified configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key for the specified configuration element.","pos":[0,48]}]},{"pos":[12503,12566],"content":"Gets a value that indicates whether the element can be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the element can be removed.","pos":[0,63]}]},{"pos":[12793,12845],"content":"The configuration element to check for removability.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration element to check for removability.","pos":[0,52]}]},{"pos":[12905,12966],"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the element can be removed; otherwise, <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","needQuote":false,"needEscape":true,"source":"**true** if the element can be removed; otherwise, **false**."},{"pos":[13595,13656],"content":"Gets a value that indicates whether the element is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the element is read-only.","pos":[0,61]}]},{"pos":[13794,13853],"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the element is read-only; otherwise, <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","needQuote":false,"needEscape":true,"source":"**true** if the element is read-only; otherwise, **false**."},{"pos":[14489,14548],"content":"Gets an element from the collection with a specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an element from the collection with a specified index.","pos":[0,59]}]},{"pos":[14741,14802],"content":"The index of the element to be retrieved from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the element to be retrieved from the collection.","pos":[0,61]}]},{"pos":[14902,14961],"content":"The element in the collection that has the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element in the collection that has the specified index.","pos":[0,59]}]},{"pos":[15595,15652],"content":"Gets an element from the collection with a specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an element from the collection with a specified key.","pos":[0,57]}]},{"pos":[15842,15901],"content":"The key of the element to be retrieved from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the element to be retrieved from the collection.","pos":[0,59]}]},{"pos":[16001,16062],"content":"The element in the collection that matches the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element in the collection that matches the specified key.","pos":[0,61]}]},{"pos":[16809,16952],"content":"Removes the first occurrence of the specified <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Routing.Configuration.FilterElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the collection.","needQuote":true,"needEscape":true,"source":"Removes the first occurrence of the specified <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement\"></xref> from the collection."},{"pos":[17183,17229],"content":"The element to be removed from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element to be removed from the collection.","pos":[0,46]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  id: FilterElementCollection\n  children:\n  - System.ServiceModel.Routing.Configuration.FilterElementCollection.#ctor\n  - System.ServiceModel.Routing.Configuration.FilterElementCollection.Add(System.ServiceModel.Routing.Configuration.FilterElement)\n  - System.ServiceModel.Routing.Configuration.FilterElementCollection.Clear\n  - System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement\n  - System.ServiceModel.Routing.Configuration.FilterElementCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  - System.ServiceModel.Routing.Configuration.FilterElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)\n  - System.ServiceModel.Routing.Configuration.FilterElementCollection.IsReadOnly\n  - System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.Int32)\n  - System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.String)\n  - System.ServiceModel.Routing.Configuration.FilterElementCollection.Remove(System.ServiceModel.Routing.Configuration.FilterElement)\n  langs:\n  - csharp\n  name: FilterElementCollection\n  nameWithType: FilterElementCollection\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  type: Class\n  summary: Represents a collection of <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement\"></xref> instances.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationCollection(typeof(System.ServiceModel.Routing.Configuration.FilterElement), AddItemName=\"filter\")]\n\n      public class FilterElementCollection : System.Configuration.ConfigurationElementCollection\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.Configuration.ConfigurationElementCollection\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Properties\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.AddElementName\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseClear\n  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseGetAllKeys\n  - System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.ClearElementName\n  - System.Configuration.ConfigurationElementCollection.CollectionType\n  - System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)\n  - System.Configuration.ConfigurationElementCollection.Count\n  - System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)\n  - System.Configuration.ConfigurationElementCollection.ElementName\n  - System.Configuration.ConfigurationElementCollection.EmitClear\n  - System.Configuration.ConfigurationElementCollection.Equals(System.Object)\n  - System.Configuration.ConfigurationElementCollection.GetEnumerator\n  - System.Configuration.ConfigurationElementCollection.GetHashCode\n  - System.Configuration.ConfigurationElementCollection.IsElementName(System.String)\n  - System.Configuration.ConfigurationElementCollection.IsModified\n  - System.Configuration.ConfigurationElementCollection.IsSynchronized\n  - System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElementCollection.RemoveElementName\n  - System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.ResetModified\n  - System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.SetReadOnly\n  - System.Configuration.ConfigurationElementCollection.SyncRoot\n  - System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate\n  - System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  langs:\n  - csharp\n  name: FilterElementCollection()\n  nameWithType: FilterElementCollection.FilterElementCollection()\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.FilterElementCollection()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Routing.Configuration.FilterElementCollection\"></xref> class.\n  syntax:\n    content: public FilterElementCollection ();\n    parameters: []\n  overload: System.ServiceModel.Routing.Configuration.FilterElementCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.Add(System.ServiceModel.Routing.Configuration.FilterElement)\n  id: Add(System.ServiceModel.Routing.Configuration.FilterElement)\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  langs:\n  - csharp\n  name: Add(FilterElement)\n  nameWithType: FilterElementCollection.Add(FilterElement)\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.Add(FilterElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Adds a new <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement\"></xref> to the collection.\n  syntax:\n    content: public void Add (System.ServiceModel.Routing.Configuration.FilterElement element);\n    parameters:\n    - id: element\n      type: System.ServiceModel.Routing.Configuration.FilterElement\n      description: The filter element to add.\n  overload: System.ServiceModel.Routing.Configuration.FilterElementCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.Clear\n  id: Clear\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: FilterElementCollection.Clear()\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.Clear()\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Removes all elements from the collection.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.ServiceModel.Routing.Configuration.FilterElementCollection.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement\n  id: CreateNewElement\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  langs:\n  - csharp\n  name: CreateNewElement()\n  nameWithType: FilterElementCollection.CreateNewElement()\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement()\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Creates a new <xref href=\"System.Configuration.ConfigurationElement\"></xref>.\n  syntax:\n    content: protected override System.Configuration.ConfigurationElement CreateNewElement ();\n    parameters: []\n    return:\n      type: System.Configuration.ConfigurationElement\n      description: A new configuration element.\n  overload: System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  id: GetElementKey(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  langs:\n  - csharp\n  name: GetElementKey(ConfigurationElement)\n  nameWithType: FilterElementCollection.GetElementKey(ConfigurationElement)\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.GetElementKey(ConfigurationElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Returns the key of the specified <xref href=\"System.Configuration.ConfigurationElement\"></xref> element within the collection.\n  syntax:\n    content: protected override object GetElementKey (System.Configuration.ConfigurationElement element);\n    parameters:\n    - id: element\n      type: System.Configuration.ConfigurationElement\n      description: The configuration element to return the key for.\n    return:\n      type: System.Object\n      description: The key for the specified configuration element.\n  overload: System.ServiceModel.Routing.Configuration.FilterElementCollection.GetElementKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)\n  id: IsElementRemovable(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  langs:\n  - csharp\n  name: IsElementRemovable(ConfigurationElement)\n  nameWithType: FilterElementCollection.IsElementRemovable(ConfigurationElement)\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.IsElementRemovable(ConfigurationElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets a value that indicates whether the element can be removed.\n  syntax:\n    content: protected override bool IsElementRemovable (System.Configuration.ConfigurationElement element);\n    parameters:\n    - id: element\n      type: System.Configuration.ConfigurationElement\n      description: The configuration element to check for removability.\n    return:\n      type: System.Boolean\n      description: '**true** if the element can be removed; otherwise, **false**.'\n  overload: System.ServiceModel.Routing.Configuration.FilterElementCollection.IsElementRemovable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.IsReadOnly\n  id: IsReadOnly\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  langs:\n  - csharp\n  name: IsReadOnly()\n  nameWithType: FilterElementCollection.IsReadOnly()\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.IsReadOnly()\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets a value that indicates whether the element is read-only.\n  syntax:\n    content: public override bool IsReadOnly ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '**true** if the element is read-only; otherwise, **false**.'\n  overload: System.ServiceModel.Routing.Configuration.FilterElementCollection.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: FilterElementCollection.Item(Int32)\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets an element from the collection with a specified index.\n  syntax:\n    content: public System.ServiceModel.Routing.Configuration.FilterElement this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the element to be retrieved from the collection.\n    return:\n      type: System.ServiceModel.Routing.Configuration.FilterElement\n      description: The element in the collection that has the specified index.\n  overload: System.ServiceModel.Routing.Configuration.FilterElementCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: FilterElementCollection.Item(String)\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets an element from the collection with a specified key.\n  syntax:\n    content: public System.ServiceModel.Routing.Configuration.FilterElement this[string name] { get; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The key of the element to be retrieved from the collection.\n    return:\n      type: System.ServiceModel.Routing.Configuration.FilterElement\n      description: The element in the collection that matches the specified key.\n  overload: System.ServiceModel.Routing.Configuration.FilterElementCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.Remove(System.ServiceModel.Routing.Configuration.FilterElement)\n  id: Remove(System.ServiceModel.Routing.Configuration.FilterElement)\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  langs:\n  - csharp\n  name: Remove(FilterElement)\n  nameWithType: FilterElementCollection.Remove(FilterElement)\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.Remove(FilterElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Removes the first occurrence of the specified <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement\"></xref> from the collection.\n  syntax:\n    content: public void Remove (System.ServiceModel.Routing.Configuration.FilterElement element);\n    parameters:\n    - id: element\n      type: System.ServiceModel.Routing.Configuration.FilterElement\n      description: The element to be removed from the collection.\n  overload: System.ServiceModel.Routing.Configuration.FilterElementCollection.Remove*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: System.Configuration.ConfigurationElementCollection\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.#ctor\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: FilterElementCollection()\n  nameWithType: FilterElementCollection.FilterElementCollection()\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.FilterElementCollection()\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.Add(System.ServiceModel.Routing.Configuration.FilterElement)\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: Add(FilterElement)\n  nameWithType: FilterElementCollection.Add(FilterElement)\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.Add(FilterElement)\n- uid: System.ServiceModel.Routing.Configuration.FilterElement\n  parent: System.ServiceModel.Routing.Configuration\n  isExternal: false\n  name: FilterElement\n  nameWithType: FilterElement\n  fullName: System.ServiceModel.Routing.Configuration.FilterElement\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.Clear\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: FilterElementCollection.Clear()\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.Clear()\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: CreateNewElement()\n  nameWithType: FilterElementCollection.CreateNewElement()\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement()\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: GetElementKey(ConfigurationElement)\n  nameWithType: FilterElementCollection.GetElementKey(ConfigurationElement)\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.GetElementKey(ConfigurationElement)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: IsElementRemovable(ConfigurationElement)\n  nameWithType: FilterElementCollection.IsElementRemovable(ConfigurationElement)\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.IsElementRemovable(ConfigurationElement)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.IsReadOnly\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: FilterElementCollection.IsReadOnly()\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.IsReadOnly()\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.Int32)\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: FilterElementCollection.Item(Int32)\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.String)\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: FilterElementCollection.Item(String)\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.Remove(System.ServiceModel.Routing.Configuration.FilterElement)\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: Remove(FilterElement)\n  nameWithType: FilterElementCollection.Remove(FilterElement)\n  fullName: System.ServiceModel.Routing.Configuration.FilterElementCollection.Remove(FilterElement)\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.#ctor*\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: FilterElementCollection\n  nameWithType: FilterElementCollection.FilterElementCollection\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.Add*\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: Add\n  nameWithType: FilterElementCollection.Add\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.Clear*\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: Clear\n  nameWithType: FilterElementCollection.Clear\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement*\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: CreateNewElement\n  nameWithType: FilterElementCollection.CreateNewElement\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.GetElementKey*\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: GetElementKey\n  nameWithType: FilterElementCollection.GetElementKey\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.IsElementRemovable*\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: IsElementRemovable\n  nameWithType: FilterElementCollection.IsElementRemovable\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.IsReadOnly*\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: FilterElementCollection.IsReadOnly\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.Item*\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: Item\n  nameWithType: FilterElementCollection.Item\n- uid: System.ServiceModel.Routing.Configuration.FilterElementCollection.Remove*\n  parent: System.ServiceModel.Routing.Configuration.FilterElementCollection\n  isExternal: false\n  name: Remove\n  nameWithType: FilterElementCollection.Remove\n"}