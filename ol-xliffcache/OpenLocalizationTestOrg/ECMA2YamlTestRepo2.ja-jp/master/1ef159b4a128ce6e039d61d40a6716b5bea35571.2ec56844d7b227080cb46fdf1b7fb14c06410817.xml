{"nodes":[{"pos":[516,724],"content":"Factory that provides instances of <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.WorkflowServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in managed hosting environments where the host instance is created dynamically in response to incoming messages.","needQuote":true,"needEscape":true,"source":"Factory that provides instances of <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> in managed hosting environments where the host instance is created dynamically in response to incoming messages."},{"pos":[737,1334],"content":"The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).       If you have implemented a custom derivative of <xref:System.ServiceModel.WorkflowServiceHost>, consider also implementing a factory that derives from the WorkflowServiceHostFactory class.       If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHostBase> instead, then consider also implementing a factory that derives your factory from <xref:System.ServiceModel.Activation.ServiceHostFactoryBase> directly.","needQuote":false,"needEscape":true,"nodes":[{"content":"The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).       If you have implemented a custom derivative of <xref:System.ServiceModel.WorkflowServiceHost>, consider also implementing a factory that derives from the WorkflowServiceHostFactory class.       If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHostBase> instead, then consider also implementing a factory that derives your factory from <xref:System.ServiceModel.Activation.ServiceHostFactoryBase> directly.","pos":[0,593],"nodes":[{"content":"The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).","pos":[0,150]},{"content":"If you have implemented a custom derivative of &lt;xref:System.ServiceModel.WorkflowServiceHost&gt;, consider also implementing a factory that derives from the WorkflowServiceHostFactory class.","pos":[157,344],"source":"       If you have implemented a custom derivative of <xref:System.ServiceModel.WorkflowServiceHost>, consider also implementing a factory that derives from the WorkflowServiceHostFactory class."},{"content":"If you have implemented a custom derivative of &lt;xref:System.ServiceModel.ServiceHostBase&gt; instead, then consider also implementing a factory that derives your factory from &lt;xref:System.ServiceModel.Activation.ServiceHostFactoryBase&gt; directly.","pos":[351,593],"source":"       If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHostBase> instead, then consider also implementing a factory that derives your factory from <xref:System.ServiceModel.Activation.ServiceHostFactoryBase> directly."}]}]},{"pos":[2238,2357],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Activation.WorkflowServiceHostFactory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.WorkflowServiceHostFactory\"></xref> class."},{"pos":[3135,3375],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.WorkflowServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from a string that contains either the file name of the workflow markup file or the type name of the workflow service type and the base address of the service specified.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> from a string that contains either the file name of the workflow markup file or the type name of the workflow service type and the base address of the service specified."},{"pos":[3388,4038],"content":"The `constructorString` argument could be either a fully qualified workflow type name or it could be the relative file path of the workflow definition file declared in the .svc file in which <xref:System.ServiceModel.Activation.ServiceHostFactory> directives are placed.      > [!NOTE] >  To associate a rule definition with a workflow definition, name the rule definition file the same name as the workflow definition file with a .rules extension and place it in same directory as the workflow definition file. For example, the rules definition file CalculatorServiceWorkflow.rules must be in the same directory as CalculatorServiceWorkflow.xoml.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`constructorString`</ph> argument could be either a fully qualified workflow type name or it could be the relative file path of the workflow definition file declared in the .svc file in which &lt;xref:System.ServiceModel.Activation.ServiceHostFactory&gt; directives are placed.","pos":[0,270],"source":"The `constructorString` argument could be either a fully qualified workflow type name or it could be the relative file path of the workflow definition file declared in the .svc file in which <xref:System.ServiceModel.Activation.ServiceHostFactory> directives are placed."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To associate a rule definition with a workflow definition, name the rule definition file the same name as the workflow definition file with a .rules extension and place it in same directory as the workflow definition file.","pos":[276,511],"source":"      > [!NOTE] >  To associate a rule definition with a workflow definition, name the rule definition file the same name as the workflow definition file with a .rules extension and place it in same directory as the workflow definition file."},{"content":"For example, the rules definition file CalculatorServiceWorkflow.rules must be in the same directory as CalculatorServiceWorkflow.xoml.","pos":[512,647]}]},{"pos":[4873,4995],"content":"The file name of the workflow markup file that defines the workflow service or the type name of the workflow service type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file name of the workflow markup file that defines the workflow service or the type name of the workflow service type.","pos":[0,122]}]},{"pos":[5064,5155],"content":"An array of type <xref:System.Uri> that contains the base addresses for the hosted service.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Uri&gt; that contains the base addresses for the hosted service.","pos":[0,91],"source":"An array of type <xref:System.Uri> that contains the base addresses for the hosted service."}]},{"pos":[5235,5478],"content":"A <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> object associated with the workflow service. The default implementation returns a <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> object with the specified base addresses.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ServiceHostBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the workflow service.","pos":[0,103],"source":"A <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> object associated with the workflow service."},{"content":"The default implementation returns a <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.WorkflowServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the specified base addresses.","pos":[104,243],"source":" The default implementation returns a <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> object with the specified base addresses."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory\n  id: WorkflowServiceHostFactory\n  children:\n  - System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor\n  - System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])\n  langs:\n  - csharp\n  name: WorkflowServiceHostFactory\n  nameWithType: WorkflowServiceHostFactory\n  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory\n  type: Class\n  summary: Factory that provides instances of <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> in managed hosting environments where the host instance is created dynamically in response to incoming messages.\n  remarks: \"The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).  \\n  \\n If you have implemented a custom derivative of <xref:System.ServiceModel.WorkflowServiceHost>, consider also implementing a factory that derives from the WorkflowServiceHostFactory class.  \\n  \\n If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHostBase> instead, then consider also implementing a factory that derives your factory from <xref:System.ServiceModel.Activation.ServiceHostFactoryBase> directly.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*\")]\n\n      public class WorkflowServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactoryBase\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Activation.ServiceHostFactoryBase\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory\n  langs:\n  - csharp\n  name: WorkflowServiceHostFactory()\n  nameWithType: WorkflowServiceHostFactory.WorkflowServiceHostFactory()\n  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.WorkflowServiceHostFactory()\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Activation\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.WorkflowServiceHostFactory\"></xref> class.\n  syntax:\n    content: public WorkflowServiceHostFactory ();\n    parameters: []\n  overload: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])\n  id: CreateServiceHost(System.String,System.Uri[])\n  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory\n  langs:\n  - csharp\n  name: CreateServiceHost(String,Uri[])\n  nameWithType: WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])\n  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Activation\n  summary: Creates a <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> from a string that contains either the file name of the workflow markup file or the type name of the workflow service type and the base address of the service specified.\n  remarks: \"The `constructorString` argument could be either a fully qualified workflow type name or it could be the relative file path of the workflow definition file declared in the .svc file in which <xref:System.ServiceModel.Activation.ServiceHostFactory> directives are placed.  \\n  \\n> [!NOTE]\\n>  To associate a rule definition with a workflow definition, name the rule definition file the same name as the workflow definition file with a .rules extension and place it in same directory as the workflow definition file. For example, the rules definition file CalculatorServiceWorkflow.rules must be in the same directory as CalculatorServiceWorkflow.xoml.\"\n  example:\n  - \"The following is an example of a type-based reference to the workflow service CalculatorServiceWorkflow.  \\n  \\n```  \\n<%@ServiceHost language=c# Debug=\\\"true\\\" Factory=\\\"System.ServiceModel.Activation.WorkflowServiceHostFactory\\\" Service=\\\"CalculatorServiceWorkflow\\\" %>  \\n```  \\n  \\n The following is an example of a workflow definition file reference to the workflow service CalculatorServiceWorkflow.  \\n  \\n```  \\n<%@ServiceHost language=c# Debug=\\\"true\\\" Factory=\\\"System.ServiceModel.Activation.WorkflowServiceHostFactory\\\" Service=\\\"CalculatorServiceWorkflow.xoml\\\" %>  \\n```\"\n  syntax:\n    content: public override System.ServiceModel.ServiceHostBase CreateServiceHost (string constructorString, Uri[] baseAddresses);\n    parameters:\n    - id: constructorString\n      type: System.String\n      description: The file name of the workflow markup file that defines the workflow service or the type name of the workflow service type.\n    - id: baseAddresses\n      type: System.Uri[]\n      description: An array of type <xref:System.Uri> that contains the base addresses for the hosted service.\n    return:\n      type: System.ServiceModel.ServiceHostBase\n      description: A <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> object associated with the workflow service. The default implementation returns a <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> object with the specified base addresses.\n  overload: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Activation.ServiceHostFactoryBase\n  isExternal: false\n  name: System.ServiceModel.Activation.ServiceHostFactoryBase\n- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor\n  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory\n  isExternal: false\n  name: WorkflowServiceHostFactory()\n  nameWithType: WorkflowServiceHostFactory.WorkflowServiceHostFactory()\n  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.WorkflowServiceHostFactory()\n- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])\n  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory\n  isExternal: false\n  name: CreateServiceHost(String,Uri[])\n  nameWithType: WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])\n  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])\n- uid: System.ServiceModel.ServiceHostBase\n  parent: System.ServiceModel\n  isExternal: false\n  name: ServiceHostBase\n  nameWithType: ServiceHostBase\n  fullName: System.ServiceModel.ServiceHostBase\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Uri[]\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri[]\n  spec.csharp:\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: Uri[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor*\n  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory\n  isExternal: false\n  name: WorkflowServiceHostFactory\n  nameWithType: WorkflowServiceHostFactory.WorkflowServiceHostFactory\n- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost*\n  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory\n  isExternal: false\n  name: CreateServiceHost\n  nameWithType: WorkflowServiceHostFactory.CreateServiceHost\n"}