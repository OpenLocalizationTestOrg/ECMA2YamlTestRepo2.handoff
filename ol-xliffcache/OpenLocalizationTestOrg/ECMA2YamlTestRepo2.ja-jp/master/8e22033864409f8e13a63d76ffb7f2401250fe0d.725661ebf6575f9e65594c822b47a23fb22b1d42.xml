{"nodes":[{"pos":[449,509],"content":"Specifies the base attribute class for code access security.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the base attribute class for code access security.","pos":[0,60]}]},{"pos":[522,1137],"content":"This attribute class associates a <xref:System.Security.Permissions.SecurityAction>, for example, `Demand`, with a custom security attribute.       The types that derive from CodeAccessSecurityAttribute are used to help restrict access to resources or securable operations.       The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. Use the corresponding permission class derived from <xref:System.Security.CodeAccessPermission> for imperative security.","needQuote":false,"needEscape":true,"nodes":[{"content":"This attribute class associates a &lt;xref:System.Security.Permissions.SecurityAction&gt;, for example, <ph id=\"ph1\">`Demand`</ph>, with a custom security attribute.","pos":[0,141],"source":"This attribute class associates a <xref:System.Security.Permissions.SecurityAction>, for example, `Demand`, with a custom security attribute."},{"content":"The types that derive from CodeAccessSecurityAttribute are used to help restrict access to resources or securable operations.","pos":[148,273]},{"content":"The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.","pos":[280,430]},{"content":"Security attributes are used only for declarative security.","pos":[431,490]},{"content":"Use the corresponding permission class derived from &lt;xref:System.Security.CodeAccessPermission&gt; for imperative security.","pos":[491,611],"source":" Use the corresponding permission class derived from <xref:System.Security.CodeAccessPermission> for imperative security."}]},{"pos":[3025,3215],"content":"Initializes a new instance of <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.CodeAccessSecurityAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of <xref href=\"System.Security.Permissions.CodeAccessSecurityAttribute\"></xref> with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref>."},{"pos":[3227,3338],"content":"You cannot create an instance of this class. You must inherit from this class to make use of its functionality.","needQuote":true,"needEscape":true,"nodes":[{"content":"You cannot create an instance of this class. You must inherit from this class to make use of its functionality.","pos":[0,111],"nodes":[{"content":"You cannot create an instance of this class.","pos":[0,44]},{"content":"You must inherit from this class to make use of its functionality.","pos":[45,111]}]}]},{"pos":[3560,3642],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute\n  id: CodeAccessSecurityAttribute\n  children:\n  - System.Security.Permissions.CodeAccessSecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  langs:\n  - csharp\n  name: CodeAccessSecurityAttribute\n  nameWithType: CodeAccessSecurityAttribute\n  fullName: System.Security.Permissions.CodeAccessSecurityAttribute\n  type: Class\n  summary: Specifies the base attribute class for code access security.\n  remarks: \"This attribute class associates a <xref:System.Security.Permissions.SecurityAction>, for example, `Demand`, with a custom security attribute.  \\n  \\n The types that derive from CodeAccessSecurityAttribute are used to help restrict access to resources or securable operations.  \\n  \\n The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. Use the corresponding permission class derived from <xref:System.Security.CodeAccessPermission> for imperative security.\"\n  example:\n  - \"The following example shows a permission attribute derived from the CodeAccessSecurityAttribute class.  \\n  \\n [!code-cs[System.Security.Permissions.CodeAccessSecurityAttribute#1](~/add/codesnippet/csharp/t-system.security.permis_6_1.cs)]\\n [!code-cpp[System.Security.Permissions.CodeAccessSecurityAttribute#1](~/add/codesnippet/cpp/t-system.security.permis_6_1.cpp)]\\n [!code-vb[System.Security.Permissions.CodeAccessSecurityAttribute#1](~/add/codesnippet/visualbasic/t-system.security.permis_6_1.vb)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class CodeAccessSecurityAttribute : System.Security.Permissions.SecurityAttribute\n  inheritance:\n  - System.Attribute\n  - System.Security.Permissions.SecurityAttribute\n  implements: []\n  inheritedMembers:\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.CreatePermission\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  platform:\n  - net462\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.Security.Permissions.CodeAccessSecurityAttribute\n  langs:\n  - csharp\n  name: CodeAccessSecurityAttribute(SecurityAction)\n  nameWithType: CodeAccessSecurityAttribute.CodeAccessSecurityAttribute(SecurityAction)\n  fullName: System.Security.Permissions.CodeAccessSecurityAttribute.CodeAccessSecurityAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of <xref href=\"System.Security.Permissions.CodeAccessSecurityAttribute\"></xref> with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref>.\n  remarks: You cannot create an instance of this class. You must inherit from this class to make use of its functionality.\n  syntax:\n    content: protected CodeAccessSecurityAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values.\n  overload: System.Security.Permissions.CodeAccessSecurityAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Permissions.SecurityAttribute\n  isExternal: false\n  name: System.Security.Permissions.SecurityAttribute\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.Security.Permissions.CodeAccessSecurityAttribute\n  isExternal: false\n  name: CodeAccessSecurityAttribute(SecurityAction)\n  nameWithType: CodeAccessSecurityAttribute.CodeAccessSecurityAttribute(SecurityAction)\n  fullName: System.Security.Permissions.CodeAccessSecurityAttribute.CodeAccessSecurityAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute.#ctor*\n  parent: System.Security.Permissions.CodeAccessSecurityAttribute\n  isExternal: false\n  name: CodeAccessSecurityAttribute\n  nameWithType: CodeAccessSecurityAttribute.CodeAccessSecurityAttribute\n"}