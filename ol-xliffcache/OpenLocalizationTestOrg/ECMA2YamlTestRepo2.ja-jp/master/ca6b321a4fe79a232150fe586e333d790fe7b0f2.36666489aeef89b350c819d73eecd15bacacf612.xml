{"nodes":[{"pos":[673,772],"content":"Converts an integer to and from an object by applying the integer as an index to a list of objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts an integer to and from an object by applying the integer as an index to a list of objects.","pos":[0,99]}]},{"pos":[785,1636],"content":"You can use the AlternationConverter to bind a property to alternating values. For example, if you want items in a <xref:System.Windows.Controls.ListBox> to have alternating blue and light blue backgrounds, you do the following:      -   Create an AlternationConverter and add a blue <xref:System.Windows.Media.SolidColorBrush> and a light blue <xref:System.Windows.Media.SolidColorBrush> to its <xref:System.Windows.Controls.AlternationConverter.Values%2A> property.      -   In a <xref:System.Windows.Style> for <xref:System.Windows.Controls.ListBoxItem>, bind the <xref:System.Windows.Controls.Control.Background%2A> property to <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> and assign the converter you created to the <xref:System.Windows.Data.Binding.Converter%2A?displayProperty=fullName> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can use the AlternationConverter to bind a property to alternating values. For example, if you want items in a <xref:System.Windows.Controls.ListBox> to have alternating blue and light blue backgrounds, you do the following:      -   Create an AlternationConverter and add a blue <xref:System.Windows.Media.SolidColorBrush> and a light blue <xref:System.Windows.Media.SolidColorBrush> to its <xref:System.Windows.Controls.AlternationConverter.Values%2A> property.      -   In a <xref:System.Windows.Style> for <xref:System.Windows.Controls.ListBoxItem>, bind the <xref:System.Windows.Controls.Control.Background%2A> property to <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> and assign the converter you created to the <xref:System.Windows.Data.Binding.Converter%2A?displayProperty=fullName> property.","pos":[0,847],"nodes":[{"content":"You can use the AlternationConverter to bind a property to alternating values.","pos":[0,78]},{"content":"For example, if you want items in a &lt;xref:System.Windows.Controls.ListBox&gt; to have alternating blue and light blue backgrounds, you do the following:      -   Create an AlternationConverter and add a blue &lt;xref:System.Windows.Media.SolidColorBrush&gt; and a light blue &lt;xref:System.Windows.Media.SolidColorBrush&gt; to its &lt;xref:System.Windows.Controls.AlternationConverter.Values%2A&gt; property.","pos":[79,467],"source":" For example, if you want items in a <xref:System.Windows.Controls.ListBox> to have alternating blue and light blue backgrounds, you do the following:      -   Create an AlternationConverter and add a blue <xref:System.Windows.Media.SolidColorBrush> and a light blue <xref:System.Windows.Media.SolidColorBrush> to its <xref:System.Windows.Controls.AlternationConverter.Values%2A> property."},{"content":"-   In a &lt;xref:System.Windows.Style&gt; for &lt;xref:System.Windows.Controls.ListBoxItem&gt;, bind the &lt;xref:System.Windows.Controls.Control.Background%2A&gt; property to &lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName&gt; and assign the converter you created to the &lt;xref:System.Windows.Data.Binding.Converter%2A?displayProperty=fullName&gt; property.","pos":[473,847],"source":"      -   In a <xref:System.Windows.Style> for <xref:System.Windows.Controls.ListBoxItem>, bind the <xref:System.Windows.Controls.Control.Background%2A> property to <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> and assign the converter you created to the <xref:System.Windows.Data.Binding.Converter%2A?displayProperty=fullName> property."}]}]},{"pos":[2740,2846],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.AlternationConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.AlternationConverter\"></xref> class."},{"pos":[3647,3752],"content":"Converts an integer to an object in the <xref:System.Windows.Controls.AlternationConverter.Values*> list.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts an integer to an object in the &lt;xref:System.Windows.Controls.AlternationConverter.Values*&gt; list.","pos":[0,105],"source":"Converts an integer to an object in the <xref:System.Windows.Controls.AlternationConverter.Values*> list."}]},{"pos":[3960,4073],"content":"The integer to use to find an object in the <xref:System.Windows.Controls.AlternationConverter.Values*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The integer to use to find an object in the &lt;xref:System.Windows.Controls.AlternationConverter.Values*&gt; property.","pos":[0,113],"source":"The integer to use to find an object in the <xref:System.Windows.Controls.AlternationConverter.Values*> property."}]},{"pos":[4138,4178],"content":"The type of the binding target property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the binding target property.","pos":[0,40]}]},{"pos":[4244,4275],"content":"The converter parameter to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The converter parameter to use.","pos":[0,31]}]},{"pos":[4358,4394],"content":"The culture to use in the converter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The culture to use in the converter.","pos":[0,36]}]},{"pos":[4452,4595],"content":"The object that is in the position of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">o</ph><ept id=\"p1\">&lt;/code&gt;</ept> modulo the number of items in &lt;xref:System.Windows.Controls.AlternationConverter.Values*&gt;.","needQuote":true,"needEscape":true,"source":"The object that is in the position of <code>o</code> modulo the number of items in <xref:System.Windows.Controls.AlternationConverter.Values*>."},{"pos":[5344,5449],"content":"Converts an object in the <xref:System.Windows.Controls.AlternationConverter.Values*> list to an integer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts an object in the &lt;xref:System.Windows.Controls.AlternationConverter.Values*&gt; list to an integer.","pos":[0,105],"source":"Converts an object in the <xref:System.Windows.Controls.AlternationConverter.Values*> list to an integer."}]},{"pos":[5661,5756],"content":"The object to find in the <xref:System.Windows.Controls.AlternationConverter.Values*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to find in the &lt;xref:System.Windows.Controls.AlternationConverter.Values*&gt; property.","pos":[0,95],"source":"The object to find in the <xref:System.Windows.Controls.AlternationConverter.Values*> property."}]},{"pos":[5821,5861],"content":"The type of the binding target property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the binding target property.","pos":[0,40]}]},{"pos":[5927,5958],"content":"The converter parameter to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The converter parameter to use.","pos":[0,31]}]},{"pos":[6041,6077],"content":"The culture to use in the converter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The culture to use in the converter.","pos":[0,36]}]},{"pos":[6135,6325],"content":"The index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">o</ph><ept id=\"p1\">&lt;/code&gt;</ept> if it is in &lt;xref:System.Windows.Controls.AlternationConverter.Values<bpt id=\"p2\">*</bpt>&gt;, or –1 if o does not exist in &lt;xref:System.Windows.Controls.AlternationConverter.Values<ept id=\"p2\">*</ept>&gt;.","needQuote":true,"needEscape":true,"source":"The index of <code>o</code> if it is in <xref:System.Windows.Controls.AlternationConverter.Values*>, or –1 if o does not exist in <xref:System.Windows.Controls.AlternationConverter.Values*>."},{"pos":[6811,7018],"content":"Gets a list of objects that the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.AlternationConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> returns when an integer is passed to the &lt;xref:System.Windows.Controls.AlternationConverter.Convert*&gt; method.","needQuote":true,"needEscape":true,"source":"Gets a list of objects that the <xref href=\"System.Windows.Controls.AlternationConverter\"></xref> returns when an integer is passed to the <xref:System.Windows.Controls.AlternationConverter.Convert*> method."},{"pos":[7030,7476],"content":"When you use the <xref:System.Windows.Controls.AlternationConverter> to bind a property to alternating values, the Values property contains the objects that are assigned to the property.  For example, if you want items in a <xref:System.Windows.Controls.ListBox> to have alternating blue and light blue backgrounds, you add a blue <xref:System.Windows.Media.SolidColorBrush> and a light blue <xref:System.Windows.Media.SolidColorBrush> to Values.","needQuote":true,"needEscape":true,"nodes":[{"content":"When you use the <xref:System.Windows.Controls.AlternationConverter> to bind a property to alternating values, the Values property contains the objects that are assigned to the property.  For example, if you want items in a <xref:System.Windows.Controls.ListBox> to have alternating blue and light blue backgrounds, you add a blue <xref:System.Windows.Media.SolidColorBrush> and a light blue <xref:System.Windows.Media.SolidColorBrush> to Values.","pos":[0,446],"nodes":[{"content":"When you use the &lt;xref:System.Windows.Controls.AlternationConverter&gt; to bind a property to alternating values, the Values property contains the objects that are assigned to the property.","pos":[0,186],"source":"When you use the <xref:System.Windows.Controls.AlternationConverter> to bind a property to alternating values, the Values property contains the objects that are assigned to the property."},{"content":"For example, if you want items in a &lt;xref:System.Windows.Controls.ListBox&gt; to have alternating blue and light blue backgrounds, you add a blue &lt;xref:System.Windows.Media.SolidColorBrush&gt; and a light blue &lt;xref:System.Windows.Media.SolidColorBrush&gt; to Values.","pos":[188,446],"source":"  For example, if you want items in a <xref:System.Windows.Controls.ListBox> to have alternating blue and light blue backgrounds, you add a blue <xref:System.Windows.Media.SolidColorBrush> and a light blue <xref:System.Windows.Media.SolidColorBrush> to Values."}]}]},{"pos":[8029,8231],"content":"A list of objects that the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.AlternationConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> returns when an integer is passed to the &lt;xref:System.Windows.Controls.AlternationConverter.Convert*&gt; method.","needQuote":true,"needEscape":true,"source":"A list of objects that the <xref href=\"System.Windows.Controls.AlternationConverter\"></xref> returns when an integer is passed to the <xref:System.Windows.Controls.AlternationConverter.Convert*> method."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.AlternationConverter\n  id: AlternationConverter\n  children:\n  - System.Windows.Controls.AlternationConverter.#ctor\n  - System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  - System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  - System.Windows.Controls.AlternationConverter.Values\n  langs:\n  - csharp\n  name: AlternationConverter\n  nameWithType: AlternationConverter\n  fullName: System.Windows.Controls.AlternationConverter\n  type: Class\n  summary: Converts an integer to and from an object by applying the integer as an index to a list of objects.\n  remarks: \"You can use the AlternationConverter to bind a property to alternating values. For example, if you want items in a <xref:System.Windows.Controls.ListBox> to have alternating blue and light blue backgrounds, you do the following:  \\n  \\n-   Create an AlternationConverter and add a blue <xref:System.Windows.Media.SolidColorBrush> and a light blue <xref:System.Windows.Media.SolidColorBrush> to its <xref:System.Windows.Controls.AlternationConverter.Values%2A> property.  \\n  \\n-   In a <xref:System.Windows.Style> for <xref:System.Windows.Controls.ListBoxItem>, bind the <xref:System.Windows.Controls.Control.Background%2A> property to <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> and assign the converter you created to the <xref:System.Windows.Data.Binding.Converter%2A?displayProperty=fullName> property.\"\n  example:\n  - \"The following example creates a <xref:System.Windows.Controls.ListBox> and uses two AlternationConverter objects to alternate the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.FontStyle%2A> of the items.  \\n  \\n [!code-xml[AlternationIndexSnippets#4](~/add/codesnippet/xaml/AltnerationIndexSnippets/Window1.xaml#4)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Values\")]\n\n      public class AlternationConverter : System.Windows.Data.IValueConverter\n  inheritance:\n  - System.Object\n  implements:\n  - System.Windows.Data.IValueConverter\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.AlternationConverter.#ctor\n  id: '#ctor'\n  parent: System.Windows.Controls.AlternationConverter\n  langs:\n  - csharp\n  name: AlternationConverter()\n  nameWithType: AlternationConverter.AlternationConverter()\n  fullName: System.Windows.Controls.AlternationConverter.AlternationConverter()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.AlternationConverter\"></xref> class.\n  syntax:\n    content: public AlternationConverter ();\n    parameters: []\n  overload: System.Windows.Controls.AlternationConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  id: Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Windows.Controls.AlternationConverter\n  langs:\n  - csharp\n  name: Convert(Object,Type,Object,CultureInfo)\n  nameWithType: AlternationConverter.Convert(Object,Type,Object,CultureInfo)\n  fullName: System.Windows.Controls.AlternationConverter.Convert(Object,Type,Object,CultureInfo)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Converts an integer to an object in the <xref:System.Windows.Controls.AlternationConverter.Values*> list.\n  syntax:\n    content: public object Convert (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The integer to use to find an object in the <xref:System.Windows.Controls.AlternationConverter.Values*> property.\n    - id: targetType\n      type: System.Type\n      description: The type of the binding target property.\n    - id: parameter\n      type: System.Object\n      description: The converter parameter to use.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The culture to use in the converter.\n    return:\n      type: System.Object\n      description: The object that is in the position of <code>o</code> modulo the number of items in <xref:System.Windows.Controls.AlternationConverter.Values*>.\n  overload: System.Windows.Controls.AlternationConverter.Convert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  id: ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Windows.Controls.AlternationConverter\n  langs:\n  - csharp\n  name: ConvertBack(Object,Type,Object,CultureInfo)\n  nameWithType: AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)\n  fullName: System.Windows.Controls.AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Converts an object in the <xref:System.Windows.Controls.AlternationConverter.Values*> list to an integer.\n  syntax:\n    content: public object ConvertBack (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The object to find in the <xref:System.Windows.Controls.AlternationConverter.Values*> property.\n    - id: targetType\n      type: System.Type\n      description: The type of the binding target property.\n    - id: parameter\n      type: System.Object\n      description: The converter parameter to use.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The culture to use in the converter.\n    return:\n      type: System.Object\n      description: The index of <code>o</code> if it is in <xref:System.Windows.Controls.AlternationConverter.Values*>, or –1 if o does not exist in <xref:System.Windows.Controls.AlternationConverter.Values*>.\n  overload: System.Windows.Controls.AlternationConverter.ConvertBack*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.AlternationConverter.Values\n  id: Values\n  parent: System.Windows.Controls.AlternationConverter\n  langs:\n  - csharp\n  name: Values\n  nameWithType: AlternationConverter.Values\n  fullName: System.Windows.Controls.AlternationConverter.Values\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a list of objects that the <xref href=\"System.Windows.Controls.AlternationConverter\"></xref> returns when an integer is passed to the <xref:System.Windows.Controls.AlternationConverter.Convert*> method.\n  remarks: When you use the <xref:System.Windows.Controls.AlternationConverter> to bind a property to alternating values, the Values property contains the objects that are assigned to the property.  For example, if you want items in a <xref:System.Windows.Controls.ListBox> to have alternating blue and light blue backgrounds, you add a blue <xref:System.Windows.Media.SolidColorBrush> and a light blue <xref:System.Windows.Media.SolidColorBrush> to Values.\n  example:\n  - \"The following example creates a <xref:System.Windows.Controls.ListBox> and uses two <xref:System.Windows.Controls.AlternationConverter> objects to alternate the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.FontStyle%2A> of the items.  \\n  \\n [!code-xml[AlternationIndexSnippets#4](~/add/codesnippet/xaml/AltnerationIndexSnippets/Window1.xaml#4)]\"\n  syntax:\n    content: public System.Collections.IList Values { get; }\n    return:\n      type: System.Collections.IList\n      description: A list of objects that the <xref href=\"System.Windows.Controls.AlternationConverter\"></xref> returns when an integer is passed to the <xref:System.Windows.Controls.AlternationConverter.Convert*> method.\n  overload: System.Windows.Controls.AlternationConverter.Values*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Controls.AlternationConverter.#ctor\n  parent: System.Windows.Controls.AlternationConverter\n  isExternal: false\n  name: AlternationConverter()\n  nameWithType: AlternationConverter.AlternationConverter()\n  fullName: System.Windows.Controls.AlternationConverter.AlternationConverter()\n- uid: System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Windows.Controls.AlternationConverter\n  isExternal: false\n  name: Convert(Object,Type,Object,CultureInfo)\n  nameWithType: AlternationConverter.Convert(Object,Type,Object,CultureInfo)\n  fullName: System.Windows.Controls.AlternationConverter.Convert(Object,Type,Object,CultureInfo)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Windows.Controls.AlternationConverter\n  isExternal: false\n  name: ConvertBack(Object,Type,Object,CultureInfo)\n  nameWithType: AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)\n  fullName: System.Windows.Controls.AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)\n- uid: System.Windows.Controls.AlternationConverter.Values\n  parent: System.Windows.Controls.AlternationConverter\n  isExternal: false\n  name: Values\n  nameWithType: AlternationConverter.Values\n  fullName: System.Windows.Controls.AlternationConverter.Values\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: true\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.Windows.Controls.AlternationConverter.#ctor*\n  parent: System.Windows.Controls.AlternationConverter\n  isExternal: false\n  name: AlternationConverter\n  nameWithType: AlternationConverter.AlternationConverter\n- uid: System.Windows.Controls.AlternationConverter.Convert*\n  parent: System.Windows.Controls.AlternationConverter\n  isExternal: false\n  name: Convert\n  nameWithType: AlternationConverter.Convert\n- uid: System.Windows.Controls.AlternationConverter.ConvertBack*\n  parent: System.Windows.Controls.AlternationConverter\n  isExternal: false\n  name: ConvertBack\n  nameWithType: AlternationConverter.ConvertBack\n- uid: System.Windows.Controls.AlternationConverter.Values*\n  parent: System.Windows.Controls.AlternationConverter\n  isExternal: false\n  name: Values\n  nameWithType: AlternationConverter.Values\n"}