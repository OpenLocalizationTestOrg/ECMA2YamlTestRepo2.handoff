{"nodes":[{"pos":[1108,1259],"content":"Represents a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can process X.509 certificate reference types.","needQuote":true,"needEscape":true,"source":"Represents a <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\"></xref> that can process X.509 certificate reference types."},{"pos":[2194,2329],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\"></xref> class."},{"pos":[3227,3406],"content":"Returns a value that indicates whether the specified reader is positioned at an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;ds:X509Data&amp;gt;\" name=\"&amp;lt;ds:X509Data&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the specified reader is positioned at an <xref uid=\"langword_csharp_&lt;ds:X509Data&gt;\" name=\"&lt;ds:X509Data&gt;\" href=\"\"></xref> element."},{"pos":[3594,3669],"content":"An XML reader positioned at the start element of the key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader positioned at the start element of the key identifier clause.","pos":[0,75]}]},{"pos":[3728,3996],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the reader is referring to an <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;ds:X509Data&amp;gt;\" name=\"&amp;lt;ds:X509Data&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the reader is referring to an <xref uid=\"langword_csharp_&lt;ds:X509Data&gt;\" name=\"&lt;ds:X509Data&gt;\" href=\"\"></xref> element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4227,4311],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5129,5238],"content":"Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.","pos":[0,109]}]},{"pos":[5251,5533],"content":"The supported key identifier clause types are:      1.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>      2.  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>      3.  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>","needQuote":false,"needEscape":true,"nodes":[{"content":"The supported key identifier clause types are:      1.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>      2.  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>      3.  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>","pos":[0,276],"nodes":[{"content":"The supported key identifier clause types are:      1.","pos":[0,54]},{"content":"&lt;xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause&gt;      2.","pos":[56,134],"source":"  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>      2."},{"content":"&lt;xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&gt;      3.","pos":[136,209],"source":"  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>      3."},{"content":"&lt;xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&gt;","pos":[211,276],"source":"  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>"}]}]},{"pos":[5835,5870],"content":"The key identifier clause to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause to check.","pos":[0,35]}]},{"pos":[5929,6123],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key identifier clause is supported by this handler; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key identifier clause is supported by this handler; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6355,6460],"content":"<ph id=\"ph1\">&lt;code&gt;securityKeyIdentifierClause&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>securityKeyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7134,7214],"content":"Deserializes a key identifier clause from XML by using the specified XML reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deserializes a key identifier clause from XML by using the specified XML reader.","pos":[0,80]}]},{"pos":[7226,7693],"content":"The ReadKeyIdentifierClause method reads `<ds:X509IssuerSerial>`, `<ds:X509SKI>`, and `<ds:X509Certificate>` elements and returns the first one found as a <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>, a <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>, or a <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>. If one of these elements is not found under the `<ds:X509Data>` element, the method returns `null`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ReadKeyIdentifierClause method reads <ph id=\"ph1\">`&lt;ds:X509IssuerSerial&gt;`</ph>, <ph id=\"ph2\">`&lt;ds:X509SKI&gt;`</ph>, and <ph id=\"ph3\">`&lt;ds:X509Certificate&gt;`</ph> elements and returns the first one found as a &lt;xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause&gt;, a &lt;xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&gt;, or a &lt;xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&gt;.","pos":[0,367],"source":"The ReadKeyIdentifierClause method reads `<ds:X509IssuerSerial>`, `<ds:X509SKI>`, and `<ds:X509Certificate>` elements and returns the first one found as a <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>, a <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>, or a <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>."},{"content":"If one of these elements is not found under the <ph id=\"ph1\">`&lt;ds:X509Data&gt;`</ph> element, the method returns <ph id=\"ph2\">`null`</ph>.","pos":[368,467],"source":" If one of these elements is not found under the `<ds:X509Data>` element, the method returns `null`."}]},{"pos":[7929,8012],"content":"An XML reader positioned at the start element of the key identifier clause to read.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader positioned at the start element of the key identifier clause to read.","pos":[0,83]}]},{"pos":[8112,8282],"content":"The key identifier clause that was deserialized from the XML or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a key identifier clause could not be read.","needQuote":true,"needEscape":true,"source":"The key identifier clause that was deserialized from the XML or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if a key identifier clause could not be read."},{"pos":[8510,8594],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8705,9041],"content":"<code>reader</code> is not positioned at a <xref uid=\"langword_csharp_&lt;ds:X509Data&gt;\" name=\"&lt;ds:X509Data&gt;\" href=\"\"></xref> element. (The <xref:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause*> method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.)","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is not positioned at a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;ds:X509Data&amp;gt;\" name=\"&amp;lt;ds:X509Data&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","pos":[0,142],"source":"<code>reader</code> is not positioned at a <xref uid=\"langword_csharp_&lt;ds:X509Data&gt;\" name=\"&lt;ds:X509Data&gt;\" href=\"\"></xref> element."},{"content":"(The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause*&gt;</ph> method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.)","pos":[143,336],"source":" (The <xref:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause*> method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.)"}]},{"pos":[9916,9963],"content":"Serializes the specified key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serializes the specified key identifier clause.","pos":[0,47]}]},{"pos":[9976,10258],"content":"The supported key identifier clause types are:      1.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>      2.  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>      3.  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>","needQuote":false,"needEscape":true,"nodes":[{"content":"The supported key identifier clause types are:      1.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>      2.  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>      3.  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>","pos":[0,276],"nodes":[{"content":"The supported key identifier clause types are:      1.","pos":[0,54]},{"content":"&lt;xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause&gt;      2.","pos":[56,134],"source":"  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>      2."},{"content":"&lt;xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&gt;      3.","pos":[136,209],"source":"  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>      3."},{"content":"&lt;xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&gt;","pos":[211,276],"source":"  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>"}]}]},{"pos":[10530,10591],"content":"The XML writer to use to serialize the key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML writer to use to serialize the key identifier clause.","pos":[0,61]}]},{"pos":[10717,10756],"content":"The key identifier clause to serialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause to serialize.","pos":[0,39]}]},{"pos":[10986,11209],"content":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>securityKeyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,84],"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;securityKeyIdentifierClause&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[91,207],"source":"       -or-       <code>securityKeyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[11305,11377],"content":"<ph id=\"ph1\">&lt;code&gt;securityKeyIdentifierClause&lt;/code&gt;</ph> is not a supported clause type.","needQuote":true,"needEscape":true,"source":"<code>securityKeyIdentifierClause</code> is not a supported clause type."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\n  id: X509DataSecurityKeyIdentifierClauseSerializer\n  children:\n  - System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.#ctor\n  - System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  langs:\n  - csharp\n  name: X509DataSecurityKeyIdentifierClauseSerializer\n  nameWithType: X509DataSecurityKeyIdentifierClauseSerializer\n  fullName: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\n  type: Class\n  summary: Represents a <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\"></xref> that can process X.509 certificate reference types.\n  syntax:\n    content: 'public class X509DataSecurityKeyIdentifierClauseSerializer : System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\n  langs:\n  - csharp\n  name: X509DataSecurityKeyIdentifierClauseSerializer()\n  nameWithType: X509DataSecurityKeyIdentifierClauseSerializer.X509DataSecurityKeyIdentifierClauseSerializer()\n  fullName: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.X509DataSecurityKeyIdentifierClauseSerializer()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\"></xref> class.\n  syntax:\n    content: public X509DataSecurityKeyIdentifierClauseSerializer ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  id: CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\n  langs:\n  - csharp\n  name: CanReadKeyIdentifierClause(XmlReader)\n  nameWithType: X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the specified reader is positioned at an <xref uid=\"langword_csharp_&lt;ds:X509Data&gt;\" name=\"&lt;ds:X509Data&gt;\" href=\"\"></xref> element.\n  syntax:\n    content: public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at the start element of the key identifier clause.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the reader is referring to an <xref uid=\"langword_csharp_&lt;ds:X509Data&gt;\" name=\"&lt;ds:X509Data&gt;\" href=\"\"></xref> element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\n  langs:\n  - csharp\n  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.\n  remarks: \"The supported key identifier clause types are:  \\n  \\n1.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  \\n  \\n2.  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  \\n  \\n3.  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>\"\n  syntax:\n    content: public override bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);\n    parameters:\n    - id: securityKeyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key identifier clause is supported by this handler; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>securityKeyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  id: ReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\n  langs:\n  - csharp\n  name: ReadKeyIdentifierClause(XmlReader)\n  nameWithType: X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Deserializes a key identifier clause from XML by using the specified XML reader.\n  remarks: The ReadKeyIdentifierClause method reads `<ds:X509IssuerSerial>`, `<ds:X509SKI>`, and `<ds:X509Certificate>` elements and returns the first one found as a <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>, a <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>, or a <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>. If one of these elements is not found under the `<ds:X509Data>` element, the method returns `null`.\n  syntax:\n    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at the start element of the key identifier clause to read.\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause that was deserialized from the XML or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if a key identifier clause could not be read.\n  overload: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>reader</code> is not positioned at a <xref uid=\"langword_csharp_&lt;ds:X509Data&gt;\" name=\"&lt;ds:X509Data&gt;\" href=\"\"></xref> element. (The <xref:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause*> method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.)\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\n  langs:\n  - csharp\n  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  nameWithType: X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Serializes the specified key identifier clause.\n  remarks: \"The supported key identifier clause types are:  \\n  \\n1.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  \\n  \\n2.  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  \\n  \\n3.  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>\"\n  syntax:\n    content: public override void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: The XML writer to use to serialize the key identifier clause.\n    - id: securityKeyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to serialize.\n  overload: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>reader</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>securityKeyIdentifierClause</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>securityKeyIdentifierClause</code> is not a supported clause type.\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.#ctor\n  parent: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: X509DataSecurityKeyIdentifierClauseSerializer()\n  nameWithType: X509DataSecurityKeyIdentifierClauseSerializer.X509DataSecurityKeyIdentifierClauseSerializer()\n  fullName: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.X509DataSecurityKeyIdentifierClauseSerializer()\n- uid: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: CanReadKeyIdentifierClause(XmlReader)\n  nameWithType: X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(XmlReader)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: ReadKeyIdentifierClause(XmlReader)\n  nameWithType: X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(XmlReader)\n- uid: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  nameWithType: X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.#ctor*\n  parent: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: X509DataSecurityKeyIdentifierClauseSerializer\n  nameWithType: X509DataSecurityKeyIdentifierClauseSerializer.X509DataSecurityKeyIdentifierClauseSerializer\n- uid: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: CanReadKeyIdentifierClause\n  nameWithType: X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: CanWriteKeyIdentifierClause\n  nameWithType: X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: ReadKeyIdentifierClause\n  nameWithType: X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: WriteKeyIdentifierClause\n  nameWithType: X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause\n"}