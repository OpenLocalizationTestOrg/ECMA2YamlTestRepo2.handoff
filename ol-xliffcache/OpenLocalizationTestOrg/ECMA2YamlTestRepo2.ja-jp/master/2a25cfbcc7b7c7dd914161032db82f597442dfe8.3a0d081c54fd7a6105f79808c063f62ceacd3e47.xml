{"nodes":[{"pos":[565,686],"content":"Represents a branch of an <xref href=\"System.Workflow.Activities.IfElseActivity\"></xref>. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a branch of an <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.IfElseActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,89],"source":"Represents a branch of an <xref href=\"System.Workflow.Activities.IfElseActivity\"></xref>."},{"content":"This class cannot be inherited.","pos":[90,121]}]},{"pos":[699,1024],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The <xref:System.Workflow.ComponentModel.ActivityCondition> of each branch is determined before the branch is run. The first IfElseBranchActivity in the <xref:System.Workflow.Activities.IfElseActivity> that evaluates to `true` is run.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       The &lt;xref:System.Workflow.ComponentModel.ActivityCondition&gt; of each branch is determined before the branch is run.","pos":[0,202],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The <xref:System.Workflow.ComponentModel.ActivityCondition> of each branch is determined before the branch is run."},{"content":"The first IfElseBranchActivity in the &lt;xref:System.Workflow.Activities.IfElseActivity&gt; that evaluates to <ph id=\"ph1\">`true`</ph> is run.","pos":[203,322],"source":" The first IfElseBranchActivity in the <xref:System.Workflow.Activities.IfElseActivity> that evaluates to `true` is run."}]},{"pos":[10290,10399],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.IfElseBranchActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.IfElseBranchActivity\"></xref> class."},{"pos":[11652,11792],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.IfElseBranchActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the name of the activity.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.IfElseBranchActivity\"></xref> class using the name of the activity."},{"pos":[11935,11973],"content":"The user-defined name of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user-defined name of the activity.","pos":[0,38]}]},{"pos":[12488,12722],"content":"Gets or sets an <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> object reference for the current branch activity. The evaluation of this condition returns a value that indicates whether this branch should be run.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets an <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object reference for the current branch activity.","pos":[0,135],"source":"Gets or sets an <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> object reference for the current branch activity."},{"content":"The evaluation of this condition returns a value that indicates whether this branch should be run.","pos":[136,234]}]},{"pos":[12734,12911],"content":"This property is optional on the last <xref:System.Workflow.Activities.IfElseBranchActivity> in the <xref:System.Workflow.Activities.IfElseActivity> and required in other cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is optional on the last &lt;xref:System.Workflow.Activities.IfElseBranchActivity&gt; in the &lt;xref:System.Workflow.Activities.IfElseActivity&gt; and required in other cases.","pos":[0,177],"source":"This property is optional on the last <xref:System.Workflow.Activities.IfElseBranchActivity> in the <xref:System.Workflow.Activities.IfElseActivity> and required in other cases."}]},{"pos":[13708,13851],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that returns a value that indicates whether this branch should be run.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> that returns a value that indicates whether this branch should be run."},{"pos":[14407,14585],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the &lt;xref:System.Workflow.Activities.IfElseBranchActivity.Condition*&gt; property.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.IfElseBranchActivity.Condition*> property."},{"pos":[14891,14903],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.IfElseBranchActivity\n  id: IfElseBranchActivity\n  children:\n  - System.Workflow.Activities.IfElseBranchActivity.#ctor\n  - System.Workflow.Activities.IfElseBranchActivity.#ctor(System.String)\n  - System.Workflow.Activities.IfElseBranchActivity.Condition\n  - System.Workflow.Activities.IfElseBranchActivity.ConditionProperty\n  langs:\n  - csharp\n  name: IfElseBranchActivity\n  nameWithType: IfElseBranchActivity\n  fullName: System.Workflow.Activities.IfElseBranchActivity\n  type: Class\n  summary: Represents a branch of an <xref href=\"System.Workflow.Activities.IfElseActivity\"></xref>. This class cannot be inherited.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n The <xref:System.Workflow.ComponentModel.ActivityCondition> of each branch is determined before the branch is run. The first IfElseBranchActivity in the <xref:System.Workflow.Activities.IfElseActivity> that evaluates to `true` is run.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.IfElseBranchDesigner), typeof(System.ComponentModel.Design.IDesigner))]\n\n      [System.ComponentModel.ToolboxItem(false)]\n\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.IfElseBranchActivity), \"Resources.DecisionBranch.bmp\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.IfElseBranchValidator))]\n\n      public sealed class IfElseBranchActivity : System.Workflow.Activities.SequenceActivity\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  - System.Workflow.ComponentModel.CompositeActivity\n  - System.Workflow.Activities.SequenceActivity\n  implements: []\n  inheritedMembers:\n  - System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.CompositeActivity.Activities\n  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  platform:\n  - net462\n- uid: System.Workflow.Activities.IfElseBranchActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.IfElseBranchActivity\n  langs:\n  - csharp\n  name: IfElseBranchActivity()\n  nameWithType: IfElseBranchActivity.IfElseBranchActivity()\n  fullName: System.Workflow.Activities.IfElseBranchActivity.IfElseBranchActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.IfElseBranchActivity\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create two new instances of the <xref:System.Workflow.Activities.IfElseBranchActivity> class.  This code example is part of the Compensation SDK Sample from the PurchaseOrder.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using Compensation](http://msdn.microsoft.com/en-us/c847a694-9978-46af-aa80-5bd1833f813b).  \\n  \\n [!code-cs[wf_samples#38](~/add/codesnippet/csharp/wf_snippets/snippets.cs#38)]\\n [!code-vb[wf_samples#38](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#38)]\"\n  syntax:\n    content: public IfElseBranchActivity ();\n    parameters: []\n  overload: System.Workflow.Activities.IfElseBranchActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.IfElseBranchActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.IfElseBranchActivity\n  langs:\n  - csharp\n  name: IfElseBranchActivity(String)\n  nameWithType: IfElseBranchActivity.IfElseBranchActivity(String)\n  fullName: System.Workflow.Activities.IfElseBranchActivity.IfElseBranchActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.IfElseBranchActivity\"></xref> class using the name of the activity.\n  syntax:\n    content: public IfElseBranchActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-defined name of the activity.\n  overload: System.Workflow.Activities.IfElseBranchActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.IfElseBranchActivity.Condition\n  id: Condition\n  parent: System.Workflow.Activities.IfElseBranchActivity\n  langs:\n  - csharp\n  name: Condition\n  nameWithType: IfElseBranchActivity.Condition\n  fullName: System.Workflow.Activities.IfElseBranchActivity.Condition\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets an <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> object reference for the current branch activity. The evaluation of this condition returns a value that indicates whether this branch should be run.\n  remarks: This property is optional on the last <xref:System.Workflow.Activities.IfElseBranchActivity> in the <xref:System.Workflow.Activities.IfElseActivity> and required in other cases.\n  example:\n  - \"The following code example shows how to set the Condition property. This code assumes that `Available` is of type <xref:System.Workflow.Activities.IfElseBranchActivity>. This code example is part of the Compensation SDK Sample from the PurchaseOrder.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using Compensation](http://msdn.microsoft.com/en-us/c847a694-9978-46af-aa80-5bd1833f813b).  \\n  \\n [!code-cs[wf_samples#39](~/add/codesnippet/csharp/wf_snippets/snippets.cs#39)]\\n [!code-vb[wf_samples#39](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#39)]\"\n  syntax:\n    content: public System.Workflow.ComponentModel.ActivityCondition Condition { get; set; }\n    return:\n      type: System.Workflow.ComponentModel.ActivityCondition\n      description: An <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> that returns a value that indicates whether this branch should be run.\n  overload: System.Workflow.Activities.IfElseBranchActivity.Condition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.IfElseBranchActivity.ConditionProperty\n  id: ConditionProperty\n  parent: System.Workflow.Activities.IfElseBranchActivity\n  langs:\n  - csharp\n  name: ConditionProperty\n  nameWithType: IfElseBranchActivity.ConditionProperty\n  fullName: System.Workflow.Activities.IfElseBranchActivity.ConditionProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.IfElseBranchActivity.Condition*> property.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ConditionProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.Activities.SequenceActivity\n  isExternal: false\n  name: System.Workflow.Activities.SequenceActivity\n- uid: System.Workflow.Activities.IfElseBranchActivity.#ctor\n  parent: System.Workflow.Activities.IfElseBranchActivity\n  isExternal: false\n  name: IfElseBranchActivity()\n  nameWithType: IfElseBranchActivity.IfElseBranchActivity()\n  fullName: System.Workflow.Activities.IfElseBranchActivity.IfElseBranchActivity()\n- uid: System.Workflow.Activities.IfElseBranchActivity.#ctor(System.String)\n  parent: System.Workflow.Activities.IfElseBranchActivity\n  isExternal: false\n  name: IfElseBranchActivity(String)\n  nameWithType: IfElseBranchActivity.IfElseBranchActivity(String)\n  fullName: System.Workflow.Activities.IfElseBranchActivity.IfElseBranchActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.IfElseBranchActivity.Condition\n  parent: System.Workflow.Activities.IfElseBranchActivity\n  isExternal: false\n  name: Condition\n  nameWithType: IfElseBranchActivity.Condition\n  fullName: System.Workflow.Activities.IfElseBranchActivity.Condition\n- uid: System.Workflow.ComponentModel.ActivityCondition\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityCondition\n  nameWithType: ActivityCondition\n  fullName: System.Workflow.ComponentModel.ActivityCondition\n- uid: System.Workflow.Activities.IfElseBranchActivity.ConditionProperty\n  parent: System.Workflow.Activities.IfElseBranchActivity\n  isExternal: false\n  name: ConditionProperty\n  nameWithType: IfElseBranchActivity.ConditionProperty\n  fullName: System.Workflow.Activities.IfElseBranchActivity.ConditionProperty\n- uid: System.Workflow.ComponentModel.DependencyProperty\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Workflow.ComponentModel.DependencyProperty\n- uid: System.Workflow.Activities.IfElseBranchActivity.#ctor*\n  parent: System.Workflow.Activities.IfElseBranchActivity\n  isExternal: false\n  name: IfElseBranchActivity\n  nameWithType: IfElseBranchActivity.IfElseBranchActivity\n- uid: System.Workflow.Activities.IfElseBranchActivity.Condition*\n  parent: System.Workflow.Activities.IfElseBranchActivity\n  isExternal: false\n  name: Condition\n  nameWithType: IfElseBranchActivity.Condition\n"}