{"nodes":[{"pos":[4245,4340],"content":"Represents a displacement in <ph id=\"ph1\">[!INCLUDE[TLA#tla_3d](~/add/includes/tlasharptla-3d-md.md)]</ph> space.","needQuote":true,"needEscape":true,"source":"Represents a displacement in [!INCLUDE[TLA#tla_3d](~/add/includes/tlasharptla-3d-md.md)] space."},{"pos":[4353,4897],"content":"<a name=\"xamlAttributeUsage_Duration\"></a>    ## XAML Attribute Usage      ```   <object property=\"x,y,z\"/>   -or   <object property=\"x y z\"/>   ```      <a name=\"xamlValues_MinWidth\"></a>    ## XAML Values    *x*    The <xref:System.Windows.Media.Media3D.Vector3D.X%2A> component of this Vector3D structure.       *y*    The <xref:System.Windows.Media.Media3D.Vector3D.Y%2A> component of this Vector3D structure.       *z*    The <xref:System.Windows.Media.Media3D.Vector3D.Z%2A> component of this Vector3D structure.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_Duration\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object property=\"x,y,z\"/&gt;   -or   &lt;object property=\"x y z\"/&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_MinWidth\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>x<ept id=\"p3\">*</ept>    The &lt;xref:System.Windows.Media.Media3D.Vector3D.X%2A&gt; component of this Vector3D structure.","pos":[0,308],"source":"<a name=\"xamlAttributeUsage_Duration\"></a>    ## XAML Attribute Usage      ```   <object property=\"x,y,z\"/>   -or   <object property=\"x y z\"/>   ```      <a name=\"xamlValues_MinWidth\"></a>    ## XAML Values    *x*    The <xref:System.Windows.Media.Media3D.Vector3D.X%2A> component of this Vector3D structure."},{"content":"<bpt id=\"p1\">*</bpt>y<ept id=\"p1\">*</ept>    The &lt;xref:System.Windows.Media.Media3D.Vector3D.Y%2A&gt; component of this Vector3D structure.","pos":[315,413],"source":"*y*    The <xref:System.Windows.Media.Media3D.Vector3D.Y%2A> component of this Vector3D structure."},{"content":"<bpt id=\"p1\">*</bpt>z<ept id=\"p1\">*</ept>    The &lt;xref:System.Windows.Media.Media3D.Vector3D.Z%2A&gt; component of this Vector3D structure.","pos":[420,518],"source":"*z*    The <xref:System.Windows.Media.Media3D.Vector3D.Z%2A> component of this Vector3D structure."}]},{"pos":[6502,6603],"content":"Initializes a new instance of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Vector3D\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Media3D.Vector3D\n  id: Vector3D\n  children:\n  - System.Windows.Media.Media3D.Vector3D.#ctor(System.Double,System.Double,System.Double)\n  - System.Windows.Media.Media3D.Vector3D.Add(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)\n  - System.Windows.Media.Media3D.Vector3D.Add(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  - System.Windows.Media.Media3D.Vector3D.AngleBetween(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  - System.Windows.Media.Media3D.Vector3D.CrossProduct(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  - System.Windows.Media.Media3D.Vector3D.Divide(System.Windows.Media.Media3D.Vector3D,System.Double)\n  - System.Windows.Media.Media3D.Vector3D.DotProduct(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  - System.Windows.Media.Media3D.Vector3D.Equals(System.Object)\n  - System.Windows.Media.Media3D.Vector3D.Equals(System.Windows.Media.Media3D.Vector3D)\n  - System.Windows.Media.Media3D.Vector3D.Equals(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  - System.Windows.Media.Media3D.Vector3D.GetHashCode\n  - System.Windows.Media.Media3D.Vector3D.Length\n  - System.Windows.Media.Media3D.Vector3D.LengthSquared\n  - System.Windows.Media.Media3D.Vector3D.Multiply(System.Double,System.Windows.Media.Media3D.Vector3D)\n  - System.Windows.Media.Media3D.Vector3D.Multiply(System.Windows.Media.Media3D.Vector3D,System.Double)\n  - System.Windows.Media.Media3D.Vector3D.Multiply(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Matrix3D)\n  - System.Windows.Media.Media3D.Vector3D.Negate\n  - System.Windows.Media.Media3D.Vector3D.Normalize\n  - System.Windows.Media.Media3D.Vector3D.op_Addition(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)\n  - System.Windows.Media.Media3D.Vector3D.op_Addition(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  - System.Windows.Media.Media3D.Vector3D.op_Division(System.Windows.Media.Media3D.Vector3D,System.Double)\n  - System.Windows.Media.Media3D.Vector3D.op_Equality(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  - System.Windows.Media.Media3D.Vector3D.op_Explicit(System.Windows.Media.Media3D.Vector3D to System.Windows.Media.Media3D.Point3D)\n  - System.Windows.Media.Media3D.Vector3D.op_Explicit(System.Windows.Media.Media3D.Vector3D to System.Windows.Media.Media3D.Size3D)\n  - System.Windows.Media.Media3D.Vector3D.op_Inequality(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  - System.Windows.Media.Media3D.Vector3D.op_Multiply(System.Double,System.Windows.Media.Media3D.Vector3D)\n  - System.Windows.Media.Media3D.Vector3D.op_Multiply(System.Windows.Media.Media3D.Vector3D,System.Double)\n  - System.Windows.Media.Media3D.Vector3D.op_Multiply(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Matrix3D)\n  - System.Windows.Media.Media3D.Vector3D.op_Subtraction(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)\n  - System.Windows.Media.Media3D.Vector3D.op_Subtraction(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  - System.Windows.Media.Media3D.Vector3D.op_UnaryNegation(System.Windows.Media.Media3D.Vector3D)\n  - System.Windows.Media.Media3D.Vector3D.Parse(System.String)\n  - System.Windows.Media.Media3D.Vector3D.Subtract(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)\n  - System.Windows.Media.Media3D.Vector3D.Subtract(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  - System.Windows.Media.Media3D.Vector3D.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.Media.Media3D.Vector3D.ToString\n  - System.Windows.Media.Media3D.Vector3D.ToString(System.IFormatProvider)\n  - System.Windows.Media.Media3D.Vector3D.X\n  - System.Windows.Media.Media3D.Vector3D.Y\n  - System.Windows.Media.Media3D.Vector3D.Z\n  langs:\n  - csharp\n  name: Vector3D\n  nameWithType: Vector3D\n  fullName: System.Windows.Media.Media3D.Vector3D\n  type: Struct\n  summary: Represents a displacement in [!INCLUDE[TLA#tla_3d](~/add/includes/tlasharptla-3d-md.md)] space.\n  remarks: \"<a name=\\\"xamlAttributeUsage_Duration\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object property=\\\"x,y,z\\\"/>  \\n-or  \\n<object property=\\\"x y z\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_MinWidth\\\"></a>   \\n## XAML Values  \\n *x*  \\n The <xref:System.Windows.Media.Media3D.Vector3D.X%2A> component of this Vector3D structure.  \\n  \\n *y*  \\n The <xref:System.Windows.Media.Media3D.Vector3D.Y%2A> component of this Vector3D structure.  \\n  \\n *z*  \\n The <xref:System.Windows.Media.Media3D.Vector3D.Z%2A> component of this Vector3D structure.\"\n  example:\n  - \"This example shows how to subtract Vector3D structures using the overloaded subtraction (`-`) operator and the Vector3D static <xref:System.Windows.Media.Media3D.Vector3D.Subtract%2A> method.  \\n  \\n The following code shows how to use the Vector3D subtraction methods.  First, the Vector3D structures are instantiated.  The Vector3D structures are subtracted using the overloaded (`-`) operator, and then they are subtracted using the static <xref:System.Windows.Media.Media3D.Vector3D.Subtract%2A> method.  \\n  \\n [!code-cs[3DGallery_procedural_snip#Subtract3DVectorsExample_csharp](~/add/codesnippet/csharp/3DSnippetGallery_csharp/Misc3DOperationsExample.cs#subtract3dvectorsexample_csharp)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Media3D.Vector3DConverter))]\n\n      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Media3D.Converters.Vector3DValueSerializer))]\n\n      public struct Vector3D : IFormattable\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.IFormattable\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.#ctor(System.Double,System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double,System.Double)'\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Vector3D(Double,Double,Double)\n  nameWithType: Vector3D.Vector3D(Double,Double,Double)\n  fullName: System.Windows.Media.Media3D.Vector3D.Vector3D(Double,Double,Double)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Initializes a new instance of a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: ''\n  example:\n  - >-\n    [!code-cs[vector3dsample#Mil3dVectorSample3DN2](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn2)]\n     [!code-vb[vector3dsample#Mil3dVectorSample3DN2](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn2)]\n  syntax:\n    content: public Vector3D (double x, double y, double z);\n    parameters:\n    - id: x\n      type: System.Double\n      description: The new <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure's <xref:System.Windows.Media.Media3D.Vector3D.X*> value.\n    - id: y\n      type: System.Double\n      description: The new <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure's <xref:System.Windows.Media.Media3D.Vector3D.Y*> value.\n    - id: z\n      type: System.Double\n      description: The new <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure's <xref:System.Windows.Media.Media3D.Vector3D.Z*> value.\n  overload: System.Windows.Media.Media3D.Vector3D.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.Add(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)\n  id: Add(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Add(Vector3D,Point3D)\n  nameWithType: Vector3D.Add(Vector3D,Point3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.Add(Vector3D,Point3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Translates the specified <xref href=\"System.Windows.Media.Media3D.Point3D\"></xref> structure by the specified <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure and returns the result as a <xref href=\"System.Windows.Media.Media3D.Point3D\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the Add method to translate a <xref:System.Windows.Media.Media3D.Point3D> structure by a <xref:System.Windows.Media.Media3D.Vector3D> structure.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN4](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn4)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN4](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn4)]\"\n  syntax:\n    content: public static System.Windows.Media.Media3D.Point3D Add (System.Windows.Media.Media3D.Vector3D vector, System.Windows.Media.Media3D.Point3D point);\n    parameters:\n    - id: vector\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure used to translate the specified <xref href=\"System.Windows.Media.Media3D.Point3D\"></xref> structure.\n    - id: point\n      type: System.Windows.Media.Media3D.Point3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Point3D\"></xref> structure to be translated.\n    return:\n      type: System.Windows.Media.Media3D.Point3D\n      description: The result of translating <code>point</code> by <code>vector</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.Add(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  id: Add(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Add(Vector3D,Vector3D)\n  nameWithType: Vector3D.Add(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.Add(Vector3D,Vector3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Adds two <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structures and returns the result as a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following example shows how to add two <xref:System.Windows.Media.Media3D.Vector3D> structures.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN3](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn3)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN3](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn3)]\"\n  syntax:\n    content: public static System.Windows.Media.Media3D.Vector3D Add (System.Windows.Media.Media3D.Vector3D vector1, System.Windows.Media.Media3D.Vector3D vector2);\n    parameters:\n    - id: vector1\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The first <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to add.\n    - id: vector2\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The second <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to add.\n    return:\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The sum of <code>vector1</code> and <code>vector2</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.AngleBetween(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  id: AngleBetween(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: AngleBetween(Vector3D,Vector3D)\n  nameWithType: Vector3D.AngleBetween(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.AngleBetween(Vector3D,Vector3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Retrieves the angle required to rotate the first specified  <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure into the second specified  <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: Signed angles do not extend into [!INCLUDE[TLA#tla_3d](~/add/includes/tlasharptla-3d-md.md)] space, so an angle between 0 and 180 degrees is returned.\n  example:\n  - \"The following example shows how to get the angle between two <xref:System.Windows.Media.Media3D.Vector3D> structures.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN22](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn22)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN22](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn22)]\"\n  syntax:\n    content: public static double AngleBetween (System.Windows.Media.Media3D.Vector3D vector1, System.Windows.Media.Media3D.Vector3D vector2);\n    parameters:\n    - id: vector1\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The first <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to evaluate.\n    - id: vector2\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The second <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to evaluate.\n    return:\n      type: System.Double\n      description: The angle in degrees needed to rotate <code>vector1</code> into <code>vector2</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.AngleBetween*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.CrossProduct(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  id: CrossProduct(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: CrossProduct(Vector3D,Vector3D)\n  nameWithType: Vector3D.CrossProduct(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.CrossProduct(Vector3D,Vector3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Calculates the cross product of two <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structures.\n  remarks: ''\n  example:\n  - >-\n    [!code-cs[vector3dsample#Mil3dVectorSample3DN23](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn23)]\n     [!code-vb[vector3dsample#Mil3dVectorSample3DN23](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn23)]\n  syntax:\n    content: public static System.Windows.Media.Media3D.Vector3D CrossProduct (System.Windows.Media.Media3D.Vector3D vector1, System.Windows.Media.Media3D.Vector3D vector2);\n    parameters:\n    - id: vector1\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The first <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to evaluate.\n    - id: vector2\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The second <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to evaluate.\n    return:\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The cross product of <code>vector1</code> and <code>vector2</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.CrossProduct*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.Divide(System.Windows.Media.Media3D.Vector3D,System.Double)\n  id: Divide(System.Windows.Media.Media3D.Vector3D,System.Double)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Divide(Vector3D,Double)\n  nameWithType: Vector3D.Divide(Vector3D,Double)\n  fullName: System.Windows.Media.Media3D.Vector3D.Divide(Vector3D,Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Divides the specified <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure by the specified scalar and returns the result as a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows how to divide a <xref:System.Windows.Media.Media3D.Vector3D> structure by a scalar.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN16](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn16)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN16](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn16)]\"\n  syntax:\n    content: public static System.Windows.Media.Media3D.Vector3D Divide (System.Windows.Media.Media3D.Vector3D vector, double scalar);\n    parameters:\n    - id: vector\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to be divided.\n    - id: scalar\n      type: System.Double\n      description: The scalar to divide `vector` by.\n    return:\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The result of dividing <code>vector</code> by <code>scalar</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.Divide*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.DotProduct(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  id: DotProduct(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: DotProduct(Vector3D,Vector3D)\n  nameWithType: Vector3D.DotProduct(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.DotProduct(Vector3D,Vector3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Calculates the dot product of two <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structures.\n  remarks: ''\n  example:\n  - \"The following example shows how to calculate the dot product of two <xref:System.Windows.Media.Media3D.Vector3D> structures.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN24](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn24)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN24](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn24)]\"\n  syntax:\n    content: public static double DotProduct (System.Windows.Media.Media3D.Vector3D vector1, System.Windows.Media.Media3D.Vector3D vector2);\n    parameters:\n    - id: vector1\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The first <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to evaluate.\n    - id: vector2\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The second <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to evaluate.\n    return:\n      type: System.Double\n      description: The dot product of <code>vector1</code> and <code>vector2</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.DotProduct*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Vector3D.Equals(Object)\n  fullName: System.Windows.Media.Media3D.Vector3D.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Determines whether the specified object is a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure and whether the <xref:System.Windows.Media.Media3D.Vector3D.X*>, <xref:System.Windows.Media.Media3D.Vector3D.Y*>, and <xref:System.Windows.Media.Media3D.Vector3D.Z*> properties of the specified <xref:System.Object> are equal to the <xref:System.Windows.Media.Media3D.Vector3D.X*>, <xref:System.Windows.Media.Media3D.Vector3D.Y*>, and <xref:System.Windows.Media.Media3D.Vector3D.Z*> properties of this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: \"If `o` is not a <xref:System.Windows.Media.Media3D.Vector3D> structure, this method returns `false`.  \\n  \\n <xref:System.Windows.Media.Media3D.Vector3D> values are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Vector3D> values that are logically equal might fail.\"\n  example:\n  - \"The following example shows how to check if an <xref:System.Object> and a <xref:System.Windows.Media.Media3D.Vector3D> structure are equal.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN27](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn27)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN27](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn27)]\"\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The object to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>o</code> is a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure and is identical with this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise.\n  overload: System.Windows.Media.Media3D.Vector3D.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.Equals(System.Windows.Media.Media3D.Vector3D)\n  id: Equals(System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Equals(Vector3D)\n  nameWithType: Vector3D.Equals(Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.Equals(Vector3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Compares two <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structures for equality.\n  remarks: <xref:System.Windows.Media.Media3D.Vector3D> values are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Vector3D> values that are logically equal might fail.\n  syntax:\n    content: public bool Equals (System.Windows.Media.Media3D.Vector3D value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The instance of Vector to compare against this instance.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if instances are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Media3D.Vector3D.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.Equals(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  id: Equals(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Equals(Vector3D,Vector3D)\n  nameWithType: Vector3D.Equals(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.Equals(Vector3D,Vector3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Compares two <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structures for equality.\n  remarks: \"Two <xref:System.Windows.Media.Media3D.Vector3D> structures are equal if the values of their <xref:System.Windows.Media.Media3D.Vector3D.X%2A>, <xref:System.Windows.Media.Media3D.Vector3D.Y%2A>, and <xref:System.Windows.Media.Media3D.Vector3D.Z%2A> properties are the same.  \\n  \\n <xref:System.Windows.Media.Media3D.Vector3D> values are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Vector3D> values that are logically equal might fail.\"\n  example:\n  - \"The following example checks whether two <xref:System.Windows.Media.Media3D.Vector3D> structures are equal.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN26](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn26)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN26](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn26)]\"\n  syntax:\n    content: public static bool Equals (System.Windows.Media.Media3D.Vector3D vector1, System.Windows.Media.Media3D.Vector3D vector2);\n    parameters:\n    - id: vector1\n      type: System.Windows.Media.Media3D.Vector3D\n      description: First <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> to compare.\n    - id: vector2\n      type: System.Windows.Media.Media3D.Vector3D\n      description: Second <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Media.Media3D.Vector3D.X*>, <xref:System.Windows.Media.Media3D.Vector3D.Y*>, and <xref:System.Windows.Media.Media3D.Vector3D.Z*> components of <code>vector1</code> and <code>vector2</code> are equal; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise.\n  overload: System.Windows.Media.Media3D.Vector3D.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Vector3D.GetHashCode()\n  fullName: System.Windows.Media.Media3D.Vector3D.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Gets a hash code for this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following example shows how to get the hashcode of a <xref:System.Windows.Media.Media3D.Vector3D> structure.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN33](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn33)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN33](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn33)]\"\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  overload: System.Windows.Media.Media3D.Vector3D.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.Length\n  id: Length\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Length\n  nameWithType: Vector3D.Length\n  fullName: System.Windows.Media.Media3D.Vector3D.Length\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Gets the length of this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: The length of a <xref:System.Windows.Media.Media3D.Vector3D> is sometimes referred to as the magnitude.\n  example:\n  - \"The following example shows how to get the length of a <xref:System.Windows.Media.Media3D.Vector3D> structure.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN19](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn19)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN19](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn19)]\"\n  syntax:\n    content: public double Length { get; }\n    return:\n      type: System.Double\n      description: The length of this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  overload: System.Windows.Media.Media3D.Vector3D.Length*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.LengthSquared\n  id: LengthSquared\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: LengthSquared\n  nameWithType: Vector3D.LengthSquared\n  fullName: System.Windows.Media.Media3D.Vector3D.LengthSquared\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Gets the square of the length of this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: The length of a <xref:System.Windows.Media.Media3D.Vector3D> is sometimes referred to as the magnitude.\n  example:\n  - \"The following example shows how to get the square of the length of a <xref:System.Windows.Media.Media3D.Vector3D> structure.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN20](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn20)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN20](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn20)]\"\n  syntax:\n    content: public double LengthSquared { get; }\n    return:\n      type: System.Double\n      description: The square of the length of this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  overload: System.Windows.Media.Media3D.Vector3D.LengthSquared*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.Multiply(System.Double,System.Windows.Media.Media3D.Vector3D)\n  id: Multiply(System.Double,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Multiply(Double,Vector3D)\n  nameWithType: Vector3D.Multiply(Double,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.Multiply(Double,Vector3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Multiplies the specified scalar by the specified <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure and returns the result as a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows how to multiply a scalar by a <xref:System.Windows.Media.Media3D.Vector3D> structure.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN13](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn13)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN13](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn13)]\"\n  syntax:\n    content: public static System.Windows.Media.Media3D.Vector3D Multiply (double scalar, System.Windows.Media.Media3D.Vector3D vector);\n    parameters:\n    - id: scalar\n      type: System.Double\n      description: The scalar to multiply.\n    - id: vector\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to multiply.\n    return:\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The result of multiplying <code>scalar</code> and <code>vector</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.Multiply(System.Windows.Media.Media3D.Vector3D,System.Double)\n  id: Multiply(System.Windows.Media.Media3D.Vector3D,System.Double)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Multiply(Vector3D,Double)\n  nameWithType: Vector3D.Multiply(Vector3D,Double)\n  fullName: System.Windows.Media.Media3D.Vector3D.Multiply(Vector3D,Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Multiplies the specified <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure by the specified scalar and returns the result as a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows how to multiply a <xref:System.Windows.Media.Media3D.Vector3D> structure by a scalar.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN13](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn13)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN13](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn13)]\"\n  syntax:\n    content: public static System.Windows.Media.Media3D.Vector3D Multiply (System.Windows.Media.Media3D.Vector3D vector, double scalar);\n    parameters:\n    - id: vector\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to multiply.\n    - id: scalar\n      type: System.Double\n      description: The scalar to multiply.\n    return:\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The result of multiplying <code>vector</code> and <code>scalar</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.Multiply(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Matrix3D)\n  id: Multiply(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Matrix3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Multiply(Vector3D,Matrix3D)\n  nameWithType: Vector3D.Multiply(Vector3D,Matrix3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.Multiply(Vector3D,Matrix3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Transforms the coordinate space of the specified <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure using the specified <xref href=\"System.Windows.Media.Media3D.Matrix3D\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the Multiply method to transform a <xref:System.Windows.Media.Media3D.Vector3D> structure by a <xref:System.Windows.Media.Media3D.Matrix3D> structure.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN15](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn15)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN15](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn15)]\"\n  syntax:\n    content: public static System.Windows.Media.Media3D.Vector3D Multiply (System.Windows.Media.Media3D.Vector3D vector, System.Windows.Media.Media3D.Matrix3D matrix);\n    parameters:\n    - id: vector\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to transform.\n    - id: matrix\n      type: System.Windows.Media.Media3D.Matrix3D\n      description: The transformation to apply to the <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n    return:\n      type: System.Windows.Media.Media3D.Vector3D\n      description: Returns the result of transforming <code>vector</code> by <code>matrix3D</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.Negate\n  id: Negate\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Negate()\n  nameWithType: Vector3D.Negate()\n  fullName: System.Windows.Media.Media3D.Vector3D.Negate()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Negates a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: The vector has the same magnitude as before, but its direction is now opposite.\n  example:\n  - \"The following example shows how to negate a <xref:System.Windows.Media.Media3D.Vector3D> structure.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN30](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn30)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN30](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn30)]\"\n  syntax:\n    content: public void Negate ();\n    parameters: []\n  overload: System.Windows.Media.Media3D.Vector3D.Negate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.Normalize\n  id: Normalize\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Normalize()\n  nameWithType: Vector3D.Normalize()\n  fullName: System.Windows.Media.Media3D.Vector3D.Normalize()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Normalizes the specified <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: A normalized <xref:System.Windows.Media.Media3D.Vector3D> maintains its direction but its magnitude becomes `1`. The resulting <xref:System.Windows.Media.Media3D.Vector3D> is often called a unit vector. A <xref:System.Windows.Media.Media3D.Vector3D> is normalized by dividing the <xref:System.Windows.Media.Media3D.Vector3D> by its magnitude.\n  example:\n  - \"The following example shows how to normalize a <xref:System.Windows.Media.Media3D.Vector3D> structure.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN21](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn21)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN21](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn21)]\"\n  syntax:\n    content: public void Normalize ();\n    parameters: []\n  overload: System.Windows.Media.Media3D.Vector3D.Normalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.op_Addition(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)\n  id: op_Addition(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: op_Addition(Vector3D,Point3D)\n  nameWithType: Vector3D.op_Addition(Vector3D,Point3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Addition(Vector3D,Point3D)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Translates the specified <xref href=\"System.Windows.Media.Media3D.Point3D\"></xref> structure by the specified <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure and returns the result as a <xref href=\"System.Windows.Media.Media3D.Point3D\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the overloaded addition operator to translate a <xref:System.Windows.Media.Media3D.Point3D> structure by a <xref:System.Windows.Media.Media3D.Vector3D> structure.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN2](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn2)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN2](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn2)]\"\n  syntax:\n    content: public static System.Windows.Media.Media3D.Point3D op_Addition (System.Windows.Media.Media3D.Vector3D vector, System.Windows.Media.Media3D.Point3D point);\n    parameters:\n    - id: vector\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure used to translate the specified <xref href=\"System.Windows.Media.Media3D.Point3D\"></xref> structure.\n    - id: point\n      type: System.Windows.Media.Media3D.Point3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Point3D\"></xref> structure to be translated.\n    return:\n      type: System.Windows.Media.Media3D.Point3D\n      description: The result of translating <code>point</code> by <code>vector</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.op_Addition(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  id: op_Addition(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: op_Addition(Vector3D,Vector3D)\n  nameWithType: Vector3D.op_Addition(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Addition(Vector3D,Vector3D)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Adds two <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structures and returns the result as a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the overloaded addition operator to add two <xref:System.Windows.Media.Media3D.Vector3D> structures.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN3](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn3)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN3](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn3)]\"\n  syntax:\n    content: public static System.Windows.Media.Media3D.Vector3D op_Addition (System.Windows.Media.Media3D.Vector3D vector1, System.Windows.Media.Media3D.Vector3D vector2);\n    parameters:\n    - id: vector1\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The first <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to add.\n    - id: vector2\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The second <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to add.\n    return:\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The sum of <code>vector1</code> and <code>vector2</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.op_Division(System.Windows.Media.Media3D.Vector3D,System.Double)\n  id: op_Division(System.Windows.Media.Media3D.Vector3D,System.Double)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: op_Division(Vector3D,Double)\n  nameWithType: Vector3D.op_Division(Vector3D,Double)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Division(Vector3D,Double)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Divides the specified <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure by the specified scalar and returns the result as a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the overloaded addition operator to divide a <xref:System.Windows.Media.Media3D.Vector3D> structure by a scalar.  \\n  \\n [!code-vb[vectorexamples_snip#OverloadedDivisionOperatorExample](~/add/codesnippet/visualbasic/vectorexamples_snip/vectorexample.vb#overloadeddivisionoperatorexample)]\\n [!code-cs[vectorexamples_snip#OverloadedDivisionOperatorExample](~/add/codesnippet/csharp/VectorExamples_snip/VectorExample.cs#overloadeddivisionoperatorexample)]\"\n  syntax:\n    content: public static System.Windows.Media.Media3D.Vector3D op_Division (System.Windows.Media.Media3D.Vector3D vector, double scalar);\n    parameters:\n    - id: vector\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to be divided.\n    - id: scalar\n      type: System.Double\n      description: The scalar to divide `vector` by.\n    return:\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The result of dividing <code>vector</code> by <code>scalar</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.op_Division*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.op_Equality(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  id: op_Equality(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: op_Equality(Vector3D,Vector3D)\n  nameWithType: Vector3D.op_Equality(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Equality(Vector3D,Vector3D)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Compares two <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structures for equality.\n  remarks: \"Two <xref:System.Windows.Media.Media3D.Vector3D> structures are equal if the values of their <xref:System.Windows.Media.Media3D.Vector3D.X%2A>, <xref:System.Windows.Media.Media3D.Vector3D.Y%2A>, and <xref:System.Windows.Media.Media3D.Vector3D.Z%2A> properties are the same.  \\n  \\n <xref:System.Windows.Media.Media3D.Vector3D> values are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Vector3D> values that are logically equal might fail.\"\n  example:\n  - \"The following example shows how to use the overloaded equality operator to check if two <xref:System.Windows.Media.Media3D.Vector3D> structures are equal.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN25](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn25)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN25](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn25)]\"\n  syntax:\n    content: public static bool op_Equality (System.Windows.Media.Media3D.Vector3D vector1, System.Windows.Media.Media3D.Vector3D vector2);\n    parameters:\n    - id: vector1\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The first <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to compare.\n    - id: vector2\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The second <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Media.Media3D.Vector3D.X*>, <xref:System.Windows.Media.Media3D.Vector3D.Y*>, and <xref:System.Windows.Media.Media3D.Vector3D.Z*> components of <code>vector1</code> and <code>vector2</code> are equal; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise.\n  overload: System.Windows.Media.Media3D.Vector3D.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.op_Explicit(System.Windows.Media.Media3D.Vector3D to System.Windows.Media.Media3D.Point3D)\n  id: op_Explicit(System.Windows.Media.Media3D.Vector3D to System.Windows.Media.Media3D.Point3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: op_Explicit(Vector3D)\n  nameWithType: Vector3D.op_Explicit(Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Explicit(Vector3D)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public static System.Windows.Media.Media3D.Point3D op_Explicit (System.Windows.Media.Media3D.Vector3D vector);\n    parameters:\n    - id: vector\n      type: System.Windows.Media.Media3D.Vector3D\n      description: To be added.\n    return:\n      type: System.Windows.Media.Media3D.Point3D\n      description: To be added.\n  overload: System.Windows.Media.Media3D.Vector3D.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.op_Explicit(System.Windows.Media.Media3D.Vector3D to System.Windows.Media.Media3D.Size3D)\n  id: op_Explicit(System.Windows.Media.Media3D.Vector3D to System.Windows.Media.Media3D.Size3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: op_Explicit(Vector3D)\n  nameWithType: Vector3D.op_Explicit(Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Explicit(Vector3D)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public static System.Windows.Media.Media3D.Size3D op_Explicit (System.Windows.Media.Media3D.Vector3D vector);\n    parameters:\n    - id: vector\n      type: System.Windows.Media.Media3D.Vector3D\n      description: To be added.\n    return:\n      type: System.Windows.Media.Media3D.Size3D\n      description: To be added.\n  overload: System.Windows.Media.Media3D.Vector3D.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.op_Inequality(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  id: op_Inequality(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: op_Inequality(Vector3D,Vector3D)\n  nameWithType: Vector3D.op_Inequality(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Inequality(Vector3D,Vector3D)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Compares two <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structures for inequality.\n  remarks: \"Two <xref:System.Windows.Media.Media3D.Vector3D> structures are not equal if the values of their <xref:System.Windows.Media.Media3D.Vector3D.X%2A>, <xref:System.Windows.Media.Media3D.Vector3D.Y%2A>, and <xref:System.Windows.Media.Media3D.Vector3D.Z%2A> properties are different.  \\n  \\n <xref:System.Windows.Media.Media3D.Vector3D> values are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Vector3D> values that are logically equal might fail.\"\n  example:\n  - \"The following example shows how to use the overloaded inequality operator to check if two <xref:System.Windows.Media.Media3D.Vector3D> structures are not equal.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN29](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn29)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN29](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn29)]\"\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Media.Media3D.Vector3D vector1, System.Windows.Media.Media3D.Vector3D vector2);\n    parameters:\n    - id: vector1\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The first <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to compare.\n    - id: vector2\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The second <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Media.Media3D.Vector3D.X*>, <xref:System.Windows.Media.Media3D.Vector3D.Y*>, and <xref:System.Windows.Media.Media3D.Vector3D.Z*> components of <code>vector3D1</code> and <code>vector3D2</code> are different; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise.\n  overload: System.Windows.Media.Media3D.Vector3D.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.op_Multiply(System.Double,System.Windows.Media.Media3D.Vector3D)\n  id: op_Multiply(System.Double,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: op_Multiply(Double,Vector3D)\n  nameWithType: Vector3D.op_Multiply(Double,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Multiply(Double,Vector3D)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Multiplies the specified scalar by the specified <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure and returns the result as a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows how to multiple a scalar by a <xref:System.Windows.Media.Media3D.Vector3D> structure.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN11](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn11)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN11](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn11)]\"\n  syntax:\n    content: public static System.Windows.Media.Media3D.Vector3D op_Multiply (double scalar, System.Windows.Media.Media3D.Vector3D vector);\n    parameters:\n    - id: scalar\n      type: System.Double\n      description: The scalar to multiply.\n    - id: vector\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to multiply.\n    return:\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The result of multiplying <code>scalar</code> and <code>vector</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.op_Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.op_Multiply(System.Windows.Media.Media3D.Vector3D,System.Double)\n  id: op_Multiply(System.Windows.Media.Media3D.Vector3D,System.Double)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: op_Multiply(Vector3D,Double)\n  nameWithType: Vector3D.op_Multiply(Vector3D,Double)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Multiply(Vector3D,Double)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Multiplies the specified <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure by the specified scalar and returns the result as a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows how to multiply a <xref:System.Windows.Media.Media3D.Vector3D> structure by a scalar.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN10](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn10)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN10](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn10)]\"\n  syntax:\n    content: public static System.Windows.Media.Media3D.Vector3D op_Multiply (System.Windows.Media.Media3D.Vector3D vector, double scalar);\n    parameters:\n    - id: vector\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to multiply.\n    - id: scalar\n      type: System.Double\n      description: The scalar to multiply.\n    return:\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The result of multiplying <code>vector</code> and <code>scalar</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.op_Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.op_Multiply(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Matrix3D)\n  id: op_Multiply(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Matrix3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: op_Multiply(Vector3D,Matrix3D)\n  nameWithType: Vector3D.op_Multiply(Vector3D,Matrix3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Multiply(Vector3D,Matrix3D)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Transforms the coordinate space of the specified <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure using the specified <xref href=\"System.Windows.Media.Media3D.Matrix3D\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the overloaded multiplication operator to transform a <xref:System.Windows.Media.Media3D.Vector3D> structure by a <xref:System.Windows.Media.Media3D.Matrix3D> structure.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN12](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn12)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN12](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn12)]\"\n  syntax:\n    content: public static System.Windows.Media.Media3D.Vector3D op_Multiply (System.Windows.Media.Media3D.Vector3D vector, System.Windows.Media.Media3D.Matrix3D matrix);\n    parameters:\n    - id: vector\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to transform.\n    - id: matrix\n      type: System.Windows.Media.Media3D.Matrix3D\n      description: The transformation to apply to the <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n    return:\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The result of transforming <code>vector</code> by <code>matrix</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.op_Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.op_Subtraction(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)\n  id: op_Subtraction(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: op_Subtraction(Vector3D,Point3D)\n  nameWithType: Vector3D.op_Subtraction(Vector3D,Point3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Subtraction(Vector3D,Point3D)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Subtracts a <xref href=\"System.Windows.Media.Media3D.Point3D\"></xref> structure from a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the overloaded subtraction operator to subtract a <xref:System.Windows.Media.Media3D.Point3D> structure from a <xref:System.Windows.Media.Media3D.Vector3D> structure.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN8](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn8)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN8](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn8)]\"\n  syntax:\n    content: public static System.Windows.Media.Media3D.Point3D op_Subtraction (System.Windows.Media.Media3D.Vector3D vector, System.Windows.Media.Media3D.Point3D point);\n    parameters:\n    - id: vector\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to be subtracted from.\n    - id: point\n      type: System.Windows.Media.Media3D.Point3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Point3D\"></xref> structure to subtract from `vector`.\n    return:\n      type: System.Windows.Media.Media3D.Point3D\n      description: The result of subtracting <code>point</code> from <code>vector</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.op_Subtraction(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  id: op_Subtraction(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: op_Subtraction(Vector3D,Vector3D)\n  nameWithType: Vector3D.op_Subtraction(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Subtraction(Vector3D,Vector3D)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Subtracts a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure from a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the overloaded subtraction operator to subtract a <xref:System.Windows.Media.Media3D.Vector3D> structure from a <xref:System.Windows.Media.Media3D.Vector3D> structure.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN6](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn6)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN6](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn6)]\"\n  syntax:\n    content: public static System.Windows.Media.Media3D.Vector3D op_Subtraction (System.Windows.Media.Media3D.Vector3D vector1, System.Windows.Media.Media3D.Vector3D vector2);\n    parameters:\n    - id: vector1\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to be subtracted from.\n    - id: vector2\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to subtract from `vector1`.\n    return:\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The result of subtracting <code>vector2</code> from <code>vector1</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.op_UnaryNegation(System.Windows.Media.Media3D.Vector3D)\n  id: op_UnaryNegation(System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: op_UnaryNegation(Vector3D)\n  nameWithType: Vector3D.op_UnaryNegation(Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_UnaryNegation(Vector3D)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Negates a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: The returned <xref:System.Windows.Media.Media3D.Vector3D> structure has the same magnitude (<xref:System.Windows.Media.Media3D.Vector3D.Length%2A>) as `vector` but its direction is opposite of that of `vector`.\n  example:\n  - \"The following example shows how to use the overloaded negation operator to negate a <xref:System.Windows.Media.Media3D.Vector3D> structure.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN31](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn31)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN31](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn31)]\"\n  syntax:\n    content: public static System.Windows.Media.Media3D.Vector3D op_UnaryNegation (System.Windows.Media.Media3D.Vector3D vector);\n    parameters:\n    - id: vector\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to negate.\n    return:\n      type: System.Windows.Media.Media3D.Vector3D\n      description: A <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure with <xref:System.Windows.Media.Media3D.Vector3D.X*>, <xref:System.Windows.Media.Media3D.Vector3D.Y*>, and <xref:System.Windows.Media.Media3D.Vector3D.Z*> values opposite of the <xref:System.Windows.Media.Media3D.Vector3D.X*>, <xref:System.Windows.Media.Media3D.Vector3D.Y*>, and <xref:System.Windows.Media.Media3D.Vector3D.Z*> values of <code>vector</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.op_UnaryNegation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: Vector3D.Parse(String)\n  fullName: System.Windows.Media.Media3D.Vector3D.Parse(String)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Converts a <xref:System.String> representation of a [!INCLUDE[TLA#tla_3d](~/add/includes/tlasharptla-3d-md.md)] vector into the equivalent <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the Parse method to convert a string representation of a vector3D into a <xref:System.Windows.Media.Media3D.Vector3D> structure.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN28](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn28)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN28](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn28)]\"\n  syntax:\n    content: public static System.Windows.Media.Media3D.Vector3D Parse (string source);\n    parameters:\n    - id: source\n      type: System.String\n      description: The <xref:System.String> representation of the [!INCLUDE[TLA2#tla_3d](~/add/includes/ajax-current-ext-md.md)] vector.\n    return:\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The equivalent <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  overload: System.Windows.Media.Media3D.Vector3D.Parse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.Subtract(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)\n  id: Subtract(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Subtract(Vector3D,Point3D)\n  nameWithType: Vector3D.Subtract(Vector3D,Point3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.Subtract(Vector3D,Point3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Subtracts a <xref href=\"System.Windows.Media.Media3D.Point3D\"></xref> structure from a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: ''\n  example:\n  - >-\n    [!code-cs[vector3dsample#Mil3dVectorSample3DN9](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn9)]\n     [!code-vb[vector3dsample#Mil3dVectorSample3DN9](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn9)]\n  syntax:\n    content: public static System.Windows.Media.Media3D.Point3D Subtract (System.Windows.Media.Media3D.Vector3D vector, System.Windows.Media.Media3D.Point3D point);\n    parameters:\n    - id: vector\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to be subtracted from.\n    - id: point\n      type: System.Windows.Media.Media3D.Point3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Point3D\"></xref> structure to subtract from `vector`.\n    return:\n      type: System.Windows.Media.Media3D.Point3D\n      description: The result of subtracting <code>point</code> from <code>vector</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.Subtract*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.Subtract(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  id: Subtract(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Subtract(Vector3D,Vector3D)\n  nameWithType: Vector3D.Subtract(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.Subtract(Vector3D,Vector3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Subtracts a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure from a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following example shows how to subtract a <xref:System.Windows.Media.Media3D.Vector3D> structure from a <xref:System.Windows.Media.Media3D.Vector3D> structure.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN7](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn7)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN7](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn7)]\"\n  syntax:\n    content: public static System.Windows.Media.Media3D.Vector3D Subtract (System.Windows.Media.Media3D.Vector3D vector1, System.Windows.Media.Media3D.Vector3D vector2);\n    parameters:\n    - id: vector1\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to be subtracted from.\n    - id: vector2\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure to subtract from `vector1`.\n    return:\n      type: System.Windows.Media.Media3D.Vector3D\n      description: The result of subtracting <code>vector2</code> from <code>vector1</code>.\n  overload: System.Windows.Media.Media3D.Vector3D.Subtract*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  id: System#IFormattable#ToString(System.String,System.IFormatProvider)\n  isEii: true\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: Vector3D.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Media.Media3D.Vector3D.System.IFormattable.ToString(String,IFormatProvider)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: This member is part of the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly by your code. For a description of this member, see <xref:System.IFormattable.ToString*>.\n  syntax:\n    content: string IFormattable.ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: \"The string specifying the format to use.  \\n  \\n -or-  \\n  \\n <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> to use the default format defined for the type of the <xref:System.IFormattable> implementation.\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"The <xref uid=\\\"langword_csharp_IFormatProvider\\\" name=\\\"IFormatProvider\\\" href=\\\"\\\"></xref> to use to format the value.  \\n  \\n -or-  \\n  \\n <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> to obtain the numeric format information from the current locale setting of the operating system.\"\n    return:\n      type: System.String\n      description: String representation of this object.\n  overload: System.Windows.Media.Media3D.Vector3D.System#IFormattable#ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.ToString\n  id: ToString\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Vector3D.ToString()\n  fullName: System.Windows.Media.Media3D.Vector3D.ToString()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Creates a <xref:System.String> representation of this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: ''\n  example:\n  - >-\n    [!code-cs[vector3dsample#Mil3dVectorSample3DN32](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn32)]\n     [!code-vb[vector3dsample#Mil3dVectorSample3DN32](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn32)]\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string containing the <xref:System.Windows.Media.Media3D.Vector3D.X*>, <xref:System.Windows.Media.Media3D.Vector3D.Y*>, and <xref:System.Windows.Media.Media3D.Vector3D.Z*> values of this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  overload: System.Windows.Media.Media3D.Vector3D.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: Vector3D.ToString(IFormatProvider)\n  fullName: System.Windows.Media.Media3D.Vector3D.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Creates a <xref:System.String> representation of this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  syntax:\n    content: public string ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: Culture-specific formatting information.\n    return:\n      type: System.String\n      description: Returns a <xref:System.String> containing the <xref:System.Windows.Media.Media3D.Vector3D.X*>, <xref:System.Windows.Media.Media3D.Vector3D.Y*>, and <xref:System.Windows.Media.Media3D.Vector3D.Z*> values of this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  overload: System.Windows.Media.Media3D.Vector3D.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.X\n  id: X\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: X\n  nameWithType: Vector3D.X\n  fullName: System.Windows.Media.Media3D.Vector3D.X\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Gets or sets the X component of this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following example shows how to calculate the dot product of two <xref:System.Windows.Media.Media3D.Vector3D> structures.  It also shows how to assign values to a <xref:System.Windows.Media.Media3D.Vector3D> structure when the structure is being declared and after the structure has been declared.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN24](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn24)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN24](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn24)]\"\n  syntax:\n    content: public double X { get; set; }\n    return:\n      type: System.Double\n      description: The X component of this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure. The default value is `0`.\n  overload: System.Windows.Media.Media3D.Vector3D.X*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.Y\n  id: Y\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Y\n  nameWithType: Vector3D.Y\n  fullName: System.Windows.Media.Media3D.Vector3D.Y\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Gets or sets the Y component of this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following example shows how to calculate the dot product of two <xref:System.Windows.Media.Media3D.Vector3D> structures.  It also shows how to assign values to a <xref:System.Windows.Media.Media3D.Vector3D> structure when the structure is being declared and after the structure has been declared.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN24](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn24)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN24](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn24)]\"\n  syntax:\n    content: public double Y { get; set; }\n    return:\n      type: System.Double\n      description: The Y component of this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure. The default value is `0`.\n  overload: System.Windows.Media.Media3D.Vector3D.Y*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Vector3D.Z\n  id: Z\n  parent: System.Windows.Media.Media3D.Vector3D\n  langs:\n  - csharp\n  name: Z\n  nameWithType: Vector3D.Z\n  fullName: System.Windows.Media.Media3D.Vector3D.Z\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Gets or sets the Z component of this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following example shows how to calculate the dot product of two <xref:System.Windows.Media.Media3D.Vector3D> structures.  It also shows how to assign values to a <xref:System.Windows.Media.Media3D.Vector3D> structure when the structure is being declared and after the structure has been declared.  \\n  \\n [!code-cs[vector3dsample#Mil3dVectorSample3DN24](~/add/codesnippet/csharp/Mil3dVectorSample/Window1.xaml.cs#mil3dvectorsample3dn24)]\\n [!code-vb[vector3dsample#Mil3dVectorSample3DN24](~/add/codesnippet/visualbasic/mil3dvectorsample/window1.xaml.vb#mil3dvectorsample3dn24)]\"\n  syntax:\n    content: public double Z { get; set; }\n    return:\n      type: System.Double\n      description: The Z component of this <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> structure. The default value is `0`.\n  overload: System.Windows.Media.Media3D.Vector3D.Z*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.Media.Media3D.Vector3D.#ctor(System.Double,System.Double,System.Double)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Vector3D(Double,Double,Double)\n  nameWithType: Vector3D.Vector3D(Double,Double,Double)\n  fullName: System.Windows.Media.Media3D.Vector3D.Vector3D(Double,Double,Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Media3D.Vector3D.Add(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Add(Vector3D,Point3D)\n  nameWithType: Vector3D.Add(Vector3D,Point3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.Add(Vector3D,Point3D)\n- uid: System.Windows.Media.Media3D.Point3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Point3D\n  nameWithType: Point3D\n  fullName: System.Windows.Media.Media3D.Point3D\n- uid: System.Windows.Media.Media3D.Vector3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Vector3D\n  nameWithType: Vector3D\n  fullName: System.Windows.Media.Media3D.Vector3D\n- uid: System.Windows.Media.Media3D.Vector3D.Add(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Add(Vector3D,Vector3D)\n  nameWithType: Vector3D.Add(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.Add(Vector3D,Vector3D)\n- uid: System.Windows.Media.Media3D.Vector3D.AngleBetween(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: AngleBetween(Vector3D,Vector3D)\n  nameWithType: Vector3D.AngleBetween(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.AngleBetween(Vector3D,Vector3D)\n- uid: System.Windows.Media.Media3D.Vector3D.CrossProduct(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: CrossProduct(Vector3D,Vector3D)\n  nameWithType: Vector3D.CrossProduct(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.CrossProduct(Vector3D,Vector3D)\n- uid: System.Windows.Media.Media3D.Vector3D.Divide(System.Windows.Media.Media3D.Vector3D,System.Double)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Divide(Vector3D,Double)\n  nameWithType: Vector3D.Divide(Vector3D,Double)\n  fullName: System.Windows.Media.Media3D.Vector3D.Divide(Vector3D,Double)\n- uid: System.Windows.Media.Media3D.Vector3D.DotProduct(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: DotProduct(Vector3D,Vector3D)\n  nameWithType: Vector3D.DotProduct(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.DotProduct(Vector3D,Vector3D)\n- uid: System.Windows.Media.Media3D.Vector3D.Equals(System.Object)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Vector3D.Equals(Object)\n  fullName: System.Windows.Media.Media3D.Vector3D.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.Media3D.Vector3D.Equals(System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Equals(Vector3D)\n  nameWithType: Vector3D.Equals(Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.Equals(Vector3D)\n- uid: System.Windows.Media.Media3D.Vector3D.Equals(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Equals(Vector3D,Vector3D)\n  nameWithType: Vector3D.Equals(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.Equals(Vector3D,Vector3D)\n- uid: System.Windows.Media.Media3D.Vector3D.GetHashCode\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Vector3D.GetHashCode()\n  fullName: System.Windows.Media.Media3D.Vector3D.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Media3D.Vector3D.Length\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Length\n  nameWithType: Vector3D.Length\n  fullName: System.Windows.Media.Media3D.Vector3D.Length\n- uid: System.Windows.Media.Media3D.Vector3D.LengthSquared\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: LengthSquared\n  nameWithType: Vector3D.LengthSquared\n  fullName: System.Windows.Media.Media3D.Vector3D.LengthSquared\n- uid: System.Windows.Media.Media3D.Vector3D.Multiply(System.Double,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Multiply(Double,Vector3D)\n  nameWithType: Vector3D.Multiply(Double,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.Multiply(Double,Vector3D)\n- uid: System.Windows.Media.Media3D.Vector3D.Multiply(System.Windows.Media.Media3D.Vector3D,System.Double)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Multiply(Vector3D,Double)\n  nameWithType: Vector3D.Multiply(Vector3D,Double)\n  fullName: System.Windows.Media.Media3D.Vector3D.Multiply(Vector3D,Double)\n- uid: System.Windows.Media.Media3D.Vector3D.Multiply(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Matrix3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Multiply(Vector3D,Matrix3D)\n  nameWithType: Vector3D.Multiply(Vector3D,Matrix3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.Multiply(Vector3D,Matrix3D)\n- uid: System.Windows.Media.Media3D.Matrix3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Matrix3D\n  nameWithType: Matrix3D\n  fullName: System.Windows.Media.Media3D.Matrix3D\n- uid: System.Windows.Media.Media3D.Vector3D.Negate\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Negate()\n  nameWithType: Vector3D.Negate()\n  fullName: System.Windows.Media.Media3D.Vector3D.Negate()\n- uid: System.Windows.Media.Media3D.Vector3D.Normalize\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Normalize()\n  nameWithType: Vector3D.Normalize()\n  fullName: System.Windows.Media.Media3D.Vector3D.Normalize()\n- uid: System.Windows.Media.Media3D.Vector3D.op_Addition(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Addition(Vector3D,Point3D)\n  nameWithType: Vector3D.op_Addition(Vector3D,Point3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Addition(Vector3D,Point3D)\n- uid: System.Windows.Media.Media3D.Vector3D.op_Addition(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Addition(Vector3D,Vector3D)\n  nameWithType: Vector3D.op_Addition(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Addition(Vector3D,Vector3D)\n- uid: System.Windows.Media.Media3D.Vector3D.op_Division(System.Windows.Media.Media3D.Vector3D,System.Double)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Division(Vector3D,Double)\n  nameWithType: Vector3D.op_Division(Vector3D,Double)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Division(Vector3D,Double)\n- uid: System.Windows.Media.Media3D.Vector3D.op_Equality(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Equality(Vector3D,Vector3D)\n  nameWithType: Vector3D.op_Equality(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Equality(Vector3D,Vector3D)\n- uid: System.Windows.Media.Media3D.Vector3D.op_Explicit(System.Windows.Media.Media3D.Vector3D to System.Windows.Media.Media3D.Point3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Explicit(Vector3D)\n  nameWithType: Vector3D.op_Explicit(Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Explicit(Vector3D)\n- uid: System.Windows.Media.Media3D.Vector3D.op_Explicit(System.Windows.Media.Media3D.Vector3D to System.Windows.Media.Media3D.Size3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Explicit(Vector3D)\n  nameWithType: Vector3D.op_Explicit(Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Explicit(Vector3D)\n- uid: System.Windows.Media.Media3D.Size3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Size3D\n  nameWithType: Size3D\n  fullName: System.Windows.Media.Media3D.Size3D\n- uid: System.Windows.Media.Media3D.Vector3D.op_Inequality(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Inequality(Vector3D,Vector3D)\n  nameWithType: Vector3D.op_Inequality(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Inequality(Vector3D,Vector3D)\n- uid: System.Windows.Media.Media3D.Vector3D.op_Multiply(System.Double,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Multiply(Double,Vector3D)\n  nameWithType: Vector3D.op_Multiply(Double,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Multiply(Double,Vector3D)\n- uid: System.Windows.Media.Media3D.Vector3D.op_Multiply(System.Windows.Media.Media3D.Vector3D,System.Double)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Multiply(Vector3D,Double)\n  nameWithType: Vector3D.op_Multiply(Vector3D,Double)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Multiply(Vector3D,Double)\n- uid: System.Windows.Media.Media3D.Vector3D.op_Multiply(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Matrix3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Multiply(Vector3D,Matrix3D)\n  nameWithType: Vector3D.op_Multiply(Vector3D,Matrix3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Multiply(Vector3D,Matrix3D)\n- uid: System.Windows.Media.Media3D.Vector3D.op_Subtraction(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Subtraction(Vector3D,Point3D)\n  nameWithType: Vector3D.op_Subtraction(Vector3D,Point3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Subtraction(Vector3D,Point3D)\n- uid: System.Windows.Media.Media3D.Vector3D.op_Subtraction(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Subtraction(Vector3D,Vector3D)\n  nameWithType: Vector3D.op_Subtraction(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_Subtraction(Vector3D,Vector3D)\n- uid: System.Windows.Media.Media3D.Vector3D.op_UnaryNegation(System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_UnaryNegation(Vector3D)\n  nameWithType: Vector3D.op_UnaryNegation(Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.op_UnaryNegation(Vector3D)\n- uid: System.Windows.Media.Media3D.Vector3D.Parse(System.String)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Parse(String)\n  nameWithType: Vector3D.Parse(String)\n  fullName: System.Windows.Media.Media3D.Vector3D.Parse(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.Media3D.Vector3D.Subtract(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Point3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Subtract(Vector3D,Point3D)\n  nameWithType: Vector3D.Subtract(Vector3D,Point3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.Subtract(Vector3D,Point3D)\n- uid: System.Windows.Media.Media3D.Vector3D.Subtract(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Subtract(Vector3D,Vector3D)\n  nameWithType: Vector3D.Subtract(Vector3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Vector3D.Subtract(Vector3D,Vector3D)\n- uid: System.Windows.Media.Media3D.Vector3D.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: Vector3D.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Media.Media3D.Vector3D.System.IFormattable.ToString(String,IFormatProvider)\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: true\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.Media.Media3D.Vector3D.ToString\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: ToString()\n  nameWithType: Vector3D.ToString()\n  fullName: System.Windows.Media.Media3D.Vector3D.ToString()\n- uid: System.Windows.Media.Media3D.Vector3D.ToString(System.IFormatProvider)\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: Vector3D.ToString(IFormatProvider)\n  fullName: System.Windows.Media.Media3D.Vector3D.ToString(IFormatProvider)\n- uid: System.Windows.Media.Media3D.Vector3D.X\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: X\n  nameWithType: Vector3D.X\n  fullName: System.Windows.Media.Media3D.Vector3D.X\n- uid: System.Windows.Media.Media3D.Vector3D.Y\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Y\n  nameWithType: Vector3D.Y\n  fullName: System.Windows.Media.Media3D.Vector3D.Y\n- uid: System.Windows.Media.Media3D.Vector3D.Z\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Z\n  nameWithType: Vector3D.Z\n  fullName: System.Windows.Media.Media3D.Vector3D.Z\n- uid: System.Windows.Media.Media3D.Vector3D.#ctor*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Vector3D\n  nameWithType: Vector3D.Vector3D\n- uid: System.Windows.Media.Media3D.Vector3D.Add*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Add\n  nameWithType: Vector3D.Add\n- uid: System.Windows.Media.Media3D.Vector3D.AngleBetween*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: AngleBetween\n  nameWithType: Vector3D.AngleBetween\n- uid: System.Windows.Media.Media3D.Vector3D.CrossProduct*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: CrossProduct\n  nameWithType: Vector3D.CrossProduct\n- uid: System.Windows.Media.Media3D.Vector3D.Divide*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Divide\n  nameWithType: Vector3D.Divide\n- uid: System.Windows.Media.Media3D.Vector3D.DotProduct*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: DotProduct\n  nameWithType: Vector3D.DotProduct\n- uid: System.Windows.Media.Media3D.Vector3D.Equals*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Equals\n  nameWithType: Vector3D.Equals\n- uid: System.Windows.Media.Media3D.Vector3D.GetHashCode*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Vector3D.GetHashCode\n- uid: System.Windows.Media.Media3D.Vector3D.Length*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Length\n  nameWithType: Vector3D.Length\n- uid: System.Windows.Media.Media3D.Vector3D.LengthSquared*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: LengthSquared\n  nameWithType: Vector3D.LengthSquared\n- uid: System.Windows.Media.Media3D.Vector3D.Multiply*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Multiply\n  nameWithType: Vector3D.Multiply\n- uid: System.Windows.Media.Media3D.Vector3D.Negate*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Negate\n  nameWithType: Vector3D.Negate\n- uid: System.Windows.Media.Media3D.Vector3D.Normalize*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Normalize\n  nameWithType: Vector3D.Normalize\n- uid: System.Windows.Media.Media3D.Vector3D.op_Addition*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Addition\n  nameWithType: Vector3D.op_Addition\n- uid: System.Windows.Media.Media3D.Vector3D.op_Division*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Division\n  nameWithType: Vector3D.op_Division\n- uid: System.Windows.Media.Media3D.Vector3D.op_Equality*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Equality\n  nameWithType: Vector3D.op_Equality\n- uid: System.Windows.Media.Media3D.Vector3D.op_Explicit*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Explicit\n  nameWithType: Vector3D.op_Explicit\n- uid: System.Windows.Media.Media3D.Vector3D.op_Inequality*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Inequality\n  nameWithType: Vector3D.op_Inequality\n- uid: System.Windows.Media.Media3D.Vector3D.op_Multiply*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Multiply\n  nameWithType: Vector3D.op_Multiply\n- uid: System.Windows.Media.Media3D.Vector3D.op_Subtraction*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: Vector3D.op_Subtraction\n- uid: System.Windows.Media.Media3D.Vector3D.op_UnaryNegation*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: op_UnaryNegation\n  nameWithType: Vector3D.op_UnaryNegation\n- uid: System.Windows.Media.Media3D.Vector3D.Parse*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Parse\n  nameWithType: Vector3D.Parse\n- uid: System.Windows.Media.Media3D.Vector3D.Subtract*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Subtract\n  nameWithType: Vector3D.Subtract\n- uid: System.Windows.Media.Media3D.Vector3D.System#IFormattable#ToString*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: System.IFormattable.ToString\n  nameWithType: Vector3D.System.IFormattable.ToString\n- uid: System.Windows.Media.Media3D.Vector3D.ToString*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: ToString\n  nameWithType: Vector3D.ToString\n- uid: System.Windows.Media.Media3D.Vector3D.X*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: X\n  nameWithType: Vector3D.X\n- uid: System.Windows.Media.Media3D.Vector3D.Y*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Y\n  nameWithType: Vector3D.Y\n- uid: System.Windows.Media.Media3D.Vector3D.Z*\n  parent: System.Windows.Media.Media3D.Vector3D\n  isExternal: false\n  name: Z\n  nameWithType: Vector3D.Z\n"}