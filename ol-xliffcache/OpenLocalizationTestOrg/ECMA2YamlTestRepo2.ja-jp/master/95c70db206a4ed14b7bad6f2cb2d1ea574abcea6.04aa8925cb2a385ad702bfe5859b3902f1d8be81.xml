{"nodes":[{"pos":[2869,3051],"content":"Represents the set of arguments, child activities, variables, and delegates that a configured <bpt id=\"p1\">&lt;xref href=\"System.Activities.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> introduces to the execution environment.","needQuote":true,"needEscape":true,"source":"Represents the set of arguments, child activities, variables, and delegates that a configured <xref href=\"System.Activities.Activity\"></xref> introduces to the execution environment."},{"pos":[3657,3720],"content":"Adds an argument to the collection of arguments of an activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an argument to the collection of arguments of an activity.","pos":[0,63]}]},{"pos":[3914,3952],"content":"The argument to add to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The argument to add to the collection.","pos":[0,38]}]},{"pos":[4748,4760],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5345,5425],"content":"Adds the specified activity to the metadata’s list of imported child activities.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified activity to the metadata’s list of imported child activities.","pos":[0,80]}]},{"pos":[5437,5615],"content":"An imported child activity is a child activity that the parent activity does not schedule directly. Rather, then parent uses this activity to configure some other child activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"An imported child activity is a child activity that the parent activity does not schedule directly. Rather, then parent uses this activity to configure some other child activity.","pos":[0,178],"nodes":[{"content":"An imported child activity is a child activity that the parent activity does not schedule directly.","pos":[0,99]},{"content":"Rather, then parent uses this activity to configure some other child activity.","pos":[100,178]}]}]},{"pos":[5810,5830],"content":"The activity to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The activity to add.","pos":[0,20]}]},{"pos":[6450,6530],"content":"Adds the specified activity to the metadata’s list of imported child activities.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified activity to the metadata’s list of imported child activities.","pos":[0,80]}]},{"pos":[6740,6760],"content":"The activity to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The activity to add.","pos":[0,20]}]},{"pos":[6823,6834],"content":"The origin.","needQuote":true,"needEscape":true,"nodes":[{"content":"The origin.","pos":[0,11]}]},{"pos":[7460,7533],"content":"Adds the specified delegate to the metadata’s list of imported delegates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified delegate to the metadata’s list of imported delegates.","pos":[0,73]}]},{"pos":[7545,7808],"content":"An imported <xref:System.Activities.ActivityDelegate> is an <xref:System.Activities.ActivityDelegate> that the parent activity does not invoke directly. Rather, the parent uses this <xref:System.Activities.ActivityDelegate> to configure some other child activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"An imported <xref:System.Activities.ActivityDelegate> is an <xref:System.Activities.ActivityDelegate> that the parent activity does not invoke directly. Rather, the parent uses this <xref:System.Activities.ActivityDelegate> to configure some other child activity.","pos":[0,263],"nodes":[{"content":"An imported &lt;xref:System.Activities.ActivityDelegate&gt; is an &lt;xref:System.Activities.ActivityDelegate&gt; that the parent activity does not invoke directly.","pos":[0,152],"source":"An imported <xref:System.Activities.ActivityDelegate> is an <xref:System.Activities.ActivityDelegate> that the parent activity does not invoke directly."},{"content":"Rather, the parent uses this &lt;xref:System.Activities.ActivityDelegate&gt; to configure some other child activity.","pos":[153,263],"source":" Rather, the parent uses this <xref:System.Activities.ActivityDelegate> to configure some other child activity."}]}]},{"pos":[8028,8048],"content":"The delegate to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The delegate to add.","pos":[0,20]}]},{"pos":[8726,8799],"content":"Adds the specified delegate to the metadata’s list of imported delegates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified delegate to the metadata’s list of imported delegates.","pos":[0,73]}]},{"pos":[9034,9054],"content":"The delegate to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The delegate to add.","pos":[0,20]}]},{"pos":[9117,9128],"content":"The origin.","needQuote":true,"needEscape":true,"nodes":[{"content":"The origin.","pos":[0,11]}]},{"pos":[9769,9855],"content":"Adds the specified validation error to the metadata’s collection of validation errors.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified validation error to the metadata’s collection of validation errors.","pos":[0,86]}]},{"pos":[9868,10003],"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph> <bpt id=\"p1\">[</bpt>Imperative Code-Based Validation<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":false,"needEscape":true,"source":"[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] [Imperative Code-Based Validation](~/add/includes/ajax-current-ext-md.md)."},{"pos":[10241,10269],"content":"The validation error to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The validation error to add.","pos":[0,28]}]},{"pos":[10820,10926],"content":"Adds a validation error to the metadata’s collection of validation errors using the specified description.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a validation error to the metadata’s collection of validation errors using the specified description.","pos":[0,106]}]},{"pos":[10939,11074],"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph> <bpt id=\"p1\">[</bpt>Imperative Code-Based Validation<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":false,"needEscape":true,"source":"[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] [Imperative Code-Based Validation](~/add/includes/ajax-current-ext-md.md)."},{"pos":[11257,11303],"content":"A message that describes the validation error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A message that describes the validation error.","pos":[0,46]}]},{"pos":[11851,11921],"content":"Adds the specified variable to the metadata’s collection of variables.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified variable to the metadata’s collection of variables.","pos":[0,70]}]},{"pos":[11933,12692],"content":"Variables added using this method are considered part of the activity’s publicly configurable surface, that is, they are to be provided by the consumer of the activity. For example, <xref:System.Activities.Statements.Sequence> adds the variables in its <xref:System.Activities.Statements.Sequence.Variables%2A> collection using this method. An activity’s implementation cannot access variables added using this method. Activities added through <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> (and any of their non-implementation child activities) can access variables added using this method. For example, <xref:System.Activities.Statements.Sequence> adds its <xref:System.Activities.Statements.Sequence.Activities%2A> collection in this manner.","needQuote":true,"needEscape":true,"nodes":[{"content":"Variables added using this method are considered part of the activity’s publicly configurable surface, that is, they are to be provided by the consumer of the activity. For example, <xref:System.Activities.Statements.Sequence> adds the variables in its <xref:System.Activities.Statements.Sequence.Variables%2A> collection using this method. An activity’s implementation cannot access variables added using this method. Activities added through <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> (and any of their non-implementation child activities) can access variables added using this method. For example, <xref:System.Activities.Statements.Sequence> adds its <xref:System.Activities.Statements.Sequence.Activities%2A> collection in this manner.","pos":[0,759],"nodes":[{"content":"Variables added using this method are considered part of the activity’s publicly configurable surface, that is, they are to be provided by the consumer of the activity.","pos":[0,168]},{"content":"For example, &lt;xref:System.Activities.Statements.Sequence&gt; adds the variables in its &lt;xref:System.Activities.Statements.Sequence.Variables%2A&gt; collection using this method.","pos":[169,340],"source":" For example, <xref:System.Activities.Statements.Sequence> adds the variables in its <xref:System.Activities.Statements.Sequence.Variables%2A> collection using this method."},{"content":"An activity’s implementation cannot access variables added using this method.","pos":[341,418]},{"content":"Activities added through &lt;xref:System.Activities.ActivityMetadata.AddImportedChild%2A&gt; (and any of their non-implementation child activities) can access variables added using this method.","pos":[419,606],"source":" Activities added through <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> (and any of their non-implementation child activities) can access variables added using this method."},{"content":"For example, &lt;xref:System.Activities.Statements.Sequence&gt; adds its &lt;xref:System.Activities.Statements.Sequence.Activities%2A&gt; collection in this manner.","pos":[607,759],"source":" For example, <xref:System.Activities.Statements.Sequence> adds its <xref:System.Activities.Statements.Sequence.Activities%2A> collection in this manner."}]}]},{"pos":[12872,12892],"content":"The variable to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The variable to add.","pos":[0,20]}]},{"pos":[13482,13552],"content":"Adds the specified variable to the metadata’s collection of variables.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified variable to the metadata’s collection of variables.","pos":[0,70]}]},{"pos":[13747,13767],"content":"The variable to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The variable to add.","pos":[0,20]}]},{"pos":[13830,13841],"content":"The origin.","needQuote":true,"needEscape":true,"nodes":[{"content":"The origin.","pos":[0,11]}]},{"pos":[14463,14603],"content":"Binds the specified <bpt id=\"p1\">&lt;xref href=\"System.Activities.Argument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the specified <bpt id=\"p2\">&lt;xref href=\"System.Activities.RuntimeArgument\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Binds the specified <xref href=\"System.Activities.Argument\"></xref> to the specified <xref href=\"System.Activities.RuntimeArgument\"></xref>."},{"pos":[14818,14878],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Activities.Argument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to bind.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Activities.Argument\"></xref> to bind."},{"pos":[14963,15030],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Activities.RuntimeArgument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to bind.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Activities.RuntimeArgument\"></xref> to bind."},{"pos":[15480,15702],"content":"Gets the activity’s <bpt id=\"p1\">&lt;xref href=\"System.Activities.LocationReferenceEnvironment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of arguments, variables, delegate arguments, or symbols introduced by a <bpt id=\"p2\">&lt;xref href=\"System.Activities.Hosting.SymbolResolver\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the activity’s <xref href=\"System.Activities.LocationReferenceEnvironment\"></xref> of arguments, variables, delegate arguments, or symbols introduced by a <xref href=\"System.Activities.Hosting.SymbolResolver\"></xref>."},{"pos":[15891,16071],"content":"The activity’s location reference environment of arguments, variables, delegate arguments, or symbols introduced by a <bpt id=\"p1\">&lt;xref href=\"System.Activities.Hosting.SymbolResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The activity’s location reference environment of arguments, variables, delegate arguments, or symbols introduced by a <xref href=\"System.Activities.Hosting.SymbolResolver\"></xref>."},{"pos":[16555,16630],"content":"Determines whether the specified object is equal to this metadata instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified object is equal to this metadata instance.","pos":[0,75]}]},{"pos":[16771,16793],"content":"The object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare.","pos":[0,22]}]},{"pos":[16852,17047],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified object is equal to this metadata instance; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified object is equal to this metadata instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17578,17641],"content":"Returns a collection of arguments obtained by using reflection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection of arguments obtained by using reflection.","pos":[0,63]}]},{"pos":[17653,17836],"content":"This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Argument> and returns them in a collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method uses an activity’s &lt;xref:System.ComponentModel.TypeDescriptor&gt; to examine all public properties of type &lt;xref:System.Activities.Argument&gt; and returns them in a collection.","pos":[0,183],"source":"This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Argument> and returns them in a collection."}]},{"pos":[18114,18140],"content":"A collection of arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of arguments.","pos":[0,26]}]},{"pos":[18616,18671],"content":"Returns a unique identifier for this metadata instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a unique identifier for this metadata instance.","pos":[0,55]}]},{"pos":[18806,18865],"content":"An integer that uniquely identifies this metadata instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"An integer that uniquely identifies this metadata instance.","pos":[0,59]}]},{"pos":[19436,19503],"content":"Returns a collection of imported child activities using reflection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection of imported child activities using reflection.","pos":[0,67]}]},{"pos":[19515,19791],"content":"This method uses an activity’s &lt;xref:System.ComponentModel.TypeDescriptor&gt; to examine all public properties of type &lt;xref:System.Activities.Activity&gt;, or <ph id=\"ph1\">`IList&lt;T&gt;`</ph> or <ph id=\"ph2\">`ICollection&lt;T&gt;`</ph> where <ph id=\"ph3\">`T`</ph> derives from &lt;xref:System.Activities.Activity&gt;, and returns them in a collection.","needQuote":true,"needEscape":true,"source":"This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Activity>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Activity>, and returns them in a collection."},{"pos":[20062,20104],"content":"A collection of imported child activities.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of imported child activities.","pos":[0,42]}]},{"pos":[20702,20753],"content":"Returns a collection of delegates using reflection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection of delegates using reflection.","pos":[0,51]}]},{"pos":[20765,21057],"content":"This method uses an activity’s &lt;xref:System.ComponentModel.TypeDescriptor&gt; to examine all public properties of type &lt;xref:System.Activities.ActivityDelegate&gt;, or <ph id=\"ph1\">`IList&lt;T&gt;`</ph> or <ph id=\"ph2\">`ICollection&lt;T&gt;`</ph> where <ph id=\"ph3\">`T`</ph> derives from &lt;xref:System.Activities.ActivityDelegate&gt;, and returns them in a collection.","needQuote":true,"needEscape":true,"source":"This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.ActivityDelegate>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.ActivityDelegate>, and returns them in a collection."},{"pos":[21345,21371],"content":"A collection of delegates.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of delegates.","pos":[0,26]}]},{"pos":[21930,21981],"content":"Returns a collection of variables using reflection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection of variables using reflection.","pos":[0,51]}]},{"pos":[21993,22269],"content":"This method uses an activity’s &lt;xref:System.ComponentModel.TypeDescriptor&gt; to examine all public properties of type &lt;xref:System.Activities.Variable&gt;, or <ph id=\"ph1\">`IList&lt;T&gt;`</ph> or <ph id=\"ph2\">`ICollection&lt;T&gt;`</ph> where <ph id=\"ph3\">`T`</ph> derives from &lt;xref:System.Activities.Variable&gt;, and returns them in a collection.","needQuote":true,"needEscape":true,"source":"This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Variable>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Variable>, and returns them in a collection."},{"pos":[22533,22559],"content":"A collection of variables.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of variables.","pos":[0,26]}]},{"pos":[23041,23125],"content":"Gets a value that indicates whether there are any validation errors in the metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether there are any validation errors in the metadata.","pos":[0,84]}]},{"pos":[23242,23411],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if validation errors are present; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if validation errors are present; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24117,24203],"content":"Returns a value that indicates whether the two specified metadata instances are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the two specified metadata instances are equal.","pos":[0,86]}]},{"pos":[24440,24466],"content":"The first item to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first item to compare.","pos":[0,26]}]},{"pos":[24549,24576],"content":"The second item to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second item to compare.","pos":[0,27]}]},{"pos":[24635,24798],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two items are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two items are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25512,25602],"content":"Returns a value that indicates whether the two specified metadata instances are not equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the two specified metadata instances are not equal.","pos":[0,90]}]},{"pos":[25841,25867],"content":"The first item to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first item to compare.","pos":[0,26]}]},{"pos":[25950,25977],"content":"The second item to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second item to compare.","pos":[0,27]}]},{"pos":[26036,26203],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two items are not equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two items are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[26729,26812],"content":"Specifies that the activity requires an extension of the specified type at runtime.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the activity requires an extension of the specified type at runtime.","pos":[0,83]}]},{"pos":[26824,26906],"content":"If the host fails to provide an extension of the specified type, validation fails.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the host fails to provide an extension of the specified type, validation fails.","pos":[0,82]}]},{"pos":[27064,27090],"content":"The type of the extension.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the extension.","pos":[0,26]}]},{"pos":[28432,28503],"content":"Adds the specified collection of arguments to the activity’s arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified collection of arguments to the activity’s arguments.","pos":[0,71]}]},{"pos":[28796,28817],"content":"The arguments to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The arguments to add.","pos":[0,21]}]},{"pos":[29581,29656],"content":"Adds the specified collection as imported child activities of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified collection as imported child activities of the activity.","pos":[0,75]}]},{"pos":[29668,29796],"content":"This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> for each item in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"This is the equivalent of calling &lt;xref:System.Activities.ActivityMetadata.AddImportedChild%2A&gt; for each item in the collection.","pos":[0,128],"source":"This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> for each item in the collection."}]},{"pos":[30096,30118],"content":"The activities to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The activities to add.","pos":[0,22]}]},{"pos":[30934,31002],"content":"Adds the specified collection as imported delegates of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified collection as imported delegates of the activity.","pos":[0,68]}]},{"pos":[31014,31145],"content":"This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A> for each item in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"This is the equivalent of calling &lt;xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A&gt; for each item in the collection.","pos":[0,131],"source":"This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A> for each item in the collection."}]},{"pos":[31464,31485],"content":"The delegates to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The delegates to add.","pos":[0,21]}]},{"pos":[32314,32415],"content":"Adds the specified collection of validation errors to the metadata’s collection of validation errors.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified collection of validation errors to the metadata’s collection of validation errors.","pos":[0,101]}]},{"pos":[32751,32780],"content":"The validation errors to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The validation errors to add.","pos":[0,29]}]},{"pos":[33516,33587],"content":"Adds the specified collection of variables to the activity’s variables.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified collection of variables to the activity’s variables.","pos":[0,71]}]},{"pos":[33866,33887],"content":"The variables to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The variables to add.","pos":[0,21]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.ActivityMetadata\n  id: ActivityMetadata\n  children:\n  - System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)\n  - System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})\n  - System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)\n  - System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)\n  - System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)\n  - System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)\n  - System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)\n  - System.Activities.ActivityMetadata.AddValidationError(System.String)\n  - System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)\n  - System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)\n  - System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)\n  - System.Activities.ActivityMetadata.Environment\n  - System.Activities.ActivityMetadata.Equals(System.Object)\n  - System.Activities.ActivityMetadata.GetArgumentsWithReflection\n  - System.Activities.ActivityMetadata.GetHashCode\n  - System.Activities.ActivityMetadata.GetImportedChildrenWithReflection\n  - System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection\n  - System.Activities.ActivityMetadata.GetVariablesWithReflection\n  - System.Activities.ActivityMetadata.HasViolations\n  - System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  - System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  - System.Activities.ActivityMetadata.RequireExtension(System.Type)\n  - System.Activities.ActivityMetadata.RequireExtension``1\n  - System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})\n  - System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})\n  - System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})\n  - System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})\n  - System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})\n  langs:\n  - csharp\n  name: ActivityMetadata\n  nameWithType: ActivityMetadata\n  fullName: System.Activities.ActivityMetadata\n  type: Struct\n  summary: Represents the set of arguments, child activities, variables, and delegates that a configured <xref href=\"System.Activities.Activity\"></xref> introduces to the execution environment.\n  syntax:\n    content: public struct ActivityMetadata\n  inheritance:\n  - System.ValueType\n  implements: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)\n  id: AddArgument(System.Activities.RuntimeArgument)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddArgument(RuntimeArgument)\n  nameWithType: ActivityMetadata.AddArgument(RuntimeArgument)\n  fullName: System.Activities.ActivityMetadata.AddArgument(RuntimeArgument)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds an argument to the collection of arguments of an activity.\n  syntax:\n    content: public void AddArgument (System.Activities.RuntimeArgument argument);\n    parameters:\n    - id: argument\n      type: System.Activities.RuntimeArgument\n      description: The argument to add to the collection.\n  overload: System.Activities.ActivityMetadata.AddArgument*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})\n  id: AddDefaultExtensionProvider``1(System.Func{``0})\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddDefaultExtensionProvider(Func<T>)\n  nameWithType: ActivityMetadata.AddDefaultExtensionProvider(Func<T>)\n  fullName: System.Activities.ActivityMetadata.AddDefaultExtensionProvider(Func<T>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: 'public void AddDefaultExtensionProvider<T> (Func<T> extensionProvider) where T : class;'\n    parameters:\n    - id: extensionProvider\n      type: System.Func{T}\n      description: To be added.\n  overload: System.Activities.ActivityMetadata.AddDefaultExtensionProvider<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)\n  id: AddImportedChild(System.Activities.Activity)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddImportedChild(Activity)\n  nameWithType: ActivityMetadata.AddImportedChild(Activity)\n  fullName: System.Activities.ActivityMetadata.AddImportedChild(Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified activity to the metadata’s list of imported child activities.\n  remarks: An imported child activity is a child activity that the parent activity does not schedule directly. Rather, then parent uses this activity to configure some other child activity.\n  syntax:\n    content: public void AddImportedChild (System.Activities.Activity importedChild);\n    parameters:\n    - id: importedChild\n      type: System.Activities.Activity\n      description: The activity to add.\n  overload: System.Activities.ActivityMetadata.AddImportedChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)\n  id: AddImportedChild(System.Activities.Activity,System.Object)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddImportedChild(Activity,Object)\n  nameWithType: ActivityMetadata.AddImportedChild(Activity,Object)\n  fullName: System.Activities.ActivityMetadata.AddImportedChild(Activity,Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified activity to the metadata’s list of imported child activities.\n  syntax:\n    content: public void AddImportedChild (System.Activities.Activity importedChild, object origin);\n    parameters:\n    - id: importedChild\n      type: System.Activities.Activity\n      description: The activity to add.\n    - id: origin\n      type: System.Object\n      description: The origin.\n  overload: System.Activities.ActivityMetadata.AddImportedChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)\n  id: AddImportedDelegate(System.Activities.ActivityDelegate)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddImportedDelegate(ActivityDelegate)\n  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate)\n  fullName: System.Activities.ActivityMetadata.AddImportedDelegate(ActivityDelegate)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified delegate to the metadata’s list of imported delegates.\n  remarks: An imported <xref:System.Activities.ActivityDelegate> is an <xref:System.Activities.ActivityDelegate> that the parent activity does not invoke directly. Rather, the parent uses this <xref:System.Activities.ActivityDelegate> to configure some other child activity.\n  syntax:\n    content: public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate);\n    parameters:\n    - id: importedDelegate\n      type: System.Activities.ActivityDelegate\n      description: The delegate to add.\n  overload: System.Activities.ActivityMetadata.AddImportedDelegate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)\n  id: AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddImportedDelegate(ActivityDelegate,Object)\n  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate,Object)\n  fullName: System.Activities.ActivityMetadata.AddImportedDelegate(ActivityDelegate,Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified delegate to the metadata’s list of imported delegates.\n  syntax:\n    content: public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate, object origin);\n    parameters:\n    - id: importedDelegate\n      type: System.Activities.ActivityDelegate\n      description: The delegate to add.\n    - id: origin\n      type: System.Object\n      description: The origin.\n  overload: System.Activities.ActivityMetadata.AddImportedDelegate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)\n  id: AddValidationError(System.Activities.Validation.ValidationError)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddValidationError(ValidationError)\n  nameWithType: ActivityMetadata.AddValidationError(ValidationError)\n  fullName: System.Activities.ActivityMetadata.AddValidationError(ValidationError)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified validation error to the metadata’s collection of validation errors.\n  remarks: '[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] [Imperative Code-Based Validation](~/add/includes/ajax-current-ext-md.md).'\n  syntax:\n    content: public void AddValidationError (System.Activities.Validation.ValidationError validationError);\n    parameters:\n    - id: validationError\n      type: System.Activities.Validation.ValidationError\n      description: The validation error to add.\n  overload: System.Activities.ActivityMetadata.AddValidationError*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.AddValidationError(System.String)\n  id: AddValidationError(System.String)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddValidationError(String)\n  nameWithType: ActivityMetadata.AddValidationError(String)\n  fullName: System.Activities.ActivityMetadata.AddValidationError(String)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds a validation error to the metadata’s collection of validation errors using the specified description.\n  remarks: '[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] [Imperative Code-Based Validation](~/add/includes/ajax-current-ext-md.md).'\n  syntax:\n    content: public void AddValidationError (string validationErrorMessage);\n    parameters:\n    - id: validationErrorMessage\n      type: System.String\n      description: A message that describes the validation error.\n  overload: System.Activities.ActivityMetadata.AddValidationError*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)\n  id: AddVariable(System.Activities.Variable)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddVariable(Variable)\n  nameWithType: ActivityMetadata.AddVariable(Variable)\n  fullName: System.Activities.ActivityMetadata.AddVariable(Variable)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified variable to the metadata’s collection of variables.\n  remarks: Variables added using this method are considered part of the activity’s publicly configurable surface, that is, they are to be provided by the consumer of the activity. For example, <xref:System.Activities.Statements.Sequence> adds the variables in its <xref:System.Activities.Statements.Sequence.Variables%2A> collection using this method. An activity’s implementation cannot access variables added using this method. Activities added through <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> (and any of their non-implementation child activities) can access variables added using this method. For example, <xref:System.Activities.Statements.Sequence> adds its <xref:System.Activities.Statements.Sequence.Activities%2A> collection in this manner.\n  syntax:\n    content: public void AddVariable (System.Activities.Variable variable);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable\n      description: The variable to add.\n  overload: System.Activities.ActivityMetadata.AddVariable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)\n  id: AddVariable(System.Activities.Variable,System.Object)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddVariable(Variable,Object)\n  nameWithType: ActivityMetadata.AddVariable(Variable,Object)\n  fullName: System.Activities.ActivityMetadata.AddVariable(Variable,Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified variable to the metadata’s collection of variables.\n  syntax:\n    content: public void AddVariable (System.Activities.Variable variable, object origin);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable\n      description: The variable to add.\n    - id: origin\n      type: System.Object\n      description: The origin.\n  overload: System.Activities.ActivityMetadata.AddVariable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)\n  id: Bind(System.Activities.Argument,System.Activities.RuntimeArgument)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: Bind(Argument,RuntimeArgument)\n  nameWithType: ActivityMetadata.Bind(Argument,RuntimeArgument)\n  fullName: System.Activities.ActivityMetadata.Bind(Argument,RuntimeArgument)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Binds the specified <xref href=\"System.Activities.Argument\"></xref> to the specified <xref href=\"System.Activities.RuntimeArgument\"></xref>.\n  syntax:\n    content: public void Bind (System.Activities.Argument binding, System.Activities.RuntimeArgument argument);\n    parameters:\n    - id: binding\n      type: System.Activities.Argument\n      description: The <xref href=\"System.Activities.Argument\"></xref> to bind.\n    - id: argument\n      type: System.Activities.RuntimeArgument\n      description: The <xref href=\"System.Activities.RuntimeArgument\"></xref> to bind.\n  overload: System.Activities.ActivityMetadata.Bind*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.Environment\n  id: Environment\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: Environment\n  nameWithType: ActivityMetadata.Environment\n  fullName: System.Activities.ActivityMetadata.Environment\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the activity’s <xref href=\"System.Activities.LocationReferenceEnvironment\"></xref> of arguments, variables, delegate arguments, or symbols introduced by a <xref href=\"System.Activities.Hosting.SymbolResolver\"></xref>.\n  syntax:\n    content: public System.Activities.LocationReferenceEnvironment Environment { get; }\n    return:\n      type: System.Activities.LocationReferenceEnvironment\n      description: The activity’s location reference environment of arguments, variables, delegate arguments, or symbols introduced by a <xref href=\"System.Activities.Hosting.SymbolResolver\"></xref>.\n  overload: System.Activities.ActivityMetadata.Environment*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ActivityMetadata.Equals(Object)\n  fullName: System.Activities.ActivityMetadata.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Determines whether the specified object is equal to this metadata instance.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified object is equal to this metadata instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.ActivityMetadata.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.GetArgumentsWithReflection\n  id: GetArgumentsWithReflection\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: GetArgumentsWithReflection()\n  nameWithType: ActivityMetadata.GetArgumentsWithReflection()\n  fullName: System.Activities.ActivityMetadata.GetArgumentsWithReflection()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a collection of arguments obtained by using reflection.\n  remarks: This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Argument> and returns them in a collection.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument> GetArgumentsWithReflection ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}\n      description: A collection of arguments.\n  overload: System.Activities.ActivityMetadata.GetArgumentsWithReflection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.GetHashCode\n  id: GetHashCode\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ActivityMetadata.GetHashCode()\n  fullName: System.Activities.ActivityMetadata.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a unique identifier for this metadata instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An integer that uniquely identifies this metadata instance.\n  overload: System.Activities.ActivityMetadata.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection\n  id: GetImportedChildrenWithReflection\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: GetImportedChildrenWithReflection()\n  nameWithType: ActivityMetadata.GetImportedChildrenWithReflection()\n  fullName: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a collection of imported child activities using reflection.\n  remarks: This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Activity>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Activity>, and returns them in a collection.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Activity> GetImportedChildrenWithReflection ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Activity}\n      description: A collection of imported child activities.\n  overload: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection\n  id: GetImportedDelegatesWithReflection\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: GetImportedDelegatesWithReflection()\n  nameWithType: ActivityMetadata.GetImportedDelegatesWithReflection()\n  fullName: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a collection of delegates using reflection.\n  remarks: This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.ActivityDelegate>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.ActivityDelegate>, and returns them in a collection.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.ActivityDelegate> GetImportedDelegatesWithReflection ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate}\n      description: A collection of delegates.\n  overload: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.GetVariablesWithReflection\n  id: GetVariablesWithReflection\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: GetVariablesWithReflection()\n  nameWithType: ActivityMetadata.GetVariablesWithReflection()\n  fullName: System.Activities.ActivityMetadata.GetVariablesWithReflection()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a collection of variables using reflection.\n  remarks: This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Variable>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Variable>, and returns them in a collection.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> GetVariablesWithReflection ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n      description: A collection of variables.\n  overload: System.Activities.ActivityMetadata.GetVariablesWithReflection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.HasViolations\n  id: HasViolations\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: HasViolations\n  nameWithType: ActivityMetadata.HasViolations\n  fullName: System.Activities.ActivityMetadata.HasViolations\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets a value that indicates whether there are any validation errors in the metadata.\n  syntax:\n    content: public bool HasViolations { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if validation errors are present; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.ActivityMetadata.HasViolations*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  id: op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: op_Equality(ActivityMetadata,ActivityMetadata)\n  nameWithType: ActivityMetadata.op_Equality(ActivityMetadata,ActivityMetadata)\n  fullName: System.Activities.ActivityMetadata.op_Equality(ActivityMetadata,ActivityMetadata)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a value that indicates whether the two specified metadata instances are equal.\n  syntax:\n    content: public static bool op_Equality (System.Activities.ActivityMetadata left, System.Activities.ActivityMetadata right);\n    parameters:\n    - id: left\n      type: System.Activities.ActivityMetadata\n      description: The first item to compare.\n    - id: right\n      type: System.Activities.ActivityMetadata\n      description: The second item to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two items are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.ActivityMetadata.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  id: op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: op_Inequality(ActivityMetadata,ActivityMetadata)\n  nameWithType: ActivityMetadata.op_Inequality(ActivityMetadata,ActivityMetadata)\n  fullName: System.Activities.ActivityMetadata.op_Inequality(ActivityMetadata,ActivityMetadata)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a value that indicates whether the two specified metadata instances are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.Activities.ActivityMetadata left, System.Activities.ActivityMetadata right);\n    parameters:\n    - id: left\n      type: System.Activities.ActivityMetadata\n      description: The first item to compare.\n    - id: right\n      type: System.Activities.ActivityMetadata\n      description: The second item to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two items are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.ActivityMetadata.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.RequireExtension(System.Type)\n  id: RequireExtension(System.Type)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: RequireExtension(Type)\n  nameWithType: ActivityMetadata.RequireExtension(Type)\n  fullName: System.Activities.ActivityMetadata.RequireExtension(Type)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Specifies that the activity requires an extension of the specified type at runtime.\n  remarks: If the host fails to provide an extension of the specified type, validation fails.\n  syntax:\n    content: public void RequireExtension (Type extensionType);\n    parameters:\n    - id: extensionType\n      type: System.Type\n      description: The type of the extension.\n  overload: System.Activities.ActivityMetadata.RequireExtension*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.RequireExtension``1\n  id: RequireExtension``1\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: RequireExtension()\n  nameWithType: ActivityMetadata.RequireExtension()\n  fullName: System.Activities.ActivityMetadata.RequireExtension()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: 'public void RequireExtension<T> () where T : class;'\n    parameters: []\n  overload: System.Activities.ActivityMetadata.RequireExtension<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})\n  id: SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: SetArgumentsCollection(Collection<RuntimeArgument>)\n  nameWithType: ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)\n  fullName: System.Activities.ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified collection of arguments to the activity’s arguments.\n  syntax:\n    content: public void SetArgumentsCollection (System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument> arguments);\n    parameters:\n    - id: arguments\n      type: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}\n      description: The arguments to add.\n  overload: System.Activities.ActivityMetadata.SetArgumentsCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})\n  id: SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: SetImportedChildrenCollection(Collection<Activity>)\n  nameWithType: ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)\n  fullName: System.Activities.ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified collection as imported child activities of the activity.\n  remarks: This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> for each item in the collection.\n  syntax:\n    content: public void SetImportedChildrenCollection (System.Collections.ObjectModel.Collection<System.Activities.Activity> importedChildren);\n    parameters:\n    - id: importedChildren\n      type: System.Collections.ObjectModel.Collection{System.Activities.Activity}\n      description: The activities to add.\n  overload: System.Activities.ActivityMetadata.SetImportedChildrenCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})\n  id: SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: SetImportedDelegatesCollection(Collection<ActivityDelegate>)\n  nameWithType: ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)\n  fullName: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified collection as imported delegates of the activity.\n  remarks: This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A> for each item in the collection.\n  syntax:\n    content: public void SetImportedDelegatesCollection (System.Collections.ObjectModel.Collection<System.Activities.ActivityDelegate> importedDelegates);\n    parameters:\n    - id: importedDelegates\n      type: System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate}\n      description: The delegates to add.\n  overload: System.Activities.ActivityMetadata.SetImportedDelegatesCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})\n  id: SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: SetValidationErrorsCollection(Collection<ValidationError>)\n  nameWithType: ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)\n  fullName: System.Activities.ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified collection of validation errors to the metadata’s collection of validation errors.\n  syntax:\n    content: public void SetValidationErrorsCollection (System.Collections.ObjectModel.Collection<System.Activities.Validation.ValidationError> validationErrors);\n    parameters:\n    - id: validationErrors\n      type: System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError}\n      description: The validation errors to add.\n  overload: System.Activities.ActivityMetadata.SetValidationErrorsCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})\n  id: SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: SetVariablesCollection(Collection<Variable>)\n  nameWithType: ActivityMetadata.SetVariablesCollection(Collection<Variable>)\n  fullName: System.Activities.ActivityMetadata.SetVariablesCollection(Collection<Variable>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified collection of variables to the activity’s variables.\n  syntax:\n    content: public void SetVariablesCollection (System.Collections.ObjectModel.Collection<System.Activities.Variable> variables);\n    parameters:\n    - id: variables\n      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n      description: The variables to add.\n  overload: System.Activities.ActivityMetadata.SetVariablesCollection*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddArgument(RuntimeArgument)\n  nameWithType: ActivityMetadata.AddArgument(RuntimeArgument)\n  fullName: System.Activities.ActivityMetadata.AddArgument(RuntimeArgument)\n- uid: System.Activities.RuntimeArgument\n  parent: System.Activities\n  isExternal: false\n  name: RuntimeArgument\n  nameWithType: RuntimeArgument\n  fullName: System.Activities.RuntimeArgument\n- uid: System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddDefaultExtensionProvider(Func<T>)\n  nameWithType: ActivityMetadata.AddDefaultExtensionProvider(Func<T>)\n  fullName: System.Activities.ActivityMetadata.AddDefaultExtensionProvider(Func<T>)\n- uid: System.Func{T}\n  parent: System\n  isExternal: true\n  name: Func<T>\n  nameWithType: Func<T>\n  fullName: System.Func<T>\n  spec.csharp:\n  - uid: System.Func`1\n    name: Func\n    nameWithType: Func\n    fullName: Func<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddImportedChild(Activity)\n  nameWithType: ActivityMetadata.AddImportedChild(Activity)\n  fullName: System.Activities.ActivityMetadata.AddImportedChild(Activity)\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddImportedChild(Activity,Object)\n  nameWithType: ActivityMetadata.AddImportedChild(Activity,Object)\n  fullName: System.Activities.ActivityMetadata.AddImportedChild(Activity,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddImportedDelegate(ActivityDelegate)\n  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate)\n  fullName: System.Activities.ActivityMetadata.AddImportedDelegate(ActivityDelegate)\n- uid: System.Activities.ActivityDelegate\n  parent: System.Activities\n  isExternal: false\n  name: ActivityDelegate\n  nameWithType: ActivityDelegate\n  fullName: System.Activities.ActivityDelegate\n- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddImportedDelegate(ActivityDelegate,Object)\n  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate,Object)\n  fullName: System.Activities.ActivityMetadata.AddImportedDelegate(ActivityDelegate,Object)\n- uid: System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddValidationError(ValidationError)\n  nameWithType: ActivityMetadata.AddValidationError(ValidationError)\n  fullName: System.Activities.ActivityMetadata.AddValidationError(ValidationError)\n- uid: System.Activities.Validation.ValidationError\n  parent: System.Activities.Validation\n  isExternal: false\n  name: ValidationError\n  nameWithType: ValidationError\n  fullName: System.Activities.Validation.ValidationError\n- uid: System.Activities.ActivityMetadata.AddValidationError(System.String)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddValidationError(String)\n  nameWithType: ActivityMetadata.AddValidationError(String)\n  fullName: System.Activities.ActivityMetadata.AddValidationError(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddVariable(Variable)\n  nameWithType: ActivityMetadata.AddVariable(Variable)\n  fullName: System.Activities.ActivityMetadata.AddVariable(Variable)\n- uid: System.Activities.Variable\n  parent: System.Activities\n  isExternal: false\n  name: Variable\n  nameWithType: Variable\n  fullName: System.Activities.Variable\n- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddVariable(Variable,Object)\n  nameWithType: ActivityMetadata.AddVariable(Variable,Object)\n  fullName: System.Activities.ActivityMetadata.AddVariable(Variable,Object)\n- uid: System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: Bind(Argument,RuntimeArgument)\n  nameWithType: ActivityMetadata.Bind(Argument,RuntimeArgument)\n  fullName: System.Activities.ActivityMetadata.Bind(Argument,RuntimeArgument)\n- uid: System.Activities.Argument\n  parent: System.Activities\n  isExternal: false\n  name: Argument\n  nameWithType: Argument\n  fullName: System.Activities.Argument\n- uid: System.Activities.ActivityMetadata.Environment\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: Environment\n  nameWithType: ActivityMetadata.Environment\n  fullName: System.Activities.ActivityMetadata.Environment\n- uid: System.Activities.LocationReferenceEnvironment\n  parent: System.Activities\n  isExternal: false\n  name: LocationReferenceEnvironment\n  nameWithType: LocationReferenceEnvironment\n  fullName: System.Activities.LocationReferenceEnvironment\n- uid: System.Activities.ActivityMetadata.Equals(System.Object)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ActivityMetadata.Equals(Object)\n  fullName: System.Activities.ActivityMetadata.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.ActivityMetadata.GetArgumentsWithReflection\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetArgumentsWithReflection()\n  nameWithType: ActivityMetadata.GetArgumentsWithReflection()\n  fullName: System.Activities.ActivityMetadata.GetArgumentsWithReflection()\n- uid: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<RuntimeArgument>\n  nameWithType: Collection<RuntimeArgument>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.RuntimeArgument>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.RuntimeArgument\n    name: RuntimeArgument\n    nameWithType: RuntimeArgument\n    fullName: RuntimeArgument\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityMetadata.GetHashCode\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ActivityMetadata.GetHashCode()\n  fullName: System.Activities.ActivityMetadata.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetImportedChildrenWithReflection()\n  nameWithType: ActivityMetadata.GetImportedChildrenWithReflection()\n  fullName: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection()\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Activity}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<Activity>\n  nameWithType: Collection<Activity>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Activity>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.Activity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetImportedDelegatesWithReflection()\n  nameWithType: ActivityMetadata.GetImportedDelegatesWithReflection()\n  fullName: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection()\n- uid: System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<ActivityDelegate>\n  nameWithType: Collection<ActivityDelegate>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.ActivityDelegate>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.ActivityDelegate>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.ActivityDelegate\n    name: ActivityDelegate\n    nameWithType: ActivityDelegate\n    fullName: ActivityDelegate\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityMetadata.GetVariablesWithReflection\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetVariablesWithReflection()\n  nameWithType: ActivityMetadata.GetVariablesWithReflection()\n  fullName: System.Activities.ActivityMetadata.GetVariablesWithReflection()\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<Variable>\n  nameWithType: Collection<Variable>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.Variable>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Variable\n    name: Variable\n    nameWithType: Variable\n    fullName: Variable\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityMetadata.HasViolations\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: HasViolations\n  nameWithType: ActivityMetadata.HasViolations\n  fullName: System.Activities.ActivityMetadata.HasViolations\n- uid: System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: op_Equality(ActivityMetadata,ActivityMetadata)\n  nameWithType: ActivityMetadata.op_Equality(ActivityMetadata,ActivityMetadata)\n  fullName: System.Activities.ActivityMetadata.op_Equality(ActivityMetadata,ActivityMetadata)\n- uid: System.Activities.ActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: ActivityMetadata\n  nameWithType: ActivityMetadata\n  fullName: System.Activities.ActivityMetadata\n- uid: System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: op_Inequality(ActivityMetadata,ActivityMetadata)\n  nameWithType: ActivityMetadata.op_Inequality(ActivityMetadata,ActivityMetadata)\n  fullName: System.Activities.ActivityMetadata.op_Inequality(ActivityMetadata,ActivityMetadata)\n- uid: System.Activities.ActivityMetadata.RequireExtension(System.Type)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: RequireExtension(Type)\n  nameWithType: ActivityMetadata.RequireExtension(Type)\n  fullName: System.Activities.ActivityMetadata.RequireExtension(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.ActivityMetadata.RequireExtension``1\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: RequireExtension()\n  nameWithType: ActivityMetadata.RequireExtension()\n  fullName: System.Activities.ActivityMetadata.RequireExtension()\n- uid: System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetArgumentsCollection(Collection<RuntimeArgument>)\n  nameWithType: ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)\n  fullName: System.Activities.ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)\n- uid: System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetImportedChildrenCollection(Collection<Activity>)\n  nameWithType: ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)\n  fullName: System.Activities.ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)\n- uid: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetImportedDelegatesCollection(Collection<ActivityDelegate>)\n  nameWithType: ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)\n  fullName: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)\n- uid: System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetValidationErrorsCollection(Collection<ValidationError>)\n  nameWithType: ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)\n  fullName: System.Activities.ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<ValidationError>\n  nameWithType: Collection<ValidationError>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Validation.ValidationError>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.Validation.ValidationError>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Validation.ValidationError\n    name: ValidationError\n    nameWithType: ValidationError\n    fullName: ValidationError\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetVariablesCollection(Collection<Variable>)\n  nameWithType: ActivityMetadata.SetVariablesCollection(Collection<Variable>)\n  fullName: System.Activities.ActivityMetadata.SetVariablesCollection(Collection<Variable>)\n- uid: System.Activities.ActivityMetadata.AddArgument*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddArgument\n  nameWithType: ActivityMetadata.AddArgument\n- uid: System.Activities.ActivityMetadata.AddDefaultExtensionProvider<T>*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddDefaultExtensionProvider<T>\n  nameWithType: ActivityMetadata.AddDefaultExtensionProvider<T>\n- uid: System.Activities.ActivityMetadata.AddImportedChild*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddImportedChild\n  nameWithType: ActivityMetadata.AddImportedChild\n- uid: System.Activities.ActivityMetadata.AddImportedDelegate*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddImportedDelegate\n  nameWithType: ActivityMetadata.AddImportedDelegate\n- uid: System.Activities.ActivityMetadata.AddValidationError*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddValidationError\n  nameWithType: ActivityMetadata.AddValidationError\n- uid: System.Activities.ActivityMetadata.AddVariable*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddVariable\n  nameWithType: ActivityMetadata.AddVariable\n- uid: System.Activities.ActivityMetadata.Bind*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: Bind\n  nameWithType: ActivityMetadata.Bind\n- uid: System.Activities.ActivityMetadata.Environment*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: Environment\n  nameWithType: ActivityMetadata.Environment\n- uid: System.Activities.ActivityMetadata.Equals*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: Equals\n  nameWithType: ActivityMetadata.Equals\n- uid: System.Activities.ActivityMetadata.GetArgumentsWithReflection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetArgumentsWithReflection\n  nameWithType: ActivityMetadata.GetArgumentsWithReflection\n- uid: System.Activities.ActivityMetadata.GetHashCode*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ActivityMetadata.GetHashCode\n- uid: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetImportedChildrenWithReflection\n  nameWithType: ActivityMetadata.GetImportedChildrenWithReflection\n- uid: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetImportedDelegatesWithReflection\n  nameWithType: ActivityMetadata.GetImportedDelegatesWithReflection\n- uid: System.Activities.ActivityMetadata.GetVariablesWithReflection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetVariablesWithReflection\n  nameWithType: ActivityMetadata.GetVariablesWithReflection\n- uid: System.Activities.ActivityMetadata.HasViolations*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: HasViolations\n  nameWithType: ActivityMetadata.HasViolations\n- uid: System.Activities.ActivityMetadata.op_Equality*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: op_Equality\n  nameWithType: ActivityMetadata.op_Equality\n- uid: System.Activities.ActivityMetadata.op_Inequality*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: op_Inequality\n  nameWithType: ActivityMetadata.op_Inequality\n- uid: System.Activities.ActivityMetadata.RequireExtension*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: RequireExtension\n  nameWithType: ActivityMetadata.RequireExtension\n- uid: System.Activities.ActivityMetadata.RequireExtension<T>*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: RequireExtension<T>\n  nameWithType: ActivityMetadata.RequireExtension<T>\n- uid: System.Activities.ActivityMetadata.SetArgumentsCollection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetArgumentsCollection\n  nameWithType: ActivityMetadata.SetArgumentsCollection\n- uid: System.Activities.ActivityMetadata.SetImportedChildrenCollection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetImportedChildrenCollection\n  nameWithType: ActivityMetadata.SetImportedChildrenCollection\n- uid: System.Activities.ActivityMetadata.SetImportedDelegatesCollection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetImportedDelegatesCollection\n  nameWithType: ActivityMetadata.SetImportedDelegatesCollection\n- uid: System.Activities.ActivityMetadata.SetValidationErrorsCollection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetValidationErrorsCollection\n  nameWithType: ActivityMetadata.SetValidationErrorsCollection\n- uid: System.Activities.ActivityMetadata.SetVariablesCollection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetVariablesCollection\n  nameWithType: ActivityMetadata.SetVariablesCollection\n"}