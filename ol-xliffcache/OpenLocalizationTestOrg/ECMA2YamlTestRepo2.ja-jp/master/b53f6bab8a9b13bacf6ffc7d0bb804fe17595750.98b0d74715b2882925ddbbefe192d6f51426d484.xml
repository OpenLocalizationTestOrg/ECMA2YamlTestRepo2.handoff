{"nodes":[{"pos":[825,924],"content":"Contains data associated with an exception that occurs during the execution of a workflow instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains data associated with an exception that occurs during the execution of a workflow instance.","pos":[0,99]}]},{"pos":[937,1837],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       When an exception occurs during the execution of a workflow instance and a <xref:System.Workflow.Runtime.Tracking.TrackingProfile> that is associated with the workflow instance includes a <xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint> configured for a <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent?displayProperty=fullName>, the workflow tracking infrastructure sets <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A> to an TrackingWorkflowExceptionEventArgs in the <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord> that it sends to the tracking service.      > [!NOTE] >  TrackingWorkflowExceptionEventArgs is used only by the runtime tracking service to pass information in a <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       When an exception occurs during the execution of a workflow instance and a &lt;xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt; that is associated with the workflow instance includes a &lt;xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint&gt; configured for a &lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent?displayProperty=fullName&gt;, the workflow tracking infrastructure sets &lt;xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A&gt; to an TrackingWorkflowExceptionEventArgs in the &lt;xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord&gt; that it sends to the tracking service.","pos":[0,707],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       When an exception occurs during the execution of a workflow instance and a <xref:System.Workflow.Runtime.Tracking.TrackingProfile> that is associated with the workflow instance includes a <xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint> configured for a <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent?displayProperty=fullName>, the workflow tracking infrastructure sets <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A> to an TrackingWorkflowExceptionEventArgs in the <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord> that it sends to the tracking service."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  TrackingWorkflowExceptionEventArgs is used only by the runtime tracking service to pass information in a &lt;xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord&gt;.","pos":[713,894],"source":"      > [!NOTE] >  TrackingWorkflowExceptionEventArgs is used only by the runtime tracking service to pass information in a <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>."}]},{"pos":[3757,3804],"content":"Gets the context ID of the associated activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the context ID of the associated activity.","pos":[0,47]}]},{"pos":[3916,4034],"content":"A &lt;xref:System.Guid&gt; that contains the context ID of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Guid> that contains the context ID of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."},{"pos":[4702,4822],"content":"Gets the <xref:System.Workflow.ComponentModel.Activity.QualifiedName*> of the activity currently throwing the exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Workflow.ComponentModel.Activity.QualifiedName*&gt; of the activity currently throwing the exception.","pos":[0,120],"source":"Gets the <xref:System.Workflow.ComponentModel.Activity.QualifiedName*> of the activity currently throwing the exception."}]},{"pos":[4834,5274],"content":"Exceptions are passed up the chain of exception handler activities. An exception handler may choose to throw an exception again. When an exception handler throws the exception again, a new exception tracking event containing a new <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> is raised to the runtime tracking infrastructure. CurrentActivityPath refers to the activity that is currently throwing the exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exceptions are passed up the chain of exception handler activities. An exception handler may choose to throw an exception again. When an exception handler throws the exception again, a new exception tracking event containing a new <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> is raised to the runtime tracking infrastructure. CurrentActivityPath refers to the activity that is currently throwing the exception.","pos":[0,440],"nodes":[{"content":"Exceptions are passed up the chain of exception handler activities.","pos":[0,67]},{"content":"An exception handler may choose to throw an exception again.","pos":[68,128]},{"content":"When an exception handler throws the exception again, a new exception tracking event containing a new &lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs&gt; is raised to the runtime tracking infrastructure.","pos":[129,355],"source":" When an exception handler throws the exception again, a new exception tracking event containing a new <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> is raised to the runtime tracking infrastructure."},{"content":"CurrentActivityPath refers to the activity that is currently throwing the exception.","pos":[356,440]}]}]},{"pos":[5398,5513],"content":"The <xref:System.Workflow.ComponentModel.Activity.QualifiedName*> of the activity currently throwing the exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Workflow.ComponentModel.Activity.QualifiedName*&gt; of the activity currently throwing the exception.","pos":[0,115],"source":"The <xref:System.Workflow.ComponentModel.Activity.QualifiedName*> of the activity currently throwing the exception."}]},{"pos":[6139,6218],"content":"Gets the <xref:System.Exception> that is being thrown by the workflow instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Exception&gt; that is being thrown by the workflow instance.","pos":[0,79],"source":"Gets the <xref:System.Exception> that is being thrown by the workflow instance."}]},{"pos":[7352,7412],"content":"The exception that is being thrown by the workflow instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception that is being thrown by the workflow instance.","pos":[0,60]}]},{"pos":[8083,8206],"content":"Gets the <xref:System.Workflow.ComponentModel.Activity.QualifiedName*> of the activity that originally threw the exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Workflow.ComponentModel.Activity.QualifiedName*&gt; of the activity that originally threw the exception.","pos":[0,123],"source":"Gets the <xref:System.Workflow.ComponentModel.Activity.QualifiedName*> of the activity that originally threw the exception."}]},{"pos":[8218,8653],"content":"Exceptions are passed up the chain of exception handler activities. An exception handler may choose to throw an exception again. When an exception handler throws an exception again, a new exception tracking event containing a new <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> is raised to the runtime tracking infrastructure. OriginalActivityPath refers to the activity that originally threw the exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exceptions are passed up the chain of exception handler activities. An exception handler may choose to throw an exception again. When an exception handler throws an exception again, a new exception tracking event containing a new <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> is raised to the runtime tracking infrastructure. OriginalActivityPath refers to the activity that originally threw the exception.","pos":[0,435],"nodes":[{"content":"Exceptions are passed up the chain of exception handler activities.","pos":[0,67]},{"content":"An exception handler may choose to throw an exception again.","pos":[68,128]},{"content":"When an exception handler throws an exception again, a new exception tracking event containing a new &lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs&gt; is raised to the runtime tracking infrastructure.","pos":[129,354],"source":" When an exception handler throws an exception again, a new exception tracking event containing a new <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> is raised to the runtime tracking infrastructure."},{"content":"OriginalActivityPath refers to the activity that originally threw the exception.","pos":[355,435]}]}]},{"pos":[9934,10052],"content":"The <xref:System.Workflow.ComponentModel.Activity.QualifiedName*> of the activity that originally threw the exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Workflow.ComponentModel.Activity.QualifiedName*&gt; of the activity that originally threw the exception.","pos":[0,118],"source":"The <xref:System.Workflow.ComponentModel.Activity.QualifiedName*> of the activity that originally threw the exception."}]},{"pos":[10719,10762],"content":"Gets the context ID of the parent activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the context ID of the parent activity.","pos":[0,43]}]},{"pos":[10880,11005],"content":"A &lt;xref:System.Guid&gt; that contains the context ID of the parent <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Guid> that contains the context ID of the parent <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs\n  id: TrackingWorkflowExceptionEventArgs\n  children:\n  - System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid\n  - System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath\n  - System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception\n  - System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath\n  - System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid\n  langs:\n  - csharp\n  name: TrackingWorkflowExceptionEventArgs\n  nameWithType: TrackingWorkflowExceptionEventArgs\n  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs\n  type: Class\n  summary: Contains data associated with an exception that occurs during the execution of a workflow instance.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n When an exception occurs during the execution of a workflow instance and a <xref:System.Workflow.Runtime.Tracking.TrackingProfile> that is associated with the workflow instance includes a <xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint> configured for a <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent?displayProperty=fullName>, the workflow tracking infrastructure sets <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A> to an TrackingWorkflowExceptionEventArgs in the <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord> that it sends to the tracking service.  \\n  \\n> [!NOTE]\\n>  TrackingWorkflowExceptionEventArgs is used only by the runtime tracking service to pass information in a <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>.\"\n  example:\n  - \"The following code example demonstrates a method, named `WriteExceptionEventArgs`, which captures a TrackingWorkflowExceptionEventArgs. The code checks whether the <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> property is `null` (`Nothing` in Visual Basic).  \\n  \\n If it is not, the code writes the message associated with the <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> property to the console. In addition, the code converts the value of the <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> property to a string and writes it to the console.  \\n  \\n This code example is part of the EventArgs Tracking SDK sample from the Program.cs file. For more information, see [EventArgs Tracking Sample](http://msdn.microsoft.com/en-us/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  \\n  \\n [!code-cs[WF_Samples#289](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#289)]\\n [!code-vb[WF_Samples#289](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#289)]\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      public class TrackingWorkflowExceptionEventArgs : EventArgs\n  inheritance:\n  - System.EventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid\n  id: ContextGuid\n  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs\n  langs:\n  - csharp\n  name: ContextGuid\n  nameWithType: TrackingWorkflowExceptionEventArgs.ContextGuid\n  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid\n  type: Property\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Tracking\n  summary: Gets the context ID of the associated activity.\n  syntax:\n    content: public Guid ContextGuid { get; }\n    return:\n      type: System.Guid\n      description: A <xref:System.Guid> that contains the context ID of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  overload: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath\n  id: CurrentActivityPath\n  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs\n  langs:\n  - csharp\n  name: CurrentActivityPath\n  nameWithType: TrackingWorkflowExceptionEventArgs.CurrentActivityPath\n  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath\n  type: Property\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Tracking\n  summary: Gets the <xref:System.Workflow.ComponentModel.Activity.QualifiedName*> of the activity currently throwing the exception.\n  remarks: Exceptions are passed up the chain of exception handler activities. An exception handler may choose to throw an exception again. When an exception handler throws the exception again, a new exception tracking event containing a new <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> is raised to the runtime tracking infrastructure. CurrentActivityPath refers to the activity that is currently throwing the exception.\n  syntax:\n    content: public string CurrentActivityPath { get; }\n    return:\n      type: System.String\n      description: The <xref:System.Workflow.ComponentModel.Activity.QualifiedName*> of the activity currently throwing the exception.\n  overload: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception\n  id: Exception\n  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs\n  langs:\n  - csharp\n  name: Exception\n  nameWithType: TrackingWorkflowExceptionEventArgs.Exception\n  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception\n  type: Property\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Tracking\n  summary: Gets the <xref:System.Exception> that is being thrown by the workflow instance.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates a method, named `WriteExceptionEventArgs`, which captures a <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>. The code checks whether the Exception property is `null` (`Nothing` in Visual Basic). If it is not, the code writes the message associated with the Exception property to the console. If Exception is `null` (`Nothing`), the code converts the value of the <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> property to a string and writes it to the console.  \\n  \\n This code example is part of the EventArgs Tracking SDK Sample from the Program.cs file. For more information, see [EventArgs Tracking Sample](http://msdn.microsoft.com/en-us/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  \\n  \\n [!code-cs[WF_Samples#289](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#289)]\\n [!code-vb[WF_Samples#289](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#289)]\"\n  syntax:\n    content: public Exception Exception { get; }\n    return:\n      type: System.Exception\n      description: The exception that is being thrown by the workflow instance.\n  overload: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath\n  id: OriginalActivityPath\n  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs\n  langs:\n  - csharp\n  name: OriginalActivityPath\n  nameWithType: TrackingWorkflowExceptionEventArgs.OriginalActivityPath\n  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath\n  type: Property\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Tracking\n  summary: Gets the <xref:System.Workflow.ComponentModel.Activity.QualifiedName*> of the activity that originally threw the exception.\n  remarks: Exceptions are passed up the chain of exception handler activities. An exception handler may choose to throw an exception again. When an exception handler throws an exception again, a new exception tracking event containing a new <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> is raised to the runtime tracking infrastructure. OriginalActivityPath refers to the activity that originally threw the exception.\n  example:\n  - \"The following code example demonstrates a method, named `WriteExceptionEventArgs`, which captures a <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>. The code checks whether the <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> property is `null` (`Nothing` in Visual Basic). If it is not, the code writes the message associated with the <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> property to the console. If <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> is `null` (`Nothing`), the code converts the value of the OriginalActivityPath property to a string and writes it to the console.  \\n  \\n This code example is part of the EventArgs Tracking SDK Sample from the Program.cs file. For more information, see [EventArgs Tracking Sample](http://msdn.microsoft.com/en-us/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  \\n  \\n [!code-cs[WF_Samples#289](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#289)]\\n [!code-vb[WF_Samples#289](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#289)]\"\n  syntax:\n    content: public string OriginalActivityPath { get; }\n    return:\n      type: System.String\n      description: The <xref:System.Workflow.ComponentModel.Activity.QualifiedName*> of the activity that originally threw the exception.\n  overload: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid\n  id: ParentContextGuid\n  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs\n  langs:\n  - csharp\n  name: ParentContextGuid\n  nameWithType: TrackingWorkflowExceptionEventArgs.ParentContextGuid\n  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid\n  type: Property\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Tracking\n  summary: Gets the context ID of the parent activity.\n  syntax:\n    content: public Guid ParentContextGuid { get; }\n    return:\n      type: System.Guid\n      description: A <xref:System.Guid> that contains the context ID of the parent <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  overload: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.EventArgs\n  isExternal: false\n  name: System.EventArgs\n- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid\n  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs\n  isExternal: false\n  name: ContextGuid\n  nameWithType: TrackingWorkflowExceptionEventArgs.ContextGuid\n  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath\n  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs\n  isExternal: false\n  name: CurrentActivityPath\n  nameWithType: TrackingWorkflowExceptionEventArgs.CurrentActivityPath\n  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception\n  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs\n  isExternal: false\n  name: Exception\n  nameWithType: TrackingWorkflowExceptionEventArgs.Exception\n  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath\n  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs\n  isExternal: false\n  name: OriginalActivityPath\n  nameWithType: TrackingWorkflowExceptionEventArgs.OriginalActivityPath\n  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath\n- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid\n  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs\n  isExternal: false\n  name: ParentContextGuid\n  nameWithType: TrackingWorkflowExceptionEventArgs.ParentContextGuid\n  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid\n- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid*\n  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs\n  isExternal: false\n  name: ContextGuid\n  nameWithType: TrackingWorkflowExceptionEventArgs.ContextGuid\n- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath*\n  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs\n  isExternal: false\n  name: CurrentActivityPath\n  nameWithType: TrackingWorkflowExceptionEventArgs.CurrentActivityPath\n- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception*\n  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs\n  isExternal: false\n  name: Exception\n  nameWithType: TrackingWorkflowExceptionEventArgs.Exception\n- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath*\n  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs\n  isExternal: false\n  name: OriginalActivityPath\n  nameWithType: TrackingWorkflowExceptionEventArgs.OriginalActivityPath\n- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid*\n  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs\n  isExternal: false\n  name: ParentContextGuid\n  nameWithType: TrackingWorkflowExceptionEventArgs.ParentContextGuid\n"}