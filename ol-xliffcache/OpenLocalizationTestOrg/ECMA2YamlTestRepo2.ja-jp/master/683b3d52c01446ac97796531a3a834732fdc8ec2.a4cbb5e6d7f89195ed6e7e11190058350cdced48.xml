{"nodes":[{"pos":[6032,6044],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6109,6121],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6180,6192],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7291,7303],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7386,7398],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7460,7472],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7530,7542],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8521,8533],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8638,8650],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9633,9645],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9704,9716],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10708,10720],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10779,10791],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.FontConverter.FontNameConverter\n  id: FontConverter.FontNameConverter\n  children:\n  - System.Drawing.FontConverter.FontNameConverter.#ctor\n  - System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose\n  langs:\n  - csharp\n  name: FontConverter+FontNameConverter\n  nameWithType: FontConverter+FontNameConverter\n  fullName: System.Drawing.FontConverter+FontNameConverter\n  type: Class\n  syntax:\n    content: 'public sealed class FontConverter.FontNameConverter : System.ComponentModel.TypeConverter, IDisposable'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.Drawing.FontConverter.FontNameConverter.#ctor\n  id: '#ctor'\n  parent: System.Drawing.FontConverter.FontNameConverter\n  langs:\n  - csharp\n  name: FontConverter+FontNameConverter()\n  nameWithType: FontConverter+FontNameConverter.FontConverter+FontNameConverter()\n  fullName: System.Drawing.FontConverter+FontNameConverter.FontConverter+FontNameConverter()\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  syntax:\n    content: public FontNameConverter ();\n    parameters: []\n  overload: System.Drawing.FontConverter.FontNameConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: FontConverter+FontNameConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Drawing.FontConverter+FontNameConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: To be added.\n    - id: sourceType\n      type: System.Type\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Drawing.FontConverter.FontNameConverter.CanConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: FontConverter+FontNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Drawing.FontConverter+FontNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: To be added.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: To be added.\n    - id: value\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Drawing.FontConverter.FontNameConverter.ConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  langs:\n  - csharp\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: FontConverter+FontNameConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: System.Drawing.FontConverter+FontNameConverter.GetStandardValues(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  syntax:\n    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: To be added.\n    return:\n      type: System.ComponentModel.TypeConverter.StandardValuesCollection\n      description: To be added.\n  overload: System.Drawing.FontConverter.FontNameConverter.GetStandardValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  langs:\n  - csharp\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: FontConverter+FontNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: System.Drawing.FontConverter+FontNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  syntax:\n    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  langs:\n  - csharp\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: FontConverter+FontNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.Drawing.FontConverter+FontNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  syntax:\n    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose\n  id: System#IDisposable#Dispose\n  isEii: true\n  parent: System.Drawing.FontConverter.FontNameConverter\n  langs:\n  - csharp\n  name: System.IDisposable.Dispose()\n  nameWithType: FontConverter+FontNameConverter.System.IDisposable.Dispose()\n  fullName: System.Drawing.FontConverter+FontNameConverter.System.IDisposable.Dispose()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  syntax:\n    content: void IDisposable.Dispose ();\n    parameters: []\n  overload: System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.Drawing.FontConverter.FontNameConverter.#ctor\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: FontConverter+FontNameConverter()\n  nameWithType: FontConverter+FontNameConverter.FontConverter+FontNameConverter()\n  fullName: System.Drawing.FontConverter+FontNameConverter.FontConverter+FontNameConverter()\n- uid: System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: FontConverter+FontNameConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Drawing.FontConverter+FontNameConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: FontConverter+FontNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Drawing.FontConverter+FontNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: FontConverter+FontNameConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: System.Drawing.FontConverter+FontNameConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.StandardValuesCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter+StandardValuesCollection\n  nameWithType: TypeConverter+StandardValuesCollection\n  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: FontConverter+FontNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: System.Drawing.FontConverter+FontNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: FontConverter+FontNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.Drawing.FontConverter+FontNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: System.IDisposable.Dispose()\n  nameWithType: FontConverter+FontNameConverter.System.IDisposable.Dispose()\n  fullName: System.Drawing.FontConverter+FontNameConverter.System.IDisposable.Dispose()\n- uid: System.Drawing.FontConverter.FontNameConverter.#ctor*\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: FontConverter+FontNameConverter\n  nameWithType: FontConverter+FontNameConverter.FontConverter+FontNameConverter\n- uid: System.Drawing.FontConverter.FontNameConverter.CanConvertFrom*\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: FontConverter+FontNameConverter.CanConvertFrom\n- uid: System.Drawing.FontConverter.FontNameConverter.ConvertFrom*\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: FontConverter+FontNameConverter.ConvertFrom\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValues*\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: GetStandardValues\n  nameWithType: FontConverter+FontNameConverter.GetStandardValues\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive*\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: GetStandardValuesExclusive\n  nameWithType: FontConverter+FontNameConverter.GetStandardValuesExclusive\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported*\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: GetStandardValuesSupported\n  nameWithType: FontConverter+FontNameConverter.GetStandardValuesSupported\n- uid: System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose*\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: System.IDisposable.Dispose\n  nameWithType: FontConverter+FontNameConverter.System.IDisposable.Dispose\n"}