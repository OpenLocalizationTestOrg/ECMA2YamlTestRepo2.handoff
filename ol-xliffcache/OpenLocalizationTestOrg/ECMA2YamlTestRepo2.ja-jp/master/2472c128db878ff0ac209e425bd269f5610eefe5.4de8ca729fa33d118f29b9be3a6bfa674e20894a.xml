{"nodes":[{"pos":[676,713],"content":"Provides data for touch input events.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides data for touch input events.","pos":[0,37]}]},{"pos":[726,1971],"content":"The following events use TouchEventArgs.      -   <xref:System.Windows.UIElement.TouchUp?displayProperty=fullName>      -   <xref:System.Windows.UIElement.TouchDown?displayProperty=fullName>      -   <xref:System.Windows.UIElement.TouchEnter?displayProperty=fullName>      -   <xref:System.Windows.UIElement.TouchLeave?displayProperty=fullName>      -   <xref:System.Windows.UIElement.TouchMove?displayProperty=fullName>      -   <xref:System.Windows.UIElement3D.TouchUp?displayProperty=fullName>      -   <xref:System.Windows.UIElement3D.TouchDown?displayProperty=fullName>      -   <xref:System.Windows.UIElement3D.TouchEnter?displayProperty=fullName>      -   <xref:System.Windows.UIElement3D.TouchLeave?displayProperty=fullName>      -   <xref:System.Windows.UIElement3D.TouchMove?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.TouchUp?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.TouchDown?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.TouchEnter?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.TouchLeave?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.TouchMove?displayProperty=fullName>","needQuote":false,"needEscape":true,"nodes":[{"content":"The following events use TouchEventArgs.      -   <xref:System.Windows.UIElement.TouchUp?displayProperty=fullName>      -   <xref:System.Windows.UIElement.TouchDown?displayProperty=fullName>      -   <xref:System.Windows.UIElement.TouchEnter?displayProperty=fullName>      -   <xref:System.Windows.UIElement.TouchLeave?displayProperty=fullName>      -   <xref:System.Windows.UIElement.TouchMove?displayProperty=fullName>      -   <xref:System.Windows.UIElement3D.TouchUp?displayProperty=fullName>      -   <xref:System.Windows.UIElement3D.TouchDown?displayProperty=fullName>      -   <xref:System.Windows.UIElement3D.TouchEnter?displayProperty=fullName>      -   <xref:System.Windows.UIElement3D.TouchLeave?displayProperty=fullName>      -   <xref:System.Windows.UIElement3D.TouchMove?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.TouchUp?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.TouchDown?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.TouchEnter?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.TouchLeave?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.TouchMove?displayProperty=fullName>","pos":[0,1215],"nodes":[{"content":"The following events use TouchEventArgs.","pos":[0,40]},{"content":"-   &lt;xref:System.Windows.UIElement.TouchUp?displayProperty=fullName&gt;      -   &lt;xref:System.Windows.UIElement.TouchDown?displayProperty=fullName&gt;      -   &lt;xref:System.Windows.UIElement.TouchEnter?displayProperty=fullName&gt;      -   &lt;xref:System.Windows.UIElement.TouchLeave?displayProperty=fullName&gt;      -   &lt;xref:System.Windows.UIElement.TouchMove?displayProperty=fullName&gt;      -   &lt;xref:System.Windows.UIElement3D.TouchUp?displayProperty=fullName&gt;      -   &lt;xref:System.Windows.UIElement3D.TouchDown?displayProperty=fullName&gt;      -   &lt;xref:System.Windows.UIElement3D.TouchEnter?displayProperty=fullName&gt;      -   &lt;xref:System.Windows.UIElement3D.TouchLeave?displayProperty=fullName&gt;      -   &lt;xref:System.Windows.UIElement3D.TouchMove?displayProperty=fullName&gt;      -   &lt;xref:System.Windows.ContentElement.TouchUp?displayProperty=fullName&gt;      -   &lt;xref:System.Windows.ContentElement.TouchDown?displayProperty=fullName&gt;      -   &lt;xref:System.Windows.ContentElement.TouchEnter?displayProperty=fullName&gt;      -   &lt;xref:System.Windows.ContentElement.TouchLeave?displayProperty=fullName&gt;      -   &lt;xref:System.Windows.ContentElement.TouchMove?displayProperty=fullName&gt;","pos":[46,1215],"source":"      -   <xref:System.Windows.UIElement.TouchUp?displayProperty=fullName>      -   <xref:System.Windows.UIElement.TouchDown?displayProperty=fullName>      -   <xref:System.Windows.UIElement.TouchEnter?displayProperty=fullName>      -   <xref:System.Windows.UIElement.TouchLeave?displayProperty=fullName>      -   <xref:System.Windows.UIElement.TouchMove?displayProperty=fullName>      -   <xref:System.Windows.UIElement3D.TouchUp?displayProperty=fullName>      -   <xref:System.Windows.UIElement3D.TouchDown?displayProperty=fullName>      -   <xref:System.Windows.UIElement3D.TouchEnter?displayProperty=fullName>      -   <xref:System.Windows.UIElement3D.TouchLeave?displayProperty=fullName>      -   <xref:System.Windows.UIElement3D.TouchMove?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.TouchUp?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.TouchDown?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.TouchEnter?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.TouchLeave?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.TouchMove?displayProperty=fullName>"}]}]},{"pos":[3842,3939],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TouchEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> class."},{"pos":[4150,4196],"content":"The input device to associate with this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The input device to associate with this event.","pos":[0,46]}]},{"pos":[4261,4294],"content":"The time when the input occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time when the input occurred.","pos":[0,33]}]},{"pos":[4927,5022],"content":"Returns all touch points that were collected between the most recent and previous touch events.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns all touch points that were collected between the most recent and previous touch events.","pos":[0,95]}]},{"pos":[5262,5308],"content":"The element that defines the coordinate space.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element that defines the coordinate space.","pos":[0,46]}]},{"pos":[5394,5481],"content":"All touch points that were collected between the most recent and previous touch events.","needQuote":true,"needEscape":true,"nodes":[{"content":"All touch points that were collected between the most recent and previous touch events.","pos":[0,87]}]},{"pos":[6070,6153],"content":"Returns the current position of the touch device relative to the specified element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the current position of the touch device relative to the specified element.","pos":[0,83]}]},{"pos":[6370,6416],"content":"The element that defines the coordinate space.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element that defines the coordinate space.","pos":[0,46]}]},{"pos":[6492,6567],"content":"The current position of the touch device relative to the specified element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current position of the touch device relative to the specified element.","pos":[0,75]}]},{"pos":[7176,7266],"content":"Invokes event handlers in a type-specific way, which can increase event system efficiency.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invokes event handlers in a type-specific way, which can increase event system efficiency.","pos":[0,90]}]},{"pos":[7278,7644],"content":"This implementation casts the generic handler as an <xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs> and then invokes it. For more information about this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"This implementation casts the generic handler as an &lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt; and then invokes it.","pos":[0,154],"source":"This implementation casts the generic handler as an <xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs> and then invokes it."},{"content":"For more information about this implementation pattern and the reasons for it, see &lt;xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A&gt; and <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[155,366],"source":" For more information about this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[7848,7899],"content":"The generic handler to call in a type-specific way.","needQuote":true,"needEscape":true,"nodes":[{"content":"The generic handler to call in a type-specific way.","pos":[0,51]}]},{"pos":[7969,8009],"content":"The target on which to call the handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target on which to call the handler.","pos":[0,40]}]},{"pos":[8477,8517],"content":"Gets the touch that generated the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the touch that generated the event.","pos":[0,40]}]},{"pos":[9446,9481],"content":"The touch that generated the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The touch that generated the event.","pos":[0,35]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.TouchEventArgs\n  id: TouchEventArgs\n  children:\n  - System.Windows.Input.TouchEventArgs.#ctor(System.Windows.Input.TouchDevice,System.Int32)\n  - System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints(System.Windows.IInputElement)\n  - System.Windows.Input.TouchEventArgs.GetTouchPoint(System.Windows.IInputElement)\n  - System.Windows.Input.TouchEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.Input.TouchEventArgs.TouchDevice\n  langs:\n  - csharp\n  name: TouchEventArgs\n  nameWithType: TouchEventArgs\n  fullName: System.Windows.Input.TouchEventArgs\n  type: Class\n  summary: Provides data for touch input events.\n  remarks: \"The following events use TouchEventArgs.  \\n  \\n-   <xref:System.Windows.UIElement.TouchUp?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement.TouchDown?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement.TouchEnter?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement.TouchLeave?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement.TouchMove?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement3D.TouchUp?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement3D.TouchDown?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement3D.TouchEnter?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement3D.TouchLeave?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement3D.TouchMove?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.ContentElement.TouchUp?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.ContentElement.TouchDown?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.ContentElement.TouchEnter?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.ContentElement.TouchLeave?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.ContentElement.TouchMove?displayProperty=fullName>\"\n  example:\n  - \"The following example handles the <xref:System.Windows.UIElement.TouchUp> events that occur on a <xref:System.Windows.Controls.Canvas>. It checks the <xref:System.Windows.Input.TouchDevice.Captured%2A> property to verify that the device that raised the event is captured to the <xref:System.Windows.Controls.Canvas>. If it is, the <xref:System.Windows.Input.TouchDevice> is released.  \\n  \\n This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.  \\n  \\n [!code-vb[TouchEventsSample#130](~/add/codesnippet/visualbasic/wpftoucheventssample/mainwindow.xaml.vb#130)]\\n [!code-cs[TouchEventsSample#130](~/add/codesnippet/csharp/wpftoucheventssample/mainwindow.xaml.cs#130)]\"\n  syntax:\n    content: 'public class TouchEventArgs : System.Windows.Input.InputEventArgs'\n  inheritance:\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  - System.Windows.Input.InputEventArgs\n  implements: []\n  inheritedMembers:\n  - System.Windows.Input.InputEventArgs.Device\n  - System.Windows.Input.InputEventArgs.Timestamp\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  platform:\n  - net462\n- uid: System.Windows.Input.TouchEventArgs.#ctor(System.Windows.Input.TouchDevice,System.Int32)\n  id: '#ctor(System.Windows.Input.TouchDevice,System.Int32)'\n  parent: System.Windows.Input.TouchEventArgs\n  langs:\n  - csharp\n  name: TouchEventArgs(TouchDevice,Int32)\n  nameWithType: TouchEventArgs.TouchEventArgs(TouchDevice,Int32)\n  fullName: System.Windows.Input.TouchEventArgs.TouchEventArgs(TouchDevice,Int32)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> class.\n  syntax:\n    content: public TouchEventArgs (System.Windows.Input.TouchDevice touchDevice, int timestamp);\n    parameters:\n    - id: touchDevice\n      type: System.Windows.Input.TouchDevice\n      description: The input device to associate with this event.\n    - id: timestamp\n      type: System.Int32\n      description: The time when the input occurred.\n  overload: System.Windows.Input.TouchEventArgs.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints(System.Windows.IInputElement)\n  id: GetIntermediateTouchPoints(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchEventArgs\n  langs:\n  - csharp\n  name: GetIntermediateTouchPoints(IInputElement)\n  nameWithType: TouchEventArgs.GetIntermediateTouchPoints(IInputElement)\n  fullName: System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Returns all touch points that were collected between the most recent and previous touch events.\n  syntax:\n    content: public System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints (System.Windows.IInputElement relativeTo);\n    parameters:\n    - id: relativeTo\n      type: System.Windows.IInputElement\n      description: The element that defines the coordinate space.\n    return:\n      type: System.Windows.Input.TouchPointCollection\n      description: All touch points that were collected between the most recent and previous touch events.\n  overload: System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.TouchEventArgs.GetTouchPoint(System.Windows.IInputElement)\n  id: GetTouchPoint(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchEventArgs\n  langs:\n  - csharp\n  name: GetTouchPoint(IInputElement)\n  nameWithType: TouchEventArgs.GetTouchPoint(IInputElement)\n  fullName: System.Windows.Input.TouchEventArgs.GetTouchPoint(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Returns the current position of the touch device relative to the specified element.\n  syntax:\n    content: public System.Windows.Input.TouchPoint GetTouchPoint (System.Windows.IInputElement relativeTo);\n    parameters:\n    - id: relativeTo\n      type: System.Windows.IInputElement\n      description: The element that defines the coordinate space.\n    return:\n      type: System.Windows.Input.TouchPoint\n      description: The current position of the touch device relative to the specified element.\n  overload: System.Windows.Input.TouchEventArgs.GetTouchPoint*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.TouchEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.TouchEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: TouchEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.Input.TouchEventArgs.InvokeEventHandler(Delegate,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Invokes event handlers in a type-specific way, which can increase event system efficiency.\n  remarks: This implementation casts the generic handler as an <xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs> and then invokes it. For more information about this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: The generic handler to call in a type-specific way.\n    - id: genericTarget\n      type: System.Object\n      description: The target on which to call the handler.\n  overload: System.Windows.Input.TouchEventArgs.InvokeEventHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.TouchEventArgs.TouchDevice\n  id: TouchDevice\n  parent: System.Windows.Input.TouchEventArgs\n  langs:\n  - csharp\n  name: TouchDevice\n  nameWithType: TouchEventArgs.TouchDevice\n  fullName: System.Windows.Input.TouchEventArgs.TouchDevice\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the touch that generated the event.\n  remarks: ''\n  example:\n  - \"The following example handles the <xref:System.Windows.UIElement.TouchUp> events that occur on a <xref:System.Windows.Controls.Canvas>. It checks the <xref:System.Windows.Input.TouchDevice.Captured%2A> property to verify that the device that raised the event is captured to the <xref:System.Windows.Controls.Canvas>. If it is, the <xref:System.Windows.Input.TouchDevice> is released.  \\n  \\n This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.  \\n  \\n [!code-vb[TouchEventsSample#130](~/add/codesnippet/visualbasic/wpftoucheventssample/mainwindow.xaml.vb#130)]\\n [!code-cs[TouchEventsSample#130](~/add/codesnippet/csharp/wpftoucheventssample/mainwindow.xaml.cs#130)]\"\n  syntax:\n    content: public System.Windows.Input.TouchDevice TouchDevice { get; }\n    return:\n      type: System.Windows.Input.TouchDevice\n      description: The touch that generated the event.\n  overload: System.Windows.Input.TouchEventArgs.TouchDevice*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Input.InputEventArgs\n  isExternal: false\n  name: System.Windows.Input.InputEventArgs\n- uid: System.Windows.Input.TouchEventArgs.#ctor(System.Windows.Input.TouchDevice,System.Int32)\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: TouchEventArgs(TouchDevice,Int32)\n  nameWithType: TouchEventArgs.TouchEventArgs(TouchDevice,Int32)\n  fullName: System.Windows.Input.TouchEventArgs.TouchEventArgs(TouchDevice,Int32)\n- uid: System.Windows.Input.TouchDevice\n  parent: System.Windows.Input\n  isExternal: false\n  name: TouchDevice\n  nameWithType: TouchDevice\n  fullName: System.Windows.Input.TouchDevice\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: GetIntermediateTouchPoints(IInputElement)\n  nameWithType: TouchEventArgs.GetIntermediateTouchPoints(IInputElement)\n  fullName: System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints(IInputElement)\n- uid: System.Windows.Input.TouchPointCollection\n  parent: System.Windows.Input\n  isExternal: false\n  name: TouchPointCollection\n  nameWithType: TouchPointCollection\n  fullName: System.Windows.Input.TouchPointCollection\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.TouchEventArgs.GetTouchPoint(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: GetTouchPoint(IInputElement)\n  nameWithType: TouchEventArgs.GetTouchPoint(IInputElement)\n  fullName: System.Windows.Input.TouchEventArgs.GetTouchPoint(IInputElement)\n- uid: System.Windows.Input.TouchPoint\n  parent: System.Windows.Input\n  isExternal: false\n  name: TouchPoint\n  nameWithType: TouchPoint\n  fullName: System.Windows.Input.TouchPoint\n- uid: System.Windows.Input.TouchEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: TouchEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.Input.TouchEventArgs.InvokeEventHandler(Delegate,Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: true\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.TouchEventArgs.TouchDevice\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: TouchDevice\n  nameWithType: TouchEventArgs.TouchDevice\n  fullName: System.Windows.Input.TouchEventArgs.TouchDevice\n- uid: System.Windows.Input.TouchEventArgs.#ctor*\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: TouchEventArgs\n  nameWithType: TouchEventArgs.TouchEventArgs\n- uid: System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints*\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: GetIntermediateTouchPoints\n  nameWithType: TouchEventArgs.GetIntermediateTouchPoints\n- uid: System.Windows.Input.TouchEventArgs.GetTouchPoint*\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: GetTouchPoint\n  nameWithType: TouchEventArgs.GetTouchPoint\n- uid: System.Windows.Input.TouchEventArgs.InvokeEventHandler*\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: InvokeEventHandler\n  nameWithType: TouchEventArgs.InvokeEventHandler\n- uid: System.Windows.Input.TouchEventArgs.TouchDevice*\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: TouchDevice\n  nameWithType: TouchEventArgs.TouchDevice\n"}