{"nodes":[{"pos":[1136,1274],"content":"Provides methods to manage the global designer verbs and menu commands available in design mode, and to show some types of shortcut menus.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides methods to manage the global designer verbs and menu commands available in design mode, and to show some types of shortcut menus.","pos":[0,138]}]},{"pos":[1287,5589],"content":"This interface provides methods to:      -   Find, invoke, add and remove global designer verb commands.      -   Find, invoke, add and remove standard menu commands.      -   Alter the event handlers associated with standard menu commands.      -   Display a shortcut menu of standard commands that is associated with a menu <xref:System.ComponentModel.Design.CommandID>.       Designer verbs represent custom-defined commands that are listed on the shortcut menu in design mode. A designer verb can provide a specified text label. Each designer verb is automatically assigned a unique <xref:System.ComponentModel.Design.CommandID>. A designer can provide designer verbs through its <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property, but these are only available when the designer's component is currently selected. Global designer verbs are designer verb commands that can be accessed from a design-mode shortcut menu regardless of the selected component. This interface allows you to manage the set of global designer verbs that are available in design mode.       You can add a global designer verb using the <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> method, and you can remove a global designer verb using the <xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A> method. You can invoke a designer verb using the <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> method if you know the <xref:System.ComponentModel.Design.CommandID> of the verb. The <xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A> property of this interface contains the current set of designer verb commands to display in a shortcut menu. This set of designer verb commands consists of all global designer verbs and any designer verbs offered by the designer of any currently selected component. This set of verbs is updated each time a component with a designer offering designer verb commands is selected or deselected.       Menu commands are limited to the set of predefined standard commands. Most of the predefined standard commands are defined in the <xref:System.ComponentModel.Design.StandardCommands> and <xref:System.Windows.Forms.Design.MenuCommands> enumerations. You can add, remove, and invoke menu commands, and search for menu commands that have been added to a menu using methods of this interface.       You can add a standard menu command using the <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> method, and remove a standard menu command using the <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> method. You can attach an event handler to a predefined standard menu command by following the procedure detailed in the documentation for the <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> method. You can retrieve a menu command by <xref:System.ComponentModel.Design.CommandID> if it has been added to a menu using the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method. You can invoke a menu command or designer verb command by <xref:System.ComponentModel.Design.CommandID> using the <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> method.      > [!NOTE] >  An attempt to add a menu command with an already existing <xref:System.ComponentModel.Design.CommandID> will throw an <xref:System.InvalidOperationException>. When adding a menu command, be sure to check that it is not already on a menu using the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method, or use exception handling wisely.      > [!NOTE] >  A menu command can be added to a menu, and have its <xref:System.ComponentModel.Design.MenuCommand.Visible%2A> or <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A> properties set to `false`. If you cannot visually locate a menu command that has been added on a menu, one of these properties may have been set to `false`.       You can show certain standard shortcut menus containing menu commands at a specified location using the <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> method. The documentation for this method contains a table listing the command IDs that specify the valid menus to show.","needQuote":false,"needEscape":true,"nodes":[{"content":"This interface provides methods to:      -   Find, invoke, add and remove global designer verb commands.","pos":[0,104]},{"content":"-   Find, invoke, add and remove standard menu commands.","pos":[110,166]},{"content":"-   Alter the event handlers associated with standard menu commands.","pos":[172,240]},{"content":"-   Display a shortcut menu of standard commands that is associated with a menu &lt;xref:System.ComponentModel.Design.CommandID&gt;.","pos":[246,372],"source":"      -   Display a shortcut menu of standard commands that is associated with a menu <xref:System.ComponentModel.Design.CommandID>."},{"content":"Designer verbs represent custom-defined commands that are listed on the shortcut menu in design mode.","pos":[379,480]},{"content":"A designer verb can provide a specified text label.","pos":[481,532]},{"content":"Each designer verb is automatically assigned a unique &lt;xref:System.ComponentModel.Design.CommandID&gt;.","pos":[533,633],"source":" Each designer verb is automatically assigned a unique <xref:System.ComponentModel.Design.CommandID>."},{"content":"A designer can provide designer verbs through its &lt;xref:System.ComponentModel.Design.IDesigner.Verbs%2A&gt; property, but these are only available when the designer's component is currently selected.","pos":[634,830],"source":" A designer can provide designer verbs through its <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property, but these are only available when the designer's component is currently selected."},{"content":"Global designer verbs are designer verb commands that can be accessed from a design-mode shortcut menu regardless of the selected component.","pos":[831,971]},{"content":"This interface allows you to manage the set of global designer verbs that are available in design mode.","pos":[972,1075]},{"content":"You can add a global designer verb using the &lt;xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A&gt; method, and you can remove a global designer verb using the &lt;xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A&gt; method.","pos":[1082,1331],"source":"       You can add a global designer verb using the <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> method, and you can remove a global designer verb using the <xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A> method."},{"content":"You can invoke a designer verb using the &lt;xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A&gt; method if you know the &lt;xref:System.ComponentModel.Design.CommandID&gt; of the verb.","pos":[1332,1526],"source":" You can invoke a designer verb using the <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> method if you know the <xref:System.ComponentModel.Design.CommandID> of the verb."},{"content":"The &lt;xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A&gt; property of this interface contains the current set of designer verb commands to display in a shortcut menu.","pos":[1527,1704],"source":" The <xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A> property of this interface contains the current set of designer verb commands to display in a shortcut menu."},{"content":"This set of designer verb commands consists of all global designer verbs and any designer verbs offered by the designer of any currently selected component.","pos":[1705,1861]},{"content":"This set of verbs is updated each time a component with a designer offering designer verb commands is selected or deselected.","pos":[1862,1987]},{"content":"Menu commands are limited to the set of predefined standard commands.","pos":[1994,2063]},{"content":"Most of the predefined standard commands are defined in the &lt;xref:System.ComponentModel.Design.StandardCommands&gt; and &lt;xref:System.Windows.Forms.Design.MenuCommands&gt; enumerations.","pos":[2064,2242],"source":" Most of the predefined standard commands are defined in the <xref:System.ComponentModel.Design.StandardCommands> and <xref:System.Windows.Forms.Design.MenuCommands> enumerations."},{"content":"You can add, remove, and invoke menu commands, and search for menu commands that have been added to a menu using methods of this interface.","pos":[2243,2382]},{"content":"You can add a standard menu command using the &lt;xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A&gt; method, and remove a standard menu command using the &lt;xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A&gt; method.","pos":[2389,2638],"source":"       You can add a standard menu command using the <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> method, and remove a standard menu command using the <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> method."},{"content":"You can attach an event handler to a predefined standard menu command by following the procedure detailed in the documentation for the &lt;xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A&gt; method.","pos":[2639,2851],"source":" You can attach an event handler to a predefined standard menu command by following the procedure detailed in the documentation for the <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> method."},{"content":"You can retrieve a menu command by &lt;xref:System.ComponentModel.Design.CommandID&gt; if it has been added to a menu using the &lt;xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A&gt; method.","pos":[2852,3052],"source":" You can retrieve a menu command by <xref:System.ComponentModel.Design.CommandID> if it has been added to a menu using the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method."},{"content":"You can invoke a menu command or designer verb command by &lt;xref:System.ComponentModel.Design.CommandID&gt; using the &lt;xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A&gt; method.","pos":[3053,3246],"source":" You can invoke a menu command or designer verb command by <xref:System.ComponentModel.Design.CommandID> using the <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> method."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  An attempt to add a menu command with an already existing &lt;xref:System.ComponentModel.Design.CommandID&gt; will throw an &lt;xref:System.InvalidOperationException&gt;.","pos":[3252,3423],"source":"      > [!NOTE] >  An attempt to add a menu command with an already existing <xref:System.ComponentModel.Design.CommandID> will throw an <xref:System.InvalidOperationException>."},{"content":"When adding a menu command, be sure to check that it is not already on a menu using the &lt;xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A&gt; method, or use exception handling wisely.","pos":[3424,3624],"source":" When adding a menu command, be sure to check that it is not already on a menu using the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method, or use exception handling wisely."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  A menu command can be added to a menu, and have its &lt;xref:System.ComponentModel.Design.MenuCommand.Visible%2A&gt; or &lt;xref:System.ComponentModel.Design.MenuCommand.Enabled%2A&gt; properties set to <ph id=\"ph2\">`false`</ph>.","pos":[3630,3842],"source":"      > [!NOTE] >  A menu command can be added to a menu, and have its <xref:System.ComponentModel.Design.MenuCommand.Visible%2A> or <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A> properties set to `false`."},{"content":"If you cannot visually locate a menu command that has been added on a menu, one of these properties may have been set to <ph id=\"ph1\">`false`</ph>.","pos":[3843,3972],"source":" If you cannot visually locate a menu command that has been added on a menu, one of these properties may have been set to `false`."},{"content":"You can show certain standard shortcut menus containing menu commands at a specified location using the &lt;xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A&gt; method.","pos":[3979,4165],"source":"       You can show certain standard shortcut menus containing menu commands at a specified location using the <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> method."},{"content":"The documentation for this method contains a table listing the command IDs that specify the valid menus to show.","pos":[4166,4278]}]},{"pos":[6700,6753],"content":"Adds the specified standard menu command to the menu.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified standard menu command to the menu.","pos":[0,53]}]},{"pos":[6766,9325],"content":"The <xref:System.Windows.Forms.Design.MenuCommands> and <xref:System.ComponentModel.Design.StandardCommands> enumerations contain <xref:System.ComponentModel.Design.CommandID> identifiers for predefined standard commands and menu commands that are already associated with a location on a particular menu.      > [!NOTE] >  An attempt to add a menu command with an already existing <xref:System.ComponentModel.Design.CommandID> will throw an <xref:System.InvalidOperationException>. When adding a menu command, be sure to check that it is not already on a menu using the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method, or use exception handling wisely.       You can attach an event handler to a predefined menu command with the following procedure:      1.  If the menu command to link with an event handler has been added to a menu, or is located with the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method, consider whether you wish to restore this menu command later, and whether you want to invoke the current event handler from your new event handler. If your code might restore the menu command or chain the invocation of event handlers, be sure to store a reference to the menu command somewhere.      2.  Ensure that any previously existing menu command with the same <xref:System.ComponentModel.Design.CommandID> has been removed from the menu using the <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> method.      3.  Create a new <xref:System.ComponentModel.Design.MenuCommand> and specify your event handler in the constructor, along with a <xref:System.ComponentModel.Design.CommandID> representing the command to add. Each standard menu command is associated with a predefined menu location where it is added to. The supported command IDs are defined in the <xref:System.ComponentModel.Design.StandardCommands> and <xref:System.Windows.Forms.Design.MenuCommands> enumerations.      4.  If you want to invoke any preexisting event handler for the menu command, call the <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method of the menu command you have replaced on the menu from the event handler that handles the invoke event of your menu command.      5.  If you are interested in restoring the event handler of a preexisting menu command that you have replaced, add the stored, preexisting menu command after you remove the replacement menu command you created. You may want to add this behavior to the `Dispose` method for your type.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Forms.Design.MenuCommands&gt; and &lt;xref:System.ComponentModel.Design.StandardCommands&gt; enumerations contain &lt;xref:System.ComponentModel.Design.CommandID&gt; identifiers for predefined standard commands and menu commands that are already associated with a location on a particular menu.","pos":[0,304],"source":"The <xref:System.Windows.Forms.Design.MenuCommands> and <xref:System.ComponentModel.Design.StandardCommands> enumerations contain <xref:System.ComponentModel.Design.CommandID> identifiers for predefined standard commands and menu commands that are already associated with a location on a particular menu."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  An attempt to add a menu command with an already existing &lt;xref:System.ComponentModel.Design.CommandID&gt; will throw an &lt;xref:System.InvalidOperationException&gt;.","pos":[310,481],"source":"      > [!NOTE] >  An attempt to add a menu command with an already existing <xref:System.ComponentModel.Design.CommandID> will throw an <xref:System.InvalidOperationException>."},{"content":"When adding a menu command, be sure to check that it is not already on a menu using the &lt;xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A&gt; method, or use exception handling wisely.","pos":[482,682],"source":" When adding a menu command, be sure to check that it is not already on a menu using the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method, or use exception handling wisely."},{"content":"You can attach an event handler to a predefined menu command with the following procedure:      1.","pos":[689,787]},{"content":"If the menu command to link with an event handler has been added to a menu, or is located with the &lt;xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A&gt; method, consider whether you wish to restore this menu command later, and whether you want to invoke the current event handler from your new event handler.","pos":[789,1114],"source":"  If the menu command to link with an event handler has been added to a menu, or is located with the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method, consider whether you wish to restore this menu command later, and whether you want to invoke the current event handler from your new event handler."},{"content":"If your code might restore the menu command or chain the invocation of event handlers, be sure to store a reference to the menu command somewhere.","pos":[1115,1261]},{"content":"2.","pos":[1267,1269]},{"content":"Ensure that any previously existing menu command with the same &lt;xref:System.ComponentModel.Design.CommandID&gt; has been removed from the menu using the &lt;xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A&gt; method.","pos":[1271,1501],"source":"  Ensure that any previously existing menu command with the same <xref:System.ComponentModel.Design.CommandID> has been removed from the menu using the <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> method."},{"content":"3.","pos":[1507,1509]},{"content":"Create a new &lt;xref:System.ComponentModel.Design.MenuCommand&gt; and specify your event handler in the constructor, along with a &lt;xref:System.ComponentModel.Design.CommandID&gt; representing the command to add.","pos":[1511,1714],"source":"  Create a new <xref:System.ComponentModel.Design.MenuCommand> and specify your event handler in the constructor, along with a <xref:System.ComponentModel.Design.CommandID> representing the command to add."},{"content":"Each standard menu command is associated with a predefined menu location where it is added to.","pos":[1715,1809]},{"content":"The supported command IDs are defined in the &lt;xref:System.ComponentModel.Design.StandardCommands&gt; and &lt;xref:System.Windows.Forms.Design.MenuCommands&gt; enumerations.","pos":[1810,1973],"source":" The supported command IDs are defined in the <xref:System.ComponentModel.Design.StandardCommands> and <xref:System.Windows.Forms.Design.MenuCommands> enumerations."},{"content":"4.","pos":[1979,1981]},{"content":"If you want to invoke any preexisting event handler for the menu command, call the &lt;xref:System.ComponentModel.Design.MenuCommand.Invoke%2A&gt; method of the menu command you have replaced on the menu from the event handler that handles the invoke event of your menu command.","pos":[1983,2255],"source":"  If you want to invoke any preexisting event handler for the menu command, call the <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method of the menu command you have replaced on the menu from the event handler that handles the invoke event of your menu command."},{"content":"5.","pos":[2261,2263]},{"content":"If you are interested in restoring the event handler of a preexisting menu command that you have replaced, add the stored, preexisting menu command after you remove the replacement menu command you created.","pos":[2265,2471]},{"content":"You may want to add this behavior to the <ph id=\"ph1\">`Dispose`</ph> method for your type.","pos":[2472,2544],"source":" You may want to add this behavior to the `Dispose` method for your type."}]},{"pos":[9531,9604],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> to add."},{"pos":[9802,9974],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.CommandID\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the specified <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.MenuCommand\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is already present on a menu.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.CommandID\"></xref> of the specified <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> is already present on a menu."},{"pos":[10505,10574],"content":"Adds the specified designer verb to the set of global designer verbs.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified designer verb to the set of global designer verbs.","pos":[0,69]}]},{"pos":[10586,10926],"content":"Designers of components that provide designer verbs should use the <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property of their designer rather than calling this method. This method adds a global designer verb that can be accessed from the right-click shortcut menu in design mode regardless of the currently selected component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Designers of components that provide designer verbs should use the <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property of their designer rather than calling this method. This method adds a global designer verb that can be accessed from the right-click shortcut menu in design mode regardless of the currently selected component.","pos":[0,340],"nodes":[{"content":"Designers of components that provide designer verbs should use the &lt;xref:System.ComponentModel.Design.IDesigner.Verbs%2A&gt; property of their designer rather than calling this method.","pos":[0,181],"source":"Designers of components that provide designer verbs should use the <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property of their designer rather than calling this method."},{"content":"This method adds a global designer verb that can be accessed from the right-click shortcut menu in design mode regardless of the currently selected component.","pos":[182,340]}]}]},{"pos":[11124,11198],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignerVerb\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.DesignerVerb\"></xref> to add."},{"pos":[11821,11907],"content":"Searches for the specified command ID and returns the menu command associated with it.","needQuote":true,"needEscape":true,"nodes":[{"content":"Searches for the specified command ID and returns the menu command associated with it.","pos":[0,86]}]},{"pos":[12149,12227],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.CommandID\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to search for.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.CommandID\"></xref> to search for."},{"pos":[12312,12497],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the command ID, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if no command is found.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> associated with the command ID, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no command is found."},{"pos":[13129,13203],"content":"Invokes a menu or designer verb command matching the specified command ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invokes a menu or designer verb command matching the specified command ID.","pos":[0,74]}]},{"pos":[13215,13686],"content":"This method searches for a menu command or designer verb with a <xref:System.ComponentModel.Design.CommandID> matching the specified <xref:System.ComponentModel.Design.CommandID>. This method first searches within the designer verbs collection consisting of global and active designer-provided verbs before continuing the search, if necessary, through the global environment command service. If a matching menu command or designer verb is located, the command is invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method searches for a menu command or designer verb with a <xref:System.ComponentModel.Design.CommandID> matching the specified <xref:System.ComponentModel.Design.CommandID>. This method first searches within the designer verbs collection consisting of global and active designer-provided verbs before continuing the search, if necessary, through the global environment command service. If a matching menu command or designer verb is located, the command is invoked.","pos":[0,471],"nodes":[{"content":"This method searches for a menu command or designer verb with a &lt;xref:System.ComponentModel.Design.CommandID&gt; matching the specified &lt;xref:System.ComponentModel.Design.CommandID&gt;.","pos":[0,179],"source":"This method searches for a menu command or designer verb with a <xref:System.ComponentModel.Design.CommandID> matching the specified <xref:System.ComponentModel.Design.CommandID>."},{"content":"This method first searches within the designer verbs collection consisting of global and active designer-provided verbs before continuing the search, if necessary, through the global environment command service.","pos":[180,391]},{"content":"If a matching menu command or designer verb is located, the command is invoked.","pos":[392,471]}]}]},{"pos":[13893,13998],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.CommandID\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the command to search for and execute.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.CommandID\"></xref> of the command to search for and execute."},{"pos":[14057,14243],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the command was found and invoked successfully; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the command was found and invoked successfully; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14891,14949],"content":"Removes the specified standard menu command from the menu.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified standard menu command from the menu.","pos":[0,58]}]},{"pos":[14961,15441],"content":"This method removes the specified <xref:System.ComponentModel.Design.MenuCommand> if it is found. This method does not raise an exception or return a value if the specified <xref:System.ComponentModel.Design.MenuCommand> is not found. Use the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method to determine whether a <xref:System.ComponentModel.Design.MenuCommand> matching a specified <xref:System.ComponentModel.Design.CommandID> is located on a menu.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method removes the specified <xref:System.ComponentModel.Design.MenuCommand> if it is found. This method does not raise an exception or return a value if the specified <xref:System.ComponentModel.Design.MenuCommand> is not found. Use the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method to determine whether a <xref:System.ComponentModel.Design.MenuCommand> matching a specified <xref:System.ComponentModel.Design.CommandID> is located on a menu.","pos":[0,480],"nodes":[{"content":"This method removes the specified &lt;xref:System.ComponentModel.Design.MenuCommand&gt; if it is found.","pos":[0,97],"source":"This method removes the specified <xref:System.ComponentModel.Design.MenuCommand> if it is found."},{"content":"This method does not raise an exception or return a value if the specified &lt;xref:System.ComponentModel.Design.MenuCommand&gt; is not found.","pos":[98,234],"source":" This method does not raise an exception or return a value if the specified <xref:System.ComponentModel.Design.MenuCommand> is not found."},{"content":"Use the &lt;xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A&gt; method to determine whether a &lt;xref:System.ComponentModel.Design.MenuCommand&gt; matching a specified &lt;xref:System.ComponentModel.Design.CommandID&gt; is located on a menu.","pos":[235,480],"source":" Use the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method to determine whether a <xref:System.ComponentModel.Design.MenuCommand> matching a specified <xref:System.ComponentModel.Design.CommandID> is located on a menu."}]}]},{"pos":[15649,15725],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> to remove."},{"pos":[16364,16445],"content":"Removes the specified designer verb from the collection of global designer verbs.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified designer verb from the collection of global designer verbs.","pos":[0,81]}]},{"pos":[16457,16718],"content":"This method removes the specified global designer verb if it is within the global designer verbs collection. You can add a designer verb to the global designer verbs collection using the <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method removes the specified global designer verb if it is within the global designer verbs collection. You can add a designer verb to the global designer verbs collection using the <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> method.","pos":[0,261],"nodes":[{"content":"This method removes the specified global designer verb if it is within the global designer verbs collection.","pos":[0,108]},{"content":"You can add a designer verb to the global designer verbs collection using the &lt;xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A&gt; method.","pos":[109,261],"source":" You can add a designer verb to the global designer verbs collection using the <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> method."}]}]},{"pos":[16919,16996],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignerVerb\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.DesignerVerb\"></xref> to remove."},{"pos":[17730,17790],"content":"Shows the specified shortcut menu at the specified location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Shows the specified shortcut menu at the specified location.","pos":[0,60]}]},{"pos":[17803,18528],"content":"The ShowContextMenu method can display any of the following Visual Studio shortcut menus containing menu commands at a specified point:      |Menu|CommandID|   |----------|---------------|   |The shortcut menu displayed for a container|<xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>|   |The shortcut menu displayed for the component tray|<xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu>|   |The shortcut menu displayed for a selection|<xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu>|   |The shortcut menu displayed for a tray selection|<xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu>|       This method can also display other registered shortcut menus.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ShowContextMenu method can display any of the following Visual Studio shortcut menus containing menu commands at a specified point:      |Menu|CommandID|   |----------|---------------|   |The shortcut menu displayed for a container|&lt;xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu&gt;|   |The shortcut menu displayed for the component tray|&lt;xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu&gt;|   |The shortcut menu displayed for a selection|&lt;xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu&gt;|   |The shortcut menu displayed for a tray selection|&lt;xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu&gt;|       This method can also display other registered shortcut menus.","pos":[0,716],"source":"The ShowContextMenu method can display any of the following Visual Studio shortcut menus containing menu commands at a specified point:      |Menu|CommandID|   |----------|---------------|   |The shortcut menu displayed for a container|<xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>|   |The shortcut menu displayed for the component tray|<xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu>|   |The shortcut menu displayed for a selection|<xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu>|   |The shortcut menu displayed for a tray selection|<xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu>|       This method can also display other registered shortcut menus."}]},{"pos":[18747,18841],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.CommandID\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the shortcut menu to show.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.CommandID\"></xref> for the shortcut menu to show."},{"pos":[18898,18967],"content":"The x-coordinate at which to display the menu, in screen coordinates.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate at which to display the menu, in screen coordinates.","pos":[0,69]}]},{"pos":[19024,19093],"content":"The y-coordinate at which to display the menu, in screen coordinates.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate at which to display the menu, in screen coordinates.","pos":[0,69]}]},{"pos":[19583,19652],"content":"Gets a collection of the designer verbs that are currently available.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of the designer verbs that are currently available.","pos":[0,69]}]},{"pos":[19664,20136],"content":"The set of currently available designer verbs consists of all global designer verbs, which are added by the <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> method on this interface, and individual designer verbs, which are offered by the <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property of individual designers. If the name of a global verb conflicts with the name of a designer verb, the designer-provided designer verb takes precedence.","needQuote":true,"needEscape":true,"nodes":[{"content":"The set of currently available designer verbs consists of all global designer verbs, which are added by the <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> method on this interface, and individual designer verbs, which are offered by the <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property of individual designers. If the name of a global verb conflicts with the name of a designer verb, the designer-provided designer verb takes precedence.","pos":[0,472],"nodes":[{"content":"The set of currently available designer verbs consists of all global designer verbs, which are added by the &lt;xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A&gt; method on this interface, and individual designer verbs, which are offered by the &lt;xref:System.ComponentModel.Design.IDesigner.Verbs%2A&gt; property of individual designers.","pos":[0,345],"source":"The set of currently available designer verbs consists of all global designer verbs, which are added by the <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> method on this interface, and individual designer verbs, which are offered by the <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property of individual designers."},{"content":"If the name of a global verb conflicts with the name of a designer verb, the designer-provided designer verb takes precedence.","pos":[346,472]}]}]},{"pos":[20329,20466],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignerVerbCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the designer verbs that are currently available.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.Design.DesignerVerbCollection\"></xref> that contains the designer verbs that are currently available."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.IMenuCommandService\n  id: IMenuCommandService\n  children:\n  - System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)\n  - System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)\n  - System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)\n  - System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)\n  - System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)\n  - System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)\n  - System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)\n  - System.ComponentModel.Design.IMenuCommandService.Verbs\n  langs:\n  - csharp\n  name: IMenuCommandService\n  nameWithType: IMenuCommandService\n  fullName: System.ComponentModel.Design.IMenuCommandService\n  type: Interface\n  summary: Provides methods to manage the global designer verbs and menu commands available in design mode, and to show some types of shortcut menus.\n  remarks: \"This interface provides methods to:  \\n  \\n-   Find, invoke, add and remove global designer verb commands.  \\n  \\n-   Find, invoke, add and remove standard menu commands.  \\n  \\n-   Alter the event handlers associated with standard menu commands.  \\n  \\n-   Display a shortcut menu of standard commands that is associated with a menu <xref:System.ComponentModel.Design.CommandID>.  \\n  \\n Designer verbs represent custom-defined commands that are listed on the shortcut menu in design mode. A designer verb can provide a specified text label. Each designer verb is automatically assigned a unique <xref:System.ComponentModel.Design.CommandID>. A designer can provide designer verbs through its <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property, but these are only available when the designer's component is currently selected. Global designer verbs are designer verb commands that can be accessed from a design-mode shortcut menu regardless of the selected component. This interface allows you to manage the set of global designer verbs that are available in design mode.  \\n  \\n You can add a global designer verb using the <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> method, and you can remove a global designer verb using the <xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A> method. You can invoke a designer verb using the <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> method if you know the <xref:System.ComponentModel.Design.CommandID> of the verb. The <xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A> property of this interface contains the current set of designer verb commands to display in a shortcut menu. This set of designer verb commands consists of all global designer verbs and any designer verbs offered by the designer of any currently selected component. This set of verbs is updated each time a component with a designer offering designer verb commands is selected or deselected.  \\n  \\n Menu commands are limited to the set of predefined standard commands. Most of the predefined standard commands are defined in the <xref:System.ComponentModel.Design.StandardCommands> and <xref:System.Windows.Forms.Design.MenuCommands> enumerations. You can add, remove, and invoke menu commands, and search for menu commands that have been added to a menu using methods of this interface.  \\n  \\n You can add a standard menu command using the <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> method, and remove a standard menu command using the <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> method. You can attach an event handler to a predefined standard menu command by following the procedure detailed in the documentation for the <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> method. You can retrieve a menu command by <xref:System.ComponentModel.Design.CommandID> if it has been added to a menu using the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method. You can invoke a menu command or designer verb command by <xref:System.ComponentModel.Design.CommandID> using the <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> method.  \\n  \\n> [!NOTE]\\n>  An attempt to add a menu command with an already existing <xref:System.ComponentModel.Design.CommandID> will throw an <xref:System.InvalidOperationException>. When adding a menu command, be sure to check that it is not already on a menu using the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method, or use exception handling wisely.  \\n  \\n> [!NOTE]\\n>  A menu command can be added to a menu, and have its <xref:System.ComponentModel.Design.MenuCommand.Visible%2A> or <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A> properties set to `false`. If you cannot visually locate a menu command that has been added on a menu, one of these properties may have been set to `false`.  \\n  \\n You can show certain standard shortcut menus containing menu commands at a specified location using the <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> method. The documentation for this method contains a table listing the command IDs that specify the valid menus to show.\"\n  example:\n  - \"This example demonstrates using the IMenuCommandService to add a <xref:System.ComponentModel.Design.MenuCommand>.  \\n  \\n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/t-system.componentmodel._76_1.cpp)]\\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/t-system.componentmodel._76_1.cs)]\\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._76_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IMenuCommandService\n  implements: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)\n  id: AddCommand(System.ComponentModel.Design.MenuCommand)\n  parent: System.ComponentModel.Design.IMenuCommandService\n  langs:\n  - csharp\n  name: AddCommand(MenuCommand)\n  nameWithType: IMenuCommandService.AddCommand(MenuCommand)\n  fullName: System.ComponentModel.Design.IMenuCommandService.AddCommand(MenuCommand)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Adds the specified standard menu command to the menu.\n  remarks: \"The <xref:System.Windows.Forms.Design.MenuCommands> and <xref:System.ComponentModel.Design.StandardCommands> enumerations contain <xref:System.ComponentModel.Design.CommandID> identifiers for predefined standard commands and menu commands that are already associated with a location on a particular menu.  \\n  \\n> [!NOTE]\\n>  An attempt to add a menu command with an already existing <xref:System.ComponentModel.Design.CommandID> will throw an <xref:System.InvalidOperationException>. When adding a menu command, be sure to check that it is not already on a menu using the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method, or use exception handling wisely.  \\n  \\n You can attach an event handler to a predefined menu command with the following procedure:  \\n  \\n1.  If the menu command to link with an event handler has been added to a menu, or is located with the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method, consider whether you wish to restore this menu command later, and whether you want to invoke the current event handler from your new event handler. If your code might restore the menu command or chain the invocation of event handlers, be sure to store a reference to the menu command somewhere.  \\n  \\n2.  Ensure that any previously existing menu command with the same <xref:System.ComponentModel.Design.CommandID> has been removed from the menu using the <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> method.  \\n  \\n3.  Create a new <xref:System.ComponentModel.Design.MenuCommand> and specify your event handler in the constructor, along with a <xref:System.ComponentModel.Design.CommandID> representing the command to add. Each standard menu command is associated with a predefined menu location where it is added to. The supported command IDs are defined in the <xref:System.ComponentModel.Design.StandardCommands> and <xref:System.Windows.Forms.Design.MenuCommands> enumerations.  \\n  \\n4.  If you want to invoke any preexisting event handler for the menu command, call the <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method of the menu command you have replaced on the menu from the event handler that handles the invoke event of your menu command.  \\n  \\n5.  If you are interested in restoring the event handler of a preexisting menu command that you have replaced, add the stored, preexisting menu command after you remove the replacement menu command you created. You may want to add this behavior to the `Dispose` method for your type.\"\n  syntax:\n    content: public void AddCommand (System.ComponentModel.Design.MenuCommand command);\n    parameters:\n    - id: command\n      type: System.ComponentModel.Design.MenuCommand\n      description: The <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> to add.\n  overload: System.ComponentModel.Design.IMenuCommandService.AddCommand*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.ComponentModel.Design.CommandID\"></xref> of the specified <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> is already present on a menu.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)\n  id: AddVerb(System.ComponentModel.Design.DesignerVerb)\n  parent: System.ComponentModel.Design.IMenuCommandService\n  langs:\n  - csharp\n  name: AddVerb(DesignerVerb)\n  nameWithType: IMenuCommandService.AddVerb(DesignerVerb)\n  fullName: System.ComponentModel.Design.IMenuCommandService.AddVerb(DesignerVerb)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Adds the specified designer verb to the set of global designer verbs.\n  remarks: Designers of components that provide designer verbs should use the <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property of their designer rather than calling this method. This method adds a global designer verb that can be accessed from the right-click shortcut menu in design mode regardless of the currently selected component.\n  syntax:\n    content: public void AddVerb (System.ComponentModel.Design.DesignerVerb verb);\n    parameters:\n    - id: verb\n      type: System.ComponentModel.Design.DesignerVerb\n      description: The <xref href=\"System.ComponentModel.Design.DesignerVerb\"></xref> to add.\n  overload: System.ComponentModel.Design.IMenuCommandService.AddVerb*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)\n  id: FindCommand(System.ComponentModel.Design.CommandID)\n  parent: System.ComponentModel.Design.IMenuCommandService\n  langs:\n  - csharp\n  name: FindCommand(CommandID)\n  nameWithType: IMenuCommandService.FindCommand(CommandID)\n  fullName: System.ComponentModel.Design.IMenuCommandService.FindCommand(CommandID)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Searches for the specified command ID and returns the menu command associated with it.\n  syntax:\n    content: public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);\n    parameters:\n    - id: commandID\n      type: System.ComponentModel.Design.CommandID\n      description: The <xref href=\"System.ComponentModel.Design.CommandID\"></xref> to search for.\n    return:\n      type: System.ComponentModel.Design.MenuCommand\n      description: The <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> associated with the command ID, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no command is found.\n  overload: System.ComponentModel.Design.IMenuCommandService.FindCommand*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)\n  id: GlobalInvoke(System.ComponentModel.Design.CommandID)\n  parent: System.ComponentModel.Design.IMenuCommandService\n  langs:\n  - csharp\n  name: GlobalInvoke(CommandID)\n  nameWithType: IMenuCommandService.GlobalInvoke(CommandID)\n  fullName: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(CommandID)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Invokes a menu or designer verb command matching the specified command ID.\n  remarks: This method searches for a menu command or designer verb with a <xref:System.ComponentModel.Design.CommandID> matching the specified <xref:System.ComponentModel.Design.CommandID>. This method first searches within the designer verbs collection consisting of global and active designer-provided verbs before continuing the search, if necessary, through the global environment command service. If a matching menu command or designer verb is located, the command is invoked.\n  syntax:\n    content: public bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);\n    parameters:\n    - id: commandID\n      type: System.ComponentModel.Design.CommandID\n      description: The <xref href=\"System.ComponentModel.Design.CommandID\"></xref> of the command to search for and execute.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the command was found and invoked successfully; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)\n  id: RemoveCommand(System.ComponentModel.Design.MenuCommand)\n  parent: System.ComponentModel.Design.IMenuCommandService\n  langs:\n  - csharp\n  name: RemoveCommand(MenuCommand)\n  nameWithType: IMenuCommandService.RemoveCommand(MenuCommand)\n  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(MenuCommand)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Removes the specified standard menu command from the menu.\n  remarks: This method removes the specified <xref:System.ComponentModel.Design.MenuCommand> if it is found. This method does not raise an exception or return a value if the specified <xref:System.ComponentModel.Design.MenuCommand> is not found. Use the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method to determine whether a <xref:System.ComponentModel.Design.MenuCommand> matching a specified <xref:System.ComponentModel.Design.CommandID> is located on a menu.\n  syntax:\n    content: public void RemoveCommand (System.ComponentModel.Design.MenuCommand command);\n    parameters:\n    - id: command\n      type: System.ComponentModel.Design.MenuCommand\n      description: The <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> to remove.\n  overload: System.ComponentModel.Design.IMenuCommandService.RemoveCommand*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)\n  id: RemoveVerb(System.ComponentModel.Design.DesignerVerb)\n  parent: System.ComponentModel.Design.IMenuCommandService\n  langs:\n  - csharp\n  name: RemoveVerb(DesignerVerb)\n  nameWithType: IMenuCommandService.RemoveVerb(DesignerVerb)\n  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(DesignerVerb)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Removes the specified designer verb from the collection of global designer verbs.\n  remarks: This method removes the specified global designer verb if it is within the global designer verbs collection. You can add a designer verb to the global designer verbs collection using the <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> method.\n  syntax:\n    content: public void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);\n    parameters:\n    - id: verb\n      type: System.ComponentModel.Design.DesignerVerb\n      description: The <xref href=\"System.ComponentModel.Design.DesignerVerb\"></xref> to remove.\n  overload: System.ComponentModel.Design.IMenuCommandService.RemoveVerb*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)\n  id: ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)\n  parent: System.ComponentModel.Design.IMenuCommandService\n  langs:\n  - csharp\n  name: ShowContextMenu(CommandID,Int32,Int32)\n  nameWithType: IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)\n  fullName: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Shows the specified shortcut menu at the specified location.\n  remarks: \"The ShowContextMenu method can display any of the following Visual Studio shortcut menus containing menu commands at a specified point:  \\n  \\n|Menu|CommandID|  \\n|----------|---------------|  \\n|The shortcut menu displayed for a container|<xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>|  \\n|The shortcut menu displayed for the component tray|<xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu>|  \\n|The shortcut menu displayed for a selection|<xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu>|  \\n|The shortcut menu displayed for a tray selection|<xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu>|  \\n  \\n This method can also display other registered shortcut menus.\"\n  syntax:\n    content: public void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);\n    parameters:\n    - id: menuID\n      type: System.ComponentModel.Design.CommandID\n      description: The <xref href=\"System.ComponentModel.Design.CommandID\"></xref> for the shortcut menu to show.\n    - id: x\n      type: System.Int32\n      description: The x-coordinate at which to display the menu, in screen coordinates.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate at which to display the menu, in screen coordinates.\n  overload: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IMenuCommandService.Verbs\n  id: Verbs\n  parent: System.ComponentModel.Design.IMenuCommandService\n  langs:\n  - csharp\n  name: Verbs\n  nameWithType: IMenuCommandService.Verbs\n  fullName: System.ComponentModel.Design.IMenuCommandService.Verbs\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets a collection of the designer verbs that are currently available.\n  remarks: The set of currently available designer verbs consists of all global designer verbs, which are added by the <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> method on this interface, and individual designer verbs, which are offered by the <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property of individual designers. If the name of a global verb conflicts with the name of a designer verb, the designer-provided designer verb takes precedence.\n  syntax:\n    content: public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }\n    return:\n      type: System.ComponentModel.Design.DesignerVerbCollection\n      description: A <xref href=\"System.ComponentModel.Design.DesignerVerbCollection\"></xref> that contains the designer verbs that are currently available.\n  overload: System.ComponentModel.Design.IMenuCommandService.Verbs*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)\n  parent: System.ComponentModel.Design.IMenuCommandService\n  isExternal: false\n  name: AddCommand(MenuCommand)\n  nameWithType: IMenuCommandService.AddCommand(MenuCommand)\n  fullName: System.ComponentModel.Design.IMenuCommandService.AddCommand(MenuCommand)\n- uid: System.ComponentModel.Design.MenuCommand\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: MenuCommand\n  nameWithType: MenuCommand\n  fullName: System.ComponentModel.Design.MenuCommand\n- uid: System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)\n  parent: System.ComponentModel.Design.IMenuCommandService\n  isExternal: false\n  name: AddVerb(DesignerVerb)\n  nameWithType: IMenuCommandService.AddVerb(DesignerVerb)\n  fullName: System.ComponentModel.Design.IMenuCommandService.AddVerb(DesignerVerb)\n- uid: System.ComponentModel.Design.DesignerVerb\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: DesignerVerb\n  nameWithType: DesignerVerb\n  fullName: System.ComponentModel.Design.DesignerVerb\n- uid: System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)\n  parent: System.ComponentModel.Design.IMenuCommandService\n  isExternal: false\n  name: FindCommand(CommandID)\n  nameWithType: IMenuCommandService.FindCommand(CommandID)\n  fullName: System.ComponentModel.Design.IMenuCommandService.FindCommand(CommandID)\n- uid: System.ComponentModel.Design.CommandID\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: CommandID\n  nameWithType: CommandID\n  fullName: System.ComponentModel.Design.CommandID\n- uid: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)\n  parent: System.ComponentModel.Design.IMenuCommandService\n  isExternal: false\n  name: GlobalInvoke(CommandID)\n  nameWithType: IMenuCommandService.GlobalInvoke(CommandID)\n  fullName: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(CommandID)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)\n  parent: System.ComponentModel.Design.IMenuCommandService\n  isExternal: false\n  name: RemoveCommand(MenuCommand)\n  nameWithType: IMenuCommandService.RemoveCommand(MenuCommand)\n  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(MenuCommand)\n- uid: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)\n  parent: System.ComponentModel.Design.IMenuCommandService\n  isExternal: false\n  name: RemoveVerb(DesignerVerb)\n  nameWithType: IMenuCommandService.RemoveVerb(DesignerVerb)\n  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(DesignerVerb)\n- uid: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)\n  parent: System.ComponentModel.Design.IMenuCommandService\n  isExternal: false\n  name: ShowContextMenu(CommandID,Int32,Int32)\n  nameWithType: IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)\n  fullName: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.Design.IMenuCommandService.Verbs\n  parent: System.ComponentModel.Design.IMenuCommandService\n  isExternal: false\n  name: Verbs\n  nameWithType: IMenuCommandService.Verbs\n  fullName: System.ComponentModel.Design.IMenuCommandService.Verbs\n- uid: System.ComponentModel.Design.DesignerVerbCollection\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: DesignerVerbCollection\n  nameWithType: DesignerVerbCollection\n  fullName: System.ComponentModel.Design.DesignerVerbCollection\n- uid: System.ComponentModel.Design.IMenuCommandService.AddCommand*\n  parent: System.ComponentModel.Design.IMenuCommandService\n  isExternal: false\n  name: AddCommand\n  nameWithType: IMenuCommandService.AddCommand\n- uid: System.ComponentModel.Design.IMenuCommandService.AddVerb*\n  parent: System.ComponentModel.Design.IMenuCommandService\n  isExternal: false\n  name: AddVerb\n  nameWithType: IMenuCommandService.AddVerb\n- uid: System.ComponentModel.Design.IMenuCommandService.FindCommand*\n  parent: System.ComponentModel.Design.IMenuCommandService\n  isExternal: false\n  name: FindCommand\n  nameWithType: IMenuCommandService.FindCommand\n- uid: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke*\n  parent: System.ComponentModel.Design.IMenuCommandService\n  isExternal: false\n  name: GlobalInvoke\n  nameWithType: IMenuCommandService.GlobalInvoke\n- uid: System.ComponentModel.Design.IMenuCommandService.RemoveCommand*\n  parent: System.ComponentModel.Design.IMenuCommandService\n  isExternal: false\n  name: RemoveCommand\n  nameWithType: IMenuCommandService.RemoveCommand\n- uid: System.ComponentModel.Design.IMenuCommandService.RemoveVerb*\n  parent: System.ComponentModel.Design.IMenuCommandService\n  isExternal: false\n  name: RemoveVerb\n  nameWithType: IMenuCommandService.RemoveVerb\n- uid: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu*\n  parent: System.ComponentModel.Design.IMenuCommandService\n  isExternal: false\n  name: ShowContextMenu\n  nameWithType: IMenuCommandService.ShowContextMenu\n- uid: System.ComponentModel.Design.IMenuCommandService.Verbs*\n  parent: System.ComponentModel.Design.IMenuCommandService\n  isExternal: false\n  name: Verbs\n  nameWithType: IMenuCommandService.Verbs\n"}