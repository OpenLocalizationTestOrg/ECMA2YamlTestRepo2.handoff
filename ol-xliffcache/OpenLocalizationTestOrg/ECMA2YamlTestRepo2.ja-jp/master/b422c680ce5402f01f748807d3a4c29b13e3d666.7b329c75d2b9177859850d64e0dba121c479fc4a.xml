{"nodes":[{"pos":[799,860],"content":"Provides filtering functionality for a property editing host.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides filtering functionality for a property editing host.","pos":[0,61]}]},{"pos":[872,993],"content":"Contains a list of strings, called <bpt id=\"p1\">*</bpt>predicates<ept id=\"p1\">*</ept>, that are compared against a target property name until a match is found.","needQuote":true,"needEscape":true,"source":"Contains a list of strings, called *predicates*, that are compared against a target property name until a match is found."},{"pos":[1958,2224],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that includes an enumeration of filtering strings, called <bpt id=\"p2\">*</bpt>predicates<ept id=\"p2\">*</ept>, that can be compared against a target property name until a match is found.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"></xref> class that includes an enumeration of filtering strings, called *predicates*, that can be compared against a target property name until a match is found."},{"pos":[2574,2664],"content":"An <xref:System.Collections.IEnumerable> list of predicates, or strings used for matching.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerable&gt; list of predicates, or strings used for matching.","pos":[0,90],"source":"An <xref:System.Collections.IEnumerable> list of predicates, or strings used for matching."}]},{"pos":[3319,3634],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that includes a &lt;xref:System.String&gt; that contains a space-delimited sequence of filtering phrases, called <bpt id=\"p2\">*</bpt>predicates<ept id=\"p2\">*</ept>, that can be compared against a target property name until a match is found.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"></xref> class that includes a <xref:System.String> that contains a space-delimited sequence of filtering phrases, called *predicates*, that can be compared against a target property name until a match is found."},{"pos":[3783,3870],"content":"A <xref:System.String> that contains space-delimited predicates for property filtering.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains space-delimited predicates for property filtering.","pos":[0,87],"source":"A <xref:System.String> that contains space-delimited predicates for property filtering."}]},{"pos":[4449,4598],"content":"Read-only property that indicates whether this <xref:System.Activities.Design.PropertyEditing.PropertyFilter> does not have any filtering predicates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Read-only property that indicates whether this &lt;xref:System.Activities.Design.PropertyEditing.PropertyFilter&gt; does not have any filtering predicates.","pos":[0,149],"source":"Read-only property that indicates whether this <xref:System.Activities.Design.PropertyEditing.PropertyFilter> does not have any filtering predicates."}]},{"pos":[4709,4870],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if predicates are absent; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if predicates are absent; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5648,5987],"content":"Matches the predicate strings of the current filtering object against the specified target property name and returns a Boolean that indicates whether one or more of the predicate strings matches the target name or whether this <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> does not have any predicates.","needQuote":true,"needEscape":true,"source":"Matches the predicate strings of the current filtering object against the specified target property name and returns a Boolean that indicates whether one or more of the predicate strings matches the target name or whether this <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"></xref> does not have any predicates."},{"pos":[6241,6340],"content":"The name of the property that the current filter will be compared against when looking for a match.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property that the current filter will be compared against when looking for a match.","pos":[0,99]}]},{"pos":[6399,6618],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is a filter/target match or if there is nothing to use for the comparison; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there is a filter/target match or if there is nothing to use for the comparison; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter\n  id: PropertyFilter\n  children:\n  - System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate})\n  - System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.String)\n  - System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty\n  - System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget)\n  langs:\n  - csharp\n  name: PropertyFilter\n  nameWithType: PropertyFilter\n  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter\n  type: Class\n  summary: Provides filtering functionality for a property editing host.\n  remarks: Contains a list of strings, called *predicates*, that are compared against a target property name until a match is found.\n  syntax:\n    content: public class PropertyFilter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate})'\n  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter\n  langs:\n  - csharp\n  name: PropertyFilter(IEnumerable<PropertyFilterPredicate>)\n  nameWithType: PropertyFilter.PropertyFilter(IEnumerable<PropertyFilterPredicate>)\n  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.PropertyFilter(IEnumerable<PropertyFilterPredicate>)\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.PropertyEditing\n  summary: Creates a new instance of the <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"></xref> class that includes an enumeration of filtering strings, called *predicates*, that can be compared against a target property name until a match is found.\n  syntax:\n    content: public PropertyFilter (System.Collections.Generic.IEnumerable<System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate> predicates);\n    parameters:\n    - id: predicates\n      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate}\n      description: An <xref:System.Collections.IEnumerable> list of predicates, or strings used for matching.\n  overload: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter\n  langs:\n  - csharp\n  name: PropertyFilter(String)\n  nameWithType: PropertyFilter.PropertyFilter(String)\n  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.PropertyFilter(String)\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.PropertyEditing\n  summary: Creates a new instance of the <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"></xref> class that includes a <xref:System.String> that contains a space-delimited sequence of filtering phrases, called *predicates*, that can be compared against a target property name until a match is found.\n  syntax:\n    content: public PropertyFilter (string filterText);\n    parameters:\n    - id: filterText\n      type: System.String\n      description: A <xref:System.String> that contains space-delimited predicates for property filtering.\n  overload: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty\n  id: IsEmpty\n  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter\n  langs:\n  - csharp\n  name: IsEmpty\n  nameWithType: PropertyFilter.IsEmpty\n  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.PropertyEditing\n  summary: Read-only property that indicates whether this <xref:System.Activities.Design.PropertyEditing.PropertyFilter> does not have any filtering predicates.\n  syntax:\n    content: public bool IsEmpty { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if predicates are absent; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget)\n  id: Match(System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget)\n  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter\n  langs:\n  - csharp\n  name: Match(IPropertyFilterTarget)\n  nameWithType: PropertyFilter.Match(IPropertyFilterTarget)\n  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(IPropertyFilterTarget)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.PropertyEditing\n  summary: Matches the predicate strings of the current filtering object against the specified target property name and returns a Boolean that indicates whether one or more of the predicate strings matches the target name or whether this <xref href=\"System.Activities.Presentation.PropertyEditing.PropertyFilter\"></xref> does not have any predicates.\n  syntax:\n    content: public bool Match (System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget target);\n    parameters:\n    - id: target\n      type: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\n      description: The name of the property that the current filter will be compared against when looking for a match.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there is a filter/target match or if there is nothing to use for the comparison; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate})\n  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter\n  isExternal: false\n  name: PropertyFilter(IEnumerable<PropertyFilterPredicate>)\n  nameWithType: PropertyFilter.PropertyFilter(IEnumerable<PropertyFilterPredicate>)\n  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.PropertyFilter(IEnumerable<PropertyFilterPredicate>)\n- uid: System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<PropertyFilterPredicate>\n  nameWithType: IEnumerable<PropertyFilterPredicate>\n  fullName: System.Collections.Generic.IEnumerable<System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate\n    name: PropertyFilterPredicate\n    nameWithType: PropertyFilterPredicate\n    fullName: PropertyFilterPredicate\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.String)\n  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter\n  isExternal: false\n  name: PropertyFilter(String)\n  nameWithType: PropertyFilter.PropertyFilter(String)\n  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.PropertyFilter(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty\n  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter\n  isExternal: false\n  name: IsEmpty\n  nameWithType: PropertyFilter.IsEmpty\n  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget)\n  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter\n  isExternal: false\n  name: Match(IPropertyFilterTarget)\n  nameWithType: PropertyFilter.Match(IPropertyFilterTarget)\n  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(IPropertyFilterTarget)\n- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\n  parent: System.Activities.Presentation.PropertyEditing\n  isExternal: false\n  name: IPropertyFilterTarget\n  nameWithType: IPropertyFilterTarget\n  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget\n- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor*\n  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter\n  isExternal: false\n  name: PropertyFilter\n  nameWithType: PropertyFilter.PropertyFilter\n- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty*\n  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter\n  isExternal: false\n  name: IsEmpty\n  nameWithType: PropertyFilter.IsEmpty\n- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match*\n  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter\n  isExternal: false\n  name: Match\n  nameWithType: PropertyFilter.Match\n"}