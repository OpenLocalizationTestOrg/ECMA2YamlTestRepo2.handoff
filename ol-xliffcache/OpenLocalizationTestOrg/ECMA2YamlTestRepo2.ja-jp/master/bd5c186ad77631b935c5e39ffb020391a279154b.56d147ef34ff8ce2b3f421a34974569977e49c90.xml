{"nodes":[{"pos":[928,962],"content":"Provides a container for services.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a container for services.","pos":[0,34]}]},{"pos":[975,2150],"content":"A service container is, by definition, a service provider. In addition to providing services, it also provides a mechanism for adding and removing services. Services are a foundation of the .NET Framework design-time architecture. Services provide design-time objects access to specific features and methods implemented by a service object that provides a service or services.       To obtain a service at design time, call the <xref:System.ComponentModel.Component.GetService%2A> method of a component sited in design mode. Designers and other objects can add or remove services at design time through the <xref:System.ComponentModel.Design.IDesignerHost> interface.       Service containers can be contained by other service containers, forming a tree of service containers. By default, the IServiceContainer interface adds services to the closest service container. When a service is added, it can be added with instructions to promote it. When a service is promoted, it is added to any parent service container, on up until the top of the service container tree is reached. This allows a designer to provide a global service that other objects in the process can use.","needQuote":false,"needEscape":true,"nodes":[{"content":"A service container is, by definition, a service provider. In addition to providing services, it also provides a mechanism for adding and removing services. Services are a foundation of the .NET Framework design-time architecture. Services provide design-time objects access to specific features and methods implemented by a service object that provides a service or services.       To obtain a service at design time, call the <xref:System.ComponentModel.Component.GetService%2A> method of a component sited in design mode. Designers and other objects can add or remove services at design time through the <xref:System.ComponentModel.Design.IDesignerHost> interface.       Service containers can be contained by other service containers, forming a tree of service containers. By default, the IServiceContainer interface adds services to the closest service container. When a service is added, it can be added with instructions to promote it. When a service is promoted, it is added to any parent service container, on up until the top of the service container tree is reached. This allows a designer to provide a global service that other objects in the process can use.","pos":[0,1171],"nodes":[{"content":"A service container is, by definition, a service provider.","pos":[0,58]},{"content":"In addition to providing services, it also provides a mechanism for adding and removing services.","pos":[59,156]},{"content":"Services are a foundation of the .NET Framework design-time architecture.","pos":[157,230]},{"content":"Services provide design-time objects access to specific features and methods implemented by a service object that provides a service or services.","pos":[231,376]},{"content":"To obtain a service at design time, call the &lt;xref:System.ComponentModel.Component.GetService%2A&gt; method of a component sited in design mode.","pos":[383,524],"source":"       To obtain a service at design time, call the <xref:System.ComponentModel.Component.GetService%2A> method of a component sited in design mode."},{"content":"Designers and other objects can add or remove services at design time through the &lt;xref:System.ComponentModel.Design.IDesignerHost&gt; interface.","pos":[525,667],"source":" Designers and other objects can add or remove services at design time through the <xref:System.ComponentModel.Design.IDesignerHost> interface."},{"content":"Service containers can be contained by other service containers, forming a tree of service containers.","pos":[674,776]},{"content":"By default, the IServiceContainer interface adds services to the closest service container.","pos":[777,868]},{"content":"When a service is added, it can be added with instructions to promote it.","pos":[869,942]},{"content":"When a service is promoted, it is added to any parent service container, on up until the top of the service container tree is reached.","pos":[943,1077]},{"content":"This allows a designer to provide a global service that other objects in the process can use.","pos":[1078,1171]}]}]},{"pos":[3467,3519],"content":"Adds the specified service to the service container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified service to the service container.","pos":[0,52]}]},{"pos":[4174,4201],"content":"The type of service to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of service to add.","pos":[0,27]}]},{"pos":[4304,4478],"content":"A callback object that is used to create the service. This allows a service to be declared as available, but delays the creation of the object until the service is requested.","needQuote":true,"needEscape":true,"nodes":[{"content":"A callback object that is used to create the service. This allows a service to be declared as available, but delays the creation of the object until the service is requested.","pos":[0,174],"nodes":[{"content":"A callback object that is used to create the service.","pos":[0,53]},{"content":"This allows a service to be declared as available, but delays the creation of the object until the service is requested.","pos":[54,174]}]}]},{"pos":[5069,5121],"content":"Adds the specified service to the service container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified service to the service container.","pos":[0,52]}]},{"pos":[5738,5765],"content":"The type of service to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of service to add.","pos":[0,27]}]},{"pos":[5837,5970],"content":"An instance of the service type to add. This object must implement or inherit from the type indicated by the `serviceType` parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the service type to add.","pos":[0,39]},{"content":"This object must implement or inherit from the type indicated by the <ph id=\"ph1\">`serviceType`</ph> parameter.","pos":[40,133],"source":" This object must implement or inherit from the type indicated by the `serviceType` parameter."}]},{"pos":[6739,6857],"content":"Adds the specified service to the service container, and optionally promotes the service to parent service containers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified service to the service container, and optionally promotes the service to parent service containers.","pos":[0,118]}]},{"pos":[7081,7108],"content":"The type of service to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of service to add.","pos":[0,27]}]},{"pos":[7211,7385],"content":"A callback object that is used to create the service. This allows a service to be declared as available, but delays the creation of the object until the service is requested.","needQuote":true,"needEscape":true,"nodes":[{"content":"A callback object that is used to create the service. This allows a service to be declared as available, but delays the creation of the object until the service is requested.","pos":[0,174],"nodes":[{"content":"A callback object that is used to create the service.","pos":[0,53]},{"content":"This allows a service to be declared as available, but delays the creation of the object until the service is requested.","pos":[54,174]}]}]},{"pos":[7450,7643],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to promote this request to any parent service containers; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to promote this request to any parent service containers; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8288,8410],"content":"Adds the specified service to the service container, and optionally promotes the service to any parent service containers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified service to the service container, and optionally promotes the service to any parent service containers.","pos":[0,122]}]},{"pos":[8596,8623],"content":"The type of service to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of service to add.","pos":[0,27]}]},{"pos":[8695,8828],"content":"An instance of the service type to add. This object must implement or inherit from the type indicated by the `serviceType` parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the service type to add.","pos":[0,39]},{"content":"This object must implement or inherit from the type indicated by the <ph id=\"ph1\">`serviceType`</ph> parameter.","pos":[40,133],"source":" This object must implement or inherit from the type indicated by the `serviceType` parameter."}]},{"pos":[8893,9086],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to promote this request to any parent service containers; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to promote this request to any parent service containers; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9643,9705],"content":"Removes the specified service type from the service container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified service type from the service container.","pos":[0,62]}]},{"pos":[10316,10346],"content":"The type of service to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of service to remove.","pos":[0,30]}]},{"pos":[10960,11088],"content":"Removes the specified service type from the service container, and optionally promotes the service to parent service containers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified service type from the service container, and optionally promotes the service to parent service containers.","pos":[0,128]}]},{"pos":[11704,11734],"content":"The type of service to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of service to remove.","pos":[0,30]}]},{"pos":[11799,11992],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to promote this request to any parent service containers; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to promote this request to any parent service containers; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.IServiceContainer\n  id: IServiceContainer\n  children:\n  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)\n  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)\n  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)\n  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)\n  - System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)\n  - System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)\n  langs:\n  - csharp\n  name: IServiceContainer\n  nameWithType: IServiceContainer\n  fullName: System.ComponentModel.Design.IServiceContainer\n  type: Interface\n  summary: Provides a container for services.\n  remarks: \"A service container is, by definition, a service provider. In addition to providing services, it also provides a mechanism for adding and removing services. Services are a foundation of the .NET Framework design-time architecture. Services provide design-time objects access to specific features and methods implemented by a service object that provides a service or services.  \\n  \\n To obtain a service at design time, call the <xref:System.ComponentModel.Component.GetService%2A> method of a component sited in design mode. Designers and other objects can add or remove services at design time through the <xref:System.ComponentModel.Design.IDesignerHost> interface.  \\n  \\n Service containers can be contained by other service containers, forming a tree of service containers. By default, the IServiceContainer interface adds services to the closest service container. When a service is added, it can be added with instructions to promote it. When a service is promoted, it is added to any parent service container, on up until the top of the service container tree is reached. This allows a designer to provide a global service that other objects in the process can use.\"\n  example:\n  - \"The following code example contains the code for a <xref:System.Windows.Forms.Form> that is configured to demonstrate the behavior of a network of linked service containers.  \\n  \\n [!code-cs[IServiceContainerExample#1](~/add/codesnippet/csharp/t-system.componentmodel._108_1.cs)]\\n [!code-cpp[IServiceContainerExample#1](~/add/codesnippet/cpp/t-system.componentmodel._108_1.cpp)]\\n [!code-vb[IServiceContainerExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._108_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IServiceContainer : IServiceProvider\n  implements:\n  - System.IServiceProvider\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)\n  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)\n  parent: System.ComponentModel.Design.IServiceContainer\n  langs:\n  - csharp\n  name: AddService(Type,ServiceCreatorCallback)\n  nameWithType: IServiceContainer.AddService(Type,ServiceCreatorCallback)\n  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,ServiceCreatorCallback)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Adds the specified service to the service container.\n  remarks: ''\n  example:\n  - \"The following example illustrates how to add a service to an <xref:System.ComponentModel.Design.IServiceContainer>.  \\n  \\n [!code-cs[ServiceContainerExample#3](~/add/codesnippet/csharp/4abfcb9d-94a0-4da6-9ce0-_1.cs)]\\n [!code-vb[ServiceContainerExample#3](~/add/codesnippet/visualbasic/4abfcb9d-94a0-4da6-9ce0-_1.vb)]\\n [!code-cpp[ServiceContainerExample#3](~/add/codesnippet/cpp/4abfcb9d-94a0-4da6-9ce0-_1.cpp)]\"\n  syntax:\n    content: public void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to add.\n    - id: callback\n      type: System.ComponentModel.Design.ServiceCreatorCallback\n      description: A callback object that is used to create the service. This allows a service to be declared as available, but delays the creation of the object until the service is requested.\n  overload: System.ComponentModel.Design.IServiceContainer.AddService*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)\n  id: AddService(System.Type,System.Object)\n  parent: System.ComponentModel.Design.IServiceContainer\n  langs:\n  - csharp\n  name: AddService(Type,Object)\n  nameWithType: IServiceContainer.AddService(Type,Object)\n  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Adds the specified service to the service container.\n  remarks: ''\n  example:\n  - \"The following example illustrates how to add a service to an <xref:System.ComponentModel.Design.IServiceContainer>.  \\n  \\n [!code-cs[ServiceContainerExample#2](~/add/codesnippet/csharp/78041303-5e2c-4bbb-9d48-_1.cs)]\\n [!code-vb[ServiceContainerExample#2](~/add/codesnippet/visualbasic/78041303-5e2c-4bbb-9d48-_1.vb)]\\n [!code-cpp[ServiceContainerExample#2](~/add/codesnippet/cpp/78041303-5e2c-4bbb-9d48-_1.cpp)]\"\n  syntax:\n    content: public void AddService (Type serviceType, object serviceInstance);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to add.\n    - id: serviceInstance\n      type: System.Object\n      description: An instance of the service type to add. This object must implement or inherit from the type indicated by the `serviceType` parameter.\n  overload: System.ComponentModel.Design.IServiceContainer.AddService*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)\n  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)\n  parent: System.ComponentModel.Design.IServiceContainer\n  langs:\n  - csharp\n  name: AddService(Type,ServiceCreatorCallback,Boolean)\n  nameWithType: IServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)\n  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Adds the specified service to the service container, and optionally promotes the service to parent service containers.\n  syntax:\n    content: public void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback, bool promote);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to add.\n    - id: callback\n      type: System.ComponentModel.Design.ServiceCreatorCallback\n      description: A callback object that is used to create the service. This allows a service to be declared as available, but delays the creation of the object until the service is requested.\n    - id: promote\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to promote this request to any parent service containers; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.IServiceContainer.AddService*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)\n  id: AddService(System.Type,System.Object,System.Boolean)\n  parent: System.ComponentModel.Design.IServiceContainer\n  langs:\n  - csharp\n  name: AddService(Type,Object,Boolean)\n  nameWithType: IServiceContainer.AddService(Type,Object,Boolean)\n  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,Object,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Adds the specified service to the service container, and optionally promotes the service to any parent service containers.\n  syntax:\n    content: public void AddService (Type serviceType, object serviceInstance, bool promote);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to add.\n    - id: serviceInstance\n      type: System.Object\n      description: An instance of the service type to add. This object must implement or inherit from the type indicated by the `serviceType` parameter.\n    - id: promote\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to promote this request to any parent service containers; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.IServiceContainer.AddService*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)\n  id: RemoveService(System.Type)\n  parent: System.ComponentModel.Design.IServiceContainer\n  langs:\n  - csharp\n  name: RemoveService(Type)\n  nameWithType: IServiceContainer.RemoveService(Type)\n  fullName: System.ComponentModel.Design.IServiceContainer.RemoveService(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Removes the specified service type from the service container.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to remove a service from an <xref:System.ComponentModel.Design.IServiceContainer>.  \\n  \\n [!code-cs[ServiceContainerExample#4](~/add/codesnippet/csharp/m-system.componentmodel._36_1.cs)]\\n [!code-vb[ServiceContainerExample#4](~/add/codesnippet/visualbasic/m-system.componentmodel._36_1.vb)]\\n [!code-cpp[ServiceContainerExample#4](~/add/codesnippet/cpp/m-system.componentmodel._36_1.cpp)]\"\n  syntax:\n    content: public void RemoveService (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to remove.\n  overload: System.ComponentModel.Design.IServiceContainer.RemoveService*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)\n  id: RemoveService(System.Type,System.Boolean)\n  parent: System.ComponentModel.Design.IServiceContainer\n  langs:\n  - csharp\n  name: RemoveService(Type,Boolean)\n  nameWithType: IServiceContainer.RemoveService(Type,Boolean)\n  fullName: System.ComponentModel.Design.IServiceContainer.RemoveService(Type,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Removes the specified service type from the service container, and optionally promotes the service to parent service containers.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to remove a service from an <xref:System.ComponentModel.Design.IServiceContainer>.  \\n  \\n [!code-cs[ServiceContainerExample#4](~/add/codesnippet/csharp/1ae84a0c-9fec-44a0-ac5a-_1.cs)]\\n [!code-vb[ServiceContainerExample#4](~/add/codesnippet/visualbasic/1ae84a0c-9fec-44a0-ac5a-_1.vb)]\\n [!code-cpp[ServiceContainerExample#4](~/add/codesnippet/cpp/1ae84a0c-9fec-44a0-ac5a-_1.cpp)]\"\n  syntax:\n    content: public void RemoveService (Type serviceType, bool promote);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to remove.\n    - id: promote\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to promote this request to any parent service containers; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.IServiceContainer.RemoveService*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)\n  parent: System.ComponentModel.Design.IServiceContainer\n  isExternal: false\n  name: AddService(Type,ServiceCreatorCallback)\n  nameWithType: IServiceContainer.AddService(Type,ServiceCreatorCallback)\n  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,ServiceCreatorCallback)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Design.ServiceCreatorCallback\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: ServiceCreatorCallback\n  nameWithType: ServiceCreatorCallback\n  fullName: System.ComponentModel.Design.ServiceCreatorCallback\n- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)\n  parent: System.ComponentModel.Design.IServiceContainer\n  isExternal: false\n  name: AddService(Type,Object)\n  nameWithType: IServiceContainer.AddService(Type,Object)\n  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)\n  parent: System.ComponentModel.Design.IServiceContainer\n  isExternal: false\n  name: AddService(Type,ServiceCreatorCallback,Boolean)\n  nameWithType: IServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)\n  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)\n  parent: System.ComponentModel.Design.IServiceContainer\n  isExternal: false\n  name: AddService(Type,Object,Boolean)\n  nameWithType: IServiceContainer.AddService(Type,Object,Boolean)\n  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,Object,Boolean)\n- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)\n  parent: System.ComponentModel.Design.IServiceContainer\n  isExternal: false\n  name: RemoveService(Type)\n  nameWithType: IServiceContainer.RemoveService(Type)\n  fullName: System.ComponentModel.Design.IServiceContainer.RemoveService(Type)\n- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)\n  parent: System.ComponentModel.Design.IServiceContainer\n  isExternal: false\n  name: RemoveService(Type,Boolean)\n  nameWithType: IServiceContainer.RemoveService(Type,Boolean)\n  fullName: System.ComponentModel.Design.IServiceContainer.RemoveService(Type,Boolean)\n- uid: System.ComponentModel.Design.IServiceContainer.AddService*\n  parent: System.ComponentModel.Design.IServiceContainer\n  isExternal: false\n  name: AddService\n  nameWithType: IServiceContainer.AddService\n- uid: System.ComponentModel.Design.IServiceContainer.RemoveService*\n  parent: System.ComponentModel.Design.IServiceContainer\n  isExternal: false\n  name: RemoveService\n  nameWithType: IServiceContainer.RemoveService\n"}