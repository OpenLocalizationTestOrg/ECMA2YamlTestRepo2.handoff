{"nodes":[{"pos":[3080,3104],"content":"Represents a 3x2 matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a 3x2 matrix.","pos":[0,24]}]},{"pos":[3920,3971],"content":"Creates a 3x2 matrix from the specified components.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a 3x2 matrix from the specified components.","pos":[0,51]}]},{"pos":[4155,4213],"content":"The value to assign to the first element in the first row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to assign to the first element in the first row.","pos":[0,58]}]},{"pos":[4273,4332],"content":"The value to assign to the second element in the first row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to assign to the second element in the first row.","pos":[0,59]}]},{"pos":[4392,4451],"content":"The value to assign to the first element in the second row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to assign to the first element in the second row.","pos":[0,59]}]},{"pos":[4511,4571],"content":"The value to assign to the second element in the second row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to assign to the second element in the second row.","pos":[0,60]}]},{"pos":[4631,4689],"content":"The value to assign to the first element in the third row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to assign to the first element in the third row.","pos":[0,58]}]},{"pos":[4749,4808],"content":"The value to assign to the second element in the third row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to assign to the second element in the third row.","pos":[0,59]}]},{"pos":[5339,5421],"content":"Adds each element in one matrix with its corresponding element in a second matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds each element in one matrix with its corresponding element in a second matrix.","pos":[0,82]}]},{"pos":[5649,5666],"content":"The first matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first matrix.","pos":[0,17]}]},{"pos":[5741,5759],"content":"The second matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second matrix.","pos":[0,18]}]},{"pos":[5829,5919],"content":"The matrix that contains the summed values of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The matrix that contains the summed values of <code>value1</code> and <code>value2</code>."},{"pos":[6388,6450],"content":"Creates a rotation matrix using the given rotation in radians.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a rotation matrix using the given rotation in radians.","pos":[0,62]}]},{"pos":[6625,6660],"content":"The amount of rotation, in radians.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount of rotation, in radians.","pos":[0,35]}]},{"pos":[6730,6750],"content":"The rotation matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rotation matrix.","pos":[0,20]}]},{"pos":[7302,7387],"content":"Creates a rotation matrix using the specified rotation in radians and a center point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a rotation matrix using the specified rotation in radians and a center point.","pos":[0,85]}]},{"pos":[7599,7634],"content":"The amount of rotation, in radians.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount of rotation, in radians.","pos":[0,35]}]},{"pos":[7712,7729],"content":"The center point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The center point.","pos":[0,17]}]},{"pos":[7799,7819],"content":"The rotation matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rotation matrix.","pos":[0,20]}]},{"pos":[8307,8364],"content":"Creates a scaling matrix from the specified vector scale.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a scaling matrix from the specified vector scale.","pos":[0,57]}]},{"pos":[8562,8579],"content":"The scale to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scale to use.","pos":[0,17]}]},{"pos":[8649,8668],"content":"The scaling matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scaling matrix.","pos":[0,19]}]},{"pos":[9130,9198],"content":"Creates a scaling matrix that scales uniformly with the given scale.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a scaling matrix that scales uniformly with the given scale.","pos":[0,68]}]},{"pos":[9366,9391],"content":"The uniform scale to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The uniform scale to use.","pos":[0,25]}]},{"pos":[9461,9480],"content":"The scaling matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scaling matrix.","pos":[0,19]}]},{"pos":[10037,10141],"content":"Creates a scaling matrix from the specified vector scale with an offset from the specified center point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a scaling matrix from the specified vector scale with an offset from the specified center point.","pos":[0,104]}]},{"pos":[10376,10393],"content":"The scale to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scale to use.","pos":[0,17]}]},{"pos":[10471,10489],"content":"The center offset.","needQuote":true,"needEscape":true,"nodes":[{"content":"The center offset.","pos":[0,18]}]},{"pos":[10559,10578],"content":"The scaling matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scaling matrix.","pos":[0,19]}]},{"pos":[11112,11225],"content":"Creates a scaling matrix that scales uniformly with the specified scale with an offset from the specified center.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a scaling matrix that scales uniformly with the specified scale with an offset from the specified center.","pos":[0,113]}]},{"pos":[11430,11455],"content":"The uniform scale to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The uniform scale to use.","pos":[0,25]}]},{"pos":[11533,11551],"content":"The center offset.","needQuote":true,"needEscape":true,"nodes":[{"content":"The center offset.","pos":[0,18]}]},{"pos":[11621,11640],"content":"The scaling matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scaling matrix.","pos":[0,19]}]},{"pos":[12151,12214],"content":"Creates a scaling matrix from the specified X and Y components.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a scaling matrix from the specified X and Y components.","pos":[0,63]}]},{"pos":[12398,12434],"content":"The value to scale by on the X axis.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to scale by on the X axis.","pos":[0,36]}]},{"pos":[12497,12533],"content":"The value to scale by on the Y axis.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to scale by on the Y axis.","pos":[0,36]}]},{"pos":[12603,12622],"content":"The scaling matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scaling matrix.","pos":[0,19]}]},{"pos":[13205,13269],"content":"Creates a scaling matrix that is offset by a given center point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a scaling matrix that is offset by a given center point.","pos":[0,64]}]},{"pos":[13490,13526],"content":"The value to scale by on the X axis.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to scale by on the X axis.","pos":[0,36]}]},{"pos":[13589,13625],"content":"The value to scale by on the Y axis.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to scale by on the Y axis.","pos":[0,36]}]},{"pos":[13703,13720],"content":"The center point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The center point.","pos":[0,17]}]},{"pos":[13790,13809],"content":"The scaling matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scaling matrix.","pos":[0,19]}]},{"pos":[14315,14374],"content":"Creates a skew matrix from the specified angles in radians.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a skew matrix from the specified angles in radians.","pos":[0,59]}]},{"pos":[14563,14587],"content":"The X angle, in radians.","needQuote":true,"needEscape":true,"nodes":[{"content":"The X angle, in radians.","pos":[0,24]}]},{"pos":[14652,14676],"content":"The Y angle, in radians.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Y angle, in radians.","pos":[0,24]}]},{"pos":[14746,14762],"content":"The skew matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The skew matrix.","pos":[0,16]}]},{"pos":[15339,15417],"content":"Creates a skew matrix from the specified angles in radians and a center point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a skew matrix from the specified angles in radians and a center point.","pos":[0,78]}]},{"pos":[15643,15667],"content":"The X angle, in radians.","needQuote":true,"needEscape":true,"nodes":[{"content":"The X angle, in radians.","pos":[0,24]}]},{"pos":[15732,15756],"content":"The Y angle, in radians.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Y angle, in radians.","pos":[0,24]}]},{"pos":[15834,15851],"content":"The center point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The center point.","pos":[0,17]}]},{"pos":[15921,15937],"content":"The skew matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The skew matrix.","pos":[0,16]}]},{"pos":[16451,16520],"content":"Creates a translation matrix from the specified 2-dimensional vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a translation matrix from the specified 2-dimensional vector.","pos":[0,69]}]},{"pos":[16728,16753],"content":"The translation position.","needQuote":true,"needEscape":true,"nodes":[{"content":"The translation position.","pos":[0,25]}]},{"pos":[16823,16846],"content":"The translation matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The translation matrix.","pos":[0,23]}]},{"pos":[17393,17460],"content":"Creates a translation matrix from the specified X and Y components.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a translation matrix from the specified X and Y components.","pos":[0,67]}]},{"pos":[17659,17674],"content":"The X position.","needQuote":true,"needEscape":true,"nodes":[{"content":"The X position.","pos":[0,15]}]},{"pos":[17740,17755],"content":"The Y position.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Y position.","pos":[0,15]}]},{"pos":[17825,17848],"content":"The translation matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The translation matrix.","pos":[0,23]}]},{"pos":[18324,18410],"content":"Returns a value that indicates whether this instance and another 3x2 matrix are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether this instance and another 3x2 matrix are equal.","pos":[0,86]}]},{"pos":[18422,18491],"content":"Two matrices are equal if all their corresponding elements are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Two matrices are equal if all their corresponding elements are equal.","pos":[0,69]}]},{"pos":[18658,18675],"content":"The other matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The other matrix.","pos":[0,17]}]},{"pos":[18734,18900],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two matrices are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two matrices are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19332,19418],"content":"Returns a value that indicates whether this instance and a specified object are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether this instance and a specified object are equal.","pos":[0,86]}]},{"pos":[19430,19581],"content":"The current instance and <ph id=\"ph1\">`obj`</ph> are equal if <ph id=\"ph2\">`obj`</ph> is a &lt;xref:System.Numerics.Matrix3x2&gt; object and the corresponding elements of each matrix are equal.","needQuote":true,"needEscape":true,"source":"The current instance and `obj` are equal if `obj` is a <xref:System.Numerics.Matrix3x2> object and the corresponding elements of each matrix are equal."},{"pos":[19722,19770],"content":"The object to compare with the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare with the current instance.","pos":[0,48]}]},{"pos":[19829,20240],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current instance and <code>obj</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref><xref uid=\"langword_csharp_\" name=\"\" href=\"\"></xref>. If <code>obj</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current instance and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> are equal; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept><bpt id=\"p4\">&lt;xref uid=\"langword_csharp_\" name=\"\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[0,243],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current instance and <code>obj</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref><xref uid=\"langword_csharp_\" name=\"\" href=\"\"></xref>."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, the method returns <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[244,411],"source":" If <code>obj</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[20664,20707],"content":"Calculates the determinant for this matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"Calculates the determinant for this matrix.","pos":[0,43]}]},{"pos":[20719,20818],"content":"The determinant is calculated by expanding the matrix with a third column whose values are (0,0,1).","needQuote":true,"needEscape":true,"nodes":[{"content":"The determinant is calculated by expanding the matrix with a third column whose values are (0,0,1).","pos":[0,99]}]},{"pos":[20950,20966],"content":"The determinant.","needQuote":true,"needEscape":true,"nodes":[{"content":"The determinant.","pos":[0,16]}]},{"pos":[21383,21423],"content":"Returns the hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]},{"pos":[21558,21572],"content":"The hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash code.","pos":[0,14]}]},{"pos":[21967,22007],"content":"Gets the multiplicative identity matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the multiplicative identity matrix.","pos":[0,40]}]},{"pos":[22158,22193],"content":"The multiplicative identify matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The multiplicative identify matrix.","pos":[0,35]}]},{"pos":[22744,22833],"content":"Inverts the specified matrix. The return value indicates whether the operation succeeded.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inverts the specified matrix. The return value indicates whether the operation succeeded.","pos":[0,89],"nodes":[{"content":"Inverts the specified matrix.","pos":[0,29]},{"content":"The return value indicates whether the operation succeeded.","pos":[30,89]}]}]},{"pos":[23047,23068],"content":"The matrix to invert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The matrix to invert.","pos":[0,21]}]},{"pos":[23143,23225],"content":"When this method returns, contains the inverted matrix if the operation succeeded.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains the inverted matrix if the operation succeeded.","pos":[0,82]}]},{"pos":[23284,23471],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">matrix</ph><ept id=\"p2\">&lt;/code&gt;</ept> was converted successfully; otherwise,  <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>matrix</code> was converted successfully; otherwise,  <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23871,23931],"content":"Indicates whether the current matrix is the identity matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether the current matrix is the identity matrix.","pos":[0,60]}]},{"pos":[24045,24226],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current matrix is the identity matrix; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current matrix is the identity matrix; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24816,24950],"content":"Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.","pos":[0,134]}]},{"pos":[25196,25213],"content":"The first matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first matrix.","pos":[0,17]}]},{"pos":[25289,25307],"content":"The second matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second matrix.","pos":[0,18]}]},{"pos":[25370,25406],"content":"The relative weighting of <ph id=\"ph1\">`matrix2`</ph>.","needQuote":true,"needEscape":true,"source":"The relative weighting of `matrix2`."},{"pos":[25476,25500],"content":"The interpolated matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The interpolated matrix.","pos":[0,24]}]},{"pos":[25860,25895],"content":"The first element of the first row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first element of the first row.","pos":[0,35]}]},{"pos":[25994,26006],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26322,26358],"content":"The second element of the first row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second element of the first row.","pos":[0,36]}]},{"pos":[26457,26469],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26785,26821],"content":"The first element of the second row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first element of the second row.","pos":[0,36]}]},{"pos":[26920,26932],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27248,27285],"content":"The second element of the second row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second element of the second row.","pos":[0,37]}]},{"pos":[27384,27396],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27712,27747],"content":"The first element of the third row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first element of the third row.","pos":[0,35]}]},{"pos":[27846,27858],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28174,28210],"content":"The second element of the third row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second element of the third row.","pos":[0,36]}]},{"pos":[28309,28321],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28832,28903],"content":"Returns the matrix that results from multiplying two matrices together.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the matrix that results from multiplying two matrices together.","pos":[0,71]}]},{"pos":[29136,29153],"content":"The first matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first matrix.","pos":[0,17]}]},{"pos":[29228,29246],"content":"The second matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second matrix.","pos":[0,18]}]},{"pos":[29316,29335],"content":"The product matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The product matrix.","pos":[0,19]}]},{"pos":[29861,29964],"content":"Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.","pos":[0,103]}]},{"pos":[30177,30197],"content":"The matrix to scale.","needQuote":true,"needEscape":true,"nodes":[{"content":"The matrix to scale.","pos":[0,20]}]},{"pos":[30260,30285],"content":"The scaling value to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scaling value to use.","pos":[0,25]}]},{"pos":[30355,30373],"content":"The scaled matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scaled matrix.","pos":[0,18]}]},{"pos":[30840,30905],"content":"Negates the specified matrix by multiplying all its values by -1.","needQuote":true,"needEscape":true,"nodes":[{"content":"Negates the specified matrix by multiplying all its values by -1.","pos":[0,65]}]},{"pos":[31100,31121],"content":"The matrix to negate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The matrix to negate.","pos":[0,21]}]},{"pos":[31191,31210],"content":"The negated matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The negated matrix.","pos":[0,19]}]},{"pos":[31784,31866],"content":"Adds each element in one matrix with its corresponding element in a second matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds each element in one matrix with its corresponding element in a second matrix.","pos":[0,82]}]},{"pos":[31878,31990],"content":"The Addition method defines the operation of the addition operator for <xref:System.Numerics.Matrix3x2> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Addition method defines the operation of the addition operator for &lt;xref:System.Numerics.Matrix3x2&gt; objects.","pos":[0,112],"source":"The Addition method defines the operation of the addition operator for <xref:System.Numerics.Matrix3x2> objects."}]},{"pos":[32226,32243],"content":"The first matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first matrix.","pos":[0,17]}]},{"pos":[32318,32336],"content":"The second matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second matrix.","pos":[0,18]}]},{"pos":[32406,32449],"content":"The matrix that contains the summed values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The matrix that contains the summed values.","pos":[0,43]}]},{"pos":[33028,33100],"content":"Returns a value that indicates whether the specified matrices are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the specified matrices are equal.","pos":[0,72]}]},{"pos":[33112,33181],"content":"Two matrices are equal if all their corresponding elements are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Two matrices are equal if all their corresponding elements are equal.","pos":[0,69]}]},{"pos":[33396,33424],"content":"The first matrix to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first matrix to compare.","pos":[0,28]}]},{"pos":[33499,33528],"content":"The second matrix to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second matrix to compare.","pos":[0,29]}]},{"pos":[33587,33780],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">value1</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">value2</ph><ept id=\"p3\">&lt;/code&gt;</ept> are equal; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>value1</code> and <code>value2</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[34369,34445],"content":"Returns a value that indicates whether the specified matrices are not equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the specified matrices are not equal.","pos":[0,76]}]},{"pos":[34662,34690],"content":"The first matrix to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first matrix to compare.","pos":[0,28]}]},{"pos":[34765,34794],"content":"The second matrix to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second matrix to compare.","pos":[0,29]}]},{"pos":[34853,35050],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">value1</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">value2</ph><ept id=\"p3\">&lt;/code&gt;</ept> are not equal; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>value1</code> and <code>value2</code> are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[35631,35702],"content":"Returns the matrix that results from multiplying two matrices together.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the matrix that results from multiplying two matrices together.","pos":[0,71]}]},{"pos":[35714,35832],"content":"The Multiply method defines the operation of the multiplication operator for <xref:System.Numerics.Matrix3x2> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Multiply method defines the operation of the multiplication operator for &lt;xref:System.Numerics.Matrix3x2&gt; objects.","pos":[0,118],"source":"The Multiply method defines the operation of the multiplication operator for <xref:System.Numerics.Matrix3x2> objects."}]},{"pos":[36068,36085],"content":"The first matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first matrix.","pos":[0,17]}]},{"pos":[36160,36178],"content":"The second matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second matrix.","pos":[0,18]}]},{"pos":[36248,36267],"content":"The product matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The product matrix.","pos":[0,19]}]},{"pos":[36813,36916],"content":"Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.","pos":[0,103]}]},{"pos":[36928,37046],"content":"The Multiply method defines the operation of the multiplication operator for <xref:System.Numerics.Matrix3x2> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Multiply method defines the operation of the multiplication operator for &lt;xref:System.Numerics.Matrix3x2&gt; objects.","pos":[0,118],"source":"The Multiply method defines the operation of the multiplication operator for <xref:System.Numerics.Matrix3x2> objects."}]},{"pos":[37262,37282],"content":"The matrix to scale.","needQuote":true,"needEscape":true,"nodes":[{"content":"The matrix to scale.","pos":[0,20]}]},{"pos":[37345,37370],"content":"The scaling value to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scaling value to use.","pos":[0,25]}]},{"pos":[37440,37458],"content":"The scaled matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scaled matrix.","pos":[0,18]}]},{"pos":[38052,38143],"content":"Subtracts each element in a second matrix from its corresponding element in a first matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"Subtracts each element in a second matrix from its corresponding element in a first matrix.","pos":[0,91]}]},{"pos":[38155,38306],"content":"The <xref:System.Numerics.Matrix3x2.Subtract%2A> method defines the operation of the subtraction operator for <xref:System.Numerics.Matrix3x2> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Numerics.Matrix3x2.Subtract%2A&gt; method defines the operation of the subtraction operator for &lt;xref:System.Numerics.Matrix3x2&gt; objects.","pos":[0,151],"source":"The <xref:System.Numerics.Matrix3x2.Subtract%2A> method defines the operation of the subtraction operator for <xref:System.Numerics.Matrix3x2> objects."}]},{"pos":[38545,38562],"content":"The first matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first matrix.","pos":[0,17]}]},{"pos":[38637,38655],"content":"The second matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second matrix.","pos":[0,18]}]},{"pos":[38725,38877],"content":"The matrix containing the values that result from subtracting each element in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value2</ph><ept id=\"p1\">&lt;/code&gt;</ept> from its corresponding element in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value1</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The matrix containing the values that result from subtracting each element in <code>value2</code> from its corresponding element in <code>value1</code>."},{"pos":[39402,39467],"content":"Negates the specified matrix by multiplying all its values by -1.","needQuote":true,"needEscape":true,"nodes":[{"content":"Negates the specified matrix by multiplying all its values by -1.","pos":[0,65]}]},{"pos":[39672,39693],"content":"The matrix to negate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The matrix to negate.","pos":[0,21]}]},{"pos":[39763,39782],"content":"The negated matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The negated matrix.","pos":[0,19]}]},{"pos":[40349,40440],"content":"Subtracts each element in a second matrix from its corresponding element in a first matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"Subtracts each element in a second matrix from its corresponding element in a first matrix.","pos":[0,91]}]},{"pos":[40673,40690],"content":"The first matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first matrix.","pos":[0,17]}]},{"pos":[40765,40783],"content":"The second matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second matrix.","pos":[0,18]}]},{"pos":[40853,41005],"content":"The matrix containing the values that result from subtracting each element in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value2</ph><ept id=\"p1\">&lt;/code&gt;</ept> from its corresponding element in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value1</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The matrix containing the values that result from subtracting each element in <code>value2</code> from its corresponding element in <code>value1</code>."},{"pos":[41401,41446],"content":"Returns a string that represents this matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string that represents this matrix.","pos":[0,45]}]},{"pos":[41458,41695],"content":"The numeric values in the returned string are formatted by using the conventions of the current culture. For example, for the en-US culture, the returned string might appear as `{ {M11:1.1 M12:1.2} {M21:2.1 M22:2.2} {M31:3.1 M32:3.2} }`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The numeric values in the returned string are formatted by using the conventions of the current culture.","pos":[0,104]},{"content":"For example, for the en-US culture, the returned string might appear as <ph id=\"ph1\">`{ {M11:1.1 M12:1.2} {M21:2.1 M22:2.2} {M31:3.1 M32:3.2} }`</ph>.","pos":[105,237],"source":" For example, for the en-US culture, the returned string might appear as `{ {M11:1.1 M12:1.2} {M21:2.1 M22:2.2} {M31:3.1 M32:3.2} }`."}]},{"pos":[41831,41872],"content":"The string representation of this matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string representation of this matrix.","pos":[0,41]}]},{"pos":[42279,42333],"content":"Gets or sets the translation component of this matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the translation component of this matrix.","pos":[0,54]}]},{"pos":[42481,42531],"content":"The translation component of the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The translation component of the current instance.","pos":[0,50]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Numerics.Matrix3x2\n  id: Matrix3x2\n  children:\n  - System.Numerics.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)\n  - System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.CreateRotation(System.Single)\n  - System.Numerics.Matrix3x2.CreateRotation(System.Single,System.Numerics.Vector2)\n  - System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)\n  - System.Numerics.Matrix3x2.CreateScale(System.Single)\n  - System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)\n  - System.Numerics.Matrix3x2.CreateScale(System.Single,System.Numerics.Vector2)\n  - System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single)\n  - System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single,System.Numerics.Vector2)\n  - System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single)\n  - System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single,System.Numerics.Vector2)\n  - System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)\n  - System.Numerics.Matrix3x2.CreateTranslation(System.Single,System.Single)\n  - System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.Equals(System.Object)\n  - System.Numerics.Matrix3x2.GetDeterminant\n  - System.Numerics.Matrix3x2.GetHashCode\n  - System.Numerics.Matrix3x2.Identity\n  - System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)\n  - System.Numerics.Matrix3x2.IsIdentity\n  - System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)\n  - System.Numerics.Matrix3x2.M11\n  - System.Numerics.Matrix3x2.M12\n  - System.Numerics.Matrix3x2.M21\n  - System.Numerics.Matrix3x2.M22\n  - System.Numerics.Matrix3x2.M31\n  - System.Numerics.Matrix3x2.M32\n  - System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Single)\n  - System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)\n  - System.Numerics.Matrix3x2.op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.op_UnaryNegation(System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.ToString\n  - System.Numerics.Matrix3x2.Translation\n  langs:\n  - csharp\n  name: Matrix3x2\n  nameWithType: Matrix3x2\n  fullName: System.Numerics.Matrix3x2\n  type: Struct\n  summary: Represents a 3x2 matrix.\n  syntax:\n    content: 'public struct Matrix3x2 : IEquatable<System.Numerics.Matrix3x2>'\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.IEquatable<System.Numerics.Matrix3x2>\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)\n  id: '#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)'\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: Matrix3x2(Single,Single,Single,Single,Single,Single)\n  nameWithType: Matrix3x2.Matrix3x2(Single,Single,Single,Single,Single,Single)\n  fullName: System.Numerics.Matrix3x2.Matrix3x2(Single,Single,Single,Single,Single,Single)\n  type: Constructor\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Creates a 3x2 matrix from the specified components.\n  syntax:\n    content: public Matrix3x2 (float m11, float m12, float m21, float m22, float m31, float m32);\n    parameters:\n    - id: m11\n      type: System.Single\n      description: The value to assign to the first element in the first row.\n    - id: m12\n      type: System.Single\n      description: The value to assign to the second element in the first row.\n    - id: m21\n      type: System.Single\n      description: The value to assign to the first element in the second row.\n    - id: m22\n      type: System.Single\n      description: The value to assign to the second element in the second row.\n    - id: m31\n      type: System.Single\n      description: The value to assign to the first element in the third row.\n    - id: m32\n      type: System.Single\n      description: The value to assign to the second element in the third row.\n  overload: System.Numerics.Matrix3x2.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  id: Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: Add(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.Add(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Add(Matrix3x2,Matrix3x2)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Adds each element in one matrix with its corresponding element in a second matrix.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 Add (System.Numerics.Matrix3x2 value1, System.Numerics.Matrix3x2 value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: The first matrix.\n    - id: value2\n      type: System.Numerics.Matrix3x2\n      description: The second matrix.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The matrix that contains the summed values of <code>value1</code> and <code>value2</code>.\n  overload: System.Numerics.Matrix3x2.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.CreateRotation(System.Single)\n  id: CreateRotation(System.Single)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: CreateRotation(Single)\n  nameWithType: Matrix3x2.CreateRotation(Single)\n  fullName: System.Numerics.Matrix3x2.CreateRotation(Single)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Creates a rotation matrix using the given rotation in radians.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 CreateRotation (float radians);\n    parameters:\n    - id: radians\n      type: System.Single\n      description: The amount of rotation, in radians.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The rotation matrix.\n  overload: System.Numerics.Matrix3x2.CreateRotation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.CreateRotation(System.Single,System.Numerics.Vector2)\n  id: CreateRotation(System.Single,System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: CreateRotation(Single,Vector2)\n  nameWithType: Matrix3x2.CreateRotation(Single,Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateRotation(Single,Vector2)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Creates a rotation matrix using the specified rotation in radians and a center point.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 CreateRotation (float radians, System.Numerics.Vector2 centerPoint);\n    parameters:\n    - id: radians\n      type: System.Single\n      description: The amount of rotation, in radians.\n    - id: centerPoint\n      type: System.Numerics.Vector2\n      description: The center point.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The rotation matrix.\n  overload: System.Numerics.Matrix3x2.CreateRotation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)\n  id: CreateScale(System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: CreateScale(Vector2)\n  nameWithType: Matrix3x2.CreateScale(Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateScale(Vector2)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Creates a scaling matrix from the specified vector scale.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 CreateScale (System.Numerics.Vector2 scales);\n    parameters:\n    - id: scales\n      type: System.Numerics.Vector2\n      description: The scale to use.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The scaling matrix.\n  overload: System.Numerics.Matrix3x2.CreateScale*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Single)\n  id: CreateScale(System.Single)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: CreateScale(Single)\n  nameWithType: Matrix3x2.CreateScale(Single)\n  fullName: System.Numerics.Matrix3x2.CreateScale(Single)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Creates a scaling matrix that scales uniformly with the given scale.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 CreateScale (float scale);\n    parameters:\n    - id: scale\n      type: System.Single\n      description: The uniform scale to use.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The scaling matrix.\n  overload: System.Numerics.Matrix3x2.CreateScale*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)\n  id: CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: CreateScale(Vector2,Vector2)\n  nameWithType: Matrix3x2.CreateScale(Vector2,Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateScale(Vector2,Vector2)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Creates a scaling matrix from the specified vector scale with an offset from the specified center point.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 CreateScale (System.Numerics.Vector2 scales, System.Numerics.Vector2 centerPoint);\n    parameters:\n    - id: scales\n      type: System.Numerics.Vector2\n      description: The scale to use.\n    - id: centerPoint\n      type: System.Numerics.Vector2\n      description: The center offset.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The scaling matrix.\n  overload: System.Numerics.Matrix3x2.CreateScale*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Single,System.Numerics.Vector2)\n  id: CreateScale(System.Single,System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: CreateScale(Single,Vector2)\n  nameWithType: Matrix3x2.CreateScale(Single,Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateScale(Single,Vector2)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Creates a scaling matrix that scales uniformly with the specified scale with an offset from the specified center.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 CreateScale (float scale, System.Numerics.Vector2 centerPoint);\n    parameters:\n    - id: scale\n      type: System.Single\n      description: The uniform scale to use.\n    - id: centerPoint\n      type: System.Numerics.Vector2\n      description: The center offset.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The scaling matrix.\n  overload: System.Numerics.Matrix3x2.CreateScale*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single)\n  id: CreateScale(System.Single,System.Single)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: CreateScale(Single,Single)\n  nameWithType: Matrix3x2.CreateScale(Single,Single)\n  fullName: System.Numerics.Matrix3x2.CreateScale(Single,Single)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Creates a scaling matrix from the specified X and Y components.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 CreateScale (float xScale, float yScale);\n    parameters:\n    - id: xScale\n      type: System.Single\n      description: The value to scale by on the X axis.\n    - id: yScale\n      type: System.Single\n      description: The value to scale by on the Y axis.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The scaling matrix.\n  overload: System.Numerics.Matrix3x2.CreateScale*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single,System.Numerics.Vector2)\n  id: CreateScale(System.Single,System.Single,System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: CreateScale(Single,Single,Vector2)\n  nameWithType: Matrix3x2.CreateScale(Single,Single,Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateScale(Single,Single,Vector2)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Creates a scaling matrix that is offset by a given center point.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 CreateScale (float xScale, float yScale, System.Numerics.Vector2 centerPoint);\n    parameters:\n    - id: xScale\n      type: System.Single\n      description: The value to scale by on the X axis.\n    - id: yScale\n      type: System.Single\n      description: The value to scale by on the Y axis.\n    - id: centerPoint\n      type: System.Numerics.Vector2\n      description: The center point.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The scaling matrix.\n  overload: System.Numerics.Matrix3x2.CreateScale*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single)\n  id: CreateSkew(System.Single,System.Single)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: CreateSkew(Single,Single)\n  nameWithType: Matrix3x2.CreateSkew(Single,Single)\n  fullName: System.Numerics.Matrix3x2.CreateSkew(Single,Single)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Creates a skew matrix from the specified angles in radians.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 CreateSkew (float radiansX, float radiansY);\n    parameters:\n    - id: radiansX\n      type: System.Single\n      description: The X angle, in radians.\n    - id: radiansY\n      type: System.Single\n      description: The Y angle, in radians.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The skew matrix.\n  overload: System.Numerics.Matrix3x2.CreateSkew*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single,System.Numerics.Vector2)\n  id: CreateSkew(System.Single,System.Single,System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: CreateSkew(Single,Single,Vector2)\n  nameWithType: Matrix3x2.CreateSkew(Single,Single,Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateSkew(Single,Single,Vector2)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Creates a skew matrix from the specified angles in radians and a center point.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 CreateSkew (float radiansX, float radiansY, System.Numerics.Vector2 centerPoint);\n    parameters:\n    - id: radiansX\n      type: System.Single\n      description: The X angle, in radians.\n    - id: radiansY\n      type: System.Single\n      description: The Y angle, in radians.\n    - id: centerPoint\n      type: System.Numerics.Vector2\n      description: The center point.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The skew matrix.\n  overload: System.Numerics.Matrix3x2.CreateSkew*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)\n  id: CreateTranslation(System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: CreateTranslation(Vector2)\n  nameWithType: Matrix3x2.CreateTranslation(Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateTranslation(Vector2)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Creates a translation matrix from the specified 2-dimensional vector.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 CreateTranslation (System.Numerics.Vector2 position);\n    parameters:\n    - id: position\n      type: System.Numerics.Vector2\n      description: The translation position.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The translation matrix.\n  overload: System.Numerics.Matrix3x2.CreateTranslation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.CreateTranslation(System.Single,System.Single)\n  id: CreateTranslation(System.Single,System.Single)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: CreateTranslation(Single,Single)\n  nameWithType: Matrix3x2.CreateTranslation(Single,Single)\n  fullName: System.Numerics.Matrix3x2.CreateTranslation(Single,Single)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Creates a translation matrix from the specified X and Y components.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 CreateTranslation (float xPosition, float yPosition);\n    parameters:\n    - id: xPosition\n      type: System.Single\n      description: The X position.\n    - id: yPosition\n      type: System.Single\n      description: The Y position.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The translation matrix.\n  overload: System.Numerics.Matrix3x2.CreateTranslation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)\n  id: Equals(System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: Equals(Matrix3x2)\n  nameWithType: Matrix3x2.Equals(Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Equals(Matrix3x2)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether this instance and another 3x2 matrix are equal.\n  remarks: Two matrices are equal if all their corresponding elements are equal.\n  syntax:\n    content: public bool Equals (System.Numerics.Matrix3x2 other);\n    parameters:\n    - id: other\n      type: System.Numerics.Matrix3x2\n      description: The other matrix.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two matrices are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Numerics.Matrix3x2.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Matrix3x2.Equals(Object)\n  fullName: System.Numerics.Matrix3x2.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether this instance and a specified object are equal.\n  remarks: The current instance and `obj` are equal if `obj` is a <xref:System.Numerics.Matrix3x2> object and the corresponding elements of each matrix are equal.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with the current instance.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current instance and <code>obj</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref><xref uid=\"langword_csharp_\" name=\"\" href=\"\"></xref>. If <code>obj</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Numerics.Matrix3x2.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.GetDeterminant\n  id: GetDeterminant\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: GetDeterminant()\n  nameWithType: Matrix3x2.GetDeterminant()\n  fullName: System.Numerics.Matrix3x2.GetDeterminant()\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Calculates the determinant for this matrix.\n  remarks: The determinant is calculated by expanding the matrix with a third column whose values are (0,0,1).\n  syntax:\n    content: public float GetDeterminant ();\n    parameters: []\n    return:\n      type: System.Single\n      description: The determinant.\n  overload: System.Numerics.Matrix3x2.GetDeterminant*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.GetHashCode\n  id: GetHashCode\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Matrix3x2.GetHashCode()\n  fullName: System.Numerics.Matrix3x2.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code.\n  overload: System.Numerics.Matrix3x2.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.Identity\n  id: Identity\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: Identity\n  nameWithType: Matrix3x2.Identity\n  fullName: System.Numerics.Matrix3x2.Identity\n  type: Property\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Gets the multiplicative identity matrix.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 Identity { get; }\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The multiplicative identify matrix.\n  overload: System.Numerics.Matrix3x2.Identity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)\n  id: Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: Invert(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.Invert(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Invert(Matrix3x2,Matrix3x2)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Inverts the specified matrix. The return value indicates whether the operation succeeded.\n  syntax:\n    content: public static bool Invert (System.Numerics.Matrix3x2 matrix, out System.Numerics.Matrix3x2 result);\n    parameters:\n    - id: matrix\n      type: System.Numerics.Matrix3x2\n      description: The matrix to invert.\n    - id: result\n      type: System.Numerics.Matrix3x2\n      description: When this method returns, contains the inverted matrix if the operation succeeded.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>matrix</code> was converted successfully; otherwise,  <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Numerics.Matrix3x2.Invert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.IsIdentity\n  id: IsIdentity\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: IsIdentity\n  nameWithType: Matrix3x2.IsIdentity\n  fullName: System.Numerics.Matrix3x2.IsIdentity\n  type: Property\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Indicates whether the current matrix is the identity matrix.\n  syntax:\n    content: public bool IsIdentity { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current matrix is the identity matrix; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Numerics.Matrix3x2.IsIdentity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)\n  id: Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: Lerp(Matrix3x2,Matrix3x2,Single)\n  nameWithType: Matrix3x2.Lerp(Matrix3x2,Matrix3x2,Single)\n  fullName: System.Numerics.Matrix3x2.Lerp(Matrix3x2,Matrix3x2,Single)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 Lerp (System.Numerics.Matrix3x2 matrix1, System.Numerics.Matrix3x2 matrix2, float amount);\n    parameters:\n    - id: matrix1\n      type: System.Numerics.Matrix3x2\n      description: The first matrix.\n    - id: matrix2\n      type: System.Numerics.Matrix3x2\n      description: The second matrix.\n    - id: amount\n      type: System.Single\n      description: The relative weighting of `matrix2`.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The interpolated matrix.\n  overload: System.Numerics.Matrix3x2.Lerp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.M11\n  id: M11\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: M11\n  nameWithType: Matrix3x2.M11\n  fullName: System.Numerics.Matrix3x2.M11\n  type: Field\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: The first element of the first row.\n  syntax:\n    content: public float M11;\n    return:\n      type: System.Single\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.M12\n  id: M12\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: M12\n  nameWithType: Matrix3x2.M12\n  fullName: System.Numerics.Matrix3x2.M12\n  type: Field\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: The second element of the first row.\n  syntax:\n    content: public float M12;\n    return:\n      type: System.Single\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.M21\n  id: M21\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: M21\n  nameWithType: Matrix3x2.M21\n  fullName: System.Numerics.Matrix3x2.M21\n  type: Field\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: The first element of the second row.\n  syntax:\n    content: public float M21;\n    return:\n      type: System.Single\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.M22\n  id: M22\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: M22\n  nameWithType: Matrix3x2.M22\n  fullName: System.Numerics.Matrix3x2.M22\n  type: Field\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: The second element of the second row.\n  syntax:\n    content: public float M22;\n    return:\n      type: System.Single\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.M31\n  id: M31\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: M31\n  nameWithType: Matrix3x2.M31\n  fullName: System.Numerics.Matrix3x2.M31\n  type: Field\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: The first element of the third row.\n  syntax:\n    content: public float M31;\n    return:\n      type: System.Single\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.M32\n  id: M32\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: M32\n  nameWithType: Matrix3x2.M32\n  fullName: System.Numerics.Matrix3x2.M32\n  type: Field\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: The second element of the third row.\n  syntax:\n    content: public float M32;\n    return:\n      type: System.Single\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  id: Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: Multiply(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.Multiply(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Multiply(Matrix3x2,Matrix3x2)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns the matrix that results from multiplying two matrices together.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 Multiply (System.Numerics.Matrix3x2 value1, System.Numerics.Matrix3x2 value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: The first matrix.\n    - id: value2\n      type: System.Numerics.Matrix3x2\n      description: The second matrix.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The product matrix.\n  overload: System.Numerics.Matrix3x2.Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Single)\n  id: Multiply(System.Numerics.Matrix3x2,System.Single)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: Multiply(Matrix3x2,Single)\n  nameWithType: Matrix3x2.Multiply(Matrix3x2,Single)\n  fullName: System.Numerics.Matrix3x2.Multiply(Matrix3x2,Single)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 Multiply (System.Numerics.Matrix3x2 value1, float value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: The matrix to scale.\n    - id: value2\n      type: System.Single\n      description: The scaling value to use.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The scaled matrix.\n  overload: System.Numerics.Matrix3x2.Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)\n  id: Negate(System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: Negate(Matrix3x2)\n  nameWithType: Matrix3x2.Negate(Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Negate(Matrix3x2)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Negates the specified matrix by multiplying all its values by -1.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 Negate (System.Numerics.Matrix3x2 value);\n    parameters:\n    - id: value\n      type: System.Numerics.Matrix3x2\n      description: The matrix to negate.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The negated matrix.\n  overload: System.Numerics.Matrix3x2.Negate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  id: op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: op_Addition(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.op_Addition(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.op_Addition(Matrix3x2,Matrix3x2)\n  type: Operator\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Adds each element in one matrix with its corresponding element in a second matrix.\n  remarks: The Addition method defines the operation of the addition operator for <xref:System.Numerics.Matrix3x2> objects.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 op_Addition (System.Numerics.Matrix3x2 value1, System.Numerics.Matrix3x2 value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: The first matrix.\n    - id: value2\n      type: System.Numerics.Matrix3x2\n      description: The second matrix.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The matrix that contains the summed values.\n  overload: System.Numerics.Matrix3x2.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  id: op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: op_Equality(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.op_Equality(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.op_Equality(Matrix3x2,Matrix3x2)\n  type: Operator\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether the specified matrices are equal.\n  remarks: Two matrices are equal if all their corresponding elements are equal.\n  syntax:\n    content: public static bool op_Equality (System.Numerics.Matrix3x2 value1, System.Numerics.Matrix3x2 value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: The first matrix to compare.\n    - id: value2\n      type: System.Numerics.Matrix3x2\n      description: The second matrix to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>value1</code> and <code>value2</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Numerics.Matrix3x2.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  id: op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: op_Inequality(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.op_Inequality(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.op_Inequality(Matrix3x2,Matrix3x2)\n  type: Operator\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether the specified matrices are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.Numerics.Matrix3x2 value1, System.Numerics.Matrix3x2 value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: The first matrix to compare.\n    - id: value2\n      type: System.Numerics.Matrix3x2\n      description: The second matrix to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>value1</code> and <code>value2</code> are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Numerics.Matrix3x2.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  id: op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: op_Multiply(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.op_Multiply(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.op_Multiply(Matrix3x2,Matrix3x2)\n  type: Operator\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns the matrix that results from multiplying two matrices together.\n  remarks: The Multiply method defines the operation of the multiplication operator for <xref:System.Numerics.Matrix3x2> objects.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 op_Multiply (System.Numerics.Matrix3x2 value1, System.Numerics.Matrix3x2 value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: The first matrix.\n    - id: value2\n      type: System.Numerics.Matrix3x2\n      description: The second matrix.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The product matrix.\n  overload: System.Numerics.Matrix3x2.op_Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)\n  id: op_Multiply(System.Numerics.Matrix3x2,System.Single)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: op_Multiply(Matrix3x2,Single)\n  nameWithType: Matrix3x2.op_Multiply(Matrix3x2,Single)\n  fullName: System.Numerics.Matrix3x2.op_Multiply(Matrix3x2,Single)\n  type: Operator\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.\n  remarks: The Multiply method defines the operation of the multiplication operator for <xref:System.Numerics.Matrix3x2> objects.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 op_Multiply (System.Numerics.Matrix3x2 value1, float value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: The matrix to scale.\n    - id: value2\n      type: System.Single\n      description: The scaling value to use.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The scaled matrix.\n  overload: System.Numerics.Matrix3x2.op_Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  id: op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: op_Subtraction(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.op_Subtraction(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.op_Subtraction(Matrix3x2,Matrix3x2)\n  type: Operator\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Subtracts each element in a second matrix from its corresponding element in a first matrix.\n  remarks: The <xref:System.Numerics.Matrix3x2.Subtract%2A> method defines the operation of the subtraction operator for <xref:System.Numerics.Matrix3x2> objects.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 op_Subtraction (System.Numerics.Matrix3x2 value1, System.Numerics.Matrix3x2 value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: The first matrix.\n    - id: value2\n      type: System.Numerics.Matrix3x2\n      description: The second matrix.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The matrix containing the values that result from subtracting each element in <code>value2</code> from its corresponding element in <code>value1</code>.\n  overload: System.Numerics.Matrix3x2.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.op_UnaryNegation(System.Numerics.Matrix3x2)\n  id: op_UnaryNegation(System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: op_UnaryNegation(Matrix3x2)\n  nameWithType: Matrix3x2.op_UnaryNegation(Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.op_UnaryNegation(Matrix3x2)\n  type: Operator\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Negates the specified matrix by multiplying all its values by -1.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 op_UnaryNegation (System.Numerics.Matrix3x2 value);\n    parameters:\n    - id: value\n      type: System.Numerics.Matrix3x2\n      description: The matrix to negate.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The negated matrix.\n  overload: System.Numerics.Matrix3x2.op_UnaryNegation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  id: Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: Subtract(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.Subtract(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Subtract(Matrix3x2,Matrix3x2)\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Subtracts each element in a second matrix from its corresponding element in a first matrix.\n  syntax:\n    content: public static System.Numerics.Matrix3x2 Subtract (System.Numerics.Matrix3x2 value1, System.Numerics.Matrix3x2 value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: The first matrix.\n    - id: value2\n      type: System.Numerics.Matrix3x2\n      description: The second matrix.\n    return:\n      type: System.Numerics.Matrix3x2\n      description: The matrix containing the values that result from subtracting each element in <code>value2</code> from its corresponding element in <code>value1</code>.\n  overload: System.Numerics.Matrix3x2.Subtract*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.ToString\n  id: ToString\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Matrix3x2.ToString()\n  fullName: System.Numerics.Matrix3x2.ToString()\n  type: Method\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Returns a string that represents this matrix.\n  remarks: The numeric values in the returned string are formatted by using the conventions of the current culture. For example, for the en-US culture, the returned string might appear as `{ {M11:1.1 M12:1.2} {M21:2.1 M22:2.2} {M31:3.1 M32:3.2} }`.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of this matrix.\n  overload: System.Numerics.Matrix3x2.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Numerics.Matrix3x2.Translation\n  id: Translation\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  name: Translation\n  nameWithType: Matrix3x2.Translation\n  fullName: System.Numerics.Matrix3x2.Translation\n  type: Property\n  assemblies:\n  - System.Numerics\n  namespace: System.Numerics\n  summary: Gets or sets the translation component of this matrix.\n  syntax:\n    content: public System.Numerics.Vector2 Translation { get; set; }\n    return:\n      type: System.Numerics.Vector2\n      description: The translation component of the current instance.\n  overload: System.Numerics.Matrix3x2.Translation*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Numerics.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Matrix3x2(Single,Single,Single,Single,Single,Single)\n  nameWithType: Matrix3x2.Matrix3x2(Single,Single,Single,Single,Single,Single)\n  fullName: System.Numerics.Matrix3x2.Matrix3x2(Single,Single,Single,Single,Single,Single)\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Add(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.Add(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Add(Matrix3x2,Matrix3x2)\n- uid: System.Numerics.Matrix3x2\n  parent: System.Numerics\n  isExternal: false\n  name: Matrix3x2\n  nameWithType: Matrix3x2\n  fullName: System.Numerics.Matrix3x2\n- uid: System.Numerics.Matrix3x2.CreateRotation(System.Single)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: CreateRotation(Single)\n  nameWithType: Matrix3x2.CreateRotation(Single)\n  fullName: System.Numerics.Matrix3x2.CreateRotation(Single)\n- uid: System.Numerics.Matrix3x2.CreateRotation(System.Single,System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: CreateRotation(Single,Vector2)\n  nameWithType: Matrix3x2.CreateRotation(Single,Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateRotation(Single,Vector2)\n- uid: System.Numerics.Vector2\n  parent: System.Numerics\n  isExternal: false\n  name: Vector2\n  nameWithType: Vector2\n  fullName: System.Numerics.Vector2\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: CreateScale(Vector2)\n  nameWithType: Matrix3x2.CreateScale(Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateScale(Vector2)\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Single)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: CreateScale(Single)\n  nameWithType: Matrix3x2.CreateScale(Single)\n  fullName: System.Numerics.Matrix3x2.CreateScale(Single)\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: CreateScale(Vector2,Vector2)\n  nameWithType: Matrix3x2.CreateScale(Vector2,Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateScale(Vector2,Vector2)\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Single,System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: CreateScale(Single,Vector2)\n  nameWithType: Matrix3x2.CreateScale(Single,Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateScale(Single,Vector2)\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: CreateScale(Single,Single)\n  nameWithType: Matrix3x2.CreateScale(Single,Single)\n  fullName: System.Numerics.Matrix3x2.CreateScale(Single,Single)\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single,System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: CreateScale(Single,Single,Vector2)\n  nameWithType: Matrix3x2.CreateScale(Single,Single,Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateScale(Single,Single,Vector2)\n- uid: System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: CreateSkew(Single,Single)\n  nameWithType: Matrix3x2.CreateSkew(Single,Single)\n  fullName: System.Numerics.Matrix3x2.CreateSkew(Single,Single)\n- uid: System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single,System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: CreateSkew(Single,Single,Vector2)\n  nameWithType: Matrix3x2.CreateSkew(Single,Single,Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateSkew(Single,Single,Vector2)\n- uid: System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: CreateTranslation(Vector2)\n  nameWithType: Matrix3x2.CreateTranslation(Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateTranslation(Vector2)\n- uid: System.Numerics.Matrix3x2.CreateTranslation(System.Single,System.Single)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: CreateTranslation(Single,Single)\n  nameWithType: Matrix3x2.CreateTranslation(Single,Single)\n  fullName: System.Numerics.Matrix3x2.CreateTranslation(Single,Single)\n- uid: System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Equals(Matrix3x2)\n  nameWithType: Matrix3x2.Equals(Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Equals(Matrix3x2)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Numerics.Matrix3x2.Equals(System.Object)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Matrix3x2.Equals(Object)\n  fullName: System.Numerics.Matrix3x2.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Numerics.Matrix3x2.GetDeterminant\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: GetDeterminant()\n  nameWithType: Matrix3x2.GetDeterminant()\n  fullName: System.Numerics.Matrix3x2.GetDeterminant()\n- uid: System.Numerics.Matrix3x2.GetHashCode\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Matrix3x2.GetHashCode()\n  fullName: System.Numerics.Matrix3x2.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Numerics.Matrix3x2.Identity\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Identity\n  nameWithType: Matrix3x2.Identity\n  fullName: System.Numerics.Matrix3x2.Identity\n- uid: System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Invert(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.Invert(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Invert(Matrix3x2,Matrix3x2)\n- uid: System.Numerics.Matrix3x2.IsIdentity\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: IsIdentity\n  nameWithType: Matrix3x2.IsIdentity\n  fullName: System.Numerics.Matrix3x2.IsIdentity\n- uid: System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Lerp(Matrix3x2,Matrix3x2,Single)\n  nameWithType: Matrix3x2.Lerp(Matrix3x2,Matrix3x2,Single)\n  fullName: System.Numerics.Matrix3x2.Lerp(Matrix3x2,Matrix3x2,Single)\n- uid: System.Numerics.Matrix3x2.M11\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: M11\n  nameWithType: Matrix3x2.M11\n  fullName: System.Numerics.Matrix3x2.M11\n- uid: System.Numerics.Matrix3x2.M12\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: M12\n  nameWithType: Matrix3x2.M12\n  fullName: System.Numerics.Matrix3x2.M12\n- uid: System.Numerics.Matrix3x2.M21\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: M21\n  nameWithType: Matrix3x2.M21\n  fullName: System.Numerics.Matrix3x2.M21\n- uid: System.Numerics.Matrix3x2.M22\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: M22\n  nameWithType: Matrix3x2.M22\n  fullName: System.Numerics.Matrix3x2.M22\n- uid: System.Numerics.Matrix3x2.M31\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: M31\n  nameWithType: Matrix3x2.M31\n  fullName: System.Numerics.Matrix3x2.M31\n- uid: System.Numerics.Matrix3x2.M32\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: M32\n  nameWithType: Matrix3x2.M32\n  fullName: System.Numerics.Matrix3x2.M32\n- uid: System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Multiply(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.Multiply(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Multiply(Matrix3x2,Matrix3x2)\n- uid: System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Single)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Multiply(Matrix3x2,Single)\n  nameWithType: Matrix3x2.Multiply(Matrix3x2,Single)\n  fullName: System.Numerics.Matrix3x2.Multiply(Matrix3x2,Single)\n- uid: System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Negate(Matrix3x2)\n  nameWithType: Matrix3x2.Negate(Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Negate(Matrix3x2)\n- uid: System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: op_Addition(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.op_Addition(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.op_Addition(Matrix3x2,Matrix3x2)\n- uid: System.Numerics.Matrix3x2.op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: op_Equality(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.op_Equality(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.op_Equality(Matrix3x2,Matrix3x2)\n- uid: System.Numerics.Matrix3x2.op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: op_Inequality(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.op_Inequality(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.op_Inequality(Matrix3x2,Matrix3x2)\n- uid: System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: op_Multiply(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.op_Multiply(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.op_Multiply(Matrix3x2,Matrix3x2)\n- uid: System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: op_Multiply(Matrix3x2,Single)\n  nameWithType: Matrix3x2.op_Multiply(Matrix3x2,Single)\n  fullName: System.Numerics.Matrix3x2.op_Multiply(Matrix3x2,Single)\n- uid: System.Numerics.Matrix3x2.op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: op_Subtraction(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.op_Subtraction(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.op_Subtraction(Matrix3x2,Matrix3x2)\n- uid: System.Numerics.Matrix3x2.op_UnaryNegation(System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: op_UnaryNegation(Matrix3x2)\n  nameWithType: Matrix3x2.op_UnaryNegation(Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.op_UnaryNegation(Matrix3x2)\n- uid: System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Subtract(Matrix3x2,Matrix3x2)\n  nameWithType: Matrix3x2.Subtract(Matrix3x2,Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Subtract(Matrix3x2,Matrix3x2)\n- uid: System.Numerics.Matrix3x2.ToString\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: ToString()\n  nameWithType: Matrix3x2.ToString()\n  fullName: System.Numerics.Matrix3x2.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Numerics.Matrix3x2.Translation\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Translation\n  nameWithType: Matrix3x2.Translation\n  fullName: System.Numerics.Matrix3x2.Translation\n- uid: System.Numerics.Matrix3x2.#ctor*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Matrix3x2\n  nameWithType: Matrix3x2.Matrix3x2\n- uid: System.Numerics.Matrix3x2.Add*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Add\n  nameWithType: Matrix3x2.Add\n- uid: System.Numerics.Matrix3x2.CreateRotation*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: CreateRotation\n  nameWithType: Matrix3x2.CreateRotation\n- uid: System.Numerics.Matrix3x2.CreateScale*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: CreateScale\n  nameWithType: Matrix3x2.CreateScale\n- uid: System.Numerics.Matrix3x2.CreateSkew*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: CreateSkew\n  nameWithType: Matrix3x2.CreateSkew\n- uid: System.Numerics.Matrix3x2.CreateTranslation*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: CreateTranslation\n  nameWithType: Matrix3x2.CreateTranslation\n- uid: System.Numerics.Matrix3x2.Equals*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Equals\n  nameWithType: Matrix3x2.Equals\n- uid: System.Numerics.Matrix3x2.GetDeterminant*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: GetDeterminant\n  nameWithType: Matrix3x2.GetDeterminant\n- uid: System.Numerics.Matrix3x2.GetHashCode*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Matrix3x2.GetHashCode\n- uid: System.Numerics.Matrix3x2.Identity*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Identity\n  nameWithType: Matrix3x2.Identity\n- uid: System.Numerics.Matrix3x2.Invert*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Invert\n  nameWithType: Matrix3x2.Invert\n- uid: System.Numerics.Matrix3x2.IsIdentity*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: IsIdentity\n  nameWithType: Matrix3x2.IsIdentity\n- uid: System.Numerics.Matrix3x2.Lerp*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Lerp\n  nameWithType: Matrix3x2.Lerp\n- uid: System.Numerics.Matrix3x2.Multiply*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Multiply\n  nameWithType: Matrix3x2.Multiply\n- uid: System.Numerics.Matrix3x2.Negate*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Negate\n  nameWithType: Matrix3x2.Negate\n- uid: System.Numerics.Matrix3x2.op_Addition*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: op_Addition\n  nameWithType: Matrix3x2.op_Addition\n- uid: System.Numerics.Matrix3x2.op_Equality*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: op_Equality\n  nameWithType: Matrix3x2.op_Equality\n- uid: System.Numerics.Matrix3x2.op_Inequality*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: op_Inequality\n  nameWithType: Matrix3x2.op_Inequality\n- uid: System.Numerics.Matrix3x2.op_Multiply*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: op_Multiply\n  nameWithType: Matrix3x2.op_Multiply\n- uid: System.Numerics.Matrix3x2.op_Subtraction*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: Matrix3x2.op_Subtraction\n- uid: System.Numerics.Matrix3x2.op_UnaryNegation*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: op_UnaryNegation\n  nameWithType: Matrix3x2.op_UnaryNegation\n- uid: System.Numerics.Matrix3x2.Subtract*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Subtract\n  nameWithType: Matrix3x2.Subtract\n- uid: System.Numerics.Matrix3x2.ToString*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: ToString\n  nameWithType: Matrix3x2.ToString\n- uid: System.Numerics.Matrix3x2.Translation*\n  parent: System.Numerics.Matrix3x2\n  isExternal: false\n  name: Translation\n  nameWithType: Matrix3x2.Translation\n"}