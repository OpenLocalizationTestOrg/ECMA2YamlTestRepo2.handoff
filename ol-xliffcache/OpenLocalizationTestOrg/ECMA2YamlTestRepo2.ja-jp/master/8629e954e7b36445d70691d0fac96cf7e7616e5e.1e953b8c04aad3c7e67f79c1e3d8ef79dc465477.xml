{"nodes":[{"pos":[520,704],"content":"The base class for the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SymmetricProofDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.AsymmetricProofDescriptor\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> classes.","needQuote":true,"needEscape":true,"source":"The base class for the <xref href=\"System.IdentityModel.Tokens.SymmetricProofDescriptor\"></xref> and <xref href=\"System.IdentityModel.Tokens.AsymmetricProofDescriptor\"></xref> classes."},{"pos":[1268,1401],"content":"Called from constructors in derived classes to initialize the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.ProofDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Called from constructors in derived classes to initialize the <xref href=\"System.IdentityModel.Tokens.ProofDescriptor\"></xref> class."},{"pos":[2178,2295],"content":"Sets the appropriate properties inside the RSTR according to the properties of the current proof descriptor instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the appropriate properties inside the RSTR according to the properties of the current proof descriptor instance.","pos":[0,117]}]},{"pos":[2562,2618],"content":"The RSTR object to be modified by this proof descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The RSTR object to be modified by this proof descriptor.","pos":[0,56]}]},{"pos":[3129,3246],"content":"When implemented in a derived class, gets the key identifier that can be used inside issued tokens to define the key.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, gets the key identifier that can be used inside issued tokens to define the key.","pos":[0,117]}]},{"pos":[3258,3564],"content":"The key can be either symmetric or asymmetric. If the key is symmetric, the identifier is usually the binary secret or encrypted key. If the key is asymmetric, the identifier is usually the key identifier from the `<wst:UseKey>` element inside of a `wst:RequestSecurityToken` message (RST); the public key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key can be either symmetric or asymmetric.","pos":[0,46]},{"content":"If the key is symmetric, the identifier is usually the binary secret or encrypted key.","pos":[47,133]},{"content":"If the key is asymmetric, the identifier is usually the key identifier from the <ph id=\"ph1\">`&lt;wst:UseKey&gt;`</ph> element inside of a <ph id=\"ph2\">`wst:RequestSecurityToken`</ph> message (RST); the public key.","pos":[134,306],"source":" If the key is asymmetric, the identifier is usually the key identifier from the `<wst:UseKey>` element inside of a `wst:RequestSecurityToken` message (RST); the public key."}]},{"pos":[3770,3789],"content":"The key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier.","pos":[0,19]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.ProofDescriptor\n  id: ProofDescriptor\n  children:\n  - System.IdentityModel.Tokens.ProofDescriptor.#ctor\n  - System.IdentityModel.Tokens.ProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)\n  - System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier\n  langs:\n  - csharp\n  name: ProofDescriptor\n  nameWithType: ProofDescriptor\n  fullName: System.IdentityModel.Tokens.ProofDescriptor\n  type: Class\n  summary: The base class for the <xref href=\"System.IdentityModel.Tokens.SymmetricProofDescriptor\"></xref> and <xref href=\"System.IdentityModel.Tokens.AsymmetricProofDescriptor\"></xref> classes.\n  syntax:\n    content: public abstract class ProofDescriptor\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.ProofDescriptor.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.ProofDescriptor\n  langs:\n  - csharp\n  name: ProofDescriptor()\n  nameWithType: ProofDescriptor.ProofDescriptor()\n  fullName: System.IdentityModel.Tokens.ProofDescriptor.ProofDescriptor()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Called from constructors in derived classes to initialize the <xref href=\"System.IdentityModel.Tokens.ProofDescriptor\"></xref> class.\n  syntax:\n    content: protected ProofDescriptor ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.ProofDescriptor.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.ProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)\n  id: ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)\n  parent: System.IdentityModel.Tokens.ProofDescriptor\n  langs:\n  - csharp\n  name: ApplyTo(RequestSecurityTokenResponse)\n  nameWithType: ProofDescriptor.ApplyTo(RequestSecurityTokenResponse)\n  fullName: System.IdentityModel.Tokens.ProofDescriptor.ApplyTo(RequestSecurityTokenResponse)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Sets the appropriate properties inside the RSTR according to the properties of the current proof descriptor instance.\n  syntax:\n    content: public abstract void ApplyTo (System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response);\n    parameters:\n    - id: response\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n      description: The RSTR object to be modified by this proof descriptor.\n  overload: System.IdentityModel.Tokens.ProofDescriptor.ApplyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier\n  id: KeyIdentifier\n  parent: System.IdentityModel.Tokens.ProofDescriptor\n  langs:\n  - csharp\n  name: KeyIdentifier\n  nameWithType: ProofDescriptor.KeyIdentifier\n  fullName: System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When implemented in a derived class, gets the key identifier that can be used inside issued tokens to define the key.\n  remarks: The key can be either symmetric or asymmetric. If the key is symmetric, the identifier is usually the binary secret or encrypted key. If the key is asymmetric, the identifier is usually the key identifier from the `<wst:UseKey>` element inside of a `wst:RequestSecurityToken` message (RST); the public key.\n  syntax:\n    content: public abstract System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier { get; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: The key identifier.\n  overload: System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.IdentityModel.Tokens.ProofDescriptor.#ctor\n  parent: System.IdentityModel.Tokens.ProofDescriptor\n  isExternal: false\n  name: ProofDescriptor()\n  nameWithType: ProofDescriptor.ProofDescriptor()\n  fullName: System.IdentityModel.Tokens.ProofDescriptor.ProofDescriptor()\n- uid: System.IdentityModel.Tokens.ProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)\n  parent: System.IdentityModel.Tokens.ProofDescriptor\n  isExternal: false\n  name: ApplyTo(RequestSecurityTokenResponse)\n  nameWithType: ProofDescriptor.ApplyTo(RequestSecurityTokenResponse)\n  fullName: System.IdentityModel.Tokens.ProofDescriptor.ApplyTo(RequestSecurityTokenResponse)\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  parent: System.IdentityModel.Protocols.WSTrust\n  isExternal: false\n  name: RequestSecurityTokenResponse\n  nameWithType: RequestSecurityTokenResponse\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n- uid: System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier\n  parent: System.IdentityModel.Tokens.ProofDescriptor\n  isExternal: false\n  name: KeyIdentifier\n  nameWithType: ProofDescriptor.KeyIdentifier\n  fullName: System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n- uid: System.IdentityModel.Tokens.ProofDescriptor.#ctor*\n  parent: System.IdentityModel.Tokens.ProofDescriptor\n  isExternal: false\n  name: ProofDescriptor\n  nameWithType: ProofDescriptor.ProofDescriptor\n- uid: System.IdentityModel.Tokens.ProofDescriptor.ApplyTo*\n  parent: System.IdentityModel.Tokens.ProofDescriptor\n  isExternal: false\n  name: ApplyTo\n  nameWithType: ProofDescriptor.ApplyTo\n- uid: System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier*\n  parent: System.IdentityModel.Tokens.ProofDescriptor\n  isExternal: false\n  name: KeyIdentifier\n  nameWithType: ProofDescriptor.KeyIdentifier\n"}