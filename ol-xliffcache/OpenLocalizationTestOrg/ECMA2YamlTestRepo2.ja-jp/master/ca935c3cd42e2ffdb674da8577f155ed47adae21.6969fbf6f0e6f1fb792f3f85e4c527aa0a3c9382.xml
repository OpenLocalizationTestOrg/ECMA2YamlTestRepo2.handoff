{"nodes":[{"pos":[4025,4126],"content":"Arranges and virtualizes content on a single line that is oriented either horizontally or vertically.","needQuote":true,"needEscape":true,"nodes":[{"content":"Arranges and virtualizes content on a single line that is oriented either horizontally or vertically.","pos":[0,101]}]},{"pos":[4139,5897],"content":"The standard layout system creates item containers and computes layout for each item associated with a list control. The word \"virtualize\" refers to a technique by which a subset of [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] elements are generated from a larger number of data items based on which items are visible on-screen. Generating many [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements when only a few elements might be on the screen can adversely affect the performance of your application. The VirtualizingStackPanel calculates the number of visible items and works with the <xref:System.Windows.Controls.ItemContainerGenerator> from an <xref:System.Windows.Controls.ItemsControl> (such as <xref:System.Windows.Controls.ListBox> or <xref:System.Windows.Controls.ListView>) to create [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements only for visible items.       Virtualization in a <xref:System.Windows.Controls.StackPanel> only occurs when the items control contained in the panel creates its own item containers. You can ensure this happens by using data binding. In scenarios where item containers are created and added to the items control, a VirtualizingStackPanel offers no performance advantage over a <xref:System.Windows.Controls.StackPanel>.       VirtualizingStackPanel is the default items host for the <xref:System.Windows.Controls.ListBox> element. By default, the <xref:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing%2A> property is set to `true`.       When <xref:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing%2A> is set to `false`, a VirtualizingStackPanel behaves the same as an ordinary <xref:System.Windows.Controls.StackPanel>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The standard layout system creates item containers and computes layout for each item associated with a list control.","pos":[0,116]},{"content":"The word \"virtualize\" refers to a technique by which a subset of <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> elements are generated from a larger number of data items based on which items are visible on-screen.","pos":[117,343],"source":" The word \"virtualize\" refers to a technique by which a subset of [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] elements are generated from a larger number of data items based on which items are visible on-screen."},{"content":"Generating many <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> elements when only a few elements might be on the screen can adversely affect the performance of your application.","pos":[344,537],"source":" Generating many [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements when only a few elements might be on the screen can adversely affect the performance of your application."},{"content":"The VirtualizingStackPanel calculates the number of visible items and works with the &lt;xref:System.Windows.Controls.ItemContainerGenerator&gt; from an &lt;xref:System.Windows.Controls.ItemsControl&gt; (such as &lt;xref:System.Windows.Controls.ListBox&gt; or &lt;xref:System.Windows.Controls.ListView&gt;) to create <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> elements only for visible items.","pos":[538,926],"source":" The VirtualizingStackPanel calculates the number of visible items and works with the <xref:System.Windows.Controls.ItemContainerGenerator> from an <xref:System.Windows.Controls.ItemsControl> (such as <xref:System.Windows.Controls.ListBox> or <xref:System.Windows.Controls.ListView>) to create [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements only for visible items."},{"content":"Virtualization in a &lt;xref:System.Windows.Controls.StackPanel&gt; only occurs when the items control contained in the panel creates its own item containers.","pos":[933,1085],"source":"       Virtualization in a <xref:System.Windows.Controls.StackPanel> only occurs when the items control contained in the panel creates its own item containers."},{"content":"You can ensure this happens by using data binding.","pos":[1086,1136]},{"content":"In scenarios where item containers are created and added to the items control, a VirtualizingStackPanel offers no performance advantage over a &lt;xref:System.Windows.Controls.StackPanel&gt;.","pos":[1137,1322],"source":" In scenarios where item containers are created and added to the items control, a VirtualizingStackPanel offers no performance advantage over a <xref:System.Windows.Controls.StackPanel>."},{"content":"VirtualizingStackPanel is the default items host for the &lt;xref:System.Windows.Controls.ListBox&gt; element.","pos":[1329,1433],"source":"       VirtualizingStackPanel is the default items host for the <xref:System.Windows.Controls.ListBox> element."},{"content":"By default, the &lt;xref:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>.","pos":[1434,1548],"source":" By default, the <xref:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing%2A> property is set to `true`."},{"content":"When &lt;xref:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing%2A&gt; is set to <ph id=\"ph1\">`false`</ph>, a VirtualizingStackPanel behaves the same as an ordinary &lt;xref:System.Windows.Controls.StackPanel&gt;.","pos":[1555,1750],"source":"       When <xref:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing%2A> is set to `false`, a VirtualizingStackPanel behaves the same as an ordinary <xref:System.Windows.Controls.StackPanel>."}]},{"pos":[46652,46760],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizingStackPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref> class."},{"pos":[47797,47919],"content":"Adds an event handler for the <xref:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem> attached event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an event handler for the &lt;xref:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem&gt; attached event.","pos":[0,122],"source":"Adds an event handler for the <xref:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem> attached event."}]},{"pos":[47931,48891],"content":"The standard layout system creates item containers and computes layout for each item associated with a list control. The word \"virtualize\" refers to a technique by which a subset of [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements are generated from a larger number of data items based on which items are visible on-screen. Generating many [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements when only a few elements might be on the screen can adversely affect the performance of your application. The <xref:System.Windows.Controls.VirtualizingStackPanel> calculates the number of visible items and works with the <xref:System.Windows.Controls.ItemContainerGenerator> from an <xref:System.Windows.Controls.ItemsControl> (such as <xref:System.Windows.Controls.ListBox> or <xref:System.Windows.Controls.ListView>) to create [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements only for visible items.","needQuote":true,"needEscape":true,"nodes":[{"content":"The standard layout system creates item containers and computes layout for each item associated with a list control.","pos":[0,116]},{"content":"The word \"virtualize\" refers to a technique by which a subset of <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> elements are generated from a larger number of data items based on which items are visible on-screen.","pos":[117,346],"source":" The word \"virtualize\" refers to a technique by which a subset of [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements are generated from a larger number of data items based on which items are visible on-screen."},{"content":"Generating many <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> elements when only a few elements might be on the screen can adversely affect the performance of your application.","pos":[347,540],"source":" Generating many [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements when only a few elements might be on the screen can adversely affect the performance of your application."},{"content":"The &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; calculates the number of visible items and works with the &lt;xref:System.Windows.Controls.ItemContainerGenerator&gt; from an &lt;xref:System.Windows.Controls.ItemsControl&gt; (such as &lt;xref:System.Windows.Controls.ListBox&gt; or &lt;xref:System.Windows.Controls.ListView&gt;) to create <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> elements only for visible items.","pos":[541,960],"source":" The <xref:System.Windows.Controls.VirtualizingStackPanel> calculates the number of visible items and works with the <xref:System.Windows.Controls.ItemContainerGenerator> from an <xref:System.Windows.Controls.ItemsControl> (such as <xref:System.Windows.Controls.ListBox> or <xref:System.Windows.Controls.ListView>) to create [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements only for visible items."}]},{"pos":[49175,49265],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is listening for this event.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.DependencyObject\"></xref> that is listening for this event."},{"pos":[49374,49412],"content":"The event handler that is to be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event handler that is to be added.","pos":[0,38]}]},{"pos":[50032,50134],"content":"Arranges the content of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizingStackPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Arranges the content of a <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref> element."},{"pos":[50146,50313],"content":"You can override the ArrangeOverrideand <xref:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride%2A> methods in a derived class for custom layout behavior.","needQuote":true,"needEscape":true,"nodes":[{"content":"You can override the ArrangeOverrideand &lt;xref:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride%2A&gt; methods in a derived class for custom layout behavior.","pos":[0,167],"source":"You can override the ArrangeOverrideand <xref:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride%2A> methods in a derived class for custom layout behavior."}]},{"pos":[50516,50620],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that this element should use to arrange its child elements.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Size\"></xref> that this element should use to arrange its child elements."},{"pos":[50684,50870],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the arranged size of this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.VirtualizingStackPanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element and its child elements.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Size\"></xref> that represents the arranged size of this <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref> element and its child elements."},{"pos":[51477,51552],"content":"Generates the item at the specified index position and brings it into view.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates the item at the specified index position and brings it into view.","pos":[0,75]}]},{"pos":[51708,51762],"content":"The position of the item to generate and make visible.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position of the item to generate and make visible.","pos":[0,54]}]},{"pos":[51970,52041],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> position does not exist in the child collection.","needQuote":true,"needEscape":true,"source":"The <code>index</code> position does not exist in the child collection."},{"pos":[52618,52790],"content":"Gets value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizingStackPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can virtualize items that are grouped or organized in a hierarchy.","needQuote":true,"needEscape":true,"source":"Gets value that indicates whether the <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref> can virtualize items that are grouped or organized in a hierarchy."},{"pos":[52946,53020],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in all cases.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> in all cases."},{"pos":[53620,53773],"content":"Gets or sets a value that indicates whether a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizingStackPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can scroll in the horizontal dimension.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether a <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref> can scroll in the horizontal dimension."},{"pos":[53903,54168],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if content can scroll in the horizontal dimension; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if content can scroll in the horizontal dimension; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,186],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if content can scroll in the horizontal dimension; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[187,265],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[54739,54828],"content":"Gets or sets a value that indicates whether content can scroll in the vertical dimension.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether content can scroll in the vertical dimension.","pos":[0,89]}]},{"pos":[54956,55219],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if content can scroll in the vertical dimension; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if content can scroll in the vertical dimension; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,184],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if content can scroll in the vertical dimension; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[185,263],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[55825,55932],"content":"Identifies the <xref:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem> attached event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem&gt; attached event.","pos":[0,107],"source":"Identifies the <xref:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem> attached event."}]},{"pos":[56105,56117],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[56571,56630],"content":"Gets a value that contains the vertical size of the extent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that contains the vertical size of the extent.","pos":[0,59]}]},{"pos":[56747,56838],"content":"A <xref:System.Double> that represents the vertical size of the extent. The default is 0.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.Double> that represents the vertical size of the extent. The default is 0.0.","pos":[0,91],"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the vertical size of the extent.","pos":[0,71],"source":"A <xref:System.Double> that represents the vertical size of the extent."},{"content":"The default is 0.0.","pos":[72,91]}]}]},{"pos":[57360,57421],"content":"Gets a value that contains the horizontal size of the extent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that contains the horizontal size of the extent.","pos":[0,61]}]},{"pos":[57537,57630],"content":"A <xref:System.Double> that represents the horizontal size of the extent. The default is 0.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.Double> that represents the horizontal size of the extent. The default is 0.0.","pos":[0,93],"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the horizontal size of the extent.","pos":[0,73],"source":"A <xref:System.Double> that represents the horizontal size of the extent."},{"content":"The default is 0.0.","pos":[74,93]}]}]},{"pos":[58264,58392],"content":"Returns the position of the specified item, relative to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizingStackPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the position of the specified item, relative to the <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref>."},{"pos":[58582,58617],"content":"The element whose position to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element whose position to find.","pos":[0,35]}]},{"pos":[58675,58795],"content":"The position of the specified item, relative to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizingStackPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The position of the specified item, relative to the <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref>."},{"pos":[59372,59517],"content":"Gets a value that indicates if this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizingStackPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has a vertical or horizontal orientation.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates if this <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref> has a vertical or horizontal orientation."},{"pos":[59529,59683],"content":"This property always returns <ph id=\"ph1\">`true`</ph> because a &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; must have either a vertical or horizontal orientation.","needQuote":true,"needEscape":true,"source":"This property always returns `true` because a <xref:System.Windows.Controls.VirtualizingStackPanel> must have either a vertical or horizontal orientation."},{"pos":[59820,59910],"content":"This property always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This property always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[60466,60539],"content":"Gets a value that contains the horizontal offset of the scrolled content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that contains the horizontal offset of the scrolled content.","pos":[0,73]}]},{"pos":[60660,60763],"content":"<xref:System.Double> that represents the horizontal offset of the scrolled content. The default is 0.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Double> that represents the horizontal offset of the scrolled content. The default is 0.0.","pos":[0,103],"nodes":[{"content":"&lt;xref:System.Double&gt; that represents the horizontal offset of the scrolled content.","pos":[0,83],"source":"<xref:System.Double> that represents the horizontal offset of the scrolled content."},{"content":"The default is 0.0.","pos":[84,103]}]}]},{"pos":[61341,61439],"content":"Identifies the <xref:System.Windows.Controls.VirtualizingPanel.IsVirtualizing*> attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.VirtualizingPanel.IsVirtualizing*&gt; attached property.","pos":[0,98],"source":"Identifies the <xref:System.Windows.Controls.VirtualizingPanel.IsVirtualizing*> attached property."}]},{"pos":[61621,61633],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[62071,62116],"content":"Scrolls content downward by one logical unit.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content downward by one logical unit.","pos":[0,45]}]},{"pos":[62129,62697],"content":"You can override this method in a derived class to change how the stack panel scrolls content downward. For example, you can scroll content down by two units instead of one.       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can override this method in a derived class to change how the stack panel scrolls content downward.","pos":[0,103]},{"content":"For example, you can scroll content down by two units instead of one.","pos":[104,173]},{"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[180,452],"source":"       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"content":"In this case, the &lt;xref:System.Windows.Controls.ScrollViewer&gt; provides scrolling, and virtualization is disabled.","pos":[453,566],"source":" In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled."}]},{"pos":[63280,63328],"content":"Scrolls content to the left by one logical unit.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content to the left by one logical unit.","pos":[0,48]}]},{"pos":[63341,63909],"content":"You can override this method in a derived class to change how the stack panel scrolls content downward. For example, you can scroll content down by two units instead of one.       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can override this method in a derived class to change how the stack panel scrolls content downward.","pos":[0,103]},{"content":"For example, you can scroll content down by two units instead of one.","pos":[104,173]},{"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[180,452],"source":"       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"content":"In this case, the &lt;xref:System.Windows.Controls.ScrollViewer&gt; provides scrolling, and virtualization is disabled.","pos":[453,566],"source":" In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled."}]},{"pos":[64497,64546],"content":"Scrolls content to the right by one logical unit.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content to the right by one logical unit.","pos":[0,49]}]},{"pos":[64559,65132],"content":"You can override this method in a derived class to change how the stack panel scrolls content to the right. For example, you can scroll content right by two units instead of one.       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can override this method in a derived class to change how the stack panel scrolls content to the right.","pos":[0,107]},{"content":"For example, you can scroll content right by two units instead of one.","pos":[108,178]},{"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[185,457],"source":"       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"content":"In this case, the &lt;xref:System.Windows.Controls.ScrollViewer&gt; provides scrolling, and virtualization is disabled.","pos":[458,571],"source":" In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled."}]},{"pos":[65707,65750],"content":"Scrolls content upward by one logical unit.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content upward by one logical unit.","pos":[0,43]}]},{"pos":[65763,66316],"content":"You can override this method in a derived class to change how the stack panel scrolls content upward. For example, you can scroll up two units instead of one.       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can override this method in a derived class to change how the stack panel scrolls content upward.","pos":[0,101]},{"content":"For example, you can scroll up two units instead of one.","pos":[102,158]},{"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[165,437],"source":"       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"content":"In this case, the &lt;xref:System.Windows.Controls.ScrollViewer&gt; provides scrolling, and virtualization is disabled.","pos":[438,551],"source":" In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled."}]},{"pos":[66941,67106],"content":"Gets a value that represents the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Orientation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.VirtualizingStackPanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a value that represents the <xref href=\"System.Windows.Controls.Orientation\"></xref> of the <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref>."},{"pos":[67292,67358],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Orientation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Controls.Orientation\"></xref> value."},{"pos":[68021,68143],"content":"Scrolls to the specified coordinates and makes that portion of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> visible.","needQuote":true,"needEscape":true,"source":"Scrolls to the specified coordinates and makes that portion of a <xref href=\"System.Windows.Media.Visual\"></xref> visible."},{"pos":[68367,68441],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that becomes visible.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> that becomes visible."},{"pos":[68513,68651],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Rect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the coordinate space within a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Rect\"></xref> that represents the coordinate space within a <xref href=\"System.Windows.Media.Visual\"></xref>."},{"pos":[68715,68774],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Rect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is visible.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Rect\"></xref> that is visible."},{"pos":[69373,69595],"content":"Measures the child elements of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizingStackPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in anticipation of arranging them during the &lt;xref:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride*&gt; pass.","needQuote":true,"needEscape":true,"source":"Measures the child elements of a <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref> in anticipation of arranging them during the <xref:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride*> pass."},{"pos":[69607,69897],"content":"When scrolling, <xref:System.Windows.Controls.VirtualizingStackPanel> does not grow in layout size, but effectively adds its descendants on a z-plane, which is normally clipped by a parent element (typically a <xref:System.Windows.Controls.ScrollContentPresenter>) to the size of the stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"When scrolling, &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; does not grow in layout size, but effectively adds its descendants on a z-plane, which is normally clipped by a parent element (typically a &lt;xref:System.Windows.Controls.ScrollContentPresenter&gt;) to the size of the stack.","pos":[0,290],"source":"When scrolling, <xref:System.Windows.Controls.VirtualizingStackPanel> does not grow in layout size, but effectively adds its descendants on a z-plane, which is normally clipped by a parent element (typically a <xref:System.Windows.Controls.ScrollContentPresenter>) to the size of the stack."}]},{"pos":[70098,70182],"content":"An upper limit <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that should not be exceeded.","needQuote":true,"needEscape":true,"source":"An upper limit <xref href=\"System.Windows.Size\"></xref> that should not be exceeded."},{"pos":[70246,70339],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the desired size of the element.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Size\"></xref> that represents the desired size of the element."},{"pos":[70883,70976],"content":"Scrolls content logically downward in response to a downward click of the mouse wheel button.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content logically downward in response to a downward click of the mouse wheel button.","pos":[0,93]}]},{"pos":[70989,71505],"content":"You can override MouseWheelDown in a derived class to change how the stack panel responds to the mouse wheel down action.       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can override MouseWheelDown in a derived class to change how the stack panel responds to the mouse wheel down action.","pos":[0,121]},{"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[128,400],"source":"       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"content":"In this case, the &lt;xref:System.Windows.Controls.ScrollViewer&gt; provides scrolling, and virtualization is disabled.","pos":[401,514],"source":" In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled."}]},{"pos":[72130,72222],"content":"Scrolls content logically to the left in response to a left click of the mouse wheel button.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content logically to the left in response to a left click of the mouse wheel button.","pos":[0,92]}]},{"pos":[72235,72751],"content":"You can override MouseWheelLeft in a derived class to change how the stack panel responds to the mouse wheel left action.       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can override MouseWheelLeft in a derived class to change how the stack panel responds to the mouse wheel left action.","pos":[0,121]},{"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[128,400],"source":"       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"content":"In this case, the &lt;xref:System.Windows.Controls.ScrollViewer&gt; provides scrolling, and virtualization is disabled.","pos":[401,514],"source":" In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled."}]},{"pos":[73381,73475],"content":"Scrolls content logically to the right in response to a right click of the mouse wheel button.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content logically to the right in response to a right click of the mouse wheel button.","pos":[0,94]}]},{"pos":[73488,74006],"content":"You can override MouseWheelRight in a derived class to change how the stack panel responds to the mouse wheel right action.       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can override MouseWheelRight in a derived class to change how the stack panel responds to the mouse wheel right action.","pos":[0,123]},{"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[130,402],"source":"       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"content":"In this case, the &lt;xref:System.Windows.Controls.ScrollViewer&gt; provides scrolling, and virtualization is disabled.","pos":[403,516],"source":" In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled."}]},{"pos":[74623,74713],"content":"Scrolls content logically upward in response to an upward click of the mouse wheel button.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content logically upward in response to an upward click of the mouse wheel button.","pos":[0,90]}]},{"pos":[74726,75238],"content":"You can override MouseWheelUp in a derived class to change how the stack panel responds to the mouse wheel up action.       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can override MouseWheelUp in a derived class to change how the stack panel responds to the mouse wheel up action.","pos":[0,117]},{"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[124,396],"source":"       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"content":"In this case, the &lt;xref:System.Windows.Controls.ScrollViewer&gt; provides scrolling, and virtualization is disabled.","pos":[397,510],"source":" In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled."}]},{"pos":[76116,76244],"content":"Called when an item that is hosted by the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizingStackPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is re-virtualized.","needQuote":true,"needEscape":true,"source":"Called when an item that is hosted by the <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref> is re-virtualized."},{"pos":[76256,77216],"content":"The standard layout system creates item containers and computes layout for each item associated with a list control. The word \"virtualize\" refers to a technique by which a subset of [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements are generated from a larger number of data items based on which items are visible on-screen. Generating many [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements when only a few elements might be on the screen can adversely affect the performance of your application. The <xref:System.Windows.Controls.VirtualizingStackPanel> calculates the number of visible items and works with the <xref:System.Windows.Controls.ItemContainerGenerator> from an <xref:System.Windows.Controls.ItemsControl> (such as <xref:System.Windows.Controls.ListBox> or <xref:System.Windows.Controls.ListView>) to create [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements only for visible items.","needQuote":true,"needEscape":true,"nodes":[{"content":"The standard layout system creates item containers and computes layout for each item associated with a list control.","pos":[0,116]},{"content":"The word \"virtualize\" refers to a technique by which a subset of <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> elements are generated from a larger number of data items based on which items are visible on-screen.","pos":[117,346],"source":" The word \"virtualize\" refers to a technique by which a subset of [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements are generated from a larger number of data items based on which items are visible on-screen."},{"content":"Generating many <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> elements when only a few elements might be on the screen can adversely affect the performance of your application.","pos":[347,540],"source":" Generating many [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements when only a few elements might be on the screen can adversely affect the performance of your application."},{"content":"The &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; calculates the number of visible items and works with the &lt;xref:System.Windows.Controls.ItemContainerGenerator&gt; from an &lt;xref:System.Windows.Controls.ItemsControl&gt; (such as &lt;xref:System.Windows.Controls.ListBox&gt; or &lt;xref:System.Windows.Controls.ListView&gt;) to create <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> elements only for visible items.","pos":[541,960],"source":" The <xref:System.Windows.Controls.VirtualizingStackPanel> calculates the number of visible items and works with the <xref:System.Windows.Controls.ItemContainerGenerator> from an <xref:System.Windows.Controls.ItemsControl> (such as <xref:System.Windows.Controls.ListBox> or <xref:System.Windows.Controls.ListView>) to create [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements only for visible items."}]},{"pos":[77464,77485],"content":"Data about the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Data about the event.","pos":[0,21]}]},{"pos":[78043,78168],"content":"Called when the collection of child elements is cleared by the base <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Panel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Called when the collection of child elements is cleared by the base <xref href=\"System.Windows.Controls.Panel\"></xref> class."},{"pos":[79026,79258],"content":"Called when the &lt;xref:System.Windows.Controls.ItemsControl.Items*&gt; collection that is associated with the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ItemsControl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Panel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> changes.","needQuote":true,"needEscape":true,"source":"Called when the <xref:System.Windows.Controls.ItemsControl.Items*> collection that is associated with the <xref href=\"System.Windows.Controls.ItemsControl\"></xref> for this <xref href=\"System.Windows.Controls.Panel\"></xref> changes."},{"pos":[79479,79526],"content":"The <xref:System.Object> that raised the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; that raised the event.","pos":[0,47],"source":"The <xref:System.Object> that raised the event."}]},{"pos":[79630,79739],"content":"Provides data for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ItemContainerGenerator.ItemsChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Provides data for the <xref href=\"System.Windows.Controls.ItemContainerGenerator.ItemsChanged\"></xref> event."},{"pos":[80456,80537],"content":"Called when the offset of the viewport changes as a user scrolls through content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when the offset of the viewport changes as a user scrolls through content.","pos":[0,81]}]},{"pos":[80549,80644],"content":"Use this method, in a derived class, to detect and respond to changes in the viewport location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this method, in a derived class, to detect and respond to changes in the viewport location.","pos":[0,95]}]},{"pos":[80896,80927],"content":"The old offset of the viewport.","needQuote":true,"needEscape":true,"nodes":[{"content":"The old offset of the viewport.","pos":[0,31]}]},{"pos":[81009,81039],"content":"The new offset of the viewport","needQuote":true,"needEscape":true,"nodes":[{"content":"The new offset of the viewport","pos":[0,30]}]},{"pos":[81735,81780],"content":"Called when the size of the viewport changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when the size of the viewport changes.","pos":[0,45]}]},{"pos":[81792,81883],"content":"Use this method, in a derived class, to detect and respond to changes in the viewport size.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this method, in a derived class, to detect and respond to changes in the viewport size.","pos":[0,91]}]},{"pos":[82121,82150],"content":"The old size of the viewport.","needQuote":true,"needEscape":true,"nodes":[{"content":"The old size of the viewport.","pos":[0,29]}]},{"pos":[82228,82257],"content":"The new size of the viewport.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new size of the viewport.","pos":[0,29]}]},{"pos":[82788,82882],"content":"Gets or sets a value that describes the horizontal or vertical orientation of stacked content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that describes the horizontal or vertical orientation of stacked content.","pos":[0,94]}]},{"pos":[82895,83206],"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Orientation\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.VirtualizingStackPanel.OrientationProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|","needQuote":false,"needEscape":true,"source":"<a name=\"dependencyPropertyInfo_Orientation\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.VirtualizingStackPanel.OrientationProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"},{"pos":[83379,83530],"content":"The <xref href=\"System.Windows.Controls.Orientation\"></xref> of child content. The default is <xref href=\"System.Windows.Controls.Orientation\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Orientation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of child content.","pos":[0,78],"source":"The <xref href=\"System.Windows.Controls.Orientation\"></xref> of child content."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Orientation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[79,151],"source":" The default is <xref href=\"System.Windows.Controls.Orientation\"></xref>."}]},{"pos":[84088,84190],"content":"Identifies the <xref:System.Windows.Controls.VirtualizingStackPanel.Orientation*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.VirtualizingStackPanel.Orientation*&gt; dependency property.","pos":[0,102],"source":"Identifies the <xref:System.Windows.Controls.VirtualizingStackPanel.Orientation*> dependency property."}]},{"pos":[84369,84381],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[84819,84856],"content":"Scrolls content downward by one page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content downward by one page.","pos":[0,37]}]},{"pos":[84869,85372],"content":"You can override PageDown in a derived class to change how the stack panel responds to the page down action.       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can override PageDown in a derived class to change how the stack panel responds to the page down action.","pos":[0,108]},{"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[115,387],"source":"       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"content":"In this case, the &lt;xref:System.Windows.Controls.ScrollViewer&gt; provides scrolling, and virtualization is disabled.","pos":[388,501],"source":" In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled."}]},{"pos":[85955,85995],"content":"Scrolls content to the left by one page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content to the left by one page.","pos":[0,40]}]},{"pos":[86008,86511],"content":"You can override PageLeft in a derived class to change how the stack panel responds to the page left action.       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can override PageLeft in a derived class to change how the stack panel responds to the page left action.","pos":[0,108]},{"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[115,387],"source":"       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"content":"In this case, the &lt;xref:System.Windows.Controls.ScrollViewer&gt; provides scrolling, and virtualization is disabled.","pos":[388,501],"source":" In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled."}]},{"pos":[87099,87140],"content":"Scrolls content to the right by one page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content to the right by one page.","pos":[0,41]}]},{"pos":[87153,87658],"content":"You can override PageRight in a derived class to change how the stack panel responds to the page right action.       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can override PageRight in a derived class to change how the stack panel responds to the page right action.","pos":[0,110]},{"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[117,389],"source":"       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"content":"In this case, the &lt;xref:System.Windows.Controls.ScrollViewer&gt; provides scrolling, and virtualization is disabled.","pos":[390,503],"source":" In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled."}]},{"pos":[88233,88268],"content":"Scrolls content upward by one page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content upward by one page.","pos":[0,35]}]},{"pos":[88281,88780],"content":"You can override PageUp in a derived class to change how the stack panel responds to the page up action.       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can override PageUp in a derived class to change how the stack panel responds to the page up action.","pos":[0,104]},{"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[111,383],"source":"       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"content":"In this case, the &lt;xref:System.Windows.Controls.ScrollViewer&gt; provides scrolling, and virtualization is disabled.","pos":[384,497],"source":" In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled."}]},{"pos":[89831,89956],"content":"Removes an event handler for the <xref:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem> attached event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes an event handler for the &lt;xref:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem&gt; attached event.","pos":[0,125],"source":"Removes an event handler for the <xref:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem> attached event."}]},{"pos":[89968,90928],"content":"The standard layout system creates item containers and computes layout for each item associated with a list control. The word \"virtualize\" refers to a technique by which a subset of [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements are generated from a larger number of data items based on which items are visible on-screen. Generating many [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements when only a few elements might be on the screen can adversely affect the performance of your application. The <xref:System.Windows.Controls.VirtualizingStackPanel> calculates the number of visible items and works with the <xref:System.Windows.Controls.ItemContainerGenerator> from an <xref:System.Windows.Controls.ItemsControl> (such as <xref:System.Windows.Controls.ListBox> or <xref:System.Windows.Controls.ListView>) to create [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements only for visible items.","needQuote":true,"needEscape":true,"nodes":[{"content":"The standard layout system creates item containers and computes layout for each item associated with a list control.","pos":[0,116]},{"content":"The word \"virtualize\" refers to a technique by which a subset of <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> elements are generated from a larger number of data items based on which items are visible on-screen.","pos":[117,346],"source":" The word \"virtualize\" refers to a technique by which a subset of [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements are generated from a larger number of data items based on which items are visible on-screen."},{"content":"Generating many <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> elements when only a few elements might be on the screen can adversely affect the performance of your application.","pos":[347,540],"source":" Generating many [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements when only a few elements might be on the screen can adversely affect the performance of your application."},{"content":"The &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; calculates the number of visible items and works with the &lt;xref:System.Windows.Controls.ItemContainerGenerator&gt; from an &lt;xref:System.Windows.Controls.ItemsControl&gt; (such as &lt;xref:System.Windows.Controls.ListBox&gt; or &lt;xref:System.Windows.Controls.ListView&gt;) to create <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> elements only for visible items.","pos":[541,960],"source":" The <xref:System.Windows.Controls.VirtualizingStackPanel> calculates the number of visible items and works with the <xref:System.Windows.Controls.ItemContainerGenerator> from an <xref:System.Windows.Controls.ItemsControl> (such as <xref:System.Windows.Controls.ListBox> or <xref:System.Windows.Controls.ListView>) to create [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements only for visible items."}]},{"pos":[91215,91312],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from which the handler is being removed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.DependencyObject\"></xref> from which the handler is being removed."},{"pos":[91421,91471],"content":"Specifies the event handler that is to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the event handler that is to be removed.","pos":[0,50]}]},{"pos":[92016,92176],"content":"Gets or sets a value that identifies the container that controls scrolling behavior in this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizingStackPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that identifies the container that controls scrolling behavior in this <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref>."},{"pos":[92188,92413],"content":"If a <xref:System.Windows.Controls.ScrollViewer> control is the ScrollOwner, physical scrolling is enabled. If a <xref:System.Windows.Controls.VirtualizingStackPanel> is the ScrollOwner, scrolling is logical by child element.","needQuote":true,"needEscape":true,"nodes":[{"content":"If a <xref:System.Windows.Controls.ScrollViewer> control is the ScrollOwner, physical scrolling is enabled. If a <xref:System.Windows.Controls.VirtualizingStackPanel> is the ScrollOwner, scrolling is logical by child element.","pos":[0,225],"nodes":[{"content":"If a &lt;xref:System.Windows.Controls.ScrollViewer&gt; control is the ScrollOwner, physical scrolling is enabled.","pos":[0,107],"source":"If a <xref:System.Windows.Controls.ScrollViewer> control is the ScrollOwner, physical scrolling is enabled."},{"content":"If a &lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt; is the ScrollOwner, scrolling is logical by child element.","pos":[108,225],"source":" If a <xref:System.Windows.Controls.VirtualizingStackPanel> is the ScrollOwner, scrolling is logical by child element."}]}]},{"pos":[92587,92746],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ScrollViewer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that owns scrolling for this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.VirtualizingStackPanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Controls.ScrollViewer\"></xref> that owns scrolling for this <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref>."},{"pos":[93359,93462],"content":"Sets the value of the <xref:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the &lt;xref:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset*&gt; property.","pos":[0,103],"source":"Sets the value of the <xref:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset*> property."}]},{"pos":[93613,93711],"content":"The value of the <xref:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the &lt;xref:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset*&gt; property.","pos":[0,98],"source":"The value of the <xref:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset*> property."}]},{"pos":[94322,94423],"content":"Sets the value of the <xref:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the &lt;xref:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset*&gt; property.","pos":[0,101],"source":"Sets the value of the <xref:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset*> property."}]},{"pos":[94572,94668],"content":"The value of the <xref:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the &lt;xref:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset*&gt; property.","pos":[0,96],"source":"The value of the <xref:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset*> property."}]},{"pos":[95542,95694],"content":"Returns a value that indicates whether a changed item in an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ItemsControl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> affects the layout for this panel.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether a changed item in an <xref href=\"System.Windows.Controls.ItemsControl\"></xref> affects the layout for this panel."},{"pos":[95959,96309],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the changed item is a direct child of this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.VirtualizingPanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the changed item is an indirect descendant of the <bpt id=\"p4\">&lt;xref href=\"System.Windows.Controls.VirtualizingPanel\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the changed item is a direct child of this <xref href=\"System.Windows.Controls.VirtualizingPanel\"></xref>; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the changed item is an indirect descendant of the <xref href=\"System.Windows.Controls.VirtualizingPanel\"></xref>."},{"pos":[96413,96454],"content":"Contains data regarding the changed item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains data regarding the changed item.","pos":[0,41]}]},{"pos":[96513,96767],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the changed item in an <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.ItemsControl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> affects the layout for this panel; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the changed item in an <xref href=\"System.Windows.Controls.ItemsControl\"></xref> affects the layout for this panel; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[97325,97396],"content":"Gets a value that contains the vertical offset of the scrolled content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that contains the vertical offset of the scrolled content.","pos":[0,71]}]},{"pos":[97515,97618],"content":"A <xref:System.Double> that represents the vertical offset of the scrolled content. The default is 0.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.Double> that represents the vertical offset of the scrolled content. The default is 0.0.","pos":[0,103],"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the vertical offset of the scrolled content.","pos":[0,83],"source":"A <xref:System.Double> that represents the vertical offset of the scrolled content."},{"content":"The default is 0.0.","pos":[84,103]}]}]},{"pos":[98157,98233],"content":"Gets a value that contains the vertical size of the viewport of the content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that contains the vertical size of the viewport of the content.","pos":[0,76]}]},{"pos":[98352,98460],"content":"A <xref:System.Double> that represents the vertical size of the viewport of the content. The default is 0.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.Double> that represents the vertical size of the viewport of the content. The default is 0.0.","pos":[0,108],"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the vertical size of the viewport of the content.","pos":[0,88],"source":"A <xref:System.Double> that represents the vertical size of the viewport of the content."},{"content":"The default is 0.0.","pos":[89,108]}]}]},{"pos":[98994,99072],"content":"Gets a value that contains the horizontal size of the viewport of the content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that contains the horizontal size of the viewport of the content.","pos":[0,78]}]},{"pos":[99190,99298],"content":"A <xref:System.Double> that represents the vertical size of the viewport of the content. The default is 0.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.Double> that represents the vertical size of the viewport of the content. The default is 0.0.","pos":[0,108],"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the vertical size of the viewport of the content.","pos":[0,88],"source":"A <xref:System.Double> that represents the vertical size of the viewport of the content."},{"content":"The default is 0.0.","pos":[89,108]}]}]},{"pos":[99893,100061],"content":"Identifies the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_VirtualizingStackPanel.VirtualizationMode\" name=\"VirtualizingStackPanel.VirtualizationMode\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attached property.","needQuote":true,"needEscape":true,"source":"Identifies the <xref uid=\"langword_csharp_VirtualizingStackPanel.VirtualizationMode\" name=\"VirtualizingStackPanel.VirtualizationMode\" href=\"\"></xref> attached property."},{"pos":[100247,100259],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.VirtualizingStackPanel\n  id: VirtualizingStackPanel\n  children:\n  - System.Windows.Controls.VirtualizingStackPanel.#ctor\n  - System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)\n  - System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)\n  - System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView(System.Int32)\n  - System.Windows.Controls.VirtualizingStackPanel.CanHierarchicallyScrollAndVirtualizeCore\n  - System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll\n  - System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll\n  - System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent\n  - System.Windows.Controls.VirtualizingStackPanel.ExtentHeight\n  - System.Windows.Controls.VirtualizingStackPanel.ExtentWidth\n  - System.Windows.Controls.VirtualizingStackPanel.GetItemOffsetCore(System.Windows.UIElement)\n  - System.Windows.Controls.VirtualizingStackPanel.HasLogicalOrientation\n  - System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset\n  - System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty\n  - System.Windows.Controls.VirtualizingStackPanel.LineDown\n  - System.Windows.Controls.VirtualizingStackPanel.LineLeft\n  - System.Windows.Controls.VirtualizingStackPanel.LineRight\n  - System.Windows.Controls.VirtualizingStackPanel.LineUp\n  - System.Windows.Controls.VirtualizingStackPanel.LogicalOrientation\n  - System.Windows.Controls.VirtualizingStackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)\n  - System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)\n  - System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown\n  - System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft\n  - System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight\n  - System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp\n  - System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)\n  - System.Windows.Controls.VirtualizingStackPanel.OnClearChildren\n  - System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)\n  - System.Windows.Controls.VirtualizingStackPanel.OnViewportOffsetChanged(System.Windows.Vector,System.Windows.Vector)\n  - System.Windows.Controls.VirtualizingStackPanel.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)\n  - System.Windows.Controls.VirtualizingStackPanel.Orientation\n  - System.Windows.Controls.VirtualizingStackPanel.OrientationProperty\n  - System.Windows.Controls.VirtualizingStackPanel.PageDown\n  - System.Windows.Controls.VirtualizingStackPanel.PageLeft\n  - System.Windows.Controls.VirtualizingStackPanel.PageRight\n  - System.Windows.Controls.VirtualizingStackPanel.PageUp\n  - System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)\n  - System.Windows.Controls.VirtualizingStackPanel.ScrollOwner\n  - System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset(System.Double)\n  - System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset(System.Double)\n  - System.Windows.Controls.VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)\n  - System.Windows.Controls.VirtualizingStackPanel.VerticalOffset\n  - System.Windows.Controls.VirtualizingStackPanel.ViewportHeight\n  - System.Windows.Controls.VirtualizingStackPanel.ViewportWidth\n  - System.Windows.Controls.VirtualizingStackPanel.VirtualizationModeProperty\n  langs:\n  - csharp\n  name: VirtualizingStackPanel\n  nameWithType: VirtualizingStackPanel\n  fullName: System.Windows.Controls.VirtualizingStackPanel\n  type: Class\n  summary: Arranges and virtualizes content on a single line that is oriented either horizontally or vertically.\n  remarks: \"The standard layout system creates item containers and computes layout for each item associated with a list control. The word \\\"virtualize\\\" refers to a technique by which a subset of [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] elements are generated from a larger number of data items based on which items are visible on-screen. Generating many [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements when only a few elements might be on the screen can adversely affect the performance of your application. The VirtualizingStackPanel calculates the number of visible items and works with the <xref:System.Windows.Controls.ItemContainerGenerator> from an <xref:System.Windows.Controls.ItemsControl> (such as <xref:System.Windows.Controls.ListBox> or <xref:System.Windows.Controls.ListView>) to create [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements only for visible items.  \\n  \\n Virtualization in a <xref:System.Windows.Controls.StackPanel> only occurs when the items control contained in the panel creates its own item containers. You can ensure this happens by using data binding. In scenarios where item containers are created and added to the items control, a VirtualizingStackPanel offers no performance advantage over a <xref:System.Windows.Controls.StackPanel>.  \\n  \\n VirtualizingStackPanel is the default items host for the <xref:System.Windows.Controls.ListBox> element. By default, the <xref:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing%2A> property is set to `true`.  \\n  \\n When <xref:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing%2A> is set to `false`, a VirtualizingStackPanel behaves the same as an ordinary <xref:System.Windows.Controls.StackPanel>.\"\n  example:\n  - \"The following example shows how to bind to an XML data source and virtualize the items displayed in a <xref:System.Windows.Controls.ListBox> element using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]. Notice that the <xref:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing%2A> attached property is explicitly set to `true`.  \\n  \\n [!code-xml[VirtualizingStackPanel_Intro#2](~/add/codesnippet/xaml/VirtualizingStackPanel_Samp/default.xaml#2)]  \\n  \\n The following example creates a <xref:System.Windows.Controls.ListBox> and sets the `VirtualizingStackPanel.VirtualizationMode` attached property to <xref:System.Windows.Controls.VirtualizationMode>.  \\n  \\n [!code-xml[RecycleItemContainerShippets#VirtualizationMode](~/add/codesnippet/xaml/RecycleItemContainerShippets/Window1.xaml#virtualizationmode)]  \\n  \\n The following example shows the data used in the previous example.  \\n  \\n [!code-cs[RecycleItemContainerShippets#ListBoxData](~/add/codesnippet/csharp/RecycleItemContainerShippets/Window1.xaml.cs#listboxdata)]\\n [!code-vb[RecycleItemContainerShippets#ListBoxData](~/add/codesnippet/visualbasic/recycleitemcontainershippets/window1.xaml.vb#listboxdata)]\"\n  syntax:\n    content: 'public class VirtualizingStackPanel : System.Windows.Controls.VirtualizingPanel, System.Windows.Controls.Primitives.IScrollInfo'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Media.Visual\n  - System.Windows.UIElement\n  - System.Windows.FrameworkElement\n  - System.Windows.Controls.Panel\n  - System.Windows.Controls.VirtualizingPanel\n  implements:\n  - System.Windows.Controls.Primitives.IScrollInfo\n  inheritedMembers:\n  - System.Windows.Controls.Panel.Background\n  - System.Windows.Controls.Panel.BackgroundProperty\n  - System.Windows.Controls.Panel.Children\n  - System.Windows.Controls.Panel.CreateUIElementCollection(System.Windows.FrameworkElement)\n  - System.Windows.Controls.Panel.GetVisualChild(System.Int32)\n  - System.Windows.Controls.Panel.GetZIndex(System.Windows.UIElement)\n  - System.Windows.Controls.Panel.HasLogicalOrientationPublic\n  - System.Windows.Controls.Panel.InternalChildren\n  - System.Windows.Controls.Panel.IsItemsHost\n  - System.Windows.Controls.Panel.IsItemsHostProperty\n  - System.Windows.Controls.Panel.LogicalChildren\n  - System.Windows.Controls.Panel.LogicalOrientationPublic\n  - System.Windows.Controls.Panel.OnIsItemsHostChanged(System.Boolean,System.Boolean)\n  - System.Windows.Controls.Panel.OnRender(System.Windows.Media.DrawingContext)\n  - System.Windows.Controls.Panel.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Controls.Panel.SetZIndex(System.Windows.UIElement,System.Int32)\n  - System.Windows.Controls.Panel.ShouldSerializeChildren\n  - System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  - System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddText(System.String)\n  - System.Windows.Controls.Panel.VisualChildrenCount\n  - System.Windows.Controls.Panel.ZIndexProperty\n  - System.Windows.Controls.VirtualizingPanel.AddInternalChild(System.Windows.UIElement)\n  - System.Windows.Controls.VirtualizingPanel.BringIndexIntoViewPublic(System.Int32)\n  - System.Windows.Controls.VirtualizingPanel.CacheLengthProperty\n  - System.Windows.Controls.VirtualizingPanel.CacheLengthUnitProperty\n  - System.Windows.Controls.VirtualizingPanel.CanHierarchicallyScrollAndVirtualize\n  - System.Windows.Controls.VirtualizingPanel.GetCacheLength(System.Windows.DependencyObject)\n  - System.Windows.Controls.VirtualizingPanel.GetCacheLengthUnit(System.Windows.DependencyObject)\n  - System.Windows.Controls.VirtualizingPanel.GetIsContainerVirtualizable(System.Windows.DependencyObject)\n  - System.Windows.Controls.VirtualizingPanel.GetIsVirtualizing(System.Windows.DependencyObject)\n  - System.Windows.Controls.VirtualizingPanel.GetIsVirtualizingWhenGrouping(System.Windows.DependencyObject)\n  - System.Windows.Controls.VirtualizingPanel.GetItemOffset(System.Windows.UIElement)\n  - System.Windows.Controls.VirtualizingPanel.GetScrollUnit(System.Windows.DependencyObject)\n  - System.Windows.Controls.VirtualizingPanel.GetVirtualizationMode(System.Windows.DependencyObject)\n  - System.Windows.Controls.VirtualizingPanel.InsertInternalChild(System.Int32,System.Windows.UIElement)\n  - System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizableProperty\n  - System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGroupingProperty\n  - System.Windows.Controls.VirtualizingPanel.ItemContainerGenerator\n  - System.Windows.Controls.VirtualizingPanel.RemoveInternalChildRange(System.Int32,System.Int32)\n  - System.Windows.Controls.VirtualizingPanel.ScrollUnitProperty\n  - System.Windows.Controls.VirtualizingPanel.SetCacheLength(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationCacheLength)\n  - System.Windows.Controls.VirtualizingPanel.SetCacheLengthUnit(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationCacheLengthUnit)\n  - System.Windows.Controls.VirtualizingPanel.SetIsContainerVirtualizable(System.Windows.DependencyObject,System.Boolean)\n  - System.Windows.Controls.VirtualizingPanel.SetIsVirtualizing(System.Windows.DependencyObject,System.Boolean)\n  - System.Windows.Controls.VirtualizingPanel.SetIsVirtualizingWhenGrouping(System.Windows.DependencyObject,System.Boolean)\n  - System.Windows.Controls.VirtualizingPanel.SetScrollUnit(System.Windows.DependencyObject,System.Windows.Controls.ScrollUnit)\n  - System.Windows.Controls.VirtualizingPanel.SetVirtualizationMode(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationMode)\n  - System.Windows.Controls.VirtualizingPanel.ShouldItemsChangeAffectLayout(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.ActualHeight\n  - System.Windows.FrameworkElement.ActualHeightProperty\n  - System.Windows.FrameworkElement.ActualWidth\n  - System.Windows.FrameworkElement.ActualWidthProperty\n  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.ApplyTemplate\n  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)\n  - System.Windows.FrameworkElement.BeginInit\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  - System.Windows.FrameworkElement.BindingGroup\n  - System.Windows.FrameworkElement.BindingGroupProperty\n  - System.Windows.FrameworkElement.BringIntoView\n  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)\n  - System.Windows.FrameworkElement.ContextMenu\n  - System.Windows.FrameworkElement.ContextMenuClosing\n  - System.Windows.FrameworkElement.ContextMenuClosingEvent\n  - System.Windows.FrameworkElement.ContextMenuOpening\n  - System.Windows.FrameworkElement.ContextMenuOpeningEvent\n  - System.Windows.FrameworkElement.ContextMenuProperty\n  - System.Windows.FrameworkElement.Cursor\n  - System.Windows.FrameworkElement.CursorProperty\n  - System.Windows.FrameworkElement.DataContext\n  - System.Windows.FrameworkElement.DataContextChanged\n  - System.Windows.FrameworkElement.DataContextProperty\n  - System.Windows.FrameworkElement.DefaultStyleKey\n  - System.Windows.FrameworkElement.DefaultStyleKeyProperty\n  - System.Windows.FrameworkElement.EndInit\n  - System.Windows.FrameworkElement.FindName(System.String)\n  - System.Windows.FrameworkElement.FindResource(System.Object)\n  - System.Windows.FrameworkElement.FlowDirection\n  - System.Windows.FrameworkElement.FlowDirectionProperty\n  - System.Windows.FrameworkElement.FocusVisualStyle\n  - System.Windows.FrameworkElement.FocusVisualStyleProperty\n  - System.Windows.FrameworkElement.ForceCursor\n  - System.Windows.FrameworkElement.ForceCursorProperty\n  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)\n  - System.Windows.FrameworkElement.GetTemplateChild(System.String)\n  - System.Windows.FrameworkElement.GetUIParentCore\n  - System.Windows.FrameworkElement.Height\n  - System.Windows.FrameworkElement.HeightProperty\n  - System.Windows.FrameworkElement.HorizontalAlignment\n  - System.Windows.FrameworkElement.HorizontalAlignmentProperty\n  - System.Windows.FrameworkElement.InheritanceBehavior\n  - System.Windows.FrameworkElement.Initialized\n  - System.Windows.FrameworkElement.InputScope\n  - System.Windows.FrameworkElement.InputScopeProperty\n  - System.Windows.FrameworkElement.IsInitialized\n  - System.Windows.FrameworkElement.IsLoaded\n  - System.Windows.FrameworkElement.Language\n  - System.Windows.FrameworkElement.LanguageProperty\n  - System.Windows.FrameworkElement.LayoutTransform\n  - System.Windows.FrameworkElement.LayoutTransformProperty\n  - System.Windows.FrameworkElement.Loaded\n  - System.Windows.FrameworkElement.LoadedEvent\n  - System.Windows.FrameworkElement.Margin\n  - System.Windows.FrameworkElement.MarginProperty\n  - System.Windows.FrameworkElement.MaxHeight\n  - System.Windows.FrameworkElement.MaxHeightProperty\n  - System.Windows.FrameworkElement.MaxWidth\n  - System.Windows.FrameworkElement.MaxWidthProperty\n  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)\n  - System.Windows.FrameworkElement.MinHeight\n  - System.Windows.FrameworkElement.MinHeightProperty\n  - System.Windows.FrameworkElement.MinWidth\n  - System.Windows.FrameworkElement.MinWidthProperty\n  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)\n  - System.Windows.FrameworkElement.Name\n  - System.Windows.FrameworkElement.NameProperty\n  - System.Windows.FrameworkElement.OnApplyTemplate\n  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)\n  - System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)\n  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.OverridesDefaultStyle\n  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty\n  - System.Windows.FrameworkElement.Parent\n  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)\n  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)\n  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.RequestBringIntoView\n  - System.Windows.FrameworkElement.RequestBringIntoViewEvent\n  - System.Windows.FrameworkElement.Resources\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)\n  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.FrameworkElement.ShouldSerializeResources\n  - System.Windows.FrameworkElement.ShouldSerializeStyle\n  - System.Windows.FrameworkElement.ShouldSerializeTriggers\n  - System.Windows.FrameworkElement.SizeChanged\n  - System.Windows.FrameworkElement.SizeChangedEvent\n  - System.Windows.FrameworkElement.SourceUpdated\n  - System.Windows.FrameworkElement.Style\n  - System.Windows.FrameworkElement.StyleProperty\n  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  - System.Windows.FrameworkElement.Tag\n  - System.Windows.FrameworkElement.TagProperty\n  - System.Windows.FrameworkElement.TargetUpdated\n  - System.Windows.FrameworkElement.TemplatedParent\n  - System.Windows.FrameworkElement.ToolTip\n  - System.Windows.FrameworkElement.ToolTipClosing\n  - System.Windows.FrameworkElement.ToolTipClosingEvent\n  - System.Windows.FrameworkElement.ToolTipOpening\n  - System.Windows.FrameworkElement.ToolTipOpeningEvent\n  - System.Windows.FrameworkElement.ToolTipProperty\n  - System.Windows.FrameworkElement.Triggers\n  - System.Windows.FrameworkElement.TryFindResource(System.Object)\n  - System.Windows.FrameworkElement.Unloaded\n  - System.Windows.FrameworkElement.UnloadedEvent\n  - System.Windows.FrameworkElement.UnregisterName(System.String)\n  - System.Windows.FrameworkElement.UpdateDefaultStyle\n  - System.Windows.FrameworkElement.UseLayoutRounding\n  - System.Windows.FrameworkElement.UseLayoutRoundingProperty\n  - System.Windows.FrameworkElement.VerticalAlignment\n  - System.Windows.FrameworkElement.VerticalAlignmentProperty\n  - System.Windows.FrameworkElement.Width\n  - System.Windows.FrameworkElement.WidthProperty\n  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)\n  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.VisualBitmapEffect\n  - System.Windows.Media.Visual.VisualBitmapEffectInput\n  - System.Windows.Media.Visual.VisualBitmapScalingMode\n  - System.Windows.Media.Visual.VisualCacheMode\n  - System.Windows.Media.Visual.VisualClearTypeHint\n  - System.Windows.Media.Visual.VisualClip\n  - System.Windows.Media.Visual.VisualEdgeMode\n  - System.Windows.Media.Visual.VisualEffect\n  - System.Windows.Media.Visual.VisualOffset\n  - System.Windows.Media.Visual.VisualOpacity\n  - System.Windows.Media.Visual.VisualOpacityMask\n  - System.Windows.Media.Visual.VisualParent\n  - System.Windows.Media.Visual.VisualScrollableAreaClip\n  - System.Windows.Media.Visual.VisualTextHintingMode\n  - System.Windows.Media.Visual.VisualTextRenderingMode\n  - System.Windows.Media.Visual.VisualTransform\n  - System.Windows.Media.Visual.VisualXSnappingGuidelines\n  - System.Windows.Media.Visual.VisualYSnappingGuidelines\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.AllowDrop\n  - System.Windows.UIElement.AllowDropProperty\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.AreAnyTouchesCaptured\n  - System.Windows.UIElement.AreAnyTouchesCapturedProperty\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithin\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOver\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty\n  - System.Windows.UIElement.AreAnyTouchesOver\n  - System.Windows.UIElement.AreAnyTouchesOverProperty\n  - System.Windows.UIElement.Arrange(System.Windows.Rect)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.BitmapEffect\n  - System.Windows.UIElement.BitmapEffectInput\n  - System.Windows.UIElement.BitmapEffectInputProperty\n  - System.Windows.UIElement.BitmapEffectProperty\n  - System.Windows.UIElement.CacheMode\n  - System.Windows.UIElement.CacheModeProperty\n  - System.Windows.UIElement.CaptureMouse\n  - System.Windows.UIElement.CaptureStylus\n  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.Clip\n  - System.Windows.UIElement.ClipProperty\n  - System.Windows.UIElement.ClipToBounds\n  - System.Windows.UIElement.ClipToBoundsProperty\n  - System.Windows.UIElement.CommandBindings\n  - System.Windows.UIElement.DesiredSize\n  - System.Windows.UIElement.DragEnter\n  - System.Windows.UIElement.DragEnterEvent\n  - System.Windows.UIElement.DragLeave\n  - System.Windows.UIElement.DragLeaveEvent\n  - System.Windows.UIElement.DragOver\n  - System.Windows.UIElement.DragOverEvent\n  - System.Windows.UIElement.Drop\n  - System.Windows.UIElement.DropEvent\n  - System.Windows.UIElement.Effect\n  - System.Windows.UIElement.EffectProperty\n  - System.Windows.UIElement.Focus\n  - System.Windows.UIElement.Focusable\n  - System.Windows.UIElement.FocusableChanged\n  - System.Windows.UIElement.FocusableProperty\n  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.UIElement.GiveFeedback\n  - System.Windows.UIElement.GiveFeedbackEvent\n  - System.Windows.UIElement.GotFocus\n  - System.Windows.UIElement.GotFocusEvent\n  - System.Windows.UIElement.GotKeyboardFocus\n  - System.Windows.UIElement.GotKeyboardFocusEvent\n  - System.Windows.UIElement.GotMouseCapture\n  - System.Windows.UIElement.GotMouseCaptureEvent\n  - System.Windows.UIElement.GotStylusCapture\n  - System.Windows.UIElement.GotStylusCaptureEvent\n  - System.Windows.UIElement.GotTouchCapture\n  - System.Windows.UIElement.GotTouchCaptureEvent\n  - System.Windows.UIElement.HasAnimatedProperties\n  - System.Windows.UIElement.HasEffectiveKeyboardFocus\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)\n  - System.Windows.UIElement.InputBindings\n  - System.Windows.UIElement.InputHitTest(System.Windows.Point)\n  - System.Windows.UIElement.InvalidateArrange\n  - System.Windows.UIElement.InvalidateMeasure\n  - System.Windows.UIElement.InvalidateVisual\n  - System.Windows.UIElement.IsArrangeValid\n  - System.Windows.UIElement.IsEnabled\n  - System.Windows.UIElement.IsEnabledChanged\n  - System.Windows.UIElement.IsEnabledCore\n  - System.Windows.UIElement.IsEnabledProperty\n  - System.Windows.UIElement.IsFocused\n  - System.Windows.UIElement.IsFocusedProperty\n  - System.Windows.UIElement.IsHitTestVisible\n  - System.Windows.UIElement.IsHitTestVisibleChanged\n  - System.Windows.UIElement.IsHitTestVisibleProperty\n  - System.Windows.UIElement.IsInputMethodEnabled\n  - System.Windows.UIElement.IsKeyboardFocused\n  - System.Windows.UIElement.IsKeyboardFocusedChanged\n  - System.Windows.UIElement.IsKeyboardFocusedProperty\n  - System.Windows.UIElement.IsKeyboardFocusWithin\n  - System.Windows.UIElement.IsKeyboardFocusWithinChanged\n  - System.Windows.UIElement.IsKeyboardFocusWithinProperty\n  - System.Windows.UIElement.IsManipulationEnabled\n  - System.Windows.UIElement.IsManipulationEnabledProperty\n  - System.Windows.UIElement.IsMeasureValid\n  - System.Windows.UIElement.IsMouseCaptured\n  - System.Windows.UIElement.IsMouseCapturedChanged\n  - System.Windows.UIElement.IsMouseCapturedProperty\n  - System.Windows.UIElement.IsMouseCaptureWithin\n  - System.Windows.UIElement.IsMouseCaptureWithinChanged\n  - System.Windows.UIElement.IsMouseCaptureWithinProperty\n  - System.Windows.UIElement.IsMouseDirectlyOver\n  - System.Windows.UIElement.IsMouseDirectlyOverChanged\n  - System.Windows.UIElement.IsMouseDirectlyOverProperty\n  - System.Windows.UIElement.IsMouseOver\n  - System.Windows.UIElement.IsMouseOverProperty\n  - System.Windows.UIElement.IsStylusCaptured\n  - System.Windows.UIElement.IsStylusCapturedChanged\n  - System.Windows.UIElement.IsStylusCapturedProperty\n  - System.Windows.UIElement.IsStylusCaptureWithin\n  - System.Windows.UIElement.IsStylusCaptureWithinChanged\n  - System.Windows.UIElement.IsStylusCaptureWithinProperty\n  - System.Windows.UIElement.IsStylusDirectlyOver\n  - System.Windows.UIElement.IsStylusDirectlyOverChanged\n  - System.Windows.UIElement.IsStylusDirectlyOverProperty\n  - System.Windows.UIElement.IsStylusOver\n  - System.Windows.UIElement.IsStylusOverProperty\n  - System.Windows.UIElement.IsVisible\n  - System.Windows.UIElement.IsVisibleChanged\n  - System.Windows.UIElement.IsVisibleProperty\n  - System.Windows.UIElement.KeyDown\n  - System.Windows.UIElement.KeyDownEvent\n  - System.Windows.UIElement.KeyUp\n  - System.Windows.UIElement.KeyUpEvent\n  - System.Windows.UIElement.LayoutUpdated\n  - System.Windows.UIElement.LostFocus\n  - System.Windows.UIElement.LostFocusEvent\n  - System.Windows.UIElement.LostKeyboardFocus\n  - System.Windows.UIElement.LostKeyboardFocusEvent\n  - System.Windows.UIElement.LostMouseCapture\n  - System.Windows.UIElement.LostMouseCaptureEvent\n  - System.Windows.UIElement.LostStylusCapture\n  - System.Windows.UIElement.LostStylusCaptureEvent\n  - System.Windows.UIElement.LostTouchCapture\n  - System.Windows.UIElement.LostTouchCaptureEvent\n  - System.Windows.UIElement.ManipulationBoundaryFeedback\n  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent\n  - System.Windows.UIElement.ManipulationCompleted\n  - System.Windows.UIElement.ManipulationCompletedEvent\n  - System.Windows.UIElement.ManipulationDelta\n  - System.Windows.UIElement.ManipulationDeltaEvent\n  - System.Windows.UIElement.ManipulationInertiaStarting\n  - System.Windows.UIElement.ManipulationInertiaStartingEvent\n  - System.Windows.UIElement.ManipulationStarted\n  - System.Windows.UIElement.ManipulationStartedEvent\n  - System.Windows.UIElement.ManipulationStarting\n  - System.Windows.UIElement.ManipulationStartingEvent\n  - System.Windows.UIElement.Measure(System.Windows.Size)\n  - System.Windows.UIElement.MouseDown\n  - System.Windows.UIElement.MouseDownEvent\n  - System.Windows.UIElement.MouseEnter\n  - System.Windows.UIElement.MouseEnterEvent\n  - System.Windows.UIElement.MouseLeave\n  - System.Windows.UIElement.MouseLeaveEvent\n  - System.Windows.UIElement.MouseLeftButtonDown\n  - System.Windows.UIElement.MouseLeftButtonDownEvent\n  - System.Windows.UIElement.MouseLeftButtonUp\n  - System.Windows.UIElement.MouseLeftButtonUpEvent\n  - System.Windows.UIElement.MouseMove\n  - System.Windows.UIElement.MouseMoveEvent\n  - System.Windows.UIElement.MouseRightButtonDown\n  - System.Windows.UIElement.MouseRightButtonDownEvent\n  - System.Windows.UIElement.MouseRightButtonUp\n  - System.Windows.UIElement.MouseRightButtonUpEvent\n  - System.Windows.UIElement.MouseUp\n  - System.Windows.UIElement.MouseUpEvent\n  - System.Windows.UIElement.MouseWheel\n  - System.Windows.UIElement.MouseWheelEvent\n  - System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)\n  - System.Windows.UIElement.OnCreateAutomationPeer\n  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)\n  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)\n  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)\n  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)\n  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)\n  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)\n  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.Opacity\n  - System.Windows.UIElement.OpacityMask\n  - System.Windows.UIElement.OpacityMaskProperty\n  - System.Windows.UIElement.OpacityProperty\n  - System.Windows.UIElement.PersistId\n  - System.Windows.UIElement.PreviewDragEnter\n  - System.Windows.UIElement.PreviewDragEnterEvent\n  - System.Windows.UIElement.PreviewDragLeave\n  - System.Windows.UIElement.PreviewDragLeaveEvent\n  - System.Windows.UIElement.PreviewDragOver\n  - System.Windows.UIElement.PreviewDragOverEvent\n  - System.Windows.UIElement.PreviewDrop\n  - System.Windows.UIElement.PreviewDropEvent\n  - System.Windows.UIElement.PreviewGiveFeedback\n  - System.Windows.UIElement.PreviewGiveFeedbackEvent\n  - System.Windows.UIElement.PreviewGotKeyboardFocus\n  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewKeyDown\n  - System.Windows.UIElement.PreviewKeyDownEvent\n  - System.Windows.UIElement.PreviewKeyUp\n  - System.Windows.UIElement.PreviewKeyUpEvent\n  - System.Windows.UIElement.PreviewLostKeyboardFocus\n  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewMouseDown\n  - System.Windows.UIElement.PreviewMouseDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonDown\n  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonUp\n  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseMove\n  - System.Windows.UIElement.PreviewMouseMoveEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonDown\n  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonUp\n  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseUp\n  - System.Windows.UIElement.PreviewMouseUpEvent\n  - System.Windows.UIElement.PreviewMouseWheel\n  - System.Windows.UIElement.PreviewMouseWheelEvent\n  - System.Windows.UIElement.PreviewQueryContinueDrag\n  - System.Windows.UIElement.PreviewQueryContinueDragEvent\n  - System.Windows.UIElement.PreviewStylusButtonDown\n  - System.Windows.UIElement.PreviewStylusButtonDownEvent\n  - System.Windows.UIElement.PreviewStylusButtonUp\n  - System.Windows.UIElement.PreviewStylusButtonUpEvent\n  - System.Windows.UIElement.PreviewStylusDown\n  - System.Windows.UIElement.PreviewStylusDownEvent\n  - System.Windows.UIElement.PreviewStylusInAirMove\n  - System.Windows.UIElement.PreviewStylusInAirMoveEvent\n  - System.Windows.UIElement.PreviewStylusInRange\n  - System.Windows.UIElement.PreviewStylusInRangeEvent\n  - System.Windows.UIElement.PreviewStylusMove\n  - System.Windows.UIElement.PreviewStylusMoveEvent\n  - System.Windows.UIElement.PreviewStylusOutOfRange\n  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent\n  - System.Windows.UIElement.PreviewStylusSystemGesture\n  - System.Windows.UIElement.PreviewStylusSystemGestureEvent\n  - System.Windows.UIElement.PreviewStylusUp\n  - System.Windows.UIElement.PreviewStylusUpEvent\n  - System.Windows.UIElement.PreviewTextInput\n  - System.Windows.UIElement.PreviewTextInputEvent\n  - System.Windows.UIElement.PreviewTouchDown\n  - System.Windows.UIElement.PreviewTouchDownEvent\n  - System.Windows.UIElement.PreviewTouchMove\n  - System.Windows.UIElement.PreviewTouchMoveEvent\n  - System.Windows.UIElement.PreviewTouchUp\n  - System.Windows.UIElement.PreviewTouchUpEvent\n  - System.Windows.UIElement.QueryContinueDrag\n  - System.Windows.UIElement.QueryContinueDragEvent\n  - System.Windows.UIElement.QueryCursor\n  - System.Windows.UIElement.QueryCursorEvent\n  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.ReleaseAllTouchCaptures\n  - System.Windows.UIElement.ReleaseMouseCapture\n  - System.Windows.UIElement.ReleaseStylusCapture\n  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.RenderSize\n  - System.Windows.UIElement.RenderTransform\n  - System.Windows.UIElement.RenderTransformOrigin\n  - System.Windows.UIElement.RenderTransformOriginProperty\n  - System.Windows.UIElement.RenderTransformProperty\n  - System.Windows.UIElement.ShouldSerializeCommandBindings\n  - System.Windows.UIElement.ShouldSerializeInputBindings\n  - System.Windows.UIElement.SnapsToDevicePixels\n  - System.Windows.UIElement.SnapsToDevicePixelsProperty\n  - System.Windows.UIElement.StylusButtonDown\n  - System.Windows.UIElement.StylusButtonDownEvent\n  - System.Windows.UIElement.StylusButtonUp\n  - System.Windows.UIElement.StylusButtonUpEvent\n  - System.Windows.UIElement.StylusDown\n  - System.Windows.UIElement.StylusDownEvent\n  - System.Windows.UIElement.StylusEnter\n  - System.Windows.UIElement.StylusEnterEvent\n  - System.Windows.UIElement.StylusInAirMove\n  - System.Windows.UIElement.StylusInAirMoveEvent\n  - System.Windows.UIElement.StylusInRange\n  - System.Windows.UIElement.StylusInRangeEvent\n  - System.Windows.UIElement.StylusLeave\n  - System.Windows.UIElement.StylusLeaveEvent\n  - System.Windows.UIElement.StylusMove\n  - System.Windows.UIElement.StylusMoveEvent\n  - System.Windows.UIElement.StylusOutOfRange\n  - System.Windows.UIElement.StylusOutOfRangeEvent\n  - System.Windows.UIElement.StylusPlugIns\n  - System.Windows.UIElement.StylusSystemGesture\n  - System.Windows.UIElement.StylusSystemGestureEvent\n  - System.Windows.UIElement.StylusUp\n  - System.Windows.UIElement.StylusUpEvent\n  - System.Windows.UIElement.TextInput\n  - System.Windows.UIElement.TextInputEvent\n  - System.Windows.UIElement.TouchDown\n  - System.Windows.UIElement.TouchDownEvent\n  - System.Windows.UIElement.TouchEnter\n  - System.Windows.UIElement.TouchEnterEvent\n  - System.Windows.UIElement.TouchesCaptured\n  - System.Windows.UIElement.TouchesCapturedWithin\n  - System.Windows.UIElement.TouchesDirectlyOver\n  - System.Windows.UIElement.TouchesOver\n  - System.Windows.UIElement.TouchLeave\n  - System.Windows.UIElement.TouchLeaveEvent\n  - System.Windows.UIElement.TouchMove\n  - System.Windows.UIElement.TouchMoveEvent\n  - System.Windows.UIElement.TouchUp\n  - System.Windows.UIElement.TouchUpEvent\n  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)\n  - System.Windows.UIElement.Uid\n  - System.Windows.UIElement.UidProperty\n  - System.Windows.UIElement.UpdateLayout\n  - System.Windows.UIElement.Visibility\n  - System.Windows.UIElement.VisibilityProperty\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.#ctor\n  id: '#ctor'\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: VirtualizingStackPanel()\n  nameWithType: VirtualizingStackPanel.VirtualizingStackPanel()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.VirtualizingStackPanel()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref> class.\n  syntax:\n    content: public VirtualizingStackPanel ();\n    parameters: []\n  overload: System.Windows.Controls.VirtualizingStackPanel.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)\n  id: AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: AddCleanUpVirtualizedItemHandler(DependencyObject,CleanUpVirtualizedItemEventHandler)\n  nameWithType: VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(DependencyObject,CleanUpVirtualizedItemEventHandler)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(DependencyObject,CleanUpVirtualizedItemEventHandler)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Adds an event handler for the <xref:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem> attached event.\n  remarks: The standard layout system creates item containers and computes layout for each item associated with a list control. The word \"virtualize\" refers to a technique by which a subset of [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements are generated from a larger number of data items based on which items are visible on-screen. Generating many [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements when only a few elements might be on the screen can adversely affect the performance of your application. The <xref:System.Windows.Controls.VirtualizingStackPanel> calculates the number of visible items and works with the <xref:System.Windows.Controls.ItemContainerGenerator> from an <xref:System.Windows.Controls.ItemsControl> (such as <xref:System.Windows.Controls.ListBox> or <xref:System.Windows.Controls.ListView>) to create [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements only for visible items.\n  syntax:\n    content: public static void AddCleanUpVirtualizedItemHandler (System.Windows.DependencyObject element, System.Windows.Controls.CleanUpVirtualizedItemEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.DependencyObject\"></xref> that is listening for this event.\n    - id: handler\n      type: System.Windows.Controls.CleanUpVirtualizedItemEventHandler\n      description: The event handler that is to be added.\n  overload: System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)\n  id: ArrangeOverride(System.Windows.Size)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: ArrangeOverride(Size)\n  nameWithType: VirtualizingStackPanel.ArrangeOverride(Size)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Arranges the content of a <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref> element.\n  remarks: You can override the ArrangeOverrideand <xref:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride%2A> methods in a derived class for custom layout behavior.\n  syntax:\n    content: protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);\n    parameters:\n    - id: arrangeSize\n      type: System.Windows.Size\n      description: The <xref href=\"System.Windows.Size\"></xref> that this element should use to arrange its child elements.\n    return:\n      type: System.Windows.Size\n      description: The <xref href=\"System.Windows.Size\"></xref> that represents the arranged size of this <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref> element and its child elements.\n  overload: System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView(System.Int32)\n  id: BringIndexIntoView(System.Int32)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: BringIndexIntoView(Int32)\n  nameWithType: VirtualizingStackPanel.BringIndexIntoView(Int32)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Generates the item at the specified index position and brings it into view.\n  syntax:\n    content: protected override void BringIndexIntoView (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The position of the item to generate and make visible.\n  overload: System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>index</code> position does not exist in the child collection.\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.CanHierarchicallyScrollAndVirtualizeCore\n  id: CanHierarchicallyScrollAndVirtualizeCore\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: CanHierarchicallyScrollAndVirtualizeCore\n  nameWithType: VirtualizingStackPanel.CanHierarchicallyScrollAndVirtualizeCore\n  fullName: System.Windows.Controls.VirtualizingStackPanel.CanHierarchicallyScrollAndVirtualizeCore\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets value that indicates whether the <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref> can virtualize items that are grouped or organized in a hierarchy.\n  syntax:\n    content: protected override bool CanHierarchicallyScrollAndVirtualizeCore { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> in all cases.\n  overload: System.Windows.Controls.VirtualizingStackPanel.CanHierarchicallyScrollAndVirtualizeCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll\n  id: CanHorizontallyScroll\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: CanHorizontallyScroll\n  nameWithType: VirtualizingStackPanel.CanHorizontallyScroll\n  fullName: System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that indicates whether a <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref> can scroll in the horizontal dimension.\n  syntax:\n    content: public bool CanHorizontallyScroll { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if content can scroll in the horizontal dimension; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll\n  id: CanVerticallyScroll\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: CanVerticallyScroll\n  nameWithType: VirtualizingStackPanel.CanVerticallyScroll\n  fullName: System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that indicates whether content can scroll in the vertical dimension.\n  syntax:\n    content: public bool CanVerticallyScroll { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if content can scroll in the vertical dimension; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent\n  id: CleanUpVirtualizedItemEvent\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: CleanUpVirtualizedItemEvent\n  nameWithType: VirtualizingStackPanel.CleanUpVirtualizedItemEvent\n  fullName: System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem> attached event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent CleanUpVirtualizedItemEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.ExtentHeight\n  id: ExtentHeight\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: ExtentHeight\n  nameWithType: VirtualizingStackPanel.ExtentHeight\n  fullName: System.Windows.Controls.VirtualizingStackPanel.ExtentHeight\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that contains the vertical size of the extent.\n  syntax:\n    content: public double ExtentHeight { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the vertical size of the extent. The default is 0.0.\n  overload: System.Windows.Controls.VirtualizingStackPanel.ExtentHeight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.ExtentWidth\n  id: ExtentWidth\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: ExtentWidth\n  nameWithType: VirtualizingStackPanel.ExtentWidth\n  fullName: System.Windows.Controls.VirtualizingStackPanel.ExtentWidth\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that contains the horizontal size of the extent.\n  syntax:\n    content: public double ExtentWidth { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the horizontal size of the extent. The default is 0.0.\n  overload: System.Windows.Controls.VirtualizingStackPanel.ExtentWidth*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.GetItemOffsetCore(System.Windows.UIElement)\n  id: GetItemOffsetCore(System.Windows.UIElement)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: GetItemOffsetCore(UIElement)\n  nameWithType: VirtualizingStackPanel.GetItemOffsetCore(UIElement)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.GetItemOffsetCore(UIElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the position of the specified item, relative to the <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref>.\n  syntax:\n    content: protected override double GetItemOffsetCore (System.Windows.UIElement child);\n    parameters:\n    - id: child\n      type: System.Windows.UIElement\n      description: The element whose position to find.\n    return:\n      type: System.Double\n      description: The position of the specified item, relative to the <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref>.\n  overload: System.Windows.Controls.VirtualizingStackPanel.GetItemOffsetCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.HasLogicalOrientation\n  id: HasLogicalOrientation\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: HasLogicalOrientation\n  nameWithType: VirtualizingStackPanel.HasLogicalOrientation\n  fullName: System.Windows.Controls.VirtualizingStackPanel.HasLogicalOrientation\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that indicates if this <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref> has a vertical or horizontal orientation.\n  remarks: This property always returns `true` because a <xref:System.Windows.Controls.VirtualizingStackPanel> must have either a vertical or horizontal orientation.\n  syntax:\n    content: protected override bool HasLogicalOrientation { get; }\n    return:\n      type: System.Boolean\n      description: This property always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Controls.VirtualizingStackPanel.HasLogicalOrientation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset\n  id: HorizontalOffset\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: HorizontalOffset\n  nameWithType: VirtualizingStackPanel.HorizontalOffset\n  fullName: System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that contains the horizontal offset of the scrolled content.\n  syntax:\n    content: public double HorizontalOffset { get; }\n    return:\n      type: System.Double\n      description: <xref:System.Double> that represents the horizontal offset of the scrolled content. The default is 0.0.\n  overload: System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty\n  id: IsVirtualizingProperty\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: IsVirtualizingProperty\n  nameWithType: VirtualizingStackPanel.IsVirtualizingProperty\n  fullName: System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.VirtualizingPanel.IsVirtualizing*> attached property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsVirtualizingProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.LineDown\n  id: LineDown\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: LineDown()\n  nameWithType: VirtualizingStackPanel.LineDown()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.LineDown()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content downward by one logical unit.\n  remarks: \"You can override this method in a derived class to change how the stack panel scrolls content downward. For example, you can scroll content down by two units instead of one.  \\n  \\n If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.\"\n  syntax:\n    content: public virtual void LineDown ();\n    parameters: []\n  overload: System.Windows.Controls.VirtualizingStackPanel.LineDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.LineLeft\n  id: LineLeft\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: LineLeft()\n  nameWithType: VirtualizingStackPanel.LineLeft()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.LineLeft()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content to the left by one logical unit.\n  remarks: \"You can override this method in a derived class to change how the stack panel scrolls content downward. For example, you can scroll content down by two units instead of one.  \\n  \\n If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.\"\n  syntax:\n    content: public virtual void LineLeft ();\n    parameters: []\n  overload: System.Windows.Controls.VirtualizingStackPanel.LineLeft*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.LineRight\n  id: LineRight\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: LineRight()\n  nameWithType: VirtualizingStackPanel.LineRight()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.LineRight()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content to the right by one logical unit.\n  remarks: \"You can override this method in a derived class to change how the stack panel scrolls content to the right. For example, you can scroll content right by two units instead of one.  \\n  \\n If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.\"\n  syntax:\n    content: public virtual void LineRight ();\n    parameters: []\n  overload: System.Windows.Controls.VirtualizingStackPanel.LineRight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.LineUp\n  id: LineUp\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: LineUp()\n  nameWithType: VirtualizingStackPanel.LineUp()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.LineUp()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content upward by one logical unit.\n  remarks: \"You can override this method in a derived class to change how the stack panel scrolls content upward. For example, you can scroll up two units instead of one.  \\n  \\n If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.\"\n  syntax:\n    content: public virtual void LineUp ();\n    parameters: []\n  overload: System.Windows.Controls.VirtualizingStackPanel.LineUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.LogicalOrientation\n  id: LogicalOrientation\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: LogicalOrientation\n  nameWithType: VirtualizingStackPanel.LogicalOrientation\n  fullName: System.Windows.Controls.VirtualizingStackPanel.LogicalOrientation\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that represents the <xref href=\"System.Windows.Controls.Orientation\"></xref> of the <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref>.\n  syntax:\n    content: protected override System.Windows.Controls.Orientation LogicalOrientation { get; }\n    return:\n      type: System.Windows.Controls.Orientation\n      description: An <xref href=\"System.Windows.Controls.Orientation\"></xref> value.\n  overload: System.Windows.Controls.VirtualizingStackPanel.LogicalOrientation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)\n  id: MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: MakeVisible(Visual,Rect)\n  nameWithType: VirtualizingStackPanel.MakeVisible(Visual,Rect)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.MakeVisible(Visual,Rect)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls to the specified coordinates and makes that portion of a <xref href=\"System.Windows.Media.Visual\"></xref> visible.\n  syntax:\n    content: public System.Windows.Rect MakeVisible (System.Windows.Media.Visual visual, System.Windows.Rect rectangle);\n    parameters:\n    - id: visual\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> that becomes visible.\n    - id: rectangle\n      type: System.Windows.Rect\n      description: A <xref href=\"System.Windows.Rect\"></xref> that represents the coordinate space within a <xref href=\"System.Windows.Media.Visual\"></xref>.\n    return:\n      type: System.Windows.Rect\n      description: A <xref href=\"System.Windows.Rect\"></xref> that is visible.\n  overload: System.Windows.Controls.VirtualizingStackPanel.MakeVisible*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)\n  id: MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: MeasureOverride(Size)\n  nameWithType: VirtualizingStackPanel.MeasureOverride(Size)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Measures the child elements of a <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref> in anticipation of arranging them during the <xref:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride*> pass.\n  remarks: When scrolling, <xref:System.Windows.Controls.VirtualizingStackPanel> does not grow in layout size, but effectively adds its descendants on a z-plane, which is normally clipped by a parent element (typically a <xref:System.Windows.Controls.ScrollContentPresenter>) to the size of the stack.\n  syntax:\n    content: protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);\n    parameters:\n    - id: constraint\n      type: System.Windows.Size\n      description: An upper limit <xref href=\"System.Windows.Size\"></xref> that should not be exceeded.\n    return:\n      type: System.Windows.Size\n      description: The <xref href=\"System.Windows.Size\"></xref> that represents the desired size of the element.\n  overload: System.Windows.Controls.VirtualizingStackPanel.MeasureOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown\n  id: MouseWheelDown\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: MouseWheelDown()\n  nameWithType: VirtualizingStackPanel.MouseWheelDown()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content logically downward in response to a downward click of the mouse wheel button.\n  remarks: \"You can override MouseWheelDown in a derived class to change how the stack panel responds to the mouse wheel down action.  \\n  \\n If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.\"\n  syntax:\n    content: public virtual void MouseWheelDown ();\n    parameters: []\n  overload: System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft\n  id: MouseWheelLeft\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: MouseWheelLeft()\n  nameWithType: VirtualizingStackPanel.MouseWheelLeft()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content logically to the left in response to a left click of the mouse wheel button.\n  remarks: \"You can override MouseWheelLeft in a derived class to change how the stack panel responds to the mouse wheel left action.  \\n  \\n If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.\"\n  syntax:\n    content: public virtual void MouseWheelLeft ();\n    parameters: []\n  overload: System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight\n  id: MouseWheelRight\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: MouseWheelRight()\n  nameWithType: VirtualizingStackPanel.MouseWheelRight()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content logically to the right in response to a right click of the mouse wheel button.\n  remarks: \"You can override MouseWheelRight in a derived class to change how the stack panel responds to the mouse wheel right action.  \\n  \\n If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.\"\n  syntax:\n    content: public virtual void MouseWheelRight ();\n    parameters: []\n  overload: System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp\n  id: MouseWheelUp\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: MouseWheelUp()\n  nameWithType: VirtualizingStackPanel.MouseWheelUp()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content logically upward in response to an upward click of the mouse wheel button.\n  remarks: \"You can override MouseWheelUp in a derived class to change how the stack panel responds to the mouse wheel up action.  \\n  \\n If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.\"\n  syntax:\n    content: public virtual void MouseWheelUp ();\n    parameters: []\n  overload: System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)\n  id: OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: OnCleanUpVirtualizedItem(CleanUpVirtualizedItemEventArgs)\n  nameWithType: VirtualizingStackPanel.OnCleanUpVirtualizedItem(CleanUpVirtualizedItemEventArgs)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(CleanUpVirtualizedItemEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called when an item that is hosted by the <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref> is re-virtualized.\n  remarks: The standard layout system creates item containers and computes layout for each item associated with a list control. The word \"virtualize\" refers to a technique by which a subset of [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements are generated from a larger number of data items based on which items are visible on-screen. Generating many [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements when only a few elements might be on the screen can adversely affect the performance of your application. The <xref:System.Windows.Controls.VirtualizingStackPanel> calculates the number of visible items and works with the <xref:System.Windows.Controls.ItemContainerGenerator> from an <xref:System.Windows.Controls.ItemsControl> (such as <xref:System.Windows.Controls.ListBox> or <xref:System.Windows.Controls.ListView>) to create [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements only for visible items.\n  syntax:\n    content: protected virtual void OnCleanUpVirtualizedItem (System.Windows.Controls.CleanUpVirtualizedItemEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Controls.CleanUpVirtualizedItemEventArgs\n      description: Data about the event.\n  overload: System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.OnClearChildren\n  id: OnClearChildren\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: OnClearChildren()\n  nameWithType: VirtualizingStackPanel.OnClearChildren()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.OnClearChildren()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called when the collection of child elements is cleared by the base <xref href=\"System.Windows.Controls.Panel\"></xref> class.\n  syntax:\n    content: protected override void OnClearChildren ();\n    parameters: []\n  overload: System.Windows.Controls.VirtualizingStackPanel.OnClearChildren*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)\n  id: OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: OnItemsChanged(Object,ItemsChangedEventArgs)\n  nameWithType: VirtualizingStackPanel.OnItemsChanged(Object,ItemsChangedEventArgs)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(Object,ItemsChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called when the <xref:System.Windows.Controls.ItemsControl.Items*> collection that is associated with the <xref href=\"System.Windows.Controls.ItemsControl\"></xref> for this <xref href=\"System.Windows.Controls.Panel\"></xref> changes.\n  syntax:\n    content: protected override void OnItemsChanged (object sender, System.Windows.Controls.Primitives.ItemsChangedEventArgs args);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The <xref:System.Object> that raised the event.\n    - id: args\n      type: System.Windows.Controls.Primitives.ItemsChangedEventArgs\n      description: Provides data for the <xref href=\"System.Windows.Controls.ItemContainerGenerator.ItemsChanged\"></xref> event.\n  overload: System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.OnViewportOffsetChanged(System.Windows.Vector,System.Windows.Vector)\n  id: OnViewportOffsetChanged(System.Windows.Vector,System.Windows.Vector)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: OnViewportOffsetChanged(Vector,Vector)\n  nameWithType: VirtualizingStackPanel.OnViewportOffsetChanged(Vector,Vector)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.OnViewportOffsetChanged(Vector,Vector)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called when the offset of the viewport changes as a user scrolls through content.\n  remarks: Use this method, in a derived class, to detect and respond to changes in the viewport location.\n  syntax:\n    content: protected virtual void OnViewportOffsetChanged (System.Windows.Vector oldViewportOffset, System.Windows.Vector newViewportOffset);\n    parameters:\n    - id: oldViewportOffset\n      type: System.Windows.Vector\n      description: The old offset of the viewport.\n    - id: newViewportOffset\n      type: System.Windows.Vector\n      description: The new offset of the viewport\n  overload: System.Windows.Controls.VirtualizingStackPanel.OnViewportOffsetChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)\n  id: OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: OnViewportSizeChanged(Size,Size)\n  nameWithType: VirtualizingStackPanel.OnViewportSizeChanged(Size,Size)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.OnViewportSizeChanged(Size,Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called when the size of the viewport changes.\n  remarks: Use this method, in a derived class, to detect and respond to changes in the viewport size.\n  syntax:\n    content: protected virtual void OnViewportSizeChanged (System.Windows.Size oldViewportSize, System.Windows.Size newViewportSize);\n    parameters:\n    - id: oldViewportSize\n      type: System.Windows.Size\n      description: The old size of the viewport.\n    - id: newViewportSize\n      type: System.Windows.Size\n      description: The new size of the viewport.\n  overload: System.Windows.Controls.VirtualizingStackPanel.OnViewportSizeChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.Orientation\n  id: Orientation\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: Orientation\n  nameWithType: VirtualizingStackPanel.Orientation\n  fullName: System.Windows.Controls.VirtualizingStackPanel.Orientation\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that describes the horizontal or vertical orientation of stacked content.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_Orientation\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.VirtualizingStackPanel.OrientationProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|\"\n  syntax:\n    content: public System.Windows.Controls.Orientation Orientation { get; set; }\n    return:\n      type: System.Windows.Controls.Orientation\n      description: The <xref href=\"System.Windows.Controls.Orientation\"></xref> of child content. The default is <xref href=\"System.Windows.Controls.Orientation\"></xref>.\n  overload: System.Windows.Controls.VirtualizingStackPanel.Orientation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.OrientationProperty\n  id: OrientationProperty\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: OrientationProperty\n  nameWithType: VirtualizingStackPanel.OrientationProperty\n  fullName: System.Windows.Controls.VirtualizingStackPanel.OrientationProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.VirtualizingStackPanel.Orientation*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty OrientationProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.PageDown\n  id: PageDown\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: PageDown()\n  nameWithType: VirtualizingStackPanel.PageDown()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.PageDown()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content downward by one page.\n  remarks: \"You can override PageDown in a derived class to change how the stack panel responds to the page down action.  \\n  \\n If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.\"\n  syntax:\n    content: public virtual void PageDown ();\n    parameters: []\n  overload: System.Windows.Controls.VirtualizingStackPanel.PageDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.PageLeft\n  id: PageLeft\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: PageLeft()\n  nameWithType: VirtualizingStackPanel.PageLeft()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.PageLeft()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content to the left by one page.\n  remarks: \"You can override PageLeft in a derived class to change how the stack panel responds to the page left action.  \\n  \\n If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.\"\n  syntax:\n    content: public virtual void PageLeft ();\n    parameters: []\n  overload: System.Windows.Controls.VirtualizingStackPanel.PageLeft*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.PageRight\n  id: PageRight\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: PageRight()\n  nameWithType: VirtualizingStackPanel.PageRight()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.PageRight()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content to the right by one page.\n  remarks: \"You can override PageRight in a derived class to change how the stack panel responds to the page right action.  \\n  \\n If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.\"\n  syntax:\n    content: public virtual void PageRight ();\n    parameters: []\n  overload: System.Windows.Controls.VirtualizingStackPanel.PageRight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.PageUp\n  id: PageUp\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: PageUp()\n  nameWithType: VirtualizingStackPanel.PageUp()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.PageUp()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content upward by one page.\n  remarks: \"You can override PageUp in a derived class to change how the stack panel responds to the page up action.  \\n  \\n If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.VirtualizingStackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`. In this case, the <xref:System.Windows.Controls.ScrollViewer> provides scrolling, and virtualization is disabled.\"\n  syntax:\n    content: public virtual void PageUp ();\n    parameters: []\n  overload: System.Windows.Controls.VirtualizingStackPanel.PageUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)\n  id: RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: RemoveCleanUpVirtualizedItemHandler(DependencyObject,CleanUpVirtualizedItemEventHandler)\n  nameWithType: VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(DependencyObject,CleanUpVirtualizedItemEventHandler)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(DependencyObject,CleanUpVirtualizedItemEventHandler)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Removes an event handler for the <xref:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem> attached event.\n  remarks: The standard layout system creates item containers and computes layout for each item associated with a list control. The word \"virtualize\" refers to a technique by which a subset of [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements are generated from a larger number of data items based on which items are visible on-screen. Generating many [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements when only a few elements might be on the screen can adversely affect the performance of your application. The <xref:System.Windows.Controls.VirtualizingStackPanel> calculates the number of visible items and works with the <xref:System.Windows.Controls.ItemContainerGenerator> from an <xref:System.Windows.Controls.ItemsControl> (such as <xref:System.Windows.Controls.ListBox> or <xref:System.Windows.Controls.ListView>) to create [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements only for visible items.\n  syntax:\n    content: public static void RemoveCleanUpVirtualizedItemHandler (System.Windows.DependencyObject element, System.Windows.Controls.CleanUpVirtualizedItemEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.DependencyObject\"></xref> from which the handler is being removed.\n    - id: handler\n      type: System.Windows.Controls.CleanUpVirtualizedItemEventHandler\n      description: Specifies the event handler that is to be removed.\n  overload: System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.ScrollOwner\n  id: ScrollOwner\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: ScrollOwner\n  nameWithType: VirtualizingStackPanel.ScrollOwner\n  fullName: System.Windows.Controls.VirtualizingStackPanel.ScrollOwner\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that identifies the container that controls scrolling behavior in this <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref>.\n  remarks: If a <xref:System.Windows.Controls.ScrollViewer> control is the ScrollOwner, physical scrolling is enabled. If a <xref:System.Windows.Controls.VirtualizingStackPanel> is the ScrollOwner, scrolling is logical by child element.\n  syntax:\n    content: public System.Windows.Controls.ScrollViewer ScrollOwner { get; set; }\n    return:\n      type: System.Windows.Controls.ScrollViewer\n      description: The <xref href=\"System.Windows.Controls.ScrollViewer\"></xref> that owns scrolling for this <xref href=\"System.Windows.Controls.VirtualizingStackPanel\"></xref>.\n  overload: System.Windows.Controls.VirtualizingStackPanel.ScrollOwner*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset(System.Double)\n  id: SetHorizontalOffset(System.Double)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: SetHorizontalOffset(Double)\n  nameWithType: VirtualizingStackPanel.SetHorizontalOffset(Double)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset(Double)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the <xref:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset*> property.\n  syntax:\n    content: public void SetHorizontalOffset (double offset);\n    parameters:\n    - id: offset\n      type: System.Double\n      description: The value of the <xref:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset*> property.\n  overload: System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset(System.Double)\n  id: SetVerticalOffset(System.Double)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: SetVerticalOffset(Double)\n  nameWithType: VirtualizingStackPanel.SetVerticalOffset(Double)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset(Double)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the <xref:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset*> property.\n  syntax:\n    content: public void SetVerticalOffset (double offset);\n    parameters:\n    - id: offset\n      type: System.Double\n      description: The value of the <xref:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset*> property.\n  overload: System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)\n  id: ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: ShouldItemsChangeAffectLayoutCore(Boolean,ItemsChangedEventArgs)\n  nameWithType: VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore(Boolean,ItemsChangedEventArgs)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore(Boolean,ItemsChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns a value that indicates whether a changed item in an <xref href=\"System.Windows.Controls.ItemsControl\"></xref> affects the layout for this panel.\n  syntax:\n    content: protected override bool ShouldItemsChangeAffectLayoutCore (bool areItemChangesLocal, System.Windows.Controls.Primitives.ItemsChangedEventArgs args);\n    parameters:\n    - id: areItemChangesLocal\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the changed item is a direct child of this <xref href=\"System.Windows.Controls.VirtualizingPanel\"></xref>; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the changed item is an indirect descendant of the <xref href=\"System.Windows.Controls.VirtualizingPanel\"></xref>.\n    - id: args\n      type: System.Windows.Controls.Primitives.ItemsChangedEventArgs\n      description: Contains data regarding the changed item.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the changed item in an <xref href=\"System.Windows.Controls.ItemsControl\"></xref> affects the layout for this panel; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.VerticalOffset\n  id: VerticalOffset\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: VerticalOffset\n  nameWithType: VirtualizingStackPanel.VerticalOffset\n  fullName: System.Windows.Controls.VirtualizingStackPanel.VerticalOffset\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that contains the vertical offset of the scrolled content.\n  syntax:\n    content: public double VerticalOffset { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the vertical offset of the scrolled content. The default is 0.0.\n  overload: System.Windows.Controls.VirtualizingStackPanel.VerticalOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.ViewportHeight\n  id: ViewportHeight\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: ViewportHeight\n  nameWithType: VirtualizingStackPanel.ViewportHeight\n  fullName: System.Windows.Controls.VirtualizingStackPanel.ViewportHeight\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that contains the vertical size of the viewport of the content.\n  syntax:\n    content: public double ViewportHeight { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the vertical size of the viewport of the content. The default is 0.0.\n  overload: System.Windows.Controls.VirtualizingStackPanel.ViewportHeight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.ViewportWidth\n  id: ViewportWidth\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: ViewportWidth\n  nameWithType: VirtualizingStackPanel.ViewportWidth\n  fullName: System.Windows.Controls.VirtualizingStackPanel.ViewportWidth\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that contains the horizontal size of the viewport of the content.\n  syntax:\n    content: public double ViewportWidth { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the vertical size of the viewport of the content. The default is 0.0.\n  overload: System.Windows.Controls.VirtualizingStackPanel.ViewportWidth*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizingStackPanel.VirtualizationModeProperty\n  id: VirtualizationModeProperty\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  langs:\n  - csharp\n  name: VirtualizationModeProperty\n  nameWithType: VirtualizingStackPanel.VirtualizationModeProperty\n  fullName: System.Windows.Controls.VirtualizingStackPanel.VirtualizationModeProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref uid=\"langword_csharp_VirtualizingStackPanel.VirtualizationMode\" name=\"VirtualizingStackPanel.VirtualizationMode\" href=\"\"></xref> attached property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty VirtualizationModeProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Controls.VirtualizingPanel\n  isExternal: false\n  name: System.Windows.Controls.VirtualizingPanel\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Windows.Controls.VirtualizingStackPanel.#ctor\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: VirtualizingStackPanel()\n  nameWithType: VirtualizingStackPanel.VirtualizingStackPanel()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.VirtualizingStackPanel()\n- uid: System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: AddCleanUpVirtualizedItemHandler(DependencyObject,CleanUpVirtualizedItemEventHandler)\n  nameWithType: VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(DependencyObject,CleanUpVirtualizedItemEventHandler)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(DependencyObject,CleanUpVirtualizedItemEventHandler)\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.Controls.CleanUpVirtualizedItemEventHandler\n  parent: System.Windows.Controls\n  isExternal: false\n  name: CleanUpVirtualizedItemEventHandler\n  nameWithType: CleanUpVirtualizedItemEventHandler\n  fullName: System.Windows.Controls.CleanUpVirtualizedItemEventHandler\n- uid: System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: ArrangeOverride(Size)\n  nameWithType: VirtualizingStackPanel.ArrangeOverride(Size)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(Size)\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView(System.Int32)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: BringIndexIntoView(Int32)\n  nameWithType: VirtualizingStackPanel.BringIndexIntoView(Int32)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Controls.VirtualizingStackPanel.CanHierarchicallyScrollAndVirtualizeCore\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: CanHierarchicallyScrollAndVirtualizeCore\n  nameWithType: VirtualizingStackPanel.CanHierarchicallyScrollAndVirtualizeCore\n  fullName: System.Windows.Controls.VirtualizingStackPanel.CanHierarchicallyScrollAndVirtualizeCore\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: CanHorizontallyScroll\n  nameWithType: VirtualizingStackPanel.CanHorizontallyScroll\n  fullName: System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll\n- uid: System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: CanVerticallyScroll\n  nameWithType: VirtualizingStackPanel.CanVerticallyScroll\n  fullName: System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll\n- uid: System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: CleanUpVirtualizedItemEvent\n  nameWithType: VirtualizingStackPanel.CleanUpVirtualizedItemEvent\n  fullName: System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent\n- uid: System.Windows.RoutedEvent\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEvent\n  fullName: System.Windows.RoutedEvent\n- uid: System.Windows.Controls.VirtualizingStackPanel.ExtentHeight\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: ExtentHeight\n  nameWithType: VirtualizingStackPanel.ExtentHeight\n  fullName: System.Windows.Controls.VirtualizingStackPanel.ExtentHeight\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Controls.VirtualizingStackPanel.ExtentWidth\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: ExtentWidth\n  nameWithType: VirtualizingStackPanel.ExtentWidth\n  fullName: System.Windows.Controls.VirtualizingStackPanel.ExtentWidth\n- uid: System.Windows.Controls.VirtualizingStackPanel.GetItemOffsetCore(System.Windows.UIElement)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: GetItemOffsetCore(UIElement)\n  nameWithType: VirtualizingStackPanel.GetItemOffsetCore(UIElement)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.GetItemOffsetCore(UIElement)\n- uid: System.Windows.UIElement\n  parent: System.Windows\n  isExternal: false\n  name: UIElement\n  nameWithType: UIElement\n  fullName: System.Windows.UIElement\n- uid: System.Windows.Controls.VirtualizingStackPanel.HasLogicalOrientation\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: HasLogicalOrientation\n  nameWithType: VirtualizingStackPanel.HasLogicalOrientation\n  fullName: System.Windows.Controls.VirtualizingStackPanel.HasLogicalOrientation\n- uid: System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: HorizontalOffset\n  nameWithType: VirtualizingStackPanel.HorizontalOffset\n  fullName: System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset\n- uid: System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: IsVirtualizingProperty\n  nameWithType: VirtualizingStackPanel.IsVirtualizingProperty\n  fullName: System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Controls.VirtualizingStackPanel.LineDown\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: LineDown()\n  nameWithType: VirtualizingStackPanel.LineDown()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.LineDown()\n- uid: System.Windows.Controls.VirtualizingStackPanel.LineLeft\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: LineLeft()\n  nameWithType: VirtualizingStackPanel.LineLeft()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.LineLeft()\n- uid: System.Windows.Controls.VirtualizingStackPanel.LineRight\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: LineRight()\n  nameWithType: VirtualizingStackPanel.LineRight()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.LineRight()\n- uid: System.Windows.Controls.VirtualizingStackPanel.LineUp\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: LineUp()\n  nameWithType: VirtualizingStackPanel.LineUp()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.LineUp()\n- uid: System.Windows.Controls.VirtualizingStackPanel.LogicalOrientation\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: LogicalOrientation\n  nameWithType: VirtualizingStackPanel.LogicalOrientation\n  fullName: System.Windows.Controls.VirtualizingStackPanel.LogicalOrientation\n- uid: System.Windows.Controls.Orientation\n  parent: System.Windows.Controls\n  isExternal: false\n  name: Orientation\n  nameWithType: Orientation\n  fullName: System.Windows.Controls.Orientation\n- uid: System.Windows.Controls.VirtualizingStackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: MakeVisible(Visual,Rect)\n  nameWithType: VirtualizingStackPanel.MakeVisible(Visual,Rect)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.MakeVisible(Visual,Rect)\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: false\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Media.Visual\n  parent: System.Windows.Media\n  isExternal: false\n  name: Visual\n  nameWithType: Visual\n  fullName: System.Windows.Media.Visual\n- uid: System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: MeasureOverride(Size)\n  nameWithType: VirtualizingStackPanel.MeasureOverride(Size)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(Size)\n- uid: System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: MouseWheelDown()\n  nameWithType: VirtualizingStackPanel.MouseWheelDown()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown()\n- uid: System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: MouseWheelLeft()\n  nameWithType: VirtualizingStackPanel.MouseWheelLeft()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft()\n- uid: System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: MouseWheelRight()\n  nameWithType: VirtualizingStackPanel.MouseWheelRight()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight()\n- uid: System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: MouseWheelUp()\n  nameWithType: VirtualizingStackPanel.MouseWheelUp()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp()\n- uid: System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: OnCleanUpVirtualizedItem(CleanUpVirtualizedItemEventArgs)\n  nameWithType: VirtualizingStackPanel.OnCleanUpVirtualizedItem(CleanUpVirtualizedItemEventArgs)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(CleanUpVirtualizedItemEventArgs)\n- uid: System.Windows.Controls.CleanUpVirtualizedItemEventArgs\n  parent: System.Windows.Controls\n  isExternal: false\n  name: CleanUpVirtualizedItemEventArgs\n  nameWithType: CleanUpVirtualizedItemEventArgs\n  fullName: System.Windows.Controls.CleanUpVirtualizedItemEventArgs\n- uid: System.Windows.Controls.VirtualizingStackPanel.OnClearChildren\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: OnClearChildren()\n  nameWithType: VirtualizingStackPanel.OnClearChildren()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.OnClearChildren()\n- uid: System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: OnItemsChanged(Object,ItemsChangedEventArgs)\n  nameWithType: VirtualizingStackPanel.OnItemsChanged(Object,ItemsChangedEventArgs)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(Object,ItemsChangedEventArgs)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Controls.Primitives.ItemsChangedEventArgs\n  parent: System.Windows.Controls.Primitives\n  isExternal: false\n  name: ItemsChangedEventArgs\n  nameWithType: ItemsChangedEventArgs\n  fullName: System.Windows.Controls.Primitives.ItemsChangedEventArgs\n- uid: System.Windows.Controls.VirtualizingStackPanel.OnViewportOffsetChanged(System.Windows.Vector,System.Windows.Vector)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: OnViewportOffsetChanged(Vector,Vector)\n  nameWithType: VirtualizingStackPanel.OnViewportOffsetChanged(Vector,Vector)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.OnViewportOffsetChanged(Vector,Vector)\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: false\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector\n- uid: System.Windows.Controls.VirtualizingStackPanel.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: OnViewportSizeChanged(Size,Size)\n  nameWithType: VirtualizingStackPanel.OnViewportSizeChanged(Size,Size)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.OnViewportSizeChanged(Size,Size)\n- uid: System.Windows.Controls.VirtualizingStackPanel.Orientation\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: Orientation\n  nameWithType: VirtualizingStackPanel.Orientation\n  fullName: System.Windows.Controls.VirtualizingStackPanel.Orientation\n- uid: System.Windows.Controls.VirtualizingStackPanel.OrientationProperty\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: OrientationProperty\n  nameWithType: VirtualizingStackPanel.OrientationProperty\n  fullName: System.Windows.Controls.VirtualizingStackPanel.OrientationProperty\n- uid: System.Windows.Controls.VirtualizingStackPanel.PageDown\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: PageDown()\n  nameWithType: VirtualizingStackPanel.PageDown()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.PageDown()\n- uid: System.Windows.Controls.VirtualizingStackPanel.PageLeft\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: PageLeft()\n  nameWithType: VirtualizingStackPanel.PageLeft()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.PageLeft()\n- uid: System.Windows.Controls.VirtualizingStackPanel.PageRight\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: PageRight()\n  nameWithType: VirtualizingStackPanel.PageRight()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.PageRight()\n- uid: System.Windows.Controls.VirtualizingStackPanel.PageUp\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: PageUp()\n  nameWithType: VirtualizingStackPanel.PageUp()\n  fullName: System.Windows.Controls.VirtualizingStackPanel.PageUp()\n- uid: System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: RemoveCleanUpVirtualizedItemHandler(DependencyObject,CleanUpVirtualizedItemEventHandler)\n  nameWithType: VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(DependencyObject,CleanUpVirtualizedItemEventHandler)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(DependencyObject,CleanUpVirtualizedItemEventHandler)\n- uid: System.Windows.Controls.VirtualizingStackPanel.ScrollOwner\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: ScrollOwner\n  nameWithType: VirtualizingStackPanel.ScrollOwner\n  fullName: System.Windows.Controls.VirtualizingStackPanel.ScrollOwner\n- uid: System.Windows.Controls.ScrollViewer\n  parent: System.Windows.Controls\n  isExternal: false\n  name: ScrollViewer\n  nameWithType: ScrollViewer\n  fullName: System.Windows.Controls.ScrollViewer\n- uid: System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset(System.Double)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: SetHorizontalOffset(Double)\n  nameWithType: VirtualizingStackPanel.SetHorizontalOffset(Double)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset(Double)\n- uid: System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset(System.Double)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: SetVerticalOffset(Double)\n  nameWithType: VirtualizingStackPanel.SetVerticalOffset(Double)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset(Double)\n- uid: System.Windows.Controls.VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: ShouldItemsChangeAffectLayoutCore(Boolean,ItemsChangedEventArgs)\n  nameWithType: VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore(Boolean,ItemsChangedEventArgs)\n  fullName: System.Windows.Controls.VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore(Boolean,ItemsChangedEventArgs)\n- uid: System.Windows.Controls.VirtualizingStackPanel.VerticalOffset\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: VerticalOffset\n  nameWithType: VirtualizingStackPanel.VerticalOffset\n  fullName: System.Windows.Controls.VirtualizingStackPanel.VerticalOffset\n- uid: System.Windows.Controls.VirtualizingStackPanel.ViewportHeight\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: ViewportHeight\n  nameWithType: VirtualizingStackPanel.ViewportHeight\n  fullName: System.Windows.Controls.VirtualizingStackPanel.ViewportHeight\n- uid: System.Windows.Controls.VirtualizingStackPanel.ViewportWidth\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: ViewportWidth\n  nameWithType: VirtualizingStackPanel.ViewportWidth\n  fullName: System.Windows.Controls.VirtualizingStackPanel.ViewportWidth\n- uid: System.Windows.Controls.VirtualizingStackPanel.VirtualizationModeProperty\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: VirtualizationModeProperty\n  nameWithType: VirtualizingStackPanel.VirtualizationModeProperty\n  fullName: System.Windows.Controls.VirtualizingStackPanel.VirtualizationModeProperty\n- uid: System.Windows.Controls.VirtualizingStackPanel.#ctor*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: VirtualizingStackPanel\n  nameWithType: VirtualizingStackPanel.VirtualizingStackPanel\n- uid: System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: AddCleanUpVirtualizedItemHandler\n  nameWithType: VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler\n- uid: System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: ArrangeOverride\n  nameWithType: VirtualizingStackPanel.ArrangeOverride\n- uid: System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: BringIndexIntoView\n  nameWithType: VirtualizingStackPanel.BringIndexIntoView\n- uid: System.Windows.Controls.VirtualizingStackPanel.CanHierarchicallyScrollAndVirtualizeCore*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: CanHierarchicallyScrollAndVirtualizeCore\n  nameWithType: VirtualizingStackPanel.CanHierarchicallyScrollAndVirtualizeCore\n- uid: System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: CanHorizontallyScroll\n  nameWithType: VirtualizingStackPanel.CanHorizontallyScroll\n- uid: System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: CanVerticallyScroll\n  nameWithType: VirtualizingStackPanel.CanVerticallyScroll\n- uid: System.Windows.Controls.VirtualizingStackPanel.ExtentHeight*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: ExtentHeight\n  nameWithType: VirtualizingStackPanel.ExtentHeight\n- uid: System.Windows.Controls.VirtualizingStackPanel.ExtentWidth*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: ExtentWidth\n  nameWithType: VirtualizingStackPanel.ExtentWidth\n- uid: System.Windows.Controls.VirtualizingStackPanel.GetItemOffsetCore*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: GetItemOffsetCore\n  nameWithType: VirtualizingStackPanel.GetItemOffsetCore\n- uid: System.Windows.Controls.VirtualizingStackPanel.HasLogicalOrientation*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: HasLogicalOrientation\n  nameWithType: VirtualizingStackPanel.HasLogicalOrientation\n- uid: System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: HorizontalOffset\n  nameWithType: VirtualizingStackPanel.HorizontalOffset\n- uid: System.Windows.Controls.VirtualizingStackPanel.LineDown*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: LineDown\n  nameWithType: VirtualizingStackPanel.LineDown\n- uid: System.Windows.Controls.VirtualizingStackPanel.LineLeft*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: LineLeft\n  nameWithType: VirtualizingStackPanel.LineLeft\n- uid: System.Windows.Controls.VirtualizingStackPanel.LineRight*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: LineRight\n  nameWithType: VirtualizingStackPanel.LineRight\n- uid: System.Windows.Controls.VirtualizingStackPanel.LineUp*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: LineUp\n  nameWithType: VirtualizingStackPanel.LineUp\n- uid: System.Windows.Controls.VirtualizingStackPanel.LogicalOrientation*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: LogicalOrientation\n  nameWithType: VirtualizingStackPanel.LogicalOrientation\n- uid: System.Windows.Controls.VirtualizingStackPanel.MakeVisible*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: MakeVisible\n  nameWithType: VirtualizingStackPanel.MakeVisible\n- uid: System.Windows.Controls.VirtualizingStackPanel.MeasureOverride*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: MeasureOverride\n  nameWithType: VirtualizingStackPanel.MeasureOverride\n- uid: System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: MouseWheelDown\n  nameWithType: VirtualizingStackPanel.MouseWheelDown\n- uid: System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: MouseWheelLeft\n  nameWithType: VirtualizingStackPanel.MouseWheelLeft\n- uid: System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: MouseWheelRight\n  nameWithType: VirtualizingStackPanel.MouseWheelRight\n- uid: System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: MouseWheelUp\n  nameWithType: VirtualizingStackPanel.MouseWheelUp\n- uid: System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: OnCleanUpVirtualizedItem\n  nameWithType: VirtualizingStackPanel.OnCleanUpVirtualizedItem\n- uid: System.Windows.Controls.VirtualizingStackPanel.OnClearChildren*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: OnClearChildren\n  nameWithType: VirtualizingStackPanel.OnClearChildren\n- uid: System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: OnItemsChanged\n  nameWithType: VirtualizingStackPanel.OnItemsChanged\n- uid: System.Windows.Controls.VirtualizingStackPanel.OnViewportOffsetChanged*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: OnViewportOffsetChanged\n  nameWithType: VirtualizingStackPanel.OnViewportOffsetChanged\n- uid: System.Windows.Controls.VirtualizingStackPanel.OnViewportSizeChanged*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: OnViewportSizeChanged\n  nameWithType: VirtualizingStackPanel.OnViewportSizeChanged\n- uid: System.Windows.Controls.VirtualizingStackPanel.Orientation*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: Orientation\n  nameWithType: VirtualizingStackPanel.Orientation\n- uid: System.Windows.Controls.VirtualizingStackPanel.PageDown*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: PageDown\n  nameWithType: VirtualizingStackPanel.PageDown\n- uid: System.Windows.Controls.VirtualizingStackPanel.PageLeft*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: PageLeft\n  nameWithType: VirtualizingStackPanel.PageLeft\n- uid: System.Windows.Controls.VirtualizingStackPanel.PageRight*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: PageRight\n  nameWithType: VirtualizingStackPanel.PageRight\n- uid: System.Windows.Controls.VirtualizingStackPanel.PageUp*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: PageUp\n  nameWithType: VirtualizingStackPanel.PageUp\n- uid: System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: RemoveCleanUpVirtualizedItemHandler\n  nameWithType: VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler\n- uid: System.Windows.Controls.VirtualizingStackPanel.ScrollOwner*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: ScrollOwner\n  nameWithType: VirtualizingStackPanel.ScrollOwner\n- uid: System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: SetHorizontalOffset\n  nameWithType: VirtualizingStackPanel.SetHorizontalOffset\n- uid: System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: SetVerticalOffset\n  nameWithType: VirtualizingStackPanel.SetVerticalOffset\n- uid: System.Windows.Controls.VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: ShouldItemsChangeAffectLayoutCore\n  nameWithType: VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore\n- uid: System.Windows.Controls.VirtualizingStackPanel.VerticalOffset*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: VerticalOffset\n  nameWithType: VirtualizingStackPanel.VerticalOffset\n- uid: System.Windows.Controls.VirtualizingStackPanel.ViewportHeight*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: ViewportHeight\n  nameWithType: VirtualizingStackPanel.ViewportHeight\n- uid: System.Windows.Controls.VirtualizingStackPanel.ViewportWidth*\n  parent: System.Windows.Controls.VirtualizingStackPanel\n  isExternal: false\n  name: ViewportWidth\n  nameWithType: VirtualizingStackPanel.ViewportWidth\n"}