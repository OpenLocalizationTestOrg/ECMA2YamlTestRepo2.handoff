{"nodes":[{"pos":[523,682],"content":"The exception that is thrown when a potentially malicious input string is received from the client as part of the request data. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception that is thrown when a potentially malicious input string is received from the client as part of the request data. This class cannot be inherited.","pos":[0,159],"nodes":[{"content":"The exception that is thrown when a potentially malicious input string is received from the client as part of the request data.","pos":[0,127]},{"content":"This class cannot be inherited.","pos":[128,159]}]}]},{"pos":[695,2573],"content":"Constraining and validating user input is essential in a Web application to prevent hacker attacks that rely on malicious input strings. Cross-site scripting attacks are one example of such hacks. Other types of malicious or undesired data can be passed in a request through various forms of input. By limiting the kinds of data that is passed at a low level in an application, you can prevent undesirable events, even when programmers who are using your code do not put the proper validation techniques in place.       Request validation detects potentially malicious client input and throws this exception to abort processing of the request. A request abort can indicate an attempt to compromise the security of your application, such as a cross-site scripting attack. It is strongly recommended that your application explicitly check all input regarding request aborts. However, you can disable request validation by setting the `validateRequest` attribute in the  directive to `false`, as shown in the following example:       `<%@ Page validateRequest=\"false\" %>`       To disable request validation for your application, you must modify or create a Web.config file for your application and set the `validateRequest` attribute of the `pages` section to `false`, as shown in the following example:      ```   <configuration>      <system.web>        <pages validateRequest=\"false\" />      </system.web>    </configuration>    ```       To disable request validation for all applications on your server, you can make this modification to the Machine.config file.      > [!NOTE] >  It is strongly recommended that your application explicitly check all inputs it uses in addition to the request validation performed by ASP.NET. The request validation feature cannot catch all attacks, especially those crafted specifically against your application logic.","needQuote":false,"needEscape":true,"nodes":[{"content":"Constraining and validating user input is essential in a Web application to prevent hacker attacks that rely on malicious input strings.","pos":[0,136]},{"content":"Cross-site scripting attacks are one example of such hacks.","pos":[137,196]},{"content":"Other types of malicious or undesired data can be passed in a request through various forms of input.","pos":[197,298]},{"content":"By limiting the kinds of data that is passed at a low level in an application, you can prevent undesirable events, even when programmers who are using your code do not put the proper validation techniques in place.","pos":[299,513]},{"content":"Request validation detects potentially malicious client input and throws this exception to abort processing of the request.","pos":[520,643]},{"content":"A request abort can indicate an attempt to compromise the security of your application, such as a cross-site scripting attack.","pos":[644,770]},{"content":"It is strongly recommended that your application explicitly check all input regarding request aborts.","pos":[771,872]},{"content":"However, you can disable request validation by setting the <ph id=\"ph1\">`validateRequest`</ph> attribute in the  directive to <ph id=\"ph2\">`false`</ph>, as shown in the following example:       <ph id=\"ph3\">`&lt;%@ Page validateRequest=\"false\" %&gt;`</ph>       To disable request validation for your application, you must modify or create a Web.config file for your application and set the <ph id=\"ph4\">`validateRequest`</ph> attribute of the <ph id=\"ph5\">`pages`</ph> section to <ph id=\"ph6\">`false`</ph>, as shown in the following example:      <ph id=\"ph7\">```   &lt;configuration&gt;      &lt;system.web&gt;        &lt;pages validateRequest=\"false\" /&gt;      &lt;/system.web&gt;    &lt;/configuration&gt;    ```</ph>       To disable request validation for all applications on your server, you can make this modification to the Machine.config file.","pos":[873,1565],"source":" However, you can disable request validation by setting the `validateRequest` attribute in the  directive to `false`, as shown in the following example:       `<%@ Page validateRequest=\"false\" %>`       To disable request validation for your application, you must modify or create a Web.config file for your application and set the `validateRequest` attribute of the `pages` section to `false`, as shown in the following example:      ```   <configuration>      <system.web>        <pages validateRequest=\"false\" />      </system.web>    </configuration>    ```       To disable request validation for all applications on your server, you can make this modification to the Machine.config file."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  It is strongly recommended that your application explicitly check all inputs it uses in addition to the request validation performed by ASP.NET.","pos":[1571,1728],"source":"      > [!NOTE] >  It is strongly recommended that your application explicitly check all inputs it uses in addition to the request validation performed by ASP.NET."},{"content":"The request validation feature cannot catch all attacks, especially those crafted specifically against your application logic.","pos":[1729,1855]}]},{"pos":[4441,4540],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpRequestValidationException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Web.HttpRequestValidationException\"></xref> class."},{"pos":[5207,5327],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpRequestValidationException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> exception with the specified error message.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Web.HttpRequestValidationException\"></xref> exception with the specified error message."},{"pos":[5339,5540],"content":"The content of the `message` parameter is intended to be human readable. The caller of the HttpRequestValidationException constructor is required to ensure that the `message` string has been localized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The content of the <ph id=\"ph1\">`message`</ph> parameter is intended to be human readable.","pos":[0,72],"source":"The content of the `message` parameter is intended to be human readable."},{"content":"The caller of the HttpRequestValidationException constructor is required to ensure that the <ph id=\"ph1\">`message`</ph> string has been localized.","pos":[73,201],"source":" The caller of the HttpRequestValidationException constructor is required to ensure that the `message` string has been localized."}]},{"pos":[5699,5733],"content":"A string that describes the error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that describes the error.","pos":[0,34]}]},{"pos":[6380,6588],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpRequestValidationException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specified error message and a reference to the inner exception that is the cause of the exception.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.HttpRequestValidationException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of the exception."},{"pos":[6600,7089],"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the HttpRequestValidationException constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the HttpRequestValidationException constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the &lt;xref:System.Exception.InnerException%2A&gt; property.","pos":[0,182],"source":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The &lt;xref:System.Exception.InnerException%2A&gt; property returns the same value that is passed into the HttpRequestValidationException constructor, or <ph id=\"ph1\">`null`</ph> if the &lt;xref:System.Exception.InnerException%2A&gt; property does not supply the inner exception value to the HttpRequestValidationException constructor.","pos":[183,489],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the HttpRequestValidationException constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the HttpRequestValidationException constructor."}]},{"pos":[7274,7334],"content":"An error message that explains the reason for the exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error message that explains the reason for the exception.","pos":[0,60]}]},{"pos":[7408,7692],"content":"The exception that is the cause of the current exception. If this parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the current exception is raised in a <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> block that handles the inner exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If this parameter is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the current exception is raised in a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> block that handles the inner exception.","pos":[58,284],"source":" If this parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the current exception is raised in a <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> block that handles the inner exception."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.HttpRequestValidationException\n  id: HttpRequestValidationException\n  children:\n  - System.Web.HttpRequestValidationException.#ctor\n  - System.Web.HttpRequestValidationException.#ctor(System.String)\n  - System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: HttpRequestValidationException\n  nameWithType: HttpRequestValidationException\n  fullName: System.Web.HttpRequestValidationException\n  type: Class\n  summary: The exception that is thrown when a potentially malicious input string is received from the client as part of the request data. This class cannot be inherited.\n  remarks: \"Constraining and validating user input is essential in a Web application to prevent hacker attacks that rely on malicious input strings. Cross-site scripting attacks are one example of such hacks. Other types of malicious or undesired data can be passed in a request through various forms of input. By limiting the kinds of data that is passed at a low level in an application, you can prevent undesirable events, even when programmers who are using your code do not put the proper validation techniques in place.  \\n  \\n Request validation detects potentially malicious client input and throws this exception to abort processing of the request. A request abort can indicate an attempt to compromise the security of your application, such as a cross-site scripting attack. It is strongly recommended that your application explicitly check all input regarding request aborts. However, you can disable request validation by setting the `validateRequest` attribute in the  directive to `false`, as shown in the following example:  \\n  \\n `<%@ Page validateRequest=\\\"false\\\" %>`  \\n  \\n To disable request validation for your application, you must modify or create a Web.config file for your application and set the `validateRequest` attribute of the `pages` section to `false`, as shown in the following example:  \\n  \\n```  \\n<configuration>   \\n  <system.web>   \\n    <pages validateRequest=\\\"false\\\" />   \\n  </system.web>   \\n</configuration>   \\n```  \\n  \\n To disable request validation for all applications on your server, you can make this modification to the Machine.config file.  \\n  \\n> [!NOTE]\\n>  It is strongly recommended that your application explicitly check all inputs it uses in addition to the request validation performed by ASP.NET. The request validation feature cannot catch all attacks, especially those crafted specifically against your application logic.\"\n  example:\n  - \"The following code example demonstrates how to check for malicious user input by using an HttpRequestValidationException.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[HttpRequestValidationException#1](~/add/codesnippet/visualbasic/t-system.web.httprequest_1.aspx)]\\n [!code-cs[HttpRequestValidationException#1](~/add/codesnippet/csharp/t-system.web.httprequest_1.aspx)]\"\n  syntax:\n    content: 'public sealed class HttpRequestValidationException : System.Web.HttpException'\n  inheritance:\n  - System.Exception\n  - System.SystemException\n  - System.Runtime.InteropServices.ExternalException\n  - System.Web.HttpException\n  implements: []\n  inheritedMembers:\n  - System.Runtime.InteropServices.ExternalException.ErrorCode\n  - System.Runtime.InteropServices.ExternalException.ToString\n  - System.Web.HttpException.CreateFromLastError(System.String)\n  - System.Web.HttpException.GetHtmlErrorMessage\n  - System.Web.HttpException.GetHttpCode\n  - System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Web.HttpException.WebEventCode\n  platform:\n  - net462\n- uid: System.Web.HttpRequestValidationException.#ctor\n  id: '#ctor'\n  parent: System.Web.HttpRequestValidationException\n  langs:\n  - csharp\n  name: HttpRequestValidationException()\n  nameWithType: HttpRequestValidationException.HttpRequestValidationException()\n  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Creates a new instance of the <xref href=\"System.Web.HttpRequestValidationException\"></xref> class.\n  syntax:\n    content: public HttpRequestValidationException ();\n    parameters: []\n  overload: System.Web.HttpRequestValidationException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpRequestValidationException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Web.HttpRequestValidationException\n  langs:\n  - csharp\n  name: HttpRequestValidationException(String)\n  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String)\n  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Creates a new <xref href=\"System.Web.HttpRequestValidationException\"></xref> exception with the specified error message.\n  remarks: The content of the `message` parameter is intended to be human readable. The caller of the HttpRequestValidationException constructor is required to ensure that the `message` string has been localized.\n  syntax:\n    content: public HttpRequestValidationException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: A string that describes the error.\n  overload: System.Web.HttpRequestValidationException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Web.HttpRequestValidationException\n  langs:\n  - csharp\n  name: HttpRequestValidationException(String,Exception)\n  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String,Exception)\n  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String,Exception)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Initializes a new instance of the <xref href=\"System.Web.HttpRequestValidationException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of the exception.\n  remarks: An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the HttpRequestValidationException constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the HttpRequestValidationException constructor.\n  syntax:\n    content: public HttpRequestValidationException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: An error message that explains the reason for the exception.\n    - id: innerException\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If this parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the current exception is raised in a <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> block that handles the inner exception.\n  overload: System.Web.HttpRequestValidationException.#ctor*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.HttpException\n  isExternal: false\n  name: System.Web.HttpException\n- uid: System.Web.HttpRequestValidationException.#ctor\n  parent: System.Web.HttpRequestValidationException\n  isExternal: false\n  name: HttpRequestValidationException()\n  nameWithType: HttpRequestValidationException.HttpRequestValidationException()\n  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException()\n- uid: System.Web.HttpRequestValidationException.#ctor(System.String)\n  parent: System.Web.HttpRequestValidationException\n  isExternal: false\n  name: HttpRequestValidationException(String)\n  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String)\n  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)\n  parent: System.Web.HttpRequestValidationException\n  isExternal: false\n  name: HttpRequestValidationException(String,Exception)\n  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String,Exception)\n  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String,Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Web.HttpRequestValidationException.#ctor*\n  parent: System.Web.HttpRequestValidationException\n  isExternal: false\n  name: HttpRequestValidationException\n  nameWithType: HttpRequestValidationException.HttpRequestValidationException\n"}