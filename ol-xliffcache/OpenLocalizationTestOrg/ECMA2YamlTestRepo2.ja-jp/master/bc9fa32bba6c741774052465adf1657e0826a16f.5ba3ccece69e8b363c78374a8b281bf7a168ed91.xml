{"nodes":[{"pos":[606,730],"content":"Specifies the contract that should be implemented by a custom security token authenticator that issues tokens to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the contract that should be implemented by a custom security token authenticator that issues tokens to the client.","pos":[0,124]}]},{"pos":[742,980],"content":"The token authenticators used by <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> for issuing SSLNEGO/SPNEGO <ph id=\"ph2\">`SecurityContextToken`</ph>s or SecureConversation-based <ph id=\"ph3\">`SecurityContextToken`</ph>s are <ph id=\"ph4\">`IIssuanceSecurityTokenAuthenticator`</ph>s.","needQuote":true,"needEscape":true,"source":"The token authenticators used by [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] for issuing SSLNEGO/SPNEGO `SecurityContextToken`s or SecureConversation-based `SecurityContextToken`s are `IIssuanceSecurityTokenAuthenticator`s."},{"pos":[1678,1730],"content":"Gets or sets a handler for when the token is issued.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a handler for when the token is issued.","pos":[0,52]}]},{"pos":[1971,2028],"content":"A delegate that handles the event when a token is issued.","needQuote":true,"needEscape":true,"nodes":[{"content":"A delegate that handles the event when a token is issued.","pos":[0,57]}]},{"pos":[2767,2820],"content":"Gets or sets a handler for when the token is renewed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a handler for when the token is renewed.","pos":[0,53]}]},{"pos":[2832,2929],"content":"This delegate should be invoked only if the token authenticator handles renewal of issued tokens.","needQuote":true,"needEscape":true,"nodes":[{"content":"This delegate should be invoked only if the token authenticator handles renewal of issued tokens.","pos":[0,97]}]},{"pos":[3173,3231],"content":"A delegate that handles the event when a token is renewed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A delegate that handles the event when a token is renewed.","pos":[0,58]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator\n  id: IIssuanceSecurityTokenAuthenticator\n  children:\n  - System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.IssuedSecurityTokenHandler\n  - System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.RenewedSecurityTokenHandler\n  langs:\n  - csharp\n  name: IIssuanceSecurityTokenAuthenticator\n  nameWithType: IIssuanceSecurityTokenAuthenticator\n  fullName: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator\n  type: Interface\n  summary: Specifies the contract that should be implemented by a custom security token authenticator that issues tokens to the client.\n  remarks: The token authenticators used by [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] for issuing SSLNEGO/SPNEGO `SecurityContextToken`s or SecureConversation-based `SecurityContextToken`s are `IIssuanceSecurityTokenAuthenticator`s.\n  syntax:\n    content: public interface IIssuanceSecurityTokenAuthenticator\n  implements: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.IssuedSecurityTokenHandler\n  id: IssuedSecurityTokenHandler\n  parent: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: IssuedSecurityTokenHandler\n  nameWithType: IIssuanceSecurityTokenAuthenticator.IssuedSecurityTokenHandler\n  fullName: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.IssuedSecurityTokenHandler\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets or sets a handler for when the token is issued.\n  syntax:\n    content: public System.ServiceModel.Security.Tokens.IssuedSecurityTokenHandler IssuedSecurityTokenHandler { get; set; }\n    return:\n      type: System.ServiceModel.Security.Tokens.IssuedSecurityTokenHandler\n      description: A delegate that handles the event when a token is issued.\n  overload: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.IssuedSecurityTokenHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.RenewedSecurityTokenHandler\n  id: RenewedSecurityTokenHandler\n  parent: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: RenewedSecurityTokenHandler\n  nameWithType: IIssuanceSecurityTokenAuthenticator.RenewedSecurityTokenHandler\n  fullName: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.RenewedSecurityTokenHandler\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets or sets a handler for when the token is renewed.\n  remarks: This delegate should be invoked only if the token authenticator handles renewal of issued tokens.\n  syntax:\n    content: public System.ServiceModel.Security.Tokens.RenewedSecurityTokenHandler RenewedSecurityTokenHandler { get; set; }\n    return:\n      type: System.ServiceModel.Security.Tokens.RenewedSecurityTokenHandler\n      description: A delegate that handles the event when a token is renewed.\n  overload: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.RenewedSecurityTokenHandler*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.IssuedSecurityTokenHandler\n  parent: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator\n  isExternal: false\n  name: IssuedSecurityTokenHandler\n  nameWithType: IIssuanceSecurityTokenAuthenticator.IssuedSecurityTokenHandler\n  fullName: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.IssuedSecurityTokenHandler\n- uid: System.ServiceModel.Security.Tokens.IssuedSecurityTokenHandler\n  parent: System.ServiceModel.Security.Tokens\n  isExternal: false\n  name: IssuedSecurityTokenHandler\n  nameWithType: IssuedSecurityTokenHandler\n  fullName: System.ServiceModel.Security.Tokens.IssuedSecurityTokenHandler\n- uid: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.RenewedSecurityTokenHandler\n  parent: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator\n  isExternal: false\n  name: RenewedSecurityTokenHandler\n  nameWithType: IIssuanceSecurityTokenAuthenticator.RenewedSecurityTokenHandler\n  fullName: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.RenewedSecurityTokenHandler\n- uid: System.ServiceModel.Security.Tokens.RenewedSecurityTokenHandler\n  parent: System.ServiceModel.Security.Tokens\n  isExternal: false\n  name: RenewedSecurityTokenHandler\n  nameWithType: RenewedSecurityTokenHandler\n  fullName: System.ServiceModel.Security.Tokens.RenewedSecurityTokenHandler\n- uid: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.IssuedSecurityTokenHandler*\n  parent: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator\n  isExternal: false\n  name: IssuedSecurityTokenHandler\n  nameWithType: IIssuanceSecurityTokenAuthenticator.IssuedSecurityTokenHandler\n- uid: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.RenewedSecurityTokenHandler*\n  parent: System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator\n  isExternal: false\n  name: RenewedSecurityTokenHandler\n  nameWithType: IIssuanceSecurityTokenAuthenticator.RenewedSecurityTokenHandler\n"}