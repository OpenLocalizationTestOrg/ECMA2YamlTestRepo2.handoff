{"nodes":[{"pos":[1813,1919],"content":"Represents the mapping between a field or a property of a domain object into a column of a database table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the mapping between a field or a property of a domain object into a column of a database table.","pos":[0,106]}]},{"pos":[2459,2560],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaDataMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaDataMember\"></xref> class."},{"pos":[3106,3209],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaAssociation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that corresponds to this member.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaAssociation\"></xref> that corresponds to this member."},{"pos":[3221,3316],"content":"This property represents a database association like a foreign-key to primary-key relationship.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property represents a database association like a foreign-key to primary-key relationship.","pos":[0,95]}]},{"pos":[3502,3669],"content":"The corresponding <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaAssociation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if one exists; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The corresponding <xref href=\"System.Data.Linq.Mapping.MetaAssociation\"></xref> if one exists; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4135,4212],"content":"Gets the read-back behavior for this member for insert and update operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the read-back behavior for this member for insert and update operations.","pos":[0,77]}]},{"pos":[4381,4451],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.AutoSync\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.Linq.Mapping.AutoSync\"></xref> enumeration."},{"pos":[4919,5044],"content":"Gets whether the value of this member can be assigned the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"Gets whether the value of this member can be assigned the <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> value."},{"pos":[5056,5189],"content":"This property is dependent on the <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> property, and is provided for convenience.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is dependent on the &lt;xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A&gt; property, and is provided for convenience.","pos":[0,133],"source":"This property is dependent on the <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> property, and is provided for convenience."}]},{"pos":[5311,5549],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this member can be assigned the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member can be assigned the <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6003,6054],"content":"Gets the type of the corresponding database column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of the corresponding database column.","pos":[0,51]}]},{"pos":[6066,6242],"content":"This will be the exact text used to define the column in a Transact-SQL table declaration command. If not so defined, the database column type is inferred from the member type.","needQuote":true,"needEscape":true,"nodes":[{"content":"This will be the exact text used to define the column in a Transact-SQL table declaration command. If not so defined, the database column type is inferred from the member type.","pos":[0,176],"nodes":[{"content":"This will be the exact text used to define the column in a Transact-SQL table declaration command.","pos":[0,98]},{"content":"If not so defined, the database column type is inferred from the member type.","pos":[99,176]}]}]},{"pos":[6362,6406],"content":"The type of the database column as a string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the database column as a string.","pos":[0,44]}]},{"pos":[6892,6987],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains this data member.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> that contains this data member."},{"pos":[7161,7208],"content":"The meta-type that contains the current member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The meta-type that contains the current member.","pos":[0,47]}]},{"pos":[7746,7827],"content":"Gets the accessor that is used to get and set the deferred source of this member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the accessor that is used to get and set the deferred source of this member.","pos":[0,81]}]},{"pos":[8018,8082],"content":"The accessor used to access the deferred source for this member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The accessor used to access the deferred source for this member.","pos":[0,64]}]},{"pos":[8624,8728],"content":"Gets the accessor that is used to get and set the deferred value of this member (without causing fetch).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the accessor that is used to get and set the deferred value of this member (without causing fetch).","pos":[0,104]}]},{"pos":[8918,8981],"content":"The accessor used to access the deferred value for this member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The accessor used to access the deferred value for this member.","pos":[0,63]}]},{"pos":[9467,9518],"content":"Gets the expression that defines a computed column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the expression that defines a computed column.","pos":[0,51]}]},{"pos":[9642,9693],"content":"The expression for the computed column as a string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression for the computed column as a string.","pos":[0,51]}]},{"pos":[10183,10244],"content":"Gets whether this member defines an association relationship.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether this member defines an association relationship.","pos":[0,61]}]},{"pos":[10370,10557],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this member defines an association relationship; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member defines an association relationship; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11050,11118],"content":"Gets whether this member is automatically generated by the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether this member is automatically generated by the database.","pos":[0,68]}]},{"pos":[11130,11291],"content":"Automatically generated members are synchronized immediately after the corresponding data row is inserted. Insert trigger-generated key values are not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Automatically generated members are synchronized immediately after the corresponding data row is inserted. Insert trigger-generated key values are not supported.","pos":[0,161],"nodes":[{"content":"Automatically generated members are synchronized immediately after the corresponding data row is inserted.","pos":[0,106]},{"content":"Insert trigger-generated key values are not supported.","pos":[107,161]}]}]},{"pos":[11417,11610],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this member is automatically generated by the database; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member is automatically generated by the database; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12196,12260],"content":"Specifies whether this member is declared by the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether this member is declared by the specified type.","pos":[0,64]}]},{"pos":[12456,12474],"content":"The type to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to check.","pos":[0,18]}]},{"pos":[12533,12718],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this member is declared by the specified type; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member is declared by the specified type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13195,13272],"content":"Gets whether the default behavior is to load this member on a deferred basis.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether the default behavior is to load this member on a deferred basis.","pos":[0,77]}]},{"pos":[13395,13584],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this member loaded on a deferred basis by default; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member loaded on a deferred basis by default; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14084,14150],"content":"Gets whether this member represents the inheritance discriminator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether this member represents the inheritance discriminator.","pos":[0,66]}]},{"pos":[14162,14256],"content":"This property can be <ph id=\"ph1\">`true`</ph> for at most one member of the topmost mapped class in a hierarchy.","needQuote":true,"needEscape":true,"source":"This property can be `true` for at most one member of the topmost mapped class in a hierarchy."},{"pos":[14384,14576],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this member represents the inheritance discriminator; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member represents the inheritance discriminator; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15066,15129],"content":"Gets whether this member is mapped to a column (or constraint).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether this member is mapped to a column (or constraint).","pos":[0,63]}]},{"pos":[15141,15345],"content":"A class may have a combination of persistent and non-persistent members. Persistent members are mapped while non-persistent members are not mapped. A mapped class must have at least one persistent member.","needQuote":true,"needEscape":true,"nodes":[{"content":"A class may have a combination of persistent and non-persistent members. Persistent members are mapped while non-persistent members are not mapped. A mapped class must have at least one persistent member.","pos":[0,204],"nodes":[{"content":"A class may have a combination of persistent and non-persistent members.","pos":[0,72]},{"content":"Persistent members are mapped while non-persistent members are not mapped.","pos":[73,147]},{"content":"A mapped class must have at least one persistent member.","pos":[148,204]}]}]},{"pos":[15470,15659],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this member is mapped to a column (or constraint); otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member is mapped to a column (or constraint); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16146,16202],"content":"Gets whether this member is part of the type's identity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether this member is part of the type's identity.","pos":[0,56]}]},{"pos":[16215,16969],"content":"If this property is `true`, the class member represents a column that is part of the table’s unique key. More than one member of the class can have this property set to `true` for a key that is a composite of the associated columns. For an entity class, at least one member must have this attribute and should be mapped to the primary key or a unique key in the corresponding table or view. Otherwise, LINQ to SQL considers instances of the class as read-only for the purpose of submitting changes to the database.       The set of columns identified with IsPrimaryKey are not required to be the primary key. They simply denote a set that uniquely identifies the entity. Common alternatives include clustering index columns or other unique key columns.","needQuote":false,"needEscape":true,"nodes":[{"content":"If this property is <ph id=\"ph1\">`true`</ph>, the class member represents a column that is part of the table’s unique key.","pos":[0,104],"source":"If this property is `true`, the class member represents a column that is part of the table’s unique key."},{"content":"More than one member of the class can have this property set to <ph id=\"ph1\">`true`</ph> for a key that is a composite of the associated columns.","pos":[105,232],"source":" More than one member of the class can have this property set to `true` for a key that is a composite of the associated columns."},{"content":"For an entity class, at least one member must have this attribute and should be mapped to the primary key or a unique key in the corresponding table or view.","pos":[233,390]},{"content":"Otherwise, LINQ to SQL considers instances of the class as read-only for the purpose of submitting changes to the database.","pos":[391,514]},{"content":"The set of columns identified with IsPrimaryKey are not required to be the primary key.","pos":[521,608]},{"content":"They simply denote a set that uniquely identifies the entity.","pos":[609,670]},{"content":"Common alternatives include clustering index columns or other unique key columns.","pos":[671,752]}]},{"pos":[17095,17277],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this member is part of the type's identity; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member is part of the type's identity; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17749,17814],"content":"Gets whether this member represents the row version or timestamp.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether this member represents the row version or timestamp.","pos":[0,65]}]},{"pos":[17826,17931],"content":"Version numbers are incremented and timestamp columns are updated whenever the associated row is updated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Version numbers are incremented and timestamp columns are updated whenever the associated row is updated.","pos":[0,105]}]},{"pos":[18053,18244],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this member represents the row version or timestamp; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member represents the row version or timestamp; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18718,18824],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> method that is used to perform load operations.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.Linq.DataContext\"></xref> method that is used to perform load operations."},{"pos":[18985,19040],"content":"The load method as <xref:System.Reflection.MethodInfo>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The load method as &lt;xref:System.Reflection.MethodInfo&gt;.","pos":[0,55],"source":"The load method as <xref:System.Reflection.MethodInfo>."}]},{"pos":[19515,19575],"content":"Gets the name of the column (or constraint) in the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the column (or constraint) in the database.","pos":[0,60]}]},{"pos":[19699,19750],"content":"The name of the column (or constraint) as a string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the column (or constraint) as a string.","pos":[0,51]}]},{"pos":[20205,20261],"content":"Gets the underlying <xref:System.Reflection.MemberInfo>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the underlying &lt;xref:System.Reflection.MemberInfo&gt;.","pos":[0,56],"source":"Gets the underlying <xref:System.Reflection.MemberInfo>."}]},{"pos":[20418,20460],"content":"Member attribute and metadata information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Member attribute and metadata information.","pos":[0,42]}]},{"pos":[20951,21021],"content":"Gets the accessor that is used to get or set the value of this member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the accessor that is used to get or set the value of this member.","pos":[0,70]}]},{"pos":[21204,21217],"content":"The accessor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The accessor.","pos":[0,13]}]},{"pos":[21666,21748],"content":"Gets the name of the member, same as the <xref:System.Reflection.MemberInfo> name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the member, same as the &lt;xref:System.Reflection.MemberInfo&gt; name.","pos":[0,82],"source":"Gets the name of the member, same as the <xref:System.Reflection.MemberInfo> name."}]},{"pos":[21866,21929],"content":"The name, same as the <xref:System.Reflection.MemberInfo> name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name, same as the &lt;xref:System.Reflection.MemberInfo&gt; name.","pos":[0,63],"source":"The name, same as the <xref:System.Reflection.MemberInfo> name."}]},{"pos":[22383,22463],"content":"Gets the ordinal position of this member in the default layout of query results.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the ordinal position of this member in the default layout of query results.","pos":[0,80]}]},{"pos":[22580,22601],"content":"The ordinal position.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ordinal position.","pos":[0,21]}]},{"pos":[23098,23176],"content":"Gets the accessor that is used to get or set the storage value of this member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the accessor that is used to get or set the storage value of this member.","pos":[0,78]}]},{"pos":[23360,23410],"content":"The accessor for the storage value of this member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The accessor for the storage value of this member.","pos":[0,50]}]},{"pos":[23905,23958],"content":"Gets the member that stores the data for this member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the member that stores the data for this member.","pos":[0,53]}]},{"pos":[24122,24141],"content":"The storage member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The storage member.","pos":[0,19]}]},{"pos":[24589,24618],"content":"Gets the type of this member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of this member.","pos":[0,29]}]},{"pos":[24732,24763],"content":"The type of the current member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the current member.","pos":[0,31]}]},{"pos":[25237,25298],"content":"Gets the optimistic concurrency check policy for this member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the optimistic concurrency check policy for this member.","pos":[0,61]}]},{"pos":[25311,25816],"content":"If the class does not have a version member (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> set to `true`), detection is done by comparing original member values with the current database state.       The UpdateCheck property determines how LINQ to SQL implements conflict detection under optimistic concurrency. Only those members with this property set to <xref:System.Data.Linq.Mapping.UpdateCheck> or <xref:System.Data.Linq.Mapping.UpdateCheck> are considered during conflict detection.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the class does not have a version member (&lt;xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A&gt; set to <ph id=\"ph1\">`true`</ph>), detection is done by comparing original member values with the current database state.","pos":[0,207],"source":"If the class does not have a version member (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> set to `true`), detection is done by comparing original member values with the current database state."},{"content":"The UpdateCheck property determines how LINQ to SQL implements conflict detection under optimistic concurrency.","pos":[214,325]},{"content":"Only those members with this property set to &lt;xref:System.Data.Linq.Mapping.UpdateCheck&gt; or &lt;xref:System.Data.Linq.Mapping.UpdateCheck&gt; are considered during conflict detection.","pos":[326,503],"source":" Only those members with this property set to <xref:System.Data.Linq.Mapping.UpdateCheck> or <xref:System.Data.Linq.Mapping.UpdateCheck> are considered during conflict detection."}]},{"pos":[25995,26061],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.UpdateCheck\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enum.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.Linq.Mapping.UpdateCheck\"></xref> enum."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.Mapping.MetaDataMember\n  id: MetaDataMember\n  children:\n  - System.Data.Linq.Mapping.MetaDataMember.#ctor\n  - System.Data.Linq.Mapping.MetaDataMember.Association\n  - System.Data.Linq.Mapping.MetaDataMember.AutoSync\n  - System.Data.Linq.Mapping.MetaDataMember.CanBeNull\n  - System.Data.Linq.Mapping.MetaDataMember.DbType\n  - System.Data.Linq.Mapping.MetaDataMember.DeclaringType\n  - System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor\n  - System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor\n  - System.Data.Linq.Mapping.MetaDataMember.Expression\n  - System.Data.Linq.Mapping.MetaDataMember.IsAssociation\n  - System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated\n  - System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)\n  - System.Data.Linq.Mapping.MetaDataMember.IsDeferred\n  - System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator\n  - System.Data.Linq.Mapping.MetaDataMember.IsPersistent\n  - System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey\n  - System.Data.Linq.Mapping.MetaDataMember.IsVersion\n  - System.Data.Linq.Mapping.MetaDataMember.LoadMethod\n  - System.Data.Linq.Mapping.MetaDataMember.MappedName\n  - System.Data.Linq.Mapping.MetaDataMember.Member\n  - System.Data.Linq.Mapping.MetaDataMember.MemberAccessor\n  - System.Data.Linq.Mapping.MetaDataMember.Name\n  - System.Data.Linq.Mapping.MetaDataMember.Ordinal\n  - System.Data.Linq.Mapping.MetaDataMember.StorageAccessor\n  - System.Data.Linq.Mapping.MetaDataMember.StorageMember\n  - System.Data.Linq.Mapping.MetaDataMember.Type\n  - System.Data.Linq.Mapping.MetaDataMember.UpdateCheck\n  langs:\n  - csharp\n  name: MetaDataMember\n  nameWithType: MetaDataMember\n  fullName: System.Data.Linq.Mapping.MetaDataMember\n  type: Class\n  summary: Represents the mapping between a field or a property of a domain object into a column of a database table.\n  syntax:\n    content: public abstract class MetaDataMember\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor\n  id: '#ctor'\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: MetaDataMember()\n  nameWithType: MetaDataMember.MetaDataMember()\n  fullName: System.Data.Linq.Mapping.MetaDataMember.MetaDataMember()\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaDataMember\"></xref> class.\n  syntax:\n    content: protected MetaDataMember ();\n    parameters: []\n  overload: System.Data.Linq.Mapping.MetaDataMember.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.Association\n  id: Association\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: Association\n  nameWithType: MetaDataMember.Association\n  fullName: System.Data.Linq.Mapping.MetaDataMember.Association\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.Mapping.MetaAssociation\"></xref> that corresponds to this member.\n  remarks: This property represents a database association like a foreign-key to primary-key relationship.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaAssociation Association { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaAssociation\n      description: The corresponding <xref href=\"System.Data.Linq.Mapping.MetaAssociation\"></xref> if one exists; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaDataMember.Association*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync\n  id: AutoSync\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: AutoSync\n  nameWithType: MetaDataMember.AutoSync\n  fullName: System.Data.Linq.Mapping.MetaDataMember.AutoSync\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the read-back behavior for this member for insert and update operations.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.AutoSync AutoSync { get; }\n    return:\n      type: System.Data.Linq.Mapping.AutoSync\n      description: An <xref href=\"System.Data.Linq.Mapping.AutoSync\"></xref> enumeration.\n  overload: System.Data.Linq.Mapping.MetaDataMember.AutoSync*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull\n  id: CanBeNull\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: CanBeNull\n  nameWithType: MetaDataMember.CanBeNull\n  fullName: System.Data.Linq.Mapping.MetaDataMember.CanBeNull\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the value of this member can be assigned the <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> value.\n  remarks: This property is dependent on the <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> property, and is provided for convenience.\n  syntax:\n    content: public abstract bool CanBeNull { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member can be assigned the <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaDataMember.CanBeNull*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.DbType\n  id: DbType\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: DbType\n  nameWithType: MetaDataMember.DbType\n  fullName: System.Data.Linq.Mapping.MetaDataMember.DbType\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the type of the corresponding database column.\n  remarks: This will be the exact text used to define the column in a Transact-SQL table declaration command. If not so defined, the database column type is inferred from the member type.\n  syntax:\n    content: public abstract string DbType { get; }\n    return:\n      type: System.String\n      description: The type of the database column as a string.\n  overload: System.Data.Linq.Mapping.MetaDataMember.DbType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType\n  id: DeclaringType\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: DeclaringType\n  nameWithType: MetaDataMember.DeclaringType\n  fullName: System.Data.Linq.Mapping.MetaDataMember.DeclaringType\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> that contains this data member.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaType DeclaringType { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaType\n      description: The meta-type that contains the current member.\n  overload: System.Data.Linq.Mapping.MetaDataMember.DeclaringType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor\n  id: DeferredSourceAccessor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: DeferredSourceAccessor\n  nameWithType: MetaDataMember.DeferredSourceAccessor\n  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the accessor that is used to get and set the deferred source of this member.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaAccessor\n      description: The accessor used to access the deferred source for this member.\n  overload: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor\n  id: DeferredValueAccessor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: DeferredValueAccessor\n  nameWithType: MetaDataMember.DeferredValueAccessor\n  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the accessor that is used to get and set the deferred value of this member (without causing fetch).\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaAccessor\n      description: The accessor used to access the deferred value for this member.\n  overload: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.Expression\n  id: Expression\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: Expression\n  nameWithType: MetaDataMember.Expression\n  fullName: System.Data.Linq.Mapping.MetaDataMember.Expression\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the expression that defines a computed column.\n  syntax:\n    content: public abstract string Expression { get; }\n    return:\n      type: System.String\n      description: The expression for the computed column as a string.\n  overload: System.Data.Linq.Mapping.MetaDataMember.Expression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation\n  id: IsAssociation\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: IsAssociation\n  nameWithType: MetaDataMember.IsAssociation\n  fullName: System.Data.Linq.Mapping.MetaDataMember.IsAssociation\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether this member defines an association relationship.\n  syntax:\n    content: public abstract bool IsAssociation { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member defines an association relationship; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaDataMember.IsAssociation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated\n  id: IsDbGenerated\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: IsDbGenerated\n  nameWithType: MetaDataMember.IsDbGenerated\n  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether this member is automatically generated by the database.\n  remarks: Automatically generated members are synchronized immediately after the corresponding data row is inserted. Insert trigger-generated key values are not supported.\n  syntax:\n    content: public abstract bool IsDbGenerated { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member is automatically generated by the database; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)\n  id: IsDeclaredBy(System.Data.Linq.Mapping.MetaType)\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: IsDeclaredBy(MetaType)\n  nameWithType: MetaDataMember.IsDeclaredBy(MetaType)\n  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(MetaType)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Specifies whether this member is declared by the specified type.\n  syntax:\n    content: public abstract bool IsDeclaredBy (System.Data.Linq.Mapping.MetaType type);\n    parameters:\n    - id: type\n      type: System.Data.Linq.Mapping.MetaType\n      description: The type to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member is declared by the specified type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred\n  id: IsDeferred\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: IsDeferred\n  nameWithType: MetaDataMember.IsDeferred\n  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeferred\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the default behavior is to load this member on a deferred basis.\n  syntax:\n    content: public abstract bool IsDeferred { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member loaded on a deferred basis by default; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaDataMember.IsDeferred*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator\n  id: IsDiscriminator\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: IsDiscriminator\n  nameWithType: MetaDataMember.IsDiscriminator\n  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether this member represents the inheritance discriminator.\n  remarks: This property can be `true` for at most one member of the topmost mapped class in a hierarchy.\n  syntax:\n    content: public abstract bool IsDiscriminator { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member represents the inheritance discriminator; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent\n  id: IsPersistent\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: IsPersistent\n  nameWithType: MetaDataMember.IsPersistent\n  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPersistent\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether this member is mapped to a column (or constraint).\n  remarks: A class may have a combination of persistent and non-persistent members. Persistent members are mapped while non-persistent members are not mapped. A mapped class must have at least one persistent member.\n  syntax:\n    content: public abstract bool IsPersistent { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member is mapped to a column (or constraint); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaDataMember.IsPersistent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey\n  id: IsPrimaryKey\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: IsPrimaryKey\n  nameWithType: MetaDataMember.IsPrimaryKey\n  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether this member is part of the type's identity.\n  remarks: \"If this property is `true`, the class member represents a column that is part of the table’s unique key. More than one member of the class can have this property set to `true` for a key that is a composite of the associated columns. For an entity class, at least one member must have this attribute and should be mapped to the primary key or a unique key in the corresponding table or view. Otherwise, LINQ to SQL considers instances of the class as read-only for the purpose of submitting changes to the database.  \\n  \\n The set of columns identified with IsPrimaryKey are not required to be the primary key. They simply denote a set that uniquely identifies the entity. Common alternatives include clustering index columns or other unique key columns.\"\n  syntax:\n    content: public abstract bool IsPrimaryKey { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member is part of the type's identity; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion\n  id: IsVersion\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: IsVersion\n  nameWithType: MetaDataMember.IsVersion\n  fullName: System.Data.Linq.Mapping.MetaDataMember.IsVersion\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether this member represents the row version or timestamp.\n  remarks: Version numbers are incremented and timestamp columns are updated whenever the associated row is updated.\n  syntax:\n    content: public abstract bool IsVersion { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member represents the row version or timestamp; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaDataMember.IsVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod\n  id: LoadMethod\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: LoadMethod\n  nameWithType: MetaDataMember.LoadMethod\n  fullName: System.Data.Linq.Mapping.MetaDataMember.LoadMethod\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.DataContext\"></xref> method that is used to perform load operations.\n  syntax:\n    content: public abstract System.Reflection.MethodInfo LoadMethod { get; }\n    return:\n      type: System.Reflection.MethodInfo\n      description: The load method as <xref:System.Reflection.MethodInfo>.\n  overload: System.Data.Linq.Mapping.MetaDataMember.LoadMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName\n  id: MappedName\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: MappedName\n  nameWithType: MetaDataMember.MappedName\n  fullName: System.Data.Linq.Mapping.MetaDataMember.MappedName\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the name of the column (or constraint) in the database.\n  syntax:\n    content: public abstract string MappedName { get; }\n    return:\n      type: System.String\n      description: The name of the column (or constraint) as a string.\n  overload: System.Data.Linq.Mapping.MetaDataMember.MappedName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.Member\n  id: Member\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: Member\n  nameWithType: MetaDataMember.Member\n  fullName: System.Data.Linq.Mapping.MetaDataMember.Member\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the underlying <xref:System.Reflection.MemberInfo>.\n  syntax:\n    content: public abstract System.Reflection.MemberInfo Member { get; }\n    return:\n      type: System.Reflection.MemberInfo\n      description: Member attribute and metadata information.\n  overload: System.Data.Linq.Mapping.MetaDataMember.Member*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor\n  id: MemberAccessor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: MemberAccessor\n  nameWithType: MetaDataMember.MemberAccessor\n  fullName: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the accessor that is used to get or set the value of this member.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaAccessor MemberAccessor { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaAccessor\n      description: The accessor.\n  overload: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.Name\n  id: Name\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: Name\n  nameWithType: MetaDataMember.Name\n  fullName: System.Data.Linq.Mapping.MetaDataMember.Name\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the name of the member, same as the <xref:System.Reflection.MemberInfo> name.\n  syntax:\n    content: public abstract string Name { get; }\n    return:\n      type: System.String\n      description: The name, same as the <xref:System.Reflection.MemberInfo> name.\n  overload: System.Data.Linq.Mapping.MetaDataMember.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal\n  id: Ordinal\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: Ordinal\n  nameWithType: MetaDataMember.Ordinal\n  fullName: System.Data.Linq.Mapping.MetaDataMember.Ordinal\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the ordinal position of this member in the default layout of query results.\n  syntax:\n    content: public abstract int Ordinal { get; }\n    return:\n      type: System.Int32\n      description: The ordinal position.\n  overload: System.Data.Linq.Mapping.MetaDataMember.Ordinal*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor\n  id: StorageAccessor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: StorageAccessor\n  nameWithType: MetaDataMember.StorageAccessor\n  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the accessor that is used to get or set the storage value of this member.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaAccessor StorageAccessor { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaAccessor\n      description: The accessor for the storage value of this member.\n  overload: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember\n  id: StorageMember\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: StorageMember\n  nameWithType: MetaDataMember.StorageMember\n  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageMember\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the member that stores the data for this member.\n  syntax:\n    content: public abstract System.Reflection.MemberInfo StorageMember { get; }\n    return:\n      type: System.Reflection.MemberInfo\n      description: The storage member.\n  overload: System.Data.Linq.Mapping.MetaDataMember.StorageMember*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.Type\n  id: Type\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: Type\n  nameWithType: MetaDataMember.Type\n  fullName: System.Data.Linq.Mapping.MetaDataMember.Type\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the type of this member.\n  syntax:\n    content: public abstract Type Type { get; }\n    return:\n      type: System.Type\n      description: The type of the current member.\n  overload: System.Data.Linq.Mapping.MetaDataMember.Type*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck\n  id: UpdateCheck\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: UpdateCheck\n  nameWithType: MetaDataMember.UpdateCheck\n  fullName: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the optimistic concurrency check policy for this member.\n  remarks: \"If the class does not have a version member (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> set to `true`), detection is done by comparing original member values with the current database state.  \\n  \\n The UpdateCheck property determines how LINQ to SQL implements conflict detection under optimistic concurrency. Only those members with this property set to <xref:System.Data.Linq.Mapping.UpdateCheck> or <xref:System.Data.Linq.Mapping.UpdateCheck> are considered during conflict detection.\"\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; }\n    return:\n      type: System.Data.Linq.Mapping.UpdateCheck\n      description: An <xref href=\"System.Data.Linq.Mapping.UpdateCheck\"></xref> enum.\n  overload: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: MetaDataMember()\n  nameWithType: MetaDataMember.MetaDataMember()\n  fullName: System.Data.Linq.Mapping.MetaDataMember.MetaDataMember()\n- uid: System.Data.Linq.Mapping.MetaDataMember.Association\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Association\n  nameWithType: MetaDataMember.Association\n  fullName: System.Data.Linq.Mapping.MetaDataMember.Association\n- uid: System.Data.Linq.Mapping.MetaAssociation\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaAssociation\n  nameWithType: MetaAssociation\n  fullName: System.Data.Linq.Mapping.MetaAssociation\n- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: AutoSync\n  nameWithType: MetaDataMember.AutoSync\n  fullName: System.Data.Linq.Mapping.MetaDataMember.AutoSync\n- uid: System.Data.Linq.Mapping.AutoSync\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: AutoSync\n  nameWithType: AutoSync\n  fullName: System.Data.Linq.Mapping.AutoSync\n- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: CanBeNull\n  nameWithType: MetaDataMember.CanBeNull\n  fullName: System.Data.Linq.Mapping.MetaDataMember.CanBeNull\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.Mapping.MetaDataMember.DbType\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: DbType\n  nameWithType: MetaDataMember.DbType\n  fullName: System.Data.Linq.Mapping.MetaDataMember.DbType\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: DeclaringType\n  nameWithType: MetaDataMember.DeclaringType\n  fullName: System.Data.Linq.Mapping.MetaDataMember.DeclaringType\n- uid: System.Data.Linq.Mapping.MetaType\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaType\n  nameWithType: MetaType\n  fullName: System.Data.Linq.Mapping.MetaType\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: DeferredSourceAccessor\n  nameWithType: MetaDataMember.DeferredSourceAccessor\n  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor\n- uid: System.Data.Linq.Mapping.MetaAccessor\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaAccessor\n  nameWithType: MetaAccessor\n  fullName: System.Data.Linq.Mapping.MetaAccessor\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: DeferredValueAccessor\n  nameWithType: MetaDataMember.DeferredValueAccessor\n  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor\n- uid: System.Data.Linq.Mapping.MetaDataMember.Expression\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Expression\n  nameWithType: MetaDataMember.Expression\n  fullName: System.Data.Linq.Mapping.MetaDataMember.Expression\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsAssociation\n  nameWithType: MetaDataMember.IsAssociation\n  fullName: System.Data.Linq.Mapping.MetaDataMember.IsAssociation\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsDbGenerated\n  nameWithType: MetaDataMember.IsDbGenerated\n  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsDeclaredBy(MetaType)\n  nameWithType: MetaDataMember.IsDeclaredBy(MetaType)\n  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(MetaType)\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsDeferred\n  nameWithType: MetaDataMember.IsDeferred\n  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeferred\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsDiscriminator\n  nameWithType: MetaDataMember.IsDiscriminator\n  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsPersistent\n  nameWithType: MetaDataMember.IsPersistent\n  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPersistent\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsPrimaryKey\n  nameWithType: MetaDataMember.IsPrimaryKey\n  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsVersion\n  nameWithType: MetaDataMember.IsVersion\n  fullName: System.Data.Linq.Mapping.MetaDataMember.IsVersion\n- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: LoadMethod\n  nameWithType: MetaDataMember.LoadMethod\n  fullName: System.Data.Linq.Mapping.MetaDataMember.LoadMethod\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: true\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: MappedName\n  nameWithType: MetaDataMember.MappedName\n  fullName: System.Data.Linq.Mapping.MetaDataMember.MappedName\n- uid: System.Data.Linq.Mapping.MetaDataMember.Member\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Member\n  nameWithType: MetaDataMember.Member\n  fullName: System.Data.Linq.Mapping.MetaDataMember.Member\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: true\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: MemberAccessor\n  nameWithType: MetaDataMember.MemberAccessor\n  fullName: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor\n- uid: System.Data.Linq.Mapping.MetaDataMember.Name\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Name\n  nameWithType: MetaDataMember.Name\n  fullName: System.Data.Linq.Mapping.MetaDataMember.Name\n- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Ordinal\n  nameWithType: MetaDataMember.Ordinal\n  fullName: System.Data.Linq.Mapping.MetaDataMember.Ordinal\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: StorageAccessor\n  nameWithType: MetaDataMember.StorageAccessor\n  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor\n- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: StorageMember\n  nameWithType: MetaDataMember.StorageMember\n  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageMember\n- uid: System.Data.Linq.Mapping.MetaDataMember.Type\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Type\n  nameWithType: MetaDataMember.Type\n  fullName: System.Data.Linq.Mapping.MetaDataMember.Type\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: UpdateCheck\n  nameWithType: MetaDataMember.UpdateCheck\n  fullName: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck\n- uid: System.Data.Linq.Mapping.UpdateCheck\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: UpdateCheck\n  nameWithType: UpdateCheck\n  fullName: System.Data.Linq.Mapping.UpdateCheck\n- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: MetaDataMember\n  nameWithType: MetaDataMember.MetaDataMember\n- uid: System.Data.Linq.Mapping.MetaDataMember.Association*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Association\n  nameWithType: MetaDataMember.Association\n- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: AutoSync\n  nameWithType: MetaDataMember.AutoSync\n- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: CanBeNull\n  nameWithType: MetaDataMember.CanBeNull\n- uid: System.Data.Linq.Mapping.MetaDataMember.DbType*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: DbType\n  nameWithType: MetaDataMember.DbType\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: DeclaringType\n  nameWithType: MetaDataMember.DeclaringType\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: DeferredSourceAccessor\n  nameWithType: MetaDataMember.DeferredSourceAccessor\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: DeferredValueAccessor\n  nameWithType: MetaDataMember.DeferredValueAccessor\n- uid: System.Data.Linq.Mapping.MetaDataMember.Expression*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Expression\n  nameWithType: MetaDataMember.Expression\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsAssociation\n  nameWithType: MetaDataMember.IsAssociation\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsDbGenerated\n  nameWithType: MetaDataMember.IsDbGenerated\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsDeclaredBy\n  nameWithType: MetaDataMember.IsDeclaredBy\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsDeferred\n  nameWithType: MetaDataMember.IsDeferred\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsDiscriminator\n  nameWithType: MetaDataMember.IsDiscriminator\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsPersistent\n  nameWithType: MetaDataMember.IsPersistent\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsPrimaryKey\n  nameWithType: MetaDataMember.IsPrimaryKey\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsVersion\n  nameWithType: MetaDataMember.IsVersion\n- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: LoadMethod\n  nameWithType: MetaDataMember.LoadMethod\n- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: MappedName\n  nameWithType: MetaDataMember.MappedName\n- uid: System.Data.Linq.Mapping.MetaDataMember.Member*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Member\n  nameWithType: MetaDataMember.Member\n- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: MemberAccessor\n  nameWithType: MetaDataMember.MemberAccessor\n- uid: System.Data.Linq.Mapping.MetaDataMember.Name*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Name\n  nameWithType: MetaDataMember.Name\n- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Ordinal\n  nameWithType: MetaDataMember.Ordinal\n- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: StorageAccessor\n  nameWithType: MetaDataMember.StorageAccessor\n- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: StorageMember\n  nameWithType: MetaDataMember.StorageMember\n- uid: System.Data.Linq.Mapping.MetaDataMember.Type*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Type\n  nameWithType: MetaDataMember.Type\n- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: UpdateCheck\n  nameWithType: MetaDataMember.UpdateCheck\n"}