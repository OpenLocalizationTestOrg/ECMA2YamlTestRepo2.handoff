{"nodes":[{"pos":[831,956],"content":"Specifies the <xref href=\"System.ComponentModel.LicenseProvider\"></xref> to use with a class. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.LicenseProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use with a class.","pos":[0,93],"source":"Specifies the <xref href=\"System.ComponentModel.LicenseProvider\"></xref> to use with a class."},{"content":"This class cannot be inherited.","pos":[94,125]}]},{"pos":[969,2238],"content":"When you create a component that you want to license, you must specify the <xref:System.ComponentModel.LicenseProvider> by marking the component with a LicenseProviderAttribute.       Use the <xref:System.ComponentModel.LicenseProviderAttribute.LicenseProvider%2A> property to get the <xref:System.Type> of the <xref:System.ComponentModel.LicenseProvider>.       For more information about attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md). For more information about licensing, see [How to: License Components and Controls](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"When you create a component that you want to license, you must specify the &lt;xref:System.ComponentModel.LicenseProvider&gt; by marking the component with a LicenseProviderAttribute.","pos":[0,177],"source":"When you create a component that you want to license, you must specify the <xref:System.ComponentModel.LicenseProvider> by marking the component with a LicenseProviderAttribute."},{"content":"Use the &lt;xref:System.ComponentModel.LicenseProviderAttribute.LicenseProvider%2A&gt; property to get the &lt;xref:System.Type&gt; of the &lt;xref:System.ComponentModel.LicenseProvider&gt;.","pos":[184,356],"source":"       Use the <xref:System.ComponentModel.LicenseProviderAttribute.LicenseProvider%2A> property to get the <xref:System.Type> of the <xref:System.ComponentModel.LicenseProvider>."},{"content":"For more information about attributes, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[363,458],"source":"       For more information about attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md)."},{"content":"For more information about licensing, see <bpt id=\"p1\">[</bpt>How to: License Components and Controls<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[459,582],"source":" For more information about licensing, see [How to: License Components and Controls](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Security.Permissions.HostProtectionAttribute&gt; attribute applied to this class has the following &lt;xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A&gt; property value: &lt;xref:System.Security.Permissions.HostProtectionResource&gt;.","pos":[588,860],"source":"      > [!NOTE] >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>."},{"content":"The &lt;xref:System.Security.Permissions.HostProtectionAttribute&gt; does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser).","pos":[861,1068],"source":" The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser)."},{"content":"For more information, see the &lt;xref:System.Security.Permissions.HostProtectionAttribute&gt; class or <bpt id=\"p1\">[</bpt>SQL Server Programming and Host Protection Attributes<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1069,1262],"source":" For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[4009,4144],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.LicenseProviderAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class without a license provider.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref> class without a license provider."},{"pos":[4808,4940],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.LicenseProviderAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified type.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref> class with the specified type."},{"pos":[5095,5150],"content":"The fully qualified name of the license provider class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The fully qualified name of the license provider class.","pos":[0,55]}]},{"pos":[5726,5878],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.LicenseProviderAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified type of license provider.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref> class with the specified type of license provider."},{"pos":[6021,6097],"content":"A <xref:System.Type> that represents the type of the license provider class.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type of the license provider class.","pos":[0,76],"source":"A <xref:System.Type> that represents the type of the license provider class."}]},{"pos":[6574,6714],"content":"Specifies the default value, which is no provider. This <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref> field is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the default value, which is no provider.","pos":[0,50]},{"content":"This <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> field is read-only.","pos":[51,140],"source":" This <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref> field is read-only."}]},{"pos":[6907,6919],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7380,7445],"content":"Indicates whether this instance and a specified object are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether this instance and a specified object are equal.","pos":[0,65]}]},{"pos":[7590,7619],"content":"Another object to compare to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Another object to compare to.","pos":[0,29]}]},{"pos":[7678,7862],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept> is equal to this instance; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>value</code> is equal to this instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8367,8407],"content":"Returns the hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]},{"pos":[8542,8638],"content":"A hash code for the current <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.LicenseProviderAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A hash code for the current <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref>."},{"pos":[9164,9234],"content":"Gets the license provider that must be used with the associated class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the license provider that must be used with the associated class.","pos":[0,70]}]},{"pos":[9350,9503],"content":"A <xref:System.Type> that represents the type of the license provider. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type of the license provider.","pos":[0,70],"source":"A <xref:System.Type> that represents the type of the license provider."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[71,153],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[9988,10034],"content":"Indicates a unique ID for this attribute type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates a unique ID for this attribute type.","pos":[0,46]}]},{"pos":[10154,10190],"content":"A unique ID for this attribute type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique ID for this attribute type.","pos":[0,36]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.LicenseProviderAttribute\n  id: LicenseProviderAttribute\n  children:\n  - System.ComponentModel.LicenseProviderAttribute.#ctor\n  - System.ComponentModel.LicenseProviderAttribute.#ctor(System.String)\n  - System.ComponentModel.LicenseProviderAttribute.#ctor(System.Type)\n  - System.ComponentModel.LicenseProviderAttribute.Default\n  - System.ComponentModel.LicenseProviderAttribute.Equals(System.Object)\n  - System.ComponentModel.LicenseProviderAttribute.GetHashCode\n  - System.ComponentModel.LicenseProviderAttribute.LicenseProvider\n  - System.ComponentModel.LicenseProviderAttribute.TypeId\n  langs:\n  - csharp\n  name: LicenseProviderAttribute\n  nameWithType: LicenseProviderAttribute\n  fullName: System.ComponentModel.LicenseProviderAttribute\n  type: Class\n  summary: Specifies the <xref href=\"System.ComponentModel.LicenseProvider\"></xref> to use with a class. This class cannot be inherited.\n  remarks: \"When you create a component that you want to license, you must specify the <xref:System.ComponentModel.LicenseProvider> by marking the component with a LicenseProviderAttribute.  \\n  \\n Use the <xref:System.ComponentModel.LicenseProviderAttribute.LicenseProvider%2A> property to get the <xref:System.Type> of the <xref:System.ComponentModel.LicenseProvider>.  \\n  \\n For more information about attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md). For more information about licensing, see [How to: License Components and Controls](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example uses the <xref:System.ComponentModel.LicFileLicenseProvider> as the license provider for `MyControl`.  \\n  \\n [!code-cs[Classic LicenseProviderAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._84_1.cs)]\\n [!code-cpp[Classic LicenseProviderAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._84_1.cpp)]\\n [!code-vb[Classic LicenseProviderAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._84_1.vb)]  \\n  \\n The next code example creates an instance of the `MyControl` class. Then, it gets the attributes for the class, and prints the name of the license provider used by `myNewControl`.  \\n  \\n [!code-cs[Classic LicenseProviderAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._84_2.cs)]\\n [!code-cpp[Classic LicenseProviderAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._84_2.cpp)]\\n [!code-vb[Classic LicenseProviderAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._84_2.vb)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)]\n\n      public sealed class LicenseProviderAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.LicenseProviderAttribute.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.LicenseProviderAttribute\n  langs:\n  - csharp\n  name: LicenseProviderAttribute()\n  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute()\n  fullName: System.ComponentModel.LicenseProviderAttribute.LicenseProviderAttribute()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref> class without a license provider.\n  syntax:\n    content: public LicenseProviderAttribute ();\n    parameters: []\n  overload: System.ComponentModel.LicenseProviderAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.LicenseProviderAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ComponentModel.LicenseProviderAttribute\n  langs:\n  - csharp\n  name: LicenseProviderAttribute(String)\n  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute(String)\n  fullName: System.ComponentModel.LicenseProviderAttribute.LicenseProviderAttribute(String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref> class with the specified type.\n  syntax:\n    content: public LicenseProviderAttribute (string typeName);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The fully qualified name of the license provider class.\n  overload: System.ComponentModel.LicenseProviderAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.LicenseProviderAttribute.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.ComponentModel.LicenseProviderAttribute\n  langs:\n  - csharp\n  name: LicenseProviderAttribute(Type)\n  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute(Type)\n  fullName: System.ComponentModel.LicenseProviderAttribute.LicenseProviderAttribute(Type)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref> class with the specified type of license provider.\n  syntax:\n    content: public LicenseProviderAttribute (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: A <xref:System.Type> that represents the type of the license provider class.\n  overload: System.ComponentModel.LicenseProviderAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.LicenseProviderAttribute.Default\n  id: Default\n  parent: System.ComponentModel.LicenseProviderAttribute\n  langs:\n  - csharp\n  name: Default\n  nameWithType: LicenseProviderAttribute.Default\n  fullName: System.ComponentModel.LicenseProviderAttribute.Default\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Specifies the default value, which is no provider. This <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref> field is read-only.\n  syntax:\n    content: public static readonly System.ComponentModel.LicenseProviderAttribute Default;\n    return:\n      type: System.ComponentModel.LicenseProviderAttribute\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.LicenseProviderAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.LicenseProviderAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: LicenseProviderAttribute.Equals(Object)\n  fullName: System.ComponentModel.LicenseProviderAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Indicates whether this instance and a specified object are equal.\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Another object to compare to.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>value</code> is equal to this instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.LicenseProviderAttribute.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.LicenseProviderAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.LicenseProviderAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: LicenseProviderAttribute.GetHashCode()\n  fullName: System.ComponentModel.LicenseProviderAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref>.\n  overload: System.ComponentModel.LicenseProviderAttribute.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.LicenseProviderAttribute.LicenseProvider\n  id: LicenseProvider\n  parent: System.ComponentModel.LicenseProviderAttribute\n  langs:\n  - csharp\n  name: LicenseProvider\n  nameWithType: LicenseProviderAttribute.LicenseProvider\n  fullName: System.ComponentModel.LicenseProviderAttribute.LicenseProvider\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the license provider that must be used with the associated class.\n  syntax:\n    content: public Type LicenseProvider { get; }\n    return:\n      type: System.Type\n      description: A <xref:System.Type> that represents the type of the license provider. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.ComponentModel.LicenseProviderAttribute.LicenseProvider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.LicenseProviderAttribute.TypeId\n  id: TypeId\n  parent: System.ComponentModel.LicenseProviderAttribute\n  langs:\n  - csharp\n  name: TypeId\n  nameWithType: LicenseProviderAttribute.TypeId\n  fullName: System.ComponentModel.LicenseProviderAttribute.TypeId\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Indicates a unique ID for this attribute type.\n  syntax:\n    content: public override object TypeId { get; }\n    return:\n      type: System.Object\n      description: A unique ID for this attribute type.\n  overload: System.ComponentModel.LicenseProviderAttribute.TypeId*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.ComponentModel.LicenseProviderAttribute.#ctor\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: LicenseProviderAttribute()\n  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute()\n  fullName: System.ComponentModel.LicenseProviderAttribute.LicenseProviderAttribute()\n- uid: System.ComponentModel.LicenseProviderAttribute.#ctor(System.String)\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: LicenseProviderAttribute(String)\n  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute(String)\n  fullName: System.ComponentModel.LicenseProviderAttribute.LicenseProviderAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.LicenseProviderAttribute.#ctor(System.Type)\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: LicenseProviderAttribute(Type)\n  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute(Type)\n  fullName: System.ComponentModel.LicenseProviderAttribute.LicenseProviderAttribute(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.LicenseProviderAttribute.Default\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: Default\n  nameWithType: LicenseProviderAttribute.Default\n  fullName: System.ComponentModel.LicenseProviderAttribute.Default\n- uid: System.ComponentModel.LicenseProviderAttribute\n  parent: System.ComponentModel\n  isExternal: false\n  name: LicenseProviderAttribute\n  nameWithType: LicenseProviderAttribute\n  fullName: System.ComponentModel.LicenseProviderAttribute\n- uid: System.ComponentModel.LicenseProviderAttribute.Equals(System.Object)\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: LicenseProviderAttribute.Equals(Object)\n  fullName: System.ComponentModel.LicenseProviderAttribute.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.LicenseProviderAttribute.GetHashCode\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: LicenseProviderAttribute.GetHashCode()\n  fullName: System.ComponentModel.LicenseProviderAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.LicenseProviderAttribute.LicenseProvider\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: LicenseProvider\n  nameWithType: LicenseProviderAttribute.LicenseProvider\n  fullName: System.ComponentModel.LicenseProviderAttribute.LicenseProvider\n- uid: System.ComponentModel.LicenseProviderAttribute.TypeId\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: LicenseProviderAttribute.TypeId\n  fullName: System.ComponentModel.LicenseProviderAttribute.TypeId\n- uid: System.ComponentModel.LicenseProviderAttribute.#ctor*\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: LicenseProviderAttribute\n  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute\n- uid: System.ComponentModel.LicenseProviderAttribute.Equals*\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: LicenseProviderAttribute.Equals\n- uid: System.ComponentModel.LicenseProviderAttribute.GetHashCode*\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: LicenseProviderAttribute.GetHashCode\n- uid: System.ComponentModel.LicenseProviderAttribute.LicenseProvider*\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: LicenseProvider\n  nameWithType: LicenseProviderAttribute.LicenseProvider\n- uid: System.ComponentModel.LicenseProviderAttribute.TypeId*\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: LicenseProviderAttribute.TypeId\n"}