{"nodes":[{"pos":[3849,3903],"content":"Represents a Discretionary Access Control List (DACL).","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a Discretionary Access Control List (DACL).","pos":[0,54]}]},{"pos":[6039,6173],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> class with the specified values."},{"pos":[6350,6512],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the new <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is a container.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a container."},{"pos":[6574,6769],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the new <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is a directory object Access Control List (ACL).","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a directory object Access Control List (ACL)."},{"pos":[6833,7011],"content":"The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object can contain. This number is to be used only as a hint.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of Access Control Entries (ACEs) this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object can contain.","pos":[0,136],"source":"The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object can contain."},{"content":"This number is to be used only as a hint.","pos":[137,178]}]},{"pos":[7729,7947],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified values from the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.RawAcl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> class with the specified values from the specified <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object."},{"pos":[7959,8062],"content":"The Access Control Entries (ACEs) in the <xref:System.Security.AccessControl.RawAcl> object are cloned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Access Control Entries (ACEs) in the &lt;xref:System.Security.AccessControl.RawAcl&gt; object are cloned.","pos":[0,103],"source":"The Access Control Entries (ACEs) in the <xref:System.Security.AccessControl.RawAcl> object are cloned."}]},{"pos":[8270,8432],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the new <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is a container.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a container."},{"pos":[8494,8689],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the new <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is a directory object Access Control List (ACL).","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a directory object Access Control List (ACL)."},{"pos":[8775,9035],"content":"The underlying <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object for the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Specify <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to create an empty ACL.","needQuote":true,"needEscape":true,"nodes":[{"content":"The underlying <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.RawAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the new <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","pos":[0,167],"source":"The underlying <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object for the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."},{"content":"Specify <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create an empty ACL.","pos":[168,260],"source":" Specify <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to create an empty ACL."}]},{"pos":[9741,9875],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> class with the specified values."},{"pos":[10067,10229],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the new <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is a container.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a container."},{"pos":[10291,10486],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the new <bpt id=\"p2\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is a directory object Access Control List (ACL).","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a directory object Access Control List (ACL)."},{"pos":[10549,10654],"content":"The revision level of the new <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The revision level of the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."},{"pos":[10718,10896],"content":"The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object can contain. This number is to be used only as a hint.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of Access Control Entries (ACEs) this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object can contain.","pos":[0,136],"source":"The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object can contain."},{"content":"This number is to be used only as a hint.","pos":[137,178]}]},{"pos":[11833,11986],"content":"Adds an Access Control Entry (ACE) with the specified settings to the current <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Adds an Access Control Entry (ACE) with the specified settings to the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."},{"pos":[12313,12363],"content":"The type of access control (allow or deny) to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of access control (allow or deny) to add.","pos":[0,50]}]},{"pos":[12454,12548],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to add an ACE.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to add an ACE."},{"pos":[12642,12733],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectAccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the new access.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for the new access."},{"pos":[13863,14016],"content":"Adds an Access Control Entry (ACE) with the specified settings to the current <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Adds an Access Control Entry (ACE) with the specified settings to the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."},{"pos":[14028,14077],"content":"This method can cause existing ACEs to be merged.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method can cause existing ACEs to be merged.","pos":[0,49]}]},{"pos":[14497,14547],"content":"The type of access control (allow or deny) to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of access control (allow or deny) to add.","pos":[0,50]}]},{"pos":[14638,14732],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to add an ACE.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to add an ACE."},{"pos":[14798,14830],"content":"The access rule for the new ACE.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule for the new ACE.","pos":[0,32]}]},{"pos":[14936,14997],"content":"Flags that specify the inheritance properties of the new ACE.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags that specify the inheritance properties of the new ACE.","pos":[0,61]}]},{"pos":[15103,15177],"content":"Flags that specify the inheritance propagation properties for the new ACE.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags that specify the inheritance propagation properties for the new ACE.","pos":[0,74]}]},{"pos":[16520,16816],"content":"Adds an Access Control Entry (ACE) with the specified settings to the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the new ACE.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an Access Control Entry (ACE) with the specified settings to the current <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,153],"source":"Adds an Access Control Entry (ACE) with the specified settings to the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."},{"content":"Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the new ACE.","pos":[154,296]}]},{"pos":[16828,16877],"content":"This method can cause existing ACEs to be merged.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method can cause existing ACEs to be merged.","pos":[0,49]}]},{"pos":[17398,17448],"content":"The type of access control (allow or deny) to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of access control (allow or deny) to add.","pos":[0,50]}]},{"pos":[17539,17633],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to add an ACE.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to add an ACE."},{"pos":[17699,17731],"content":"The access rule for the new ACE.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule for the new ACE.","pos":[0,32]}]},{"pos":[17837,17898],"content":"Flags that specify the inheritance properties of the new ACE.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags that specify the inheritance properties of the new ACE.","pos":[0,61]}]},{"pos":[18004,18078],"content":"Flags that specify the inheritance propagation properties for the new ACE.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags that specify the inheritance propagation properties for the new ACE.","pos":[0,74]}]},{"pos":[18177,18333],"content":"Flags that specify if the <ph id=\"ph1\">`objectType`</ph> and <ph id=\"ph2\">`inheritedObjectType`</ph> parameters contain non-<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"Flags that specify if the `objectType` and `inheritedObjectType` parameters contain non-<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> values."},{"pos":[18398,18464],"content":"The identity of the class of objects to which the new ACE applies.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity of the class of objects to which the new ACE applies.","pos":[0,66]}]},{"pos":[18538,18611],"content":"The identity of the class of child objects which can inherit the new ACE.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity of the class of child objects which can inherit the new ACE.","pos":[0,73]}]},{"pos":[19567,19701],"content":"Removes the specified access control rule from the current <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes the specified access control rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."},{"pos":[20031,20084],"content":"The type of access control (allow or deny) to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of access control (allow or deny) to remove.","pos":[0,53]}]},{"pos":[20175,20288],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to remove an access control rule.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an access control rule."},{"pos":[20382,20481],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectAccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to remove access.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for which to remove access."},{"pos":[20540,20570],"content":"Returns <xref:System.Boolean>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.Boolean&gt;.","pos":[0,30],"source":"Returns <xref:System.Boolean>."}]},{"pos":[21718,21852],"content":"Removes the specified access control rule from the current <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes the specified access control rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."},{"pos":[21864,21998],"content":"Access removal is accomplished by using a complex algorithm that might add Access Control Entries (ACEs) in addition to removing them.","needQuote":true,"needEscape":true,"nodes":[{"content":"Access removal is accomplished by using a complex algorithm that might add Access Control Entries (ACEs) in addition to removing them.","pos":[0,134]}]},{"pos":[22421,22474],"content":"The type of access control (allow or deny) to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of access control (allow or deny) to remove.","pos":[0,53]}]},{"pos":[22565,22678],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to remove an access control rule.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an access control rule."},{"pos":[22744,22787],"content":"The access mask for the rule to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access mask for the rule to be removed.","pos":[0,43]}]},{"pos":[22893,22965],"content":"Flags that specify the inheritance properties of the rule to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags that specify the inheritance properties of the rule to be removed.","pos":[0,72]}]},{"pos":[23071,23156],"content":"Flags that specify the inheritance propagation properties for the rule to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags that specify the inheritance propagation properties for the rule to be removed.","pos":[0,85]}]},{"pos":[23215,23408],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this method successfully removes the specified access; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method successfully removes the specified access; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24769,25030],"content":"Removes the specified access control rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified access control rule from the current <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,134],"source":"Removes the specified access control rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."},{"content":"Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.","pos":[135,261]}]},{"pos":[25042,25176],"content":"Access removal is accomplished by using a complex algorithm that might add Access Control Entries (ACEs) in addition to removing them.","needQuote":true,"needEscape":true,"nodes":[{"content":"Access removal is accomplished by using a complex algorithm that might add Access Control Entries (ACEs) in addition to removing them.","pos":[0,134]}]},{"pos":[25700,25753],"content":"The type of access control (allow or deny) to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of access control (allow or deny) to remove.","pos":[0,53]}]},{"pos":[25844,25957],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to remove an access control rule.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an access control rule."},{"pos":[26023,26081],"content":"The access mask for the access control rule to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access mask for the access control rule to be removed.","pos":[0,58]}]},{"pos":[26187,26274],"content":"Flags that specify the inheritance properties of the access control rule to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags that specify the inheritance properties of the access control rule to be removed.","pos":[0,87]}]},{"pos":[26380,26480],"content":"Flags that specify the inheritance propagation properties for the access control rule to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags that specify the inheritance propagation properties for the access control rule to be removed.","pos":[0,100]}]},{"pos":[26579,26735],"content":"Flags that specify if the <ph id=\"ph1\">`objectType`</ph> and <ph id=\"ph2\">`inheritedObjectType`</ph> parameters contain non-<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"Flags that specify if the `objectType` and `inheritedObjectType` parameters contain non-<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> values."},{"pos":[26800,26886],"content":"The identity of the class of objects to which the removed access control rule applies.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity of the class of objects to which the removed access control rule applies.","pos":[0,86]}]},{"pos":[26960,27053],"content":"The identity of the class of child objects which can inherit the removed access control rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity of the class of child objects which can inherit the removed access control rule.","pos":[0,93]}]},{"pos":[27112,27305],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this method successfully removes the specified access; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method successfully removes the specified access; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28304,28445],"content":"Removes the specified Access Control Entry (ACE) from the current <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes the specified Access Control Entry (ACE) from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."},{"pos":[28783,28836],"content":"The type of access control (allow or deny) to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of access control (allow or deny) to remove.","pos":[0,53]}]},{"pos":[28927,29024],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to remove an ACE.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an ACE."},{"pos":[29118,29217],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectAccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to remove access.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for which to remove access."},{"pos":[30413,30554],"content":"Removes the specified Access Control Entry (ACE) from the current <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes the specified Access Control Entry (ACE) from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."},{"pos":[30985,31038],"content":"The type of access control (allow or deny) to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of access control (allow or deny) to remove.","pos":[0,53]}]},{"pos":[31129,31226],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to remove an ACE.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an ACE."},{"pos":[31292,31334],"content":"The access mask for the ACE to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access mask for the ACE to be removed.","pos":[0,42]}]},{"pos":[31440,31511],"content":"Flags that specify the inheritance properties of the ACE to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags that specify the inheritance properties of the ACE to be removed.","pos":[0,71]}]},{"pos":[31617,31701],"content":"Flags that specify the inheritance propagation properties for the ACE to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags that specify the inheritance propagation properties for the ACE to be removed.","pos":[0,84]}]},{"pos":[33110,33404],"content":"Removes the specified Access Control Entry (ACE) from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the ACE to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified Access Control Entry (ACE) from the current <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,141],"source":"Removes the specified Access Control Entry (ACE) from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."},{"content":"Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the ACE to be removed.","pos":[142,294]}]},{"pos":[33936,33989],"content":"The type of access control (allow or deny) to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of access control (allow or deny) to remove.","pos":[0,53]}]},{"pos":[34080,34177],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to remove an ACE.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an ACE."},{"pos":[34243,34285],"content":"The access mask for the ACE to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access mask for the ACE to be removed.","pos":[0,42]}]},{"pos":[34391,34462],"content":"Flags that specify the inheritance properties of the ACE to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags that specify the inheritance properties of the ACE to be removed.","pos":[0,71]}]},{"pos":[34568,34652],"content":"Flags that specify the inheritance propagation properties for the ACE to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags that specify the inheritance propagation properties for the ACE to be removed.","pos":[0,84]}]},{"pos":[34751,34907],"content":"Flags that specify if the <ph id=\"ph1\">`objectType`</ph> and <ph id=\"ph2\">`inheritedObjectType`</ph> parameters contain non-<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"Flags that specify if the `objectType` and `inheritedObjectType` parameters contain non-<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> values."},{"pos":[34972,35042],"content":"The identity of the class of objects to which the removed ACE applies.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity of the class of objects to which the removed ACE applies.","pos":[0,70]}]},{"pos":[35116,35193],"content":"The identity of the class of child objects which can inherit the removed ACE.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity of the class of child objects which can inherit the removed ACE.","pos":[0,77]}]},{"pos":[36145,36270],"content":"Sets the specified access control for the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Sets the specified access control for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[36597,36647],"content":"The type of access control (allow or deny) to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of access control (allow or deny) to set.","pos":[0,50]}]},{"pos":[36738,36832],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to set an ACE.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to set an ACE."},{"pos":[36926,37022],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.ObjectAccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to set access.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for which to set access."},{"pos":[38152,38277],"content":"Sets the specified access control for the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Sets the specified access control for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[38289,38488],"content":"This method removes all existing Access Control Entries (ACEs) that match both specified <xref:System.Security.Principal.SecurityIdentifier> object and the specified access qualifier (allow or deny).","needQuote":true,"needEscape":true,"nodes":[{"content":"This method removes all existing Access Control Entries (ACEs) that match both specified &lt;xref:System.Security.Principal.SecurityIdentifier&gt; object and the specified access qualifier (allow or deny).","pos":[0,199],"source":"This method removes all existing Access Control Entries (ACEs) that match both specified <xref:System.Security.Principal.SecurityIdentifier> object and the specified access qualifier (allow or deny)."}]},{"pos":[38908,38958],"content":"The type of access control (allow or deny) to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of access control (allow or deny) to set.","pos":[0,50]}]},{"pos":[39049,39143],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to set an ACE.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to set an ACE."},{"pos":[39209,39241],"content":"The access rule for the new ACE.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule for the new ACE.","pos":[0,32]}]},{"pos":[39347,39408],"content":"Flags that specify the inheritance properties of the new ACE.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags that specify the inheritance properties of the new ACE.","pos":[0,61]}]},{"pos":[39514,39588],"content":"Flags that specify the inheritance propagation properties for the new ACE.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags that specify the inheritance propagation properties for the new ACE.","pos":[0,74]}]},{"pos":[40931,41056],"content":"Sets the specified access control for the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Sets the specified access control for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[41068,41267],"content":"This method removes all existing Access Control Entries (ACEs) that match both specified <xref:System.Security.Principal.SecurityIdentifier> object and the specified access qualifier (allow or deny).","needQuote":true,"needEscape":true,"nodes":[{"content":"This method removes all existing Access Control Entries (ACEs) that match both specified &lt;xref:System.Security.Principal.SecurityIdentifier&gt; object and the specified access qualifier (allow or deny).","pos":[0,199],"source":"This method removes all existing Access Control Entries (ACEs) that match both specified <xref:System.Security.Principal.SecurityIdentifier> object and the specified access qualifier (allow or deny)."}]},{"pos":[41788,41838],"content":"The type of access control (allow or deny) to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of access control (allow or deny) to set.","pos":[0,50]}]},{"pos":[41929,42023],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to set an ACE.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to set an ACE."},{"pos":[42089,42121],"content":"The access rule for the new ACE.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule for the new ACE.","pos":[0,32]}]},{"pos":[42227,42288],"content":"Flags that specify the inheritance properties of the new ACE.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags that specify the inheritance properties of the new ACE.","pos":[0,61]}]},{"pos":[42394,42468],"content":"Flags that specify the inheritance propagation properties for the new ACE.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags that specify the inheritance propagation properties for the new ACE.","pos":[0,74]}]},{"pos":[42567,42723],"content":"Flags that specify if the <ph id=\"ph1\">`objectType`</ph> and <ph id=\"ph2\">`inheritedObjectType`</ph> parameters contain non-<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"Flags that specify if the `objectType` and `inheritedObjectType` parameters contain non-<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> values."},{"pos":[42788,42854],"content":"The identity of the class of objects to which the new ACE applies.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity of the class of objects to which the new ACE applies.","pos":[0,66]}]},{"pos":[42928,43001],"content":"The identity of the class of child objects which can inherit the new ACE.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity of the class of child objects which can inherit the new ACE.","pos":[0,73]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.DiscretionaryAcl\n  id: DiscretionaryAcl\n  children:\n  - System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Int32)\n  - System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)\n  - System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)\n  - System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  - System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  - System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  - System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  langs:\n  - csharp\n  name: DiscretionaryAcl\n  nameWithType: DiscretionaryAcl\n  fullName: System.Security.AccessControl.DiscretionaryAcl\n  type: Class\n  summary: Represents a Discretionary Access Control List (DACL).\n  syntax:\n    content: 'public sealed class DiscretionaryAcl : System.Security.AccessControl.CommonAcl'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.GenericAcl\n  - System.Security.AccessControl.CommonAcl\n  implements: []\n  inheritedMembers:\n  - System.Security.AccessControl.CommonAcl.BinaryLength\n  - System.Security.AccessControl.CommonAcl.Count\n  - System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.CommonAcl.IsCanonical\n  - System.Security.AccessControl.CommonAcl.IsContainer\n  - System.Security.AccessControl.CommonAcl.IsDS\n  - System.Security.AccessControl.CommonAcl.Item(System.Int32)\n  - System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)\n  - System.Security.AccessControl.CommonAcl.RemoveInheritedAces\n  - System.Security.AccessControl.CommonAcl.Revision\n  - System.Security.AccessControl.GenericAcl.AclRevision\n  - System.Security.AccessControl.GenericAcl.AclRevisionDS\n  - System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)\n  - System.Security.AccessControl.GenericAcl.GetEnumerator\n  - System.Security.AccessControl.GenericAcl.IsSynchronized\n  - System.Security.AccessControl.GenericAcl.MaxBinaryLength\n  - System.Security.AccessControl.GenericAcl.SyncRoot\n  - System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Int32)\n  id: '#ctor(System.Boolean,System.Boolean,System.Int32)'\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: DiscretionaryAcl(Boolean,Boolean,Int32)\n  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,Int32)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> class with the specified values.\n  syntax:\n    content: public DiscretionaryAcl (bool isContainer, bool isDS, int capacity);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a container.\n    - id: isDS\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a directory object Access Control List (ACL).\n    - id: capacity\n      type: System.Int32\n      description: The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object can contain. This number is to be used only as a hint.\n  overload: System.Security.AccessControl.DiscretionaryAcl.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)\n  id: '#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)'\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: DiscretionaryAcl(Boolean,Boolean,RawAcl)\n  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,RawAcl)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,RawAcl)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> class with the specified values from the specified <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object.\n  remarks: The Access Control Entries (ACEs) in the <xref:System.Security.AccessControl.RawAcl> object are cloned.\n  syntax:\n    content: public DiscretionaryAcl (bool isContainer, bool isDS, System.Security.AccessControl.RawAcl rawAcl);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a container.\n    - id: isDS\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a directory object Access Control List (ACL).\n    - id: rawAcl\n      type: System.Security.AccessControl.RawAcl\n      description: The underlying <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object for the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Specify <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to create an empty ACL.\n  overload: System.Security.AccessControl.DiscretionaryAcl.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)\n  id: '#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)'\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: DiscretionaryAcl(Boolean,Boolean,Byte,Int32)\n  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,Byte,Int32)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,Byte,Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> class with the specified values.\n  syntax:\n    content: public DiscretionaryAcl (bool isContainer, bool isDS, byte revision, int capacity);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a container.\n    - id: isDS\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a directory object Access Control List (ACL).\n    - id: revision\n      type: System.Byte\n      description: The revision level of the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.\n    - id: capacity\n      type: System.Int32\n      description: The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object can contain. This number is to be used only as a hint.\n  overload: System.Security.AccessControl.DiscretionaryAcl.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  id: AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: AddAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds an Access Control Entry (ACE) with the specified settings to the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.\n  syntax:\n    content: public void AddAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to add.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to add an ACE.\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for the new access.\n  overload: System.Security.AccessControl.DiscretionaryAcl.AddAccess*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  id: AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds an Access Control Entry (ACE) with the specified settings to the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.\n  remarks: This method can cause existing ACEs to be merged.\n  syntax:\n    content: public void AddAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to add.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to add an ACE.\n    - id: accessMask\n      type: System.Int32\n      description: The access rule for the new ACE.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Flags that specify the inheritance properties of the new ACE.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Flags that specify the inheritance propagation properties for the new ACE.\n  overload: System.Security.AccessControl.DiscretionaryAcl.AddAccess*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  id: AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds an Access Control Entry (ACE) with the specified settings to the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the new ACE.\n  remarks: This method can cause existing ACEs to be merged.\n  syntax:\n    content: public void AddAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to add.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to add an ACE.\n    - id: accessMask\n      type: System.Int32\n      description: The access rule for the new ACE.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Flags that specify the inheritance properties of the new ACE.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Flags that specify the inheritance propagation properties for the new ACE.\n    - id: objectFlags\n      type: System.Security.AccessControl.ObjectAceFlags\n      description: Flags that specify if the `objectType` and `inheritedObjectType` parameters contain non-<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> values.\n    - id: objectType\n      type: System.Guid\n      description: The identity of the class of objects to which the new ACE applies.\n    - id: inheritedObjectType\n      type: System.Guid\n      description: The identity of the class of child objects which can inherit the new ACE.\n  overload: System.Security.AccessControl.DiscretionaryAcl.AddAccess*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  id: RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: RemoveAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes the specified access control rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.\n  syntax:\n    content: public bool RemoveAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to remove.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an access control rule.\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for which to remove access.\n    return:\n      type: System.Boolean\n      description: Returns <xref:System.Boolean>.\n  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  id: RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes the specified access control rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.\n  remarks: Access removal is accomplished by using a complex algorithm that might add Access Control Entries (ACEs) in addition to removing them.\n  syntax:\n    content: public bool RemoveAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to remove.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an access control rule.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask for the rule to be removed.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Flags that specify the inheritance properties of the rule to be removed.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Flags that specify the inheritance propagation properties for the rule to be removed.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method successfully removes the specified access; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  id: RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes the specified access control rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.\n  remarks: Access removal is accomplished by using a complex algorithm that might add Access Control Entries (ACEs) in addition to removing them.\n  syntax:\n    content: public bool RemoveAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to remove.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an access control rule.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask for the access control rule to be removed.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Flags that specify the inheritance properties of the access control rule to be removed.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Flags that specify the inheritance propagation properties for the access control rule to be removed.\n    - id: objectFlags\n      type: System.Security.AccessControl.ObjectAceFlags\n      description: Flags that specify if the `objectType` and `inheritedObjectType` parameters contain non-<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> values.\n    - id: objectType\n      type: System.Guid\n      description: The identity of the class of objects to which the removed access control rule applies.\n    - id: inheritedObjectType\n      type: System.Guid\n      description: The identity of the class of child objects which can inherit the removed access control rule.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method successfully removes the specified access; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  id: RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: RemoveAccessSpecific(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes the specified Access Control Entry (ACE) from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.\n  syntax:\n    content: public void RemoveAccessSpecific (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to remove.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an ACE.\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for which to remove access.\n  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  id: RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes the specified Access Control Entry (ACE) from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.\n  syntax:\n    content: public void RemoveAccessSpecific (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to remove.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an ACE.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask for the ACE to be removed.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Flags that specify the inheritance properties of the ACE to be removed.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Flags that specify the inheritance propagation properties for the ACE to be removed.\n  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  id: RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes the specified Access Control Entry (ACE) from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the ACE to be removed.\n  syntax:\n    content: public void RemoveAccessSpecific (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to remove.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an ACE.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask for the ACE to be removed.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Flags that specify the inheritance properties of the ACE to be removed.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Flags that specify the inheritance propagation properties for the ACE to be removed.\n    - id: objectFlags\n      type: System.Security.AccessControl.ObjectAceFlags\n      description: Flags that specify if the `objectType` and `inheritedObjectType` parameters contain non-<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> values.\n    - id: objectType\n      type: System.Guid\n      description: The identity of the class of objects to which the removed ACE applies.\n    - id: inheritedObjectType\n      type: System.Guid\n      description: The identity of the class of child objects which can inherit the removed ACE.\n  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  id: SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: SetAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the specified access control for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  syntax:\n    content: public void SetAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to set.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to set an ACE.\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for which to set access.\n  overload: System.Security.AccessControl.DiscretionaryAcl.SetAccess*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  id: SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the specified access control for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  remarks: This method removes all existing Access Control Entries (ACEs) that match both specified <xref:System.Security.Principal.SecurityIdentifier> object and the specified access qualifier (allow or deny).\n  syntax:\n    content: public void SetAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to set.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to set an ACE.\n    - id: accessMask\n      type: System.Int32\n      description: The access rule for the new ACE.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Flags that specify the inheritance properties of the new ACE.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Flags that specify the inheritance propagation properties for the new ACE.\n  overload: System.Security.AccessControl.DiscretionaryAcl.SetAccess*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  id: SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the specified access control for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  remarks: This method removes all existing Access Control Entries (ACEs) that match both specified <xref:System.Security.Principal.SecurityIdentifier> object and the specified access qualifier (allow or deny).\n  syntax:\n    content: public void SetAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to set.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to set an ACE.\n    - id: accessMask\n      type: System.Int32\n      description: The access rule for the new ACE.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Flags that specify the inheritance properties of the new ACE.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Flags that specify the inheritance propagation properties for the new ACE.\n    - id: objectFlags\n      type: System.Security.AccessControl.ObjectAceFlags\n      description: Flags that specify if the `objectType` and `inheritedObjectType` parameters contain non-<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> values.\n    - id: objectType\n      type: System.Guid\n      description: The identity of the class of objects to which the new ACE applies.\n    - id: inheritedObjectType\n      type: System.Guid\n      description: The identity of the class of child objects which can inherit the new ACE.\n  overload: System.Security.AccessControl.DiscretionaryAcl.SetAccess*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: System.Security.AccessControl.CommonAcl\n- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Int32)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: DiscretionaryAcl(Boolean,Boolean,Int32)\n  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,Int32)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: DiscretionaryAcl(Boolean,Boolean,RawAcl)\n  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,RawAcl)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,RawAcl)\n- uid: System.Security.AccessControl.RawAcl\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: RawAcl\n  nameWithType: RawAcl\n  fullName: System.Security.AccessControl.RawAcl\n- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: DiscretionaryAcl(Boolean,Boolean,Byte,Int32)\n  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,Byte,Int32)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,Byte,Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: AddAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.Principal.SecurityIdentifier\n  parent: System.Security.Principal\n  isExternal: false\n  name: SecurityIdentifier\n  nameWithType: SecurityIdentifier\n  fullName: System.Security.Principal.SecurityIdentifier\n- uid: System.Security.AccessControl.ObjectAccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectAccessRule\n  nameWithType: ObjectAccessRule\n  fullName: System.Security.AccessControl.ObjectAccessRule\n- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n- uid: System.Security.AccessControl.ObjectAceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectAceFlags\n  nameWithType: ObjectAceFlags\n  fullName: System.Security.AccessControl.ObjectAceFlags\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: RemoveAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: RemoveAccessSpecific(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: SetAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)\n- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)\n- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n  fullName: System.Security.AccessControl.DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)\n- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor*\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: DiscretionaryAcl\n  nameWithType: DiscretionaryAcl.DiscretionaryAcl\n- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess*\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: AddAccess\n  nameWithType: DiscretionaryAcl.AddAccess\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess*\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: RemoveAccess\n  nameWithType: DiscretionaryAcl.RemoveAccess\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific*\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: RemoveAccessSpecific\n  nameWithType: DiscretionaryAcl.RemoveAccessSpecific\n- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess*\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: SetAccess\n  nameWithType: DiscretionaryAcl.SetAccess\n"}