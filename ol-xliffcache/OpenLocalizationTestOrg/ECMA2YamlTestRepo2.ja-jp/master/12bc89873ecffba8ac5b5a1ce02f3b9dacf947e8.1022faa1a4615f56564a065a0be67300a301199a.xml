{"nodes":[{"pos":[737,884],"content":"Represents a query for events in an event log and the settings that define how the query is executed and on what computer the query is executed on.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a query for events in an event log and the settings that define how the query is executed and on what computer the query is executed on.","pos":[0,147]}]},{"pos":[1890,2091],"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> class by specifying the target of the query. The target can be an active event log or a log file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by specifying the target of the query.","pos":[0,148],"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> class by specifying the target of the query."},{"content":"The target can be an active event log or a log file.","pos":[149,201]}]},{"pos":[2281,2360],"content":"The name of the event log to query, or the path to the event log file to query.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the event log to query, or the path to the event log file to query.","pos":[0,79]}]},{"pos":[2455,2580],"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","pos":[0,125]}]},{"pos":[3312,3533],"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> class by specifying the target of the query and the event query. The target can be an active event log or a log file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by specifying the target of the query and the event query.","pos":[0,168],"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> class by specifying the target of the query and the event query."},{"content":"The target can be an active event log or a log file.","pos":[169,221]}]},{"pos":[3737,3816],"content":"The name of the event log to query, or the path to the event log file to query.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the event log to query, or the path to the event log file to query.","pos":[0,79]}]},{"pos":[3911,4036],"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","pos":[0,125]}]},{"pos":[4098,4170],"content":"The event query used to retrieve events that match the query conditions.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event query used to retrieve events that match the query conditions.","pos":[0,72]}]},{"pos":[4710,4849],"content":"Gets or sets the Boolean value that determines whether to read events from the newest event in an event log to the oldest event in the log.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the Boolean value that determines whether to read events from the newest event in an event log to the oldest event in the log.","pos":[0,139]}]},{"pos":[4861,4890],"content":"The default value is <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"The default value is `false`."},{"pos":[5015,5304],"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if events are read from the newest event in the log to the oldest event, and returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if events are read from the oldest event in the log to the newest event.","needQuote":true,"needEscape":true,"source":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if events are read from the newest event in the log to the oldest event, and returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if events are read from the oldest event in the log to the newest event."},{"pos":[5810,6229],"content":"Gets or sets the session that access the Event Log service on the local computer or a remote computer. This object can be set to access a remote event log by creating a <xref href=\"System.Diagnostics.Eventing.Reader.EventLogReader\"></xref> object or an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogWatcher\"></xref> object with this <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the session that access the Event Log service on the local computer or a remote computer.","pos":[0,102]},{"content":"This object can be set to access a remote event log by creating a <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object or an <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogWatcher\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object with this <bpt id=\"p3\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> object.","pos":[103,419],"source":" This object can be set to access a remote event log by creating a <xref href=\"System.Diagnostics.Eventing.Reader.EventLogReader\"></xref> object or an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogWatcher\"></xref> object with this <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> object."}]},{"pos":[6427,6517],"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object."},{"pos":[7074,7199],"content":"Gets or sets a Boolean value that determines whether this query will continue to retrieve events when the query has an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that determines whether this query will continue to retrieve events when the query has an error.","pos":[0,125]}]},{"pos":[7327,7636],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicates that the query will continue to retrieve events even if the query fails for some logs, and <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> indicates that this query will not continue to retrieve events when the query fails.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> indicates that the query will continue to retrieve events even if the query fails for some logs, and <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> indicates that this query will not continue to retrieve events when the query fails."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery\n  id: EventLogQuery\n  children:\n  - System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  - System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection\n  - System.Diagnostics.Eventing.Reader.EventLogQuery.Session\n  - System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors\n  langs:\n  - csharp\n  name: EventLogQuery\n  nameWithType: EventLogQuery\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery\n  type: Class\n  summary: Represents a query for events in an event log and the settings that define how the query is executed and on what computer the query is executed on.\n  remarks: ''\n  example:\n  - 'For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/en-us/5231a436-4cf2-4539-90d2-a04813aba069) or [How To: Access and Read Event Information](http://msdn.microsoft.com/en-us/14db3375-d305-49ae-aa24-aedbe906e76c).'\n  syntax:\n    content: public class EventLogQuery\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  id: '#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  langs:\n  - csharp\n  name: EventLogQuery(String,PathType)\n  nameWithType: EventLogQuery.EventLogQuery(String,PathType)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.EventLogQuery(String,PathType)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> class by specifying the target of the query. The target can be an active event log or a log file.\n  syntax:\n    content: public EventLogQuery (string path, System.Diagnostics.Eventing.Reader.PathType pathType);\n    parameters:\n    - id: path\n      type: System.String\n      description: The name of the event log to query, or the path to the event log file to query.\n    - id: pathType\n      type: System.Diagnostics.Eventing.Reader.PathType\n      description: Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.\n  overload: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)\n  id: '#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  langs:\n  - csharp\n  name: EventLogQuery(String,PathType,String)\n  nameWithType: EventLogQuery.EventLogQuery(String,PathType,String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.EventLogQuery(String,PathType,String)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> class by specifying the target of the query and the event query. The target can be an active event log or a log file.\n  syntax:\n    content: public EventLogQuery (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query);\n    parameters:\n    - id: path\n      type: System.String\n      description: The name of the event log to query, or the path to the event log file to query.\n    - id: pathType\n      type: System.Diagnostics.Eventing.Reader.PathType\n      description: Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.\n    - id: query\n      type: System.String\n      description: The event query used to retrieve events that match the query conditions.\n  overload: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection\n  id: ReverseDirection\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  langs:\n  - csharp\n  name: ReverseDirection\n  nameWithType: EventLogQuery.ReverseDirection\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets or sets the Boolean value that determines whether to read events from the newest event in an event log to the oldest event in the log.\n  remarks: The default value is `false`.\n  syntax:\n    content: public bool ReverseDirection { get; set; }\n    return:\n      type: System.Boolean\n      description: Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if events are read from the newest event in the log to the oldest event, and returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if events are read from the oldest event in the log to the newest event.\n  overload: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.Session\n  id: Session\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  langs:\n  - csharp\n  name: Session\n  nameWithType: EventLogQuery.Session\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.Session\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets or sets the session that access the Event Log service on the local computer or a remote computer. This object can be set to access a remote event log by creating a <xref href=\"System.Diagnostics.Eventing.Reader.EventLogReader\"></xref> object or an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogWatcher\"></xref> object with this <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> object.\n  syntax:\n    content: public System.Diagnostics.Eventing.Reader.EventLogSession Session { get; set; }\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventLogSession\n      description: Returns an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object.\n  overload: System.Diagnostics.Eventing.Reader.EventLogQuery.Session*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors\n  id: TolerateQueryErrors\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  langs:\n  - csharp\n  name: TolerateQueryErrors\n  nameWithType: EventLogQuery.TolerateQueryErrors\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets or sets a Boolean value that determines whether this query will continue to retrieve events when the query has an error.\n  syntax:\n    content: public bool TolerateQueryErrors { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> indicates that the query will continue to retrieve events even if the query fails for some logs, and <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> indicates that this query will not continue to retrieve events when the query fails.\n  overload: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: EventLogQuery(String,PathType)\n  nameWithType: EventLogQuery.EventLogQuery(String,PathType)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.EventLogQuery(String,PathType)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.PathType\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: PathType\n  nameWithType: PathType\n  fullName: System.Diagnostics.Eventing.Reader.PathType\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: EventLogQuery(String,PathType,String)\n  nameWithType: EventLogQuery.EventLogQuery(String,PathType,String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.EventLogQuery(String,PathType,String)\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: ReverseDirection\n  nameWithType: EventLogQuery.ReverseDirection\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.Session\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: Session\n  nameWithType: EventLogQuery.Session\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.Session\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogSession\n  nameWithType: EventLogSession\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: TolerateQueryErrors\n  nameWithType: EventLogQuery.TolerateQueryErrors\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor*\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: EventLogQuery\n  nameWithType: EventLogQuery.EventLogQuery\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection*\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: ReverseDirection\n  nameWithType: EventLogQuery.ReverseDirection\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.Session*\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: Session\n  nameWithType: EventLogQuery.Session\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors*\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: TolerateQueryErrors\n  nameWithType: EventLogQuery.TolerateQueryErrors\n"}