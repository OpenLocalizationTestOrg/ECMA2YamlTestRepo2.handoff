{"nodes":[{"pos":[614,694],"content":"Contains transformation data that is accumulated when manipulation events occur.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains transformation data that is accumulated when manipulation events occur.","pos":[0,80]}]},{"pos":[707,1858],"content":"The ManipulationDelta class contains information about the changes in the position of a manipulation.  [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] interprets the changes as a <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Expansion%2A>, or <xref:System.Windows.Input.ManipulationDelta.Rotation%2A>. When the <xref:System.Windows.UIElement.ManipulationDelta> event occurs on a <xref:System.Windows.UIElement>, use the properties on a ManipulationDelta object to transform the object that should be manipulated.  The <xref:System.Windows.Input.ManipulationDeltaEventArgs> class provides two properties of type ManipulationDelta: <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> and <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>.       For more information about manipulations, see the [Input Overview](~/add/includes/ajax-current-ext-md.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The ManipulationDelta class contains information about the changes in the position of a manipulation.","pos":[0,101]},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> interprets the changes as a &lt;xref:System.Windows.Input.ManipulationDelta.Translation%2A&gt;, &lt;xref:System.Windows.Input.ManipulationDelta.Expansion%2A&gt;, or &lt;xref:System.Windows.Input.ManipulationDelta.Rotation%2A&gt;.","pos":[103,383],"source":"[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] interprets the changes as a <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Expansion%2A>, or <xref:System.Windows.Input.ManipulationDelta.Rotation%2A>."},{"content":"When the &lt;xref:System.Windows.UIElement.ManipulationDelta&gt; event occurs on a &lt;xref:System.Windows.UIElement&gt;, use the properties on a ManipulationDelta object to transform the object that should be manipulated.","pos":[384,594],"source":" When the <xref:System.Windows.UIElement.ManipulationDelta> event occurs on a <xref:System.Windows.UIElement>, use the properties on a ManipulationDelta object to transform the object that should be manipulated."},{"content":"The &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs&gt; class provides two properties of type ManipulationDelta: &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt; and &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A&gt;.","pos":[596,873],"source":"  The <xref:System.Windows.Input.ManipulationDeltaEventArgs> class provides two properties of type ManipulationDelta: <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> and <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>."},{"content":"For more information about manipulations, see the <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[880,986],"source":"       For more information about manipulations, see the [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"For an example of an application that responds to manipulations, see <bpt id=\"p1\">[</bpt>Walkthrough: Creating Your First Touch Application<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[988,1149],"source":"  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[3499,3599],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.ManipulationDelta\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Input.ManipulationDelta\"></xref> class."},{"pos":[3855,3970],"content":"The linear motion of the manipulation in <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.","needQuote":true,"needEscape":true,"source":"The linear motion of the manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]."},{"pos":[4035,4079],"content":"The rotation of the manipulation in degrees.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rotation of the manipulation in degrees.","pos":[0,44]}]},{"pos":[4149,4205],"content":"The amount the manipulation has resized as a multiplier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount the manipulation has resized as a multiplier.","pos":[0,56]}]},{"pos":[4279,4396],"content":"The amount the manipulation has resized in <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.","needQuote":true,"needEscape":true,"source":"The amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]."},{"pos":[4856,4986],"content":"Gets or sets the amount the manipulation has resized in <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.","needQuote":true,"needEscape":true,"source":"Gets or sets the amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]."},{"pos":[4998,5705],"content":"The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> and Expansion properties both report a resizing manipulation.  The difference between the two is the way in which the value is reported.  The Expansion property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]. The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> property reports the value as a multiplier.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 2, the manipulation is interpreted as increasing the size by 100 percent.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Input.ManipulationDelta.Scale%2A&gt; and Expansion properties both report a resizing manipulation.","pos":[0,120],"source":"The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> and Expansion properties both report a resizing manipulation."},{"content":"The difference between the two is the way in which the value is reported.","pos":[122,195]},{"content":"The Expansion property reports the resizing manipulation in <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.","pos":[197,331],"source":"  The Expansion property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]."},{"content":"The &lt;xref:System.Windows.Input.ManipulationDelta.Scale%2A&gt; property reports the value as a multiplier.","pos":[332,434],"source":" The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> property reports the value as a multiplier."},{"content":"If &lt;xref:System.Windows.Input.ManipulationDelta.Scale%2A&gt; is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.","pos":[436,571],"source":"  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 0.5, the manipulation is interpreted as decreasing the size by 50 percent."},{"content":"If &lt;xref:System.Windows.Input.ManipulationDelta.Scale%2A&gt; is 2, the manipulation is interpreted as increasing the size by 100 percent.","pos":[573,707],"source":"  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 2, the manipulation is interpreted as increasing the size by 100 percent."}]},{"pos":[5842,5959],"content":"The amount the manipulation has resized in <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.","needQuote":true,"needEscape":true,"source":"The amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]."},{"pos":[6418,6475],"content":"Gets or sets the rotation of the manipulation in degrees.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the rotation of the manipulation in degrees.","pos":[0,57]}]},{"pos":[6487,6680],"content":"The Rotation property reports the way a manipulation is interpreted as rotating around an axis.  The axis is usually the point between the two points of contact that initiated the manipulation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Rotation property reports the way a manipulation is interpreted as rotating around an axis.  The axis is usually the point between the two points of contact that initiated the manipulation.","pos":[0,193],"nodes":[{"content":"The Rotation property reports the way a manipulation is interpreted as rotating around an axis.","pos":[0,95]},{"content":"The axis is usually the point between the two points of contact that initiated the manipulation.","pos":[97,193]}]}]},{"pos":[7567,7611],"content":"The rotation of the manipulation in degrees.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rotation of the manipulation in degrees.","pos":[0,44]}]},{"pos":[8054,8123],"content":"Gets or sets the amount the manipulation has resized as a multiplier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the amount the manipulation has resized as a multiplier.","pos":[0,69]}]},{"pos":[8135,8744],"content":"The Scale and <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> properties both report a resizing manipulation.  The difference between the two is the way in which the value is reported.  The Scale property reports the value as a multiplier.  If Scale is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.  If Scale is 2, the manipulation is interpreted as increasing the size by 100 percent. The <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)].","needQuote":true,"needEscape":true,"nodes":[{"content":"The Scale and &lt;xref:System.Windows.Input.ManipulationDelta.Expansion%2A&gt; properties both report a resizing manipulation.","pos":[0,120],"source":"The Scale and <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> properties both report a resizing manipulation."},{"content":"The difference between the two is the way in which the value is reported.","pos":[122,195]},{"content":"The Scale property reports the value as a multiplier.","pos":[197,250]},{"content":"If Scale is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.","pos":[252,338]},{"content":"If Scale is 2, the manipulation is interpreted as increasing the size by 100 percent.","pos":[340,425]},{"content":"The &lt;xref:System.Windows.Input.ManipulationDelta.Expansion%2A&gt; property reports the resizing manipulation in <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.","pos":[426,609],"source":" The <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]."}]},{"pos":[9651,9691],"content":"The amount the manipulation has resized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount the manipulation has resized.","pos":[0,40]}]},{"pos":[10161,10212],"content":"Gets or sets the linear motion of the manipulation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the linear motion of the manipulation.","pos":[0,51]}]},{"pos":[10224,10347],"content":"The Translation property reports the way a manipulation is interpreted as moving horizontally and vertically on the screen.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Translation property reports the way a manipulation is interpreted as moving horizontally and vertically on the screen.","pos":[0,123]}]},{"pos":[11260,11375],"content":"The linear motion of the manipulation in <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.","needQuote":true,"needEscape":true,"source":"The linear motion of the manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.ManipulationDelta\n  id: ManipulationDelta\n  children:\n  - System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)\n  - System.Windows.Input.ManipulationDelta.Expansion\n  - System.Windows.Input.ManipulationDelta.Rotation\n  - System.Windows.Input.ManipulationDelta.Scale\n  - System.Windows.Input.ManipulationDelta.Translation\n  langs:\n  - csharp\n  name: ManipulationDelta\n  nameWithType: ManipulationDelta\n  fullName: System.Windows.Input.ManipulationDelta\n  type: Class\n  summary: Contains transformation data that is accumulated when manipulation events occur.\n  remarks: \"The ManipulationDelta class contains information about the changes in the position of a manipulation.  [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] interprets the changes as a <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Expansion%2A>, or <xref:System.Windows.Input.ManipulationDelta.Rotation%2A>. When the <xref:System.Windows.UIElement.ManipulationDelta> event occurs on a <xref:System.Windows.UIElement>, use the properties on a ManipulationDelta object to transform the object that should be manipulated.  The <xref:System.Windows.Input.ManipulationDeltaEventArgs> class provides two properties of type ManipulationDelta: <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> and <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>.  \\n  \\n For more information about manipulations, see the [Input Overview](~/add/includes/ajax-current-ext-md.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.  The example applies the <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, and <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](../Topic/Walkthrough:%20Creating%20Your%20First%20Touch%20Application.md).  \\n  \\n [!code-cs[BasicManipulation#ManipulationDelta](~/add/codesnippet/csharp/basicmanipulation/mainwindow.xaml.cs#manipulationdelta)]\\n [!code-vb[BasicManipulation#ManipulationDelta](~/add/codesnippet/visualbasic/basicmanipulation/mainwindow.xaml.vb#manipulationdelta)]\"\n  syntax:\n    content: public class ManipulationDelta\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)\n  id: '#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)'\n  parent: System.Windows.Input.ManipulationDelta\n  langs:\n  - csharp\n  name: ManipulationDelta(Vector,Double,Vector,Vector)\n  nameWithType: ManipulationDelta.ManipulationDelta(Vector,Double,Vector,Vector)\n  fullName: System.Windows.Input.ManipulationDelta.ManipulationDelta(Vector,Double,Vector,Vector)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.ManipulationDelta\"></xref> class.\n  syntax:\n    content: public ManipulationDelta (System.Windows.Vector translation, double rotation, System.Windows.Vector scale, System.Windows.Vector expansion);\n    parameters:\n    - id: translation\n      type: System.Windows.Vector\n      description: The linear motion of the manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)].\n    - id: rotation\n      type: System.Double\n      description: The rotation of the manipulation in degrees.\n    - id: scale\n      type: System.Windows.Vector\n      description: The amount the manipulation has resized as a multiplier.\n    - id: expansion\n      type: System.Windows.Vector\n      description: The amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)].\n  overload: System.Windows.Input.ManipulationDelta.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.ManipulationDelta.Expansion\n  id: Expansion\n  parent: System.Windows.Input.ManipulationDelta\n  langs:\n  - csharp\n  name: Expansion\n  nameWithType: ManipulationDelta.Expansion\n  fullName: System.Windows.Input.ManipulationDelta.Expansion\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets the amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)].\n  remarks: The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> and Expansion properties both report a resizing manipulation.  The difference between the two is the way in which the value is reported.  The Expansion property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]. The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> property reports the value as a multiplier.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 2, the manipulation is interpreted as increasing the size by 100 percent.\n  syntax:\n    content: public System.Windows.Vector Expansion { get; }\n    return:\n      type: System.Windows.Vector\n      description: The amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)].\n  overload: System.Windows.Input.ManipulationDelta.Expansion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.ManipulationDelta.Rotation\n  id: Rotation\n  parent: System.Windows.Input.ManipulationDelta\n  langs:\n  - csharp\n  name: Rotation\n  nameWithType: ManipulationDelta.Rotation\n  fullName: System.Windows.Input.ManipulationDelta.Rotation\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets the rotation of the manipulation in degrees.\n  remarks: The Rotation property reports the way a manipulation is interpreted as rotating around an axis.  The axis is usually the point between the two points of contact that initiated the manipulation.\n  example:\n  - \"The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.  The example applies the <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, and Rotation properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[BasicManipulation#ManipulationDelta](~/add/codesnippet/csharp/basicmanipulation/mainwindow.xaml.cs#manipulationdelta)]\\n [!code-vb[BasicManipulation#ManipulationDelta](~/add/codesnippet/visualbasic/basicmanipulation/mainwindow.xaml.vb#manipulationdelta)]\"\n  syntax:\n    content: public double Rotation { get; }\n    return:\n      type: System.Double\n      description: The rotation of the manipulation in degrees.\n  overload: System.Windows.Input.ManipulationDelta.Rotation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.ManipulationDelta.Scale\n  id: Scale\n  parent: System.Windows.Input.ManipulationDelta\n  langs:\n  - csharp\n  name: Scale\n  nameWithType: ManipulationDelta.Scale\n  fullName: System.Windows.Input.ManipulationDelta.Scale\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets the amount the manipulation has resized as a multiplier.\n  remarks: The Scale and <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> properties both report a resizing manipulation.  The difference between the two is the way in which the value is reported.  The Scale property reports the value as a multiplier.  If Scale is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.  If Scale is 2, the manipulation is interpreted as increasing the size by 100 percent. The <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)].\n  example:\n  - \"The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.  The example applies the <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, Scale, and <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[BasicManipulation#ManipulationDelta](~/add/codesnippet/csharp/basicmanipulation/mainwindow.xaml.cs#manipulationdelta)]\\n [!code-vb[BasicManipulation#ManipulationDelta](~/add/codesnippet/visualbasic/basicmanipulation/mainwindow.xaml.vb#manipulationdelta)]\"\n  syntax:\n    content: public System.Windows.Vector Scale { get; }\n    return:\n      type: System.Windows.Vector\n      description: The amount the manipulation has resized.\n  overload: System.Windows.Input.ManipulationDelta.Scale*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.ManipulationDelta.Translation\n  id: Translation\n  parent: System.Windows.Input.ManipulationDelta\n  langs:\n  - csharp\n  name: Translation\n  nameWithType: ManipulationDelta.Translation\n  fullName: System.Windows.Input.ManipulationDelta.Translation\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets the linear motion of the manipulation.\n  remarks: The Translation property reports the way a manipulation is interpreted as moving horizontally and vertically on the screen.\n  example:\n  - \"The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.  The example applies the Translation, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, and <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[BasicManipulation#ManipulationDelta](~/add/codesnippet/csharp/basicmanipulation/mainwindow.xaml.cs#manipulationdelta)]\\n [!code-vb[BasicManipulation#ManipulationDelta](~/add/codesnippet/visualbasic/basicmanipulation/mainwindow.xaml.vb#manipulationdelta)]\"\n  syntax:\n    content: public System.Windows.Vector Translation { get; }\n    return:\n      type: System.Windows.Vector\n      description: The linear motion of the manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)].\n  overload: System.Windows.Input.ManipulationDelta.Translation*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: ManipulationDelta(Vector,Double,Vector,Vector)\n  nameWithType: ManipulationDelta.ManipulationDelta(Vector,Double,Vector,Vector)\n  fullName: System.Windows.Input.ManipulationDelta.ManipulationDelta(Vector,Double,Vector,Vector)\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: false\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Input.ManipulationDelta.Expansion\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: Expansion\n  nameWithType: ManipulationDelta.Expansion\n  fullName: System.Windows.Input.ManipulationDelta.Expansion\n- uid: System.Windows.Input.ManipulationDelta.Rotation\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: Rotation\n  nameWithType: ManipulationDelta.Rotation\n  fullName: System.Windows.Input.ManipulationDelta.Rotation\n- uid: System.Windows.Input.ManipulationDelta.Scale\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: Scale\n  nameWithType: ManipulationDelta.Scale\n  fullName: System.Windows.Input.ManipulationDelta.Scale\n- uid: System.Windows.Input.ManipulationDelta.Translation\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: Translation\n  nameWithType: ManipulationDelta.Translation\n  fullName: System.Windows.Input.ManipulationDelta.Translation\n- uid: System.Windows.Input.ManipulationDelta.#ctor*\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: ManipulationDelta\n  nameWithType: ManipulationDelta.ManipulationDelta\n- uid: System.Windows.Input.ManipulationDelta.Expansion*\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: Expansion\n  nameWithType: ManipulationDelta.Expansion\n- uid: System.Windows.Input.ManipulationDelta.Rotation*\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: Rotation\n  nameWithType: ManipulationDelta.Rotation\n- uid: System.Windows.Input.ManipulationDelta.Scale*\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: Scale\n  nameWithType: ManipulationDelta.Scale\n- uid: System.Windows.Input.ManipulationDelta.Translation*\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: Translation\n  nameWithType: ManipulationDelta.Translation\n"}