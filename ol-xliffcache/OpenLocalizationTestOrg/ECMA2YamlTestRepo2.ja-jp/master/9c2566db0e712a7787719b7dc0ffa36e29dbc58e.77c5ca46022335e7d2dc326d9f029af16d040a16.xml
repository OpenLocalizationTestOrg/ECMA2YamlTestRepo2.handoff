{"nodes":[{"pos":[1553,1648],"content":"Contains the values of a <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property.","needQuote":true,"needEscape":true,"source":"Contains the values of a <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> property."},{"pos":[3928,4046],"content":"Appends the specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to this collection.","needQuote":true,"needEscape":true,"source":"Appends the specified <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to this collection."},{"pos":[4178,4288],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to append to this collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to append to this collection."},{"pos":[4345,4486],"content":"The zero-based index of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is appended to this collection.","needQuote":true,"needEscape":true,"source":"The zero-based index of the <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object that is appended to this collection."},{"pos":[4699,4761],"content":"An error occurred during the call to the underlying interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred during the call to the underlying interface.","pos":[0,62]}]},{"pos":[4864,4988],"content":"The property value is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"The property value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[5589,5713],"content":"Appends the contents of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to this collection.","needQuote":true,"needEscape":true,"source":"Appends the contents of the <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to this collection."},{"pos":[5928,6062],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the objects to append to this collection.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object that contains the objects to append to this collection."},{"pos":[6250,6374],"content":"The property value is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"The property value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[6864,6998],"content":"Appends the contents of the specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to this collection.","needQuote":true,"needEscape":true,"source":"Appends the contents of the specified <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to this collection."},{"pos":[7140,7275],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> array that contains the objects to append to this collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> array that contains the objects to append to this collection."},{"pos":[7463,7587],"content":"The property value is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"The property value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[8067,8199],"content":"Determines whether the specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is in this collection.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object is in this collection."},{"pos":[8337,8451],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to search for in this collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to search for in this collection."},{"pos":[8510,8699],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified property belongs to this collection; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified property belongs to this collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9311,9495],"content":"Copies all <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects in this collection to the specified array, starting at the specified index in the target array.","needQuote":true,"needEscape":true,"source":"Copies all <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> objects in this collection to the specified array, starting at the specified index in the target array."},{"pos":[9646,9783],"content":"The array of <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that receives the elements of this collection.","needQuote":true,"needEscape":true,"source":"The array of <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> objects that receives the elements of this collection."},{"pos":[9844,9925],"content":"The zero-based index in <ph id=\"ph1\">`array`</ph> where this method starts copying this collection.","needQuote":true,"needEscape":true,"source":"The zero-based index in `array` where this method starts copying this collection."},{"pos":[10486,10555],"content":"Retrieves the index of a specified property value in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the index of a specified property value in this collection.","pos":[0,69]}]},{"pos":[10691,10718],"content":"The property value to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property value to find.","pos":[0,27]}]},{"pos":[10775,10880],"content":"The zero-based index of the specified property value. If the object is not found, the return value is -1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the specified property value. If the object is not found, the return value is -1.","pos":[0,105],"nodes":[{"content":"The zero-based index of the specified property value.","pos":[0,53]},{"content":"If the object is not found, the return value is -1.","pos":[54,105]}]}]},{"pos":[11481,11548],"content":"Inserts a property value into this collection at a specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inserts a property value into this collection at a specified index.","pos":[0,67]}]},{"pos":[11694,11753],"content":"The zero-based index at which to insert the property value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index at which to insert the property value.","pos":[0,59]}]},{"pos":[11815,11844],"content":"The property value to insert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property value to insert.","pos":[0,29]}]},{"pos":[12030,12154],"content":"The property value is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"The property value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[12287,12349],"content":"An error occurred during the call to the underlying interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred during the call to the underlying interface.","pos":[0,62]}]},{"pos":[12458,12533],"content":"The index is less than 0 (zero) or greater than the size of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index is less than 0 (zero) or greater than the size of the collection.","pos":[0,75]}]},{"pos":[12990,13078],"content":"Gets or sets the property value that is located at a specified index of this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the property value that is located at a specified index of this collection.","pos":[0,88]}]},{"pos":[13091,13492],"content":"In C#, this property is the indexer for the <xref:System.DirectoryServices.PropertyValueCollection> class.       In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>.","needQuote":false,"needEscape":true,"nodes":[{"content":"In C#, this property is the indexer for the <xref:System.DirectoryServices.PropertyValueCollection> class.       In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>.","pos":[0,399],"nodes":[{"content":"In C#, this property is the indexer for the &lt;xref:System.DirectoryServices.PropertyValueCollection&gt; class.","pos":[0,106],"source":"In C#, this property is the indexer for the <xref:System.DirectoryServices.PropertyValueCollection> class."},{"content":"In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.","pos":[113,229]},{"content":"However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is &lt;xref:System.String&gt;.","pos":[230,399],"source":" However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>."}]}]},{"pos":[13637,13680],"content":"The zero-based index of the property value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the property value.","pos":[0,43]}]},{"pos":[13738,13780],"content":"The property value at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property value at the specified index.","pos":[0,42]}]},{"pos":[13964,14088],"content":"The property value is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"The property value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[14197,14272],"content":"The index is less than zero (0) or greater than the size of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index is less than zero (0) or greater than the size of the collection.","pos":[0,75]}]},{"pos":[14739,14818],"content":"Overrides the <xref:System.Collections.CollectionBase.OnClearComplete*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides the &lt;xref:System.Collections.CollectionBase.OnClearComplete*&gt; method.","pos":[0,79],"source":"Overrides the <xref:System.Collections.CollectionBase.OnClearComplete*> method."}]},{"pos":[15563,15643],"content":"Overrides the <xref:System.Collections.CollectionBase.OnInsertComplete*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides the &lt;xref:System.Collections.CollectionBase.OnInsertComplete*&gt; method.","pos":[0,80],"source":"Overrides the <xref:System.Collections.CollectionBase.OnInsertComplete*> method."}]},{"pos":[15811,15859],"content":"The zero-based index at which to insert <ph id=\"ph1\">`value`</ph>.","needQuote":true,"needEscape":true,"source":"The zero-based index at which to insert `value`."},{"pos":[15921,15961],"content":"The new value of the element at <ph id=\"ph1\">`index`</ph>.","needQuote":true,"needEscape":true,"source":"The new value of the element at `index`."},{"pos":[16621,16701],"content":"Overrides the <xref:System.Collections.CollectionBase.OnRemoveComplete*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides the &lt;xref:System.Collections.CollectionBase.OnRemoveComplete*&gt; method.","pos":[0,80],"source":"Overrides the <xref:System.Collections.CollectionBase.OnRemoveComplete*> method."}]},{"pos":[16869,16918],"content":"The zero-based index at which value can be found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index at which value can be found.","pos":[0,49]}]},{"pos":[16980,17028],"content":"The value of the element to remove from <ph id=\"ph1\">`index`</ph>.","needQuote":true,"needEscape":true,"source":"The value of the element to remove from `index`."},{"pos":[17722,17832],"content":"Overrides the &lt;xref:System.Collections.CollectionBase.OnSetComplete%2A?displayProperty=fullName&gt; method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.CollectionBase.OnSetComplete%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method.","pos":[0,110],"source":"Overrides the &lt;xref:System.Collections.CollectionBase.OnSetComplete%2A?displayProperty=fullName&gt; method."}]},{"pos":[18017,18071],"content":"The zero-based index at which <ph id=\"ph1\">`oldValue`</ph> can be found.","needQuote":true,"needEscape":true,"source":"The zero-based index at which `oldValue` can be found."},{"pos":[18136,18173],"content":"The value to replace with <ph id=\"ph1\">`newValue`</ph>.","needQuote":true,"needEscape":true,"source":"The value to replace with `newValue`."},{"pos":[18238,18278],"content":"The new value of the element at <ph id=\"ph1\">`index`</ph>.","needQuote":true,"needEscape":true,"source":"The new value of the element at `index`."},{"pos":[18819,18885],"content":"Gets the property name for the attributes in the value collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the property name for the attributes in the value collection.","pos":[0,66]}]},{"pos":[19002,19169],"content":"A string that contains the name of the property with the values that are included in this <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A string that contains the name of the property with the values that are included in this <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object."},{"pos":[19731,19787],"content":"Removes a specified property value from this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a specified property value from this collection.","pos":[0,56]}]},{"pos":[19799,20372],"content":"When working with a multi-valued string property value, the Remove method will successfully remove the correct item. However, identifying the correct items by name is difficult with a multi-valued DNWithString property value (as the DNWithString COM class, which is used to store the DNWithString items, has 2 string properties representing the item). The way to remove such items is to find the object in the collection (by looping thru all the items), then call the Remove function with the object's pointer that you just found.  This is illustrated in the example below.","needQuote":true,"needEscape":true,"nodes":[{"content":"When working with a multi-valued string property value, the Remove method will successfully remove the correct item. However, identifying the correct items by name is difficult with a multi-valued DNWithString property value (as the DNWithString COM class, which is used to store the DNWithString items, has 2 string properties representing the item). The way to remove such items is to find the object in the collection (by looping thru all the items), then call the Remove function with the object's pointer that you just found.  This is illustrated in the example below.","pos":[0,573],"nodes":[{"content":"When working with a multi-valued string property value, the Remove method will successfully remove the correct item.","pos":[0,116]},{"content":"However, identifying the correct items by name is difficult with a multi-valued DNWithString property value (as the DNWithString COM class, which is used to store the DNWithString items, has 2 string properties representing the item).","pos":[117,351]},{"content":"The way to remove such items is to find the object in the collection (by looping thru all the items), then call the Remove function with the object's pointer that you just found.","pos":[352,530]},{"content":"This is illustrated in the example below.","pos":[532,573]}]}]},{"pos":[21206,21235],"content":"The property value to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property value to remove.","pos":[0,29]}]},{"pos":[21421,21545],"content":"The property value is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"The property value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[21678,21740],"content":"An error occurred during the call to the underlying interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred during the call to the underlying interface.","pos":[0,62]}]},{"pos":[22153,22195],"content":"Gets or sets the values of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the values of the collection.","pos":[0,42]}]},{"pos":[22207,22275],"content":"To add multiple values, set this property to an array of the values.","needQuote":true,"needEscape":true,"nodes":[{"content":"To add multiple values, set this property to an array of the values.","pos":[0,68]}]},{"pos":[22391,23011],"content":"If the collection is empty, the property value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic). If the collection contains one value, the property value is that value. If the collection contains multiple values, the property value equals a copy of an array of those values.       If setting this property, the value or values are added to the <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref>. Setting this property to a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>) clears the collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the collection is empty, the property value is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","pos":[0,152],"source":"If the collection is empty, the property value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"content":"If the collection contains one value, the property value is that value.","pos":[153,224]},{"content":"If the collection contains multiple values, the property value equals a copy of an array of those values.","pos":[225,330]},{"content":"If setting this property, the value or values are added to the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[337,470],"source":"       If setting this property, the value or values are added to the <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref>."},{"content":"Setting this property to a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) clears the collection.","pos":[471,604],"source":" Setting this property to a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>) clears the collection."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.PropertyValueCollection\n  id: PropertyValueCollection\n  children:\n  - System.DirectoryServices.PropertyValueCollection.Add(System.Object)\n  - System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)\n  - System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])\n  - System.DirectoryServices.PropertyValueCollection.Contains(System.Object)\n  - System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)\n  - System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)\n  - System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)\n  - System.DirectoryServices.PropertyValueCollection.Item(System.Int32)\n  - System.DirectoryServices.PropertyValueCollection.OnClearComplete\n  - System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)\n  - System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)\n  - System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)\n  - System.DirectoryServices.PropertyValueCollection.PropertyName\n  - System.DirectoryServices.PropertyValueCollection.Remove(System.Object)\n  - System.DirectoryServices.PropertyValueCollection.Value\n  langs:\n  - csharp\n  name: PropertyValueCollection\n  nameWithType: PropertyValueCollection\n  fullName: System.DirectoryServices.PropertyValueCollection\n  type: Class\n  summary: Contains the values of a <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> property.\n  syntax:\n    content: 'public class PropertyValueCollection : System.Collections.CollectionBase'\n  inheritance:\n  - System.Object\n  - System.Collections.CollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.CollectionBase.Capacity\n  - System.Collections.CollectionBase.Clear\n  - System.Collections.CollectionBase.Count\n  - System.Collections.CollectionBase.GetEnumerator\n  - System.Collections.CollectionBase.InnerList\n  - System.Collections.CollectionBase.List\n  - System.Collections.CollectionBase.OnClear\n  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)\n  - System.Collections.CollectionBase.OnValidate(System.Object)\n  - System.Collections.CollectionBase.RemoveAt(System.Int32)\n  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot\n  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize\n  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly\n  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)\n  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)\n  platform:\n  - net462\n- uid: System.DirectoryServices.PropertyValueCollection.Add(System.Object)\n  id: Add(System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: Add(Object)\n  nameWithType: PropertyValueCollection.Add(Object)\n  fullName: System.DirectoryServices.PropertyValueCollection.Add(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Appends the specified <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to this collection.\n  syntax:\n    content: public int Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to append to this collection.\n    return:\n      type: System.Int32\n      description: The zero-based index of the <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object that is appended to this collection.\n  overload: System.DirectoryServices.PropertyValueCollection.Add*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: An error occurred during the call to the underlying interface.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)\n  id: AddRange(System.DirectoryServices.PropertyValueCollection)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: AddRange(PropertyValueCollection)\n  nameWithType: PropertyValueCollection.AddRange(PropertyValueCollection)\n  fullName: System.DirectoryServices.PropertyValueCollection.AddRange(PropertyValueCollection)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Appends the contents of the <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to this collection.\n  syntax:\n    content: public void AddRange (System.DirectoryServices.PropertyValueCollection value);\n    parameters:\n    - id: value\n      type: System.DirectoryServices.PropertyValueCollection\n      description: A <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object that contains the objects to append to this collection.\n  overload: System.DirectoryServices.PropertyValueCollection.AddRange*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])\n  id: AddRange(System.Object[])\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: AddRange(Object[])\n  nameWithType: PropertyValueCollection.AddRange(Object[])\n  fullName: System.DirectoryServices.PropertyValueCollection.AddRange(Object[])\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Appends the contents of the specified <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to this collection.\n  syntax:\n    content: public void AddRange (object[] value);\n    parameters:\n    - id: value\n      type: System.Object[]\n      description: The <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> array that contains the objects to append to this collection.\n  overload: System.DirectoryServices.PropertyValueCollection.AddRange*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.DirectoryServices.PropertyValueCollection.Contains(System.Object)\n  id: Contains(System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: Contains(Object)\n  nameWithType: PropertyValueCollection.Contains(Object)\n  fullName: System.DirectoryServices.PropertyValueCollection.Contains(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Determines whether the specified <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object is in this collection.\n  syntax:\n    content: public bool Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to search for in this collection.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified property belongs to this collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.DirectoryServices.PropertyValueCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)\n  id: CopyTo(System.Object[],System.Int32)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: CopyTo(Object[],Int32)\n  nameWithType: PropertyValueCollection.CopyTo(Object[],Int32)\n  fullName: System.DirectoryServices.PropertyValueCollection.CopyTo(Object[],Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Copies all <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> objects in this collection to the specified array, starting at the specified index in the target array.\n  syntax:\n    content: public void CopyTo (object[] array, int index);\n    parameters:\n    - id: array\n      type: System.Object[]\n      description: The array of <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> objects that receives the elements of this collection.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in `array` where this method starts copying this collection.\n  overload: System.DirectoryServices.PropertyValueCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)\n  id: IndexOf(System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: IndexOf(Object)\n  nameWithType: PropertyValueCollection.IndexOf(Object)\n  fullName: System.DirectoryServices.PropertyValueCollection.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Retrieves the index of a specified property value in this collection.\n  syntax:\n    content: public int IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The property value to find.\n    return:\n      type: System.Int32\n      description: The zero-based index of the specified property value. If the object is not found, the return value is -1.\n  overload: System.DirectoryServices.PropertyValueCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)\n  id: Insert(System.Int32,System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: Insert(Int32,Object)\n  nameWithType: PropertyValueCollection.Insert(Int32,Object)\n  fullName: System.DirectoryServices.PropertyValueCollection.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Inserts a property value into this collection at a specified index.\n  syntax:\n    content: public void Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which to insert the property value.\n    - id: value\n      type: System.Object\n      description: The property value to insert.\n  overload: System.DirectoryServices.PropertyValueCollection.Insert*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: An error occurred during the call to the underlying interface.\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: The index is less than 0 (zero) or greater than the size of the collection.\n  platform:\n  - net462\n- uid: System.DirectoryServices.PropertyValueCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: PropertyValueCollection.Item(Int32)\n  fullName: System.DirectoryServices.PropertyValueCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets the property value that is located at a specified index of this collection.\n  remarks: \"In C#, this property is the indexer for the <xref:System.DirectoryServices.PropertyValueCollection> class.  \\n  \\n In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>.\"\n  syntax:\n    content: public object this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the property value.\n    return:\n      type: System.Object\n      description: The property value at the specified index.\n  overload: System.DirectoryServices.PropertyValueCollection.Item*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: The index is less than zero (0) or greater than the size of the collection.\n  platform:\n  - net462\n- uid: System.DirectoryServices.PropertyValueCollection.OnClearComplete\n  id: OnClearComplete\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: OnClearComplete()\n  nameWithType: PropertyValueCollection.OnClearComplete()\n  fullName: System.DirectoryServices.PropertyValueCollection.OnClearComplete()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Overrides the <xref:System.Collections.CollectionBase.OnClearComplete*> method.\n  syntax:\n    content: protected override void OnClearComplete ();\n    parameters: []\n  overload: System.DirectoryServices.PropertyValueCollection.OnClearComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)\n  id: OnInsertComplete(System.Int32,System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: OnInsertComplete(Int32,Object)\n  nameWithType: PropertyValueCollection.OnInsertComplete(Int32,Object)\n  fullName: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(Int32,Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Overrides the <xref:System.Collections.CollectionBase.OnInsertComplete*> method.\n  syntax:\n    content: protected override void OnInsertComplete (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which to insert `value`.\n    - id: value\n      type: System.Object\n      description: The new value of the element at `index`.\n  overload: System.DirectoryServices.PropertyValueCollection.OnInsertComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)\n  id: OnRemoveComplete(System.Int32,System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: OnRemoveComplete(Int32,Object)\n  nameWithType: PropertyValueCollection.OnRemoveComplete(Int32,Object)\n  fullName: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(Int32,Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Overrides the <xref:System.Collections.CollectionBase.OnRemoveComplete*> method.\n  syntax:\n    content: protected override void OnRemoveComplete (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which value can be found.\n    - id: value\n      type: System.Object\n      description: The value of the element to remove from `index`.\n  overload: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)\n  id: OnSetComplete(System.Int32,System.Object,System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: OnSetComplete(Int32,Object,Object)\n  nameWithType: PropertyValueCollection.OnSetComplete(Int32,Object,Object)\n  fullName: System.DirectoryServices.PropertyValueCollection.OnSetComplete(Int32,Object,Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Overrides the &lt;xref:System.Collections.CollectionBase.OnSetComplete%2A?displayProperty=fullName&gt; method.\n  syntax:\n    content: protected override void OnSetComplete (int index, object oldValue, object newValue);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which `oldValue` can be found.\n    - id: oldValue\n      type: System.Object\n      description: The value to replace with `newValue`.\n    - id: newValue\n      type: System.Object\n      description: The new value of the element at `index`.\n  overload: System.DirectoryServices.PropertyValueCollection.OnSetComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.PropertyValueCollection.PropertyName\n  id: PropertyName\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: PropertyName\n  nameWithType: PropertyValueCollection.PropertyName\n  fullName: System.DirectoryServices.PropertyValueCollection.PropertyName\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the property name for the attributes in the value collection.\n  syntax:\n    content: public string PropertyName { get; }\n    return:\n      type: System.String\n      description: A string that contains the name of the property with the values that are included in this <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object.\n  overload: System.DirectoryServices.PropertyValueCollection.PropertyName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.PropertyValueCollection.Remove(System.Object)\n  id: Remove(System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: Remove(Object)\n  nameWithType: PropertyValueCollection.Remove(Object)\n  fullName: System.DirectoryServices.PropertyValueCollection.Remove(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes a specified property value from this collection.\n  remarks: When working with a multi-valued string property value, the Remove method will successfully remove the correct item. However, identifying the correct items by name is difficult with a multi-valued DNWithString property value (as the DNWithString COM class, which is used to store the DNWithString items, has 2 string properties representing the item). The way to remove such items is to find the object in the collection (by looping thru all the items), then call the Remove function with the object's pointer that you just found.  This is illustrated in the example below.\n  example:\n  - \"```c#  \\n  \\n// Bind to the AD object  \\nDirectoryEntry myUser = new DirectoryEntry(\\\"LDAP://AdServer:389/CN=MyUsername,CN=Users,DC=contoso,DC=com\\\");  \\n  \\n// Get the attribute  \\nPropertyValueCollection testAttribute = myUser.Properties[\\\"someAttribute\\\"];  \\n  \\n// Find the item in the collection that we want to delete  \\nDNWithString dnwsItemToRemove = null;  \\nforeach (DNWithString dnwsItem in testAttribute)  \\n{  \\n    if (dnwsItem.StringValue.Equals(\\\"SomeValue\\\"))  \\n    {  \\n        dnwsItemToRemove = dnwsItem;  \\n        break;  \\n    }  \\n}  \\n  \\n// Delete it  \\ntestAttribute.Remove(dnwsItemToRemove);  \\n  \\n// Store the data  \\nmyUser.CommitChanges();  \\n```\"\n  syntax:\n    content: public void Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The property value to remove.\n  overload: System.DirectoryServices.PropertyValueCollection.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: An error occurred during the call to the underlying interface.\n  platform:\n  - net462\n- uid: System.DirectoryServices.PropertyValueCollection.Value\n  id: Value\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: Value\n  nameWithType: PropertyValueCollection.Value\n  fullName: System.DirectoryServices.PropertyValueCollection.Value\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets the values of the collection.\n  remarks: To add multiple values, set this property to an array of the values.\n  syntax:\n    content: public object Value { get; set; }\n    return:\n      type: System.Object\n      description: \"If the collection is empty, the property value is a null reference (<xref uid=\\\"langword_csharp_Nothing\\\" name=\\\"Nothing\\\" href=\\\"\\\"></xref> in Visual Basic). If the collection contains one value, the property value is that value. If the collection contains multiple values, the property value equals a copy of an array of those values.  \\n  \\n If setting this property, the value or values are added to the <xref href=\\\"System.DirectoryServices.PropertyValueCollection\\\"></xref>. Setting this property to a null reference (<xref uid=\\\"langword_csharp_Nothing\\\" name=\\\"Nothing\\\" href=\\\"\\\"></xref>) clears the collection.\"\n  overload: System.DirectoryServices.PropertyValueCollection.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.CollectionBase\n  isExternal: false\n  name: System.Collections.CollectionBase\n- uid: System.Runtime.InteropServices.COMException\n  isExternal: true\n  name: System.Runtime.InteropServices.COMException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IndexOutOfRangeException\n  isExternal: true\n  name: System.IndexOutOfRangeException\n- uid: System.DirectoryServices.PropertyValueCollection.Add(System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Add(Object)\n  nameWithType: PropertyValueCollection.Add(Object)\n  fullName: System.DirectoryServices.PropertyValueCollection.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: AddRange(PropertyValueCollection)\n  nameWithType: PropertyValueCollection.AddRange(PropertyValueCollection)\n  fullName: System.DirectoryServices.PropertyValueCollection.AddRange(PropertyValueCollection)\n- uid: System.DirectoryServices.PropertyValueCollection\n  parent: System.DirectoryServices\n  isExternal: false\n  name: PropertyValueCollection\n  nameWithType: PropertyValueCollection\n  fullName: System.DirectoryServices.PropertyValueCollection\n- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: AddRange(Object[])\n  nameWithType: PropertyValueCollection.AddRange(Object[])\n  fullName: System.DirectoryServices.PropertyValueCollection.AddRange(Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.DirectoryServices.PropertyValueCollection.Contains(System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Contains(Object)\n  nameWithType: PropertyValueCollection.Contains(Object)\n  fullName: System.DirectoryServices.PropertyValueCollection.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: CopyTo(Object[],Int32)\n  nameWithType: PropertyValueCollection.CopyTo(Object[],Int32)\n  fullName: System.DirectoryServices.PropertyValueCollection.CopyTo(Object[],Int32)\n- uid: System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: IndexOf(Object)\n  nameWithType: PropertyValueCollection.IndexOf(Object)\n  fullName: System.DirectoryServices.PropertyValueCollection.IndexOf(Object)\n- uid: System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Insert(Int32,Object)\n  nameWithType: PropertyValueCollection.Insert(Int32,Object)\n  fullName: System.DirectoryServices.PropertyValueCollection.Insert(Int32,Object)\n- uid: System.DirectoryServices.PropertyValueCollection.Item(System.Int32)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: PropertyValueCollection.Item(Int32)\n  fullName: System.DirectoryServices.PropertyValueCollection.Item(Int32)\n- uid: System.DirectoryServices.PropertyValueCollection.OnClearComplete\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: OnClearComplete()\n  nameWithType: PropertyValueCollection.OnClearComplete()\n  fullName: System.DirectoryServices.PropertyValueCollection.OnClearComplete()\n- uid: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: OnInsertComplete(Int32,Object)\n  nameWithType: PropertyValueCollection.OnInsertComplete(Int32,Object)\n  fullName: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(Int32,Object)\n- uid: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: OnRemoveComplete(Int32,Object)\n  nameWithType: PropertyValueCollection.OnRemoveComplete(Int32,Object)\n  fullName: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(Int32,Object)\n- uid: System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: OnSetComplete(Int32,Object,Object)\n  nameWithType: PropertyValueCollection.OnSetComplete(Int32,Object,Object)\n  fullName: System.DirectoryServices.PropertyValueCollection.OnSetComplete(Int32,Object,Object)\n- uid: System.DirectoryServices.PropertyValueCollection.PropertyName\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: PropertyName\n  nameWithType: PropertyValueCollection.PropertyName\n  fullName: System.DirectoryServices.PropertyValueCollection.PropertyName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.PropertyValueCollection.Remove(System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Remove(Object)\n  nameWithType: PropertyValueCollection.Remove(Object)\n  fullName: System.DirectoryServices.PropertyValueCollection.Remove(Object)\n- uid: System.DirectoryServices.PropertyValueCollection.Value\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Value\n  nameWithType: PropertyValueCollection.Value\n  fullName: System.DirectoryServices.PropertyValueCollection.Value\n- uid: System.DirectoryServices.PropertyValueCollection.Add*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Add\n  nameWithType: PropertyValueCollection.Add\n- uid: System.DirectoryServices.PropertyValueCollection.AddRange*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: AddRange\n  nameWithType: PropertyValueCollection.AddRange\n- uid: System.DirectoryServices.PropertyValueCollection.Contains*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Contains\n  nameWithType: PropertyValueCollection.Contains\n- uid: System.DirectoryServices.PropertyValueCollection.CopyTo*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: PropertyValueCollection.CopyTo\n- uid: System.DirectoryServices.PropertyValueCollection.IndexOf*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: PropertyValueCollection.IndexOf\n- uid: System.DirectoryServices.PropertyValueCollection.Insert*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Insert\n  nameWithType: PropertyValueCollection.Insert\n- uid: System.DirectoryServices.PropertyValueCollection.Item*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Item\n  nameWithType: PropertyValueCollection.Item\n- uid: System.DirectoryServices.PropertyValueCollection.OnClearComplete*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: OnClearComplete\n  nameWithType: PropertyValueCollection.OnClearComplete\n- uid: System.DirectoryServices.PropertyValueCollection.OnInsertComplete*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: OnInsertComplete\n  nameWithType: PropertyValueCollection.OnInsertComplete\n- uid: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: OnRemoveComplete\n  nameWithType: PropertyValueCollection.OnRemoveComplete\n- uid: System.DirectoryServices.PropertyValueCollection.OnSetComplete*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: OnSetComplete\n  nameWithType: PropertyValueCollection.OnSetComplete\n- uid: System.DirectoryServices.PropertyValueCollection.PropertyName*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: PropertyName\n  nameWithType: PropertyValueCollection.PropertyName\n- uid: System.DirectoryServices.PropertyValueCollection.Remove*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Remove\n  nameWithType: PropertyValueCollection.Remove\n- uid: System.DirectoryServices.PropertyValueCollection.Value*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Value\n  nameWithType: PropertyValueCollection.Value\n"}