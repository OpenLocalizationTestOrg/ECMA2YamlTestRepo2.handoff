{"nodes":[{"pos":[682,775],"content":"Contains the values of a <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.SearchResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property.","needQuote":true,"needEscape":true,"source":"Contains the values of a <xref href=\"System.DirectoryServices.SearchResult\"></xref> property."},{"pos":[787,1492],"content":"<xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances. The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns. If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances. The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns. If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available.","pos":[0,705],"nodes":[{"content":"&lt;xref:System.DirectoryServices.SearchResult&gt; instances are similar to &lt;xref:System.DirectoryServices.DirectoryEntry&gt; instances.","pos":[0,127],"source":"<xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances."},{"content":"The notable difference is that the &lt;xref:System.DirectoryServices.DirectoryEntry&gt; retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the &lt;xref:System.DirectoryServices.SearchResult&gt; is already available in the &lt;xref:System.DirectoryServices.SearchResultCollection&gt; that a &lt;xref:System.DirectoryServices.DirectorySearcher&gt; query returns.","pos":[128,548],"source":" The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns."},{"content":"If you try to get a &lt;xref:System.DirectoryServices.SearchResult&gt; property that your query did not specify for retrieval, the property will not be available.","pos":[549,705],"source":" If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available."}]}]},{"pos":[2681,2769],"content":"The Contains method determines whether a specified property value is in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Contains method determines whether a specified property value is in this collection.","pos":[0,88]}]},{"pos":[2907,2934],"content":"The property value to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property value to find.","pos":[0,27]}]},{"pos":[2993,3202],"content":"The return value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified property belongs to this collection; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The return value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified property belongs to this collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3844,3967],"content":"The CopyTo method copies the property values from this collection to an array, starting at a particular index of the array.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CopyTo method copies the property values from this collection to an array, starting at a particular index of the array.","pos":[0,123]}]},{"pos":[4120,4206],"content":"An array of type <xref:System.Object> that receives this collection's property values.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Object&gt; that receives this collection's property values.","pos":[0,86],"source":"An array of type <xref:System.Object> that receives this collection's property values."}]},{"pos":[4267,4340],"content":"The zero-based array index at which to begin copying the property values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based array index at which to begin copying the property values.","pos":[0,73]}]},{"pos":[4931,5019],"content":"The IndexOf method retrieves the index of a specified property value in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The IndexOf method retrieves the index of a specified property value in this collection.","pos":[0,88]}]},{"pos":[5155,5182],"content":"The property value to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property value to find.","pos":[0,27]}]},{"pos":[5239,5344],"content":"The zero-based index of the specified property value. If the object is not found, the return value is -1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the specified property value. If the object is not found, the return value is -1.","pos":[0,105],"nodes":[{"content":"The zero-based index of the specified property value.","pos":[0,53]},{"content":"If the object is not found, the return value is -1.","pos":[54,105]}]}]},{"pos":[5918,5997],"content":"The Item property gets the property value that is located at a specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Item property gets the property value that is located at a specified index.","pos":[0,79]}]},{"pos":[6010,6415],"content":"In C#, this property is the indexer for the <xref:System.DirectoryServices.ResultPropertyValueCollection> class.       In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and an index type of <xref:System.String>.","needQuote":false,"needEscape":true,"nodes":[{"content":"In C#, this property is the indexer for the <xref:System.DirectoryServices.ResultPropertyValueCollection> class.       In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and an index type of <xref:System.String>.","pos":[0,403],"nodes":[{"content":"In C#, this property is the indexer for the &lt;xref:System.DirectoryServices.ResultPropertyValueCollection&gt; class.","pos":[0,112],"source":"In C#, this property is the indexer for the <xref:System.DirectoryServices.ResultPropertyValueCollection> class."},{"content":"In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.","pos":[119,235]},{"content":"However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and an index type of &lt;xref:System.String&gt;.","pos":[236,403],"source":" However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and an index type of <xref:System.String>."}]}]},{"pos":[6555,6610],"content":"The zero-based index of the property value to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the property value to retrieve.","pos":[0,55]}]},{"pos":[6668,6726],"content":"The property value that is located at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property value that is located at the specified index.","pos":[0,58]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ResultPropertyValueCollection\n  id: ResultPropertyValueCollection\n  children:\n  - System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)\n  - System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)\n  - System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)\n  - System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)\n  langs:\n  - csharp\n  name: ResultPropertyValueCollection\n  nameWithType: ResultPropertyValueCollection\n  fullName: System.DirectoryServices.ResultPropertyValueCollection\n  type: Class\n  summary: Contains the values of a <xref href=\"System.DirectoryServices.SearchResult\"></xref> property.\n  remarks: <xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances. The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns. If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available.\n  syntax:\n    content: 'public class ResultPropertyValueCollection : System.Collections.ReadOnlyCollectionBase'\n  inheritance:\n  - System.Object\n  - System.Collections.ReadOnlyCollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.ReadOnlyCollectionBase.Count\n  - System.Collections.ReadOnlyCollectionBase.GetEnumerator\n  - System.Collections.ReadOnlyCollectionBase.InnerList\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot\n  platform:\n  - net462\n- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)\n  id: Contains(System.Object)\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  langs:\n  - csharp\n  name: Contains(Object)\n  nameWithType: ResultPropertyValueCollection.Contains(Object)\n  fullName: System.DirectoryServices.ResultPropertyValueCollection.Contains(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: The Contains method determines whether a specified property value is in this collection.\n  syntax:\n    content: public bool Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The property value to find.\n    return:\n      type: System.Boolean\n      description: The return value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified property belongs to this collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.DirectoryServices.ResultPropertyValueCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)\n  id: CopyTo(System.Object[],System.Int32)\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  langs:\n  - csharp\n  name: CopyTo(Object[],Int32)\n  nameWithType: ResultPropertyValueCollection.CopyTo(Object[],Int32)\n  fullName: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(Object[],Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: The CopyTo method copies the property values from this collection to an array, starting at a particular index of the array.\n  syntax:\n    content: public void CopyTo (object[] values, int index);\n    parameters:\n    - id: values\n      type: System.Object[]\n      description: An array of type <xref:System.Object> that receives this collection's property values.\n    - id: index\n      type: System.Int32\n      description: The zero-based array index at which to begin copying the property values.\n  overload: System.DirectoryServices.ResultPropertyValueCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)\n  id: IndexOf(System.Object)\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  langs:\n  - csharp\n  name: IndexOf(Object)\n  nameWithType: ResultPropertyValueCollection.IndexOf(Object)\n  fullName: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: The IndexOf method retrieves the index of a specified property value in this collection.\n  syntax:\n    content: public int IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The property value to find.\n    return:\n      type: System.Int32\n      description: The zero-based index of the specified property value. If the object is not found, the return value is -1.\n  overload: System.DirectoryServices.ResultPropertyValueCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ResultPropertyValueCollection.Item(Int32)\n  fullName: System.DirectoryServices.ResultPropertyValueCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: The Item property gets the property value that is located at a specified index.\n  remarks: \"In C#, this property is the indexer for the <xref:System.DirectoryServices.ResultPropertyValueCollection> class.  \\n  \\n In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and an index type of <xref:System.String>.\"\n  syntax:\n    content: public object this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the property value to retrieve.\n    return:\n      type: System.Object\n      description: The property value that is located at the specified index.\n  overload: System.DirectoryServices.ResultPropertyValueCollection.Item*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.ReadOnlyCollectionBase\n  isExternal: false\n  name: System.Collections.ReadOnlyCollectionBase\n- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  isExternal: false\n  name: Contains(Object)\n  nameWithType: ResultPropertyValueCollection.Contains(Object)\n  fullName: System.DirectoryServices.ResultPropertyValueCollection.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  isExternal: false\n  name: CopyTo(Object[],Int32)\n  nameWithType: ResultPropertyValueCollection.CopyTo(Object[],Int32)\n  fullName: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(Object[],Int32)\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  isExternal: false\n  name: IndexOf(Object)\n  nameWithType: ResultPropertyValueCollection.IndexOf(Object)\n  fullName: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(Object)\n- uid: System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ResultPropertyValueCollection.Item(Int32)\n  fullName: System.DirectoryServices.ResultPropertyValueCollection.Item(Int32)\n- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains*\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  isExternal: false\n  name: Contains\n  nameWithType: ResultPropertyValueCollection.Contains\n- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo*\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: ResultPropertyValueCollection.CopyTo\n- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf*\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: ResultPropertyValueCollection.IndexOf\n- uid: System.DirectoryServices.ResultPropertyValueCollection.Item*\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  isExternal: false\n  name: Item\n  nameWithType: ResultPropertyValueCollection.Item\n"}