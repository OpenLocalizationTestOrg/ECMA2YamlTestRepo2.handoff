{"nodes":[{"pos":[594,791],"content":"Contains mutually exclusive <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects and <bpt id=\"p2\">&lt;xref href=\"System.Windows.VisualTransition\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects that are used to move from one state to another.","needQuote":true,"needEscape":true,"source":"Contains mutually exclusive <xref href=\"System.Windows.VisualState\"></xref> objects and <xref href=\"System.Windows.VisualTransition\"></xref> objects that are used to move from one state to another."},{"pos":[804,3637],"content":"Each VisualStateGroup contains a collection of <xref:System.Windows.VisualState> objects. A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in a certain state. For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed. Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`\"Pressed\"`) and when it is not (`\"Normal\"`).       You add <xref:System.Windows.VisualState> to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control. You put states that are mutually exclusive to each other in the same VisualStateGroup. For example, the <xref:System.Windows.Controls.CheckBox> has two VisualStateGroup objects. One contains the states, `Normal`, `MouseOver`, `Pressed`, and `Disabled`. The other contains the states, `Checked`, `UnChecked`, and `Indeterminate`. The <xref:System.Windows.Controls.CheckBox> can be in states `MouseOver` and `UnChecked` at the same time, but it cannot be in the `MouseOver` and `Pressed` states at the same time.       Although you can add <xref:System.Windows.VisualState> objects to any element, they are a particularly useful way to enable others to redefine the visual behavior of a <xref:System.Windows.Controls.Control>. If you create a custom control that uses a <xref:System.Windows.Controls.ControlTemplate>, you can specify which states that control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition. Then anyone who creates a new <xref:System.Windows.Controls.ControlTemplate> for your control can add <xref:System.Windows.VisualState> objects to the template. The <xref:System.Windows.TemplateVisualStateAttribute> enables designer tools, such as Expression Blend, to expose the control's states. States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same VisualStateGroup.       For more information about how to use VisualStateGroup objects in a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md). For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/add/includes/ajax-current-ext-md.md).       The <xref:System.Windows.VisualStateGroup.Transitions%2A> property contains <xref:System.Windows.VisualTransition> objects that are applied when the control transition between states that are defined in the VisualStateGroup.","needQuote":false,"needEscape":true,"nodes":[{"content":"Each VisualStateGroup contains a collection of &lt;xref:System.Windows.VisualState&gt; objects.","pos":[0,89],"source":"Each VisualStateGroup contains a collection of <xref:System.Windows.VisualState> objects."},{"content":"A &lt;xref:System.Windows.VisualState&gt; contains a collection of &lt;xref:System.Windows.Media.Animation.Storyboard&gt; objects that specify how the control's appearance changes when the control is in a certain state.","pos":[90,297],"source":" A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in a certain state."},{"content":"For example, a &lt;xref:System.Windows.Controls.Button&gt; might have a slightly different appearance when it is pressed than when it is not pressed.","pos":[298,441],"source":" For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed."},{"content":"Two states that the &lt;xref:System.Windows.Controls.Button&gt; defines correspond to when it is pressed (<ph id=\"ph1\">`\"Pressed\"`</ph>) and when it is not (<ph id=\"ph2\">`\"Normal\"`</ph>).","pos":[442,587],"source":" Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`\"Pressed\"`) and when it is not (`\"Normal\"`)."},{"content":"You add &lt;xref:System.Windows.VisualState&gt; to a control by setting the <ph id=\"ph1\">`VisualStateManager.VisualStateGroups`</ph> attached property on the control.","pos":[594,736],"source":"       You add <xref:System.Windows.VisualState> to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control."},{"content":"You put states that are mutually exclusive to each other in the same VisualStateGroup.","pos":[737,823]},{"content":"For example, the &lt;xref:System.Windows.Controls.CheckBox&gt; has two VisualStateGroup objects.","pos":[824,914],"source":" For example, the <xref:System.Windows.Controls.CheckBox> has two VisualStateGroup objects."},{"content":"One contains the states, <ph id=\"ph1\">`Normal`</ph>, <ph id=\"ph2\">`MouseOver`</ph>, <ph id=\"ph3\">`Pressed`</ph>, and <ph id=\"ph4\">`Disabled`</ph>.","pos":[915,989],"source":" One contains the states, `Normal`, `MouseOver`, `Pressed`, and `Disabled`."},{"content":"The other contains the states, <ph id=\"ph1\">`Checked`</ph>, <ph id=\"ph2\">`UnChecked`</ph>, and <ph id=\"ph3\">`Indeterminate`</ph>.","pos":[990,1065],"source":" The other contains the states, `Checked`, `UnChecked`, and `Indeterminate`."},{"content":"The &lt;xref:System.Windows.Controls.CheckBox&gt; can be in states <ph id=\"ph1\">`MouseOver`</ph> and <ph id=\"ph2\">`UnChecked`</ph> at the same time, but it cannot be in the <ph id=\"ph3\">`MouseOver`</ph> and <ph id=\"ph4\">`Pressed`</ph> states at the same time.","pos":[1066,1247],"source":" The <xref:System.Windows.Controls.CheckBox> can be in states `MouseOver` and `UnChecked` at the same time, but it cannot be in the `MouseOver` and `Pressed` states at the same time."},{"content":"Although you can add &lt;xref:System.Windows.VisualState&gt; objects to any element, they are a particularly useful way to enable others to redefine the visual behavior of a &lt;xref:System.Windows.Controls.Control&gt;.","pos":[1254,1461],"source":"       Although you can add <xref:System.Windows.VisualState> objects to any element, they are a particularly useful way to enable others to redefine the visual behavior of a <xref:System.Windows.Controls.Control>."},{"content":"If you create a custom control that uses a &lt;xref:System.Windows.Controls.ControlTemplate&gt;, you can specify which states that control can be in by adding a &lt;xref:System.Windows.TemplateVisualStateAttribute&gt; on its class definition.","pos":[1462,1692],"source":" If you create a custom control that uses a <xref:System.Windows.Controls.ControlTemplate>, you can specify which states that control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition."},{"content":"Then anyone who creates a new &lt;xref:System.Windows.Controls.ControlTemplate&gt; for your control can add &lt;xref:System.Windows.VisualState&gt; objects to the template.","pos":[1693,1853],"source":" Then anyone who creates a new <xref:System.Windows.Controls.ControlTemplate> for your control can add <xref:System.Windows.VisualState> objects to the template."},{"content":"The &lt;xref:System.Windows.TemplateVisualStateAttribute&gt; enables designer tools, such as Expression Blend, to expose the control's states.","pos":[1854,1990],"source":" The <xref:System.Windows.TemplateVisualStateAttribute> enables designer tools, such as Expression Blend, to expose the control's states."},{"content":"States with the same &lt;xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName&gt; belong in the same VisualStateGroup.","pos":[1991,2137],"source":" States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same VisualStateGroup."},{"content":"For more information about how to use VisualStateGroup objects in a &lt;xref:System.Windows.Controls.ControlTemplate&gt;, see <bpt id=\"p1\">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2144,2385],"source":"       For more information about how to use VisualStateGroup objects in a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md)."},{"content":"For more information about how to create controls that use the &lt;xref:System.Windows.VisualStateManager&gt;, see <bpt id=\"p1\">[</bpt>Creating a Control That Has a Customizable Appearance<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2386,2590],"source":" For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/add/includes/ajax-current-ext-md.md)."},{"content":"The &lt;xref:System.Windows.VisualStateGroup.Transitions%2A&gt; property contains &lt;xref:System.Windows.VisualTransition&gt; objects that are applied when the control transition between states that are defined in the VisualStateGroup.","pos":[2597,2821],"source":"       The <xref:System.Windows.VisualStateGroup.Transitions%2A> property contains <xref:System.Windows.VisualTransition> objects that are applied when the control transition between states that are defined in the VisualStateGroup."}]},{"pos":[6513,6606],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualStateGroup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.VisualStateGroup\"></xref> class."},{"pos":[7121,7219],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is currently applied to the control.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Windows.VisualState\"></xref> that is currently applied to the control."},{"pos":[7369,7462],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is currently applied to the control.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.VisualState\"></xref> that is currently applied to the control."},{"pos":[7946,8002],"content":"Occurs after a control transitions to a different state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs after a control transitions to a different state.","pos":[0,56]}]},{"pos":[8014,8158],"content":"This event occurs after the control transitions to a new state and the <xref:System.Windows.VisualStateGroup.CurrentStateChanging> event occurs.","needQuote":true,"needEscape":true,"nodes":[{"content":"This event occurs after the control transitions to a new state and the &lt;xref:System.Windows.VisualStateGroup.CurrentStateChanging&gt; event occurs.","pos":[0,144],"source":"This event occurs after the control transitions to a new state and the <xref:System.Windows.VisualStateGroup.CurrentStateChanging> event occurs."}]},{"pos":[8380,8392],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8823,8887],"content":"Occurs when a control starts transitioning to a different state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a control starts transitioning to a different state.","pos":[0,64]}]},{"pos":[8899,9290],"content":"The event occurs when the control begins to transition states. If a <xref:System.Windows.VisualTransition> is applied to the state change, this event occurs when the transition begins. If a <xref:System.Windows.VisualTransition> is not applied, this event occurs after the control transitions to the new state, but before the <xref:System.Windows.VisualStateGroup.CurrentStateChanged> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event occurs when the control begins to transition states. If a <xref:System.Windows.VisualTransition> is applied to the state change, this event occurs when the transition begins. If a <xref:System.Windows.VisualTransition> is not applied, this event occurs after the control transitions to the new state, but before the <xref:System.Windows.VisualStateGroup.CurrentStateChanged> event.","pos":[0,391],"nodes":[{"content":"The event occurs when the control begins to transition states.","pos":[0,62]},{"content":"If a &lt;xref:System.Windows.VisualTransition&gt; is applied to the state change, this event occurs when the transition begins.","pos":[63,184],"source":" If a <xref:System.Windows.VisualTransition> is applied to the state change, this event occurs when the transition begins."},{"content":"If a &lt;xref:System.Windows.VisualTransition&gt; is not applied, this event occurs after the control transitions to the new state, but before the &lt;xref:System.Windows.VisualStateGroup.CurrentStateChanged&gt; event.","pos":[185,391],"source":" If a <xref:System.Windows.VisualTransition> is not applied, this event occurs after the control transitions to the new state, but before the <xref:System.Windows.VisualStateGroup.CurrentStateChanged> event."}]}]},{"pos":[9513,9525],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9879,9961],"content":"Gets or sets the name of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualStateGroup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the name of the <xref href=\"System.Windows.VisualStateGroup\"></xref>."},{"pos":[9973,10466],"content":"Control authors specify which states the control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition. States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>. Set the Name of the <xref:System.Windows.VisualStateGroup> to the value of the <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Control authors specify which states the control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition. States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>. Set the Name of the <xref:System.Windows.VisualStateGroup> to the value of the <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> property.","pos":[0,493],"nodes":[{"content":"Control authors specify which states the control can be in by adding a &lt;xref:System.Windows.TemplateVisualStateAttribute&gt; on its class definition.","pos":[0,146],"source":"Control authors specify which states the control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition."},{"content":"States with the same &lt;xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName&gt; belong in the same &lt;xref:System.Windows.VisualStateGroup&gt;.","pos":[147,315],"source":" States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>."},{"content":"Set the Name of the &lt;xref:System.Windows.VisualStateGroup&gt; to the value of the &lt;xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName&gt; property.","pos":[316,493],"source":" Set the Name of the <xref:System.Windows.VisualStateGroup> to the value of the <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> property."}]}]},{"pos":[11085,11154],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualStateGroup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.Windows.VisualStateGroup\"></xref>."},{"pos":[11568,11666],"content":"Gets the collection of mutually exclusive <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Gets the collection of mutually exclusive <xref href=\"System.Windows.VisualState\"></xref> objects."},{"pos":[12549,12642],"content":"The collection of mutually exclusive <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"The collection of mutually exclusive <xref href=\"System.Windows.VisualState\"></xref> objects."},{"pos":[13083,13167],"content":"Gets the collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualTransition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Gets the collection of <xref href=\"System.Windows.VisualTransition\"></xref> objects."},{"pos":[13179,13363],"content":"The <xref:System.Windows.VisualTransition> objects in Transitions are applied when the control transition between states that are defined in the <xref:System.Windows.VisualStateGroup>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.VisualTransition&gt; objects in Transitions are applied when the control transition between states that are defined in the &lt;xref:System.Windows.VisualStateGroup&gt;.","pos":[0,184],"source":"The <xref:System.Windows.VisualTransition> objects in Transitions are applied when the control transition between states that are defined in the <xref:System.Windows.VisualStateGroup>."}]},{"pos":[14237,14316],"content":"The collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualTransition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"The collection of <xref href=\"System.Windows.VisualTransition\"></xref> objects."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.VisualStateGroup\n  id: VisualStateGroup\n  children:\n  - System.Windows.VisualStateGroup.#ctor\n  - System.Windows.VisualStateGroup.CurrentState\n  - System.Windows.VisualStateGroup.CurrentStateChanged\n  - System.Windows.VisualStateGroup.CurrentStateChanging\n  - System.Windows.VisualStateGroup.Name\n  - System.Windows.VisualStateGroup.States\n  - System.Windows.VisualStateGroup.Transitions\n  langs:\n  - csharp\n  name: VisualStateGroup\n  nameWithType: VisualStateGroup\n  fullName: System.Windows.VisualStateGroup\n  type: Class\n  summary: Contains mutually exclusive <xref href=\"System.Windows.VisualState\"></xref> objects and <xref href=\"System.Windows.VisualTransition\"></xref> objects that are used to move from one state to another.\n  remarks: \"Each VisualStateGroup contains a collection of <xref:System.Windows.VisualState> objects. A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in a certain state. For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed. Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`\\\"Pressed\\\"`) and when it is not (`\\\"Normal\\\"`).  \\n  \\n You add <xref:System.Windows.VisualState> to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control. You put states that are mutually exclusive to each other in the same VisualStateGroup. For example, the <xref:System.Windows.Controls.CheckBox> has two VisualStateGroup objects. One contains the states, `Normal`, `MouseOver`, `Pressed`, and `Disabled`. The other contains the states, `Checked`, `UnChecked`, and `Indeterminate`. The <xref:System.Windows.Controls.CheckBox> can be in states `MouseOver` and `UnChecked` at the same time, but it cannot be in the `MouseOver` and `Pressed` states at the same time.  \\n  \\n Although you can add <xref:System.Windows.VisualState> objects to any element, they are a particularly useful way to enable others to redefine the visual behavior of a <xref:System.Windows.Controls.Control>. If you create a custom control that uses a <xref:System.Windows.Controls.ControlTemplate>, you can specify which states that control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition. Then anyone who creates a new <xref:System.Windows.Controls.ControlTemplate> for your control can add <xref:System.Windows.VisualState> objects to the template. The <xref:System.Windows.TemplateVisualStateAttribute> enables designer tools, such as Expression Blend, to expose the control's states. States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same VisualStateGroup.  \\n  \\n For more information about how to use VisualStateGroup objects in a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md). For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The <xref:System.Windows.VisualStateGroup.Transitions%2A> property contains <xref:System.Windows.VisualTransition> objects that are applied when the control transition between states that are defined in the VisualStateGroup.\"\n  example:\n  - \"The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a VisualStateGroup named `CommonStates`, which defines the `MouseOver` and `Normal` states. The VisualStateGroup also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"States\")]\n\n      [System.Windows.Markup.RuntimeNameProperty(\"Name\")]\n\n      public class VisualStateGroup : System.Windows.DependencyObject\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  implements: []\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.VisualStateGroup.#ctor\n  id: '#ctor'\n  parent: System.Windows.VisualStateGroup\n  langs:\n  - csharp\n  name: VisualStateGroup()\n  nameWithType: VisualStateGroup.VisualStateGroup()\n  fullName: System.Windows.VisualStateGroup.VisualStateGroup()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.VisualStateGroup\"></xref> class.\n  syntax:\n    content: public VisualStateGroup ();\n    parameters: []\n  overload: System.Windows.VisualStateGroup.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.VisualStateGroup.CurrentState\n  id: CurrentState\n  parent: System.Windows.VisualStateGroup\n  langs:\n  - csharp\n  name: CurrentState\n  nameWithType: VisualStateGroup.CurrentState\n  fullName: System.Windows.VisualStateGroup.CurrentState\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the <xref href=\"System.Windows.VisualState\"></xref> that is currently applied to the control.\n  syntax:\n    content: public System.Windows.VisualState CurrentState { get; }\n    return:\n      type: System.Windows.VisualState\n      description: The <xref href=\"System.Windows.VisualState\"></xref> that is currently applied to the control.\n  overload: System.Windows.VisualStateGroup.CurrentState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.VisualStateGroup.CurrentStateChanged\n  id: CurrentStateChanged\n  parent: System.Windows.VisualStateGroup\n  langs:\n  - csharp\n  name: CurrentStateChanged\n  nameWithType: VisualStateGroup.CurrentStateChanged\n  fullName: System.Windows.VisualStateGroup.CurrentStateChanged\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Occurs after a control transitions to a different state.\n  remarks: This event occurs after the control transitions to a new state and the <xref:System.Windows.VisualStateGroup.CurrentStateChanging> event occurs.\n  syntax:\n    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanged;\n    return:\n      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.VisualStateGroup.CurrentStateChanging\n  id: CurrentStateChanging\n  parent: System.Windows.VisualStateGroup\n  langs:\n  - csharp\n  name: CurrentStateChanging\n  nameWithType: VisualStateGroup.CurrentStateChanging\n  fullName: System.Windows.VisualStateGroup.CurrentStateChanging\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Occurs when a control starts transitioning to a different state.\n  remarks: The event occurs when the control begins to transition states. If a <xref:System.Windows.VisualTransition> is applied to the state change, this event occurs when the transition begins. If a <xref:System.Windows.VisualTransition> is not applied, this event occurs after the control transitions to the new state, but before the <xref:System.Windows.VisualStateGroup.CurrentStateChanged> event.\n  syntax:\n    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanging;\n    return:\n      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.VisualStateGroup.Name\n  id: Name\n  parent: System.Windows.VisualStateGroup\n  langs:\n  - csharp\n  name: Name\n  nameWithType: VisualStateGroup.Name\n  fullName: System.Windows.VisualStateGroup.Name\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the name of the <xref href=\"System.Windows.VisualStateGroup\"></xref>.\n  remarks: Control authors specify which states the control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition. States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>. Set the Name of the <xref:System.Windows.VisualStateGroup> to the value of the <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> property.\n  example:\n  - \"The following example creates two <xref:System.Windows.VisualStateGroup> objects that are named `CommonStates` and `FocusStates`. The control will be in exactly one state from each <xref:System.Windows.VisualStateGroup> at all times. For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-xml[VSMButtonTemplate#5](~/add/codesnippet/xaml/vsmbuttontemplate/skinnedbutton.xaml#5)]\"\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of the <xref href=\"System.Windows.VisualStateGroup\"></xref>.\n  overload: System.Windows.VisualStateGroup.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.VisualStateGroup.States\n  id: States\n  parent: System.Windows.VisualStateGroup\n  langs:\n  - csharp\n  name: States\n  nameWithType: VisualStateGroup.States\n  fullName: System.Windows.VisualStateGroup.States\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the collection of mutually exclusive <xref href=\"System.Windows.VisualState\"></xref> objects.\n  remarks: ''\n  example:\n  - \"The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]\"\n  syntax:\n    content: public System.Collections.IList States { get; }\n    return:\n      type: System.Collections.IList\n      description: The collection of mutually exclusive <xref href=\"System.Windows.VisualState\"></xref> objects.\n  overload: System.Windows.VisualStateGroup.States*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.VisualStateGroup.Transitions\n  id: Transitions\n  parent: System.Windows.VisualStateGroup\n  langs:\n  - csharp\n  name: Transitions\n  nameWithType: VisualStateGroup.Transitions\n  fullName: System.Windows.VisualStateGroup.Transitions\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the collection of <xref href=\"System.Windows.VisualTransition\"></xref> objects.\n  remarks: The <xref:System.Windows.VisualTransition> objects in Transitions are applied when the control transition between states that are defined in the <xref:System.Windows.VisualStateGroup>.\n  example:\n  - \"The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]\"\n  syntax:\n    content: public System.Collections.IList Transitions { get; }\n    return:\n      type: System.Collections.IList\n      description: The collection of <xref href=\"System.Windows.VisualTransition\"></xref> objects.\n  overload: System.Windows.VisualStateGroup.Transitions*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.DependencyObject\n  isExternal: false\n  name: System.Windows.DependencyObject\n- uid: System.Windows.VisualStateGroup.#ctor\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: VisualStateGroup()\n  nameWithType: VisualStateGroup.VisualStateGroup()\n  fullName: System.Windows.VisualStateGroup.VisualStateGroup()\n- uid: System.Windows.VisualStateGroup.CurrentState\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: CurrentState\n  nameWithType: VisualStateGroup.CurrentState\n  fullName: System.Windows.VisualStateGroup.CurrentState\n- uid: System.Windows.VisualState\n  parent: System.Windows\n  isExternal: false\n  name: VisualState\n  nameWithType: VisualState\n  fullName: System.Windows.VisualState\n- uid: System.Windows.VisualStateGroup.CurrentStateChanged\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: CurrentStateChanged\n  nameWithType: VisualStateGroup.CurrentStateChanged\n  fullName: System.Windows.VisualStateGroup.CurrentStateChanged\n- uid: System.EventHandler{System.Windows.VisualStateChangedEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<VisualStateChangedEventArgs>\n  nameWithType: EventHandler<VisualStateChangedEventArgs>\n  fullName: System.EventHandler<System.Windows.VisualStateChangedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.Windows.VisualStateChangedEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.VisualStateChangedEventArgs\n    name: VisualStateChangedEventArgs\n    nameWithType: VisualStateChangedEventArgs\n    fullName: VisualStateChangedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.VisualStateGroup.CurrentStateChanging\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: CurrentStateChanging\n  nameWithType: VisualStateGroup.CurrentStateChanging\n  fullName: System.Windows.VisualStateGroup.CurrentStateChanging\n- uid: System.Windows.VisualStateGroup.Name\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: Name\n  nameWithType: VisualStateGroup.Name\n  fullName: System.Windows.VisualStateGroup.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.VisualStateGroup.States\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: States\n  nameWithType: VisualStateGroup.States\n  fullName: System.Windows.VisualStateGroup.States\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: true\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.Windows.VisualStateGroup.Transitions\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: Transitions\n  nameWithType: VisualStateGroup.Transitions\n  fullName: System.Windows.VisualStateGroup.Transitions\n- uid: System.Windows.VisualStateGroup.#ctor*\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: VisualStateGroup\n  nameWithType: VisualStateGroup.VisualStateGroup\n- uid: System.Windows.VisualStateGroup.CurrentState*\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: CurrentState\n  nameWithType: VisualStateGroup.CurrentState\n- uid: System.Windows.VisualStateGroup.Name*\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: Name\n  nameWithType: VisualStateGroup.Name\n- uid: System.Windows.VisualStateGroup.States*\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: States\n  nameWithType: VisualStateGroup.States\n- uid: System.Windows.VisualStateGroup.Transitions*\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: Transitions\n  nameWithType: VisualStateGroup.Transitions\n"}